digraph Mir_0_3641 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn order_params::OrderParams::derive_oracle_order_auction_params(_1: &amp;ReErased state::perp_market::PerpMarket, _2: controller::position::PositionDirection, _3: i64, _4: std::option::Option&lt;i32&gt;, _5: i64) -&gt; std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: (i64, i64);<br align="left"/>let mut _9: isize;<br align="left"/>let _10: i32;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _13: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _15: controller::position::PositionDirection;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: i64;<br align="left"/>let _21: i64;<br align="left"/>let mut _22: i32;<br align="left"/>let _23: ();<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _26: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _27: controller::position::PositionDirection;<br align="left"/>let mut _28: i64;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: i64;<br align="left"/>let _36: i64;<br align="left"/>let _37: i64;<br align="left"/>let mut _38: (i64, i64);<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64)&gt;;<br align="left"/>let mut _40: std::result::Result&lt;(i64, i64), error::ErrorCode&gt;;<br align="left"/>let mut _41: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _42: controller::position::PositionDirection;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: (i64, i64);<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let _50: ();<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: i64;<br align="left"/>let _53: i64;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _56: i64;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _58: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _59: i64;<br align="left"/>let mut _60: i64;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: i64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: i64;<br align="left"/>let _71: ();<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _74: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _75: controller::position::PositionDirection;<br align="left"/>let mut _76: i64;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _78: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _79: i64;<br align="left"/>let mut _80: i64;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: i64;<br align="left"/>let mut _86: i64;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _88: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _89: i64;<br align="left"/>let mut _90: i64;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _95: i64;<br align="left"/>let mut _96: bool;<br align="left"/>let mut _97: i64;<br align="left"/>let mut _98: bool;<br align="left"/>let mut _99: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _100: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _101: controller::position::PositionDirection;<br align="left"/>let mut _102: i64;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _104: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _105: i64;<br align="left"/>let mut _106: i64;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: i64;<br align="left"/>let mut _112: i64;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _114: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _115: i64;<br align="left"/>let mut _116: i64;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: i64;<br align="left"/>let _122: u8;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u8&gt;;<br align="left"/>let mut _124: std::result::Result&lt;u8, error::ErrorCode&gt;;<br align="left"/>let mut _125: u64;<br align="left"/>let mut _126: i64;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _128: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _129: i64;<br align="left"/>let mut _130: i64;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _135: i64;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: i64;<br align="left"/>let mut _138: state::perp_market::ContractTier;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: u8;<br align="left"/>let mut _144: (i64, i64, u8);<br align="left"/>let mut _145: i64;<br align="left"/>let mut _146: i64;<br align="left"/>let mut _147: u8;<br align="left"/>let mut _148: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _149: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _150: &amp;ReErased controller::position::PositionDirection;<br align="left"/>debug perp_market =&gt; _1;<br align="left"/>debug direction =&gt; _2;<br align="left"/>debug oracle_price =&gt; _3;<br align="left"/>debug oracle_price_offset =&gt; _4;<br align="left"/>debug start_buffer =&gt; _5;<br align="left"/>debug auction_start_price =&gt; _6;<br align="left"/>debug auction_end_price =&gt; _7;<br align="left"/>debug oracle_price_offset =&gt; _10;<br align="left"/>debug auction_start_price_offset =&gt; _11;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug oracle_price_offset =&gt; _21;<br align="left"/>debug auction_start_price_offset =&gt; _36;<br align="left"/>debug auction_end_price_offset =&gt; _37;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug start_buffer_price =&gt; _53;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug auction_duration =&gt; _122;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>>;
    bb0__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_4 as Some).0: i32)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/>StorageLive(_15)<br/>_15 = _2<br/></td></tr><tr><td align="left">_13 = order_params::OrderParams::get_perp_baseline_start_price_offset(move _14, move _15)</td></tr></table>>];
    bb2__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb3__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_16 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_12 as Continue).0: i64)<br/>_11 = _20<br/>StorageDead(_20)<br/>StorageDead(_12)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _10<br/>_21 = move _22 as i64 (IntToInt)<br/>StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;_2<br/>StorageLive(_26)<br/>_150 = const _<br/>_26 = &amp;(*_150)<br/></td></tr><tr><td align="left">_24 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _25, move _26)</td></tr></table>>];
    bb5__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb9__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _11<br/>StorageLive(_30)<br/>_30 = _21<br/></td></tr><tr><td align="left">_28 = &lt;i64 as Ord&gt;::min(move _29, move _30)</td></tr></table>>];
    bb10__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>_11 = move _28<br/>_23 = const ()<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _11<br/>StorageLive(_33)<br/>_33 = _21<br/></td></tr><tr><td align="left">_31 = &lt;i64 as Ord&gt;::max(move _32, move _33)</td></tr></table>>];
    bb12__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>_11 = move _31<br/>_23 = const ()<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_34)<br/>_34 = _11<br/>StorageLive(_35)<br/>_35 = _21<br/>_8 = (move _34, move _35)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_21)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;(*_1)<br/>StorageLive(_42)<br/>_42 = _2<br/></td></tr><tr><td align="left">_40 = order_params::OrderParams::get_perp_baseline_start_end_price_offset(move _41, move _42, const 1_u64)</td></tr></table>>];
    bb15__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;(i64, i64), error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb16__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_43 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb17__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_39 as Continue).0: (i64, i64))<br/>_38 = _47<br/>StorageDead(_47)<br/>StorageLive(_36)<br/>_36 = (_38.0: i64)<br/>StorageLive(_37)<br/>_37 = (_38.1: i64)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_48)<br/>_48 = _36<br/>StorageLive(_49)<br/>_49 = _37<br/>_8 = (move _48, move _49)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb19__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = (_8.0: i64)<br/>StorageLive(_7)<br/>_7 = (_8.1: i64)<br/>StorageDead(_8)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _5<br/>_51 = Ne(move _52, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb21__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = _3<br/>StorageLive(_60)<br/>_60 = _5<br/></td></tr><tr><td align="left">_58 = &lt;i64 as SafeMath&gt;::safe_mul(move _59, move _60)</td></tr></table>>];
    bb22__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb23__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_61 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb24__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_57 as Continue).0: i64)<br/>_56 = _65<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_55 = &lt;i64 as SafeMath&gt;::safe_div(move _56, const _)</td></tr></table>>];
    bb25__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb26__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb28__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_66 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb29__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_54 as Continue).0: i64)<br/>_53 = _70<br/>StorageDead(_70)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_2<br/>StorageLive(_74)<br/>_149 = const _<br/>_74 = &amp;(*_149)<br/></td></tr><tr><td align="left">_72 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _73, move _74)</td></tr></table>>];
    bb30__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb31__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb33__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _6<br/>StorageLive(_80)<br/>_80 = _53<br/></td></tr><tr><td align="left">_78 = &lt;i64 as SafeMath&gt;::safe_sub(move _79, move _80)</td></tr></table>>];
    bb34__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb35__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_81 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb36__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_77 as Continue).0: i64)<br/>_76 = _85<br/>StorageDead(_85)<br/>_6 = move _76<br/>StorageDead(_76)<br/>StorageDead(_77)<br/>_71 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb38__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_76)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _6<br/>StorageLive(_90)<br/>_90 = _53<br/></td></tr><tr><td align="left">_88 = &lt;i64 as SafeMath&gt;::safe_add(move _89, move _90)</td></tr></table>>];
    bb40__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb41__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_91 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb42__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_87 as Continue).0: i64)<br/>_86 = _95<br/>StorageDead(_95)<br/>_6 = move _86<br/>StorageDead(_86)<br/>StorageDead(_87)<br/>_71 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb44__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_86)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _5<br/>_96 = Lt(move _97, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb46__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_2<br/>StorageLive(_100)<br/>_148 = const _<br/>_100 = &amp;(*_148)<br/></td></tr><tr><td align="left">_98 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _99, move _100)</td></tr></table>>];
    bb47__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb48__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = _7<br/>StorageLive(_106)<br/>_106 = _53<br/></td></tr><tr><td align="left">_104 = &lt;i64 as SafeMath&gt;::safe_sub(move _105, move _106)</td></tr></table>>];
    bb49__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb50__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_107 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb51__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_103 as Continue).0: i64)<br/>_102 = _111<br/>StorageDead(_111)<br/>_7 = move _102<br/>StorageDead(_102)<br/>StorageDead(_103)<br/>_50 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb53__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_102)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = _7<br/>StorageLive(_116)<br/>_116 = _53<br/></td></tr><tr><td align="left">_114 = &lt;i64 as SafeMath&gt;::safe_add(move _115, move _116)</td></tr></table>>];
    bb55__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb56__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_117 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb57__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_113 as Continue).0: i64)<br/>_112 = _121<br/>StorageDead(_121)<br/>_7 = move _112<br/>StorageDead(_112)<br/>StorageDead(_113)<br/>_50 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb59__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_112)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_50 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = _7<br/>StorageLive(_130)<br/>_130 = _6<br/></td></tr><tr><td align="left">_128 = &lt;i64 as SafeMath&gt;::safe_sub(move _129, move _130)</td></tr></table>>];
    bb65__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb66__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_131 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb67__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_127 as Continue).0: i64)<br/>_126 = _135<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_125 = core::num::&lt;impl i64&gt;::unsigned_abs(move _126)</td></tr></table>>];
    bb68__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_134)<br/>_134 = _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb69__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = _3<br/></td></tr><tr><td align="left">_136 = core::num::&lt;impl i64&gt;::unsigned_abs(move _137)</td></tr></table>>];
    bb71__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageLive(_138)<br/>_138 = ((*_1).24: state::perp_market::ContractTier)<br/></td></tr><tr><td align="left">_124 = get_auction_duration(move _125, move _136, move _138)</td></tr></table>>];
    bb72__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;u8, error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb73__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_139 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb74__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_123 as Continue).0: u8)<br/>_122 = _143<br/>StorageDead(_143)<br/>StorageDead(_127)<br/>StorageDead(_123)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = _6<br/>StorageLive(_146)<br/>_146 = _7<br/>StorageLive(_147)<br/>_147 = _122<br/>_144 = (move _145, move _146, move _147)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Ok(move _144)<br/>StorageDead(_144)<br/>StorageDead(_122)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb76__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_3641 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3641 -> bb1__0_3641 [label="1"];
    bb0__0_3641 -> bb14__0_3641 [label="otherwise"];
    bb1__0_3641 -> bb2__0_3641 [label="return"];
    bb2__0_3641 -> bb3__0_3641 [label="return"];
    bb3__0_3641 -> bb4__0_3641 [label="0"];
    bb3__0_3641 -> bb6__0_3641 [label="1"];
    bb3__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb4__0_3641 -> bb8__0_3641 [label="return"];
    bb6__0_3641 -> bb7__0_3641 [label="return"];
    bb7__0_3641 -> bb83__0_3641 [label=""];
    bb8__0_3641 -> bb11__0_3641 [label="0"];
    bb8__0_3641 -> bb9__0_3641 [label="otherwise"];
    bb9__0_3641 -> bb10__0_3641 [label="return"];
    bb10__0_3641 -> bb13__0_3641 [label=""];
    bb11__0_3641 -> bb12__0_3641 [label="return"];
    bb12__0_3641 -> bb13__0_3641 [label=""];
    bb13__0_3641 -> bb20__0_3641 [label=""];
    bb14__0_3641 -> bb15__0_3641 [label="return"];
    bb15__0_3641 -> bb16__0_3641 [label="return"];
    bb16__0_3641 -> bb17__0_3641 [label="0"];
    bb16__0_3641 -> bb18__0_3641 [label="1"];
    bb16__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb17__0_3641 -> bb20__0_3641 [label=""];
    bb18__0_3641 -> bb19__0_3641 [label="return"];
    bb19__0_3641 -> bb83__0_3641 [label=""];
    bb20__0_3641 -> bb63__0_3641 [label="0"];
    bb20__0_3641 -> bb21__0_3641 [label="otherwise"];
    bb21__0_3641 -> bb22__0_3641 [label="return"];
    bb22__0_3641 -> bb23__0_3641 [label="return"];
    bb23__0_3641 -> bb24__0_3641 [label="0"];
    bb23__0_3641 -> bb25__0_3641 [label="1"];
    bb23__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb24__0_3641 -> bb27__0_3641 [label="return"];
    bb25__0_3641 -> bb26__0_3641 [label="return"];
    bb26__0_3641 -> bb80__0_3641 [label=""];
    bb27__0_3641 -> bb28__0_3641 [label="return"];
    bb28__0_3641 -> bb29__0_3641 [label="0"];
    bb28__0_3641 -> bb30__0_3641 [label="1"];
    bb28__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb29__0_3641 -> bb32__0_3641 [label="return"];
    bb30__0_3641 -> bb31__0_3641 [label="return"];
    bb31__0_3641 -> bb80__0_3641 [label=""];
    bb32__0_3641 -> bb39__0_3641 [label="0"];
    bb32__0_3641 -> bb33__0_3641 [label="otherwise"];
    bb33__0_3641 -> bb34__0_3641 [label="return"];
    bb34__0_3641 -> bb35__0_3641 [label="return"];
    bb35__0_3641 -> bb36__0_3641 [label="0"];
    bb35__0_3641 -> bb37__0_3641 [label="1"];
    bb35__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb36__0_3641 -> bb45__0_3641 [label=""];
    bb37__0_3641 -> bb38__0_3641 [label="return"];
    bb38__0_3641 -> bb79__0_3641 [label=""];
    bb39__0_3641 -> bb40__0_3641 [label="return"];
    bb40__0_3641 -> bb41__0_3641 [label="return"];
    bb41__0_3641 -> bb42__0_3641 [label="0"];
    bb41__0_3641 -> bb43__0_3641 [label="1"];
    bb41__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb42__0_3641 -> bb45__0_3641 [label=""];
    bb43__0_3641 -> bb44__0_3641 [label="return"];
    bb44__0_3641 -> bb79__0_3641 [label=""];
    bb45__0_3641 -> bb61__0_3641 [label="0"];
    bb45__0_3641 -> bb46__0_3641 [label="otherwise"];
    bb46__0_3641 -> bb47__0_3641 [label="return"];
    bb47__0_3641 -> bb54__0_3641 [label="0"];
    bb47__0_3641 -> bb48__0_3641 [label="otherwise"];
    bb48__0_3641 -> bb49__0_3641 [label="return"];
    bb49__0_3641 -> bb50__0_3641 [label="return"];
    bb50__0_3641 -> bb51__0_3641 [label="0"];
    bb50__0_3641 -> bb52__0_3641 [label="1"];
    bb50__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb51__0_3641 -> bb60__0_3641 [label=""];
    bb52__0_3641 -> bb53__0_3641 [label="return"];
    bb53__0_3641 -> bb78__0_3641 [label=""];
    bb54__0_3641 -> bb55__0_3641 [label="return"];
    bb55__0_3641 -> bb56__0_3641 [label="return"];
    bb56__0_3641 -> bb57__0_3641 [label="0"];
    bb56__0_3641 -> bb58__0_3641 [label="1"];
    bb56__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb57__0_3641 -> bb60__0_3641 [label=""];
    bb58__0_3641 -> bb59__0_3641 [label="return"];
    bb59__0_3641 -> bb78__0_3641 [label=""];
    bb60__0_3641 -> bb62__0_3641 [label=""];
    bb61__0_3641 -> bb62__0_3641 [label=""];
    bb62__0_3641 -> bb64__0_3641 [label=""];
    bb63__0_3641 -> bb64__0_3641 [label=""];
    bb64__0_3641 -> bb65__0_3641 [label="return"];
    bb65__0_3641 -> bb66__0_3641 [label="return"];
    bb66__0_3641 -> bb67__0_3641 [label="0"];
    bb66__0_3641 -> bb68__0_3641 [label="1"];
    bb66__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb67__0_3641 -> bb70__0_3641 [label="return"];
    bb68__0_3641 -> bb69__0_3641 [label="return"];
    bb69__0_3641 -> bb77__0_3641 [label=""];
    bb70__0_3641 -> bb71__0_3641 [label="return"];
    bb71__0_3641 -> bb72__0_3641 [label="return"];
    bb72__0_3641 -> bb73__0_3641 [label="return"];
    bb73__0_3641 -> bb74__0_3641 [label="0"];
    bb73__0_3641 -> bb75__0_3641 [label="1"];
    bb73__0_3641 -> bb5__0_3641 [label="otherwise"];
    bb74__0_3641 -> bb84__0_3641 [label=""];
    bb75__0_3641 -> bb76__0_3641 [label="return"];
    bb76__0_3641 -> bb77__0_3641 [label=""];
    bb77__0_3641 -> bb82__0_3641 [label=""];
    bb78__0_3641 -> bb81__0_3641 [label=""];
    bb79__0_3641 -> bb81__0_3641 [label=""];
    bb80__0_3641 -> bb81__0_3641 [label=""];
    bb81__0_3641 -> bb82__0_3641 [label=""];
    bb82__0_3641 -> bb84__0_3641 [label=""];
    bb83__0_3641 -> bb84__0_3641 [label=""];
}
