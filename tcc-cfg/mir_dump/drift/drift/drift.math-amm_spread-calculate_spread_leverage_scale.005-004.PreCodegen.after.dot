digraph Mir_0_1870 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_spread_leverage_scale(_1: u128, _2: u128, _3: u128, _4: i128, _5: u64, _6: i128) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _7: i128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _10: i128;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _13: i128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _16: i128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: i128;<br align="left"/>let mut _25: i128;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _27: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _28: u128;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: i128;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: i128;<br align="left"/>let mut _39: i128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: i128;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i128;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let _58: i128;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _60: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _61: i128;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _63: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _64: i128;<br align="left"/>let mut _65: i128;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _67: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: i128;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: i128;<br align="left"/>let mut _79: i128;<br align="left"/>let mut _80: (i128, bool);<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: i128;<br align="left"/>let _86: i128;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _88: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _89: i128;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _91: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _92: i128;<br align="left"/>let mut _93: i128;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _95: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _96: i128;<br align="left"/>let mut _97: i128;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: i128;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _107: i128;<br align="left"/>let mut _108: i128;<br align="left"/>let mut _109: i128;<br align="left"/>let mut _110: i128;<br align="left"/>let mut _111: (i128, bool);<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: i128;<br align="left"/>let _117: u64;<br align="left"/>let mut _118: u64;<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _120: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _121: u64;<br align="left"/>let mut _122: u64;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _124: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _125: i128;<br align="left"/>let mut _126: i128;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _131: u64;<br align="left"/>let mut _132: (u64, bool);<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _137: u64;<br align="left"/>let mut _138: u64;<br align="left"/>debug quote_asset_reserve =&gt; _1;<br align="left"/>debug terminal_quote_asset_reserve =&gt; _2;<br align="left"/>debug peg_multiplier =&gt; _3;<br align="left"/>debug base_asset_amount_with_amm =&gt; _4;<br align="left"/>debug reserve_price =&gt; _5;<br align="left"/>debug total_fee_minus_distributions =&gt; _6;<br align="left"/>debug net_base_asset_value =&gt; _7;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug local_base_asset_value =&gt; _58;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug effective_leverage =&gt; _86;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug effective_leverage_capped =&gt; _117;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>>;
    bb0__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _1<br/></td></tr><tr><td align="left">_18 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _19)</td></tr></table>>];
    bb1__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb2__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_20 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb3__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Continue).0: i128)<br/>_16 = _24<br/>StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _2<br/></td></tr><tr><td align="left">_27 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _28)</td></tr></table>>];
    bb4__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb6__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb8__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_29 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_26 as Continue).0: i128)<br/>_25 = _33<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_15 = &lt;i128 as SafeMath&gt;::safe_sub(move _16, move _25)</td></tr></table>>];
    bb10__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb11__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_25)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb13__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_34 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb14__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_14 as Continue).0: i128)<br/>_13 = _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _3<br/></td></tr><tr><td align="left">_41 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _42)</td></tr></table>>];
    bb15__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb16__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb18__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb19__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Continue).0: i128)<br/>_39 = _47<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_12 = &lt;i128 as SafeMath&gt;::safe_mul(move _13, move _39)</td></tr></table>>];
    bb20__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb21__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb23__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_48 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb24__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_11 as Continue).0: i128)<br/>_10 = _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_9 = &lt;i128 as SafeMath&gt;::safe_div(move _10, const _)</td></tr></table>>];
    bb25__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb26__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb28__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_53 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb29__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_8 as Continue).0: i128)<br/>_7 = _57<br/>StorageDead(_57)<br/>StorageDead(_40)<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _4<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _5<br/></td></tr><tr><td align="left">_67 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _68)</td></tr></table>>];
    bb30__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb31__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb33__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_69 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb34__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_66 as Continue).0: i128)<br/>_65 = _73<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_63 = &lt;i128 as SafeMath&gt;::safe_mul(move _64, move _65)</td></tr></table>>];
    bb35__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb36__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb38__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_74 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb39__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_62 as Continue).0: i128)<br/>_61 = _78<br/>StorageDead(_78)<br/>StorageLive(_79)<br/>_80 = CheckedMul(const _, const _)<br/></td></tr><tr><td align="left">assert(!move (_80.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const _)</td></tr></table>>];
    bb40__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb41__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_79 = move (_80.0: i128)<br/></td></tr><tr><td align="left">_60 = &lt;i128 as SafeMath&gt;::safe_div(move _61, move _79)</td></tr></table>>];
    bb43__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb44__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_81 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb45__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_59 as Continue).0: i128)<br/>_58 = _85<br/>StorageDead(_85)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _58<br/>StorageLive(_97)<br/>_97 = _7<br/></td></tr><tr><td align="left">_95 = &lt;i128 as SafeMath&gt;::safe_sub(move _96, move _97)</td></tr></table>>];
    bb46__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb47__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb49__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_98 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb50__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_94 as Continue).0: i128)<br/>_93 = _102<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_92 = std::cmp::max::&lt;i128&gt;(const 0_i128, move _93)</td></tr></table>>];
    bb51__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb52__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;i128 as SafeMath&gt;::safe_mul(move _92, const _)</td></tr></table>>];
    bb54__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb55__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_103 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb56__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_90 as Continue).0: i128)<br/>_89 = _107<br/>StorageDead(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _6<br/></td></tr><tr><td align="left">_109 = std::cmp::max::&lt;i128&gt;(const 0_i128, move _110)</td></tr></table>>];
    bb57__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_106)<br/>_106 = _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb58__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_111 = CheckedAdd(_109, const 1_i128)<br/></td></tr><tr><td align="left">assert(!move (_111.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _109, const 1_i128)</td></tr></table>>];
    bb60__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_108 = move (_111.0: i128)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_88 = &lt;i128 as SafeMath&gt;::safe_div(move _89, move _108)</td></tr></table>>];
    bb61__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb62__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_112 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb63__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_87 as Continue).0: i128)<br/>_86 = _116<br/>StorageDead(_116)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = _86<br/></td></tr><tr><td align="left">_125 = std::cmp::max::&lt;i128&gt;(const 0_i128, move _126)</td></tr></table>>];
    bb64__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb65__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(move _125)</td></tr></table>>];
    bb67__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb68__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_127 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb69__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_123 as Continue).0: u64)<br/>_122 = _131<br/>StorageDead(_131)<br/>_132 = CheckedAdd(_122, const 1_u64)<br/></td></tr><tr><td align="left">assert(!move (_132.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _122, const 1_u64)</td></tr></table>>];
    bb70__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_130)<br/>_130 = _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb71__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_121 = move (_132.0: u64)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;u64 as SafeMath&gt;::safe_add(const _, move _121)</td></tr></table>>];
    bb73__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb74__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_133 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb75__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_119 as Continue).0: u64)<br/>_118 = _137<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">_117 = std::cmp::min::&lt;u64&gt;(const _, move _118)</td></tr></table>>];
    bb76__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_136)<br/>_136 = _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb77__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageLive(_138)<br/>_138 = _117<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _138)<br/>StorageDead(_138)<br/>StorageDead(_117)<br/>StorageDead(_86)<br/>StorageDead(_58)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_1870 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1870 -> bb1__0_1870 [label="return"];
    bb1__0_1870 -> bb2__0_1870 [label="return"];
    bb2__0_1870 -> bb3__0_1870 [label="0"];
    bb2__0_1870 -> bb5__0_1870 [label="1"];
    bb2__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb3__0_1870 -> bb7__0_1870 [label="return"];
    bb5__0_1870 -> bb6__0_1870 [label="return"];
    bb6__0_1870 -> bb90__0_1870 [label=""];
    bb7__0_1870 -> bb8__0_1870 [label="return"];
    bb8__0_1870 -> bb9__0_1870 [label="0"];
    bb8__0_1870 -> bb10__0_1870 [label="1"];
    bb8__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb9__0_1870 -> bb12__0_1870 [label="return"];
    bb10__0_1870 -> bb11__0_1870 [label="return"];
    bb11__0_1870 -> bb88__0_1870 [label=""];
    bb12__0_1870 -> bb13__0_1870 [label="return"];
    bb13__0_1870 -> bb14__0_1870 [label="0"];
    bb13__0_1870 -> bb15__0_1870 [label="1"];
    bb13__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb14__0_1870 -> bb17__0_1870 [label="return"];
    bb15__0_1870 -> bb16__0_1870 [label="return"];
    bb16__0_1870 -> bb88__0_1870 [label=""];
    bb17__0_1870 -> bb18__0_1870 [label="return"];
    bb18__0_1870 -> bb19__0_1870 [label="0"];
    bb18__0_1870 -> bb20__0_1870 [label="1"];
    bb18__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb19__0_1870 -> bb22__0_1870 [label="return"];
    bb20__0_1870 -> bb21__0_1870 [label="return"];
    bb21__0_1870 -> bb86__0_1870 [label=""];
    bb22__0_1870 -> bb23__0_1870 [label="return"];
    bb23__0_1870 -> bb24__0_1870 [label="0"];
    bb23__0_1870 -> bb25__0_1870 [label="1"];
    bb23__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb24__0_1870 -> bb27__0_1870 [label="return"];
    bb25__0_1870 -> bb26__0_1870 [label="return"];
    bb26__0_1870 -> bb86__0_1870 [label=""];
    bb27__0_1870 -> bb28__0_1870 [label="return"];
    bb28__0_1870 -> bb29__0_1870 [label="0"];
    bb28__0_1870 -> bb30__0_1870 [label="1"];
    bb28__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb29__0_1870 -> bb32__0_1870 [label="return"];
    bb30__0_1870 -> bb31__0_1870 [label="return"];
    bb31__0_1870 -> bb87__0_1870 [label=""];
    bb32__0_1870 -> bb33__0_1870 [label="return"];
    bb33__0_1870 -> bb34__0_1870 [label="0"];
    bb33__0_1870 -> bb35__0_1870 [label="1"];
    bb33__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb34__0_1870 -> bb37__0_1870 [label="return"];
    bb35__0_1870 -> bb36__0_1870 [label="return"];
    bb36__0_1870 -> bb83__0_1870 [label=""];
    bb37__0_1870 -> bb38__0_1870 [label="return"];
    bb38__0_1870 -> bb39__0_1870 [label="0"];
    bb38__0_1870 -> bb40__0_1870 [label="1"];
    bb38__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb39__0_1870 -> bb42__0_1870 [label="success"];
    bb40__0_1870 -> bb41__0_1870 [label="return"];
    bb41__0_1870 -> bb83__0_1870 [label=""];
    bb42__0_1870 -> bb43__0_1870 [label="return"];
    bb43__0_1870 -> bb44__0_1870 [label="return"];
    bb44__0_1870 -> bb45__0_1870 [label="0"];
    bb44__0_1870 -> bb46__0_1870 [label="1"];
    bb44__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb45__0_1870 -> bb48__0_1870 [label="return"];
    bb46__0_1870 -> bb47__0_1870 [label="return"];
    bb47__0_1870 -> bb84__0_1870 [label=""];
    bb48__0_1870 -> bb49__0_1870 [label="return"];
    bb49__0_1870 -> bb50__0_1870 [label="0"];
    bb49__0_1870 -> bb51__0_1870 [label="1"];
    bb49__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb50__0_1870 -> bb53__0_1870 [label="return"];
    bb51__0_1870 -> bb52__0_1870 [label="return"];
    bb52__0_1870 -> bb80__0_1870 [label=""];
    bb53__0_1870 -> bb54__0_1870 [label="return"];
    bb54__0_1870 -> bb55__0_1870 [label="return"];
    bb55__0_1870 -> bb56__0_1870 [label="0"];
    bb55__0_1870 -> bb57__0_1870 [label="1"];
    bb55__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb56__0_1870 -> bb59__0_1870 [label="return"];
    bb57__0_1870 -> bb58__0_1870 [label="return"];
    bb58__0_1870 -> bb80__0_1870 [label=""];
    bb59__0_1870 -> bb60__0_1870 [label="success"];
    bb60__0_1870 -> bb61__0_1870 [label="return"];
    bb61__0_1870 -> bb62__0_1870 [label="return"];
    bb62__0_1870 -> bb63__0_1870 [label="0"];
    bb62__0_1870 -> bb64__0_1870 [label="1"];
    bb62__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb63__0_1870 -> bb66__0_1870 [label="return"];
    bb64__0_1870 -> bb65__0_1870 [label="return"];
    bb65__0_1870 -> bb81__0_1870 [label=""];
    bb66__0_1870 -> bb67__0_1870 [label="return"];
    bb67__0_1870 -> bb68__0_1870 [label="return"];
    bb68__0_1870 -> bb69__0_1870 [label="0"];
    bb68__0_1870 -> bb70__0_1870 [label="1"];
    bb68__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb69__0_1870 -> bb72__0_1870 [label="success"];
    bb70__0_1870 -> bb71__0_1870 [label="return"];
    bb71__0_1870 -> bb79__0_1870 [label=""];
    bb72__0_1870 -> bb73__0_1870 [label="return"];
    bb73__0_1870 -> bb74__0_1870 [label="return"];
    bb74__0_1870 -> bb75__0_1870 [label="0"];
    bb74__0_1870 -> bb76__0_1870 [label="1"];
    bb74__0_1870 -> bb4__0_1870 [label="otherwise"];
    bb75__0_1870 -> bb78__0_1870 [label="return"];
    bb76__0_1870 -> bb77__0_1870 [label="return"];
    bb77__0_1870 -> bb79__0_1870 [label=""];
    bb78__0_1870 -> bb92__0_1870 [label=""];
    bb79__0_1870 -> bb82__0_1870 [label=""];
    bb80__0_1870 -> bb81__0_1870 [label=""];
    bb81__0_1870 -> bb82__0_1870 [label=""];
    bb82__0_1870 -> bb85__0_1870 [label=""];
    bb83__0_1870 -> bb84__0_1870 [label=""];
    bb84__0_1870 -> bb85__0_1870 [label=""];
    bb85__0_1870 -> bb91__0_1870 [label=""];
    bb86__0_1870 -> bb87__0_1870 [label=""];
    bb87__0_1870 -> bb89__0_1870 [label=""];
    bb88__0_1870 -> bb89__0_1870 [label=""];
    bb89__0_1870 -> bb90__0_1870 [label=""];
    bb90__0_1870 -> bb91__0_1870 [label=""];
    bb91__0_1870 -> bb92__0_1870 [label=""];
}
