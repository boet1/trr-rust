digraph Mir_0_2218 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_fee_for_fulfillment_with_amm(_1: &amp;ReErased state::user::UserStats, _2: u64, _3: &amp;ReErased state::state::FeeStructure, _4: u64, _5: u64, _6: bool, _7: bool, _8: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;, _9: i64, _10: bool, _11: i16, _12: bool) -&gt; std::result::Result&lt;math::fees::FillFees, error::ErrorCode&gt;<br align="left"/>let _13: state::state::FeeTier;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::state::FeeTier&gt;;<br align="left"/>let mut _15: std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt;;<br align="left"/>let mut _16: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _17: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _18: &amp;ReErased state::user::MarketType;<br align="left"/>let _19: &amp;ReErased state::user::MarketType;<br align="left"/>let _20: state::user::MarketType;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: state::state::FeeTier;<br align="left"/>let mut _27: bool;<br align="left"/>let _28: u64;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: &amp;ReErased state::state::FeeTier;<br align="left"/>let _33: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _34: i16;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: u64;<br align="left"/>let _40: u64;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: Closure(DefId(0:2219 ~ drift[d311]::math::fees::calculate_fee_for_fulfillment_with_amm::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased i64, &amp;ReErased u64, &amp;ReErased u64)]);<br align="left"/>let mut _55: &amp;ReErased i64;<br align="left"/>let mut _56: &amp;ReErased u64;<br align="left"/>let mut _57: &amp;ReErased u64;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: u64;<br align="left"/>let _63: u64;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _66: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let _71: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let _77: i64;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _79: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _82: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: u64;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: i64;<br align="left"/>let _95: u64;<br align="left"/>let mut _96: math::fees::FillFees;<br align="left"/>let mut _97: u64;<br align="left"/>let mut _98: u64;<br align="left"/>let mut _99: i64;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: u64;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _103: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _104: u64;<br align="left"/>let mut _105: &amp;ReErased state::state::FeeTier;<br align="left"/>let _106: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _107: i16;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: u64;<br align="left"/>let _113: ();<br align="left"/>let mut _114: bool;<br align="left"/>let mut _115: u64;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _117: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _118: u64;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _123: u64;<br align="left"/>let _124: u64;<br align="left"/>let _125: u64;<br align="left"/>let _126: u64;<br align="left"/>let mut _127: (u64, u64, u64);<br align="left"/>let mut _128: bool;<br align="left"/>let mut _129: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64, u64)&gt;;<br align="left"/>let mut _130: std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _131: u64;<br align="left"/>let mut _132: &amp;ReErased state::state::FeeTier;<br align="left"/>let _133: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _134: u64;<br align="left"/>let mut _135: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: (u64, u64, u64);<br align="left"/>let mut _141: u64;<br align="left"/>let _142: u64;<br align="left"/>let mut _143: bool;<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _145: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _146: u64;<br align="left"/>let mut _147: u64;<br align="left"/>let mut _148: u64;<br align="left"/>let mut _149: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let _150: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: u64;<br align="left"/>let _156: i64;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _158: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _159: i64;<br align="left"/>let mut _160: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _161: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _162: u64;<br align="left"/>let mut _163: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _164: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _165: u64;<br align="left"/>let mut _166: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _167: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _168: u64;<br align="left"/>let mut _169: u64;<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: u64;<br align="left"/>let mut _175: u64;<br align="left"/>let mut _176: isize;<br align="left"/>let _177: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _178: !;<br align="left"/>let mut _179: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _180: u64;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: i64;<br align="left"/>let mut _186: i64;<br align="left"/>let mut _187: isize;<br align="left"/>let _188: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _189: !;<br align="left"/>let mut _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _191: i64;<br align="left"/>let _192: i64;<br align="left"/>let mut _193: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _194: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _195: i64;<br align="left"/>let mut _196: i64;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _201: i64;<br align="left"/>let mut _202: math::fees::FillFees;<br align="left"/>let mut _203: u64;<br align="left"/>let mut _204: i64;<br align="left"/>let mut _205: i64;<br align="left"/>let mut _206: u64;<br align="left"/>let mut _207: u64;<br align="left"/>let mut _208: u64;<br align="left"/>let mut _209: &amp;ReErased state::user::MarketType;<br align="left"/>debug user_stats =&gt; _1;<br align="left"/>debug quote_asset_amount =&gt; _2;<br align="left"/>debug fee_structure =&gt; _3;<br align="left"/>debug order_slot =&gt; _4;<br align="left"/>debug clock_slot =&gt; _5;<br align="left"/>debug reward_filler =&gt; _6;<br align="left"/>debug reward_referrer =&gt; _7;<br align="left"/>debug referrer_stats =&gt; _8;<br align="left"/>debug quote_asset_amount_surplus =&gt; _9;<br align="left"/>debug is_post_only =&gt; _10;<br align="left"/>debug fee_adjustment =&gt; _11;<br align="left"/>debug user_high_leverage_mode =&gt; _12;<br align="left"/>debug fee_tier =&gt; _13;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug maker_rebate =&gt; _28;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug fee =&gt; _40;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug filler_reward =&gt; _63;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug fee_to_market =&gt; _77;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug user_fee =&gt; _95;<br align="left"/>debug fee =&gt; _101;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug fee =&gt; _124;<br align="left"/>debug referee_discount =&gt; _125;<br align="left"/>debug referrer_reward =&gt; _126;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug filler_reward =&gt; _142;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug fee_to_market =&gt; _156;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug residual =&gt; _177;<br align="left"/>debug val =&gt; _180;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _188;<br align="left"/>debug val =&gt; _191;<br align="left"/>debug fee_to_market_for_lp =&gt; _192;<br align="left"/>debug residual =&gt; _198;<br align="left"/>debug val =&gt; _201;<br align="left"/>>;
    bb0__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/>StorageLive(_17)<br/>_17 = &amp;(*_3)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_209 = const _<br/>_19 = &amp;(*_209)<br/>_18 = &amp;(*_19)<br/>StorageLive(_21)<br/>_21 = _12<br/></td></tr><tr><td align="left">_15 = determine_user_fee_tier(move _16, move _17, move _18, move _21)</td></tr></table>>];
    bb1__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb2__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_22 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb3__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_14 as Continue).0: state::state::FeeTier)<br/>_13 = _26<br/>StorageDead(_26)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageLive(_27)<br/>_27 = _10<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb4__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb6__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _2<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_13<br/>_32 = &amp;(*_33)<br/>StorageLive(_34)<br/>_34 = _11<br/></td></tr><tr><td align="left">_30 = calculate_maker_rebate(move _31, move _32, move _34)</td></tr></table>>];
    bb8__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = _2<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_13<br/>_105 = &amp;(*_106)<br/>StorageLive(_107)<br/>_107 = _11<br/></td></tr><tr><td align="left">_103 = calculate_taker_fee(move _104, move _105, move _107)</td></tr></table>>];
    bb9__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb10__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_35 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb11__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_29 as Continue).0: u64)<br/>_28 = _39<br/>StorageDead(_39)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _9<br/></td></tr><tr><td align="left">_46 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _47)</td></tr></table>>];
    bb12__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb13__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb15__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb16__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: u64)<br/>_44 = _52<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>_53 = _28<br/></td></tr><tr><td align="left">_43 = &lt;u64 as SafeMath&gt;::safe_sub(move _44, move _53)</td></tr></table>>];
    bb17__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb18__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_9<br/>StorageLive(_56)<br/>_56 = &amp;_2<br/>StorageLive(_57)<br/>_57 = &amp;_28<br/>_54 = {closure@programs/drift/src/math/fees.rs:63:22: 63:25} { quote_asset_amount_surplus: move _55, quote_asset_amount: move _56, maker_rebate: move _57 }<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_42 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/math/fees.rs:63:22: 63:25}&gt;(move _43, move _54)</td></tr></table>>];
    bb20__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb21__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_58 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb22__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_41 as Continue).0: u64)<br/>_40 = _62<br/>StorageDead(_62)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _6<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb23__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb24__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _40<br/>StorageLive(_68)<br/>_68 = _4<br/>StorageLive(_69)<br/>_69 = _5<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;((*_3).1: state::state::OrderFillerRewardStructure)<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_66 = calculate_filler_reward(move _67, move _68, move _69, const 0_u64, move _70)</td></tr></table>>];
    bb26__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_63 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb28__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_72 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb29__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_65 as Continue).0: u64)<br/>_63 = _76<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb31__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = _40<br/>StorageLive(_84)<br/>_84 = _63<br/></td></tr><tr><td align="left">_82 = &lt;u64 as SafeMath&gt;::safe_sub(move _83, move _84)</td></tr></table>>];
    bb33__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb34__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_85 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb35__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_81 as Continue).0: u64)<br/>_80 = _89<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_79 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _80)</td></tr></table>>];
    bb36__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb37__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb39__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_90 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb40__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_78 as Continue).0: i64)<br/>_77 = _94<br/>StorageDead(_94)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageLive(_95)<br/>_95 = const 0_u64<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _95<br/>StorageLive(_98)<br/>_98 = _28<br/>StorageLive(_99)<br/>_99 = _77<br/>StorageLive(_100)<br/>_100 = _63<br/>_96 = FillFees { user_fee: move _97, maker_rebate: move _98, fee_to_market: move _99, fee_to_market_for_lp: const 0_i64, filler_reward: move _100, referrer_reward: const 0_u64, referee_discount: const 0_u64 }<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>_0 = std::result::Result::&lt;FillFees, error::ErrorCode&gt;::Ok(move _96)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_77)<br/>StorageDead(_63)<br/>StorageDead(_40)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb42__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb44__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_108 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb45__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_102 as Continue).0: u64)<br/>_101 = _112<br/>StorageDead(_112)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = _12<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb46__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb47__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = _101<br/></td></tr><tr><td align="left">_117 = &lt;u64 as SafeMath&gt;::safe_mul(move _118, const 2_u64)</td></tr></table>>];
    bb49__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_113 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb51__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_119 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb52__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_116 as Continue).0: u64)<br/>_115 = _123<br/>StorageDead(_123)<br/>_101 = move _115<br/>StorageDead(_115)<br/>StorageDead(_116)<br/>_113 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_122)<br/>_122 = _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb54__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_115)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _7<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb56__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _101<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_13<br/>_132 = &amp;(*_133)<br/>StorageLive(_134)<br/>_134 = ((*_3).2: u64)<br/>StorageLive(_135)<br/>_135 = &amp;(*_8)<br/></td></tr><tr><td align="left">_130 = calculate_referee_fee_and_referrer_reward(move _131, move _132, move _134, move _135)</td></tr></table>>];
    bb57__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_129 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _130)</td></tr></table>>];
    bb58__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_136 = discriminant(_129)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb59__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_129 as Continue).0: (u64, u64, u64))<br/>_127 = _140<br/>StorageDead(_140)<br/>StorageDead(_133)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_129 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb61__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_133)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = _101<br/>_127 = (move _141, const 0_u64, const 0_u64)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_124)<br/>_124 = (_127.0: u64)<br/>StorageLive(_125)<br/>_125 = (_127.1: u64)<br/>StorageLive(_126)<br/>_126 = (_127.2: u64)<br/>StorageDead(_127)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = _6<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb64__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_142 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = _124<br/>StorageLive(_147)<br/>_147 = _4<br/>StorageLive(_148)<br/>_148 = _5<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;((*_3).1: state::state::OrderFillerRewardStructure)<br/>_149 = &amp;(*_150)<br/></td></tr><tr><td align="left">_145 = calculate_filler_reward(move _146, move _147, move _148, const 0_u64, move _149)</td></tr></table>>];
    bb66__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb67__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_151 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb68__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_144 as Continue).0: u64)<br/>_142 = _155<br/>StorageDead(_155)<br/>StorageDead(_150)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb70__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = _124<br/>StorageLive(_169)<br/>_169 = _142<br/></td></tr><tr><td align="left">_167 = &lt;u64 as SafeMath&gt;::safe_sub(move _168, move _169)</td></tr></table>>];
    bb72__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _167)</td></tr></table>>];
    bb73__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_170 = discriminant(_166)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb74__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_166 as Continue).0: u64)<br/>_165 = _174<br/>StorageDead(_174)<br/>StorageLive(_175)<br/>_175 = _126<br/></td></tr><tr><td align="left">_164 = &lt;u64 as SafeMath&gt;::safe_sub(move _165, move _175)</td></tr></table>>];
    bb75__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_166 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb76__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_163 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _164)</td></tr></table>>];
    bb78__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_176 = discriminant(_163)<br/></td></tr><tr><td align="left">switchInt(move _176)</td></tr></table>>];
    bb79__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_163 as Continue).0: u64)<br/>_162 = _180<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_161 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _162)</td></tr></table>>];
    bb80__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_163 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_179)<br/>_179 = _177<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _179)</td></tr></table>>];
    bb81__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/></td></tr><tr><td align="left">_160 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _161)</td></tr></table>>];
    bb83__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>_181 = discriminant(_160)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb84__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_160 as Continue).0: i64)<br/>_159 = _185<br/>StorageDead(_185)<br/>StorageLive(_186)<br/>_186 = _9<br/></td></tr><tr><td align="left">_158 = &lt;i64 as SafeMath&gt;::safe_add(move _159, move _186)</td></tr></table>>];
    bb85__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_160 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb86__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb88__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_187 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb89__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_157 as Continue).0: i64)<br/>_156 = _191<br/>StorageDead(_191)<br/>StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = _156<br/>StorageLive(_196)<br/>_196 = _9<br/></td></tr><tr><td align="left">_194 = &lt;i64 as SafeMath&gt;::safe_sub(move _195, move _196)</td></tr></table>>];
    bb90__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_190)<br/>_190 = _188<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _190)</td></tr></table>>];
    bb91__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">_193 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _194)</td></tr></table>>];
    bb93__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_197 = discriminant(_193)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb94__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_193 as Continue).0: i64)<br/>_192 = _201<br/>StorageDead(_201)<br/>StorageDead(_193)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = _124<br/>StorageLive(_204)<br/>_204 = _156<br/>StorageLive(_205)<br/>_205 = _192<br/>StorageLive(_206)<br/>_206 = _142<br/>StorageLive(_207)<br/>_207 = _126<br/>StorageLive(_208)<br/>_208 = _125<br/>_202 = FillFees { user_fee: move _203, maker_rebate: const 0_u64, fee_to_market: move _204, fee_to_market_for_lp: move _205, filler_reward: move _206, referrer_reward: move _207, referee_discount: move _208 }<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>_0 = std::result::Result::&lt;FillFees, error::ErrorCode&gt;::Ok(move _202)<br/>StorageDead(_202)<br/>StorageDead(_192)<br/>StorageDead(_156)<br/>StorageDead(_142)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_193 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_200)<br/>_200 = _198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _200)</td></tr></table>>];
    bb96__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_2218 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2218 -> bb1__0_2218 [label="return"];
    bb1__0_2218 -> bb2__0_2218 [label="return"];
    bb2__0_2218 -> bb3__0_2218 [label="0"];
    bb2__0_2218 -> bb5__0_2218 [label="1"];
    bb2__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb3__0_2218 -> bb8__0_2218 [label="0"];
    bb3__0_2218 -> bb7__0_2218 [label="otherwise"];
    bb5__0_2218 -> bb6__0_2218 [label="return"];
    bb6__0_2218 -> bb110__0_2218 [label=""];
    bb7__0_2218 -> bb9__0_2218 [label="return"];
    bb8__0_2218 -> bb43__0_2218 [label="return"];
    bb9__0_2218 -> bb10__0_2218 [label="return"];
    bb10__0_2218 -> bb11__0_2218 [label="0"];
    bb10__0_2218 -> bb12__0_2218 [label="1"];
    bb10__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb11__0_2218 -> bb14__0_2218 [label="return"];
    bb12__0_2218 -> bb13__0_2218 [label="return"];
    bb13__0_2218 -> bb108__0_2218 [label=""];
    bb14__0_2218 -> bb15__0_2218 [label="return"];
    bb15__0_2218 -> bb16__0_2218 [label="0"];
    bb15__0_2218 -> bb17__0_2218 [label="1"];
    bb15__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb16__0_2218 -> bb19__0_2218 [label="return"];
    bb17__0_2218 -> bb18__0_2218 [label="return"];
    bb18__0_2218 -> bb106__0_2218 [label=""];
    bb19__0_2218 -> bb20__0_2218 [label="return"];
    bb20__0_2218 -> bb21__0_2218 [label="return"];
    bb21__0_2218 -> bb22__0_2218 [label="0"];
    bb21__0_2218 -> bb23__0_2218 [label="1"];
    bb21__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb22__0_2218 -> bb26__0_2218 [label="0"];
    bb22__0_2218 -> bb25__0_2218 [label="otherwise"];
    bb23__0_2218 -> bb24__0_2218 [label="return"];
    bb24__0_2218 -> bb106__0_2218 [label=""];
    bb25__0_2218 -> bb27__0_2218 [label="return"];
    bb26__0_2218 -> bb32__0_2218 [label=""];
    bb27__0_2218 -> bb28__0_2218 [label="return"];
    bb28__0_2218 -> bb29__0_2218 [label="0"];
    bb28__0_2218 -> bb30__0_2218 [label="1"];
    bb28__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb29__0_2218 -> bb32__0_2218 [label=""];
    bb30__0_2218 -> bb31__0_2218 [label="return"];
    bb31__0_2218 -> bb105__0_2218 [label=""];
    bb32__0_2218 -> bb33__0_2218 [label="return"];
    bb33__0_2218 -> bb34__0_2218 [label="return"];
    bb34__0_2218 -> bb35__0_2218 [label="0"];
    bb34__0_2218 -> bb36__0_2218 [label="1"];
    bb34__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb35__0_2218 -> bb38__0_2218 [label="return"];
    bb36__0_2218 -> bb37__0_2218 [label="return"];
    bb37__0_2218 -> bb104__0_2218 [label=""];
    bb38__0_2218 -> bb39__0_2218 [label="return"];
    bb39__0_2218 -> bb40__0_2218 [label="0"];
    bb39__0_2218 -> bb41__0_2218 [label="1"];
    bb39__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb40__0_2218 -> bb97__0_2218 [label=""];
    bb41__0_2218 -> bb42__0_2218 [label="return"];
    bb42__0_2218 -> bb104__0_2218 [label=""];
    bb43__0_2218 -> bb44__0_2218 [label="return"];
    bb44__0_2218 -> bb45__0_2218 [label="0"];
    bb44__0_2218 -> bb46__0_2218 [label="1"];
    bb44__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb45__0_2218 -> bb49__0_2218 [label="0"];
    bb45__0_2218 -> bb48__0_2218 [label="otherwise"];
    bb46__0_2218 -> bb47__0_2218 [label="return"];
    bb47__0_2218 -> bb103__0_2218 [label=""];
    bb48__0_2218 -> bb50__0_2218 [label="return"];
    bb49__0_2218 -> bb55__0_2218 [label=""];
    bb50__0_2218 -> bb51__0_2218 [label="return"];
    bb51__0_2218 -> bb52__0_2218 [label="0"];
    bb51__0_2218 -> bb53__0_2218 [label="1"];
    bb51__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb52__0_2218 -> bb55__0_2218 [label=""];
    bb53__0_2218 -> bb54__0_2218 [label="return"];
    bb54__0_2218 -> bb103__0_2218 [label=""];
    bb55__0_2218 -> bb62__0_2218 [label="0"];
    bb55__0_2218 -> bb56__0_2218 [label="otherwise"];
    bb56__0_2218 -> bb57__0_2218 [label="return"];
    bb57__0_2218 -> bb58__0_2218 [label="return"];
    bb58__0_2218 -> bb59__0_2218 [label="0"];
    bb58__0_2218 -> bb60__0_2218 [label="1"];
    bb58__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb59__0_2218 -> bb63__0_2218 [label=""];
    bb60__0_2218 -> bb61__0_2218 [label="return"];
    bb61__0_2218 -> bb103__0_2218 [label=""];
    bb62__0_2218 -> bb63__0_2218 [label=""];
    bb63__0_2218 -> bb64__0_2218 [label="0"];
    bb63__0_2218 -> bb65__0_2218 [label="otherwise"];
    bb64__0_2218 -> bb71__0_2218 [label=""];
    bb65__0_2218 -> bb66__0_2218 [label="return"];
    bb66__0_2218 -> bb67__0_2218 [label="return"];
    bb67__0_2218 -> bb68__0_2218 [label="0"];
    bb67__0_2218 -> bb69__0_2218 [label="1"];
    bb67__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb68__0_2218 -> bb71__0_2218 [label=""];
    bb69__0_2218 -> bb70__0_2218 [label="return"];
    bb70__0_2218 -> bb102__0_2218 [label=""];
    bb71__0_2218 -> bb72__0_2218 [label="return"];
    bb72__0_2218 -> bb73__0_2218 [label="return"];
    bb73__0_2218 -> bb74__0_2218 [label="0"];
    bb73__0_2218 -> bb75__0_2218 [label="1"];
    bb73__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb74__0_2218 -> bb77__0_2218 [label="return"];
    bb75__0_2218 -> bb76__0_2218 [label="return"];
    bb76__0_2218 -> bb98__0_2218 [label=""];
    bb77__0_2218 -> bb78__0_2218 [label="return"];
    bb78__0_2218 -> bb79__0_2218 [label="0"];
    bb78__0_2218 -> bb80__0_2218 [label="1"];
    bb78__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb79__0_2218 -> bb82__0_2218 [label="return"];
    bb80__0_2218 -> bb81__0_2218 [label="return"];
    bb81__0_2218 -> bb98__0_2218 [label=""];
    bb82__0_2218 -> bb83__0_2218 [label="return"];
    bb83__0_2218 -> bb84__0_2218 [label="0"];
    bb83__0_2218 -> bb85__0_2218 [label="1"];
    bb83__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb84__0_2218 -> bb87__0_2218 [label="return"];
    bb85__0_2218 -> bb86__0_2218 [label="return"];
    bb86__0_2218 -> bb99__0_2218 [label=""];
    bb87__0_2218 -> bb88__0_2218 [label="return"];
    bb88__0_2218 -> bb89__0_2218 [label="0"];
    bb88__0_2218 -> bb90__0_2218 [label="1"];
    bb88__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb89__0_2218 -> bb92__0_2218 [label="return"];
    bb90__0_2218 -> bb91__0_2218 [label="return"];
    bb91__0_2218 -> bb100__0_2218 [label=""];
    bb92__0_2218 -> bb93__0_2218 [label="return"];
    bb93__0_2218 -> bb94__0_2218 [label="0"];
    bb93__0_2218 -> bb95__0_2218 [label="1"];
    bb93__0_2218 -> bb4__0_2218 [label="otherwise"];
    bb94__0_2218 -> bb97__0_2218 [label=""];
    bb95__0_2218 -> bb96__0_2218 [label="return"];
    bb96__0_2218 -> bb101__0_2218 [label=""];
    bb97__0_2218 -> bb111__0_2218 [label=""];
    bb98__0_2218 -> bb99__0_2218 [label=""];
    bb99__0_2218 -> bb100__0_2218 [label=""];
    bb100__0_2218 -> bb101__0_2218 [label=""];
    bb101__0_2218 -> bb102__0_2218 [label=""];
    bb102__0_2218 -> bb103__0_2218 [label=""];
    bb103__0_2218 -> bb109__0_2218 [label=""];
    bb104__0_2218 -> bb105__0_2218 [label=""];
    bb105__0_2218 -> bb107__0_2218 [label=""];
    bb106__0_2218 -> bb107__0_2218 [label=""];
    bb107__0_2218 -> bb108__0_2218 [label=""];
    bb108__0_2218 -> bb109__0_2218 [label=""];
    bb109__0_2218 -> bb110__0_2218 [label=""];
    bb110__0_2218 -> bb111__0_2218 [label=""];
}
