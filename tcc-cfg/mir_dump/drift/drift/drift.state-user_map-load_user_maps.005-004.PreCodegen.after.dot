digraph Mir_0_4494 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn load_user_maps(_1: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, _2: bool) -&gt; std::result::Result&lt;(state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;), error::ErrorCode&gt;<br align="left"/>let mut _3: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _4: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _5: [u8; 8_usize];<br align="left"/>let _6: [u8; 8_usize];<br align="left"/>let _7: ();<br align="left"/>let mut _8: ();<br align="left"/>let mut _9: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _10: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _13: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _14: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _20: error::ErrorCode;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _26: usize;<br align="left"/>let _27: ();<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: &amp;ReErased [u8];<br align="left"/>let _31: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _32: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: !;<br align="left"/>let _35: &amp;ReErased [u8; 8_usize];<br align="left"/>let _36: usize;<br align="left"/>let _37: &amp;ReErased [u8];<br align="left"/>let _38: &amp;ReErased [u8];<br align="left"/>let mut _39: &amp;ReErased [u8];<br align="left"/>let _40: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _41: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _42: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _43: usize;<br align="left"/>let mut _44: usize;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: (usize, bool);<br align="left"/>let mut _47: &amp;ReErased [u8];<br align="left"/>let _48: ();<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _51: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _52: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _53: !;<br align="left"/>let _54: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _56: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _57: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _58: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _64: bool;<br align="left"/>let _65: ();<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: error::ErrorCode;<br align="left"/>let _70: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _71: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _72: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _73: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _74: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _75: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _76: error::ErrorCode;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _82: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _83: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _84: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _86: ();<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _88: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _89: bool;<br align="left"/>let mut _90: &amp;ReErased std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let _91: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _92: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _93: ();<br align="left"/>let _94: error::ErrorCode;<br align="left"/>let _95: ();<br align="left"/>let mut _96: &amp;ReErased str;<br align="left"/>let _97: &amp;ReErased str;<br align="left"/>let mut _98: &amp;ReErased std::string::String;<br align="left"/>let _99: &amp;ReErased std::string::String;<br align="left"/>let _100: std::string::String;<br align="left"/>let _101: std::string::String;<br align="left"/>let mut _102: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _104: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _105: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _106: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _108: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _109: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _110: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased error::ErrorCode;<br align="left"/>let _113: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _114: error::ErrorCode;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: ();<br align="left"/>let _120: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _122: std::result::Result&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _123: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _124: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _130: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _132: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _133: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _134: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _135: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _136: error::ErrorCode;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _142: usize;<br align="left"/>let _143: ();<br align="left"/>let mut _144: bool;<br align="left"/>let mut _145: usize;<br align="left"/>let mut _146: &amp;ReErased [u8];<br align="left"/>let _147: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _148: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _149: usize;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: error::ErrorCode;<br align="left"/>let _152: &amp;ReErased [u8; 8_usize];<br align="left"/>let _153: usize;<br align="left"/>let _154: &amp;ReErased [u8];<br align="left"/>let _155: &amp;ReErased [u8];<br align="left"/>let mut _156: &amp;ReErased [u8];<br align="left"/>let _157: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _158: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _159: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _160: usize;<br align="left"/>let mut _161: usize;<br align="left"/>let mut _162: usize;<br align="left"/>let mut _163: (usize, bool);<br align="left"/>let mut _164: &amp;ReErased [u8];<br align="left"/>let _165: ();<br align="left"/>let mut _166: bool;<br align="left"/>let mut _167: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _168: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _169: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _170: !;<br align="left"/>let mut _171: error::ErrorCode;<br align="left"/>let _172: &amp;ReErased [u8; 32_usize];<br align="left"/>let _173: usize;<br align="left"/>let _174: &amp;ReErased [u8];<br align="left"/>let _175: &amp;ReErased [u8];<br align="left"/>let mut _176: &amp;ReErased [u8];<br align="left"/>let _177: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _178: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _179: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _180: usize;<br align="left"/>let mut _181: usize;<br align="left"/>let mut _182: usize;<br align="left"/>let mut _183: (usize, bool);<br align="left"/>let mut _184: &amp;ReErased [u8];<br align="left"/>let _185: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _187: std::result::Result&lt;anchor_lang::prelude::Pubkey, error::ErrorCode&gt;;<br align="left"/>let mut _188: std::result::Result&lt;anchor_lang::prelude::Pubkey, std::convert::Infallible&gt;;<br align="left"/>let mut _189: [u8; 32_usize];<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _194: anchor_lang::prelude::Pubkey;<br align="left"/>let _195: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _196: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _197: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _198: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _199: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _200: isize;<br align="left"/>let _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _202: !;<br align="left"/>let mut _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _204: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _205: ();<br align="left"/>let mut _206: bool;<br align="left"/>let mut _207: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _208: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _209: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _210: !;<br align="left"/>let _211: bool;<br align="left"/>let _212: ();<br align="left"/>let mut _213: bool;<br align="left"/>let mut _214: bool;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: error::ErrorCode;<br align="left"/>let _217: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _218: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _219: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _220: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _221: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _222: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _223: error::ErrorCode;<br align="left"/>let mut _224: isize;<br align="left"/>let _225: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _226: !;<br align="left"/>let mut _227: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _228: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _229: ();<br align="left"/>let mut _230: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _231: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _232: &amp;ReErased mut state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _233: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _234: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _235: isize;<br align="left"/>let _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _237: !;<br align="left"/>let mut _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _239: ();<br align="left"/>let mut _240: !;<br align="left"/>let _241: ();<br align="left"/>let mut _242: !;<br align="left"/>let mut _243: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _244: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _245: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _246: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _247: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _248: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _249: &amp;ReErased mut [u8];<br align="left"/>let mut _250: &amp;ReErased mut [u8];<br align="left"/>let mut _251: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _252: &amp;ReErased mut [u8];<br align="left"/>let mut _253: &amp;ReErased mut [u8];<br align="left"/>let mut _254: &amp;ReErased mut [u8];<br align="left"/>let mut _255: isize;<br align="left"/>let mut _256: isize;<br align="left"/>let mut _257: isize;<br align="left"/>let mut _258: isize;<br align="left"/>let mut _259: isize;<br align="left"/>let mut _260: isize;<br align="left"/>let mut _261: isize;<br align="left"/>let mut _262: isize;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>debug account_info_iter =&gt; _1;<br align="left"/>debug must_be_writable =&gt; _2;<br align="left"/>debug user_map =&gt; _3;<br align="left"/>debug user_stats_map =&gt; _4;<br align="left"/>debug user_discriminator =&gt; _5;<br align="left"/>debug user_stats_discriminator =&gt; _6;<br align="left"/>debug user_account_info =&gt; _12;<br align="left"/>debug user_key =&gt; _13;<br align="left"/>debug data =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug expected_data_len =&gt; _26;<br align="left"/>debug account_discriminator =&gt; _35;<br align="left"/>debug offset =&gt; _36;<br align="left"/>debug slice =&gt; _37;<br align="left"/>debug user_account_info =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug is_writable =&gt; _64;<br align="left"/>debug user_account_loader =&gt; _70;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug error_code =&gt; _94;<br align="left"/>debug res =&gt; _101;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug user_stats_account_info =&gt; _120;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug data =&gt; _130;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug expected_data_len =&gt; _142;<br align="left"/>debug account_discriminator =&gt; _152;<br align="left"/>debug offset =&gt; _153;<br align="left"/>debug slice =&gt; _154;<br align="left"/>debug authority_slice =&gt; _172;<br align="left"/>debug offset =&gt; _173;<br align="left"/>debug slice =&gt; _174;<br align="left"/>debug authority =&gt; _185;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>debug user_stats_account_info =&gt; _195;<br align="left"/>debug residual =&gt; _201;<br align="left"/>debug val =&gt; _204;<br align="left"/>debug is_writable =&gt; _211;<br align="left"/>debug user_stats_account_loader =&gt; _217;<br align="left"/>debug residual =&gt; _225;<br align="left"/>debug val =&gt; _228;<br align="left"/>debug residual =&gt; _236;<br align="left"/>debug val =&gt; _239;<br align="left"/>>;
    bb0__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/></td></tr><tr><td align="left">_3 = UserMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb1__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = UserStatsMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb2__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = &lt;User as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb3__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = &lt;UserStats as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb4__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_9 = Peekable::&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::peek(move _10)</td></tr></table>>];
    bb6__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_11 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb7__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_9 as Some).0: &amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>StorageLive(_13)<br/>_247 = deref_copy (*_12)<br/>_13 = ((*_247).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_248 = deref_copy (*_12)<br/>_18 = &amp;(*_248)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _18)</td></tr></table>>];
    bb8__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = error::ErrorCode::CouldNotLoadUserData<br/>_19 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt;::Err(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::or::&lt;error::ErrorCode&gt;(move _17, move _19)</td></tr></table>>];
    bb9__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb10__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_21 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb11__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_15 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_14 = move _25<br/>StorageDead(_25)<br/>_257 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_26)<br/>_26 = const _<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_14<br/></td></tr><tr><td align="left">_31 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb12__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb13__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb14__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_255 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_249 = deref_copy (*_31)<br/>_30 = &amp;(*_249)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = core::slice::&lt;impl [u8]&gt;::len(move _30)</td></tr></table>>];
    bb16__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_33)<br/>_33 = _26<br/>_28 = Lt(move _29, move _33)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb17__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>_7 = const ()<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>_27 = const ()<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = const 0_usize<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_14<br/></td></tr><tr><td align="left">_40 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb19__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_250 = deref_copy (*_40)<br/>_39 = &amp;(*_250)<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _36<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _36<br/>_46 = CheckedAdd(_45, const 8_usize)<br/></td></tr><tr><td align="left">assert(!move (_46.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _45, const 8_usize)</td></tr></table>>];
    bb20__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_44 = move (_46.0: usize)<br/>StorageDead(_45)<br/>_42 = std::ops::Range::&lt;usize&gt; { start: move _43, end: move _44 }<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_38 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _39, move _42)</td></tr></table>>];
    bb21__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_39)<br/>_37 = &amp;(*_38)<br/>StorageLive(_47)<br/>_47 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = load_user_maps::as_array::&lt;u8&gt;(move _47)</td></tr></table>>];
    bb22__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_35<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_5<br/>_51 = &amp;_52<br/></td></tr><tr><td align="left">_49 = &lt;&amp;[u8; 8] as PartialEq&gt;::ne(move _50, move _51)</td></tr></table>>];
    bb23__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb24__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_7 = const ()<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_48 = const ()<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_57 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::next(move _58)</td></tr></table>>];
    bb26__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _57)</td></tr></table>>];
    bb27__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb28__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb29__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_54 = _63<br/>StorageDead(_63)<br/>StorageDead(_55)<br/>StorageLive(_64)<br/>_64 = ((*_54).6: bool)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb30__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb31__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = _2<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb33__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = error::ErrorCode::UserWrongMutability<br/>_0 = std::result::Result::&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt;::Err(move _69)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_65 = const ()<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;(*_54)<br/></td></tr><tr><td align="left">_73 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::try_from(move _74)</td></tr></table>>];
    bb35__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = error::ErrorCode::InvalidUserAccount<br/>_75 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, error::ErrorCode&gt;::Err(move _76)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_72 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _73, move _75)</td></tr></table>>];
    bb36__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _72)</td></tr></table>>];
    bb37__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_77 = discriminant(_71)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb38__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = move ((_71 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_70 = move _81<br/>StorageDead(_81)<br/>StorageDead(_71)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;mut (_3.0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_84)<br/>_84 = (*_13)<br/>StorageLive(_85)<br/>_85 = move _70<br/></td></tr><tr><td align="left">_82 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;::insert(move _83, move _84, move _85)</td></tr></table>>];
    bb39__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_71 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb40__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_91 = Peekable::&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::peek(move _92)</td></tr></table>>];
    bb42__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_90 = &amp;_91<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_89 = Option::&lt;&amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::is_some(move _90)</td></tr></table>>];
    bb43__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb44__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>_93 = ()<br/>_88 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _93)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_94)<br/>_94 = error::ErrorCode::UserStatsNotFound<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_246 = const _<br/>_105 = &amp;(*_246)<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_94<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _112)</td></tr></table>>];
    bb46__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_110 = [move _111]<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/>_107 = move _108 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_102 = Arguments::&lt;'_&gt;::new_v1(move _103, move _107)</td></tr></table>>];
    bb47__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = format(move _102)</td></tr></table>>];
    bb48__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/>_100 = move _101<br/>StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = &lt;String as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb49__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_95 = solana_program::log::sol_log(move _96)</td></tr></table>>];
    bb50__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb51__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageLive(_114)<br/>_114 = _94<br/>_88 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _114)<br/>StorageDead(_114)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb53__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_115 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb54__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_87 as Continue).0: ())<br/>_86 = _119<br/>StorageDead(_119)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_123 = Peekable::&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::peek(move _124)</td></tr></table>>];
    bb55__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb56__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;Option&lt;&amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _123)</td></tr></table>>];
    bb58__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;&amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb59__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_125 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb60__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_121 as Continue).0: &amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_120 = _129<br/>StorageDead(_129)<br/>StorageDead(_121)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_251 = deref_copy (*_120)<br/>_134 = &amp;(*_251)<br/></td></tr><tr><td align="left">_133 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _134)</td></tr></table>>];
    bb61__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb62__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = error::ErrorCode::CouldNotLoadUserStatsData<br/>_135 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt;::Err(move _136)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_132 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::or::&lt;error::ErrorCode&gt;(move _133, move _135)</td></tr></table>>];
    bb64__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb65__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_137 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb66__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = move ((_131 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_130 = move _141<br/>StorageDead(_141)<br/>_261 = discriminant(_131)<br/>StorageDead(_131)<br/>StorageLive(_142)<br/>_142 = const _<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;_130<br/></td></tr><tr><td align="left">_147 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _148)</td></tr></table>>];
    bb67__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb68__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/>_259 = discriminant(_131)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_252 = deref_copy (*_147)<br/>_146 = &amp;(*_252)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_145 = core::slice::&lt;impl [u8]&gt;::len(move _146)</td></tr></table>>];
    bb70__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageLive(_149)<br/>_149 = _142<br/>_144 = Lt(move _145, move _149)<br/></td></tr><tr><td align="left">switchInt(move _144)</td></tr></table>>];
    bb71__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageLive(_151)<br/>_151 = error::ErrorCode::InvalidUserStatsAccount<br/>_0 = std::result::Result::&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt;::Err(move _151)<br/>StorageDead(_151)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>_143 = const ()<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = const 0_usize<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;_130<br/></td></tr><tr><td align="left">_157 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _158)</td></tr></table>>];
    bb73__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_253 = deref_copy (*_157)<br/>_156 = &amp;(*_253)<br/>StorageDead(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = _153<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = _153<br/>_163 = CheckedAdd(_162, const 8_usize)<br/></td></tr><tr><td align="left">assert(!move (_163.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _162, const 8_usize)</td></tr></table>>];
    bb74__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_161 = move (_163.0: usize)<br/>StorageDead(_162)<br/>_159 = std::ops::Range::&lt;usize&gt; { start: move _160, end: move _161 }<br/>StorageDead(_161)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_155 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _156, move _159)</td></tr></table>>];
    bb75__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_156)<br/>_154 = &amp;(*_155)<br/>StorageLive(_164)<br/>_164 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = load_user_maps::as_array::&lt;u8&gt;(move _164)</td></tr></table>>];
    bb76__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_157)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;_152<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;_6<br/>_168 = &amp;_169<br/></td></tr><tr><td align="left">_166 = &lt;&amp;[u8; 8] as PartialEq&gt;::ne(move _167, move _168)</td></tr></table>>];
    bb77__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb78__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageLive(_171)<br/>_171 = error::ErrorCode::InvalidUserStatsAccount<br/>_0 = std::result::Result::&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt;::Err(move _171)<br/>StorageDead(_171)<br/>StorageDead(_166)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>_165 = const ()<br/>StorageDead(_166)<br/>StorageDead(_165)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = const 8_usize<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;_130<br/></td></tr><tr><td align="left">_177 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _178)</td></tr></table>>];
    bb80__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_254 = deref_copy (*_177)<br/>_176 = &amp;(*_254)<br/>StorageDead(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = _173<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = _173<br/>_183 = CheckedAdd(_182, const 32_usize)<br/></td></tr><tr><td align="left">assert(!move (_183.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _182, const 32_usize)</td></tr></table>>];
    bb81__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_181 = move (_183.0: usize)<br/>StorageDead(_182)<br/>_179 = std::ops::Range::&lt;usize&gt; { start: move _180, end: move _181 }<br/>StorageDead(_181)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_175 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _176, move _179)</td></tr></table>>];
    bb82__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_176)<br/>_174 = &amp;(*_175)<br/>StorageLive(_184)<br/>_184 = &amp;(*_174)<br/></td></tr><tr><td align="left">_172 = load_user_maps::as_array::&lt;u8&gt;(move _184)</td></tr></table>>];
    bb83__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = (*_172)<br/></td></tr><tr><td align="left">_188 = &lt;anchor_lang::prelude::Pubkey as TryFrom&lt;[u8; 32]&gt;&gt;::try_from(move _189)</td></tr></table>>];
    bb84__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;anchor_lang::prelude::Pubkey, Infallible&gt; as SafeUnwrap&gt;::safe_unwrap(move _188)</td></tr></table>>];
    bb85__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;anchor_lang::prelude::Pubkey, error::ErrorCode&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb86__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_190 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb87__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = ((_186 as Continue).0: anchor_lang::prelude::Pubkey)<br/>_185 = _194<br/>StorageDead(_194)<br/>StorageDead(_186)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_198 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::next(move _199)</td></tr></table>>];
    bb88__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_193)<br/>_193 = _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb89__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/></td></tr><tr><td align="left">_197 = &lt;Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _198)</td></tr></table>>];
    bb91__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _197)</td></tr></table>>];
    bb92__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>_200 = discriminant(_196)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb93__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_196 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_195 = _204<br/>StorageDead(_204)<br/>StorageDead(_196)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;(_4.0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;_185<br/>_208 = &amp;(*_209)<br/></td></tr><tr><td align="left">_206 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;&gt;::contains_key::&lt;anchor_lang::prelude::Pubkey&gt;(move _207, move _208)</td></tr></table>>];
    bb94__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_196 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_203)<br/>_203 = _201<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _203)</td></tr></table>>];
    bb95__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb97__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_195)<br/>StorageDead(_185)<br/>StorageDead(_172)<br/>StorageDead(_152)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb98__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>_205 = const ()<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageLive(_211)<br/>_211 = ((*_195).6: bool)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = _211<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb99__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = _2<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb100__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = error::ErrorCode::UserStatsWrongMutability<br/>_0 = std::result::Result::&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt;::Err(move _216)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_212 = const ()<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;(*_195)<br/></td></tr><tr><td align="left">_220 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::try_from(move _221)</td></tr></table>>];
    bb102__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = error::ErrorCode::InvalidUserStatsAccount<br/>_222 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, error::ErrorCode&gt;::Err(move _223)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_219 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _220, move _222)</td></tr></table>>];
    bb103__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">_218 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _219)</td></tr></table>>];
    bb104__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_224 = discriminant(_218)<br/></td></tr><tr><td align="left">switchInt(move _224)</td></tr></table>>];
    bb105__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>_228 = move ((_218 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_217 = move _228<br/>StorageDead(_228)<br/>StorageDead(_218)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;mut _4<br/>StorageLive(_233)<br/>_233 = _185<br/>StorageLive(_234)<br/>_234 = move _217<br/></td></tr><tr><td align="left">_231 = UserStatsMap::&lt;'_&gt;::insert(move _232, move _233, move _234)</td></tr></table>>];
    bb106__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_225)<br/>_225 = ((_218 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_227)<br/>_227 = _225<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _227)</td></tr></table>>];
    bb107__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_225)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _231)</td></tr></table>>];
    bb109__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_235 = discriminant(_230)<br/></td></tr><tr><td align="left">switchInt(move _235)</td></tr></table>>];
    bb110__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = ((_230 as Continue).0: ())<br/>_229 = _239<br/>StorageDead(_239)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/>_8 = const ()<br/>StorageDead(_217)<br/>StorageDead(_211)<br/>StorageDead(_195)<br/>StorageDead(_185)<br/>StorageDead(_172)<br/>StorageDead(_152)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb111__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_230 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_238)<br/>_238 = _236<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _238)</td></tr></table>>];
    bb112__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_236)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_120)<br/>StorageDead(_70)<br/>StorageDead(_64)<br/>StorageDead(_54)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb114__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_7 = const ()<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb117__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = move _3<br/>StorageLive(_245)<br/>_245 = move _4<br/>_243 = (move _244, move _245)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>_0 = std::result::Result::&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt;::Ok(move _243)<br/>StorageDead(_243)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_120)<br/>StorageDead(_70)<br/>StorageDead(_64)<br/>StorageDead(_54)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb120__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb127__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb132__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb133__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb134__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left">return</td></tr></table>>];
    bb136__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">136 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb137__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">137 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb138__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb139__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">139 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb140__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">140 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb141__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">141 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb142__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">142 (cleanup)</td></tr><tr><td align="left" balign="left">_263 = discriminant(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_4494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">143 (cleanup)</td></tr><tr><td align="left" balign="left">_264 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_4494 -> bb1__0_4494 [label="return"];
    bb1__0_4494 -> bb2__0_4494 [label="return"];
    bb1__0_4494 -> bb140__0_4494 [label="unwind"];
    bb2__0_4494 -> bb3__0_4494 [label="return"];
    bb2__0_4494 -> bb139__0_4494 [label="unwind"];
    bb3__0_4494 -> bb4__0_4494 [label="return"];
    bb3__0_4494 -> bb139__0_4494 [label="unwind"];
    bb4__0_4494 -> bb5__0_4494 [label=""];
    bb5__0_4494 -> bb6__0_4494 [label="return"];
    bb5__0_4494 -> bb139__0_4494 [label="unwind"];
    bb6__0_4494 -> bb7__0_4494 [label="1"];
    bb6__0_4494 -> bb115__0_4494 [label="otherwise"];
    bb7__0_4494 -> bb8__0_4494 [label="return"];
    bb7__0_4494 -> bb139__0_4494 [label="unwind"];
    bb8__0_4494 -> bb9__0_4494 [label="return"];
    bb8__0_4494 -> bb139__0_4494 [label="unwind"];
    bb9__0_4494 -> bb10__0_4494 [label="return"];
    bb9__0_4494 -> bb139__0_4494 [label="unwind"];
    bb10__0_4494 -> bb11__0_4494 [label="0"];
    bb10__0_4494 -> bb13__0_4494 [label="1"];
    bb10__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb11__0_4494 -> bb15__0_4494 [label="return"];
    bb11__0_4494 -> bb138__0_4494 [label="unwind"];
    bb13__0_4494 -> bb14__0_4494 [label="return"];
    bb13__0_4494 -> bb143__0_4494 [label="unwind"];
    bb14__0_4494 -> bb132__0_4494 [label=""];
    bb15__0_4494 -> bb16__0_4494 [label="return"];
    bb15__0_4494 -> bb138__0_4494 [label="unwind"];
    bb16__0_4494 -> bb18__0_4494 [label="0"];
    bb16__0_4494 -> bb17__0_4494 [label="otherwise"];
    bb17__0_4494 -> bb116__0_4494 [label=""];
    bb18__0_4494 -> bb19__0_4494 [label="return"];
    bb18__0_4494 -> bb138__0_4494 [label="unwind"];
    bb19__0_4494 -> bb20__0_4494 [label="success"];
    bb19__0_4494 -> bb138__0_4494 [label="unwind"];
    bb20__0_4494 -> bb21__0_4494 [label="return"];
    bb20__0_4494 -> bb138__0_4494 [label="unwind"];
    bb21__0_4494 -> bb22__0_4494 [label="return"];
    bb21__0_4494 -> bb138__0_4494 [label="unwind"];
    bb22__0_4494 -> bb23__0_4494 [label="return"];
    bb22__0_4494 -> bb138__0_4494 [label="unwind"];
    bb23__0_4494 -> bb25__0_4494 [label="0"];
    bb23__0_4494 -> bb24__0_4494 [label="otherwise"];
    bb24__0_4494 -> bb116__0_4494 [label=""];
    bb25__0_4494 -> bb26__0_4494 [label="return"];
    bb25__0_4494 -> bb138__0_4494 [label="unwind"];
    bb26__0_4494 -> bb27__0_4494 [label="return"];
    bb26__0_4494 -> bb138__0_4494 [label="unwind"];
    bb27__0_4494 -> bb28__0_4494 [label="return"];
    bb27__0_4494 -> bb138__0_4494 [label="unwind"];
    bb28__0_4494 -> bb29__0_4494 [label="0"];
    bb28__0_4494 -> bb30__0_4494 [label="1"];
    bb28__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb29__0_4494 -> bb32__0_4494 [label="0"];
    bb29__0_4494 -> bb34__0_4494 [label="otherwise"];
    bb30__0_4494 -> bb31__0_4494 [label="return"];
    bb30__0_4494 -> bb138__0_4494 [label="unwind"];
    bb31__0_4494 -> bb131__0_4494 [label=""];
    bb32__0_4494 -> bb34__0_4494 [label="0"];
    bb32__0_4494 -> bb33__0_4494 [label="otherwise"];
    bb33__0_4494 -> bb130__0_4494 [label=""];
    bb34__0_4494 -> bb35__0_4494 [label="return"];
    bb34__0_4494 -> bb138__0_4494 [label="unwind"];
    bb35__0_4494 -> bb36__0_4494 [label="return"];
    bb35__0_4494 -> bb138__0_4494 [label="unwind"];
    bb36__0_4494 -> bb37__0_4494 [label="return"];
    bb36__0_4494 -> bb138__0_4494 [label="unwind"];
    bb37__0_4494 -> bb38__0_4494 [label="0"];
    bb37__0_4494 -> bb39__0_4494 [label="1"];
    bb37__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb38__0_4494 -> bb41__0_4494 [label="return"];
    bb38__0_4494 -> bb138__0_4494 [label="unwind"];
    bb39__0_4494 -> bb40__0_4494 [label="return"];
    bb39__0_4494 -> bb138__0_4494 [label="unwind"];
    bb40__0_4494 -> bb129__0_4494 [label=""];
    bb41__0_4494 -> bb42__0_4494 [label="return"];
    bb41__0_4494 -> bb138__0_4494 [label="unwind"];
    bb42__0_4494 -> bb43__0_4494 [label="return"];
    bb42__0_4494 -> bb138__0_4494 [label="unwind"];
    bb43__0_4494 -> bb45__0_4494 [label="0"];
    bb43__0_4494 -> bb44__0_4494 [label="otherwise"];
    bb44__0_4494 -> bb52__0_4494 [label=""];
    bb45__0_4494 -> bb46__0_4494 [label="return"];
    bb45__0_4494 -> bb138__0_4494 [label="unwind"];
    bb46__0_4494 -> bb47__0_4494 [label="return"];
    bb46__0_4494 -> bb138__0_4494 [label="unwind"];
    bb47__0_4494 -> bb48__0_4494 [label="return"];
    bb47__0_4494 -> bb138__0_4494 [label="unwind"];
    bb48__0_4494 -> bb49__0_4494 [label="return"];
    bb48__0_4494 -> bb137__0_4494 [label="unwind"];
    bb49__0_4494 -> bb50__0_4494 [label="return"];
    bb49__0_4494 -> bb137__0_4494 [label="unwind"];
    bb50__0_4494 -> bb51__0_4494 [label="return"];
    bb50__0_4494 -> bb138__0_4494 [label="unwind"];
    bb51__0_4494 -> bb52__0_4494 [label=""];
    bb52__0_4494 -> bb53__0_4494 [label="return"];
    bb52__0_4494 -> bb138__0_4494 [label="unwind"];
    bb53__0_4494 -> bb54__0_4494 [label="0"];
    bb53__0_4494 -> bb55__0_4494 [label="1"];
    bb53__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb54__0_4494 -> bb57__0_4494 [label="return"];
    bb54__0_4494 -> bb138__0_4494 [label="unwind"];
    bb55__0_4494 -> bb56__0_4494 [label="return"];
    bb55__0_4494 -> bb138__0_4494 [label="unwind"];
    bb56__0_4494 -> bb129__0_4494 [label=""];
    bb57__0_4494 -> bb58__0_4494 [label="return"];
    bb57__0_4494 -> bb138__0_4494 [label="unwind"];
    bb58__0_4494 -> bb59__0_4494 [label="return"];
    bb58__0_4494 -> bb138__0_4494 [label="unwind"];
    bb59__0_4494 -> bb60__0_4494 [label="0"];
    bb59__0_4494 -> bb61__0_4494 [label="1"];
    bb59__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb60__0_4494 -> bb63__0_4494 [label="return"];
    bb60__0_4494 -> bb138__0_4494 [label="unwind"];
    bb61__0_4494 -> bb62__0_4494 [label="return"];
    bb61__0_4494 -> bb138__0_4494 [label="unwind"];
    bb62__0_4494 -> bb128__0_4494 [label=""];
    bb63__0_4494 -> bb64__0_4494 [label="return"];
    bb63__0_4494 -> bb138__0_4494 [label="unwind"];
    bb64__0_4494 -> bb65__0_4494 [label="return"];
    bb64__0_4494 -> bb138__0_4494 [label="unwind"];
    bb65__0_4494 -> bb66__0_4494 [label="0"];
    bb65__0_4494 -> bb67__0_4494 [label="1"];
    bb65__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb66__0_4494 -> bb69__0_4494 [label="return"];
    bb66__0_4494 -> bb136__0_4494 [label="unwind"];
    bb67__0_4494 -> bb68__0_4494 [label="return"];
    bb67__0_4494 -> bb142__0_4494 [label="unwind"];
    bb68__0_4494 -> bb127__0_4494 [label=""];
    bb69__0_4494 -> bb70__0_4494 [label="return"];
    bb69__0_4494 -> bb136__0_4494 [label="unwind"];
    bb70__0_4494 -> bb72__0_4494 [label="0"];
    bb70__0_4494 -> bb71__0_4494 [label="otherwise"];
    bb71__0_4494 -> bb126__0_4494 [label=""];
    bb72__0_4494 -> bb73__0_4494 [label="return"];
    bb72__0_4494 -> bb136__0_4494 [label="unwind"];
    bb73__0_4494 -> bb74__0_4494 [label="success"];
    bb73__0_4494 -> bb136__0_4494 [label="unwind"];
    bb74__0_4494 -> bb75__0_4494 [label="return"];
    bb74__0_4494 -> bb136__0_4494 [label="unwind"];
    bb75__0_4494 -> bb76__0_4494 [label="return"];
    bb75__0_4494 -> bb136__0_4494 [label="unwind"];
    bb76__0_4494 -> bb77__0_4494 [label="return"];
    bb76__0_4494 -> bb136__0_4494 [label="unwind"];
    bb77__0_4494 -> bb79__0_4494 [label="0"];
    bb77__0_4494 -> bb78__0_4494 [label="otherwise"];
    bb78__0_4494 -> bb125__0_4494 [label=""];
    bb79__0_4494 -> bb80__0_4494 [label="return"];
    bb79__0_4494 -> bb136__0_4494 [label="unwind"];
    bb80__0_4494 -> bb81__0_4494 [label="success"];
    bb80__0_4494 -> bb136__0_4494 [label="unwind"];
    bb81__0_4494 -> bb82__0_4494 [label="return"];
    bb81__0_4494 -> bb136__0_4494 [label="unwind"];
    bb82__0_4494 -> bb83__0_4494 [label="return"];
    bb82__0_4494 -> bb136__0_4494 [label="unwind"];
    bb83__0_4494 -> bb84__0_4494 [label="return"];
    bb83__0_4494 -> bb136__0_4494 [label="unwind"];
    bb84__0_4494 -> bb85__0_4494 [label="return"];
    bb84__0_4494 -> bb136__0_4494 [label="unwind"];
    bb85__0_4494 -> bb86__0_4494 [label="return"];
    bb85__0_4494 -> bb136__0_4494 [label="unwind"];
    bb86__0_4494 -> bb87__0_4494 [label="0"];
    bb86__0_4494 -> bb88__0_4494 [label="1"];
    bb86__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb87__0_4494 -> bb90__0_4494 [label="return"];
    bb87__0_4494 -> bb136__0_4494 [label="unwind"];
    bb88__0_4494 -> bb89__0_4494 [label="return"];
    bb88__0_4494 -> bb136__0_4494 [label="unwind"];
    bb89__0_4494 -> bb124__0_4494 [label=""];
    bb90__0_4494 -> bb91__0_4494 [label="return"];
    bb90__0_4494 -> bb136__0_4494 [label="unwind"];
    bb91__0_4494 -> bb92__0_4494 [label="return"];
    bb91__0_4494 -> bb136__0_4494 [label="unwind"];
    bb92__0_4494 -> bb93__0_4494 [label="0"];
    bb92__0_4494 -> bb94__0_4494 [label="1"];
    bb92__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb93__0_4494 -> bb96__0_4494 [label="return"];
    bb93__0_4494 -> bb136__0_4494 [label="unwind"];
    bb94__0_4494 -> bb95__0_4494 [label="return"];
    bb94__0_4494 -> bb136__0_4494 [label="unwind"];
    bb95__0_4494 -> bb123__0_4494 [label=""];
    bb96__0_4494 -> bb98__0_4494 [label="0"];
    bb96__0_4494 -> bb97__0_4494 [label="otherwise"];
    bb97__0_4494 -> bb119__0_4494 [label="return"];
    bb97__0_4494 -> bb138__0_4494 [label="unwind"];
    bb98__0_4494 -> bb99__0_4494 [label="0"];
    bb98__0_4494 -> bb101__0_4494 [label="otherwise"];
    bb99__0_4494 -> bb101__0_4494 [label="0"];
    bb99__0_4494 -> bb100__0_4494 [label="otherwise"];
    bb100__0_4494 -> bb122__0_4494 [label=""];
    bb101__0_4494 -> bb102__0_4494 [label="return"];
    bb101__0_4494 -> bb136__0_4494 [label="unwind"];
    bb102__0_4494 -> bb103__0_4494 [label="return"];
    bb102__0_4494 -> bb136__0_4494 [label="unwind"];
    bb103__0_4494 -> bb104__0_4494 [label="return"];
    bb103__0_4494 -> bb136__0_4494 [label="unwind"];
    bb104__0_4494 -> bb105__0_4494 [label="0"];
    bb104__0_4494 -> bb106__0_4494 [label="1"];
    bb104__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb105__0_4494 -> bb108__0_4494 [label="return"];
    bb105__0_4494 -> bb136__0_4494 [label="unwind"];
    bb106__0_4494 -> bb107__0_4494 [label="return"];
    bb106__0_4494 -> bb136__0_4494 [label="unwind"];
    bb107__0_4494 -> bb121__0_4494 [label=""];
    bb108__0_4494 -> bb109__0_4494 [label="return"];
    bb108__0_4494 -> bb136__0_4494 [label="unwind"];
    bb109__0_4494 -> bb110__0_4494 [label="0"];
    bb109__0_4494 -> bb111__0_4494 [label="1"];
    bb109__0_4494 -> bb12__0_4494 [label="otherwise"];
    bb110__0_4494 -> bb113__0_4494 [label="return"];
    bb110__0_4494 -> bb138__0_4494 [label="unwind"];
    bb111__0_4494 -> bb112__0_4494 [label="return"];
    bb111__0_4494 -> bb136__0_4494 [label="unwind"];
    bb112__0_4494 -> bb121__0_4494 [label=""];
    bb113__0_4494 -> bb114__0_4494 [label="return"];
    bb113__0_4494 -> bb139__0_4494 [label="unwind"];
    bb114__0_4494 -> bb5__0_4494 [label=""];
    bb115__0_4494 -> bb118__0_4494 [label=""];
    bb116__0_4494 -> bb117__0_4494 [label="return"];
    bb116__0_4494 -> bb139__0_4494 [label="unwind"];
    bb117__0_4494 -> bb118__0_4494 [label=""];
    bb118__0_4494 -> bb135__0_4494 [label=""];
    bb119__0_4494 -> bb120__0_4494 [label="return"];
    bb119__0_4494 -> bb139__0_4494 [label="unwind"];
    bb120__0_4494 -> bb5__0_4494 [label=""];
    bb121__0_4494 -> bb122__0_4494 [label=""];
    bb122__0_4494 -> bb123__0_4494 [label=""];
    bb123__0_4494 -> bb124__0_4494 [label=""];
    bb124__0_4494 -> bb125__0_4494 [label=""];
    bb125__0_4494 -> bb126__0_4494 [label=""];
    bb126__0_4494 -> bb127__0_4494 [label="return"];
    bb126__0_4494 -> bb138__0_4494 [label="unwind"];
    bb127__0_4494 -> bb128__0_4494 [label=""];
    bb128__0_4494 -> bb129__0_4494 [label=""];
    bb129__0_4494 -> bb130__0_4494 [label=""];
    bb130__0_4494 -> bb131__0_4494 [label=""];
    bb131__0_4494 -> bb132__0_4494 [label="return"];
    bb131__0_4494 -> bb139__0_4494 [label="unwind"];
    bb132__0_4494 -> bb133__0_4494 [label="return"];
    bb132__0_4494 -> bb140__0_4494 [label="unwind"];
    bb133__0_4494 -> bb134__0_4494 [label="return"];
    bb133__0_4494 -> bb141__0_4494 [label="unwind"];
    bb134__0_4494 -> bb135__0_4494 [label=""];
    bb136__0_4494 -> bb138__0_4494 [label="return"];
    bb137__0_4494 -> bb138__0_4494 [label="return"];
    bb138__0_4494 -> bb139__0_4494 [label="return"];
    bb139__0_4494 -> bb140__0_4494 [label="return"];
    bb140__0_4494 -> bb141__0_4494 [label="return"];
    bb142__0_4494 -> bb138__0_4494 [label=""];
    bb143__0_4494 -> bb139__0_4494 [label=""];
}
