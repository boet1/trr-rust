digraph Mir_0_5656 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_admin_deposit(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminDeposit&lt;ReErased&gt;&gt;, _2: u16, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _16: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _17: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _20: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _22: Closure(DefId(0:5659 ~ drift[d311]::instructions::admin::handle_admin_deposit::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _28: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _29: anchor_lang::prelude::Clock;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _31: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _36: anchor_lang::prelude::Clock;<br align="left"/>let _37: i64;<br align="left"/>let _38: u64;<br align="left"/>let _39: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _40: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _41: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _42: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _43: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _44: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _45: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _47: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _48: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _49: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _50: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _51: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _52: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _53: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _54: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _55: u16;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _58: state::state::OracleGuardRails;<br align="left"/>let mut _59: &amp;ReErased state::state::State;<br align="left"/>let mut _60: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _66: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _69: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _75: ();<br align="left"/>let mut _76: bool;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: anchor_lang::error::Error;<br align="left"/>let mut _80: error::ErrorCode;<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _83: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _84: bool;<br align="left"/>let mut _85: &amp;ReErased state::user::User;<br align="left"/>let _86: &amp;ReErased state::user::User;<br align="left"/>let mut _87: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _88: ();<br align="left"/>let _89: error::ErrorCode;<br align="left"/>let _90: ();<br align="left"/>let mut _91: &amp;ReErased str;<br align="left"/>let _92: &amp;ReErased str;<br align="left"/>let mut _93: &amp;ReErased std::string::String;<br align="left"/>let _94: &amp;ReErased std::string::String;<br align="left"/>let _95: std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let mut _97: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _101: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _105: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased error::ErrorCode;<br align="left"/>let _108: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _109: error::ErrorCode;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: ();<br align="left"/>let mut _115: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _117: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _118: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _119: &amp;ReErased u16;<br align="left"/>let _120: &amp;ReErased u16;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _126: state::oracle::OraclePriceData;<br align="left"/>let mut _127: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _129: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _130: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _131: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _132: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _133: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _134: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _135: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _136: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _142: ();<br align="left"/>let mut _143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _144: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _145: bool;<br align="left"/>let mut _146: u8;<br align="left"/>let mut _147: &amp;ReErased state::user::User;<br align="left"/>let mut _148: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _149: u8;<br align="left"/>let mut _150: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _151: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _152: ();<br align="left"/>let _153: error::ErrorCode;<br align="left"/>let _154: ();<br align="left"/>let mut _155: &amp;ReErased str;<br align="left"/>let _156: &amp;ReErased str;<br align="left"/>let mut _157: &amp;ReErased std::string::String;<br align="left"/>let _158: &amp;ReErased std::string::String;<br align="left"/>let _159: std::string::String;<br align="left"/>let _160: std::string::String;<br align="left"/>let mut _161: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _162: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _163: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _164: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _165: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _166: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _167: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _169: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _170: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _171: &amp;ReErased error::ErrorCode;<br align="left"/>let _172: &amp;ReErased error::ErrorCode;<br align="left"/>let _173: ();<br align="left"/>let mut _174: &amp;ReErased str;<br align="left"/>let _175: &amp;ReErased str;<br align="left"/>let mut _176: &amp;ReErased std::string::String;<br align="left"/>let _177: &amp;ReErased std::string::String;<br align="left"/>let _178: std::string::String;<br align="left"/>let _179: std::string::String;<br align="left"/>let mut _180: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _181: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _182: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _183: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _184: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _185: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _186: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _187: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _188: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _189: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _190: &amp;ReErased u8;<br align="left"/>let _191: &amp;ReErased u8;<br align="left"/>let _192: &amp;ReErased state::user::User;<br align="left"/>let mut _193: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _194: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _195: &amp;ReErased u8;<br align="left"/>let _196: &amp;ReErased u8;<br align="left"/>let _197: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _198: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _199: error::ErrorCode;<br align="left"/>let mut _200: isize;<br align="left"/>let _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _202: !;<br align="left"/>let mut _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _204: ();<br align="left"/>let _205: ();<br align="left"/>let mut _206: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _207: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _208: bool;<br align="left"/>let mut _209: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _210: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: ();<br align="left"/>let _213: error::ErrorCode;<br align="left"/>let _214: ();<br align="left"/>let mut _215: &amp;ReErased str;<br align="left"/>let _216: &amp;ReErased str;<br align="left"/>let mut _217: &amp;ReErased std::string::String;<br align="left"/>let _218: &amp;ReErased std::string::String;<br align="left"/>let _219: std::string::String;<br align="left"/>let _220: std::string::String;<br align="left"/>let mut _221: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _223: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _224: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _225: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _226: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _227: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _228: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _229: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _230: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _231: &amp;ReErased error::ErrorCode;<br align="left"/>let _232: &amp;ReErased error::ErrorCode;<br align="left"/>let _233: ();<br align="left"/>let mut _234: &amp;ReErased str;<br align="left"/>let _235: &amp;ReErased str;<br align="left"/>let mut _236: error::ErrorCode;<br align="left"/>let mut _237: isize;<br align="left"/>let _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _239: !;<br align="left"/>let mut _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _241: ();<br align="left"/>let _242: ();<br align="left"/>let mut _243: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _244: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _245: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _246: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _247: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _248: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _249: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _250: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _251: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _252: i64;<br align="left"/>let mut _253: isize;<br align="left"/>let _254: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _255: !;<br align="left"/>let mut _256: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _257: ();<br align="left"/>let _258: usize;<br align="left"/>let mut _259: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _260: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _261: &amp;ReErased mut state::user::User;<br align="left"/>let mut _262: &amp;ReErased mut state::user::User;<br align="left"/>let mut _263: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _264: u16;<br align="left"/>let mut _265: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _266: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _267: isize;<br align="left"/>let _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _269: !;<br align="left"/>let mut _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _271: usize;<br align="left"/>let _272: u64;<br align="left"/>let mut _273: bool;<br align="left"/>let mut _274: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _275: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _276: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _277: bool;<br align="left"/>let mut _278: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _279: &amp;ReErased state::user::User;<br align="left"/>let mut _280: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _281: usize;<br align="left"/>let mut _282: usize;<br align="left"/>let mut _283: bool;<br align="left"/>let mut _284: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _285: state::spot_market::SpotBalanceType;<br align="left"/>let mut _286: u64;<br align="left"/>let mut _287: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _288: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _289: u128;<br align="left"/>let mut _290: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _291: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _292: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _293: &amp;ReErased state::user::User;<br align="left"/>let mut _294: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _295: usize;<br align="left"/>let mut _296: usize;<br align="left"/>let mut _297: bool;<br align="left"/>let mut _298: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _299: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _300: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _301: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _302: isize;<br align="left"/>let _303: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _304: !;<br align="left"/>let mut _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _306: u128;<br align="left"/>let mut _307: isize;<br align="left"/>let _308: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _309: !;<br align="left"/>let mut _310: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _311: u64;<br align="left"/>let mut _312: u64;<br align="left"/>let _313: u64;<br align="left"/>let mut _314: &amp;ReErased state::user::User;<br align="left"/>let mut _315: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _316: u64;<br align="left"/>let mut _317: &amp;ReErased state::user::User;<br align="left"/>let mut _318: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _319: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _320: &amp;ReErased mut state::user::User;<br align="left"/>let mut _321: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _322: usize;<br align="left"/>let mut _323: usize;<br align="left"/>let mut _324: bool;<br align="left"/>let _325: ();<br align="left"/>let mut _326: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _327: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _328: u128;<br align="left"/>let mut _329: u64;<br align="left"/>let mut _330: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _331: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _332: state::spot_market::SpotBalanceType;<br align="left"/>let mut _333: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _334: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _335: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _336: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _337: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _338: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _339: isize;<br align="left"/>let _340: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _341: !;<br align="left"/>let mut _342: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _343: ();<br align="left"/>let _344: u128;<br align="left"/>let mut _345: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _346: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _347: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _348: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _349: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _350: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _351: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _352: isize;<br align="left"/>let _353: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _354: !;<br align="left"/>let mut _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _356: u128;<br align="left"/>let _357: ();<br align="left"/>let mut _358: bool;<br align="left"/>let mut _359: u128;<br align="left"/>let _360: ();<br align="left"/>let mut _361: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _362: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _363: bool;<br align="left"/>let mut _364: u64;<br align="left"/>let mut _365: ();<br align="left"/>let _366: error::ErrorCode;<br align="left"/>let _367: ();<br align="left"/>let mut _368: &amp;ReErased str;<br align="left"/>let _369: &amp;ReErased str;<br align="left"/>let mut _370: &amp;ReErased std::string::String;<br align="left"/>let _371: &amp;ReErased std::string::String;<br align="left"/>let _372: std::string::String;<br align="left"/>let _373: std::string::String;<br align="left"/>let mut _374: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _375: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _376: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _377: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _378: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _379: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _380: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _381: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _382: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _383: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _384: &amp;ReErased error::ErrorCode;<br align="left"/>let _385: &amp;ReErased error::ErrorCode;<br align="left"/>let _386: ();<br align="left"/>let mut _387: &amp;ReErased str;<br align="left"/>let _388: &amp;ReErased str;<br align="left"/>let mut _389: &amp;ReErased std::string::String;<br align="left"/>let _390: &amp;ReErased std::string::String;<br align="left"/>let _391: std::string::String;<br align="left"/>let _392: std::string::String;<br align="left"/>let mut _393: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _394: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _395: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _396: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _397: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _398: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _399: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _400: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _401: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _402: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _403: &amp;ReErased u64;<br align="left"/>let _404: &amp;ReErased u64;<br align="left"/>let mut _405: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _406: &amp;ReErased u128;<br align="left"/>let _407: &amp;ReErased u128;<br align="left"/>let mut _408: error::ErrorCode;<br align="left"/>let mut _409: isize;<br align="left"/>let _410: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _411: !;<br align="left"/>let mut _412: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _413: ();<br align="left"/>let _414: ();<br align="left"/>let mut _415: bool;<br align="left"/>let mut _416: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _417: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _418: state::spot_market::SpotBalanceType;<br align="left"/>let mut _419: bool;<br align="left"/>let mut _420: u64;<br align="left"/>let _421: ();<br align="left"/>let mut _422: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _423: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _424: bool;<br align="left"/>let mut _425: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _426: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: ();<br align="left"/>let _429: error::ErrorCode;<br align="left"/>let _430: ();<br align="left"/>let mut _431: &amp;ReErased str;<br align="left"/>let _432: &amp;ReErased str;<br align="left"/>let mut _433: &amp;ReErased std::string::String;<br align="left"/>let _434: &amp;ReErased std::string::String;<br align="left"/>let _435: std::string::String;<br align="left"/>let _436: std::string::String;<br align="left"/>let mut _437: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _438: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _439: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _440: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _441: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _442: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _443: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _444: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _445: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _446: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _447: &amp;ReErased error::ErrorCode;<br align="left"/>let _448: &amp;ReErased error::ErrorCode;<br align="left"/>let _449: ();<br align="left"/>let mut _450: &amp;ReErased str;<br align="left"/>let _451: &amp;ReErased str;<br align="left"/>let mut _452: &amp;ReErased std::string::String;<br align="left"/>let _453: &amp;ReErased std::string::String;<br align="left"/>let _454: std::string::String;<br align="left"/>let _455: std::string::String;<br align="left"/>let mut _456: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _457: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _458: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _459: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _460: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _461: error::ErrorCode;<br align="left"/>let mut _462: isize;<br align="left"/>let _463: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _464: !;<br align="left"/>let mut _465: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _466: ();<br align="left"/>let _467: ();<br align="left"/>let mut _468: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _469: ();<br align="left"/>let mut _470: &amp;ReErased mut state::user::User;<br align="left"/>let mut _471: &amp;ReErased mut state::user::User;<br align="left"/>let mut _472: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _473: u64;<br align="left"/>let _474: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _475: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _476: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _477: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _478: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _479: &amp;ReErased u16;<br align="left"/>let _480: &amp;ReErased u16;<br align="left"/>let mut _481: isize;<br align="left"/>let _482: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _483: !;<br align="left"/>let mut _484: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _485: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _486: ();<br align="left"/>let mut _487: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _488: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _489: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _490: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _491: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _492: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _493: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _494: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _495: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _496: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _497: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _498: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _499: u64;<br align="left"/>let mut _500: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _501: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _502: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _503: bool;<br align="left"/>let mut _504: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _505: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _506: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _507: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _508: isize;<br align="left"/>let _509: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _510: !;<br align="left"/>let mut _511: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _512: ();<br align="left"/>let _513: ();<br align="left"/>let mut _514: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _515: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _516: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _517: isize;<br align="left"/>let _518: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _519: !;<br align="left"/>let mut _520: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _521: ();<br align="left"/>let _522: i64;<br align="left"/>let mut _523: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _524: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _525: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _526: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _527: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _528: u64;<br align="left"/>let mut _529: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _530: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _531: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _532: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _533: isize;<br align="left"/>let _534: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _535: !;<br align="left"/>let mut _536: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _537: i64;<br align="left"/>let _538: u64;<br align="left"/>let _539: u64;<br align="left"/>let mut _540: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _541: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _542: u64;<br align="left"/>let mut _543: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _544: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _545: u64;<br align="left"/>let mut _546: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _547: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _548: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _549: i64;<br align="left"/>let _550: state::events::DepositRecord;<br align="left"/>let mut _551: i64;<br align="left"/>let mut _552: u64;<br align="left"/>let mut _553: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _554: &amp;ReErased state::user::User;<br align="left"/>let mut _555: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _556: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _557: state::events::DepositDirection;<br align="left"/>let mut _558: u64;<br align="left"/>let mut _559: i64;<br align="left"/>let mut _560: u128;<br align="left"/>let mut _561: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _562: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _563: u128;<br align="left"/>let mut _564: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _565: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _566: u128;<br align="left"/>let mut _567: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _568: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _569: u128;<br align="left"/>let mut _570: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _571: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _572: u64;<br align="left"/>let mut _573: u64;<br align="left"/>let mut _574: u16;<br align="left"/>let mut _575: state::events::DepositExplanation;<br align="left"/>let mut _576: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _577: ();<br align="left"/>let _578: ();<br align="left"/>let mut _579: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _580: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _581: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _582: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _583: &amp;ReErased [u8];<br align="left"/>let _584: &amp;ReErased [u8];<br align="left"/>let mut _585: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _586: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _587: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _588: &amp;ReErased state::events::DepositRecord;<br align="left"/>let _589: &amp;ReErased state::events::DepositRecord;<br align="left"/>let _590: ();<br align="left"/>let mut _591: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _592: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _593: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _594: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _595: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _596: isize;<br align="left"/>let _597: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _598: !;<br align="left"/>let mut _599: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _600: ();<br align="left"/>let mut _601: ();<br align="left"/>let mut _602: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _603: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _604: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _605: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _606: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _607: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _608: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _609: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _610: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _611: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _612: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _613: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _614: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _615: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _616: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _617: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _618: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _619: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _620: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _621: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _622: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _623: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _624: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _625: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _626: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _627: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _628: &amp;ReErased mut instructions::admin::AdminDeposit&lt;ReErased&gt;;<br align="left"/>let mut _629: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _630: bool;<br align="left"/>let mut _631: isize;<br align="left"/>let mut _632: isize;<br align="left"/>let mut _633: isize;<br align="left"/>let mut _634: isize;<br align="left"/>let mut _635: isize;<br align="left"/>let mut _636: isize;<br align="left"/>let mut _637: isize;<br align="left"/>let mut _638: isize;<br align="left"/>let mut _639: isize;<br align="left"/>let mut _640: isize;<br align="left"/>let mut _641: isize;<br align="left"/>let mut _642: isize;<br align="left"/>let mut _643: isize;<br align="left"/>let mut _644: isize;<br align="left"/>let mut _645: isize;<br align="left"/>let mut _646: isize;<br align="left"/>let mut _647: isize;<br align="left"/>let mut _648: isize;<br align="left"/>let mut _649: isize;<br align="left"/>let mut _650: isize;<br align="left"/>let mut _651: isize;<br align="left"/>let mut _652: isize;<br align="left"/>let mut _653: isize;<br align="left"/>let mut _654: isize;<br align="left"/>let mut _655: isize;<br align="left"/>let mut _656: isize;<br align="left"/>let mut _657: isize;<br align="left"/>let mut _658: isize;<br align="left"/>let mut _659: isize;<br align="left"/>let mut _660: isize;<br align="left"/>let mut _661: isize;<br align="left"/>let mut _662: isize;<br align="left"/>let mut _663: isize;<br align="left"/>let mut _664: isize;<br align="left"/>let mut _665: isize;<br align="left"/>let mut _666: isize;<br align="left"/>let mut _667: isize;<br align="left"/>let mut _668: isize;<br align="left"/>let mut _669: isize;<br align="left"/>let mut _670: isize;<br align="left"/>let mut _671: isize;<br align="left"/>let mut _672: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _673: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _674: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _675: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _676: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _677: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug user_key =&gt; _14;<br align="left"/>debug user =&gt; _16;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug state =&gt; _28;<br align="left"/>debug clock =&gt; _29;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug now =&gt; _37;<br align="left"/>debug slot =&gt; _38;<br align="left"/>debug remaining_accounts_iter =&gt; _39;<br align="left"/>debug spot_market_map =&gt; _43;<br align="left"/>debug oracle_map =&gt; _44;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug mint =&gt; _66;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug error_code =&gt; _89;<br align="left"/>debug res =&gt; _96;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug spot_market =&gt; _115;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug oracle_price_data =&gt; _126;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug error_code =&gt; _153;<br align="left"/>debug res =&gt; _160;<br align="left"/>debug res =&gt; _179;<br align="left"/>debug residual =&gt; _201;<br align="left"/>debug val =&gt; _204;<br align="left"/>debug error_code =&gt; _213;<br align="left"/>debug res =&gt; _220;<br align="left"/>debug residual =&gt; _238;<br align="left"/>debug val =&gt; _241;<br align="left"/>debug residual =&gt; _254;<br align="left"/>debug val =&gt; _257;<br align="left"/>debug position_index =&gt; _258;<br align="left"/>debug residual =&gt; _268;<br align="left"/>debug val =&gt; _271;<br align="left"/>debug amount =&gt; _272;<br align="left"/>debug residual =&gt; _303;<br align="left"/>debug val =&gt; _306;<br align="left"/>debug residual =&gt; _308;<br align="left"/>debug val =&gt; _311;<br align="left"/>debug total_deposits_after =&gt; _313;<br align="left"/>debug total_withdraws_after =&gt; _316;<br align="left"/>debug spot_position =&gt; _319;<br align="left"/>debug residual =&gt; _340;<br align="left"/>debug val =&gt; _343;<br align="left"/>debug token_amount =&gt; _344;<br align="left"/>debug residual =&gt; _353;<br align="left"/>debug val =&gt; _356;<br align="left"/>debug error_code =&gt; _366;<br align="left"/>debug res =&gt; _373;<br align="left"/>debug res =&gt; _392;<br align="left"/>debug residual =&gt; _410;<br align="left"/>debug val =&gt; _413;<br align="left"/>debug error_code =&gt; _429;<br align="left"/>debug res =&gt; _436;<br align="left"/>debug res =&gt; _455;<br align="left"/>debug residual =&gt; _463;<br align="left"/>debug val =&gt; _466;<br align="left"/>debug spot_market =&gt; _474;<br align="left"/>debug residual =&gt; _482;<br align="left"/>debug val =&gt; _485;<br align="left"/>debug residual =&gt; _509;<br align="left"/>debug val =&gt; _512;<br align="left"/>debug residual =&gt; _518;<br align="left"/>debug val =&gt; _521;<br align="left"/>debug residual =&gt; _534;<br align="left"/>debug val =&gt; _537;<br align="left"/>debug deposit_record_id =&gt; _538;<br align="left"/>debug current_id =&gt; _539;<br align="left"/>debug oracle_price =&gt; _549;<br align="left"/>debug deposit_record =&gt; _550;<br align="left"/>debug residual =&gt; _597;<br align="left"/>debug val =&gt; _600;<br align="left"/>>;
    bb0__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_630 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_613 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_8 = &amp;((*_613).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_614 = deref_copy (*_8)<br/>_672 = (((_614.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_672)<br/></td></tr><tr><td align="left">_6 = constraints::deposit_not_paused(move _7)</td></tr></table>>];
    bb1__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_631 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_615 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_15 = &amp;((*_615).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _15)</td></tr></table>>];
    bb4__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_661 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_616 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_21 = &amp;((*_616).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_20 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _21)</td></tr></table>>];
    bb8__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_19 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _20, move _22)</td></tr></table>>];
    bb9__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb10__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_23 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb11__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_18 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_17 = move _27<br/>StorageDead(_27)<br/>_16 = &amp;mut _17<br/>_635 = discriminant(_18)<br/>StorageDead(_18)<br/>StorageLive(_28)<br/>_617 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_28 = &amp;((*_617).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/></td></tr><tr><td align="left">_31 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb12__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb13__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>_633 = discriminant(_18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb15__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_32 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_30 as Continue).0: anchor_lang::prelude::Clock)<br/>_29 = move _36<br/>StorageDead(_36)<br/>_637 = discriminant(_30)<br/>StorageDead(_30)<br/>StorageLive(_37)<br/>_37 = (_29.4: i64)<br/>StorageLive(_38)<br/>_38 = (_29.0: u64)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_618 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_42 = &amp;(*_618)<br/></td></tr><tr><td align="left">_41 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _42)</td></tr></table>>];
    bb17__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_35)<br/>_35 = move _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_659 = discriminant(_30)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _41)</td></tr></table>>];
    bb20__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = &amp;mut _40<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;mut (*_39)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/></td></tr><tr><td align="left">_51 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb21__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _2<br/></td></tr><tr><td align="left">_54 = get_writable_spot_market_set(move _55)</td></tr></table>>];
    bb22__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = &amp;_54<br/>_52 = &amp;(*_53)<br/>StorageLive(_56)<br/>_56 = (_29.0: u64)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_619 = deref_copy (*_28)<br/>_673 = (((_619.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_60 = &amp;(*_673)<br/></td></tr><tr><td align="left">_59 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb23__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_58 = ((*_59).7: state::state::OracleGuardRails)<br/>_57 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_47 = load_maps(move _48, move _49, move _52, move _56, move _57)</td></tr></table>>];
    bb24__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb25__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_61 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb26__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_46 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_45 = move _65<br/>StorageDead(_65)<br/>StorageLive(_43)<br/>_43 = move (_45.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_44)<br/>_44 = move (_45.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/></td></tr><tr><td align="left">drop((_45.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;))</td></tr></table>>];
    bb27__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb28__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>_639 = discriminant(_46)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb29__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb30__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_39)<br/></td></tr><tr><td align="left">_68 = get_token_mint(move _69)</td></tr></table>>];
    bb31__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb32__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_70 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb33__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = move ((_67 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_66 = move _74<br/>StorageDead(_74)<br/>StorageDead(_67)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _3<br/>_76 = Eq(move _77, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb34__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb35__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = error::ErrorCode::InsufficientDeposit<br/></td></tr><tr><td align="left">_79 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _80)</td></tr></table>>];
    bb37__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_75 = const ()<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;(*_16)<br/></td></tr><tr><td align="left">_86 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _87)</td></tr></table>>];
    bb38__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _79)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_85 = &amp;(*_86)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_84 = User::is_bankrupt(move _85)</td></tr></table>>];
    bb40__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb41__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_86)<br/>StorageLive(_89)<br/>_89 = error::ErrorCode::UserBankrupt<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_612 = const _<br/>_100 = &amp;(*_612)<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_89<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _107)</td></tr></table>>];
    bb42__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_86)<br/>StorageLive(_88)<br/>_88 = ()<br/>_83 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _88)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_105 = [move _106]<br/>StorageDead(_106)<br/>_104 = &amp;_105<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_97 = Arguments::&lt;'_&gt;::new_v1(move _98, move _102)</td></tr></table>>];
    bb44__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = format(move _97)</td></tr></table>>];
    bb45__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>_95 = move _96<br/>StorageDead(_96)<br/>_94 = &amp;_95<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = &lt;String as Deref&gt;::deref(move _93)</td></tr></table>>];
    bb46__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_91 = &amp;(*_92)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_90 = solana_program::log::sol_log(move _91)</td></tr></table>>];
    bb47__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb48__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageLive(_109)<br/>_109 = _89<br/>_83 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _109)<br/>StorageDead(_109)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb50__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_110 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb51__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_82 as Continue).0: ())<br/>_81 = _114<br/>StorageDead(_114)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;_43<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;_2<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_117 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _118, move _119)</td></tr></table>>];
    bb52__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb53__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb55__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_121 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb56__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = move ((_116 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_630 = const true<br/>_115 = move _125<br/>StorageDead(_125)<br/>_645 = discriminant(_116)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;mut _44<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_115<br/></td></tr><tr><td align="left">_135 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb57__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb58__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>_643 = discriminant(_116)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_134 = &amp;(*_135)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_133 = SpotMarket::oracle_id(move _134)</td></tr></table>>];
    bb60__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_132 = &amp;_133<br/>_131 = &amp;(*_132)<br/></td></tr><tr><td align="left">_129 = OracleMap::&lt;'_&gt;::get_price_data(move _130, move _131)</td></tr></table>>];
    bb61__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb62__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_137 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb63__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_128 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_127 = _141<br/>StorageDead(_141)<br/>_126 = (*_127)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;(*_16)<br/></td></tr><tr><td align="left">_147 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _148)</td></tr></table>>];
    bb64__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb65__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_146 = ((*_147).27: u8)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_115<br/></td></tr><tr><td align="left">_150 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _151)</td></tr></table>>];
    bb67__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_149 = ((*_150).62: u8)<br/>_145 = Eq(move _146, move _149)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb68__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageLive(_152)<br/>_152 = ()<br/>_144 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _152)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageLive(_153)<br/>_153 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_611 = const _<br/>_164 = &amp;(*_611)<br/>_163 = &amp;(*_164)<br/>_162 = move _163 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_163)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = &amp;_153<br/>_171 = &amp;(*_172)<br/></td></tr><tr><td align="left">_170 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _171)</td></tr></table>>];
    bb70__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_169 = [move _170]<br/>StorageDead(_170)<br/>_168 = &amp;_169<br/>_167 = &amp;(*_168)<br/>_166 = move _167 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">_161 = Arguments::&lt;'_&gt;::new_v1(move _162, move _166)</td></tr></table>>];
    bb71__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_160 = format(move _161)</td></tr></table>>];
    bb72__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_164)<br/>_159 = move _160<br/>StorageDead(_160)<br/>_158 = &amp;_159<br/>_157 = &amp;(*_158)<br/></td></tr><tr><td align="left">_156 = &lt;String as Deref&gt;::deref(move _157)</td></tr></table>>];
    bb73__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_155 = &amp;(*_156)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_154 = solana_program::log::sol_log(move _155)</td></tr></table>>];
    bb74__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_159)</td></tr></table>>];
    bb75__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_610 = const _<br/>_183 = &amp;(*_610)<br/>_182 = &amp;(*_183)<br/>_181 = move _182 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_182)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;(*_16)<br/></td></tr><tr><td align="left">_192 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb76__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>_191 = &amp;((*_192).27: u8)<br/>_190 = &amp;(*_191)<br/></td></tr><tr><td align="left">_189 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _190)</td></tr></table>>];
    bb77__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = &amp;_115<br/></td></tr><tr><td align="left">_197 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _198)</td></tr></table>>];
    bb78__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>_196 = &amp;((*_197).62: u8)<br/>_195 = &amp;(*_196)<br/></td></tr><tr><td align="left">_194 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _195)</td></tr></table>>];
    bb79__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>_188 = [move _189, move _194]<br/>StorageDead(_194)<br/>StorageDead(_189)<br/>_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/>_185 = move _186 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">_180 = Arguments::&lt;'_&gt;::new_v1(move _181, move _185)</td></tr></table>>];
    bb80__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = format(move _180)</td></tr></table>>];
    bb81__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_183)<br/>_178 = move _179<br/>StorageDead(_179)<br/>_177 = &amp;_178<br/>_176 = &amp;(*_177)<br/></td></tr><tr><td align="left">_175 = &lt;String as Deref&gt;::deref(move _176)</td></tr></table>>];
    bb82__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_174 = &amp;(*_175)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_173 = solana_program::log::sol_log(move _174)</td></tr></table>>];
    bb83__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/></td></tr><tr><td align="left">drop(_178)</td></tr></table>>];
    bb84__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageLive(_199)<br/>_199 = _153<br/>_144 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _199)<br/>StorageDead(_199)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _144)</td></tr></table>>];
    bb86__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_200 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb87__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_143 as Continue).0: ())<br/>_142 = _204<br/>StorageDead(_204)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;_115<br/></td></tr><tr><td align="left">_209 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _210)</td></tr></table>>];
    bb88__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_143 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_203)<br/>_203 = _201<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _203)</td></tr></table>>];
    bb89__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_211 = discriminant(((*_209).45: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _211)</td></tr></table>>];
    bb91__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_208 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_208 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb94__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageLive(_212)<br/>_212 = ()<br/>_207 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _212)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageLive(_213)<br/>_213 = error::ErrorCode::MarketBeingInitialized<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_609 = const _<br/>_224 = &amp;(*_609)<br/>_223 = &amp;(*_224)<br/>_222 = move _223 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_223)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;_213<br/>_231 = &amp;(*_232)<br/></td></tr><tr><td align="left">_230 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _231)</td></tr></table>>];
    bb96__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_229 = [move _230]<br/>StorageDead(_230)<br/>_228 = &amp;_229<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_221 = Arguments::&lt;'_&gt;::new_v1(move _222, move _226)</td></tr></table>>];
    bb97__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = format(move _221)</td></tr></table>>];
    bb98__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>_219 = move _220<br/>StorageDead(_220)<br/>_218 = &amp;_219<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_216 = &lt;String as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb99__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_215 = &amp;(*_216)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">_214 = solana_program::log::sol_log(move _215)</td></tr></table>>];
    bb100__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/></td></tr><tr><td align="left">drop(_219)</td></tr></table>>];
    bb101__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = const &quot;Market is being initialized&quot;<br/>_234 = &amp;(*_235)<br/></td></tr><tr><td align="left">_233 = solana_program::log::sol_log(move _234)</td></tr></table>>];
    bb102__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageLive(_236)<br/>_236 = _213<br/>_207 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _236)<br/>StorageDead(_236)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/></td></tr><tr><td align="left">_206 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _207)</td></tr></table>>];
    bb104__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>_237 = discriminant(_206)<br/></td></tr><tr><td align="left">switchInt(move _237)</td></tr></table>>];
    bb105__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_241 = ((_206 as Continue).0: ())<br/>_205 = _241<br/>StorageDead(_241)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;mut _115<br/>_247 = &amp;mut (*_248)<br/></td></tr><tr><td align="left">_246 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _247)</td></tr></table>>];
    bb106__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_238)<br/>_238 = ((_206 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_240)<br/>_240 = _238<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _240)</td></tr></table>>];
    bb107__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_245 = &amp;mut (*_246)<br/>StorageDead(_247)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = &amp;_126<br/>_250 = &amp;(*_251)<br/>_249 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _250)<br/>StorageDead(_250)<br/>StorageLive(_252)<br/>_252 = _37<br/></td></tr><tr><td align="left">_244 = controller::spot_balance::update_spot_market_cumulative_interest(move _245, move _249, move _252)</td></tr></table>>];
    bb109__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_249)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_243 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _244)</td></tr></table>>];
    bb110__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_253 = discriminant(_243)<br/></td></tr><tr><td align="left">switchInt(move _253)</td></tr></table>>];
    bb111__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_257)<br/>_257 = ((_243 as Continue).0: ())<br/>_242 = _257<br/>StorageDead(_257)<br/>StorageDead(_251)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_263 = &amp;mut (*_16)<br/></td></tr><tr><td align="left">_262 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _263)</td></tr></table>>];
    bb112__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_254)<br/>_254 = ((_243 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_256)<br/>_256 = _254<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _256)</td></tr></table>>];
    bb113__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_261 = &amp;mut (*_262)<br/>StorageDead(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = &amp;_115<br/></td></tr><tr><td align="left">_265 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _266)</td></tr></table>>];
    bb115__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>_264 = ((*_265).42: u16)<br/></td></tr><tr><td align="left">_260 = User::force_get_spot_position_index(move _261, move _264)</td></tr></table>>];
    bb116__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">_259 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _260)</td></tr></table>>];
    bb117__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>_267 = discriminant(_259)<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb118__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_259 as Continue).0: usize)<br/>_258 = _271<br/>StorageDead(_271)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>_276 = &amp;_115<br/></td></tr><tr><td align="left">_275 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _276)</td></tr></table>>];
    bb119__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_259 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_270)<br/>_270 = _268<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _270)</td></tr></table>>];
    bb120__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_274 = &amp;(*_275)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_273 = SpotMarket::is_reduce_only(move _274)</td></tr></table>>];
    bb122__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left">switchInt(move _273)</td></tr></table>>];
    bb123__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_274)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_280 = &amp;(*_16)<br/></td></tr><tr><td align="left">_279 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _280)</td></tr></table>>];
    bb124__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageLive(_281)<br/>_281 = _258<br/>_282 = Len(((*_279).3: [state::user::SpotPosition; 8]))<br/>_283 = Lt(_281, _282)<br/></td></tr><tr><td align="left">assert(move _283, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _282, _281)</td></tr></table>>];
    bb125__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">_278 = &amp;(((*_279).3: [state::user::SpotPosition; 8])[_281].5: state::spot_market::SpotBalanceType)<br/>StorageLive(_284)<br/>_608 = const _<br/>_284 = &amp;(*_608)<br/></td></tr><tr><td align="left">_277 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _278, move _284)</td></tr></table>>];
    bb126__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb127__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;(*_16)<br/></td></tr><tr><td align="left">_293 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _294)</td></tr></table>>];
    bb128__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageLive(_295)<br/>_295 = _258<br/>_296 = Len(((*_293).3: [state::user::SpotPosition; 8]))<br/>_297 = Lt(_295, _296)<br/></td></tr><tr><td align="left">assert(move _297, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _296, _295)</td></tr></table>>];
    bb129__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_292 = &amp;((*_293).3: [state::user::SpotPosition; 8])[_295]<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = &amp;_115<br/>_300 = &amp;(*_301)<br/></td></tr><tr><td align="left">_299 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _300)</td></tr></table>>];
    bb130__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_298 = &amp;(*_299)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">_291 = SpotPosition::get_token_amount(move _292, move _298)</td></tr></table>>];
    bb131__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">_290 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _291)</td></tr></table>>];
    bb132__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>_302 = discriminant(_290)<br/></td></tr><tr><td align="left">switchInt(move _302)</td></tr></table>>];
    bb133__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_306)<br/>_306 = ((_290 as Continue).0: u128)<br/>_289 = _306<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_288 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _289)</td></tr></table>>];
    bb134__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_303)<br/>_303 = ((_290 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_305)<br/>_305 = _303<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _305)</td></tr></table>>];
    bb135__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_303)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/></td></tr><tr><td align="left">_287 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _288)</td></tr></table>>];
    bb137__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>_307 = discriminant(_287)<br/></td></tr><tr><td align="left">switchInt(move _307)</td></tr></table>>];
    bb138__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_311)<br/>_311 = ((_287 as Continue).0: u64)<br/>_286 = _311<br/>StorageDead(_311)<br/>StorageLive(_312)<br/>_312 = _3<br/></td></tr><tr><td align="left">_272 = &lt;u64 as Ord&gt;::min(move _286, move _312)</td></tr></table>>];
    bb139__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_287 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_310)<br/>_310 = _308<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _310)</td></tr></table>>];
    bb140__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_286)<br/>StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_272 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_273)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = &amp;(*_16)<br/></td></tr><tr><td align="left">_314 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _315)</td></tr></table>>];
    bb146__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_313 = ((*_314).7: u64)<br/>StorageDead(_314)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;(*_16)<br/></td></tr><tr><td align="left">_317 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _318)</td></tr></table>>];
    bb147__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_316 = ((*_317).8: u64)<br/>StorageDead(_317)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_321 = &amp;mut (*_16)<br/></td></tr><tr><td align="left">_320 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _321)</td></tr></table>>];
    bb148__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageLive(_322)<br/>_322 = _258<br/>_323 = Len(((*_320).3: [state::user::SpotPosition; 8]))<br/>_324 = Lt(_322, _323)<br/></td></tr><tr><td align="left">assert(move _324, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _323, _322)</td></tr></table>>];
    bb149__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">_319 = &amp;mut ((*_320).3: [state::user::SpotPosition; 8])[_322]<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = _272<br/>_328 = move _329 as u128 (IntToInt)<br/>StorageDead(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>_607 = const _<br/>_331 = &amp;(*_607)<br/>_330 = &amp;(*_331)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>_336 = &amp;mut _115<br/>_335 = &amp;mut (*_336)<br/></td></tr><tr><td align="left">_334 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _335)</td></tr></table>>];
    bb150__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">_333 = &amp;mut (*_334)<br/>StorageDead(_335)<br/>StorageLive(_337)<br/>_337 = &amp;mut (*_319)<br/>StorageLive(_338)<br/>_338 = Option::&lt;u128&gt;::None<br/></td></tr><tr><td align="left">_327 = update_spot_balances_and_cumulative_deposits(move _328, move _330, move _333, move _337, const false, move _338)</td></tr></table>>];
    bb151__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_337)<br/>StorageDead(_333)<br/>StorageDead(_330)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_326 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _327)</td></tr></table>>];
    bb152__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>_339 = discriminant(_326)<br/></td></tr><tr><td align="left">switchInt(move _339)</td></tr></table>>];
    bb153__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_343)<br/>_343 = ((_326 as Continue).0: ())<br/>_325 = _343<br/>StorageDead(_343)<br/>StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_331)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>_347 = &amp;(*_319)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;_115<br/>_350 = &amp;(*_351)<br/></td></tr><tr><td align="left">_349 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _350)</td></tr></table>>];
    bb154__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_340)<br/>_340 = ((_326 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_342)<br/>_342 = _340<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _342)</td></tr></table>>];
    bb155__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_340)<br/>StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_331)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">_348 = &amp;(*_349)<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">_346 = SpotPosition::get_token_amount(move _347, move _348)</td></tr></table>>];
    bb157__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_345 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _346)</td></tr></table>>];
    bb158__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>_352 = discriminant(_345)<br/></td></tr><tr><td align="left">switchInt(move _352)</td></tr></table>>];
    bb159__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_356)<br/>_356 = ((_345 as Continue).0: u128)<br/>_344 = _356<br/>StorageDead(_356)<br/>StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_345)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = _344<br/>_358 = Eq(move _359, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _358)</td></tr></table>>];
    bb160__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_353)<br/>_353 = ((_345 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_355)<br/>_355 = _353<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _355)</td></tr></table>>];
    bb161__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = ((*_319).0: u64)<br/>_363 = Eq(move _364, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _363)</td></tr></table>>];
    bb163__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>_357 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>StorageLive(_365)<br/>_365 = ()<br/>_362 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _365)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>StorageLive(_366)<br/>_366 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_606 = const _<br/>_377 = &amp;(*_606)<br/>_376 = &amp;(*_377)<br/>_375 = move _376 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_376)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>_385 = &amp;_366<br/>_384 = &amp;(*_385)<br/></td></tr><tr><td align="left">_383 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _384)</td></tr></table>>];
    bb166__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>_382 = [move _383]<br/>StorageDead(_383)<br/>_381 = &amp;_382<br/>_380 = &amp;(*_381)<br/>_379 = move _380 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_380)<br/></td></tr><tr><td align="left">_374 = Arguments::&lt;'_&gt;::new_v1(move _375, move _379)</td></tr></table>>];
    bb167__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">_373 = format(move _374)</td></tr></table>>];
    bb168__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_385)<br/>StorageDead(_382)<br/>StorageDead(_381)<br/>StorageDead(_377)<br/>_372 = move _373<br/>StorageDead(_373)<br/>_371 = &amp;_372<br/>_370 = &amp;(*_371)<br/></td></tr><tr><td align="left">_369 = &lt;String as Deref&gt;::deref(move _370)</td></tr></table>>];
    bb169__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">_368 = &amp;(*_369)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">_367 = solana_program::log::sol_log(move _368)</td></tr></table>>];
    bb170__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/></td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb171__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_371)<br/>StorageDead(_369)<br/>StorageDead(_367)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>_605 = const _<br/>_396 = &amp;(*_605)<br/>_395 = &amp;(*_396)<br/>_394 = move _395 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_395)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;((*_319).0: u64)<br/>_403 = &amp;(*_404)<br/></td></tr><tr><td align="left">_402 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _403)</td></tr></table>>];
    bb172__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>_407 = &amp;_344<br/>_406 = &amp;(*_407)<br/></td></tr><tr><td align="left">_405 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _406)</td></tr></table>>];
    bb173__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>_401 = [move _402, move _405]<br/>StorageDead(_405)<br/>StorageDead(_402)<br/>_400 = &amp;_401<br/>_399 = &amp;(*_400)<br/>_398 = move _399 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">_393 = Arguments::&lt;'_&gt;::new_v1(move _394, move _398)</td></tr></table>>];
    bb174__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_394)<br/></td></tr><tr><td align="left">_392 = format(move _393)</td></tr></table>>];
    bb175__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_407)<br/>StorageDead(_404)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_396)<br/>_391 = move _392<br/>StorageDead(_392)<br/>_390 = &amp;_391<br/>_389 = &amp;(*_390)<br/></td></tr><tr><td align="left">_388 = &lt;String as Deref&gt;::deref(move _389)</td></tr></table>>];
    bb176__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">_387 = &amp;(*_388)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">_386 = solana_program::log::sol_log(move _387)</td></tr></table>>];
    bb177__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/></td></tr><tr><td align="left">drop(_391)</td></tr></table>>];
    bb178__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageDead(_386)<br/>StorageLive(_408)<br/>_408 = _366<br/>_362 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _408)<br/>StorageDead(_408)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/></td></tr><tr><td align="left">_361 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _362)</td></tr></table>>];
    bb180__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>_409 = discriminant(_361)<br/></td></tr><tr><td align="left">switchInt(move _409)</td></tr></table>>];
    bb181__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageLive(_413)<br/>_413 = ((_361 as Continue).0: ())<br/>_360 = _413<br/>StorageDead(_413)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>_357 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageLive(_410)<br/>_410 = ((_361 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_412)<br/>_412 = _410<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _412)</td></tr></table>>];
    bb183__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/>StorageDead(_357)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>_416 = &amp;((*_319).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_417)<br/>_604 = const _<br/>_417 = &amp;(*_604)<br/></td></tr><tr><td align="left">_415 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _416, move _417)</td></tr></table>>];
    bb185__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb186__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_420 = ((*_319).0: u64)<br/>_419 = Gt(move _420, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _419)</td></tr></table>>];
    bb187__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>_426 = &amp;_115<br/></td></tr><tr><td align="left">_425 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _426)</td></tr></table>>];
    bb188__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>_427 = discriminant(((*_425).45: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _427)</td></tr></table>>];
    bb189__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">_424 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">_424 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left">switchInt(move _424)</td></tr></table>>];
    bb192__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/>StorageLive(_428)<br/>_428 = ()<br/>_423 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _428)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/>StorageLive(_429)<br/>_429 = error::ErrorCode::MarketActionPaused<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_603 = const _<br/>_440 = &amp;(*_603)<br/>_439 = &amp;(*_440)<br/>_438 = move _439 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_439)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>_448 = &amp;_429<br/>_447 = &amp;(*_448)<br/></td></tr><tr><td align="left">_446 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _447)</td></tr></table>>];
    bb194__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>_445 = [move _446]<br/>StorageDead(_446)<br/>_444 = &amp;_445<br/>_443 = &amp;(*_444)<br/>_442 = move _443 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_443)<br/></td></tr><tr><td align="left">_437 = Arguments::&lt;'_&gt;::new_v1(move _438, move _442)</td></tr></table>>];
    bb195__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>StorageDead(_438)<br/></td></tr><tr><td align="left">_436 = format(move _437)</td></tr></table>>];
    bb196__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_448)<br/>StorageDead(_445)<br/>StorageDead(_444)<br/>StorageDead(_440)<br/>_435 = move _436<br/>StorageDead(_436)<br/>_434 = &amp;_435<br/>_433 = &amp;(*_434)<br/></td></tr><tr><td align="left">_432 = &lt;String as Deref&gt;::deref(move _433)</td></tr></table>>];
    bb197__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">_431 = &amp;(*_432)<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">_430 = solana_program::log::sol_log(move _431)</td></tr></table>>];
    bb198__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/></td></tr><tr><td align="left">drop(_435)</td></tr></table>>];
    bb199__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_434)<br/>StorageDead(_432)<br/>StorageDead(_430)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>_602 = const _<br/>_459 = &amp;(*_602)<br/>_458 = &amp;(*_459)<br/>_457 = move _458 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_458)<br/></td></tr><tr><td align="left">_456 = Arguments::&lt;'_&gt;::new_const(move _457)</td></tr></table>>];
    bb200__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/></td></tr><tr><td align="left">_455 = format(move _456)</td></tr></table>>];
    bb201__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_459)<br/>_454 = move _455<br/>StorageDead(_455)<br/>_453 = &amp;_454<br/>_452 = &amp;(*_453)<br/></td></tr><tr><td align="left">_451 = &lt;String as Deref&gt;::deref(move _452)</td></tr></table>>];
    bb202__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">_450 = &amp;(*_451)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">_449 = solana_program::log::sol_log(move _450)</td></tr></table>>];
    bb203__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/></td></tr><tr><td align="left">drop(_454)</td></tr></table>>];
    bb204__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>StorageDead(_453)<br/>StorageDead(_451)<br/>StorageDead(_449)<br/>StorageLive(_461)<br/>_461 = _429<br/>_423 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _461)<br/>StorageDead(_461)<br/>StorageDead(_429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/></td></tr><tr><td align="left">_422 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _423)</td></tr></table>>];
    bb206__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>_462 = discriminant(_422)<br/></td></tr><tr><td align="left">switchInt(move _462)</td></tr></table>>];
    bb207__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageLive(_466)<br/>_466 = ((_422 as Continue).0: ())<br/>_421 = _466<br/>StorageDead(_466)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/>_414 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageLive(_463)<br/>_463 = ((_422 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_465)<br/>_465 = _463<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _465)</td></tr></table>>];
    bb209__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_463)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/>StorageDead(_419)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">_414 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>_630 = const false<br/>_468 = move _115<br/></td></tr><tr><td align="left">_467 = std::mem::drop::&lt;RefMut&lt;'_, SpotMarket&gt;&gt;(move _468)</td></tr></table>>];
    bb214__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>StorageDead(_467)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_472 = &amp;mut (*_16)<br/></td></tr><tr><td align="left">_471 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _472)</td></tr></table>>];
    bb215__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">_470 = &amp;mut (*_471)<br/>StorageDead(_472)<br/>StorageLive(_473)<br/>_473 = _38<br/></td></tr><tr><td align="left">_469 = User::update_last_active_slot(move _470, move _473)</td></tr></table>>];
    bb216__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageDead(_470)<br/>StorageDead(_471)<br/>StorageDead(_469)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_478 = &amp;_43<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_480 = &amp;_2<br/>_479 = &amp;(*_480)<br/></td></tr><tr><td align="left">_477 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _478, move _479)</td></tr></table>>];
    bb217__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">_476 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _477)</td></tr></table>>];
    bb218__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>_481 = discriminant(_476)<br/></td></tr><tr><td align="left">switchInt(move _481)</td></tr></table>>];
    bb219__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageLive(_485)<br/>_485 = move ((_476 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_475 = move _485<br/>StorageDead(_485)<br/>_474 = &amp;mut _475<br/>_649 = discriminant(_476)<br/>StorageDead(_480)<br/>StorageDead(_476)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>_620 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_490 = &amp;((*_620).5: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_489 = &amp;(*_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>_621 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_492 = &amp;((*_621).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_622 = deref_copy (*_492)<br/>_674 = (((_622.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_491 = &amp;(*_674)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>_623 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_494 = &amp;((*_623).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_624 = deref_copy (*_494)<br/>_675 = (((_624.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_493 = &amp;(*_675)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>_625 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_498 = &amp;((*_625).2: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_497 = &amp;(*_498)<br/></td></tr><tr><td align="left">_496 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _497)</td></tr></table>>];
    bb220__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_482)<br/>_482 = ((_476 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_484)<br/>_484 = _482<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _484)</td></tr></table>>];
    bb221__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageDead(_482)<br/>_647 = discriminant(_476)<br/>StorageDead(_480)<br/>StorageDead(_476)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">_495 = &amp;(*_496)<br/>StorageDead(_497)<br/>StorageLive(_499)<br/>_499 = _272<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>_501 = &amp;_66<br/>_500 = &amp;(*_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>_506 = &amp;(*_474)<br/></td></tr><tr><td align="left">_505 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _506)</td></tr></table>>];
    bb223__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">_504 = &amp;(*_505)<br/>StorageDead(_506)<br/></td></tr><tr><td align="left">_503 = SpotMarket::has_transfer_hook(move _504)</td></tr></table>>];
    bb224__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left">switchInt(move _503)</td></tr></table>>];
    bb225__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>StorageDead(_504)<br/>StorageLive(_507)<br/>_507 = &amp;mut (*_39)<br/>_502 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _507)<br/>StorageDead(_507)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>StorageDead(_504)<br/>_502 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/></td></tr><tr><td align="left">_488 = receive(move _489, move _491, move _493, move _495, move _499, move _500, move _502)</td></tr></table>>];
    bb228__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_500)<br/>StorageDead(_499)<br/>StorageDead(_495)<br/>StorageDead(_493)<br/>StorageDead(_491)<br/>StorageDead(_489)<br/></td></tr><tr><td align="left">_487 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _488)</td></tr></table>>];
    bb229__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>_508 = discriminant(_487)<br/></td></tr><tr><td align="left">switchInt(move _508)</td></tr></table>>];
    bb230__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_512)<br/>_512 = ((_487 as Continue).0: ())<br/>_486 = _512<br/>StorageDead(_512)<br/>_651 = discriminant(_487)<br/>StorageDead(_501)<br/>StorageDead(_498)<br/>StorageDead(_496)<br/>StorageDead(_494)<br/>StorageDead(_492)<br/>StorageDead(_490)<br/>StorageDead(_487)<br/>StorageDead(_486)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>_626 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_627 = deref_copy ((*_626).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_676 = (((_627.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_516 = &amp;mut (*_676)<br/></td></tr><tr><td align="left">_515 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _516)</td></tr></table>>];
    bb231__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_509)<br/>_509 = move ((_487 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_511)<br/>_511 = move _509<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _511)</td></tr></table>>];
    bb232__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>StorageDead(_509)<br/>_657 = discriminant(_487)<br/>StorageDead(_501)<br/>StorageDead(_498)<br/>StorageDead(_496)<br/>StorageDead(_494)<br/>StorageDead(_492)<br/>StorageDead(_490)<br/>StorageDead(_487)<br/>StorageDead(_486)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/></td></tr><tr><td align="left">_514 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _515)</td></tr></table>>];
    bb234__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>_517 = discriminant(_514)<br/></td></tr><tr><td align="left">switchInt(move _517)</td></tr></table>>];
    bb235__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageLive(_521)<br/>_521 = ((_514 as Continue).0: ())<br/>_513 = _521<br/>StorageDead(_521)<br/>_653 = discriminant(_514)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>_527 = &amp;(*_474)<br/></td></tr><tr><td align="left">_526 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _527)</td></tr></table>>];
    bb236__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_518)<br/>_518 = move ((_514 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_520)<br/>_520 = move _518<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _520)</td></tr></table>>];
    bb237__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>StorageDead(_518)<br/>_655 = discriminant(_514)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">_525 = &amp;(*_526)<br/>StorageDead(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>_628 = deref_copy (_1.1: &amp;mut instructions::admin::AdminDeposit&lt;'_&gt;)<br/>_629 = deref_copy ((*_628).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_677 = (((_629.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_532 = &amp;(*_677)<br/></td></tr><tr><td align="left">_531 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _532)</td></tr></table>>];
    bb239__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">_530 = &amp;(*_531)<br/></td></tr><tr><td align="left">_529 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _530)</td></tr></table>>];
    bb240__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_530)<br/>_528 = ((*_529).2: u64)<br/></td></tr><tr><td align="left">_524 = validate_spot_market_vault_amount(move _525, move _528)</td></tr></table>>];
    bb241__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageDead(_525)<br/></td></tr><tr><td align="left">_523 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _524)</td></tr></table>>];
    bb242__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>_533 = discriminant(_523)<br/></td></tr><tr><td align="left">switchInt(move _533)</td></tr></table>>];
    bb243__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageLive(_537)<br/>_537 = ((_523 as Continue).0: i64)<br/>_522 = _537<br/>StorageDead(_537)<br/>StorageDead(_531)<br/>StorageDead(_529)<br/>StorageDead(_526)<br/>StorageDead(_523)<br/>StorageDead(_522)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>_541 = &amp;(*_474)<br/></td></tr><tr><td align="left">_540 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _541)</td></tr></table>>];
    bb244__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_534)<br/>_534 = ((_523 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_536)<br/>_536 = _534<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _536)</td></tr></table>>];
    bb245__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_534)<br/>StorageDead(_531)<br/>StorageDead(_529)<br/>StorageDead(_526)<br/>StorageDead(_523)<br/>StorageDead(_522)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>_539 = ((*_540).30: u64)<br/>StorageDead(_540)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>_545 = _539<br/></td></tr><tr><td align="left">_544 = core::num::&lt;impl u64&gt;::checked_add(move _545, const 1_u64)</td></tr></table>>];
    bb247__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageLive(_546)<br/>_546 = Option::&lt;u64&gt;::Some(const 1_u64)<br/></td></tr><tr><td align="left">_543 = Option::&lt;u64&gt;::or(move _544, move _546)</td></tr></table>>];
    bb248__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">_542 = Option::&lt;u64&gt;::unwrap(move _543)</td></tr></table>>];
    bb249__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>_548 = &amp;mut (*_474)<br/></td></tr><tr><td align="left">_547 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _548)</td></tr></table>>];
    bb250__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>((*_547).30: u64) = move _542<br/>StorageDead(_542)<br/>StorageDead(_547)<br/>_538 = _539<br/>StorageDead(_539)<br/>StorageLive(_549)<br/>_549 = (_126.0: i64)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = _37<br/>StorageLive(_552)<br/>_552 = _538<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>_555 = &amp;(*_16)<br/></td></tr><tr><td align="left">_554 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _555)</td></tr></table>>];
    bb251__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/>_553 = ((*_554).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_556)<br/>_556 = _14<br/>StorageLive(_557)<br/>_557 = DepositDirection::Deposit<br/>StorageLive(_558)<br/>_558 = _272<br/>StorageLive(_559)<br/>_559 = _549<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>_562 = &amp;(*_474)<br/></td></tr><tr><td align="left">_561 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _562)</td></tr></table>>];
    bb252__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>_560 = ((*_561).11: u128)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>_565 = &amp;(*_474)<br/></td></tr><tr><td align="left">_564 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _565)</td></tr></table>>];
    bb253__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>_563 = ((*_564).12: u128)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>_568 = &amp;(*_474)<br/></td></tr><tr><td align="left">_567 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _568)</td></tr></table>>];
    bb254__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_568)<br/>_566 = ((*_567).13: u128)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>_571 = &amp;(*_474)<br/></td></tr><tr><td align="left">_570 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _571)</td></tr></table>>];
    bb255__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>_569 = ((*_570).14: u128)<br/>StorageLive(_572)<br/>_572 = _313<br/>StorageLive(_573)<br/>_573 = _316<br/>StorageLive(_574)<br/>_574 = _2<br/>StorageLive(_575)<br/>_575 = DepositExplanation::Reward<br/>StorageLive(_576)<br/>_576 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>_550 = DepositRecord { ts: move _551, user_authority: move _553, user: move _556, direction: move _557, deposit_record_id: move _552, amount: move _558, market_index: move _574, oracle_price: move _559, market_deposit_balance: move _560, market_withdraw_balance: move _563, market_cumulative_deposit_interest: move _566, market_cumulative_borrow_interest: move _569, total_deposits_after: move _572, total_withdraws_after: move _573, explanation: move _575, transfer_user: move _576 }<br/>StorageDead(_576)<br/>StorageDead(_575)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageDead(_572)<br/>StorageDead(_569)<br/>StorageDead(_566)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageDead(_557)<br/>StorageDead(_556)<br/>StorageDead(_553)<br/>StorageDead(_552)<br/>StorageDead(_551)<br/>StorageDead(_570)<br/>StorageDead(_567)<br/>StorageDead(_564)<br/>StorageDead(_561)<br/>StorageDead(_554)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>_589 = &amp;_550<br/>_588 = &amp;(*_589)<br/></td></tr><tr><td align="left">_587 = &lt;DepositRecord as anchor_lang::Event&gt;::data(move _588)</td></tr></table>>];
    bb256__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>_586 = &amp;_587<br/>_585 = &amp;(*_586)<br/></td></tr><tr><td align="left">_584 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _585)</td></tr></table>>];
    bb257__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">_583 = &amp;(*_584)<br/>StorageDead(_585)<br/>_582 = [move _583]<br/>StorageDead(_583)<br/>_581 = &amp;_582<br/>_580 = &amp;(*_581)<br/>_579 = move _580 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">_578 = solana_program::log::sol_log_data(move _579)</td></tr></table>>];
    bb258__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_579)<br/></td></tr><tr><td align="left">drop(_587)</td></tr></table>>];
    bb259__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_589)<br/>StorageDead(_587)<br/>StorageDead(_586)<br/>StorageDead(_584)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/>StorageDead(_578)<br/>_577 = const ()<br/>StorageDead(_577)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>_595 = &amp;(*_474)<br/></td></tr><tr><td align="left">_594 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _595)</td></tr></table>>];
    bb260__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">_593 = &amp;(*_594)<br/>StorageDead(_595)<br/></td></tr><tr><td align="left">_592 = SpotMarket::validate_max_token_deposits_and_borrows(move _593, const false)</td></tr></table>>];
    bb261__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/></td></tr><tr><td align="left">_591 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _592)</td></tr></table>>];
    bb262__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>_596 = discriminant(_591)<br/></td></tr><tr><td align="left">switchInt(move _596)</td></tr></table>>];
    bb263__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_600)<br/>_600 = ((_591 as Continue).0: ())<br/>_590 = _600<br/>StorageDead(_600)<br/>StorageDead(_594)<br/>StorageDead(_591)<br/>StorageDead(_590)<br/>StorageLive(_601)<br/>_601 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _601)<br/>StorageDead(_601)<br/>StorageDead(_550)<br/>StorageDead(_549)<br/>StorageDead(_538)<br/></td></tr><tr><td align="left">drop(_475)</td></tr></table>>];
    bb264__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_597)<br/>_597 = ((_591 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_599)<br/>_599 = _597<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _599)</td></tr></table>>];
    bb265__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageDead(_597)<br/>StorageDead(_594)<br/>StorageDead(_591)<br/>StorageDead(_590)<br/>StorageDead(_550)<br/>StorageDead(_549)<br/>StorageDead(_538)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_474)<br/>StorageDead(_344)<br/>StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/>StorageDead(_272)<br/>StorageDead(_258)<br/>StorageDead(_126)<br/>_630 = const false<br/>StorageDead(_115)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb267__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb268__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb269__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left">drop(_475)</td></tr></table>>];
    bb271__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_474)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">switchInt(_630)</td></tr></table>>];
    bb278__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">_630 = const false<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb280__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb281__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb283__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb285__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb286__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left">return</td></tr></table>>];
    bb288__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left">drop(_587)</td></tr></table>>];
    bb289__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">289 (cleanup)</td></tr><tr><td align="left">drop(_475)</td></tr></table>>];
    bb290__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">290 (cleanup)</td></tr><tr><td align="left">drop(_454)</td></tr></table>>];
    bb291__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">291 (cleanup)</td></tr><tr><td align="left">drop(_435)</td></tr></table>>];
    bb292__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left">drop(_391)</td></tr></table>>];
    bb293__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb294__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left">drop(_219)</td></tr></table>>];
    bb295__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left">drop(_178)</td></tr></table>>];
    bb296__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left">drop(_159)</td></tr></table>>];
    bb297__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb298__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb299__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb300__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb301__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">301 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb302__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">302 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb303__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb304__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb305__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">305 (cleanup)</td></tr><tr><td align="left" balign="left">_667 = discriminant(_46)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb306__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">_641 = discriminant(_46)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb307__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left">drop(_115)</td></tr></table>>];
    bb308__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">308 (cleanup)</td></tr><tr><td align="left" balign="left">_663 = discriminant(_514)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">309 (cleanup)</td></tr><tr><td align="left" balign="left">_664 = discriminant(_487)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">310 (cleanup)</td></tr><tr><td align="left" balign="left">_665 = discriminant(_476)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">311 (cleanup)</td></tr><tr><td align="left">drop(_115)</td></tr></table>>];
    bb312__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">312 (cleanup)</td></tr><tr><td align="left">switchInt(_630)</td></tr></table>>];
    bb313__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">313 (cleanup)</td></tr><tr><td align="left" balign="left">_666 = discriminant(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">314 (cleanup)</td></tr><tr><td align="left" balign="left">_668 = discriminant(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">315 (cleanup)</td></tr><tr><td align="left" balign="left">_669 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">316 (cleanup)</td></tr><tr><td align="left" balign="left">_670 = discriminant(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_5656 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">317 (cleanup)</td></tr><tr><td align="left" balign="left">_671 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5656 -> bb1__0_5656 [label="return"];
    bb1__0_5656 -> bb2__0_5656 [label="return"];
    bb1__0_5656 -> bb304__0_5656 [label="unwind"];
    bb2__0_5656 -> bb3__0_5656 [label="0"];
    bb2__0_5656 -> bb5__0_5656 [label="1"];
    bb2__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb3__0_5656 -> bb7__0_5656 [label="return"];
    bb5__0_5656 -> bb6__0_5656 [label="return"];
    bb5__0_5656 -> bb317__0_5656 [label="unwind"];
    bb6__0_5656 -> bb287__0_5656 [label=""];
    bb7__0_5656 -> bb8__0_5656 [label="return"];
    bb8__0_5656 -> bb9__0_5656 [label="return"];
    bb8__0_5656 -> bb304__0_5656 [label="unwind"];
    bb9__0_5656 -> bb10__0_5656 [label="return"];
    bb9__0_5656 -> bb304__0_5656 [label="unwind"];
    bb10__0_5656 -> bb11__0_5656 [label="0"];
    bb10__0_5656 -> bb12__0_5656 [label="1"];
    bb10__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb11__0_5656 -> bb14__0_5656 [label="return"];
    bb11__0_5656 -> bb303__0_5656 [label="unwind"];
    bb12__0_5656 -> bb13__0_5656 [label="return"];
    bb12__0_5656 -> bb316__0_5656 [label="unwind"];
    bb13__0_5656 -> bb286__0_5656 [label=""];
    bb14__0_5656 -> bb15__0_5656 [label="return"];
    bb14__0_5656 -> bb303__0_5656 [label="unwind"];
    bb15__0_5656 -> bb16__0_5656 [label="0"];
    bb15__0_5656 -> bb17__0_5656 [label="1"];
    bb15__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb16__0_5656 -> bb19__0_5656 [label="return"];
    bb16__0_5656 -> bb303__0_5656 [label="unwind"];
    bb17__0_5656 -> bb18__0_5656 [label="return"];
    bb17__0_5656 -> bb315__0_5656 [label="unwind"];
    bb18__0_5656 -> bb285__0_5656 [label=""];
    bb19__0_5656 -> bb20__0_5656 [label="return"];
    bb19__0_5656 -> bb303__0_5656 [label="unwind"];
    bb20__0_5656 -> bb21__0_5656 [label="return"];
    bb20__0_5656 -> bb303__0_5656 [label="unwind"];
    bb21__0_5656 -> bb22__0_5656 [label="return"];
    bb21__0_5656 -> bb302__0_5656 [label="unwind"];
    bb22__0_5656 -> bb23__0_5656 [label="return"];
    bb22__0_5656 -> bb301__0_5656 [label="unwind"];
    bb23__0_5656 -> bb24__0_5656 [label="return"];
    bb23__0_5656 -> bb301__0_5656 [label="unwind"];
    bb24__0_5656 -> bb25__0_5656 [label="return"];
    bb24__0_5656 -> bb301__0_5656 [label="unwind"];
    bb25__0_5656 -> bb26__0_5656 [label="0"];
    bb25__0_5656 -> bb27__0_5656 [label="1"];
    bb25__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb26__0_5656 -> bb306__0_5656 [label="return"];
    bb26__0_5656 -> bb305__0_5656 [label="unwind"];
    bb27__0_5656 -> bb28__0_5656 [label="return"];
    bb27__0_5656 -> bb314__0_5656 [label="unwind"];
    bb28__0_5656 -> bb282__0_5656 [label="return"];
    bb28__0_5656 -> bb302__0_5656 [label="unwind"];
    bb29__0_5656 -> bb30__0_5656 [label="return"];
    bb29__0_5656 -> bb299__0_5656 [label="unwind"];
    bb30__0_5656 -> bb31__0_5656 [label="return"];
    bb30__0_5656 -> bb299__0_5656 [label="unwind"];
    bb31__0_5656 -> bb32__0_5656 [label="return"];
    bb31__0_5656 -> bb299__0_5656 [label="unwind"];
    bb32__0_5656 -> bb33__0_5656 [label="0"];
    bb32__0_5656 -> bb34__0_5656 [label="1"];
    bb32__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb33__0_5656 -> bb37__0_5656 [label="0"];
    bb33__0_5656 -> bb36__0_5656 [label="otherwise"];
    bb34__0_5656 -> bb35__0_5656 [label="return"];
    bb34__0_5656 -> bb299__0_5656 [label="unwind"];
    bb35__0_5656 -> bb279__0_5656 [label=""];
    bb36__0_5656 -> bb38__0_5656 [label="return"];
    bb36__0_5656 -> bb299__0_5656 [label="unwind"];
    bb37__0_5656 -> bb39__0_5656 [label="return"];
    bb37__0_5656 -> bb299__0_5656 [label="unwind"];
    bb38__0_5656 -> bb279__0_5656 [label=""];
    bb39__0_5656 -> bb40__0_5656 [label="return"];
    bb39__0_5656 -> bb299__0_5656 [label="unwind"];
    bb40__0_5656 -> bb42__0_5656 [label="0"];
    bb40__0_5656 -> bb41__0_5656 [label="otherwise"];
    bb41__0_5656 -> bb43__0_5656 [label="return"];
    bb41__0_5656 -> bb299__0_5656 [label="unwind"];
    bb42__0_5656 -> bb49__0_5656 [label=""];
    bb43__0_5656 -> bb44__0_5656 [label="return"];
    bb43__0_5656 -> bb299__0_5656 [label="unwind"];
    bb44__0_5656 -> bb45__0_5656 [label="return"];
    bb44__0_5656 -> bb299__0_5656 [label="unwind"];
    bb45__0_5656 -> bb46__0_5656 [label="return"];
    bb45__0_5656 -> bb297__0_5656 [label="unwind"];
    bb46__0_5656 -> bb47__0_5656 [label="return"];
    bb46__0_5656 -> bb297__0_5656 [label="unwind"];
    bb47__0_5656 -> bb48__0_5656 [label="return"];
    bb47__0_5656 -> bb299__0_5656 [label="unwind"];
    bb48__0_5656 -> bb49__0_5656 [label=""];
    bb49__0_5656 -> bb50__0_5656 [label="return"];
    bb49__0_5656 -> bb299__0_5656 [label="unwind"];
    bb50__0_5656 -> bb51__0_5656 [label="0"];
    bb50__0_5656 -> bb52__0_5656 [label="1"];
    bb50__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb51__0_5656 -> bb54__0_5656 [label="return"];
    bb51__0_5656 -> bb299__0_5656 [label="unwind"];
    bb52__0_5656 -> bb53__0_5656 [label="return"];
    bb52__0_5656 -> bb299__0_5656 [label="unwind"];
    bb53__0_5656 -> bb279__0_5656 [label=""];
    bb54__0_5656 -> bb55__0_5656 [label="return"];
    bb54__0_5656 -> bb299__0_5656 [label="unwind"];
    bb55__0_5656 -> bb56__0_5656 [label="0"];
    bb55__0_5656 -> bb57__0_5656 [label="1"];
    bb55__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb56__0_5656 -> bb59__0_5656 [label="return"];
    bb56__0_5656 -> bb312__0_5656 [label="unwind"];
    bb57__0_5656 -> bb58__0_5656 [label="return"];
    bb57__0_5656 -> bb313__0_5656 [label="unwind"];
    bb58__0_5656 -> bb278__0_5656 [label=""];
    bb59__0_5656 -> bb60__0_5656 [label="return"];
    bb59__0_5656 -> bb312__0_5656 [label="unwind"];
    bb60__0_5656 -> bb61__0_5656 [label="return"];
    bb60__0_5656 -> bb312__0_5656 [label="unwind"];
    bb61__0_5656 -> bb62__0_5656 [label="return"];
    bb61__0_5656 -> bb312__0_5656 [label="unwind"];
    bb62__0_5656 -> bb63__0_5656 [label="0"];
    bb62__0_5656 -> bb64__0_5656 [label="1"];
    bb62__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb63__0_5656 -> bb66__0_5656 [label="return"];
    bb63__0_5656 -> bb312__0_5656 [label="unwind"];
    bb64__0_5656 -> bb65__0_5656 [label="return"];
    bb64__0_5656 -> bb312__0_5656 [label="unwind"];
    bb65__0_5656 -> bb277__0_5656 [label=""];
    bb66__0_5656 -> bb67__0_5656 [label="return"];
    bb66__0_5656 -> bb312__0_5656 [label="unwind"];
    bb67__0_5656 -> bb69__0_5656 [label="0"];
    bb67__0_5656 -> bb68__0_5656 [label="otherwise"];
    bb68__0_5656 -> bb85__0_5656 [label=""];
    bb69__0_5656 -> bb70__0_5656 [label="return"];
    bb69__0_5656 -> bb312__0_5656 [label="unwind"];
    bb70__0_5656 -> bb71__0_5656 [label="return"];
    bb70__0_5656 -> bb312__0_5656 [label="unwind"];
    bb71__0_5656 -> bb72__0_5656 [label="return"];
    bb71__0_5656 -> bb312__0_5656 [label="unwind"];
    bb72__0_5656 -> bb73__0_5656 [label="return"];
    bb72__0_5656 -> bb296__0_5656 [label="unwind"];
    bb73__0_5656 -> bb74__0_5656 [label="return"];
    bb73__0_5656 -> bb296__0_5656 [label="unwind"];
    bb74__0_5656 -> bb75__0_5656 [label="return"];
    bb74__0_5656 -> bb312__0_5656 [label="unwind"];
    bb75__0_5656 -> bb76__0_5656 [label="return"];
    bb75__0_5656 -> bb312__0_5656 [label="unwind"];
    bb76__0_5656 -> bb77__0_5656 [label="return"];
    bb76__0_5656 -> bb312__0_5656 [label="unwind"];
    bb77__0_5656 -> bb78__0_5656 [label="return"];
    bb77__0_5656 -> bb312__0_5656 [label="unwind"];
    bb78__0_5656 -> bb79__0_5656 [label="return"];
    bb78__0_5656 -> bb312__0_5656 [label="unwind"];
    bb79__0_5656 -> bb80__0_5656 [label="return"];
    bb79__0_5656 -> bb312__0_5656 [label="unwind"];
    bb80__0_5656 -> bb81__0_5656 [label="return"];
    bb80__0_5656 -> bb312__0_5656 [label="unwind"];
    bb81__0_5656 -> bb82__0_5656 [label="return"];
    bb81__0_5656 -> bb295__0_5656 [label="unwind"];
    bb82__0_5656 -> bb83__0_5656 [label="return"];
    bb82__0_5656 -> bb295__0_5656 [label="unwind"];
    bb83__0_5656 -> bb84__0_5656 [label="return"];
    bb83__0_5656 -> bb312__0_5656 [label="unwind"];
    bb84__0_5656 -> bb85__0_5656 [label=""];
    bb85__0_5656 -> bb86__0_5656 [label="return"];
    bb85__0_5656 -> bb312__0_5656 [label="unwind"];
    bb86__0_5656 -> bb87__0_5656 [label="0"];
    bb86__0_5656 -> bb88__0_5656 [label="1"];
    bb86__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb87__0_5656 -> bb90__0_5656 [label="return"];
    bb87__0_5656 -> bb312__0_5656 [label="unwind"];
    bb88__0_5656 -> bb89__0_5656 [label="return"];
    bb88__0_5656 -> bb312__0_5656 [label="unwind"];
    bb89__0_5656 -> bb277__0_5656 [label=""];
    bb90__0_5656 -> bb92__0_5656 [label="0"];
    bb90__0_5656 -> bb91__0_5656 [label="otherwise"];
    bb91__0_5656 -> bb93__0_5656 [label=""];
    bb92__0_5656 -> bb93__0_5656 [label=""];
    bb93__0_5656 -> bb94__0_5656 [label="0"];
    bb93__0_5656 -> bb95__0_5656 [label="otherwise"];
    bb94__0_5656 -> bb103__0_5656 [label=""];
    bb95__0_5656 -> bb96__0_5656 [label="return"];
    bb95__0_5656 -> bb312__0_5656 [label="unwind"];
    bb96__0_5656 -> bb97__0_5656 [label="return"];
    bb96__0_5656 -> bb312__0_5656 [label="unwind"];
    bb97__0_5656 -> bb98__0_5656 [label="return"];
    bb97__0_5656 -> bb312__0_5656 [label="unwind"];
    bb98__0_5656 -> bb99__0_5656 [label="return"];
    bb98__0_5656 -> bb294__0_5656 [label="unwind"];
    bb99__0_5656 -> bb100__0_5656 [label="return"];
    bb99__0_5656 -> bb294__0_5656 [label="unwind"];
    bb100__0_5656 -> bb101__0_5656 [label="return"];
    bb100__0_5656 -> bb312__0_5656 [label="unwind"];
    bb101__0_5656 -> bb102__0_5656 [label="return"];
    bb101__0_5656 -> bb312__0_5656 [label="unwind"];
    bb102__0_5656 -> bb103__0_5656 [label=""];
    bb103__0_5656 -> bb104__0_5656 [label="return"];
    bb103__0_5656 -> bb312__0_5656 [label="unwind"];
    bb104__0_5656 -> bb105__0_5656 [label="0"];
    bb104__0_5656 -> bb106__0_5656 [label="1"];
    bb104__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb105__0_5656 -> bb108__0_5656 [label="return"];
    bb105__0_5656 -> bb312__0_5656 [label="unwind"];
    bb106__0_5656 -> bb107__0_5656 [label="return"];
    bb106__0_5656 -> bb312__0_5656 [label="unwind"];
    bb107__0_5656 -> bb277__0_5656 [label=""];
    bb108__0_5656 -> bb109__0_5656 [label="return"];
    bb108__0_5656 -> bb312__0_5656 [label="unwind"];
    bb109__0_5656 -> bb110__0_5656 [label="return"];
    bb109__0_5656 -> bb312__0_5656 [label="unwind"];
    bb110__0_5656 -> bb111__0_5656 [label="0"];
    bb110__0_5656 -> bb112__0_5656 [label="1"];
    bb110__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb111__0_5656 -> bb114__0_5656 [label="return"];
    bb111__0_5656 -> bb312__0_5656 [label="unwind"];
    bb112__0_5656 -> bb113__0_5656 [label="return"];
    bb112__0_5656 -> bb312__0_5656 [label="unwind"];
    bb113__0_5656 -> bb277__0_5656 [label=""];
    bb114__0_5656 -> bb115__0_5656 [label="return"];
    bb114__0_5656 -> bb312__0_5656 [label="unwind"];
    bb115__0_5656 -> bb116__0_5656 [label="return"];
    bb115__0_5656 -> bb312__0_5656 [label="unwind"];
    bb116__0_5656 -> bb117__0_5656 [label="return"];
    bb116__0_5656 -> bb312__0_5656 [label="unwind"];
    bb117__0_5656 -> bb118__0_5656 [label="0"];
    bb117__0_5656 -> bb119__0_5656 [label="1"];
    bb117__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb118__0_5656 -> bb121__0_5656 [label="return"];
    bb118__0_5656 -> bb312__0_5656 [label="unwind"];
    bb119__0_5656 -> bb120__0_5656 [label="return"];
    bb119__0_5656 -> bb312__0_5656 [label="unwind"];
    bb120__0_5656 -> bb276__0_5656 [label=""];
    bb121__0_5656 -> bb122__0_5656 [label="return"];
    bb121__0_5656 -> bb312__0_5656 [label="unwind"];
    bb122__0_5656 -> bb143__0_5656 [label="0"];
    bb122__0_5656 -> bb123__0_5656 [label="otherwise"];
    bb123__0_5656 -> bb124__0_5656 [label="return"];
    bb123__0_5656 -> bb312__0_5656 [label="unwind"];
    bb124__0_5656 -> bb125__0_5656 [label="success"];
    bb124__0_5656 -> bb312__0_5656 [label="unwind"];
    bb125__0_5656 -> bb126__0_5656 [label="return"];
    bb125__0_5656 -> bb312__0_5656 [label="unwind"];
    bb126__0_5656 -> bb142__0_5656 [label="0"];
    bb126__0_5656 -> bb127__0_5656 [label="otherwise"];
    bb127__0_5656 -> bb128__0_5656 [label="return"];
    bb127__0_5656 -> bb312__0_5656 [label="unwind"];
    bb128__0_5656 -> bb129__0_5656 [label="success"];
    bb128__0_5656 -> bb312__0_5656 [label="unwind"];
    bb129__0_5656 -> bb130__0_5656 [label="return"];
    bb129__0_5656 -> bb312__0_5656 [label="unwind"];
    bb130__0_5656 -> bb131__0_5656 [label="return"];
    bb130__0_5656 -> bb312__0_5656 [label="unwind"];
    bb131__0_5656 -> bb132__0_5656 [label="return"];
    bb131__0_5656 -> bb312__0_5656 [label="unwind"];
    bb132__0_5656 -> bb133__0_5656 [label="0"];
    bb132__0_5656 -> bb134__0_5656 [label="1"];
    bb132__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb133__0_5656 -> bb136__0_5656 [label="return"];
    bb133__0_5656 -> bb312__0_5656 [label="unwind"];
    bb134__0_5656 -> bb135__0_5656 [label="return"];
    bb134__0_5656 -> bb312__0_5656 [label="unwind"];
    bb135__0_5656 -> bb274__0_5656 [label=""];
    bb136__0_5656 -> bb137__0_5656 [label="return"];
    bb136__0_5656 -> bb312__0_5656 [label="unwind"];
    bb137__0_5656 -> bb138__0_5656 [label="0"];
    bb137__0_5656 -> bb139__0_5656 [label="1"];
    bb137__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb138__0_5656 -> bb141__0_5656 [label="return"];
    bb138__0_5656 -> bb312__0_5656 [label="unwind"];
    bb139__0_5656 -> bb140__0_5656 [label="return"];
    bb139__0_5656 -> bb312__0_5656 [label="unwind"];
    bb140__0_5656 -> bb274__0_5656 [label=""];
    bb141__0_5656 -> bb145__0_5656 [label=""];
    bb142__0_5656 -> bb144__0_5656 [label=""];
    bb143__0_5656 -> bb144__0_5656 [label=""];
    bb144__0_5656 -> bb145__0_5656 [label=""];
    bb145__0_5656 -> bb146__0_5656 [label="return"];
    bb145__0_5656 -> bb312__0_5656 [label="unwind"];
    bb146__0_5656 -> bb147__0_5656 [label="return"];
    bb146__0_5656 -> bb312__0_5656 [label="unwind"];
    bb147__0_5656 -> bb148__0_5656 [label="return"];
    bb147__0_5656 -> bb312__0_5656 [label="unwind"];
    bb148__0_5656 -> bb149__0_5656 [label="success"];
    bb148__0_5656 -> bb312__0_5656 [label="unwind"];
    bb149__0_5656 -> bb150__0_5656 [label="return"];
    bb149__0_5656 -> bb312__0_5656 [label="unwind"];
    bb150__0_5656 -> bb151__0_5656 [label="return"];
    bb150__0_5656 -> bb312__0_5656 [label="unwind"];
    bb151__0_5656 -> bb152__0_5656 [label="return"];
    bb151__0_5656 -> bb312__0_5656 [label="unwind"];
    bb152__0_5656 -> bb153__0_5656 [label="0"];
    bb152__0_5656 -> bb154__0_5656 [label="1"];
    bb152__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb153__0_5656 -> bb156__0_5656 [label="return"];
    bb153__0_5656 -> bb312__0_5656 [label="unwind"];
    bb154__0_5656 -> bb155__0_5656 [label="return"];
    bb154__0_5656 -> bb312__0_5656 [label="unwind"];
    bb155__0_5656 -> bb273__0_5656 [label=""];
    bb156__0_5656 -> bb157__0_5656 [label="return"];
    bb156__0_5656 -> bb312__0_5656 [label="unwind"];
    bb157__0_5656 -> bb158__0_5656 [label="return"];
    bb157__0_5656 -> bb312__0_5656 [label="unwind"];
    bb158__0_5656 -> bb159__0_5656 [label="0"];
    bb158__0_5656 -> bb160__0_5656 [label="1"];
    bb158__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb159__0_5656 -> bb163__0_5656 [label="0"];
    bb159__0_5656 -> bb162__0_5656 [label="otherwise"];
    bb160__0_5656 -> bb161__0_5656 [label="return"];
    bb160__0_5656 -> bb312__0_5656 [label="unwind"];
    bb161__0_5656 -> bb272__0_5656 [label=""];
    bb162__0_5656 -> bb165__0_5656 [label="0"];
    bb162__0_5656 -> bb164__0_5656 [label="otherwise"];
    bb163__0_5656 -> bb184__0_5656 [label=""];
    bb164__0_5656 -> bb179__0_5656 [label=""];
    bb165__0_5656 -> bb166__0_5656 [label="return"];
    bb165__0_5656 -> bb312__0_5656 [label="unwind"];
    bb166__0_5656 -> bb167__0_5656 [label="return"];
    bb166__0_5656 -> bb312__0_5656 [label="unwind"];
    bb167__0_5656 -> bb168__0_5656 [label="return"];
    bb167__0_5656 -> bb312__0_5656 [label="unwind"];
    bb168__0_5656 -> bb169__0_5656 [label="return"];
    bb168__0_5656 -> bb293__0_5656 [label="unwind"];
    bb169__0_5656 -> bb170__0_5656 [label="return"];
    bb169__0_5656 -> bb293__0_5656 [label="unwind"];
    bb170__0_5656 -> bb171__0_5656 [label="return"];
    bb170__0_5656 -> bb312__0_5656 [label="unwind"];
    bb171__0_5656 -> bb172__0_5656 [label="return"];
    bb171__0_5656 -> bb312__0_5656 [label="unwind"];
    bb172__0_5656 -> bb173__0_5656 [label="return"];
    bb172__0_5656 -> bb312__0_5656 [label="unwind"];
    bb173__0_5656 -> bb174__0_5656 [label="return"];
    bb173__0_5656 -> bb312__0_5656 [label="unwind"];
    bb174__0_5656 -> bb175__0_5656 [label="return"];
    bb174__0_5656 -> bb312__0_5656 [label="unwind"];
    bb175__0_5656 -> bb176__0_5656 [label="return"];
    bb175__0_5656 -> bb292__0_5656 [label="unwind"];
    bb176__0_5656 -> bb177__0_5656 [label="return"];
    bb176__0_5656 -> bb292__0_5656 [label="unwind"];
    bb177__0_5656 -> bb178__0_5656 [label="return"];
    bb177__0_5656 -> bb312__0_5656 [label="unwind"];
    bb178__0_5656 -> bb179__0_5656 [label=""];
    bb179__0_5656 -> bb180__0_5656 [label="return"];
    bb179__0_5656 -> bb312__0_5656 [label="unwind"];
    bb180__0_5656 -> bb181__0_5656 [label="0"];
    bb180__0_5656 -> bb182__0_5656 [label="1"];
    bb180__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb181__0_5656 -> bb184__0_5656 [label=""];
    bb182__0_5656 -> bb183__0_5656 [label="return"];
    bb182__0_5656 -> bb312__0_5656 [label="unwind"];
    bb183__0_5656 -> bb272__0_5656 [label=""];
    bb184__0_5656 -> bb185__0_5656 [label="return"];
    bb184__0_5656 -> bb312__0_5656 [label="unwind"];
    bb185__0_5656 -> bb211__0_5656 [label="0"];
    bb185__0_5656 -> bb186__0_5656 [label="otherwise"];
    bb186__0_5656 -> bb210__0_5656 [label="0"];
    bb186__0_5656 -> bb187__0_5656 [label="otherwise"];
    bb187__0_5656 -> bb188__0_5656 [label="return"];
    bb187__0_5656 -> bb312__0_5656 [label="unwind"];
    bb188__0_5656 -> bb190__0_5656 [label="1"];
    bb188__0_5656 -> bb189__0_5656 [label="otherwise"];
    bb189__0_5656 -> bb191__0_5656 [label=""];
    bb190__0_5656 -> bb191__0_5656 [label=""];
    bb191__0_5656 -> bb193__0_5656 [label="0"];
    bb191__0_5656 -> bb192__0_5656 [label="otherwise"];
    bb192__0_5656 -> bb205__0_5656 [label=""];
    bb193__0_5656 -> bb194__0_5656 [label="return"];
    bb193__0_5656 -> bb312__0_5656 [label="unwind"];
    bb194__0_5656 -> bb195__0_5656 [label="return"];
    bb194__0_5656 -> bb312__0_5656 [label="unwind"];
    bb195__0_5656 -> bb196__0_5656 [label="return"];
    bb195__0_5656 -> bb312__0_5656 [label="unwind"];
    bb196__0_5656 -> bb197__0_5656 [label="return"];
    bb196__0_5656 -> bb291__0_5656 [label="unwind"];
    bb197__0_5656 -> bb198__0_5656 [label="return"];
    bb197__0_5656 -> bb291__0_5656 [label="unwind"];
    bb198__0_5656 -> bb199__0_5656 [label="return"];
    bb198__0_5656 -> bb312__0_5656 [label="unwind"];
    bb199__0_5656 -> bb200__0_5656 [label="return"];
    bb199__0_5656 -> bb312__0_5656 [label="unwind"];
    bb200__0_5656 -> bb201__0_5656 [label="return"];
    bb200__0_5656 -> bb312__0_5656 [label="unwind"];
    bb201__0_5656 -> bb202__0_5656 [label="return"];
    bb201__0_5656 -> bb290__0_5656 [label="unwind"];
    bb202__0_5656 -> bb203__0_5656 [label="return"];
    bb202__0_5656 -> bb290__0_5656 [label="unwind"];
    bb203__0_5656 -> bb204__0_5656 [label="return"];
    bb203__0_5656 -> bb312__0_5656 [label="unwind"];
    bb204__0_5656 -> bb205__0_5656 [label=""];
    bb205__0_5656 -> bb206__0_5656 [label="return"];
    bb205__0_5656 -> bb312__0_5656 [label="unwind"];
    bb206__0_5656 -> bb207__0_5656 [label="0"];
    bb206__0_5656 -> bb208__0_5656 [label="1"];
    bb206__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb207__0_5656 -> bb213__0_5656 [label=""];
    bb208__0_5656 -> bb209__0_5656 [label="return"];
    bb208__0_5656 -> bb312__0_5656 [label="unwind"];
    bb209__0_5656 -> bb272__0_5656 [label=""];
    bb210__0_5656 -> bb212__0_5656 [label=""];
    bb211__0_5656 -> bb212__0_5656 [label=""];
    bb212__0_5656 -> bb213__0_5656 [label=""];
    bb213__0_5656 -> bb214__0_5656 [label="return"];
    bb213__0_5656 -> bb312__0_5656 [label="unwind"];
    bb214__0_5656 -> bb215__0_5656 [label="return"];
    bb214__0_5656 -> bb312__0_5656 [label="unwind"];
    bb215__0_5656 -> bb216__0_5656 [label="return"];
    bb215__0_5656 -> bb312__0_5656 [label="unwind"];
    bb216__0_5656 -> bb217__0_5656 [label="return"];
    bb216__0_5656 -> bb312__0_5656 [label="unwind"];
    bb217__0_5656 -> bb218__0_5656 [label="return"];
    bb217__0_5656 -> bb312__0_5656 [label="unwind"];
    bb218__0_5656 -> bb219__0_5656 [label="0"];
    bb218__0_5656 -> bb220__0_5656 [label="1"];
    bb218__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb219__0_5656 -> bb222__0_5656 [label="return"];
    bb219__0_5656 -> bb289__0_5656 [label="unwind"];
    bb220__0_5656 -> bb221__0_5656 [label="return"];
    bb220__0_5656 -> bb310__0_5656 [label="unwind"];
    bb221__0_5656 -> bb271__0_5656 [label=""];
    bb222__0_5656 -> bb223__0_5656 [label="return"];
    bb222__0_5656 -> bb289__0_5656 [label="unwind"];
    bb223__0_5656 -> bb224__0_5656 [label="return"];
    bb223__0_5656 -> bb289__0_5656 [label="unwind"];
    bb224__0_5656 -> bb226__0_5656 [label="0"];
    bb224__0_5656 -> bb225__0_5656 [label="otherwise"];
    bb225__0_5656 -> bb227__0_5656 [label=""];
    bb226__0_5656 -> bb227__0_5656 [label=""];
    bb227__0_5656 -> bb228__0_5656 [label="return"];
    bb227__0_5656 -> bb289__0_5656 [label="unwind"];
    bb228__0_5656 -> bb229__0_5656 [label="return"];
    bb228__0_5656 -> bb289__0_5656 [label="unwind"];
    bb229__0_5656 -> bb230__0_5656 [label="0"];
    bb229__0_5656 -> bb231__0_5656 [label="1"];
    bb229__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb230__0_5656 -> bb233__0_5656 [label="return"];
    bb230__0_5656 -> bb289__0_5656 [label="unwind"];
    bb231__0_5656 -> bb232__0_5656 [label="return"];
    bb231__0_5656 -> bb309__0_5656 [label="unwind"];
    bb232__0_5656 -> bb270__0_5656 [label=""];
    bb233__0_5656 -> bb234__0_5656 [label="return"];
    bb233__0_5656 -> bb289__0_5656 [label="unwind"];
    bb234__0_5656 -> bb235__0_5656 [label="0"];
    bb234__0_5656 -> bb236__0_5656 [label="1"];
    bb234__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb235__0_5656 -> bb238__0_5656 [label="return"];
    bb235__0_5656 -> bb289__0_5656 [label="unwind"];
    bb236__0_5656 -> bb237__0_5656 [label="return"];
    bb236__0_5656 -> bb308__0_5656 [label="unwind"];
    bb237__0_5656 -> bb270__0_5656 [label=""];
    bb238__0_5656 -> bb239__0_5656 [label="return"];
    bb238__0_5656 -> bb289__0_5656 [label="unwind"];
    bb239__0_5656 -> bb240__0_5656 [label="return"];
    bb239__0_5656 -> bb289__0_5656 [label="unwind"];
    bb240__0_5656 -> bb241__0_5656 [label="return"];
    bb240__0_5656 -> bb289__0_5656 [label="unwind"];
    bb241__0_5656 -> bb242__0_5656 [label="return"];
    bb241__0_5656 -> bb289__0_5656 [label="unwind"];
    bb242__0_5656 -> bb243__0_5656 [label="0"];
    bb242__0_5656 -> bb244__0_5656 [label="1"];
    bb242__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb243__0_5656 -> bb246__0_5656 [label="return"];
    bb243__0_5656 -> bb289__0_5656 [label="unwind"];
    bb244__0_5656 -> bb245__0_5656 [label="return"];
    bb244__0_5656 -> bb289__0_5656 [label="unwind"];
    bb245__0_5656 -> bb270__0_5656 [label=""];
    bb246__0_5656 -> bb247__0_5656 [label="return"];
    bb246__0_5656 -> bb289__0_5656 [label="unwind"];
    bb247__0_5656 -> bb248__0_5656 [label="return"];
    bb247__0_5656 -> bb289__0_5656 [label="unwind"];
    bb248__0_5656 -> bb249__0_5656 [label="return"];
    bb248__0_5656 -> bb289__0_5656 [label="unwind"];
    bb249__0_5656 -> bb250__0_5656 [label="return"];
    bb249__0_5656 -> bb289__0_5656 [label="unwind"];
    bb250__0_5656 -> bb251__0_5656 [label="return"];
    bb250__0_5656 -> bb289__0_5656 [label="unwind"];
    bb251__0_5656 -> bb252__0_5656 [label="return"];
    bb251__0_5656 -> bb289__0_5656 [label="unwind"];
    bb252__0_5656 -> bb253__0_5656 [label="return"];
    bb252__0_5656 -> bb289__0_5656 [label="unwind"];
    bb253__0_5656 -> bb254__0_5656 [label="return"];
    bb253__0_5656 -> bb289__0_5656 [label="unwind"];
    bb254__0_5656 -> bb255__0_5656 [label="return"];
    bb254__0_5656 -> bb289__0_5656 [label="unwind"];
    bb255__0_5656 -> bb256__0_5656 [label="return"];
    bb255__0_5656 -> bb289__0_5656 [label="unwind"];
    bb256__0_5656 -> bb257__0_5656 [label="return"];
    bb256__0_5656 -> bb288__0_5656 [label="unwind"];
    bb257__0_5656 -> bb258__0_5656 [label="return"];
    bb257__0_5656 -> bb288__0_5656 [label="unwind"];
    bb258__0_5656 -> bb259__0_5656 [label="return"];
    bb258__0_5656 -> bb289__0_5656 [label="unwind"];
    bb259__0_5656 -> bb260__0_5656 [label="return"];
    bb259__0_5656 -> bb289__0_5656 [label="unwind"];
    bb260__0_5656 -> bb261__0_5656 [label="return"];
    bb260__0_5656 -> bb289__0_5656 [label="unwind"];
    bb261__0_5656 -> bb262__0_5656 [label="return"];
    bb261__0_5656 -> bb289__0_5656 [label="unwind"];
    bb262__0_5656 -> bb263__0_5656 [label="0"];
    bb262__0_5656 -> bb264__0_5656 [label="1"];
    bb262__0_5656 -> bb4__0_5656 [label="otherwise"];
    bb263__0_5656 -> bb266__0_5656 [label="return"];
    bb263__0_5656 -> bb312__0_5656 [label="unwind"];
    bb264__0_5656 -> bb265__0_5656 [label="return"];
    bb264__0_5656 -> bb289__0_5656 [label="unwind"];
    bb265__0_5656 -> bb270__0_5656 [label=""];
    bb266__0_5656 -> bb267__0_5656 [label="return"];
    bb266__0_5656 -> bb300__0_5656 [label="unwind"];
    bb267__0_5656 -> bb268__0_5656 [label="return"];
    bb267__0_5656 -> bb303__0_5656 [label="unwind"];
    bb268__0_5656 -> bb269__0_5656 [label="return"];
    bb268__0_5656 -> bb304__0_5656 [label="unwind"];
    bb269__0_5656 -> bb287__0_5656 [label=""];
    bb270__0_5656 -> bb271__0_5656 [label="return"];
    bb270__0_5656 -> bb312__0_5656 [label="unwind"];
    bb271__0_5656 -> bb272__0_5656 [label=""];
    bb272__0_5656 -> bb273__0_5656 [label=""];
    bb273__0_5656 -> bb275__0_5656 [label=""];
    bb274__0_5656 -> bb275__0_5656 [label=""];
    bb275__0_5656 -> bb276__0_5656 [label=""];
    bb276__0_5656 -> bb277__0_5656 [label=""];
    bb277__0_5656 -> bb278__0_5656 [label="0"];
    bb277__0_5656 -> bb307__0_5656 [label="otherwise"];
    bb278__0_5656 -> bb279__0_5656 [label=""];
    bb279__0_5656 -> bb280__0_5656 [label="return"];
    bb279__0_5656 -> bb300__0_5656 [label="unwind"];
    bb280__0_5656 -> bb281__0_5656 [label="return"];
    bb280__0_5656 -> bb303__0_5656 [label="unwind"];
    bb281__0_5656 -> bb284__0_5656 [label=""];
    bb282__0_5656 -> bb283__0_5656 [label="return"];
    bb282__0_5656 -> bb303__0_5656 [label="unwind"];
    bb283__0_5656 -> bb284__0_5656 [label=""];
    bb284__0_5656 -> bb285__0_5656 [label=""];
    bb285__0_5656 -> bb286__0_5656 [label="return"];
    bb285__0_5656 -> bb304__0_5656 [label="unwind"];
    bb286__0_5656 -> bb287__0_5656 [label=""];
    bb288__0_5656 -> bb289__0_5656 [label="return"];
    bb289__0_5656 -> bb312__0_5656 [label="return"];
    bb290__0_5656 -> bb312__0_5656 [label="return"];
    bb291__0_5656 -> bb312__0_5656 [label="return"];
    bb292__0_5656 -> bb312__0_5656 [label="return"];
    bb293__0_5656 -> bb312__0_5656 [label="return"];
    bb294__0_5656 -> bb312__0_5656 [label="return"];
    bb295__0_5656 -> bb312__0_5656 [label="return"];
    bb296__0_5656 -> bb312__0_5656 [label="return"];
    bb297__0_5656 -> bb299__0_5656 [label="return"];
    bb298__0_5656 -> bb299__0_5656 [label="return"];
    bb299__0_5656 -> bb300__0_5656 [label="return"];
    bb300__0_5656 -> bb303__0_5656 [label="return"];
    bb301__0_5656 -> bb302__0_5656 [label="return"];
    bb302__0_5656 -> bb303__0_5656 [label="return"];
    bb303__0_5656 -> bb304__0_5656 [label="return"];
    bb305__0_5656 -> bb298__0_5656 [label="return"];
    bb306__0_5656 -> bb29__0_5656 [label="return"];
    bb306__0_5656 -> bb298__0_5656 [label="unwind"];
    bb307__0_5656 -> bb278__0_5656 [label="return"];
    bb307__0_5656 -> bb299__0_5656 [label="unwind"];
    bb308__0_5656 -> bb289__0_5656 [label=""];
    bb309__0_5656 -> bb289__0_5656 [label=""];
    bb310__0_5656 -> bb312__0_5656 [label=""];
    bb311__0_5656 -> bb299__0_5656 [label="return"];
    bb312__0_5656 -> bb299__0_5656 [label="0"];
    bb312__0_5656 -> bb311__0_5656 [label="otherwise"];
    bb313__0_5656 -> bb299__0_5656 [label=""];
    bb314__0_5656 -> bb301__0_5656 [label=""];
    bb315__0_5656 -> bb303__0_5656 [label=""];
    bb316__0_5656 -> bb304__0_5656 [label=""];
    bb317__0_5656 -> bb304__0_5656 [label=""];
}
