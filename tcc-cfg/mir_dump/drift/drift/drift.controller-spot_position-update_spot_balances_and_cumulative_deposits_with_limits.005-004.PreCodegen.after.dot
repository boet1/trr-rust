digraph Mir_0_828 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_spot_balances_and_cumulative_deposits_with_limits(_1: u128, _2: &amp;ReErased state::spot_market::SpotBalanceType, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: &amp;ReErased mut state::user::User) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: usize;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _7: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _8: &amp;ReErased mut state::user::User;<br align="left"/>let mut _9: u16;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: usize;<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _17: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _20: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _21: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _22: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _23: usize;<br align="left"/>let mut _24: usize;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: ();<br align="left"/>let _32: bool;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _34: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _36: std::option::Option&lt;&amp;ReErased state::user::User&gt;;<br align="left"/>let mut _37: &amp;ReErased state::user::User;<br align="left"/>let mut _38: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: bool;<br align="left"/>let _45: ();<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _47: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _48: bool;<br align="left"/>let mut _49: ();<br align="left"/>let _50: error::ErrorCode;<br align="left"/>let _51: ();<br align="left"/>let mut _52: &amp;ReErased str;<br align="left"/>let _53: &amp;ReErased str;<br align="left"/>let mut _54: &amp;ReErased std::string::String;<br align="left"/>let _55: &amp;ReErased std::string::String;<br align="left"/>let _56: std::string::String;<br align="left"/>let _57: std::string::String;<br align="left"/>let mut _58: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _61: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _62: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _63: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _64: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _65: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _66: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _67: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased error::ErrorCode;<br align="left"/>let _69: &amp;ReErased error::ErrorCode;<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased str;<br align="left"/>let _72: &amp;ReErased str;<br align="left"/>let mut _73: &amp;ReErased std::string::String;<br align="left"/>let _74: &amp;ReErased std::string::String;<br align="left"/>let _75: std::string::String;<br align="left"/>let _76: std::string::String;<br align="left"/>let mut _77: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _79: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _80: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _81: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _83: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _85: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _86: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased u16;<br align="left"/>let _88: &amp;ReErased u16;<br align="left"/>let mut _89: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased u128;<br align="left"/>let _91: &amp;ReErased u128;<br align="left"/>let mut _92: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _94: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _95: error::ErrorCode;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: ();<br align="left"/>let _101: ();<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _103: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _104: bool;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: ();<br align="left"/>let _107: error::ErrorCode;<br align="left"/>let _108: ();<br align="left"/>let mut _109: &amp;ReErased str;<br align="left"/>let _110: &amp;ReErased str;<br align="left"/>let mut _111: &amp;ReErased std::string::String;<br align="left"/>let _112: &amp;ReErased std::string::String;<br align="left"/>let _113: std::string::String;<br align="left"/>let _114: std::string::String;<br align="left"/>let mut _115: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _116: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _117: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _118: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _119: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _120: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _121: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _122: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _123: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _124: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _125: &amp;ReErased error::ErrorCode;<br align="left"/>let _126: &amp;ReErased error::ErrorCode;<br align="left"/>let _127: ();<br align="left"/>let mut _128: &amp;ReErased str;<br align="left"/>let _129: &amp;ReErased str;<br align="left"/>let mut _130: &amp;ReErased std::string::String;<br align="left"/>let _131: &amp;ReErased std::string::String;<br align="left"/>let _132: std::string::String;<br align="left"/>let _133: std::string::String;<br align="left"/>let mut _134: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _136: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _137: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _138: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _140: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _141: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _142: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _143: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased u16;<br align="left"/>let _145: &amp;ReErased u16;<br align="left"/>let mut _146: error::ErrorCode;<br align="left"/>let mut _147: isize;<br align="left"/>let _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _149: !;<br align="left"/>let mut _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _151: ();<br align="left"/>let _152: ();<br align="left"/>let mut _153: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _154: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _155: bool;<br align="left"/>let mut _156: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _157: state::paused_operations::SpotOperation;<br align="left"/>let mut _158: ();<br align="left"/>let _159: error::ErrorCode;<br align="left"/>let _160: ();<br align="left"/>let mut _161: &amp;ReErased str;<br align="left"/>let _162: &amp;ReErased str;<br align="left"/>let mut _163: &amp;ReErased std::string::String;<br align="left"/>let _164: &amp;ReErased std::string::String;<br align="left"/>let _165: std::string::String;<br align="left"/>let _166: std::string::String;<br align="left"/>let mut _167: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _168: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _169: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _170: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _171: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _172: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _173: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _174: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _175: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _176: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased error::ErrorCode;<br align="left"/>let _178: &amp;ReErased error::ErrorCode;<br align="left"/>let _179: ();<br align="left"/>let mut _180: &amp;ReErased str;<br align="left"/>let _181: &amp;ReErased str;<br align="left"/>let mut _182: &amp;ReErased std::string::String;<br align="left"/>let _183: &amp;ReErased std::string::String;<br align="left"/>let _184: std::string::String;<br align="left"/>let _185: std::string::String;<br align="left"/>let mut _186: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _187: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _188: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _189: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _190: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _191: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _192: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _193: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _194: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _195: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _196: &amp;ReErased u16;<br align="left"/>let _197: &amp;ReErased u16;<br align="left"/>let mut _198: error::ErrorCode;<br align="left"/>let mut _199: isize;<br align="left"/>let _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _203: ();<br align="left"/>let _204: ();<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _206: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _207: bool;<br align="left"/>let mut _208: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _209: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _210: state::spot_market::AssetTier;<br align="left"/>let mut _211: bool;<br align="left"/>let mut _212: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _213: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _214: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _215: usize;<br align="left"/>let mut _216: usize;<br align="left"/>let mut _217: bool;<br align="left"/>let mut _218: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _219: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _220: state::spot_market::SpotBalanceType;<br align="left"/>let mut _221: ();<br align="left"/>let _222: error::ErrorCode;<br align="left"/>let _223: ();<br align="left"/>let mut _224: &amp;ReErased str;<br align="left"/>let _225: &amp;ReErased str;<br align="left"/>let mut _226: &amp;ReErased std::string::String;<br align="left"/>let _227: &amp;ReErased std::string::String;<br align="left"/>let _228: std::string::String;<br align="left"/>let _229: std::string::String;<br align="left"/>let mut _230: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _231: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _232: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _233: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _234: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _235: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _236: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _237: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _238: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _239: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _240: &amp;ReErased error::ErrorCode;<br align="left"/>let _241: &amp;ReErased error::ErrorCode;<br align="left"/>let _242: ();<br align="left"/>let mut _243: &amp;ReErased str;<br align="left"/>let _244: &amp;ReErased str;<br align="left"/>let mut _245: &amp;ReErased std::string::String;<br align="left"/>let _246: &amp;ReErased std::string::String;<br align="left"/>let _247: std::string::String;<br align="left"/>let _248: std::string::String;<br align="left"/>let mut _249: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _250: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _251: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _252: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _253: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _254: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _255: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _256: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _257: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _258: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _259: &amp;ReErased u16;<br align="left"/>let _260: &amp;ReErased u16;<br align="left"/>let mut _261: error::ErrorCode;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: ();<br align="left"/>let mut _267: ();<br align="left"/>let mut _268: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _269: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _270: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _271: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _272: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _273: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _274: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _275: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug token_amount =&gt; _1;<br align="left"/>debug update_direction =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug user =&gt; _4;<br align="left"/>debug spot_position_index =&gt; _5;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug valid_withdraw =&gt; _32;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug error_code =&gt; _50;<br align="left"/>debug res =&gt; _57;<br align="left"/>debug res =&gt; _76;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug error_code =&gt; _107;<br align="left"/>debug res =&gt; _114;<br align="left"/>debug res =&gt; _133;<br align="left"/>debug residual =&gt; _148;<br align="left"/>debug val =&gt; _151;<br align="left"/>debug error_code =&gt; _159;<br align="left"/>debug res =&gt; _166;<br align="left"/>debug res =&gt; _185;<br align="left"/>debug residual =&gt; _200;<br align="left"/>debug val =&gt; _203;<br align="left"/>debug error_code =&gt; _222;<br align="left"/>debug res =&gt; _229;<br align="left"/>debug res =&gt; _248;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>>;
    bb0__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (*_4)<br/>StorageLive(_9)<br/>_9 = ((*_3).42: u16)<br/></td></tr><tr><td align="left">_7 = User::force_get_spot_position_index(move _8, move _9)</td></tr></table>>];
    bb1__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: usize)<br/>_5 = _14<br/>StorageDead(_14)<br/>StorageDead(_6)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _1<br/>StorageLive(_19)<br/>_19 = &amp;(*_2)<br/>StorageLive(_20)<br/>_20 = &amp;mut (*_3)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _5<br/>_24 = Len(((*_4).3: [state::user::SpotPosition; 8]))<br/>_25 = Lt(_23, _24)<br/></td></tr><tr><td align="left">assert(move _25, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _24, _23)</td></tr></table>>];
    bb4__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_22 = &amp;mut ((*_4).3: [state::user::SpotPosition; 8])[_23]<br/>_21 = &amp;mut (*_22)<br/>StorageLive(_26)<br/>_26 = Option::&lt;u128&gt;::None<br/></td></tr><tr><td align="left">_17 = update_spot_balances_and_cumulative_deposits(move _18, move _19, move _20, move _21, const true, move _26)</td></tr></table>>];
    bb8__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_27 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb10__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_16 as Continue).0: ())<br/>_15 = _31<br/>StorageDead(_31)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_3)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_4)<br/>_36 = Option::&lt;&amp;User&gt;::Some(move _37)<br/>StorageDead(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _1<br/>_38 = Option::&lt;u128&gt;::Some(move _39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_34 = check_withdraw_limits(move _35, move _36, move _38)</td></tr></table>>];
    bb11__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb12__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb14__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_40 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb15__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_33 as Continue).0: bool)<br/>_32 = _44<br/>StorageDead(_44)<br/>StorageDead(_33)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _32<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb16__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb17__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ()<br/>_47 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = error::ErrorCode::DailyWithdrawLimit<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_277 = const _<br/>_61 = &amp;(*_277)<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_50<br/>_68 = &amp;(*_69)<br/></td></tr><tr><td align="left">_67 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _68)</td></tr></table>>];
    bb20__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_66 = [move _67]<br/>StorageDead(_67)<br/>_65 = &amp;_66<br/>_64 = &amp;(*_65)<br/>_63 = move _64 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_58 = Arguments::&lt;'_&gt;::new_v1(move _59, move _63)</td></tr></table>>];
    bb21__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = format(move _58)</td></tr></table>>];
    bb22__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>_56 = move _57<br/>StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = &lt;String as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb23__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_52 = &amp;(*_53)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_51 = solana_program::log::sol_log(move _52)</td></tr></table>>];
    bb24__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb25__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_276 = const _<br/>_80 = &amp;(*_276)<br/>_79 = &amp;(*_80)<br/>_78 = move _79 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_79)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;((*_3).42: u16)<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _87)</td></tr></table>>];
    bb26__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_1<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _90)</td></tr></table>>];
    bb27__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;((*_4).0: anchor_lang::prelude::Pubkey)<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _93)</td></tr></table>>];
    bb28__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_85 = [move _86, move _89, move _92]<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>_84 = &amp;_85<br/>_83 = &amp;(*_84)<br/>_82 = move _83 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_77 = Arguments::&lt;'_&gt;::new_v1(move _78, move _82)</td></tr></table>>];
    bb29__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = format(move _77)</td></tr></table>>];
    bb30__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>_75 = move _76<br/>StorageDead(_76)<br/>_74 = &amp;_75<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;String as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb31__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_70 = solana_program::log::sol_log(move _71)</td></tr></table>>];
    bb32__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb33__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_95)<br/>_95 = _50<br/>_47 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _95)<br/>StorageDead(_95)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb35__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_96 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb36__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_46 as Continue).0: ())<br/>_45 = _100<br/>StorageDead(_100)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_105 = discriminant(((*_3).45: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb37__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb38__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_104 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_104 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb42__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ()<br/>_103 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _106)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = error::ErrorCode::MarketWithdrawPaused<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_275 = const _<br/>_118 = &amp;(*_275)<br/>_117 = &amp;(*_118)<br/>_116 = move _117 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_117)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_107<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _125)</td></tr></table>>];
    bb44__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_123 = [move _124]<br/>StorageDead(_124)<br/>_122 = &amp;_123<br/>_121 = &amp;(*_122)<br/>_120 = move _121 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_115 = Arguments::&lt;'_&gt;::new_v1(move _116, move _120)</td></tr></table>>];
    bb45__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = format(move _115)</td></tr></table>>];
    bb46__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_118)<br/>_113 = move _114<br/>StorageDead(_114)<br/>_112 = &amp;_113<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = &lt;String as Deref&gt;::deref(move _111)</td></tr></table>>];
    bb47__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_109 = &amp;(*_110)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_108 = solana_program::log::sol_log(move _109)</td></tr></table>>];
    bb48__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb49__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_274 = const _<br/>_137 = &amp;(*_274)<br/>_136 = &amp;(*_137)<br/>_135 = move _136 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_136)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;((*_3).42: u16)<br/>_144 = &amp;(*_145)<br/></td></tr><tr><td align="left">_143 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _144)</td></tr></table>>];
    bb50__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_142 = [move _143]<br/>StorageDead(_143)<br/>_141 = &amp;_142<br/>_140 = &amp;(*_141)<br/>_139 = move _140 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_134 = Arguments::&lt;'_&gt;::new_v1(move _135, move _139)</td></tr></table>>];
    bb51__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_133 = format(move _134)</td></tr></table>>];
    bb52__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/>_132 = move _133<br/>StorageDead(_133)<br/>_131 = &amp;_132<br/>_130 = &amp;(*_131)<br/></td></tr><tr><td align="left">_129 = &lt;String as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb53__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_128 = &amp;(*_129)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_127 = solana_program::log::sol_log(move _128)</td></tr></table>>];
    bb54__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">drop(_132)</td></tr></table>>];
    bb55__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageLive(_146)<br/>_146 = _107<br/>_103 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _146)<br/>StorageDead(_146)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb57__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_147 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _147)</td></tr></table>>];
    bb58__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_102 as Continue).0: ())<br/>_101 = _151<br/>StorageDead(_151)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = &amp;(*_3)<br/>StorageLive(_157)<br/>_157 = SpotOperation::Withdraw<br/></td></tr><tr><td align="left">_155 = SpotMarket::is_operation_paused(move _156, move _157)</td></tr></table>>];
    bb59__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_150)<br/>_150 = _148<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _150)</td></tr></table>>];
    bb60__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb62__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageLive(_159)<br/>_159 = error::ErrorCode::MarketWithdrawPaused<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_273 = const _<br/>_170 = &amp;(*_273)<br/>_169 = &amp;(*_170)<br/>_168 = move _169 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_169)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;_159<br/>_177 = &amp;(*_178)<br/></td></tr><tr><td align="left">_176 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _177)</td></tr></table>>];
    bb63__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageLive(_158)<br/>_158 = ()<br/>_154 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _158)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_175 = [move _176]<br/>StorageDead(_176)<br/>_174 = &amp;_175<br/>_173 = &amp;(*_174)<br/>_172 = move _173 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_167 = Arguments::&lt;'_&gt;::new_v1(move _168, move _172)</td></tr></table>>];
    bb65__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = format(move _167)</td></tr></table>>];
    bb66__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_174)<br/>StorageDead(_170)<br/>_165 = move _166<br/>StorageDead(_166)<br/>_164 = &amp;_165<br/>_163 = &amp;(*_164)<br/></td></tr><tr><td align="left">_162 = &lt;String as Deref&gt;::deref(move _163)</td></tr></table>>];
    bb67__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_161 = &amp;(*_162)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_160 = solana_program::log::sol_log(move _161)</td></tr></table>>];
    bb68__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/></td></tr><tr><td align="left">drop(_165)</td></tr></table>>];
    bb69__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_160)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_272 = const _<br/>_189 = &amp;(*_272)<br/>_188 = &amp;(*_189)<br/>_187 = move _188 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_188)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;((*_3).42: u16)<br/>_196 = &amp;(*_197)<br/></td></tr><tr><td align="left">_195 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _196)</td></tr></table>>];
    bb70__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_194 = [move _195]<br/>StorageDead(_195)<br/>_193 = &amp;_194<br/>_192 = &amp;(*_193)<br/>_191 = move _192 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">_186 = Arguments::&lt;'_&gt;::new_v1(move _187, move _191)</td></tr></table>>];
    bb71__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = format(move _186)</td></tr></table>>];
    bb72__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_197)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_189)<br/>_184 = move _185<br/>StorageDead(_185)<br/>_183 = &amp;_184<br/>_182 = &amp;(*_183)<br/></td></tr><tr><td align="left">_181 = &lt;String as Deref&gt;::deref(move _182)</td></tr></table>>];
    bb73__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_180 = &amp;(*_181)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_179 = solana_program::log::sol_log(move _180)</td></tr></table>>];
    bb74__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb75__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_181)<br/>StorageDead(_179)<br/>StorageLive(_198)<br/>_198 = _159<br/>_154 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _198)<br/>StorageDead(_198)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">_153 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _154)</td></tr></table>>];
    bb77__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_199 = discriminant(_153)<br/></td></tr><tr><td align="left">switchInt(move _199)</td></tr></table>>];
    bb78__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_153 as Continue).0: ())<br/>_152 = _203<br/>StorageDead(_203)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = &amp;((*_3).46: state::spot_market::AssetTier)<br/>StorageLive(_209)<br/>_271 = const _<br/>_209 = &amp;(*_271)<br/></td></tr><tr><td align="left">_207 = &lt;state::spot_market::AssetTier as PartialEq&gt;::eq(move _208, move _209)</td></tr></table>>];
    bb79__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_153 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_202)<br/>_202 = _200<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _202)</td></tr></table>>];
    bb80__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb82__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = _5<br/>_216 = Len(((*_4).3: [state::user::SpotPosition; 8]))<br/>_217 = Lt(_215, _216)<br/></td></tr><tr><td align="left">assert(move _217, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _216, _215)</td></tr></table>>];
    bb83__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_214 = &amp;((*_4).3: [state::user::SpotPosition; 8])[_215]<br/></td></tr><tr><td align="left">_213 = &lt;SpotPosition as SpotBalance&gt;::balance_type(move _214)</td></tr></table>>];
    bb84__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_212 = &amp;_213<br/>StorageDead(_214)<br/>StorageLive(_218)<br/>_270 = const _<br/>_218 = &amp;(*_270)<br/></td></tr><tr><td align="left">_211 = &lt;&amp;SpotBalanceType as PartialEq&gt;::eq(move _212, move _218)</td></tr></table>>];
    bb85__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left">switchInt(move _211)</td></tr></table>>];
    bb86__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageLive(_222)<br/>_222 = error::ErrorCode::ProtectedAssetTierViolation<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_269 = const _<br/>_233 = &amp;(*_269)<br/>_232 = &amp;(*_233)<br/>_231 = move _232 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_232)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;_222<br/>_240 = &amp;(*_241)<br/></td></tr><tr><td align="left">_239 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _240)</td></tr></table>>];
    bb87__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ()<br/>_206 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _221)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>_238 = [move _239]<br/>StorageDead(_239)<br/>_237 = &amp;_238<br/>_236 = &amp;(*_237)<br/>_235 = move _236 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_230 = Arguments::&lt;'_&gt;::new_v1(move _231, move _235)</td></tr></table>>];
    bb91__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">_229 = format(move _230)</td></tr></table>>];
    bb92__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_237)<br/>StorageDead(_233)<br/>_228 = move _229<br/>StorageDead(_229)<br/>_227 = &amp;_228<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_225 = &lt;String as Deref&gt;::deref(move _226)</td></tr></table>>];
    bb93__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_224 = &amp;(*_225)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_223 = solana_program::log::sol_log(move _224)</td></tr></table>>];
    bb94__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/></td></tr><tr><td align="left">drop(_228)</td></tr></table>>];
    bb95__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>StorageDead(_223)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_268 = const _<br/>_252 = &amp;(*_268)<br/>_251 = &amp;(*_252)<br/>_250 = move _251 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_251)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_260 = &amp;((*_3).42: u16)<br/>_259 = &amp;(*_260)<br/></td></tr><tr><td align="left">_258 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _259)</td></tr></table>>];
    bb96__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>_257 = [move _258]<br/>StorageDead(_258)<br/>_256 = &amp;_257<br/>_255 = &amp;(*_256)<br/>_254 = move _255 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_249 = Arguments::&lt;'_&gt;::new_v1(move _250, move _254)</td></tr></table>>];
    bb97__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">_248 = format(move _249)</td></tr></table>>];
    bb98__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_252)<br/>_247 = move _248<br/>StorageDead(_248)<br/>_246 = &amp;_247<br/>_245 = &amp;(*_246)<br/></td></tr><tr><td align="left">_244 = &lt;String as Deref&gt;::deref(move _245)</td></tr></table>>];
    bb99__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_243 = &amp;(*_244)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_242 = solana_program::log::sol_log(move _243)</td></tr></table>>];
    bb100__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_247)</td></tr></table>>];
    bb101__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_242)<br/>StorageLive(_261)<br/>_261 = _222<br/>_206 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _261)<br/>StorageDead(_261)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb103__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_262 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb104__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_205 as Continue).0: ())<br/>_204 = _266<br/>StorageDead(_266)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageLive(_267)<br/>_267 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _267)<br/>StorageDead(_267)<br/>StorageDead(_32)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb106__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left">return</td></tr></table>>];
    bb110__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left">drop(_247)</td></tr></table>>];
    bb111__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left">drop(_228)</td></tr></table>>];
    bb112__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb113__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">113 (cleanup)</td></tr><tr><td align="left">drop(_165)</td></tr></table>>];
    bb114__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">drop(_132)</td></tr></table>>];
    bb115__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">115 (cleanup)</td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb116__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">116 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb117__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb118__0_828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">118 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_828 -> bb1__0_828 [label="return"];
    bb1__0_828 -> bb2__0_828 [label="return"];
    bb2__0_828 -> bb3__0_828 [label="0"];
    bb2__0_828 -> bb5__0_828 [label="1"];
    bb2__0_828 -> bb4__0_828 [label="otherwise"];
    bb3__0_828 -> bb7__0_828 [label="success"];
    bb5__0_828 -> bb6__0_828 [label="return"];
    bb6__0_828 -> bb108__0_828 [label=""];
    bb7__0_828 -> bb8__0_828 [label="return"];
    bb8__0_828 -> bb9__0_828 [label="return"];
    bb9__0_828 -> bb10__0_828 [label="0"];
    bb9__0_828 -> bb11__0_828 [label="1"];
    bb9__0_828 -> bb4__0_828 [label="otherwise"];
    bb10__0_828 -> bb13__0_828 [label="return"];
    bb11__0_828 -> bb12__0_828 [label="return"];
    bb12__0_828 -> bb108__0_828 [label=""];
    bb13__0_828 -> bb14__0_828 [label="return"];
    bb14__0_828 -> bb15__0_828 [label="0"];
    bb14__0_828 -> bb16__0_828 [label="1"];
    bb14__0_828 -> bb4__0_828 [label="otherwise"];
    bb15__0_828 -> bb19__0_828 [label="0"];
    bb15__0_828 -> bb18__0_828 [label="otherwise"];
    bb16__0_828 -> bb17__0_828 [label="return"];
    bb17__0_828 -> bb107__0_828 [label=""];
    bb18__0_828 -> bb34__0_828 [label=""];
    bb19__0_828 -> bb20__0_828 [label="return"];
    bb20__0_828 -> bb21__0_828 [label="return"];
    bb21__0_828 -> bb22__0_828 [label="return"];
    bb22__0_828 -> bb23__0_828 [label="return"];
    bb22__0_828 -> bb117__0_828 [label="unwind"];
    bb23__0_828 -> bb24__0_828 [label="return"];
    bb23__0_828 -> bb117__0_828 [label="unwind"];
    bb24__0_828 -> bb25__0_828 [label="return"];
    bb24__0_828 -> bb118__0_828 [label="unwind"];
    bb25__0_828 -> bb26__0_828 [label="return"];
    bb26__0_828 -> bb27__0_828 [label="return"];
    bb27__0_828 -> bb28__0_828 [label="return"];
    bb28__0_828 -> bb29__0_828 [label="return"];
    bb29__0_828 -> bb30__0_828 [label="return"];
    bb30__0_828 -> bb31__0_828 [label="return"];
    bb30__0_828 -> bb116__0_828 [label="unwind"];
    bb31__0_828 -> bb32__0_828 [label="return"];
    bb31__0_828 -> bb116__0_828 [label="unwind"];
    bb32__0_828 -> bb33__0_828 [label="return"];
    bb32__0_828 -> bb118__0_828 [label="unwind"];
    bb33__0_828 -> bb34__0_828 [label=""];
    bb34__0_828 -> bb35__0_828 [label="return"];
    bb35__0_828 -> bb36__0_828 [label="0"];
    bb35__0_828 -> bb37__0_828 [label="1"];
    bb35__0_828 -> bb4__0_828 [label="otherwise"];
    bb36__0_828 -> bb40__0_828 [label="1"];
    bb36__0_828 -> bb40__0_828 [label="6"];
    bb36__0_828 -> bb40__0_828 [label="7"];
    bb36__0_828 -> bb39__0_828 [label="otherwise"];
    bb37__0_828 -> bb38__0_828 [label="return"];
    bb38__0_828 -> bb107__0_828 [label=""];
    bb39__0_828 -> bb41__0_828 [label=""];
    bb40__0_828 -> bb41__0_828 [label=""];
    bb41__0_828 -> bb43__0_828 [label="0"];
    bb41__0_828 -> bb42__0_828 [label="otherwise"];
    bb42__0_828 -> bb56__0_828 [label=""];
    bb43__0_828 -> bb44__0_828 [label="return"];
    bb44__0_828 -> bb45__0_828 [label="return"];
    bb45__0_828 -> bb46__0_828 [label="return"];
    bb46__0_828 -> bb47__0_828 [label="return"];
    bb46__0_828 -> bb115__0_828 [label="unwind"];
    bb47__0_828 -> bb48__0_828 [label="return"];
    bb47__0_828 -> bb115__0_828 [label="unwind"];
    bb48__0_828 -> bb49__0_828 [label="return"];
    bb48__0_828 -> bb118__0_828 [label="unwind"];
    bb49__0_828 -> bb50__0_828 [label="return"];
    bb50__0_828 -> bb51__0_828 [label="return"];
    bb51__0_828 -> bb52__0_828 [label="return"];
    bb52__0_828 -> bb53__0_828 [label="return"];
    bb52__0_828 -> bb114__0_828 [label="unwind"];
    bb53__0_828 -> bb54__0_828 [label="return"];
    bb53__0_828 -> bb114__0_828 [label="unwind"];
    bb54__0_828 -> bb55__0_828 [label="return"];
    bb54__0_828 -> bb118__0_828 [label="unwind"];
    bb55__0_828 -> bb56__0_828 [label=""];
    bb56__0_828 -> bb57__0_828 [label="return"];
    bb57__0_828 -> bb58__0_828 [label="0"];
    bb57__0_828 -> bb59__0_828 [label="1"];
    bb57__0_828 -> bb4__0_828 [label="otherwise"];
    bb58__0_828 -> bb61__0_828 [label="return"];
    bb59__0_828 -> bb60__0_828 [label="return"];
    bb60__0_828 -> bb107__0_828 [label=""];
    bb61__0_828 -> bb63__0_828 [label="0"];
    bb61__0_828 -> bb62__0_828 [label="otherwise"];
    bb62__0_828 -> bb64__0_828 [label="return"];
    bb63__0_828 -> bb76__0_828 [label=""];
    bb64__0_828 -> bb65__0_828 [label="return"];
    bb65__0_828 -> bb66__0_828 [label="return"];
    bb66__0_828 -> bb67__0_828 [label="return"];
    bb66__0_828 -> bb113__0_828 [label="unwind"];
    bb67__0_828 -> bb68__0_828 [label="return"];
    bb67__0_828 -> bb113__0_828 [label="unwind"];
    bb68__0_828 -> bb69__0_828 [label="return"];
    bb68__0_828 -> bb118__0_828 [label="unwind"];
    bb69__0_828 -> bb70__0_828 [label="return"];
    bb70__0_828 -> bb71__0_828 [label="return"];
    bb71__0_828 -> bb72__0_828 [label="return"];
    bb72__0_828 -> bb73__0_828 [label="return"];
    bb72__0_828 -> bb112__0_828 [label="unwind"];
    bb73__0_828 -> bb74__0_828 [label="return"];
    bb73__0_828 -> bb112__0_828 [label="unwind"];
    bb74__0_828 -> bb75__0_828 [label="return"];
    bb74__0_828 -> bb118__0_828 [label="unwind"];
    bb75__0_828 -> bb76__0_828 [label=""];
    bb76__0_828 -> bb77__0_828 [label="return"];
    bb77__0_828 -> bb78__0_828 [label="0"];
    bb77__0_828 -> bb79__0_828 [label="1"];
    bb77__0_828 -> bb4__0_828 [label="otherwise"];
    bb78__0_828 -> bb81__0_828 [label="return"];
    bb79__0_828 -> bb80__0_828 [label="return"];
    bb80__0_828 -> bb107__0_828 [label=""];
    bb81__0_828 -> bb88__0_828 [label="0"];
    bb81__0_828 -> bb82__0_828 [label="otherwise"];
    bb82__0_828 -> bb83__0_828 [label="success"];
    bb83__0_828 -> bb84__0_828 [label="return"];
    bb84__0_828 -> bb85__0_828 [label="return"];
    bb85__0_828 -> bb87__0_828 [label="0"];
    bb85__0_828 -> bb86__0_828 [label="otherwise"];
    bb86__0_828 -> bb90__0_828 [label="return"];
    bb87__0_828 -> bb89__0_828 [label=""];
    bb88__0_828 -> bb89__0_828 [label=""];
    bb89__0_828 -> bb102__0_828 [label=""];
    bb90__0_828 -> bb91__0_828 [label="return"];
    bb91__0_828 -> bb92__0_828 [label="return"];
    bb92__0_828 -> bb93__0_828 [label="return"];
    bb92__0_828 -> bb111__0_828 [label="unwind"];
    bb93__0_828 -> bb94__0_828 [label="return"];
    bb93__0_828 -> bb111__0_828 [label="unwind"];
    bb94__0_828 -> bb95__0_828 [label="return"];
    bb94__0_828 -> bb118__0_828 [label="unwind"];
    bb95__0_828 -> bb96__0_828 [label="return"];
    bb96__0_828 -> bb97__0_828 [label="return"];
    bb97__0_828 -> bb98__0_828 [label="return"];
    bb98__0_828 -> bb99__0_828 [label="return"];
    bb98__0_828 -> bb110__0_828 [label="unwind"];
    bb99__0_828 -> bb100__0_828 [label="return"];
    bb99__0_828 -> bb110__0_828 [label="unwind"];
    bb100__0_828 -> bb101__0_828 [label="return"];
    bb100__0_828 -> bb118__0_828 [label="unwind"];
    bb101__0_828 -> bb102__0_828 [label=""];
    bb102__0_828 -> bb103__0_828 [label="return"];
    bb103__0_828 -> bb104__0_828 [label="0"];
    bb103__0_828 -> bb105__0_828 [label="1"];
    bb103__0_828 -> bb4__0_828 [label="otherwise"];
    bb104__0_828 -> bb109__0_828 [label=""];
    bb105__0_828 -> bb106__0_828 [label="return"];
    bb106__0_828 -> bb107__0_828 [label=""];
    bb107__0_828 -> bb108__0_828 [label=""];
    bb108__0_828 -> bb109__0_828 [label=""];
    bb110__0_828 -> bb118__0_828 [label="return"];
    bb111__0_828 -> bb118__0_828 [label="return"];
    bb112__0_828 -> bb118__0_828 [label="return"];
    bb113__0_828 -> bb118__0_828 [label="return"];
    bb114__0_828 -> bb118__0_828 [label="return"];
    bb115__0_828 -> bb118__0_828 [label="return"];
    bb116__0_828 -> bb118__0_828 [label="return"];
    bb117__0_828 -> bb118__0_828 [label="return"];
}
