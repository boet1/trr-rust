digraph Mir_0_689 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_quote_asset_amount(_1: &amp;ReErased mut state::user::PerpPosition, _2: &amp;ReErased mut state::perp_market::PerpMarket, _3: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: ();<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: u32;<br align="left"/>let mut _23: i64;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _25: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i64;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _36: i128;<br align="left"/>let mut _37: i128;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _39: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _40: i64;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: i128;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: i128;<br align="left"/>let _51: ();<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: i64;<br align="left"/>let mut _54: bool;<br align="left"/>let mut _55: i64;<br align="left"/>let mut _56: u32;<br align="left"/>let mut _57: u32;<br align="left"/>let mut _58: ();<br align="left"/>debug position =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug delta =&gt; _3;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>>;
    bb0__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>_5 = Eq(move _6, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_1).2: i64)<br/>_10 = Eq(move _11, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = ((*_1).1: i64)<br/>_12 = Eq(move _13, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = ((*_2).20: u32)<br/></td></tr><tr><td align="left">_16 = &lt;u32 as SafeMath&gt;::safe_add(move _17, const 1_u32)</td></tr></table>>];
    bb6__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb7__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_18 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb8__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_15 as Continue).0: u32)<br/>_14 = _22<br/>StorageDead(_22)<br/>((*_2).20: u32) = move _14<br/>StorageDead(_14)<br/>StorageDead(_15)<br/>_9 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_9 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = ((*_1).2: i64)<br/>StorageLive(_27)<br/>_27 = _3<br/></td></tr><tr><td align="left">_25 = &lt;i64 as SafeMath&gt;::safe_add(move _26, move _27)</td></tr></table>>];
    bb15__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb16__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_28 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb17__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_24 as Continue).0: i64)<br/>_23 = _32<br/>StorageDead(_32)<br/>((*_1).2: i64) = move _23<br/>StorageDead(_23)<br/>StorageDead(_24)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = (((*_2).1: state::perp_market::AMM).18: i128)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _3<br/></td></tr><tr><td align="left">_39 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _40)</td></tr></table>>];
    bb18__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb19__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_23)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb21__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_41 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb22__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_38 as Continue).0: i128)<br/>_37 = _45<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_35 = &lt;i128 as SafeMath&gt;::safe_add(move _36, move _37)</td></tr></table>>];
    bb23__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb24__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb26__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_46 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb27__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_34 as Continue).0: i128)<br/>_33 = _50<br/>StorageDead(_50)<br/>(((*_2).1: state::perp_market::AMM).18: i128) = move _33<br/>StorageDead(_33)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = ((*_1).2: i64)<br/>_52 = Eq(move _53, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb28__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb29__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = ((*_1).1: i64)<br/>_54 = Eq(move _55, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb31__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = ((*_2).20: u32)<br/></td></tr><tr><td align="left">_56 = core::num::&lt;impl u32&gt;::saturating_sub(move _57, const 1_u32)</td></tr></table>>];
    bb33__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>((*_2).20: u32) = move _56<br/>StorageDead(_56)<br/>_51 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_51 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_58)<br/>_58 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_689 -> bb2__0_689 [label="0"];
    bb0__0_689 -> bb1__0_689 [label="otherwise"];
    bb1__0_689 -> bb38__0_689 [label=""];
    bb2__0_689 -> bb4__0_689 [label="0"];
    bb2__0_689 -> bb3__0_689 [label="otherwise"];
    bb3__0_689 -> bb12__0_689 [label="0"];
    bb3__0_689 -> bb5__0_689 [label="otherwise"];
    bb4__0_689 -> bb13__0_689 [label=""];
    bb5__0_689 -> bb6__0_689 [label="return"];
    bb6__0_689 -> bb7__0_689 [label="return"];
    bb7__0_689 -> bb8__0_689 [label="0"];
    bb7__0_689 -> bb10__0_689 [label="1"];
    bb7__0_689 -> bb9__0_689 [label="otherwise"];
    bb8__0_689 -> bb14__0_689 [label=""];
    bb10__0_689 -> bb11__0_689 [label="return"];
    bb11__0_689 -> bb38__0_689 [label=""];
    bb12__0_689 -> bb13__0_689 [label=""];
    bb13__0_689 -> bb14__0_689 [label=""];
    bb14__0_689 -> bb15__0_689 [label="return"];
    bb15__0_689 -> bb16__0_689 [label="return"];
    bb16__0_689 -> bb17__0_689 [label="0"];
    bb16__0_689 -> bb18__0_689 [label="1"];
    bb16__0_689 -> bb9__0_689 [label="otherwise"];
    bb17__0_689 -> bb20__0_689 [label="return"];
    bb18__0_689 -> bb19__0_689 [label="return"];
    bb19__0_689 -> bb38__0_689 [label=""];
    bb20__0_689 -> bb21__0_689 [label="return"];
    bb21__0_689 -> bb22__0_689 [label="0"];
    bb21__0_689 -> bb23__0_689 [label="1"];
    bb21__0_689 -> bb9__0_689 [label="otherwise"];
    bb22__0_689 -> bb25__0_689 [label="return"];
    bb23__0_689 -> bb24__0_689 [label="return"];
    bb24__0_689 -> bb37__0_689 [label=""];
    bb25__0_689 -> bb26__0_689 [label="return"];
    bb26__0_689 -> bb27__0_689 [label="0"];
    bb26__0_689 -> bb28__0_689 [label="1"];
    bb26__0_689 -> bb9__0_689 [label="otherwise"];
    bb27__0_689 -> bb31__0_689 [label="0"];
    bb27__0_689 -> bb30__0_689 [label="otherwise"];
    bb28__0_689 -> bb29__0_689 [label="return"];
    bb29__0_689 -> bb37__0_689 [label=""];
    bb30__0_689 -> bb34__0_689 [label="0"];
    bb30__0_689 -> bb32__0_689 [label="otherwise"];
    bb31__0_689 -> bb35__0_689 [label=""];
    bb32__0_689 -> bb33__0_689 [label="return"];
    bb33__0_689 -> bb36__0_689 [label=""];
    bb34__0_689 -> bb35__0_689 [label=""];
    bb35__0_689 -> bb36__0_689 [label=""];
    bb36__0_689 -> bb38__0_689 [label=""];
    bb37__0_689 -> bb38__0_689 [label=""];
}
