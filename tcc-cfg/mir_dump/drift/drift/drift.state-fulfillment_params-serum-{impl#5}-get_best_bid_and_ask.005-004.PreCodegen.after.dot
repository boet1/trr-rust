digraph Mir_0_3309 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;SerumFulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::get_best_bid_and_ask(_1: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;) -&gt; std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;<br align="left"/>let mut _2: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, serum_dex::state::Market&lt;ReErased&gt;&gt;;<br align="left"/>let mut _4: std::result::Result&lt;serum_dex::state::Market&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _5: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _6: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _12: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _13: std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;, serum_dex::error::DexError&gt;;<br align="left"/>let mut _17: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let _18: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _19: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _21: Closure(DefId(0:3310 ~ drift[d311]::state::fulfillment_params::serum::{impl#5}::get_best_bid_and_ask::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((serum_dex::error::DexError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;;<br align="left"/>let mut _27: std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _30: std::result::Result&lt;std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;, serum_dex::error::DexError&gt;;<br align="left"/>let mut _31: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let _32: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _33: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _35: Closure(DefId(0:3311 ~ drift[d311]::state::fulfillment_params::serum::{impl#5}::get_best_bid_and_ask::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((serum_dex::error::DexError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;;<br align="left"/>let _41: serum_dex::matching::OrderBookState&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _43: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _44: &amp;ReErased mut std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;;<br align="left"/>let mut _45: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _46: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _47: &amp;ReErased mut std::cell::RefMut&lt;ReErased, serum_dex::critbit::Slab&gt;;<br align="left"/>let mut _48: &amp;ReErased mut serum_dex::state::MarketState;<br align="left"/>let mut _49: &amp;ReErased mut serum_dex::state::MarketState;<br align="left"/>let mut _50: &amp;ReErased mut serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _51: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _52: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _53: &amp;ReErased serum_dex::critbit::Slab;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: u32;<br align="left"/>let _56: &amp;ReErased serum_dex::critbit::LeafNode;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased serum_dex::critbit::LeafNode&gt;;<br align="left"/>let mut _58: std::result::Result&lt;&amp;ReErased serum_dex::critbit::LeafNode, error::ErrorCode&gt;;<br align="left"/>let mut _59: std::option::Option&lt;&amp;ReErased serum_dex::critbit::LeafNode&gt;;<br align="left"/>let mut _60: &amp;ReErased serum_dex::critbit::AnyNode;<br align="left"/>let _61: &amp;ReErased serum_dex::critbit::AnyNode;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased serum_dex::critbit::AnyNode&gt;;<br align="left"/>let mut _63: std::result::Result&lt;&amp;ReErased serum_dex::critbit::AnyNode, error::ErrorCode&gt;;<br align="left"/>let mut _64: std::option::Option&lt;&amp;ReErased serum_dex::critbit::AnyNode&gt;;<br align="left"/>let mut _65: &amp;ReErased serum_dex::critbit::Slab;<br align="left"/>let mut _66: u32;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: &amp;ReErased serum_dex::critbit::AnyNode;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: &amp;ReErased serum_dex::critbit::LeafNode;<br align="left"/>let _77: u64;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _79: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: std::num::NonZeroU64;<br align="left"/>let mut _82: &amp;ReErased serum_dex::critbit::LeafNode;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: u32;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u64;<br align="left"/>let mut _91: u64;<br align="left"/>let _92: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _93: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _94: &amp;ReErased serum_dex::critbit::Slab;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: u32;<br align="left"/>let _97: &amp;ReErased serum_dex::critbit::LeafNode;<br align="left"/>let mut _98: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased serum_dex::critbit::LeafNode&gt;;<br align="left"/>let mut _99: std::result::Result&lt;&amp;ReErased serum_dex::critbit::LeafNode, error::ErrorCode&gt;;<br align="left"/>let mut _100: std::option::Option&lt;&amp;ReErased serum_dex::critbit::LeafNode&gt;;<br align="left"/>let mut _101: &amp;ReErased serum_dex::critbit::AnyNode;<br align="left"/>let _102: &amp;ReErased serum_dex::critbit::AnyNode;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased serum_dex::critbit::AnyNode&gt;;<br align="left"/>let mut _104: std::result::Result&lt;&amp;ReErased serum_dex::critbit::AnyNode, error::ErrorCode&gt;;<br align="left"/>let mut _105: std::option::Option&lt;&amp;ReErased serum_dex::critbit::AnyNode&gt;;<br align="left"/>let mut _106: &amp;ReErased serum_dex::critbit::Slab;<br align="left"/>let mut _107: u32;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: &amp;ReErased serum_dex::critbit::AnyNode;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _117: &amp;ReErased serum_dex::critbit::LeafNode;<br align="left"/>let _118: u64;<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _120: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _121: u64;<br align="left"/>let mut _122: std::num::NonZeroU64;<br align="left"/>let mut _123: &amp;ReErased serum_dex::critbit::LeafNode;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: u32;<br align="left"/>let mut _126: u64;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _131: u64;<br align="left"/>let mut _132: u64;<br align="left"/>let mut _133: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _134: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _135: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _136: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _139: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _140: &amp;ReErased mut serum_dex::state::MarketState;<br align="left"/>let mut _141: &amp;ReErased mut serum_dex::state::MarketState;<br align="left"/>let mut _142: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _143: &amp;ReErased mut serum_dex::critbit::Slab;<br align="left"/>let mut _144: &amp;ReErased mut serum_dex::state::MarketState;<br align="left"/>let mut _145: &amp;ReErased mut serum_dex::state::MarketState;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug bids =&gt; _13;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug asks =&gt; _27;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug order_book_state =&gt; _41;<br align="left"/>debug best_bid =&gt; _51;<br align="left"/>debug best_bid_h =&gt; _55;<br align="left"/>debug best_bid_ref =&gt; _56;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug price =&gt; _77;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug best_ask =&gt; _92;<br align="left"/>debug best_ask_h =&gt; _96;<br align="left"/>debug best_ask_ref =&gt; _97;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>debug price =&gt; _118;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>>;
    bb0__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = &lt;SerumFulfillmentParams&lt;'_, '_&gt; as Deref&gt;::deref(move _7)</td></tr></table>>];
    bb1__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = &amp;(*_6)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_4 = SerumContext::&lt;'_, '_&gt;::load_serum_market(move _5)</td></tr></table>>];
    bb2__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;serum_dex::state::Market&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_8 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_3 as Continue).0: serum_dex::state::Market&lt;'_&gt;)<br/>_2 = move _12<br/>StorageDead(_12)<br/>_148 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;_2<br/></td></tr><tr><td align="left">_18 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb5__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb7__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_146 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/>StorageDead(_19)<br/>StorageLive(_20)<br/>_136 = deref_copy ((*_1).4: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_20 = &amp;(*_136)<br/></td></tr><tr><td align="left">_16 = MarketState::load_bids_mut(move _17, move _20)</td></tr></table>>];
    bb9__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_17)<br/>StorageLive(_21)<br/>_21 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:474:70: 474:73}<br/></td></tr><tr><td align="left">_15 = std::result::Result::&lt;RefMut&lt;'_, Slab&gt;, DexError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/serum.rs:474:70: 474:73}&gt;(move _16, move _21)</td></tr></table>>];
    bb10__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;RefMut&lt;'_, Slab&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb11__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_22 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb12__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_14 as Continue).0: std::cell::RefMut&lt;'_, serum_dex::critbit::Slab&gt;)<br/>_13 = move _26<br/>StorageDead(_26)<br/>_152 = discriminant(_14)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_2<br/></td></tr><tr><td align="left">_32 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _33)</td></tr></table>>];
    bb13__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb14__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>_150 = discriminant(_14)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_31 = &amp;(*_32)<br/>StorageDead(_33)<br/>StorageLive(_34)<br/>_137 = deref_copy ((*_1).5: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_34 = &amp;(*_137)<br/></td></tr><tr><td align="left">_30 = MarketState::load_asks_mut(move _31, move _34)</td></tr></table>>];
    bb16__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_31)<br/>StorageLive(_35)<br/>_35 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:479:70: 479:73}<br/></td></tr><tr><td align="left">_29 = std::result::Result::&lt;RefMut&lt;'_, Slab&gt;, DexError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/serum.rs:479:70: 479:73}&gt;(move _30, move _35)</td></tr></table>>];
    bb17__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;RefMut&lt;'_, Slab&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb18__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_36 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb19__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_28 as Continue).0: std::cell::RefMut&lt;'_, serum_dex::critbit::Slab&gt;)<br/>_27 = move _40<br/>StorageDead(_40)<br/>_156 = discriminant(_28)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;mut _13<br/></td></tr><tr><td align="left">_43 = &lt;RefMut&lt;'_, Slab&gt; as DerefMut&gt;::deref_mut(move _44)</td></tr></table>>];
    bb20__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb21__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>_154 = discriminant(_28)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_42 = &amp;mut (*_43)<br/>StorageDead(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;mut _27<br/></td></tr><tr><td align="left">_46 = &lt;RefMut&lt;'_, Slab&gt; as DerefMut&gt;::deref_mut(move _47)</td></tr></table>>];
    bb23__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_45 = &amp;mut (*_46)<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;mut _2<br/></td></tr><tr><td align="left">_49 = &lt;serum_dex::state::Market&lt;'_&gt; as DerefMut&gt;::deref_mut(move _50)</td></tr></table>>];
    bb24__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_48 = &amp;mut (*_49)<br/>StorageDead(_50)<br/>_41 = OrderBookState::&lt;'_&gt; { bids: move _42, asks: move _45, market_state: move _48 }<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_138 = deref_copy (_41.0: &amp;mut serum_dex::critbit::Slab)<br/>_53 = &amp;(*_138)<br/></td></tr><tr><td align="left">_52 = Slab::find_max(move _53)</td></tr></table>>];
    bb25__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_54 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb26__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_51 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_52 as Some).0: u32)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_139 = deref_copy (_41.0: &amp;mut serum_dex::critbit::Slab)<br/>_65 = &amp;(*_139)<br/>StorageLive(_66)<br/>_66 = _55<br/></td></tr><tr><td align="left">_64 = &lt;Slab as SlabView&lt;serum_dex::critbit::AnyNode&gt;&gt;::get(move _65, move _66)</td></tr></table>>];
    bb28__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;Option&lt;&amp;serum_dex::critbit::AnyNode&gt; as SafeUnwrap&gt;::safe_unwrap(move _64)</td></tr></table>>];
    bb29__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;&amp;serum_dex::critbit::AnyNode, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb30__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_67 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb31__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_62 as Continue).0: &amp;serum_dex::critbit::AnyNode)<br/>_61 = _71<br/>StorageDead(_71)<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = serum_dex::critbit::AnyNode::as_leaf(move _60)</td></tr></table>>];
    bb32__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb33__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;Option&lt;&amp;serum_dex::critbit::LeafNode&gt; as SafeUnwrap&gt;::safe_unwrap(move _59)</td></tr></table>>];
    bb35__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;&amp;serum_dex::critbit::LeafNode, error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb36__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_72 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb37__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_57 as Continue).0: &amp;serum_dex::critbit::LeafNode)<br/>_56 = _76<br/>StorageDead(_76)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;(*_56)<br/></td></tr><tr><td align="left">_81 = serum_dex::critbit::LeafNode::price(move _82)</td></tr></table>>];
    bb38__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb39__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = NonZeroU64::get(move _81)</td></tr></table>>];
    bb41__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_83)<br/>_140 = deref_copy (_41.2: &amp;mut serum_dex::state::MarketState)<br/>_83 = ((*_140).17: u64)<br/>StorageLive(_84)<br/>_84 = ((*_1).14: u32)<br/>StorageLive(_85)<br/>_141 = deref_copy (_41.2: &amp;mut serum_dex::state::MarketState)<br/>_85 = ((*_141).16: u64)<br/></td></tr><tr><td align="left">_79 = calculate_price_from_serum_limit_price(move _80, move _83, move _84, move _85)</td></tr></table>>];
    bb42__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb43__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_86 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb44__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_78 as Continue).0: u64)<br/>_77 = _90<br/>StorageDead(_90)<br/>StorageDead(_78)<br/>StorageLive(_91)<br/>_91 = _77<br/>_51 = Option::&lt;u64&gt;::Some(move _91)<br/>StorageDead(_91)<br/>StorageDead(_77)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb46__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_142 = deref_copy (_41.1: &amp;mut serum_dex::critbit::Slab)<br/>_94 = &amp;(*_142)<br/></td></tr><tr><td align="left">_93 = Slab::find_min(move _94)</td></tr></table>>];
    bb48__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_95 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb49__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_92 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_93 as Some).0: u32)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_143 = deref_copy (_41.1: &amp;mut serum_dex::critbit::Slab)<br/>_106 = &amp;(*_143)<br/>StorageLive(_107)<br/>_107 = _96<br/></td></tr><tr><td align="left">_105 = &lt;Slab as SlabView&lt;serum_dex::critbit::AnyNode&gt;&gt;::get(move _106, move _107)</td></tr></table>>];
    bb51__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;Option&lt;&amp;serum_dex::critbit::AnyNode&gt; as SafeUnwrap&gt;::safe_unwrap(move _105)</td></tr></table>>];
    bb52__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;&amp;serum_dex::critbit::AnyNode, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb53__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_108 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb54__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_103 as Continue).0: &amp;serum_dex::critbit::AnyNode)<br/>_102 = _112<br/>StorageDead(_112)<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = serum_dex::critbit::AnyNode::as_leaf(move _101)</td></tr></table>>];
    bb55__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb56__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;Option&lt;&amp;serum_dex::critbit::LeafNode&gt; as SafeUnwrap&gt;::safe_unwrap(move _100)</td></tr></table>>];
    bb58__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;std::result::Result&lt;&amp;serum_dex::critbit::LeafNode, error::ErrorCode&gt; as Try&gt;::branch(move _99)</td></tr></table>>];
    bb59__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_113 = discriminant(_98)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb60__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_98 as Continue).0: &amp;serum_dex::critbit::LeafNode)<br/>_97 = _117<br/>StorageDead(_117)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;(*_97)<br/></td></tr><tr><td align="left">_122 = serum_dex::critbit::LeafNode::price(move _123)</td></tr></table>>];
    bb61__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_98 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_116)<br/>_116 = _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb62__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = NonZeroU64::get(move _122)</td></tr></table>>];
    bb64__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageLive(_124)<br/>_144 = deref_copy (_41.2: &amp;mut serum_dex::state::MarketState)<br/>_124 = ((*_144).17: u64)<br/>StorageLive(_125)<br/>_125 = ((*_1).14: u32)<br/>StorageLive(_126)<br/>_145 = deref_copy (_41.2: &amp;mut serum_dex::state::MarketState)<br/>_126 = ((*_145).16: u64)<br/></td></tr><tr><td align="left">_120 = calculate_price_from_serum_limit_price(move _121, move _124, move _125, move _126)</td></tr></table>>];
    bb65__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb66__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_127 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb67__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_119 as Continue).0: u64)<br/>_118 = _131<br/>StorageDead(_131)<br/>StorageDead(_119)<br/>StorageLive(_132)<br/>_132 = _118<br/>_92 = Option::&lt;u64&gt;::Some(move _132)<br/>StorageDead(_132)<br/>StorageDead(_118)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_130)<br/>_130 = _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb69__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = _51<br/>StorageLive(_135)<br/>_135 = _92<br/>_133 = (move _134, move _135)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>_0 = std::result::Result::&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt;::Ok(move _133)<br/>StorageDead(_133)<br/>StorageDead(_92)<br/>StorageDead(_51)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb71__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb72__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb73__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb79__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb80__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb81__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb83__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb84__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb85__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb86__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb87__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left" balign="left">_158 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left" balign="left">_159 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_3309 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left" balign="left">_160 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3309 -> bb1__0_3309 [label="return"];
    bb1__0_3309 -> bb2__0_3309 [label="return"];
    bb2__0_3309 -> bb3__0_3309 [label="return"];
    bb2__0_3309 -> bb86__0_3309 [label="unwind"];
    bb3__0_3309 -> bb4__0_3309 [label="0"];
    bb3__0_3309 -> bb6__0_3309 [label="1"];
    bb3__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb4__0_3309 -> bb8__0_3309 [label="return"];
    bb4__0_3309 -> bb85__0_3309 [label="unwind"];
    bb6__0_3309 -> bb7__0_3309 [label="return"];
    bb6__0_3309 -> bb89__0_3309 [label="unwind"];
    bb7__0_3309 -> bb81__0_3309 [label=""];
    bb8__0_3309 -> bb9__0_3309 [label="return"];
    bb8__0_3309 -> bb85__0_3309 [label="unwind"];
    bb9__0_3309 -> bb10__0_3309 [label="return"];
    bb9__0_3309 -> bb85__0_3309 [label="unwind"];
    bb10__0_3309 -> bb11__0_3309 [label="return"];
    bb10__0_3309 -> bb85__0_3309 [label="unwind"];
    bb11__0_3309 -> bb12__0_3309 [label="0"];
    bb11__0_3309 -> bb13__0_3309 [label="1"];
    bb11__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb12__0_3309 -> bb15__0_3309 [label="return"];
    bb12__0_3309 -> bb84__0_3309 [label="unwind"];
    bb13__0_3309 -> bb14__0_3309 [label="return"];
    bb13__0_3309 -> bb88__0_3309 [label="unwind"];
    bb14__0_3309 -> bb80__0_3309 [label=""];
    bb15__0_3309 -> bb16__0_3309 [label="return"];
    bb15__0_3309 -> bb84__0_3309 [label="unwind"];
    bb16__0_3309 -> bb17__0_3309 [label="return"];
    bb16__0_3309 -> bb84__0_3309 [label="unwind"];
    bb17__0_3309 -> bb18__0_3309 [label="return"];
    bb17__0_3309 -> bb84__0_3309 [label="unwind"];
    bb18__0_3309 -> bb19__0_3309 [label="0"];
    bb18__0_3309 -> bb20__0_3309 [label="1"];
    bb18__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb19__0_3309 -> bb22__0_3309 [label="return"];
    bb19__0_3309 -> bb83__0_3309 [label="unwind"];
    bb20__0_3309 -> bb21__0_3309 [label="return"];
    bb20__0_3309 -> bb87__0_3309 [label="unwind"];
    bb21__0_3309 -> bb79__0_3309 [label=""];
    bb22__0_3309 -> bb23__0_3309 [label="return"];
    bb22__0_3309 -> bb83__0_3309 [label="unwind"];
    bb23__0_3309 -> bb24__0_3309 [label="return"];
    bb23__0_3309 -> bb83__0_3309 [label="unwind"];
    bb24__0_3309 -> bb25__0_3309 [label="return"];
    bb24__0_3309 -> bb83__0_3309 [label="unwind"];
    bb25__0_3309 -> bb26__0_3309 [label="0"];
    bb25__0_3309 -> bb27__0_3309 [label="1"];
    bb25__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb26__0_3309 -> bb47__0_3309 [label=""];
    bb27__0_3309 -> bb28__0_3309 [label="return"];
    bb27__0_3309 -> bb83__0_3309 [label="unwind"];
    bb28__0_3309 -> bb29__0_3309 [label="return"];
    bb28__0_3309 -> bb83__0_3309 [label="unwind"];
    bb29__0_3309 -> bb30__0_3309 [label="return"];
    bb29__0_3309 -> bb83__0_3309 [label="unwind"];
    bb30__0_3309 -> bb31__0_3309 [label="0"];
    bb30__0_3309 -> bb32__0_3309 [label="1"];
    bb30__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb31__0_3309 -> bb34__0_3309 [label="return"];
    bb31__0_3309 -> bb83__0_3309 [label="unwind"];
    bb32__0_3309 -> bb33__0_3309 [label="return"];
    bb32__0_3309 -> bb83__0_3309 [label="unwind"];
    bb33__0_3309 -> bb76__0_3309 [label=""];
    bb34__0_3309 -> bb35__0_3309 [label="return"];
    bb34__0_3309 -> bb83__0_3309 [label="unwind"];
    bb35__0_3309 -> bb36__0_3309 [label="return"];
    bb35__0_3309 -> bb83__0_3309 [label="unwind"];
    bb36__0_3309 -> bb37__0_3309 [label="0"];
    bb36__0_3309 -> bb38__0_3309 [label="1"];
    bb36__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb37__0_3309 -> bb40__0_3309 [label="return"];
    bb37__0_3309 -> bb83__0_3309 [label="unwind"];
    bb38__0_3309 -> bb39__0_3309 [label="return"];
    bb38__0_3309 -> bb83__0_3309 [label="unwind"];
    bb39__0_3309 -> bb76__0_3309 [label=""];
    bb40__0_3309 -> bb41__0_3309 [label="return"];
    bb40__0_3309 -> bb83__0_3309 [label="unwind"];
    bb41__0_3309 -> bb42__0_3309 [label="return"];
    bb41__0_3309 -> bb83__0_3309 [label="unwind"];
    bb42__0_3309 -> bb43__0_3309 [label="return"];
    bb42__0_3309 -> bb83__0_3309 [label="unwind"];
    bb43__0_3309 -> bb44__0_3309 [label="0"];
    bb43__0_3309 -> bb45__0_3309 [label="1"];
    bb43__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb44__0_3309 -> bb47__0_3309 [label=""];
    bb45__0_3309 -> bb46__0_3309 [label="return"];
    bb45__0_3309 -> bb83__0_3309 [label="unwind"];
    bb46__0_3309 -> bb77__0_3309 [label=""];
    bb47__0_3309 -> bb48__0_3309 [label="return"];
    bb47__0_3309 -> bb83__0_3309 [label="unwind"];
    bb48__0_3309 -> bb49__0_3309 [label="0"];
    bb48__0_3309 -> bb50__0_3309 [label="1"];
    bb48__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb49__0_3309 -> bb70__0_3309 [label=""];
    bb50__0_3309 -> bb51__0_3309 [label="return"];
    bb50__0_3309 -> bb83__0_3309 [label="unwind"];
    bb51__0_3309 -> bb52__0_3309 [label="return"];
    bb51__0_3309 -> bb83__0_3309 [label="unwind"];
    bb52__0_3309 -> bb53__0_3309 [label="return"];
    bb52__0_3309 -> bb83__0_3309 [label="unwind"];
    bb53__0_3309 -> bb54__0_3309 [label="0"];
    bb53__0_3309 -> bb55__0_3309 [label="1"];
    bb53__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb54__0_3309 -> bb57__0_3309 [label="return"];
    bb54__0_3309 -> bb83__0_3309 [label="unwind"];
    bb55__0_3309 -> bb56__0_3309 [label="return"];
    bb55__0_3309 -> bb83__0_3309 [label="unwind"];
    bb56__0_3309 -> bb74__0_3309 [label=""];
    bb57__0_3309 -> bb58__0_3309 [label="return"];
    bb57__0_3309 -> bb83__0_3309 [label="unwind"];
    bb58__0_3309 -> bb59__0_3309 [label="return"];
    bb58__0_3309 -> bb83__0_3309 [label="unwind"];
    bb59__0_3309 -> bb60__0_3309 [label="0"];
    bb59__0_3309 -> bb61__0_3309 [label="1"];
    bb59__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb60__0_3309 -> bb63__0_3309 [label="return"];
    bb60__0_3309 -> bb83__0_3309 [label="unwind"];
    bb61__0_3309 -> bb62__0_3309 [label="return"];
    bb61__0_3309 -> bb83__0_3309 [label="unwind"];
    bb62__0_3309 -> bb74__0_3309 [label=""];
    bb63__0_3309 -> bb64__0_3309 [label="return"];
    bb63__0_3309 -> bb83__0_3309 [label="unwind"];
    bb64__0_3309 -> bb65__0_3309 [label="return"];
    bb64__0_3309 -> bb83__0_3309 [label="unwind"];
    bb65__0_3309 -> bb66__0_3309 [label="return"];
    bb65__0_3309 -> bb83__0_3309 [label="unwind"];
    bb66__0_3309 -> bb67__0_3309 [label="0"];
    bb66__0_3309 -> bb68__0_3309 [label="1"];
    bb66__0_3309 -> bb5__0_3309 [label="otherwise"];
    bb67__0_3309 -> bb70__0_3309 [label=""];
    bb68__0_3309 -> bb69__0_3309 [label="return"];
    bb68__0_3309 -> bb83__0_3309 [label="unwind"];
    bb69__0_3309 -> bb75__0_3309 [label=""];
    bb70__0_3309 -> bb71__0_3309 [label="return"];
    bb70__0_3309 -> bb84__0_3309 [label="unwind"];
    bb71__0_3309 -> bb72__0_3309 [label="return"];
    bb71__0_3309 -> bb85__0_3309 [label="unwind"];
    bb72__0_3309 -> bb73__0_3309 [label="return"];
    bb72__0_3309 -> bb86__0_3309 [label="unwind"];
    bb73__0_3309 -> bb82__0_3309 [label=""];
    bb74__0_3309 -> bb75__0_3309 [label=""];
    bb75__0_3309 -> bb78__0_3309 [label=""];
    bb76__0_3309 -> bb77__0_3309 [label=""];
    bb77__0_3309 -> bb78__0_3309 [label=""];
    bb78__0_3309 -> bb79__0_3309 [label="return"];
    bb78__0_3309 -> bb84__0_3309 [label="unwind"];
    bb79__0_3309 -> bb80__0_3309 [label="return"];
    bb79__0_3309 -> bb85__0_3309 [label="unwind"];
    bb80__0_3309 -> bb81__0_3309 [label="return"];
    bb80__0_3309 -> bb86__0_3309 [label="unwind"];
    bb81__0_3309 -> bb82__0_3309 [label=""];
    bb83__0_3309 -> bb84__0_3309 [label="return"];
    bb84__0_3309 -> bb85__0_3309 [label="return"];
    bb85__0_3309 -> bb86__0_3309 [label="return"];
    bb87__0_3309 -> bb84__0_3309 [label=""];
    bb88__0_3309 -> bb85__0_3309 [label=""];
    bb89__0_3309 -> bb86__0_3309 [label=""];
}
