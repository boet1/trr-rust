digraph Mir_0_193 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_user_stats_if_stake_amount(_1: i64, _2: u64, _3: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake, _4: &amp;ReErased mut state::user::UserStats, _5: &amp;ReErased mut state::spot_market::SpotMarket, _6: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _7: ();<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: u16;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: u16;<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: u8;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: ();<br align="left"/>let _16: u64;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _24: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _25: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u128;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: i64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u64;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: u128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _54: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: u128;<br align="left"/>let mut _60: u128;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _63: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let _77: ();<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: u16;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: u16;<br align="left"/>let mut _83: u64;<br align="left"/>let _84: ();<br align="left"/>let mut _85: bool;<br align="left"/>let mut _86: u8;<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: i64;<br align="left"/>let _89: u32;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _91: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _92: i64;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: u32;<br align="left"/>let _98: u32;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _100: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _101: u32;<br align="left"/>let mut _102: u32;<br align="left"/>let mut _103: u32;<br align="left"/>let mut _104: u32;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _106: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u32;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u32;<br align="left"/>let _117: u64;<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _119: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _120: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _121: u64;<br align="left"/>let mut _122: i64;<br align="left"/>let mut _123: u32;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: u64;<br align="left"/>let mut _129: u32;<br align="left"/>let mut _130: u32;<br align="left"/>let mut _131: u32;<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _133: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _134: u64;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: u32;<br align="left"/>let mut _140: u32;<br align="left"/>let mut _141: ();<br align="left"/>debug if_stake_amount_delta =&gt; _1;<br align="left"/>debug insurance_vault_amount =&gt; _2;<br align="left"/>debug insurance_fund_stake =&gt; _3;<br align="left"/>debug user_stats =&gt; _4;<br align="left"/>debug spot_market =&gt; _5;<br align="left"/>debug now =&gt; _6;<br align="left"/>debug if_stake_amount =&gt; _16;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug now_u32 =&gt; _89;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug since_last =&gt; _98;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug fuel_bonus_insurance =&gt; _117;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>>;
    bb0__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_5).42: u16)<br/>_8 = Ne(move _9, const _)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_5).42: u16)<br/>_10 = Ne(move _11, const _)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb2__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = ((*_5).60: u8)<br/>_12 = Eq(move _13, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>_15 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _15)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_7 = const ()<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _1<br/>_17 = Ge(move _18, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb8__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_3)<br/>StorageLive(_25)<br/>_25 = &amp;(*_5)<br/></td></tr><tr><td align="left">_23 = InsuranceFundStake::checked_if_shares(move _24, move _25)</td></tr></table>>];
    bb9__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;(*_3)<br/>StorageLive(_54)<br/>_54 = &amp;(*_5)<br/></td></tr><tr><td align="left">_52 = InsuranceFundStake::checked_if_shares(move _53, move _54)</td></tr></table>>];
    bb10__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb11__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_26 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb12__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Continue).0: u128)<br/>_21 = _30<br/>StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _2<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _1<br/></td></tr><tr><td align="left">_36 = core::num::&lt;impl i64&gt;::unsigned_abs(move _37)</td></tr></table>>];
    bb13__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb15__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_34 = &lt;u64 as SafeMath&gt;::safe_add(move _35, move _36)</td></tr></table>>];
    bb17__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb18__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_38 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb19__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_33 as Continue).0: u64)<br/>_32 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_20 = if_shares_to_vault_amount(move _21, move _31, move _32)</td></tr></table>>];
    bb20__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb21__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb23__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_43 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_19 as Continue).0: u64)<br/>_16 = _47<br/>StorageDead(_47)<br/>StorageDead(_33)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb28__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_55 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb29__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_51 as Continue).0: u128)<br/>_50 = _59<br/>StorageDead(_59)<br/>StorageLive(_60)<br/>_60 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _2<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _1<br/></td></tr><tr><td align="left">_65 = core::num::&lt;impl i64&gt;::unsigned_abs(move _66)</td></tr></table>>];
    bb30__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb31__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = &lt;u64 as SafeMath&gt;::safe_sub(move _64, move _65)</td></tr></table>>];
    bb33__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb34__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_67 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb35__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_62 as Continue).0: u64)<br/>_61 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_49 = if_shares_to_vault_amount(move _50, move _60, move _61)</td></tr></table>>];
    bb36__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb37__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb39__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_72 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb40__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_48 as Continue).0: u64)<br/>_16 = _76<br/>StorageDead(_76)<br/>StorageDead(_62)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb42__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = ((*_5).42: u16)<br/>_78 = Eq(move _79, const _)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb44__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>_80 = _16<br/>((*_4).10: u64) = move _80<br/>StorageDead(_80)<br/>_77 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = ((*_5).42: u16)<br/>_81 = Eq(move _82, const _)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb46__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_83)<br/>_83 = _16<br/>((*_4).23: u64) = move _83<br/>StorageDead(_83)<br/>_77 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_77 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = ((*_5).60: u8)<br/>_85 = Ne(move _86, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb50__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _6<br/>_87 = Ge(move _88, const _)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb51__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = _6<br/></td></tr><tr><td align="left">_91 = &lt;i64 as Cast&gt;::cast::&lt;u32&gt;(move _92)</td></tr></table>>];
    bb52__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb53__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_93 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb54__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_90 as Continue).0: u32)<br/>_89 = _97<br/>StorageDead(_97)<br/>StorageDead(_90)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _89<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = ((*_4).24: u32)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/></td></tr><tr><td align="left">_106 = &lt;i64 as Cast&gt;::cast::&lt;u32&gt;(const _)</td></tr></table>>];
    bb55__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb56__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb58__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_107 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb59__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_105 as Continue).0: u32)<br/>_104 = _111<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_102 = &lt;u32 as Ord&gt;::max(move _103, move _104)</td></tr></table>>];
    bb60__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb61__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_100 = &lt;u32 as SafeMath&gt;::safe_sub(move _101, move _102)</td></tr></table>>];
    bb63__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb64__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_112 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb65__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_99 as Continue).0: u32)<br/>_98 = _116<br/>StorageDead(_116)<br/>StorageDead(_105)<br/>StorageDead(_99)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;(*_5)<br/>StorageLive(_121)<br/>_121 = _16<br/>StorageLive(_122)<br/>_122 = _1<br/>StorageLive(_123)<br/>_123 = _98<br/></td></tr><tr><td align="left">_119 = calculate_insurance_fuel_bonus(move _120, move _121, move _122, move _123)</td></tr></table>>];
    bb66__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb67__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb69__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_124 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb70__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_118 as Continue).0: u64)<br/>_117 = _128<br/>StorageDead(_128)<br/>StorageDead(_118)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = ((*_4).17: u32)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = _117<br/></td></tr><tr><td align="left">_133 = &lt;u64 as Cast&gt;::cast::&lt;u32&gt;(move _134)</td></tr></table>>];
    bb71__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb72__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb74__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_135 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb75__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_132 as Continue).0: u32)<br/>_131 = _139<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_129 = core::num::&lt;impl u32&gt;::saturating_add(move _130, move _131)</td></tr></table>>];
    bb76__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb77__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/>((*_4).17: u32) = move _129<br/>StorageDead(_129)<br/>StorageDead(_132)<br/>StorageLive(_140)<br/>_140 = _89<br/>((*_4).24: u32) = move _140<br/>StorageDead(_140)<br/>_84 = const ()<br/>StorageDead(_117)<br/>StorageDead(_98)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_84 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_141)<br/>_141 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _141)<br/>StorageDead(_141)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_193 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_193 -> bb6__0_193 [label="0"];
    bb0__0_193 -> bb1__0_193 [label="otherwise"];
    bb1__0_193 -> bb5__0_193 [label="0"];
    bb1__0_193 -> bb2__0_193 [label="otherwise"];
    bb2__0_193 -> bb4__0_193 [label="0"];
    bb2__0_193 -> bb3__0_193 [label="otherwise"];
    bb3__0_193 -> bb93__0_193 [label=""];
    bb4__0_193 -> bb7__0_193 [label=""];
    bb5__0_193 -> bb7__0_193 [label=""];
    bb6__0_193 -> bb7__0_193 [label=""];
    bb7__0_193 -> bb9__0_193 [label="0"];
    bb7__0_193 -> bb8__0_193 [label="otherwise"];
    bb8__0_193 -> bb10__0_193 [label="return"];
    bb9__0_193 -> bb27__0_193 [label="return"];
    bb10__0_193 -> bb11__0_193 [label="return"];
    bb11__0_193 -> bb12__0_193 [label="0"];
    bb11__0_193 -> bb14__0_193 [label="1"];
    bb11__0_193 -> bb13__0_193 [label="otherwise"];
    bb12__0_193 -> bb16__0_193 [label="return"];
    bb14__0_193 -> bb15__0_193 [label="return"];
    bb15__0_193 -> bb90__0_193 [label=""];
    bb16__0_193 -> bb17__0_193 [label="return"];
    bb17__0_193 -> bb18__0_193 [label="return"];
    bb18__0_193 -> bb19__0_193 [label="0"];
    bb18__0_193 -> bb20__0_193 [label="1"];
    bb18__0_193 -> bb13__0_193 [label="otherwise"];
    bb19__0_193 -> bb22__0_193 [label="return"];
    bb20__0_193 -> bb21__0_193 [label="return"];
    bb21__0_193 -> bb89__0_193 [label=""];
    bb22__0_193 -> bb23__0_193 [label="return"];
    bb23__0_193 -> bb24__0_193 [label="0"];
    bb23__0_193 -> bb25__0_193 [label="1"];
    bb23__0_193 -> bb13__0_193 [label="otherwise"];
    bb24__0_193 -> bb43__0_193 [label=""];
    bb25__0_193 -> bb26__0_193 [label="return"];
    bb26__0_193 -> bb89__0_193 [label=""];
    bb27__0_193 -> bb28__0_193 [label="return"];
    bb28__0_193 -> bb29__0_193 [label="0"];
    bb28__0_193 -> bb30__0_193 [label="1"];
    bb28__0_193 -> bb13__0_193 [label="otherwise"];
    bb29__0_193 -> bb32__0_193 [label="return"];
    bb30__0_193 -> bb31__0_193 [label="return"];
    bb31__0_193 -> bb88__0_193 [label=""];
    bb32__0_193 -> bb33__0_193 [label="return"];
    bb33__0_193 -> bb34__0_193 [label="return"];
    bb34__0_193 -> bb35__0_193 [label="0"];
    bb34__0_193 -> bb36__0_193 [label="1"];
    bb34__0_193 -> bb13__0_193 [label="otherwise"];
    bb35__0_193 -> bb38__0_193 [label="return"];
    bb36__0_193 -> bb37__0_193 [label="return"];
    bb37__0_193 -> bb87__0_193 [label=""];
    bb38__0_193 -> bb39__0_193 [label="return"];
    bb39__0_193 -> bb40__0_193 [label="0"];
    bb39__0_193 -> bb41__0_193 [label="1"];
    bb39__0_193 -> bb13__0_193 [label="otherwise"];
    bb40__0_193 -> bb43__0_193 [label=""];
    bb41__0_193 -> bb42__0_193 [label="return"];
    bb42__0_193 -> bb87__0_193 [label=""];
    bb43__0_193 -> bb45__0_193 [label="0"];
    bb43__0_193 -> bb44__0_193 [label="otherwise"];
    bb44__0_193 -> bb49__0_193 [label=""];
    bb45__0_193 -> bb47__0_193 [label="0"];
    bb45__0_193 -> bb46__0_193 [label="otherwise"];
    bb46__0_193 -> bb48__0_193 [label=""];
    bb47__0_193 -> bb48__0_193 [label=""];
    bb48__0_193 -> bb49__0_193 [label=""];
    bb49__0_193 -> bb80__0_193 [label="0"];
    bb49__0_193 -> bb50__0_193 [label="otherwise"];
    bb50__0_193 -> bb79__0_193 [label="0"];
    bb50__0_193 -> bb51__0_193 [label="otherwise"];
    bb51__0_193 -> bb52__0_193 [label="return"];
    bb52__0_193 -> bb53__0_193 [label="return"];
    bb53__0_193 -> bb54__0_193 [label="0"];
    bb53__0_193 -> bb55__0_193 [label="1"];
    bb53__0_193 -> bb13__0_193 [label="otherwise"];
    bb54__0_193 -> bb57__0_193 [label="return"];
    bb55__0_193 -> bb56__0_193 [label="return"];
    bb56__0_193 -> bb86__0_193 [label=""];
    bb57__0_193 -> bb58__0_193 [label="return"];
    bb58__0_193 -> bb59__0_193 [label="0"];
    bb58__0_193 -> bb60__0_193 [label="1"];
    bb58__0_193 -> bb13__0_193 [label="otherwise"];
    bb59__0_193 -> bb62__0_193 [label="return"];
    bb60__0_193 -> bb61__0_193 [label="return"];
    bb61__0_193 -> bb84__0_193 [label=""];
    bb62__0_193 -> bb63__0_193 [label="return"];
    bb63__0_193 -> bb64__0_193 [label="return"];
    bb64__0_193 -> bb65__0_193 [label="0"];
    bb64__0_193 -> bb66__0_193 [label="1"];
    bb64__0_193 -> bb13__0_193 [label="otherwise"];
    bb65__0_193 -> bb68__0_193 [label="return"];
    bb66__0_193 -> bb67__0_193 [label="return"];
    bb67__0_193 -> bb84__0_193 [label=""];
    bb68__0_193 -> bb69__0_193 [label="return"];
    bb69__0_193 -> bb70__0_193 [label="0"];
    bb69__0_193 -> bb71__0_193 [label="1"];
    bb69__0_193 -> bb13__0_193 [label="otherwise"];
    bb70__0_193 -> bb73__0_193 [label="return"];
    bb71__0_193 -> bb72__0_193 [label="return"];
    bb72__0_193 -> bb83__0_193 [label=""];
    bb73__0_193 -> bb74__0_193 [label="return"];
    bb74__0_193 -> bb75__0_193 [label="0"];
    bb74__0_193 -> bb76__0_193 [label="1"];
    bb74__0_193 -> bb13__0_193 [label="otherwise"];
    bb75__0_193 -> bb78__0_193 [label="return"];
    bb76__0_193 -> bb77__0_193 [label="return"];
    bb77__0_193 -> bb83__0_193 [label=""];
    bb78__0_193 -> bb82__0_193 [label=""];
    bb79__0_193 -> bb81__0_193 [label=""];
    bb80__0_193 -> bb81__0_193 [label=""];
    bb81__0_193 -> bb82__0_193 [label=""];
    bb82__0_193 -> bb93__0_193 [label=""];
    bb83__0_193 -> bb85__0_193 [label=""];
    bb84__0_193 -> bb85__0_193 [label=""];
    bb85__0_193 -> bb86__0_193 [label=""];
    bb86__0_193 -> bb92__0_193 [label=""];
    bb87__0_193 -> bb88__0_193 [label=""];
    bb88__0_193 -> bb91__0_193 [label=""];
    bb89__0_193 -> bb90__0_193 [label=""];
    bb90__0_193 -> bb91__0_193 [label=""];
    bb91__0_193 -> bb92__0_193 [label=""];
    bb92__0_193 -> bb93__0_193 [label=""];
}
