// MIR for `validate_margin_weights` after PreCodegen

fn validate_margin_weights(_1: u16, _2: u32, _3: u32, _4: u32, _5: u32, _6: u32) -> std::result::Result<(), error::ErrorCode> {
    debug spot_market_index => _1;
    debug initial_asset_weight => _2;
    debug maintenance_asset_weight => _3;
    debug initial_liability_weight => _4;
    debug maintenance_liability_weight => _5;
    debug imf_factor => _6;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let _7: ();
    let mut _8: bool;
    let mut _9: u16;
    let _10: ();
    let mut _11: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _12: std::result::Result<(), error::ErrorCode>;
    let mut _13: bool;
    let mut _14: u32;
    let mut _15: ();
    let _16: error::ErrorCode;
    let _17: ();
    let mut _18: &str;
    let _19: &str;
    let mut _20: &std::string::String;
    let _21: &std::string::String;
    let _22: std::string::String;
    let mut _24: std::fmt::Arguments<'_>;
    let mut _25: &[&str];
    let mut _26: &[&str; 2];
    let _27: &[&str; 2];
    let _28: [&str; 2];
    let mut _29: &[core::fmt::rt::Argument<'_>];
    let mut _30: &[core::fmt::rt::Argument<'_>; 1];
    let _31: &[core::fmt::rt::Argument<'_>; 1];
    let _32: [core::fmt::rt::Argument<'_>; 1];
    let mut _33: core::fmt::rt::Argument<'_>;
    let mut _34: &error::ErrorCode;
    let _35: &error::ErrorCode;
    let _36: ();
    let mut _37: &str;
    let _38: &str;
    let mut _39: &std::string::String;
    let _40: &std::string::String;
    let _41: std::string::String;
    let mut _43: std::fmt::Arguments<'_>;
    let mut _44: &[&str];
    let mut _45: &[&str; 1];
    let _46: &[&str; 1];
    let _47: [&str; 1];
    let mut _48: &[core::fmt::rt::Argument<'_>];
    let mut _49: &[core::fmt::rt::Argument<'_>; 1];
    let _50: &[core::fmt::rt::Argument<'_>; 1];
    let _51: [core::fmt::rt::Argument<'_>; 1];
    let mut _52: core::fmt::rt::Argument<'_>;
    let mut _53: &u32;
    let _54: &u32;
    let _55: u32;
    let mut _56: error::ErrorCode;
    let mut _57: isize;
    let _58: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _59: !;
    let mut _60: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _61: ();
    let _62: ();
    let mut _63: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _64: std::result::Result<(), error::ErrorCode>;
    let mut _65: bool;
    let mut _66: u32;
    let mut _67: ();
    let _68: error::ErrorCode;
    let _69: ();
    let mut _70: &str;
    let _71: &str;
    let mut _72: &std::string::String;
    let _73: &std::string::String;
    let _74: std::string::String;
    let mut _76: std::fmt::Arguments<'_>;
    let mut _77: &[&str];
    let mut _78: &[&str; 2];
    let _79: &[&str; 2];
    let _80: [&str; 2];
    let mut _81: &[core::fmt::rt::Argument<'_>];
    let mut _82: &[core::fmt::rt::Argument<'_>; 1];
    let _83: &[core::fmt::rt::Argument<'_>; 1];
    let _84: [core::fmt::rt::Argument<'_>; 1];
    let mut _85: core::fmt::rt::Argument<'_>;
    let mut _86: &error::ErrorCode;
    let _87: &error::ErrorCode;
    let _88: ();
    let mut _89: &str;
    let _90: &str;
    let mut _91: &std::string::String;
    let _92: &std::string::String;
    let _93: std::string::String;
    let mut _95: std::fmt::Arguments<'_>;
    let mut _96: &[&str];
    let mut _97: &[&str; 1];
    let _98: &[&str; 1];
    let _99: [&str; 1];
    let mut _100: &[core::fmt::rt::Argument<'_>];
    let mut _101: &[core::fmt::rt::Argument<'_>; 1];
    let _102: &[core::fmt::rt::Argument<'_>; 1];
    let _103: [core::fmt::rt::Argument<'_>; 1];
    let mut _104: core::fmt::rt::Argument<'_>;
    let mut _105: &u32;
    let _106: &u32;
    let _107: u32;
    let mut _108: error::ErrorCode;
    let mut _109: isize;
    let _110: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _111: !;
    let mut _112: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _113: ();
    let _114: ();
    let mut _115: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _116: std::result::Result<(), error::ErrorCode>;
    let mut _117: bool;
    let mut _118: u32;
    let mut _119: ();
    let _120: error::ErrorCode;
    let _121: ();
    let mut _122: &str;
    let _123: &str;
    let mut _124: &std::string::String;
    let _125: &std::string::String;
    let _126: std::string::String;
    let mut _128: std::fmt::Arguments<'_>;
    let mut _129: &[&str];
    let mut _130: &[&str; 2];
    let _131: &[&str; 2];
    let _132: [&str; 2];
    let mut _133: &[core::fmt::rt::Argument<'_>];
    let mut _134: &[core::fmt::rt::Argument<'_>; 1];
    let _135: &[core::fmt::rt::Argument<'_>; 1];
    let _136: [core::fmt::rt::Argument<'_>; 1];
    let mut _137: core::fmt::rt::Argument<'_>;
    let mut _138: &error::ErrorCode;
    let _139: &error::ErrorCode;
    let _140: ();
    let mut _141: &str;
    let _142: &str;
    let mut _143: &std::string::String;
    let _144: &std::string::String;
    let _145: std::string::String;
    let mut _147: std::fmt::Arguments<'_>;
    let mut _148: &[&str];
    let mut _149: &[&str; 1];
    let _150: &[&str; 1];
    let _151: [&str; 1];
    let mut _152: &[core::fmt::rt::Argument<'_>];
    let mut _153: &[core::fmt::rt::Argument<'_>; 1];
    let _154: &[core::fmt::rt::Argument<'_>; 1];
    let _155: [core::fmt::rt::Argument<'_>; 1];
    let mut _156: core::fmt::rt::Argument<'_>;
    let mut _157: &u32;
    let _158: &u32;
    let _159: u32;
    let mut _160: error::ErrorCode;
    let mut _161: isize;
    let _162: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _163: !;
    let mut _164: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _165: ();
    let _166: ();
    let mut _167: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _168: std::result::Result<(), error::ErrorCode>;
    let mut _169: bool;
    let mut _170: u32;
    let mut _171: ();
    let _172: error::ErrorCode;
    let _173: ();
    let mut _174: &str;
    let _175: &str;
    let mut _176: &std::string::String;
    let _177: &std::string::String;
    let _178: std::string::String;
    let mut _180: std::fmt::Arguments<'_>;
    let mut _181: &[&str];
    let mut _182: &[&str; 2];
    let _183: &[&str; 2];
    let _184: [&str; 2];
    let mut _185: &[core::fmt::rt::Argument<'_>];
    let mut _186: &[core::fmt::rt::Argument<'_>; 1];
    let _187: &[core::fmt::rt::Argument<'_>; 1];
    let _188: [core::fmt::rt::Argument<'_>; 1];
    let mut _189: core::fmt::rt::Argument<'_>;
    let mut _190: &error::ErrorCode;
    let _191: &error::ErrorCode;
    let _192: ();
    let mut _193: &str;
    let _194: &str;
    let mut _195: &std::string::String;
    let _196: &std::string::String;
    let _197: std::string::String;
    let mut _199: std::fmt::Arguments<'_>;
    let mut _200: &[&str];
    let mut _201: &[&str; 1];
    let _202: &[&str; 1];
    let _203: [&str; 1];
    let mut _204: &[core::fmt::rt::Argument<'_>];
    let mut _205: &[core::fmt::rt::Argument<'_>; 1];
    let _206: &[core::fmt::rt::Argument<'_>; 1];
    let _207: [core::fmt::rt::Argument<'_>; 1];
    let mut _208: core::fmt::rt::Argument<'_>;
    let mut _209: &u32;
    let _210: &u32;
    let _211: u32;
    let mut _212: error::ErrorCode;
    let mut _213: isize;
    let _214: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _215: !;
    let mut _216: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _217: ();
    let _218: ();
    let mut _219: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _220: std::result::Result<(), error::ErrorCode>;
    let mut _221: bool;
    let mut _222: u32;
    let mut _223: ();
    let _224: error::ErrorCode;
    let _225: ();
    let mut _226: &str;
    let _227: &str;
    let mut _228: &std::string::String;
    let _229: &std::string::String;
    let _230: std::string::String;
    let mut _232: std::fmt::Arguments<'_>;
    let mut _233: &[&str];
    let mut _234: &[&str; 2];
    let _235: &[&str; 2];
    let _236: [&str; 2];
    let mut _237: &[core::fmt::rt::Argument<'_>];
    let mut _238: &[core::fmt::rt::Argument<'_>; 1];
    let _239: &[core::fmt::rt::Argument<'_>; 1];
    let _240: [core::fmt::rt::Argument<'_>; 1];
    let mut _241: core::fmt::rt::Argument<'_>;
    let mut _242: &error::ErrorCode;
    let _243: &error::ErrorCode;
    let _244: ();
    let mut _245: &str;
    let _246: &str;
    let mut _247: &std::string::String;
    let _248: &std::string::String;
    let _249: std::string::String;
    let mut _251: std::fmt::Arguments<'_>;
    let mut _252: &[&str];
    let mut _253: &[&str; 1];
    let _254: &[&str; 1];
    let _255: [&str; 1];
    let mut _256: &[core::fmt::rt::Argument<'_>];
    let mut _257: &[core::fmt::rt::Argument<'_>; 1];
    let _258: &[core::fmt::rt::Argument<'_>; 1];
    let _259: [core::fmt::rt::Argument<'_>; 1];
    let mut _260: core::fmt::rt::Argument<'_>;
    let mut _261: &u32;
    let _262: &u32;
    let _263: u32;
    let mut _264: error::ErrorCode;
    let mut _265: isize;
    let _266: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _267: !;
    let mut _268: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _269: ();
    let _270: ();
    let mut _271: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _272: std::result::Result<(), error::ErrorCode>;
    let mut _273: bool;
    let mut _274: u32;
    let mut _275: u32;
    let mut _276: bool;
    let mut _277: u32;
    let mut _278: bool;
    let mut _279: u32;
    let mut _280: ();
    let _281: error::ErrorCode;
    let _282: ();
    let mut _283: &str;
    let _284: &str;
    let mut _285: &std::string::String;
    let _286: &std::string::String;
    let _287: std::string::String;
    let mut _289: std::fmt::Arguments<'_>;
    let mut _290: &[&str];
    let mut _291: &[&str; 2];
    let _292: &[&str; 2];
    let _293: [&str; 2];
    let mut _294: &[core::fmt::rt::Argument<'_>];
    let mut _295: &[core::fmt::rt::Argument<'_>; 1];
    let _296: &[core::fmt::rt::Argument<'_>; 1];
    let _297: [core::fmt::rt::Argument<'_>; 1];
    let mut _298: core::fmt::rt::Argument<'_>;
    let mut _299: &error::ErrorCode;
    let _300: &error::ErrorCode;
    let _301: ();
    let mut _302: &str;
    let _303: &str;
    let mut _304: &std::string::String;
    let _305: &std::string::String;
    let _306: std::string::String;
    let mut _308: std::fmt::Arguments<'_>;
    let mut _309: &[&str];
    let mut _310: &[&str; 1];
    let _311: &[&str; 1];
    let _312: [&str; 1];
    let mut _313: &[core::fmt::rt::Argument<'_>];
    let mut _314: &[core::fmt::rt::Argument<'_>; 1];
    let _315: &[core::fmt::rt::Argument<'_>; 1];
    let _316: [core::fmt::rt::Argument<'_>; 1];
    let mut _317: core::fmt::rt::Argument<'_>;
    let mut _318: &u32;
    let _319: &u32;
    let _320: u32;
    let mut _321: error::ErrorCode;
    let mut _322: isize;
    let _323: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _324: !;
    let mut _325: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _326: ();
    let _327: ();
    let mut _328: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _329: std::result::Result<(), error::ErrorCode>;
    let mut _330: bool;
    let mut _331: u32;
    let mut _332: ();
    let _333: error::ErrorCode;
    let _334: ();
    let mut _335: &str;
    let _336: &str;
    let mut _337: &std::string::String;
    let _338: &std::string::String;
    let _339: std::string::String;
    let mut _341: std::fmt::Arguments<'_>;
    let mut _342: &[&str];
    let mut _343: &[&str; 2];
    let _344: &[&str; 2];
    let _345: [&str; 2];
    let mut _346: &[core::fmt::rt::Argument<'_>];
    let mut _347: &[core::fmt::rt::Argument<'_>; 1];
    let _348: &[core::fmt::rt::Argument<'_>; 1];
    let _349: [core::fmt::rt::Argument<'_>; 1];
    let mut _350: core::fmt::rt::Argument<'_>;
    let mut _351: &error::ErrorCode;
    let _352: &error::ErrorCode;
    let _353: ();
    let mut _354: &str;
    let _355: &str;
    let mut _356: &std::string::String;
    let _357: &std::string::String;
    let _358: std::string::String;
    let mut _360: std::fmt::Arguments<'_>;
    let mut _361: &[&str];
    let mut _362: &[&str; 1];
    let _363: &[&str; 1];
    let _364: [&str; 1];
    let mut _365: &[core::fmt::rt::Argument<'_>];
    let mut _366: &[core::fmt::rt::Argument<'_>; 1];
    let _367: &[core::fmt::rt::Argument<'_>; 1];
    let _368: [core::fmt::rt::Argument<'_>; 1];
    let mut _369: core::fmt::rt::Argument<'_>;
    let mut _370: &u32;
    let _371: &u32;
    let _372: u32;
    let mut _373: error::ErrorCode;
    let mut _374: isize;
    let _375: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _376: !;
    let mut _377: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _378: ();
    let _379: ();
    let mut _380: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _381: std::result::Result<(), error::ErrorCode>;
    let mut _382: bool;
    let mut _383: u32;
    let mut _384: u32;
    let mut _385: bool;
    let mut _386: u32;
    let mut _387: ();
    let _388: error::ErrorCode;
    let _389: ();
    let mut _390: &str;
    let _391: &str;
    let mut _392: &std::string::String;
    let _393: &std::string::String;
    let _394: std::string::String;
    let mut _396: std::fmt::Arguments<'_>;
    let mut _397: &[&str];
    let mut _398: &[&str; 2];
    let _399: &[&str; 2];
    let _400: [&str; 2];
    let mut _401: &[core::fmt::rt::Argument<'_>];
    let mut _402: &[core::fmt::rt::Argument<'_>; 1];
    let _403: &[core::fmt::rt::Argument<'_>; 1];
    let _404: [core::fmt::rt::Argument<'_>; 1];
    let mut _405: core::fmt::rt::Argument<'_>;
    let mut _406: &error::ErrorCode;
    let _407: &error::ErrorCode;
    let _408: ();
    let mut _409: &str;
    let _410: &str;
    let mut _411: &std::string::String;
    let _412: &std::string::String;
    let _413: std::string::String;
    let mut _415: std::fmt::Arguments<'_>;
    let mut _416: &[&str];
    let mut _417: &[&str; 1];
    let _418: &[&str; 1];
    let _419: [&str; 1];
    let mut _420: &[core::fmt::rt::Argument<'_>];
    let mut _421: &[core::fmt::rt::Argument<'_>; 1];
    let _422: &[core::fmt::rt::Argument<'_>; 1];
    let _423: [core::fmt::rt::Argument<'_>; 1];
    let mut _424: core::fmt::rt::Argument<'_>;
    let mut _425: &u32;
    let _426: &u32;
    let _427: u32;
    let mut _428: error::ErrorCode;
    let mut _429: isize;
    let _430: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _431: !;
    let mut _432: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _433: ();
    let _434: ();
    let mut _435: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _436: std::result::Result<(), error::ErrorCode>;
    let mut _437: bool;
    let mut _438: u32;
    let mut _439: ();
    let _440: error::ErrorCode;
    let _441: ();
    let mut _442: &str;
    let _443: &str;
    let mut _444: &std::string::String;
    let _445: &std::string::String;
    let _446: std::string::String;
    let mut _448: std::fmt::Arguments<'_>;
    let mut _449: &[&str];
    let mut _450: &[&str; 2];
    let _451: &[&str; 2];
    let _452: [&str; 2];
    let mut _453: &[core::fmt::rt::Argument<'_>];
    let mut _454: &[core::fmt::rt::Argument<'_>; 1];
    let _455: &[core::fmt::rt::Argument<'_>; 1];
    let _456: [core::fmt::rt::Argument<'_>; 1];
    let mut _457: core::fmt::rt::Argument<'_>;
    let mut _458: &error::ErrorCode;
    let _459: &error::ErrorCode;
    let _460: ();
    let mut _461: &str;
    let _462: &str;
    let mut _463: &std::string::String;
    let _464: &std::string::String;
    let _465: std::string::String;
    let mut _467: std::fmt::Arguments<'_>;
    let mut _468: &[&str];
    let mut _469: &[&str; 2];
    let _470: &[&str; 2];
    let _471: [&str; 2];
    let mut _472: &[core::fmt::rt::Argument<'_>];
    let mut _473: &[core::fmt::rt::Argument<'_>; 2];
    let _474: &[core::fmt::rt::Argument<'_>; 2];
    let _475: [core::fmt::rt::Argument<'_>; 2];
    let mut _476: core::fmt::rt::Argument<'_>;
    let mut _477: &u32;
    let _478: &u32;
    let mut _479: core::fmt::rt::Argument<'_>;
    let mut _480: &u32;
    let _481: &u32;
    let _482: u32;
    let mut _483: error::ErrorCode;
    let mut _484: isize;
    let _485: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _486: !;
    let mut _487: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _488: ();
    let mut _489: ();
    scope 1 {
        debug error_code => _16;
        let _23: std::string::String;
        let _42: std::string::String;
        let mut _502: &u32;
        let mut _503: &[&str; 1];
        let mut _504: &[&str; 2];
        scope 2 {
            debug res => _23;
        }
        scope 3 {
            debug res => _42;
        }
    }
    scope 4 {
        debug residual => _58;
        scope 5 {
        }
    }
    scope 6 {
        debug val => _61;
        scope 7 {
        }
    }
    scope 8 {
        debug error_code => _68;
        let _75: std::string::String;
        let _94: std::string::String;
        let mut _499: &u32;
        let mut _500: &[&str; 1];
        let mut _501: &[&str; 2];
        scope 9 {
            debug res => _75;
        }
        scope 10 {
            debug res => _94;
        }
    }
    scope 11 {
        debug residual => _110;
        scope 12 {
        }
    }
    scope 13 {
        debug val => _113;
        scope 14 {
        }
    }
    scope 15 {
        debug error_code => _120;
        let _127: std::string::String;
        let _146: std::string::String;
        let mut _496: &u32;
        let mut _497: &[&str; 1];
        let mut _498: &[&str; 2];
        scope 16 {
            debug res => _127;
        }
        scope 17 {
            debug res => _146;
        }
    }
    scope 18 {
        debug residual => _162;
        scope 19 {
        }
    }
    scope 20 {
        debug val => _165;
        scope 21 {
        }
    }
    scope 22 {
        debug error_code => _172;
        let _179: std::string::String;
        let _198: std::string::String;
        let mut _493: &u32;
        let mut _494: &[&str; 1];
        let mut _495: &[&str; 2];
        scope 23 {
            debug res => _179;
        }
        scope 24 {
            debug res => _198;
        }
    }
    scope 25 {
        debug residual => _214;
        scope 26 {
        }
    }
    scope 27 {
        debug val => _217;
        scope 28 {
        }
    }
    scope 29 {
        debug error_code => _224;
        let _231: std::string::String;
        let _250: std::string::String;
        let mut _514: &u32;
        let mut _515: &[&str; 1];
        let mut _516: &[&str; 2];
        scope 30 {
            debug res => _231;
        }
        scope 31 {
            debug res => _250;
        }
    }
    scope 32 {
        debug residual => _266;
        scope 33 {
        }
    }
    scope 34 {
        debug val => _269;
        scope 35 {
        }
    }
    scope 36 {
        debug error_code => _281;
        let _288: std::string::String;
        let _307: std::string::String;
        let mut _511: &u32;
        let mut _512: &[&str; 1];
        let mut _513: &[&str; 2];
        scope 37 {
            debug res => _288;
        }
        scope 38 {
            debug res => _307;
        }
    }
    scope 39 {
        debug residual => _323;
        scope 40 {
        }
    }
    scope 41 {
        debug val => _326;
        scope 42 {
        }
    }
    scope 43 {
        debug error_code => _333;
        let _340: std::string::String;
        let _359: std::string::String;
        let mut _508: &u32;
        let mut _509: &[&str; 1];
        let mut _510: &[&str; 2];
        scope 44 {
            debug res => _340;
        }
        scope 45 {
            debug res => _359;
        }
    }
    scope 46 {
        debug residual => _375;
        scope 47 {
        }
    }
    scope 48 {
        debug val => _378;
        scope 49 {
        }
    }
    scope 50 {
        debug error_code => _388;
        let _395: std::string::String;
        let _414: std::string::String;
        let mut _505: &u32;
        let mut _506: &[&str; 1];
        let mut _507: &[&str; 2];
        scope 51 {
            debug res => _395;
        }
        scope 52 {
            debug res => _414;
        }
    }
    scope 53 {
        debug residual => _430;
        scope 54 {
        }
    }
    scope 55 {
        debug val => _433;
        scope 56 {
        }
    }
    scope 57 {
        debug error_code => _440;
        let _447: std::string::String;
        let _466: std::string::String;
        let mut _490: &u32;
        let mut _491: &[&str; 2];
        let mut _492: &[&str; 2];
        scope 58 {
            debug res => _447;
        }
        scope 59 {
            debug res => _466;
        }
    }
    scope 60 {
        debug residual => _485;
        scope 61 {
        }
    }
    scope 62 {
        debug val => _488;
        scope 63 {
        }
    }

    bb0: {
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = _1;
        _8 = Eq(move _9, const 0_u16);
        switchInt(move _8) -> [0: bb79, otherwise: bb1];
    }

    bb1: {
        StorageDead(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        _14 = _2;
        _13 = Eq(move _14, const _);
        switchInt(move _13) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_14);
        StorageLive(_15);
        _15 = ();
        _12 = std::result::Result::<(), error::ErrorCode>::Ok(move _15);
        StorageDead(_15);
        goto -> bb16;
    }

    bb3: {
        StorageDead(_14);
        StorageLive(_16);
        _16 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        _504 = const _;
        _27 = &(*_504);
        _26 = &(*_27);
        _25 = move _26 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_26);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        _35 = &_16;
        _34 = &(*_35);
        _33 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _34) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_34);
        _32 = [move _33];
        StorageDead(_33);
        _31 = &_32;
        _30 = &(*_31);
        _29 = move _30 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_30);
        _24 = Arguments::<'_>::new_v1(move _25, move _29) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_29);
        StorageDead(_25);
        _23 = format(move _24) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_24);
        StorageDead(_35);
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_27);
        _22 = move _23;
        StorageDead(_23);
        _21 = &_22;
        _20 = &(*_21);
        _19 = <String as Deref>::deref(move _20) -> [return: bb7, unwind: bb204];
    }

    bb7: {
        _18 = &(*_19);
        StorageDead(_20);
        _17 = solana_program::log::sol_log(move _18) -> [return: bb8, unwind: bb204];
    }

    bb8: {
        StorageDead(_18);
        drop(_22) -> [return: bb9, unwind: bb205];
    }

    bb9: {
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_19);
        StorageDead(_17);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _503 = const _;
        _46 = &(*_503);
        _45 = &(*_46);
        _44 = move _45 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_45);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        _502 = const _;
        _54 = &(*_502);
        _53 = &(*_54);
        _52 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _53) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_53);
        _51 = [move _52];
        StorageDead(_52);
        _50 = &_51;
        _49 = &(*_50);
        _48 = move _49 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_49);
        _43 = Arguments::<'_>::new_v1(move _44, move _48) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_48);
        StorageDead(_44);
        _42 = format(move _43) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_43);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_46);
        _41 = move _42;
        StorageDead(_42);
        _40 = &_41;
        _39 = &(*_40);
        _38 = <String as Deref>::deref(move _39) -> [return: bb13, unwind: bb203];
    }

    bb13: {
        _37 = &(*_38);
        StorageDead(_39);
        _36 = solana_program::log::sol_log(move _37) -> [return: bb14, unwind: bb203];
    }

    bb14: {
        StorageDead(_37);
        drop(_41) -> [return: bb15, unwind: bb205];
    }

    bb15: {
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_38);
        StorageDead(_36);
        StorageLive(_56);
        _56 = _16;
        _12 = std::result::Result::<(), error::ErrorCode>::Err(move _56);
        StorageDead(_56);
        StorageDead(_16);
        goto -> bb16;
    }

    bb16: {
        StorageDead(_13);
        _11 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _12) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_12);
        _57 = discriminant(_11);
        switchInt(move _57) -> [0: bb18, 1: bb20, otherwise: bb19];
    }

    bb18: {
        StorageLive(_61);
        _61 = ((_11 as Continue).0: ());
        _10 = _61;
        StorageDead(_61);
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        _66 = _3;
        _65 = Eq(move _66, const _);
        switchInt(move _65) -> [0: bb23, otherwise: bb22];
    }

    bb19: {
        unreachable;
    }

    bb20: {
        StorageLive(_58);
        _58 = ((_11 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_60);
        _60 = _58;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _60) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_60);
        StorageDead(_58);
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb185;
    }

    bb22: {
        StorageDead(_66);
        StorageLive(_67);
        _67 = ();
        _64 = std::result::Result::<(), error::ErrorCode>::Ok(move _67);
        StorageDead(_67);
        goto -> bb36;
    }

    bb23: {
        StorageDead(_66);
        StorageLive(_68);
        _68 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        _501 = const _;
        _79 = &(*_501);
        _78 = &(*_79);
        _77 = move _78 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_78);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        StorageLive(_85);
        StorageLive(_86);
        StorageLive(_87);
        _87 = &_68;
        _86 = &(*_87);
        _85 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _86) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_86);
        _84 = [move _85];
        StorageDead(_85);
        _83 = &_84;
        _82 = &(*_83);
        _81 = move _82 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_82);
        _76 = Arguments::<'_>::new_v1(move _77, move _81) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_81);
        StorageDead(_77);
        _75 = format(move _76) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_76);
        StorageDead(_87);
        StorageDead(_84);
        StorageDead(_83);
        StorageDead(_79);
        _74 = move _75;
        StorageDead(_75);
        _73 = &_74;
        _72 = &(*_73);
        _71 = <String as Deref>::deref(move _72) -> [return: bb27, unwind: bb202];
    }

    bb27: {
        _70 = &(*_71);
        StorageDead(_72);
        _69 = solana_program::log::sol_log(move _70) -> [return: bb28, unwind: bb202];
    }

    bb28: {
        StorageDead(_70);
        drop(_74) -> [return: bb29, unwind: bb205];
    }

    bb29: {
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_71);
        StorageDead(_69);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        StorageLive(_96);
        StorageLive(_97);
        StorageLive(_98);
        _500 = const _;
        _98 = &(*_500);
        _97 = &(*_98);
        _96 = move _97 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_97);
        StorageLive(_100);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        StorageLive(_104);
        StorageLive(_105);
        StorageLive(_106);
        _499 = const _;
        _106 = &(*_499);
        _105 = &(*_106);
        _104 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _105) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_105);
        _103 = [move _104];
        StorageDead(_104);
        _102 = &_103;
        _101 = &(*_102);
        _100 = move _101 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_101);
        _95 = Arguments::<'_>::new_v1(move _96, move _100) -> [return: bb31, unwind continue];
    }

    bb31: {
        StorageDead(_100);
        StorageDead(_96);
        _94 = format(move _95) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_95);
        StorageDead(_106);
        StorageDead(_103);
        StorageDead(_102);
        StorageDead(_98);
        _93 = move _94;
        StorageDead(_94);
        _92 = &_93;
        _91 = &(*_92);
        _90 = <String as Deref>::deref(move _91) -> [return: bb33, unwind: bb201];
    }

    bb33: {
        _89 = &(*_90);
        StorageDead(_91);
        _88 = solana_program::log::sol_log(move _89) -> [return: bb34, unwind: bb201];
    }

    bb34: {
        StorageDead(_89);
        drop(_93) -> [return: bb35, unwind: bb205];
    }

    bb35: {
        StorageDead(_93);
        StorageDead(_92);
        StorageDead(_90);
        StorageDead(_88);
        StorageLive(_108);
        _108 = _68;
        _64 = std::result::Result::<(), error::ErrorCode>::Err(move _108);
        StorageDead(_108);
        StorageDead(_68);
        goto -> bb36;
    }

    bb36: {
        StorageDead(_65);
        _63 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _64) -> [return: bb37, unwind continue];
    }

    bb37: {
        StorageDead(_64);
        _109 = discriminant(_63);
        switchInt(move _109) -> [0: bb38, 1: bb39, otherwise: bb19];
    }

    bb38: {
        StorageLive(_113);
        _113 = ((_63 as Continue).0: ());
        _62 = _113;
        StorageDead(_113);
        StorageDead(_63);
        StorageDead(_62);
        StorageLive(_114);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        _118 = _4;
        _117 = Eq(move _118, const _);
        switchInt(move _117) -> [0: bb42, otherwise: bb41];
    }

    bb39: {
        StorageLive(_110);
        _110 = ((_63 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_112);
        _112 = _110;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _112) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_112);
        StorageDead(_110);
        StorageDead(_63);
        StorageDead(_62);
        goto -> bb185;
    }

    bb41: {
        StorageDead(_118);
        StorageLive(_119);
        _119 = ();
        _116 = std::result::Result::<(), error::ErrorCode>::Ok(move _119);
        StorageDead(_119);
        goto -> bb55;
    }

    bb42: {
        StorageDead(_118);
        StorageLive(_120);
        _120 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        StorageLive(_128);
        StorageLive(_129);
        StorageLive(_130);
        StorageLive(_131);
        _498 = const _;
        _131 = &(*_498);
        _130 = &(*_131);
        _129 = move _130 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_130);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        StorageLive(_137);
        StorageLive(_138);
        StorageLive(_139);
        _139 = &_120;
        _138 = &(*_139);
        _137 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _138) -> [return: bb43, unwind continue];
    }

    bb43: {
        StorageDead(_138);
        _136 = [move _137];
        StorageDead(_137);
        _135 = &_136;
        _134 = &(*_135);
        _133 = move _134 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_134);
        _128 = Arguments::<'_>::new_v1(move _129, move _133) -> [return: bb44, unwind continue];
    }

    bb44: {
        StorageDead(_133);
        StorageDead(_129);
        _127 = format(move _128) -> [return: bb45, unwind continue];
    }

    bb45: {
        StorageDead(_128);
        StorageDead(_139);
        StorageDead(_136);
        StorageDead(_135);
        StorageDead(_131);
        _126 = move _127;
        StorageDead(_127);
        _125 = &_126;
        _124 = &(*_125);
        _123 = <String as Deref>::deref(move _124) -> [return: bb46, unwind: bb200];
    }

    bb46: {
        _122 = &(*_123);
        StorageDead(_124);
        _121 = solana_program::log::sol_log(move _122) -> [return: bb47, unwind: bb200];
    }

    bb47: {
        StorageDead(_122);
        drop(_126) -> [return: bb48, unwind: bb205];
    }

    bb48: {
        StorageDead(_126);
        StorageDead(_125);
        StorageDead(_123);
        StorageDead(_121);
        StorageLive(_140);
        StorageLive(_141);
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        StorageLive(_146);
        StorageLive(_147);
        StorageLive(_148);
        StorageLive(_149);
        StorageLive(_150);
        _497 = const _;
        _150 = &(*_497);
        _149 = &(*_150);
        _148 = move _149 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_149);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        StorageLive(_155);
        StorageLive(_156);
        StorageLive(_157);
        StorageLive(_158);
        _496 = const _;
        _158 = &(*_496);
        _157 = &(*_158);
        _156 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _157) -> [return: bb49, unwind continue];
    }

    bb49: {
        StorageDead(_157);
        _155 = [move _156];
        StorageDead(_156);
        _154 = &_155;
        _153 = &(*_154);
        _152 = move _153 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_153);
        _147 = Arguments::<'_>::new_v1(move _148, move _152) -> [return: bb50, unwind continue];
    }

    bb50: {
        StorageDead(_152);
        StorageDead(_148);
        _146 = format(move _147) -> [return: bb51, unwind continue];
    }

    bb51: {
        StorageDead(_147);
        StorageDead(_158);
        StorageDead(_155);
        StorageDead(_154);
        StorageDead(_150);
        _145 = move _146;
        StorageDead(_146);
        _144 = &_145;
        _143 = &(*_144);
        _142 = <String as Deref>::deref(move _143) -> [return: bb52, unwind: bb199];
    }

    bb52: {
        _141 = &(*_142);
        StorageDead(_143);
        _140 = solana_program::log::sol_log(move _141) -> [return: bb53, unwind: bb199];
    }

    bb53: {
        StorageDead(_141);
        drop(_145) -> [return: bb54, unwind: bb205];
    }

    bb54: {
        StorageDead(_145);
        StorageDead(_144);
        StorageDead(_142);
        StorageDead(_140);
        StorageLive(_160);
        _160 = _120;
        _116 = std::result::Result::<(), error::ErrorCode>::Err(move _160);
        StorageDead(_160);
        StorageDead(_120);
        goto -> bb55;
    }

    bb55: {
        StorageDead(_117);
        _115 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _116) -> [return: bb56, unwind continue];
    }

    bb56: {
        StorageDead(_116);
        _161 = discriminant(_115);
        switchInt(move _161) -> [0: bb57, 1: bb58, otherwise: bb19];
    }

    bb57: {
        StorageLive(_165);
        _165 = ((_115 as Continue).0: ());
        _114 = _165;
        StorageDead(_165);
        StorageDead(_115);
        StorageDead(_114);
        StorageLive(_166);
        StorageLive(_167);
        StorageLive(_168);
        StorageLive(_169);
        StorageLive(_170);
        _170 = _5;
        _169 = Eq(move _170, const _);
        switchInt(move _169) -> [0: bb61, otherwise: bb60];
    }

    bb58: {
        StorageLive(_162);
        _162 = ((_115 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_164);
        _164 = _162;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _164) -> [return: bb59, unwind continue];
    }

    bb59: {
        StorageDead(_164);
        StorageDead(_162);
        StorageDead(_115);
        StorageDead(_114);
        goto -> bb185;
    }

    bb60: {
        StorageDead(_170);
        StorageLive(_171);
        _171 = ();
        _168 = std::result::Result::<(), error::ErrorCode>::Ok(move _171);
        StorageDead(_171);
        goto -> bb74;
    }

    bb61: {
        StorageDead(_170);
        StorageLive(_172);
        _172 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_173);
        StorageLive(_174);
        StorageLive(_175);
        StorageLive(_176);
        StorageLive(_177);
        StorageLive(_178);
        StorageLive(_179);
        StorageLive(_180);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        _495 = const _;
        _183 = &(*_495);
        _182 = &(*_183);
        _181 = move _182 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_182);
        StorageLive(_185);
        StorageLive(_186);
        StorageLive(_187);
        StorageLive(_188);
        StorageLive(_189);
        StorageLive(_190);
        StorageLive(_191);
        _191 = &_172;
        _190 = &(*_191);
        _189 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _190) -> [return: bb62, unwind continue];
    }

    bb62: {
        StorageDead(_190);
        _188 = [move _189];
        StorageDead(_189);
        _187 = &_188;
        _186 = &(*_187);
        _185 = move _186 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_186);
        _180 = Arguments::<'_>::new_v1(move _181, move _185) -> [return: bb63, unwind continue];
    }

    bb63: {
        StorageDead(_185);
        StorageDead(_181);
        _179 = format(move _180) -> [return: bb64, unwind continue];
    }

    bb64: {
        StorageDead(_180);
        StorageDead(_191);
        StorageDead(_188);
        StorageDead(_187);
        StorageDead(_183);
        _178 = move _179;
        StorageDead(_179);
        _177 = &_178;
        _176 = &(*_177);
        _175 = <String as Deref>::deref(move _176) -> [return: bb65, unwind: bb198];
    }

    bb65: {
        _174 = &(*_175);
        StorageDead(_176);
        _173 = solana_program::log::sol_log(move _174) -> [return: bb66, unwind: bb198];
    }

    bb66: {
        StorageDead(_174);
        drop(_178) -> [return: bb67, unwind: bb205];
    }

    bb67: {
        StorageDead(_178);
        StorageDead(_177);
        StorageDead(_175);
        StorageDead(_173);
        StorageLive(_192);
        StorageLive(_193);
        StorageLive(_194);
        StorageLive(_195);
        StorageLive(_196);
        StorageLive(_197);
        StorageLive(_198);
        StorageLive(_199);
        StorageLive(_200);
        StorageLive(_201);
        StorageLive(_202);
        _494 = const _;
        _202 = &(*_494);
        _201 = &(*_202);
        _200 = move _201 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_201);
        StorageLive(_204);
        StorageLive(_205);
        StorageLive(_206);
        StorageLive(_207);
        StorageLive(_208);
        StorageLive(_209);
        StorageLive(_210);
        _493 = const _;
        _210 = &(*_493);
        _209 = &(*_210);
        _208 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _209) -> [return: bb68, unwind continue];
    }

    bb68: {
        StorageDead(_209);
        _207 = [move _208];
        StorageDead(_208);
        _206 = &_207;
        _205 = &(*_206);
        _204 = move _205 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_205);
        _199 = Arguments::<'_>::new_v1(move _200, move _204) -> [return: bb69, unwind continue];
    }

    bb69: {
        StorageDead(_204);
        StorageDead(_200);
        _198 = format(move _199) -> [return: bb70, unwind continue];
    }

    bb70: {
        StorageDead(_199);
        StorageDead(_210);
        StorageDead(_207);
        StorageDead(_206);
        StorageDead(_202);
        _197 = move _198;
        StorageDead(_198);
        _196 = &_197;
        _195 = &(*_196);
        _194 = <String as Deref>::deref(move _195) -> [return: bb71, unwind: bb197];
    }

    bb71: {
        _193 = &(*_194);
        StorageDead(_195);
        _192 = solana_program::log::sol_log(move _193) -> [return: bb72, unwind: bb197];
    }

    bb72: {
        StorageDead(_193);
        drop(_197) -> [return: bb73, unwind: bb205];
    }

    bb73: {
        StorageDead(_197);
        StorageDead(_196);
        StorageDead(_194);
        StorageDead(_192);
        StorageLive(_212);
        _212 = _172;
        _168 = std::result::Result::<(), error::ErrorCode>::Err(move _212);
        StorageDead(_212);
        StorageDead(_172);
        goto -> bb74;
    }

    bb74: {
        StorageDead(_169);
        _167 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _168) -> [return: bb75, unwind continue];
    }

    bb75: {
        StorageDead(_168);
        _213 = discriminant(_167);
        switchInt(move _213) -> [0: bb76, 1: bb77, otherwise: bb19];
    }

    bb76: {
        StorageLive(_217);
        _217 = ((_167 as Continue).0: ());
        _166 = _217;
        StorageDead(_217);
        StorageDead(_167);
        StorageDead(_166);
        _7 = const ();
        goto -> bb164;
    }

    bb77: {
        StorageLive(_214);
        _214 = ((_167 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_216);
        _216 = _214;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _216) -> [return: bb78, unwind continue];
    }

    bb78: {
        StorageDead(_216);
        StorageDead(_214);
        StorageDead(_167);
        StorageDead(_166);
        goto -> bb185;
    }

    bb79: {
        StorageDead(_9);
        StorageLive(_218);
        StorageLive(_219);
        StorageLive(_220);
        StorageLive(_221);
        StorageLive(_222);
        _222 = _2;
        _221 = Le(move _222, const _);
        switchInt(move _221) -> [0: bb81, otherwise: bb80];
    }

    bb80: {
        StorageDead(_222);
        StorageLive(_223);
        _223 = ();
        _220 = std::result::Result::<(), error::ErrorCode>::Ok(move _223);
        StorageDead(_223);
        goto -> bb94;
    }

    bb81: {
        StorageDead(_222);
        StorageLive(_224);
        _224 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_225);
        StorageLive(_226);
        StorageLive(_227);
        StorageLive(_228);
        StorageLive(_229);
        StorageLive(_230);
        StorageLive(_231);
        StorageLive(_232);
        StorageLive(_233);
        StorageLive(_234);
        StorageLive(_235);
        _516 = const _;
        _235 = &(*_516);
        _234 = &(*_235);
        _233 = move _234 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_234);
        StorageLive(_237);
        StorageLive(_238);
        StorageLive(_239);
        StorageLive(_240);
        StorageLive(_241);
        StorageLive(_242);
        StorageLive(_243);
        _243 = &_224;
        _242 = &(*_243);
        _241 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _242) -> [return: bb82, unwind continue];
    }

    bb82: {
        StorageDead(_242);
        _240 = [move _241];
        StorageDead(_241);
        _239 = &_240;
        _238 = &(*_239);
        _237 = move _238 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_238);
        _232 = Arguments::<'_>::new_v1(move _233, move _237) -> [return: bb83, unwind continue];
    }

    bb83: {
        StorageDead(_237);
        StorageDead(_233);
        _231 = format(move _232) -> [return: bb84, unwind continue];
    }

    bb84: {
        StorageDead(_232);
        StorageDead(_243);
        StorageDead(_240);
        StorageDead(_239);
        StorageDead(_235);
        _230 = move _231;
        StorageDead(_231);
        _229 = &_230;
        _228 = &(*_229);
        _227 = <String as Deref>::deref(move _228) -> [return: bb85, unwind: bb196];
    }

    bb85: {
        _226 = &(*_227);
        StorageDead(_228);
        _225 = solana_program::log::sol_log(move _226) -> [return: bb86, unwind: bb196];
    }

    bb86: {
        StorageDead(_226);
        drop(_230) -> [return: bb87, unwind: bb205];
    }

    bb87: {
        StorageDead(_230);
        StorageDead(_229);
        StorageDead(_227);
        StorageDead(_225);
        StorageLive(_244);
        StorageLive(_245);
        StorageLive(_246);
        StorageLive(_247);
        StorageLive(_248);
        StorageLive(_249);
        StorageLive(_250);
        StorageLive(_251);
        StorageLive(_252);
        StorageLive(_253);
        StorageLive(_254);
        _515 = const _;
        _254 = &(*_515);
        _253 = &(*_254);
        _252 = move _253 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_253);
        StorageLive(_256);
        StorageLive(_257);
        StorageLive(_258);
        StorageLive(_259);
        StorageLive(_260);
        StorageLive(_261);
        StorageLive(_262);
        _514 = const _;
        _262 = &(*_514);
        _261 = &(*_262);
        _260 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _261) -> [return: bb88, unwind continue];
    }

    bb88: {
        StorageDead(_261);
        _259 = [move _260];
        StorageDead(_260);
        _258 = &_259;
        _257 = &(*_258);
        _256 = move _257 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_257);
        _251 = Arguments::<'_>::new_v1(move _252, move _256) -> [return: bb89, unwind continue];
    }

    bb89: {
        StorageDead(_256);
        StorageDead(_252);
        _250 = format(move _251) -> [return: bb90, unwind continue];
    }

    bb90: {
        StorageDead(_251);
        StorageDead(_262);
        StorageDead(_259);
        StorageDead(_258);
        StorageDead(_254);
        _249 = move _250;
        StorageDead(_250);
        _248 = &_249;
        _247 = &(*_248);
        _246 = <String as Deref>::deref(move _247) -> [return: bb91, unwind: bb195];
    }

    bb91: {
        _245 = &(*_246);
        StorageDead(_247);
        _244 = solana_program::log::sol_log(move _245) -> [return: bb92, unwind: bb195];
    }

    bb92: {
        StorageDead(_245);
        drop(_249) -> [return: bb93, unwind: bb205];
    }

    bb93: {
        StorageDead(_249);
        StorageDead(_248);
        StorageDead(_246);
        StorageDead(_244);
        StorageLive(_264);
        _264 = _224;
        _220 = std::result::Result::<(), error::ErrorCode>::Err(move _264);
        StorageDead(_264);
        StorageDead(_224);
        goto -> bb94;
    }

    bb94: {
        StorageDead(_221);
        _219 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _220) -> [return: bb95, unwind continue];
    }

    bb95: {
        StorageDead(_220);
        _265 = discriminant(_219);
        switchInt(move _265) -> [0: bb96, 1: bb97, otherwise: bb19];
    }

    bb96: {
        StorageLive(_269);
        _269 = ((_219 as Continue).0: ());
        _218 = _269;
        StorageDead(_269);
        StorageDead(_219);
        StorageDead(_218);
        StorageLive(_270);
        StorageLive(_271);
        StorageLive(_272);
        StorageLive(_273);
        StorageLive(_274);
        _274 = _2;
        StorageLive(_275);
        _275 = _3;
        _273 = Le(move _274, move _275);
        switchInt(move _273) -> [0: bb100, otherwise: bb99];
    }

    bb97: {
        StorageLive(_266);
        _266 = ((_219 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_268);
        _268 = _266;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _268) -> [return: bb98, unwind continue];
    }

    bb98: {
        StorageDead(_268);
        StorageDead(_266);
        StorageDead(_219);
        StorageDead(_218);
        goto -> bb185;
    }

    bb99: {
        StorageDead(_275);
        StorageDead(_274);
        StorageLive(_276);
        StorageLive(_277);
        _277 = _3;
        _276 = Gt(move _277, const 0_u32);
        switchInt(move _276) -> [0: bb104, otherwise: bb101];
    }

    bb100: {
        StorageDead(_275);
        StorageDead(_274);
        goto -> bb105;
    }

    bb101: {
        StorageDead(_277);
        StorageLive(_278);
        StorageLive(_279);
        _279 = _3;
        _278 = Le(move _279, const _);
        switchInt(move _278) -> [0: bb103, otherwise: bb102];
    }

    bb102: {
        StorageDead(_279);
        StorageLive(_280);
        _280 = ();
        _272 = std::result::Result::<(), error::ErrorCode>::Ok(move _280);
        StorageDead(_280);
        goto -> bb118;
    }

    bb103: {
        StorageDead(_279);
        goto -> bb105;
    }

    bb104: {
        StorageDead(_277);
        goto -> bb105;
    }

    bb105: {
        StorageLive(_281);
        _281 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_282);
        StorageLive(_283);
        StorageLive(_284);
        StorageLive(_285);
        StorageLive(_286);
        StorageLive(_287);
        StorageLive(_288);
        StorageLive(_289);
        StorageLive(_290);
        StorageLive(_291);
        StorageLive(_292);
        _513 = const _;
        _292 = &(*_513);
        _291 = &(*_292);
        _290 = move _291 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_291);
        StorageLive(_294);
        StorageLive(_295);
        StorageLive(_296);
        StorageLive(_297);
        StorageLive(_298);
        StorageLive(_299);
        StorageLive(_300);
        _300 = &_281;
        _299 = &(*_300);
        _298 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _299) -> [return: bb106, unwind continue];
    }

    bb106: {
        StorageDead(_299);
        _297 = [move _298];
        StorageDead(_298);
        _296 = &_297;
        _295 = &(*_296);
        _294 = move _295 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_295);
        _289 = Arguments::<'_>::new_v1(move _290, move _294) -> [return: bb107, unwind continue];
    }

    bb107: {
        StorageDead(_294);
        StorageDead(_290);
        _288 = format(move _289) -> [return: bb108, unwind continue];
    }

    bb108: {
        StorageDead(_289);
        StorageDead(_300);
        StorageDead(_297);
        StorageDead(_296);
        StorageDead(_292);
        _287 = move _288;
        StorageDead(_288);
        _286 = &_287;
        _285 = &(*_286);
        _284 = <String as Deref>::deref(move _285) -> [return: bb109, unwind: bb194];
    }

    bb109: {
        _283 = &(*_284);
        StorageDead(_285);
        _282 = solana_program::log::sol_log(move _283) -> [return: bb110, unwind: bb194];
    }

    bb110: {
        StorageDead(_283);
        drop(_287) -> [return: bb111, unwind: bb205];
    }

    bb111: {
        StorageDead(_287);
        StorageDead(_286);
        StorageDead(_284);
        StorageDead(_282);
        StorageLive(_301);
        StorageLive(_302);
        StorageLive(_303);
        StorageLive(_304);
        StorageLive(_305);
        StorageLive(_306);
        StorageLive(_307);
        StorageLive(_308);
        StorageLive(_309);
        StorageLive(_310);
        StorageLive(_311);
        _512 = const _;
        _311 = &(*_512);
        _310 = &(*_311);
        _309 = move _310 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_310);
        StorageLive(_313);
        StorageLive(_314);
        StorageLive(_315);
        StorageLive(_316);
        StorageLive(_317);
        StorageLive(_318);
        StorageLive(_319);
        _511 = const _;
        _319 = &(*_511);
        _318 = &(*_319);
        _317 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _318) -> [return: bb112, unwind continue];
    }

    bb112: {
        StorageDead(_318);
        _316 = [move _317];
        StorageDead(_317);
        _315 = &_316;
        _314 = &(*_315);
        _313 = move _314 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_314);
        _308 = Arguments::<'_>::new_v1(move _309, move _313) -> [return: bb113, unwind continue];
    }

    bb113: {
        StorageDead(_313);
        StorageDead(_309);
        _307 = format(move _308) -> [return: bb114, unwind continue];
    }

    bb114: {
        StorageDead(_308);
        StorageDead(_319);
        StorageDead(_316);
        StorageDead(_315);
        StorageDead(_311);
        _306 = move _307;
        StorageDead(_307);
        _305 = &_306;
        _304 = &(*_305);
        _303 = <String as Deref>::deref(move _304) -> [return: bb115, unwind: bb193];
    }

    bb115: {
        _302 = &(*_303);
        StorageDead(_304);
        _301 = solana_program::log::sol_log(move _302) -> [return: bb116, unwind: bb193];
    }

    bb116: {
        StorageDead(_302);
        drop(_306) -> [return: bb117, unwind: bb205];
    }

    bb117: {
        StorageDead(_306);
        StorageDead(_305);
        StorageDead(_303);
        StorageDead(_301);
        StorageLive(_321);
        _321 = _281;
        _272 = std::result::Result::<(), error::ErrorCode>::Err(move _321);
        StorageDead(_321);
        StorageDead(_281);
        goto -> bb118;
    }

    bb118: {
        StorageDead(_278);
        StorageDead(_276);
        StorageDead(_273);
        _271 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _272) -> [return: bb119, unwind continue];
    }

    bb119: {
        StorageDead(_272);
        _322 = discriminant(_271);
        switchInt(move _322) -> [0: bb120, 1: bb121, otherwise: bb19];
    }

    bb120: {
        StorageLive(_326);
        _326 = ((_271 as Continue).0: ());
        _270 = _326;
        StorageDead(_326);
        StorageDead(_271);
        StorageDead(_270);
        StorageLive(_327);
        StorageLive(_328);
        StorageLive(_329);
        StorageLive(_330);
        StorageLive(_331);
        _331 = _4;
        _330 = Ge(move _331, const _);
        switchInt(move _330) -> [0: bb124, otherwise: bb123];
    }

    bb121: {
        StorageLive(_323);
        _323 = ((_271 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_325);
        _325 = _323;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _325) -> [return: bb122, unwind continue];
    }

    bb122: {
        StorageDead(_325);
        StorageDead(_323);
        StorageDead(_271);
        StorageDead(_270);
        goto -> bb185;
    }

    bb123: {
        StorageDead(_331);
        StorageLive(_332);
        _332 = ();
        _329 = std::result::Result::<(), error::ErrorCode>::Ok(move _332);
        StorageDead(_332);
        goto -> bb137;
    }

    bb124: {
        StorageDead(_331);
        StorageLive(_333);
        _333 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_334);
        StorageLive(_335);
        StorageLive(_336);
        StorageLive(_337);
        StorageLive(_338);
        StorageLive(_339);
        StorageLive(_340);
        StorageLive(_341);
        StorageLive(_342);
        StorageLive(_343);
        StorageLive(_344);
        _510 = const _;
        _344 = &(*_510);
        _343 = &(*_344);
        _342 = move _343 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_343);
        StorageLive(_346);
        StorageLive(_347);
        StorageLive(_348);
        StorageLive(_349);
        StorageLive(_350);
        StorageLive(_351);
        StorageLive(_352);
        _352 = &_333;
        _351 = &(*_352);
        _350 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _351) -> [return: bb125, unwind continue];
    }

    bb125: {
        StorageDead(_351);
        _349 = [move _350];
        StorageDead(_350);
        _348 = &_349;
        _347 = &(*_348);
        _346 = move _347 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_347);
        _341 = Arguments::<'_>::new_v1(move _342, move _346) -> [return: bb126, unwind continue];
    }

    bb126: {
        StorageDead(_346);
        StorageDead(_342);
        _340 = format(move _341) -> [return: bb127, unwind continue];
    }

    bb127: {
        StorageDead(_341);
        StorageDead(_352);
        StorageDead(_349);
        StorageDead(_348);
        StorageDead(_344);
        _339 = move _340;
        StorageDead(_340);
        _338 = &_339;
        _337 = &(*_338);
        _336 = <String as Deref>::deref(move _337) -> [return: bb128, unwind: bb192];
    }

    bb128: {
        _335 = &(*_336);
        StorageDead(_337);
        _334 = solana_program::log::sol_log(move _335) -> [return: bb129, unwind: bb192];
    }

    bb129: {
        StorageDead(_335);
        drop(_339) -> [return: bb130, unwind: bb205];
    }

    bb130: {
        StorageDead(_339);
        StorageDead(_338);
        StorageDead(_336);
        StorageDead(_334);
        StorageLive(_353);
        StorageLive(_354);
        StorageLive(_355);
        StorageLive(_356);
        StorageLive(_357);
        StorageLive(_358);
        StorageLive(_359);
        StorageLive(_360);
        StorageLive(_361);
        StorageLive(_362);
        StorageLive(_363);
        _509 = const _;
        _363 = &(*_509);
        _362 = &(*_363);
        _361 = move _362 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_362);
        StorageLive(_365);
        StorageLive(_366);
        StorageLive(_367);
        StorageLive(_368);
        StorageLive(_369);
        StorageLive(_370);
        StorageLive(_371);
        _508 = const _;
        _371 = &(*_508);
        _370 = &(*_371);
        _369 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _370) -> [return: bb131, unwind continue];
    }

    bb131: {
        StorageDead(_370);
        _368 = [move _369];
        StorageDead(_369);
        _367 = &_368;
        _366 = &(*_367);
        _365 = move _366 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_366);
        _360 = Arguments::<'_>::new_v1(move _361, move _365) -> [return: bb132, unwind continue];
    }

    bb132: {
        StorageDead(_365);
        StorageDead(_361);
        _359 = format(move _360) -> [return: bb133, unwind continue];
    }

    bb133: {
        StorageDead(_360);
        StorageDead(_371);
        StorageDead(_368);
        StorageDead(_367);
        StorageDead(_363);
        _358 = move _359;
        StorageDead(_359);
        _357 = &_358;
        _356 = &(*_357);
        _355 = <String as Deref>::deref(move _356) -> [return: bb134, unwind: bb191];
    }

    bb134: {
        _354 = &(*_355);
        StorageDead(_356);
        _353 = solana_program::log::sol_log(move _354) -> [return: bb135, unwind: bb191];
    }

    bb135: {
        StorageDead(_354);
        drop(_358) -> [return: bb136, unwind: bb205];
    }

    bb136: {
        StorageDead(_358);
        StorageDead(_357);
        StorageDead(_355);
        StorageDead(_353);
        StorageLive(_373);
        _373 = _333;
        _329 = std::result::Result::<(), error::ErrorCode>::Err(move _373);
        StorageDead(_373);
        StorageDead(_333);
        goto -> bb137;
    }

    bb137: {
        StorageDead(_330);
        _328 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _329) -> [return: bb138, unwind continue];
    }

    bb138: {
        StorageDead(_329);
        _374 = discriminant(_328);
        switchInt(move _374) -> [0: bb139, 1: bb140, otherwise: bb19];
    }

    bb139: {
        StorageLive(_378);
        _378 = ((_328 as Continue).0: ());
        _327 = _378;
        StorageDead(_378);
        StorageDead(_328);
        StorageDead(_327);
        StorageLive(_379);
        StorageLive(_380);
        StorageLive(_381);
        StorageLive(_382);
        StorageLive(_383);
        _383 = _4;
        StorageLive(_384);
        _384 = _5;
        _382 = Ge(move _383, move _384);
        switchInt(move _382) -> [0: bb143, otherwise: bb142];
    }

    bb140: {
        StorageLive(_375);
        _375 = ((_328 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_377);
        _377 = _375;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _377) -> [return: bb141, unwind continue];
    }

    bb141: {
        StorageDead(_377);
        StorageDead(_375);
        StorageDead(_328);
        StorageDead(_327);
        goto -> bb185;
    }

    bb142: {
        StorageDead(_384);
        StorageDead(_383);
        StorageLive(_385);
        StorageLive(_386);
        _386 = _5;
        _385 = Ge(move _386, const _);
        switchInt(move _385) -> [0: bb145, otherwise: bb144];
    }

    bb143: {
        StorageDead(_384);
        StorageDead(_383);
        goto -> bb146;
    }

    bb144: {
        StorageDead(_386);
        StorageLive(_387);
        _387 = ();
        _381 = std::result::Result::<(), error::ErrorCode>::Ok(move _387);
        StorageDead(_387);
        goto -> bb159;
    }

    bb145: {
        StorageDead(_386);
        goto -> bb146;
    }

    bb146: {
        StorageLive(_388);
        _388 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_389);
        StorageLive(_390);
        StorageLive(_391);
        StorageLive(_392);
        StorageLive(_393);
        StorageLive(_394);
        StorageLive(_395);
        StorageLive(_396);
        StorageLive(_397);
        StorageLive(_398);
        StorageLive(_399);
        _507 = const _;
        _399 = &(*_507);
        _398 = &(*_399);
        _397 = move _398 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_398);
        StorageLive(_401);
        StorageLive(_402);
        StorageLive(_403);
        StorageLive(_404);
        StorageLive(_405);
        StorageLive(_406);
        StorageLive(_407);
        _407 = &_388;
        _406 = &(*_407);
        _405 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _406) -> [return: bb147, unwind continue];
    }

    bb147: {
        StorageDead(_406);
        _404 = [move _405];
        StorageDead(_405);
        _403 = &_404;
        _402 = &(*_403);
        _401 = move _402 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_402);
        _396 = Arguments::<'_>::new_v1(move _397, move _401) -> [return: bb148, unwind continue];
    }

    bb148: {
        StorageDead(_401);
        StorageDead(_397);
        _395 = format(move _396) -> [return: bb149, unwind continue];
    }

    bb149: {
        StorageDead(_396);
        StorageDead(_407);
        StorageDead(_404);
        StorageDead(_403);
        StorageDead(_399);
        _394 = move _395;
        StorageDead(_395);
        _393 = &_394;
        _392 = &(*_393);
        _391 = <String as Deref>::deref(move _392) -> [return: bb150, unwind: bb190];
    }

    bb150: {
        _390 = &(*_391);
        StorageDead(_392);
        _389 = solana_program::log::sol_log(move _390) -> [return: bb151, unwind: bb190];
    }

    bb151: {
        StorageDead(_390);
        drop(_394) -> [return: bb152, unwind: bb205];
    }

    bb152: {
        StorageDead(_394);
        StorageDead(_393);
        StorageDead(_391);
        StorageDead(_389);
        StorageLive(_408);
        StorageLive(_409);
        StorageLive(_410);
        StorageLive(_411);
        StorageLive(_412);
        StorageLive(_413);
        StorageLive(_414);
        StorageLive(_415);
        StorageLive(_416);
        StorageLive(_417);
        StorageLive(_418);
        _506 = const _;
        _418 = &(*_506);
        _417 = &(*_418);
        _416 = move _417 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_417);
        StorageLive(_420);
        StorageLive(_421);
        StorageLive(_422);
        StorageLive(_423);
        StorageLive(_424);
        StorageLive(_425);
        StorageLive(_426);
        _505 = const _;
        _426 = &(*_505);
        _425 = &(*_426);
        _424 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _425) -> [return: bb153, unwind continue];
    }

    bb153: {
        StorageDead(_425);
        _423 = [move _424];
        StorageDead(_424);
        _422 = &_423;
        _421 = &(*_422);
        _420 = move _421 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_421);
        _415 = Arguments::<'_>::new_v1(move _416, move _420) -> [return: bb154, unwind continue];
    }

    bb154: {
        StorageDead(_420);
        StorageDead(_416);
        _414 = format(move _415) -> [return: bb155, unwind continue];
    }

    bb155: {
        StorageDead(_415);
        StorageDead(_426);
        StorageDead(_423);
        StorageDead(_422);
        StorageDead(_418);
        _413 = move _414;
        StorageDead(_414);
        _412 = &_413;
        _411 = &(*_412);
        _410 = <String as Deref>::deref(move _411) -> [return: bb156, unwind: bb189];
    }

    bb156: {
        _409 = &(*_410);
        StorageDead(_411);
        _408 = solana_program::log::sol_log(move _409) -> [return: bb157, unwind: bb189];
    }

    bb157: {
        StorageDead(_409);
        drop(_413) -> [return: bb158, unwind: bb205];
    }

    bb158: {
        StorageDead(_413);
        StorageDead(_412);
        StorageDead(_410);
        StorageDead(_408);
        StorageLive(_428);
        _428 = _388;
        _381 = std::result::Result::<(), error::ErrorCode>::Err(move _428);
        StorageDead(_428);
        StorageDead(_388);
        goto -> bb159;
    }

    bb159: {
        StorageDead(_385);
        StorageDead(_382);
        _380 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _381) -> [return: bb160, unwind continue];
    }

    bb160: {
        StorageDead(_381);
        _429 = discriminant(_380);
        switchInt(move _429) -> [0: bb161, 1: bb162, otherwise: bb19];
    }

    bb161: {
        StorageLive(_433);
        _433 = ((_380 as Continue).0: ());
        _379 = _433;
        StorageDead(_433);
        StorageDead(_380);
        StorageDead(_379);
        _7 = const ();
        goto -> bb164;
    }

    bb162: {
        StorageLive(_430);
        _430 = ((_380 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_432);
        _432 = _430;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _432) -> [return: bb163, unwind continue];
    }

    bb163: {
        StorageDead(_432);
        StorageDead(_430);
        StorageDead(_380);
        StorageDead(_379);
        goto -> bb185;
    }

    bb164: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_434);
        StorageLive(_435);
        StorageLive(_436);
        StorageLive(_437);
        StorageLive(_438);
        _438 = _6;
        _437 = Lt(move _438, const _);
        switchInt(move _437) -> [0: bb166, otherwise: bb165];
    }

    bb165: {
        StorageDead(_438);
        StorageLive(_439);
        _439 = ();
        _436 = std::result::Result::<(), error::ErrorCode>::Ok(move _439);
        StorageDead(_439);
        goto -> bb180;
    }

    bb166: {
        StorageDead(_438);
        StorageLive(_440);
        _440 = error::ErrorCode::InvalidSpotMarketInitialization;
        StorageLive(_441);
        StorageLive(_442);
        StorageLive(_443);
        StorageLive(_444);
        StorageLive(_445);
        StorageLive(_446);
        StorageLive(_447);
        StorageLive(_448);
        StorageLive(_449);
        StorageLive(_450);
        StorageLive(_451);
        _492 = const _;
        _451 = &(*_492);
        _450 = &(*_451);
        _449 = move _450 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_450);
        StorageLive(_453);
        StorageLive(_454);
        StorageLive(_455);
        StorageLive(_456);
        StorageLive(_457);
        StorageLive(_458);
        StorageLive(_459);
        _459 = &_440;
        _458 = &(*_459);
        _457 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _458) -> [return: bb167, unwind continue];
    }

    bb167: {
        StorageDead(_458);
        _456 = [move _457];
        StorageDead(_457);
        _455 = &_456;
        _454 = &(*_455);
        _453 = move _454 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_454);
        _448 = Arguments::<'_>::new_v1(move _449, move _453) -> [return: bb168, unwind continue];
    }

    bb168: {
        StorageDead(_453);
        StorageDead(_449);
        _447 = format(move _448) -> [return: bb169, unwind continue];
    }

    bb169: {
        StorageDead(_448);
        StorageDead(_459);
        StorageDead(_456);
        StorageDead(_455);
        StorageDead(_451);
        _446 = move _447;
        StorageDead(_447);
        _445 = &_446;
        _444 = &(*_445);
        _443 = <String as Deref>::deref(move _444) -> [return: bb170, unwind: bb188];
    }

    bb170: {
        _442 = &(*_443);
        StorageDead(_444);
        _441 = solana_program::log::sol_log(move _442) -> [return: bb171, unwind: bb188];
    }

    bb171: {
        StorageDead(_442);
        drop(_446) -> [return: bb172, unwind: bb205];
    }

    bb172: {
        StorageDead(_446);
        StorageDead(_445);
        StorageDead(_443);
        StorageDead(_441);
        StorageLive(_460);
        StorageLive(_461);
        StorageLive(_462);
        StorageLive(_463);
        StorageLive(_464);
        StorageLive(_465);
        StorageLive(_466);
        StorageLive(_467);
        StorageLive(_468);
        StorageLive(_469);
        StorageLive(_470);
        _491 = const _;
        _470 = &(*_491);
        _469 = &(*_470);
        _468 = move _469 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_469);
        StorageLive(_472);
        StorageLive(_473);
        StorageLive(_474);
        StorageLive(_475);
        StorageLive(_476);
        StorageLive(_477);
        StorageLive(_478);
        _478 = &_6;
        _477 = &(*_478);
        _476 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _477) -> [return: bb173, unwind continue];
    }

    bb173: {
        StorageDead(_477);
        StorageLive(_479);
        StorageLive(_480);
        StorageLive(_481);
        _490 = const _;
        _481 = &(*_490);
        _480 = &(*_481);
        _479 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _480) -> [return: bb174, unwind continue];
    }

    bb174: {
        StorageDead(_480);
        _475 = [move _476, move _479];
        StorageDead(_479);
        StorageDead(_476);
        _474 = &_475;
        _473 = &(*_474);
        _472 = move _473 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_473);
        _467 = Arguments::<'_>::new_v1(move _468, move _472) -> [return: bb175, unwind continue];
    }

    bb175: {
        StorageDead(_472);
        StorageDead(_468);
        _466 = format(move _467) -> [return: bb176, unwind continue];
    }

    bb176: {
        StorageDead(_467);
        StorageDead(_481);
        StorageDead(_478);
        StorageDead(_475);
        StorageDead(_474);
        StorageDead(_470);
        _465 = move _466;
        StorageDead(_466);
        _464 = &_465;
        _463 = &(*_464);
        _462 = <String as Deref>::deref(move _463) -> [return: bb177, unwind: bb187];
    }

    bb177: {
        _461 = &(*_462);
        StorageDead(_463);
        _460 = solana_program::log::sol_log(move _461) -> [return: bb178, unwind: bb187];
    }

    bb178: {
        StorageDead(_461);
        drop(_465) -> [return: bb179, unwind: bb205];
    }

    bb179: {
        StorageDead(_465);
        StorageDead(_464);
        StorageDead(_462);
        StorageDead(_460);
        StorageLive(_483);
        _483 = _440;
        _436 = std::result::Result::<(), error::ErrorCode>::Err(move _483);
        StorageDead(_483);
        StorageDead(_440);
        goto -> bb180;
    }

    bb180: {
        StorageDead(_437);
        _435 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _436) -> [return: bb181, unwind continue];
    }

    bb181: {
        StorageDead(_436);
        _484 = discriminant(_435);
        switchInt(move _484) -> [0: bb182, 1: bb183, otherwise: bb19];
    }

    bb182: {
        StorageLive(_488);
        _488 = ((_435 as Continue).0: ());
        _434 = _488;
        StorageDead(_488);
        StorageDead(_435);
        StorageDead(_434);
        StorageLive(_489);
        _489 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _489);
        StorageDead(_489);
        goto -> bb186;
    }

    bb183: {
        StorageLive(_485);
        _485 = ((_435 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_487);
        _487 = _485;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _487) -> [return: bb184, unwind continue];
    }

    bb184: {
        StorageDead(_487);
        StorageDead(_485);
        StorageDead(_435);
        StorageDead(_434);
        goto -> bb186;
    }

    bb185: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb186;
    }

    bb186: {
        return;
    }

    bb187 (cleanup): {
        drop(_465) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb188 (cleanup): {
        drop(_446) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb189 (cleanup): {
        drop(_413) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb190 (cleanup): {
        drop(_394) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb191 (cleanup): {
        drop(_358) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb192 (cleanup): {
        drop(_339) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb193 (cleanup): {
        drop(_306) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb194 (cleanup): {
        drop(_287) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb195 (cleanup): {
        drop(_249) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb196 (cleanup): {
        drop(_230) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb197 (cleanup): {
        drop(_197) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb198 (cleanup): {
        drop(_178) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb199 (cleanup): {
        drop(_145) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb200 (cleanup): {
        drop(_126) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb201 (cleanup): {
        drop(_93) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb202 (cleanup): {
        drop(_74) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb203 (cleanup): {
        drop(_41) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb204 (cleanup): {
        drop(_22) -> [return: bb205, unwind terminate(cleanup)];
    }

    bb205 (cleanup): {
        resume;
    }
}
