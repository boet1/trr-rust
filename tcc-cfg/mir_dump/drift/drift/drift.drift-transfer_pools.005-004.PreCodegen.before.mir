// MIR for `drift::transfer_pools` before PreCodegen

fn drift::transfer_pools(_1: anchor_lang::context::Context<'_, '_, '_, '_, instructions::user::TransferPools<'_>>, _2: u16, _3: u16, _4: u16, _5: u16, _6: Option<u64>, _7: Option<u64>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug deposit_from_market_index => _2;
    debug deposit_to_market_index => _3;
    debug borrow_from_market_index => _4;
    debug borrow_to_market_index => _5;
    debug deposit_amount => _6;
    debug borrow_amount => _7;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _8: anchor_lang::context::Context<'_, '_, '_, '_, instructions::user::TransferPools<'_>>;
    let mut _9: u16;
    let mut _10: u16;
    let mut _11: u16;
    let mut _12: u16;
    let mut _13: std::option::Option<u64>;
    let mut _14: std::option::Option<u64>;

    bb0: {
        StorageLive(_8);
        _8 = move _1;
        StorageLive(_9);
        _9 = _2;
        StorageLive(_10);
        _10 = _3;
        StorageLive(_11);
        _11 = _4;
        StorageLive(_12);
        _12 = _5;
        StorageLive(_13);
        _13 = _6;
        StorageLive(_14);
        _14 = _7;
        _0 = instructions::user::handle_transfer_pools::<'_, '_>(move _8, move _9, move _10, move _11, move _12, move _13, move _14) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        return;
    }
}
