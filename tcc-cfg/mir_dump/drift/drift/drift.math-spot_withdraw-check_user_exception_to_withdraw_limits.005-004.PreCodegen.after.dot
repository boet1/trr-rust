digraph Mir_0_2840 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn check_user_exception_to_withdraw_limits(_1: &amp;ReErased state::spot_market::SpotMarket, _2: std::option::Option&lt;&amp;ReErased state::user::User&gt;, _3: std::option::Option&lt;u128&gt;) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _4: bool;<br align="left"/>let _5: ();<br align="left"/>let mut _6: isize;<br align="left"/>let _7: &amp;ReErased state::user::User;<br align="left"/>let _8: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _10: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _11: &amp;ReErased state::user::User;<br align="left"/>let mut _12: u16;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _18: i128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i128;<br align="left"/>let mut _30: i128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u64;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: i128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i128;<br align="left"/>let _44: ();<br align="left"/>let mut _45: &amp;ReErased str;<br align="left"/>let _46: &amp;ReErased str;<br align="left"/>let mut _47: &amp;ReErased std::string::String;<br align="left"/>let _48: &amp;ReErased std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let _50: std::string::String;<br align="left"/>let mut _51: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _54: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _55: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _56: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _59: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _60: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased i128;<br align="left"/>let _62: &amp;ReErased i128;<br align="left"/>let mut _63: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased u64;<br align="left"/>let _65: &amp;ReErased u64;<br align="left"/>let mut _66: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased u64;<br align="left"/>let _68: &amp;ReErased u64;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: i128;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: i64;<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _75: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _76: state::spot_market::SpotBalanceType;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: u128;<br align="left"/>let _79: u128;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _82: u128;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u128;<br align="left"/>let mut _91: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _92: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _93: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: bool;<br align="left"/>let mut _100: u128;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _102: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: u128;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: u128;<br align="left"/>let mut _110: u128;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _112: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _113: u128;<br align="left"/>let mut _114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _115: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _116: u64;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: u128;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: u128;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _129: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug token_amount_withdrawn =&gt; _3;<br align="left"/>debug valid_user_withdraw =&gt; _4;<br align="left"/>debug user =&gt; _7;<br align="left"/>debug spot_position =&gt; _8;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug net_deposits =&gt; _18;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug res =&gt; _50;<br align="left"/>debug token_amount_withdrawn =&gt; _78;<br align="left"/>debug user_deposit_token_amount =&gt; _79;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>>;
    bb0__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = const false<br/>StorageLive(_5)<br/>_6 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = ((_2 as Some).0: &amp;state::user::User)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_7)<br/>StorageLive(_12)<br/>_12 = ((*_1).42: u16)<br/></td></tr><tr><td align="left">_10 = User::get_spot_position(move _11, move _12)</td></tr></table>>];
    bb2__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb4__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: &amp;state::user::SpotPosition)<br/>_8 = _17<br/>StorageDead(_17)<br/>StorageDead(_9)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = ((*_7).7: u64)<br/></td></tr><tr><td align="left">_23 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _24)</td></tr></table>>];
    bb5__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb7__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb10__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: i128)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = ((*_7).8: u64)<br/></td></tr><tr><td align="left">_32 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _33)</td></tr></table>>];
    bb11__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb12__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb14__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb15__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: i128)<br/>_30 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_20 = &lt;i128 as SafeMath&gt;::safe_sub(move _21, move _30)</td></tr></table>>];
    bb16__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb17__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb19__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_39 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb20__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_19 as Continue).0: i128)<br/>_18 = _43<br/>StorageDead(_43)<br/>StorageDead(_31)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_129 = const _<br/>_54 = &amp;(*_129)<br/>_53 = &amp;(*_54)<br/>_52 = move _53 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_53)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_18<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _61)</td></tr></table>>];
    bb21__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb22__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;((*_7).7: u64)<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _64)</td></tr></table>>];
    bb24__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;((*_7).8: u64)<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _67)</td></tr></table>>];
    bb25__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_59 = [move _60, move _63, move _66]<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>_58 = &amp;_59<br/>_57 = &amp;(*_58)<br/>_56 = move _57 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_51 = Arguments::&lt;'_&gt;::new_v1(move _52, move _56)</td></tr></table>>];
    bb26__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = format(move _51)</td></tr></table>>];
    bb27__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/>_49 = move _50<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = &lt;String as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb28__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_45 = &amp;(*_46)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_44 = solana_program::log::sol_log(move _45)</td></tr></table>>];
    bb29__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb30__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _18<br/>_69 = Ge(move _70, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb31__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = ((*_8).3: i64)<br/>_71 = Ge(move _72, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb32__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;((*_8).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_75)<br/>_128 = const _<br/>_75 = &amp;(*_128)<br/></td></tr><tr><td align="left">_73 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _74, move _75)</td></tr></table>>];
    bb33__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb34__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>_77 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb35__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_3 as Some).0: u128)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = ((*_8).0: u64)<br/></td></tr><tr><td align="left">_84 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _85)</td></tr></table>>];
    bb36__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb37__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_86 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb38__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_83 as Continue).0: u128)<br/>_82 = _90<br/>StorageDead(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_1)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;((*_8).5: state::spot_market::SpotBalanceType)<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_81 = get_token_amount(move _82, move _91, move _92)</td></tr></table>>];
    bb39__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb40__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb42__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_94 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb43__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_80 as Continue).0: u128)<br/>_79 = _98<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = _79<br/>StorageLive(_104)<br/>_104 = _78<br/></td></tr><tr><td align="left">_102 = &lt;u128 as SafeMath&gt;::safe_add(move _103, move _104)</td></tr></table>>];
    bb44__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb45__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb47__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_105 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb48__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_101 as Continue).0: u128)<br/>_100 = _109<br/>StorageDead(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = ((*_1).17: u64)<br/></td></tr><tr><td align="left">_115 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _116)</td></tr></table>>];
    bb49__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb50__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _115)</td></tr></table>>];
    bb52__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_117 = discriminant(_114)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb53__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_114 as Continue).0: u128)<br/>_113 = _121<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_112 = &lt;u128 as SafeMath&gt;::safe_div(move _113, const 10_u128)</td></tr></table>>];
    bb54__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_114 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb55__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb57__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_122 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb58__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_111 as Continue).0: u128)<br/>_110 = _126<br/>StorageDead(_126)<br/>_99 = Lt(move _100, move _110)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb59__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb60__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>_4 = const true<br/>_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_18)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_127)<br/>_127 = _4<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _127)<br/>StorageDead(_127)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">return</td></tr></table>>];
    bb81__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb82__0_2840 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2840 -> bb1__0_2840 [label="1"];
    bb0__0_2840 -> bb70__0_2840 [label="otherwise"];
    bb1__0_2840 -> bb2__0_2840 [label="return"];
    bb2__0_2840 -> bb3__0_2840 [label="return"];
    bb3__0_2840 -> bb4__0_2840 [label="0"];
    bb3__0_2840 -> bb6__0_2840 [label="1"];
    bb3__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb4__0_2840 -> bb8__0_2840 [label="return"];
    bb6__0_2840 -> bb7__0_2840 [label="return"];
    bb7__0_2840 -> bb79__0_2840 [label=""];
    bb8__0_2840 -> bb9__0_2840 [label="return"];
    bb9__0_2840 -> bb10__0_2840 [label="0"];
    bb9__0_2840 -> bb11__0_2840 [label="1"];
    bb9__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb10__0_2840 -> bb13__0_2840 [label="return"];
    bb11__0_2840 -> bb12__0_2840 [label="return"];
    bb12__0_2840 -> bb77__0_2840 [label=""];
    bb13__0_2840 -> bb14__0_2840 [label="return"];
    bb14__0_2840 -> bb15__0_2840 [label="0"];
    bb14__0_2840 -> bb16__0_2840 [label="1"];
    bb14__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb15__0_2840 -> bb18__0_2840 [label="return"];
    bb16__0_2840 -> bb17__0_2840 [label="return"];
    bb17__0_2840 -> bb76__0_2840 [label=""];
    bb18__0_2840 -> bb19__0_2840 [label="return"];
    bb19__0_2840 -> bb20__0_2840 [label="0"];
    bb19__0_2840 -> bb21__0_2840 [label="1"];
    bb19__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb20__0_2840 -> bb23__0_2840 [label="return"];
    bb21__0_2840 -> bb22__0_2840 [label="return"];
    bb22__0_2840 -> bb76__0_2840 [label=""];
    bb23__0_2840 -> bb24__0_2840 [label="return"];
    bb24__0_2840 -> bb25__0_2840 [label="return"];
    bb25__0_2840 -> bb26__0_2840 [label="return"];
    bb26__0_2840 -> bb27__0_2840 [label="return"];
    bb27__0_2840 -> bb28__0_2840 [label="return"];
    bb27__0_2840 -> bb81__0_2840 [label="unwind"];
    bb28__0_2840 -> bb29__0_2840 [label="return"];
    bb28__0_2840 -> bb81__0_2840 [label="unwind"];
    bb29__0_2840 -> bb30__0_2840 [label="return"];
    bb29__0_2840 -> bb82__0_2840 [label="unwind"];
    bb30__0_2840 -> bb67__0_2840 [label="0"];
    bb30__0_2840 -> bb31__0_2840 [label="otherwise"];
    bb31__0_2840 -> bb66__0_2840 [label="0"];
    bb31__0_2840 -> bb32__0_2840 [label="otherwise"];
    bb32__0_2840 -> bb33__0_2840 [label="return"];
    bb33__0_2840 -> bb65__0_2840 [label="0"];
    bb33__0_2840 -> bb34__0_2840 [label="otherwise"];
    bb34__0_2840 -> bb35__0_2840 [label="1"];
    bb34__0_2840 -> bb64__0_2840 [label="otherwise"];
    bb35__0_2840 -> bb36__0_2840 [label="return"];
    bb36__0_2840 -> bb37__0_2840 [label="return"];
    bb37__0_2840 -> bb38__0_2840 [label="0"];
    bb37__0_2840 -> bb39__0_2840 [label="1"];
    bb37__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb38__0_2840 -> bb41__0_2840 [label="return"];
    bb39__0_2840 -> bb40__0_2840 [label="return"];
    bb40__0_2840 -> bb74__0_2840 [label=""];
    bb41__0_2840 -> bb42__0_2840 [label="return"];
    bb42__0_2840 -> bb43__0_2840 [label="0"];
    bb42__0_2840 -> bb44__0_2840 [label="1"];
    bb42__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb43__0_2840 -> bb46__0_2840 [label="return"];
    bb44__0_2840 -> bb45__0_2840 [label="return"];
    bb45__0_2840 -> bb74__0_2840 [label=""];
    bb46__0_2840 -> bb47__0_2840 [label="return"];
    bb47__0_2840 -> bb48__0_2840 [label="0"];
    bb47__0_2840 -> bb49__0_2840 [label="1"];
    bb47__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb48__0_2840 -> bb51__0_2840 [label="return"];
    bb49__0_2840 -> bb50__0_2840 [label="return"];
    bb50__0_2840 -> bb73__0_2840 [label=""];
    bb51__0_2840 -> bb52__0_2840 [label="return"];
    bb52__0_2840 -> bb53__0_2840 [label="0"];
    bb52__0_2840 -> bb54__0_2840 [label="1"];
    bb52__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb53__0_2840 -> bb56__0_2840 [label="return"];
    bb54__0_2840 -> bb55__0_2840 [label="return"];
    bb55__0_2840 -> bb72__0_2840 [label=""];
    bb56__0_2840 -> bb57__0_2840 [label="return"];
    bb57__0_2840 -> bb58__0_2840 [label="0"];
    bb57__0_2840 -> bb59__0_2840 [label="1"];
    bb57__0_2840 -> bb5__0_2840 [label="otherwise"];
    bb58__0_2840 -> bb62__0_2840 [label="0"];
    bb58__0_2840 -> bb61__0_2840 [label="otherwise"];
    bb59__0_2840 -> bb60__0_2840 [label="return"];
    bb60__0_2840 -> bb72__0_2840 [label=""];
    bb61__0_2840 -> bb63__0_2840 [label=""];
    bb62__0_2840 -> bb63__0_2840 [label=""];
    bb63__0_2840 -> bb69__0_2840 [label=""];
    bb64__0_2840 -> bb69__0_2840 [label=""];
    bb65__0_2840 -> bb68__0_2840 [label=""];
    bb66__0_2840 -> bb68__0_2840 [label=""];
    bb67__0_2840 -> bb68__0_2840 [label=""];
    bb68__0_2840 -> bb69__0_2840 [label=""];
    bb69__0_2840 -> bb71__0_2840 [label=""];
    bb70__0_2840 -> bb71__0_2840 [label=""];
    bb71__0_2840 -> bb80__0_2840 [label=""];
    bb72__0_2840 -> bb73__0_2840 [label=""];
    bb73__0_2840 -> bb75__0_2840 [label=""];
    bb74__0_2840 -> bb75__0_2840 [label=""];
    bb75__0_2840 -> bb78__0_2840 [label=""];
    bb76__0_2840 -> bb77__0_2840 [label=""];
    bb77__0_2840 -> bb78__0_2840 [label=""];
    bb78__0_2840 -> bb79__0_2840 [label=""];
    bb79__0_2840 -> bb80__0_2840 [label=""];
    bb81__0_2840 -> bb82__0_2840 [label="return"];
}
