digraph Mir_0_2315 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn standardize_value_with_remainder_i128(_1: i128, _2: u128) -&gt; std::result::Result&lt;(i128, i128), error::ErrorCode&gt;<br align="left"/>let _3: i128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _12: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: i128;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: Closure(DefId(0:14992 ~ drift[d311]::math::helpers::standardize_value_with_remainder_i128::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: u128;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: i128;<br align="left"/>let mut _27: i128;<br align="left"/>let mut _28: i128;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: i128;<br align="left"/>let _34: i128;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _36: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _37: i128;<br align="left"/>let mut _38: i128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i128;<br align="left"/>let mut _44: (i128, i128);<br align="left"/>let mut _45: i128;<br align="left"/>let mut _46: i128;<br align="left"/>debug value =&gt; _1;<br align="left"/>debug step_size =&gt; _2;<br align="left"/>debug remainder =&gt; _3;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug standardized_value =&gt; _34;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>>;
    bb0__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _1<br/></td></tr><tr><td align="left">_13 = core::num::&lt;impl i128&gt;::unsigned_abs(move _14)</td></tr></table>>];
    bb1__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>_15 = _2<br/></td></tr><tr><td align="left">_12 = core::num::&lt;impl u128&gt;::checked_rem_euclid(move _13, move _15)</td></tr></table>>];
    bb2__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>_16 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_11 = Option::&lt;u128&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _12, move _16)</td></tr></table>>];
    bb3__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_17 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_10 as Continue).0: u128)<br/>_9 = _21<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_8 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _9)</td></tr></table>>];
    bb6__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb8__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb10__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_22 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb11__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_7 as Continue).0: i128)<br/>_6 = _26<br/>StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _1<br/></td></tr><tr><td align="left">_27 = core::num::&lt;impl i128&gt;::signum(move _28)</td></tr></table>>];
    bb12__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb13__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_5 = &lt;i128 as SafeMath&gt;::safe_mul(move _6, move _27)</td></tr></table>>];
    bb15__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb16__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_29 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb17__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_4 as Continue).0: i128)<br/>_3 = _33<br/>StorageDead(_33)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _1<br/>StorageLive(_38)<br/>_38 = _3<br/></td></tr><tr><td align="left">_36 = &lt;i128 as SafeMath&gt;::safe_sub(move _37, move _38)</td></tr></table>>];
    bb18__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb19__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb21__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_39 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb22__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_35 as Continue).0: i128)<br/>_34 = _43<br/>StorageDead(_43)<br/>StorageDead(_35)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _34<br/>StorageLive(_46)<br/>_46 = _3<br/>_44 = (move _45, move _46)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>_0 = std::result::Result::&lt;(i128, i128), error::ErrorCode&gt;::Ok(move _44)<br/>StorageDead(_44)<br/>StorageDead(_34)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb24__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2315 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2315 -> bb1__0_2315 [label="return"];
    bb1__0_2315 -> bb2__0_2315 [label="return"];
    bb2__0_2315 -> bb3__0_2315 [label="return"];
    bb3__0_2315 -> bb4__0_2315 [label="return"];
    bb4__0_2315 -> bb5__0_2315 [label="0"];
    bb4__0_2315 -> bb7__0_2315 [label="1"];
    bb4__0_2315 -> bb6__0_2315 [label="otherwise"];
    bb5__0_2315 -> bb9__0_2315 [label="return"];
    bb7__0_2315 -> bb8__0_2315 [label="return"];
    bb8__0_2315 -> bb25__0_2315 [label=""];
    bb9__0_2315 -> bb10__0_2315 [label="return"];
    bb10__0_2315 -> bb11__0_2315 [label="0"];
    bb10__0_2315 -> bb12__0_2315 [label="1"];
    bb10__0_2315 -> bb6__0_2315 [label="otherwise"];
    bb11__0_2315 -> bb14__0_2315 [label="return"];
    bb12__0_2315 -> bb13__0_2315 [label="return"];
    bb13__0_2315 -> bb25__0_2315 [label=""];
    bb14__0_2315 -> bb15__0_2315 [label="return"];
    bb15__0_2315 -> bb16__0_2315 [label="return"];
    bb16__0_2315 -> bb17__0_2315 [label="0"];
    bb16__0_2315 -> bb18__0_2315 [label="1"];
    bb16__0_2315 -> bb6__0_2315 [label="otherwise"];
    bb17__0_2315 -> bb20__0_2315 [label="return"];
    bb18__0_2315 -> bb19__0_2315 [label="return"];
    bb19__0_2315 -> bb26__0_2315 [label=""];
    bb20__0_2315 -> bb21__0_2315 [label="return"];
    bb21__0_2315 -> bb22__0_2315 [label="0"];
    bb21__0_2315 -> bb23__0_2315 [label="1"];
    bb21__0_2315 -> bb6__0_2315 [label="otherwise"];
    bb22__0_2315 -> bb28__0_2315 [label=""];
    bb23__0_2315 -> bb24__0_2315 [label="return"];
    bb24__0_2315 -> bb27__0_2315 [label=""];
    bb25__0_2315 -> bb26__0_2315 [label=""];
    bb26__0_2315 -> bb27__0_2315 [label=""];
    bb27__0_2315 -> bb28__0_2315 [label=""];
}
