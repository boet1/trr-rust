digraph Mir_0_5571 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_liquidation_fee(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u32, _3: u32) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _15: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _20: Closure(DefId(0:5572 ~ drift[d311]::instructions::admin::handle_update_perp_liquidation_fee::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;ReErased str;<br align="left"/>let _28: &amp;ReErased str;<br align="left"/>let mut _29: &amp;ReErased std::string::String;<br align="left"/>let _30: &amp;ReErased std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let mut _33: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _36: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _37: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _41: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _42: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased u16;<br align="left"/>let _45: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _46: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: u32;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _53: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _54: u32;<br align="left"/>let mut _55: u32;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u32;<br align="left"/>let mut _61: ();<br align="left"/>let _62: error::ErrorCode;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased error::ErrorCode;<br align="left"/>let _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: error::ErrorCode;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: ();<br align="left"/>let _91: ();<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _93: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: u32;<br align="left"/>let mut _96: ();<br align="left"/>let _97: error::ErrorCode;<br align="left"/>let _98: ();<br align="left"/>let mut _99: &amp;ReErased str;<br align="left"/>let _100: &amp;ReErased str;<br align="left"/>let mut _101: &amp;ReErased std::string::String;<br align="left"/>let _102: &amp;ReErased std::string::String;<br align="left"/>let _103: std::string::String;<br align="left"/>let _104: std::string::String;<br align="left"/>let mut _105: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _107: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _108: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _109: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _110: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _111: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _112: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _113: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _114: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _115: &amp;ReErased error::ErrorCode;<br align="left"/>let _116: &amp;ReErased error::ErrorCode;<br align="left"/>let _117: ();<br align="left"/>let mut _118: &amp;ReErased str;<br align="left"/>let _119: &amp;ReErased str;<br align="left"/>let mut _120: error::ErrorCode;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: ();<br align="left"/>let _126: ();<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _128: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _129: u32;<br align="left"/>let mut _130: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _131: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _132: u32;<br align="left"/>let mut _133: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _134: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _135: u32;<br align="left"/>let mut _136: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _137: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _138: u16;<br align="left"/>let mut _139: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _140: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: u32;<br align="left"/>let mut _146: u32;<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _148: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _149: u16;<br align="left"/>let mut _150: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _151: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _152: isize;<br align="left"/>let _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _154: !;<br align="left"/>let mut _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _156: u32;<br align="left"/>let mut _157: u32;<br align="left"/>let mut _158: u32;<br align="left"/>let mut _159: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _160: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _161: isize;<br align="left"/>let _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _165: ();<br align="left"/>let _166: ();<br align="left"/>let mut _167: &amp;ReErased str;<br align="left"/>let _168: &amp;ReErased str;<br align="left"/>let mut _169: &amp;ReErased std::string::String;<br align="left"/>let _170: &amp;ReErased std::string::String;<br align="left"/>let _171: std::string::String;<br align="left"/>let _172: std::string::String;<br align="left"/>let mut _173: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _175: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _176: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _177: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _178: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _179: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _180: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _181: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _182: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _183: &amp;ReErased u32;<br align="left"/>let _184: &amp;ReErased u32;<br align="left"/>let _185: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _186: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased u32;<br align="left"/>let _189: &amp;ReErased u32;<br align="left"/>let _190: ();<br align="left"/>let mut _191: &amp;ReErased str;<br align="left"/>let _192: &amp;ReErased str;<br align="left"/>let mut _193: &amp;ReErased std::string::String;<br align="left"/>let _194: &amp;ReErased std::string::String;<br align="left"/>let _195: std::string::String;<br align="left"/>let _196: std::string::String;<br align="left"/>let mut _197: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _198: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _200: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _201: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _202: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _203: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _204: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _205: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _206: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _207: &amp;ReErased u32;<br align="left"/>let _208: &amp;ReErased u32;<br align="left"/>let _209: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _210: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _211: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _212: &amp;ReErased u32;<br align="left"/>let _213: &amp;ReErased u32;<br align="left"/>let mut _214: u32;<br align="left"/>let mut _215: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _216: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _217: u32;<br align="left"/>let mut _218: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _219: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _220: ();<br align="left"/>let mut _221: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _222: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _223: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _224: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _225: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _226: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _227: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _228: isize;<br align="left"/>let mut _229: isize;<br align="left"/>let mut _230: isize;<br align="left"/>let mut _231: isize;<br align="left"/>let mut _232: isize;<br align="left"/>let mut _233: isize;<br align="left"/>let mut _234: isize;<br align="left"/>let mut _235: isize;<br align="left"/>let mut _236: isize;<br align="left"/>let mut _237: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug liquidator_fee =&gt; _2;<br align="left"/>debug if_liquidation_fee =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug perp_market =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug res =&gt; _32;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug error_code =&gt; _62;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug error_code =&gt; _97;<br align="left"/>debug res =&gt; _104;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug residual =&gt; _153;<br align="left"/>debug val =&gt; _156;<br align="left"/>debug residual =&gt; _162;<br align="left"/>debug val =&gt; _165;<br align="left"/>debug res =&gt; _172;<br align="left"/>debug res =&gt; _196;<br align="left"/>>;
    bb0__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_226 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_8 = &amp;((*_226).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_6 = constraints::perp_market_valid(move _7)</td></tr></table>>];
    bb1__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_228 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_227 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarket&lt;'_&gt;)<br/>_19 = &amp;((*_227).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_18 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _19)</td></tr></table>>];
    bb4__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_234 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _18, move _20)</td></tr></table>>];
    bb8__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_16 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_15 = move _25<br/>StorageDead(_25)<br/>_14 = &amp;mut _15<br/>_232 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_225 = const _<br/>_36 = &amp;(*_225)<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_14)<br/></td></tr><tr><td align="left">_45 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb11__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_230 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = &amp;((*_45).21: u16)<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _43)</td></tr></table>>];
    bb14__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_41 = [move _42]<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_33 = Arguments::&lt;'_&gt;::new_v1(move _34, move _38)</td></tr></table>>];
    bb15__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = format(move _33)</td></tr></table>>];
    bb16__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>_31 = move _32<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = &lt;String as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb17__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_27 = &amp;(*_28)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_26 = solana_program::log::sol_log(move _27)</td></tr></table>>];
    bb18__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb19__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _2<br/>StorageLive(_55)<br/>_55 = _3<br/></td></tr><tr><td align="left">_53 = &lt;u32 as SafeMath&gt;::safe_add(move _54, move _55)</td></tr></table>>];
    bb20__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb21__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_56 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb22__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_52 as Continue).0: u32)<br/>_51 = _60<br/>StorageDead(_60)<br/>_50 = Lt(move _51, const _)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb23__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb24__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_61)<br/>_61 = ()<br/>_49 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _61)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_62)<br/>_62 = error::ErrorCode::DefaultError<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_224 = const _<br/>_73 = &amp;(*_224)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_62<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _80)</td></tr></table>>];
    bb27__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = [move _79]<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1(move _71, move _75)</td></tr></table>>];
    bb28__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb29__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb30__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb31__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb32__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = const &quot;Total liquidation fee must be less than 100%&quot;<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb33__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>_85 = _62<br/>_49 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _85)<br/>StorageDead(_85)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb35__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_86 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb36__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_48 as Continue).0: ())<br/>_47 = _90<br/>StorageDead(_90)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = _3<br/>_94 = Lt(move _95, const _)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb37__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb38__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_96)<br/>_96 = ()<br/>_93 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _96)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_97)<br/>_97 = error::ErrorCode::DefaultError<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_223 = const _<br/>_108 = &amp;(*_223)<br/>_107 = &amp;(*_108)<br/>_106 = move _107 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_107)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;_97<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _115)</td></tr></table>>];
    bb41__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_113 = [move _114]<br/>StorageDead(_114)<br/>_112 = &amp;_113<br/>_111 = &amp;(*_112)<br/>_110 = move _111 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_105 = Arguments::&lt;'_&gt;::new_v1(move _106, move _110)</td></tr></table>>];
    bb42__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = format(move _105)</td></tr></table>>];
    bb43__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>_103 = move _104<br/>StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = &lt;String as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb44__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_99 = &amp;(*_100)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_98 = solana_program::log::sol_log(move _99)</td></tr></table>>];
    bb45__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb46__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = const &quot;If liquidation fee must be less than 100%&quot;<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_117 = solana_program::log::sol_log(move _118)</td></tr></table>>];
    bb47__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageLive(_120)<br/>_120 = _97<br/>_93 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _120)<br/>StorageDead(_120)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb49__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_121 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb50__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_92 as Continue).0: ())<br/>_91 = _125<br/>StorageDead(_125)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;(*_14)<br/></td></tr><tr><td align="left">_130 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _131)</td></tr></table>>];
    bb51__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb52__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_129 = ((*_130).15: u32)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;(*_14)<br/></td></tr><tr><td align="left">_133 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb54__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_132 = ((*_133).16: u32)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;(*_14)<br/></td></tr><tr><td align="left">_139 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb55__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_138 = ((*_139).32: u16)<br/></td></tr><tr><td align="left">_137 = &lt;u16 as Cast&gt;::cast::&lt;u32&gt;(move _138)</td></tr></table>>];
    bb56__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _137)</td></tr></table>>];
    bb57__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_141 = discriminant(_136)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb58__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_136 as Continue).0: u32)<br/>_135 = _145<br/>StorageDead(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;(*_14)<br/></td></tr><tr><td align="left">_150 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _151)</td></tr></table>>];
    bb59__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_136 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb60__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_149 = ((*_150).33: u16)<br/></td></tr><tr><td align="left">_148 = &lt;u16 as Cast&gt;::cast::&lt;u32&gt;(move _149)</td></tr></table>>];
    bb62__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb63__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_152 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _152)</td></tr></table>>];
    bb64__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_147 as Continue).0: u32)<br/>_146 = _156<br/>StorageDead(_156)<br/>StorageLive(_157)<br/>_157 = _2<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;(*_14)<br/></td></tr><tr><td align="left">_159 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _160)</td></tr></table>>];
    bb65__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_155)<br/>_155 = _153<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _155)</td></tr></table>>];
    bb66__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_146)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = (((*_159).1: state::perp_market::AMM).64: u32)<br/></td></tr><tr><td align="left">_128 = validate_margin(move _129, move _132, move _135, move _146, move _157, move _158)</td></tr></table>>];
    bb68__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_146)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb69__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_161 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb70__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_127 as Continue).0: ())<br/>_126 = _165<br/>StorageDead(_165)<br/>StorageDead(_159)<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_222 = const _<br/>_176 = &amp;(*_222)<br/>_175 = &amp;(*_176)<br/>_174 = move _175 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_175)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;(*_14)<br/></td></tr><tr><td align="left">_185 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _186)</td></tr></table>>];
    bb71__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_164)<br/>_164 = _162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _164)</td></tr></table>>];
    bb72__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_184 = &amp;((*_185).13: u32)<br/>_183 = &amp;(*_184)<br/></td></tr><tr><td align="left">_182 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _183)</td></tr></table>>];
    bb74__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;_2<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _188)</td></tr></table>>];
    bb75__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_181 = [move _182, move _187]<br/>StorageDead(_187)<br/>StorageDead(_182)<br/>_180 = &amp;_181<br/>_179 = &amp;(*_180)<br/>_178 = move _179 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_173 = Arguments::&lt;'_&gt;::new_v1(move _174, move _178)</td></tr></table>>];
    bb76__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">_172 = format(move _173)</td></tr></table>>];
    bb77__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_176)<br/>_171 = move _172<br/>StorageDead(_172)<br/>_170 = &amp;_171<br/>_169 = &amp;(*_170)<br/></td></tr><tr><td align="left">_168 = &lt;String as Deref&gt;::deref(move _169)</td></tr></table>>];
    bb78__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_167 = &amp;(*_168)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_166 = solana_program::log::sol_log(move _167)</td></tr></table>>];
    bb79__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">drop(_171)</td></tr></table>>];
    bb80__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_166)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_221 = const _<br/>_200 = &amp;(*_221)<br/>_199 = &amp;(*_200)<br/>_198 = move _199 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_199)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;(*_14)<br/></td></tr><tr><td align="left">_209 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _210)</td></tr></table>>];
    bb81__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_208 = &amp;((*_209).14: u32)<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _207)</td></tr></table>>];
    bb82__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;_3<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_211 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _212)</td></tr></table>>];
    bb83__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_205 = [move _206, move _211]<br/>StorageDead(_211)<br/>StorageDead(_206)<br/>_204 = &amp;_205<br/>_203 = &amp;(*_204)<br/>_202 = move _203 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_197 = Arguments::&lt;'_&gt;::new_v1(move _198, move _202)</td></tr></table>>];
    bb84__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = format(move _197)</td></tr></table>>];
    bb85__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_213)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>_195 = move _196<br/>StorageDead(_196)<br/>_194 = &amp;_195<br/>_193 = &amp;(*_194)<br/></td></tr><tr><td align="left">_192 = &lt;String as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb86__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_191 = &amp;(*_192)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_190 = solana_program::log::sol_log(move _191)</td></tr></table>>];
    bb87__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/></td></tr><tr><td align="left">drop(_195)</td></tr></table>>];
    bb88__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageLive(_214)<br/>_214 = _2<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_215 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _216)</td></tr></table>>];
    bb89__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>((*_215).13: u32) = move _214<br/>StorageDead(_214)<br/>StorageDead(_215)<br/>StorageLive(_217)<br/>_217 = _3<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_218 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _219)</td></tr></table>>];
    bb90__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>((*_218).14: u32) = move _217<br/>StorageDead(_217)<br/>StorageDead(_218)<br/>StorageLive(_220)<br/>_220 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _220)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb91__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb96__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left">return</td></tr></table>>];
    bb98__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_195)</td></tr></table>>];
    bb99__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_171)</td></tr></table>>];
    bb100__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb101__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb102__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb103__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb104__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb105__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">105 (cleanup)</td></tr><tr><td align="left" balign="left">_236 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_5571 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">106 (cleanup)</td></tr><tr><td align="left" balign="left">_237 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5571 -> bb1__0_5571 [label="return"];
    bb1__0_5571 -> bb2__0_5571 [label="return"];
    bb1__0_5571 -> bb104__0_5571 [label="unwind"];
    bb2__0_5571 -> bb3__0_5571 [label="0"];
    bb2__0_5571 -> bb5__0_5571 [label="1"];
    bb2__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb3__0_5571 -> bb7__0_5571 [label="return"];
    bb5__0_5571 -> bb6__0_5571 [label="return"];
    bb5__0_5571 -> bb106__0_5571 [label="unwind"];
    bb6__0_5571 -> bb97__0_5571 [label=""];
    bb7__0_5571 -> bb8__0_5571 [label="return"];
    bb7__0_5571 -> bb104__0_5571 [label="unwind"];
    bb8__0_5571 -> bb9__0_5571 [label="return"];
    bb8__0_5571 -> bb104__0_5571 [label="unwind"];
    bb9__0_5571 -> bb10__0_5571 [label="0"];
    bb9__0_5571 -> bb11__0_5571 [label="1"];
    bb9__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb10__0_5571 -> bb13__0_5571 [label="return"];
    bb10__0_5571 -> bb103__0_5571 [label="unwind"];
    bb11__0_5571 -> bb12__0_5571 [label="return"];
    bb11__0_5571 -> bb105__0_5571 [label="unwind"];
    bb12__0_5571 -> bb96__0_5571 [label=""];
    bb13__0_5571 -> bb14__0_5571 [label="return"];
    bb13__0_5571 -> bb103__0_5571 [label="unwind"];
    bb14__0_5571 -> bb15__0_5571 [label="return"];
    bb14__0_5571 -> bb103__0_5571 [label="unwind"];
    bb15__0_5571 -> bb16__0_5571 [label="return"];
    bb15__0_5571 -> bb103__0_5571 [label="unwind"];
    bb16__0_5571 -> bb17__0_5571 [label="return"];
    bb16__0_5571 -> bb102__0_5571 [label="unwind"];
    bb17__0_5571 -> bb18__0_5571 [label="return"];
    bb17__0_5571 -> bb102__0_5571 [label="unwind"];
    bb18__0_5571 -> bb19__0_5571 [label="return"];
    bb18__0_5571 -> bb103__0_5571 [label="unwind"];
    bb19__0_5571 -> bb20__0_5571 [label="return"];
    bb19__0_5571 -> bb103__0_5571 [label="unwind"];
    bb20__0_5571 -> bb21__0_5571 [label="return"];
    bb20__0_5571 -> bb103__0_5571 [label="unwind"];
    bb21__0_5571 -> bb22__0_5571 [label="0"];
    bb21__0_5571 -> bb23__0_5571 [label="1"];
    bb21__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb22__0_5571 -> bb26__0_5571 [label="0"];
    bb22__0_5571 -> bb25__0_5571 [label="otherwise"];
    bb23__0_5571 -> bb24__0_5571 [label="return"];
    bb23__0_5571 -> bb103__0_5571 [label="unwind"];
    bb24__0_5571 -> bb94__0_5571 [label=""];
    bb25__0_5571 -> bb34__0_5571 [label=""];
    bb26__0_5571 -> bb27__0_5571 [label="return"];
    bb26__0_5571 -> bb103__0_5571 [label="unwind"];
    bb27__0_5571 -> bb28__0_5571 [label="return"];
    bb27__0_5571 -> bb103__0_5571 [label="unwind"];
    bb28__0_5571 -> bb29__0_5571 [label="return"];
    bb28__0_5571 -> bb103__0_5571 [label="unwind"];
    bb29__0_5571 -> bb30__0_5571 [label="return"];
    bb29__0_5571 -> bb101__0_5571 [label="unwind"];
    bb30__0_5571 -> bb31__0_5571 [label="return"];
    bb30__0_5571 -> bb101__0_5571 [label="unwind"];
    bb31__0_5571 -> bb32__0_5571 [label="return"];
    bb31__0_5571 -> bb103__0_5571 [label="unwind"];
    bb32__0_5571 -> bb33__0_5571 [label="return"];
    bb32__0_5571 -> bb103__0_5571 [label="unwind"];
    bb33__0_5571 -> bb34__0_5571 [label=""];
    bb34__0_5571 -> bb35__0_5571 [label="return"];
    bb34__0_5571 -> bb103__0_5571 [label="unwind"];
    bb35__0_5571 -> bb36__0_5571 [label="0"];
    bb35__0_5571 -> bb37__0_5571 [label="1"];
    bb35__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb36__0_5571 -> bb40__0_5571 [label="0"];
    bb36__0_5571 -> bb39__0_5571 [label="otherwise"];
    bb37__0_5571 -> bb38__0_5571 [label="return"];
    bb37__0_5571 -> bb103__0_5571 [label="unwind"];
    bb38__0_5571 -> bb94__0_5571 [label=""];
    bb39__0_5571 -> bb48__0_5571 [label=""];
    bb40__0_5571 -> bb41__0_5571 [label="return"];
    bb40__0_5571 -> bb103__0_5571 [label="unwind"];
    bb41__0_5571 -> bb42__0_5571 [label="return"];
    bb41__0_5571 -> bb103__0_5571 [label="unwind"];
    bb42__0_5571 -> bb43__0_5571 [label="return"];
    bb42__0_5571 -> bb103__0_5571 [label="unwind"];
    bb43__0_5571 -> bb44__0_5571 [label="return"];
    bb43__0_5571 -> bb100__0_5571 [label="unwind"];
    bb44__0_5571 -> bb45__0_5571 [label="return"];
    bb44__0_5571 -> bb100__0_5571 [label="unwind"];
    bb45__0_5571 -> bb46__0_5571 [label="return"];
    bb45__0_5571 -> bb103__0_5571 [label="unwind"];
    bb46__0_5571 -> bb47__0_5571 [label="return"];
    bb46__0_5571 -> bb103__0_5571 [label="unwind"];
    bb47__0_5571 -> bb48__0_5571 [label=""];
    bb48__0_5571 -> bb49__0_5571 [label="return"];
    bb48__0_5571 -> bb103__0_5571 [label="unwind"];
    bb49__0_5571 -> bb50__0_5571 [label="0"];
    bb49__0_5571 -> bb51__0_5571 [label="1"];
    bb49__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb50__0_5571 -> bb53__0_5571 [label="return"];
    bb50__0_5571 -> bb103__0_5571 [label="unwind"];
    bb51__0_5571 -> bb52__0_5571 [label="return"];
    bb51__0_5571 -> bb103__0_5571 [label="unwind"];
    bb52__0_5571 -> bb95__0_5571 [label=""];
    bb53__0_5571 -> bb54__0_5571 [label="return"];
    bb53__0_5571 -> bb103__0_5571 [label="unwind"];
    bb54__0_5571 -> bb55__0_5571 [label="return"];
    bb54__0_5571 -> bb103__0_5571 [label="unwind"];
    bb55__0_5571 -> bb56__0_5571 [label="return"];
    bb55__0_5571 -> bb103__0_5571 [label="unwind"];
    bb56__0_5571 -> bb57__0_5571 [label="return"];
    bb56__0_5571 -> bb103__0_5571 [label="unwind"];
    bb57__0_5571 -> bb58__0_5571 [label="0"];
    bb57__0_5571 -> bb59__0_5571 [label="1"];
    bb57__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb58__0_5571 -> bb61__0_5571 [label="return"];
    bb58__0_5571 -> bb103__0_5571 [label="unwind"];
    bb59__0_5571 -> bb60__0_5571 [label="return"];
    bb59__0_5571 -> bb103__0_5571 [label="unwind"];
    bb60__0_5571 -> bb93__0_5571 [label=""];
    bb61__0_5571 -> bb62__0_5571 [label="return"];
    bb61__0_5571 -> bb103__0_5571 [label="unwind"];
    bb62__0_5571 -> bb63__0_5571 [label="return"];
    bb62__0_5571 -> bb103__0_5571 [label="unwind"];
    bb63__0_5571 -> bb64__0_5571 [label="0"];
    bb63__0_5571 -> bb65__0_5571 [label="1"];
    bb63__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb64__0_5571 -> bb67__0_5571 [label="return"];
    bb64__0_5571 -> bb103__0_5571 [label="unwind"];
    bb65__0_5571 -> bb66__0_5571 [label="return"];
    bb65__0_5571 -> bb103__0_5571 [label="unwind"];
    bb66__0_5571 -> bb92__0_5571 [label=""];
    bb67__0_5571 -> bb68__0_5571 [label="return"];
    bb67__0_5571 -> bb103__0_5571 [label="unwind"];
    bb68__0_5571 -> bb69__0_5571 [label="return"];
    bb68__0_5571 -> bb103__0_5571 [label="unwind"];
    bb69__0_5571 -> bb70__0_5571 [label="0"];
    bb69__0_5571 -> bb71__0_5571 [label="1"];
    bb69__0_5571 -> bb4__0_5571 [label="otherwise"];
    bb70__0_5571 -> bb73__0_5571 [label="return"];
    bb70__0_5571 -> bb103__0_5571 [label="unwind"];
    bb71__0_5571 -> bb72__0_5571 [label="return"];
    bb71__0_5571 -> bb103__0_5571 [label="unwind"];
    bb72__0_5571 -> bb92__0_5571 [label=""];
    bb73__0_5571 -> bb74__0_5571 [label="return"];
    bb73__0_5571 -> bb103__0_5571 [label="unwind"];
    bb74__0_5571 -> bb75__0_5571 [label="return"];
    bb74__0_5571 -> bb103__0_5571 [label="unwind"];
    bb75__0_5571 -> bb76__0_5571 [label="return"];
    bb75__0_5571 -> bb103__0_5571 [label="unwind"];
    bb76__0_5571 -> bb77__0_5571 [label="return"];
    bb76__0_5571 -> bb103__0_5571 [label="unwind"];
    bb77__0_5571 -> bb78__0_5571 [label="return"];
    bb77__0_5571 -> bb99__0_5571 [label="unwind"];
    bb78__0_5571 -> bb79__0_5571 [label="return"];
    bb78__0_5571 -> bb99__0_5571 [label="unwind"];
    bb79__0_5571 -> bb80__0_5571 [label="return"];
    bb79__0_5571 -> bb103__0_5571 [label="unwind"];
    bb80__0_5571 -> bb81__0_5571 [label="return"];
    bb80__0_5571 -> bb103__0_5571 [label="unwind"];
    bb81__0_5571 -> bb82__0_5571 [label="return"];
    bb81__0_5571 -> bb103__0_5571 [label="unwind"];
    bb82__0_5571 -> bb83__0_5571 [label="return"];
    bb82__0_5571 -> bb103__0_5571 [label="unwind"];
    bb83__0_5571 -> bb84__0_5571 [label="return"];
    bb83__0_5571 -> bb103__0_5571 [label="unwind"];
    bb84__0_5571 -> bb85__0_5571 [label="return"];
    bb84__0_5571 -> bb103__0_5571 [label="unwind"];
    bb85__0_5571 -> bb86__0_5571 [label="return"];
    bb85__0_5571 -> bb98__0_5571 [label="unwind"];
    bb86__0_5571 -> bb87__0_5571 [label="return"];
    bb86__0_5571 -> bb98__0_5571 [label="unwind"];
    bb87__0_5571 -> bb88__0_5571 [label="return"];
    bb87__0_5571 -> bb103__0_5571 [label="unwind"];
    bb88__0_5571 -> bb89__0_5571 [label="return"];
    bb88__0_5571 -> bb103__0_5571 [label="unwind"];
    bb89__0_5571 -> bb90__0_5571 [label="return"];
    bb89__0_5571 -> bb103__0_5571 [label="unwind"];
    bb90__0_5571 -> bb91__0_5571 [label="return"];
    bb90__0_5571 -> bb104__0_5571 [label="unwind"];
    bb91__0_5571 -> bb97__0_5571 [label=""];
    bb92__0_5571 -> bb93__0_5571 [label=""];
    bb93__0_5571 -> bb95__0_5571 [label=""];
    bb94__0_5571 -> bb95__0_5571 [label=""];
    bb95__0_5571 -> bb96__0_5571 [label="return"];
    bb95__0_5571 -> bb104__0_5571 [label="unwind"];
    bb96__0_5571 -> bb97__0_5571 [label=""];
    bb98__0_5571 -> bb103__0_5571 [label="return"];
    bb99__0_5571 -> bb103__0_5571 [label="return"];
    bb100__0_5571 -> bb103__0_5571 [label="return"];
    bb101__0_5571 -> bb103__0_5571 [label="return"];
    bb102__0_5571 -> bb103__0_5571 [label="return"];
    bb103__0_5571 -> bb104__0_5571 [label="return"];
    bb105__0_5571 -> bb104__0_5571 [label=""];
    bb106__0_5571 -> bb104__0_5571 [label=""];
}
