digraph Mir_0_4347 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotPosition::get_worst_case_fill_simulation(_1: &amp;ReErased state::user::SpotPosition, _2: &amp;ReErased state::spot_market::SpotMarket, _3: &amp;ReErased state::oracle::StrictOraclePrice, _4: std::option::Option&lt;i128&gt;, _5: math::margin::MarginRequirementType) -&gt; std::result::Result&lt;state::user::OrderFillSimulation, error::ErrorCode&gt;<br align="left"/>let _6: state::user::OrderFillSimulation;<br align="left"/>let _7: state::user::OrderFillSimulation;<br align="left"/>let mut _8: [state::user::OrderFillSimulation; 2_usize];<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, [state::user::OrderFillSimulation; 2_usize]&gt;;<br align="left"/>let mut _10: std::result::Result&lt;[state::user::OrderFillSimulation; 2_usize], error::ErrorCode&gt;;<br align="left"/>let mut _11: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _12: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _13: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _14: std::option::Option&lt;i128&gt;;<br align="left"/>let mut _15: math::margin::MarginRequirementType;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: [state::user::OrderFillSimulation; 2_usize];<br align="left"/>let mut _21: state::user::OrderFillSimulation;<br align="left"/>let mut _22: state::user::OrderFillSimulation;<br align="left"/>let mut _23: state::user::OrderFillSimulation;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug strict_oracle_price =&gt; _3;<br align="left"/>debug token_amount =&gt; _4;<br align="left"/>debug margin_type =&gt; _5;<br align="left"/>debug bid_simulation =&gt; _6;<br align="left"/>debug ask_simulation =&gt; _7;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>>;
    bb0__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/>StorageLive(_12)<br/>_12 = &amp;(*_2)<br/>StorageLive(_13)<br/>_13 = &amp;(*_3)<br/>StorageLive(_14)<br/>_14 = _4<br/>StorageLive(_15)<br/>_15 = _5<br/></td></tr><tr><td align="left">_10 = SpotPosition::simulate_fills_both_sides(move _11, move _12, move _13, move _14, move _15)</td></tr></table>>];
    bb1__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;[OrderFillSimulation; 2], error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb2__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_16 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_9 as Continue).0: [state::user::OrderFillSimulation; 2])<br/>_8 = _20<br/>StorageDead(_20)<br/>StorageLive(_6)<br/>_6 = _8[0 of 2]<br/>StorageLive(_7)<br/>_7 = _8[1 of 2]<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _7<br/>StorageLive(_23)<br/>_23 = _6<br/></td></tr><tr><td align="left">_21 = OrderFillSimulation::riskier_side(move _22, move _23)</td></tr></table>>];
    bb4__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb6__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>_0 = std::result::Result::&lt;OrderFillSimulation, error::ErrorCode&gt;::Ok(move _21)<br/>StorageDead(_21)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_4347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4347 -> bb1__0_4347 [label="return"];
    bb1__0_4347 -> bb2__0_4347 [label="return"];
    bb2__0_4347 -> bb3__0_4347 [label="0"];
    bb2__0_4347 -> bb5__0_4347 [label="1"];
    bb2__0_4347 -> bb4__0_4347 [label="otherwise"];
    bb3__0_4347 -> bb7__0_4347 [label="return"];
    bb5__0_4347 -> bb6__0_4347 [label="return"];
    bb6__0_4347 -> bb8__0_4347 [label=""];
    bb7__0_4347 -> bb8__0_4347 [label=""];
}
