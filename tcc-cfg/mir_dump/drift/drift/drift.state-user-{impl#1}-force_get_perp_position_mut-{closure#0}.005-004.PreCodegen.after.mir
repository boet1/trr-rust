// MIR for `state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::force_get_perp_position_mut::{closure#0}` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::force_get_perp_position_mut::{closure#0}(_1: {closure@programs/drift/src/state/user.rs:256:22: 256:25}, _2: error::ErrorCode) -> std::result::Result<usize, error::ErrorCode> {
    debug self => (*(_1.0: &mut &mut state::user::User));
    debug market_index => (*(_1.1: &u16));
    let mut _0: std::result::Result<usize, error::ErrorCode>;
    let mut _3: &mut [state::user::PerpPosition; 8];
    let mut _4: &mut [state::user::PerpPosition; 8];
    let mut _5: u16;
    let mut _6: &mut &mut state::user::User;
    let mut _7: &mut state::user::User;
    let mut _8: &u16;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _6 = deref_copy (_1.0: &mut &mut state::user::User);
        _7 = deref_copy (*_6);
        _4 = &mut ((*_7).4: [state::user::PerpPosition; 8]);
        _3 = &mut (*_4);
        StorageLive(_5);
        _8 = deref_copy (_1.1: &u16);
        _5 = (*_8);
        _0 = add_new_position(move _3, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
