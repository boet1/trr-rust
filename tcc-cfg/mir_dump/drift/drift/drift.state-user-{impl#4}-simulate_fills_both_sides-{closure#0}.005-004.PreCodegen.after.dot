digraph Mir_0_4350 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotPosition::simulate_fills_both_sides::{closure#0}(_1: &amp;ReErased Closure(DefId(0:4350 ~ drift[d311]::state::user::{impl#4}::simulate_fills_both_sides::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((i128, i128)) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;, []), (&amp;ReErased &amp;ReErased state::spot_market::SpotMarket, &amp;ReErased &amp;ReErased state::oracle::StrictOraclePrice, &amp;ReErased math::margin::MarginRequirementType)]), _2: i128, _3: i128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i128;<br align="left"/>let _6: u32;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: i128;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _14: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: u32;<br align="left"/>let mut _20: i128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _23: i128;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: u32;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i128;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: i128;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: i128;<br align="left"/>let _40: u32;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _43: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: i128;<br align="left"/>let mut _46: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _47: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u32;<br align="left"/>let mut _53: i128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _56: i128;<br align="left"/>let mut _57: i128;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _59: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _60: u32;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: i128;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: i128;<br align="left"/>let mut _71: &amp;ReErased &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _72: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _73: &amp;ReErased &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _74: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _75: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _76: &amp;ReErased &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _77: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _78: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>debug token_amount =&gt; _2;<br align="left"/>debug token_value =&gt; _3;<br align="left"/>debug spot_market =&gt; (*((*_1).0: &amp;&amp;state::spot_market::SpotMarket));<br align="left"/>debug strict_oracle_price =&gt; (*((*_1).1: &amp;&amp;state::oracle::StrictOraclePrice));<br align="left"/>debug margin_type =&gt; (*((*_1).2: &amp;math::margin::MarginRequirementType));<br align="left"/>debug asset_weight =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug liability_weight =&gt; _40;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>>;
    bb0__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _3<br/>_4 = Gt(move _5, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_71 = deref_copy ((*_1).0: &amp;&amp;state::spot_market::SpotMarket)<br/>_72 = deref_copy (*_71)<br/>_9 = &amp;(*_72)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _2<br/></td></tr><tr><td align="left">_10 = core::num::&lt;impl i128&gt;::unsigned_abs(move _11)</td></tr></table>>];
    bb2__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>_73 = deref_copy ((*_1).1: &amp;&amp;state::oracle::StrictOraclePrice)<br/>_74 = deref_copy (*_73)<br/>_12 = ((*_74).0: i64)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_75 = deref_copy ((*_1).2: &amp;math::margin::MarginRequirementType)<br/>_14 = &amp;(*_75)<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_8 = SpotMarket::get_asset_weight(move _9, move _10, move _12, move _13)</td></tr></table>>];
    bb3__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb4__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_15 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb5__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_7 as Continue).0: u32)<br/>_6 = _19<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_7)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _3<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _6<br/></td></tr><tr><td align="left">_26 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _27)</td></tr></table>>];
    bb6__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb8__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb10__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_28 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb11__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Continue).0: i128)<br/>_24 = _32<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_22 = &lt;i128 as SafeMath&gt;::safe_mul(move _23, move _24)</td></tr></table>>];
    bb12__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb13__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb15__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_33 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb16__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_21 as Continue).0: i128)<br/>_20 = _37<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_div(move _20, const _)</td></tr></table>>];
    bb17__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb18__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _3<br/>_38 = Lt(move _39, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_76 = deref_copy ((*_1).0: &amp;&amp;state::spot_market::SpotMarket)<br/>_77 = deref_copy (*_76)<br/>_43 = &amp;(*_77)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _2<br/></td></tr><tr><td align="left">_44 = core::num::&lt;impl i128&gt;::unsigned_abs(move _45)</td></tr></table>>];
    bb22__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_78 = deref_copy ((*_1).2: &amp;math::margin::MarginRequirementType)<br/>_47 = &amp;(*_78)<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_42 = SpotMarket::get_liability_weight(move _43, move _44, move _46)</td></tr></table>>];
    bb23__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb24__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_48 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb25__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_41 as Continue).0: u32)<br/>_40 = _52<br/>StorageDead(_52)<br/>StorageDead(_47)<br/>StorageDead(_41)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _3<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _40<br/></td></tr><tr><td align="left">_59 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _60)</td></tr></table>>];
    bb26__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb27__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb29__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_61 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb30__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_58 as Continue).0: i128)<br/>_57 = _65<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_55 = &lt;i128 as SafeMath&gt;::safe_mul(move _56, move _57)</td></tr></table>>];
    bb31__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb32__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb34__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_66 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb35__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_54 as Continue).0: i128)<br/>_53 = _70<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_div(move _53, const _)</td></tr></table>>];
    bb36__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb37__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_40)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(const 0_i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_40)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_4350 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4350 -> bb20__0_4350 [label="0"];
    bb0__0_4350 -> bb1__0_4350 [label="otherwise"];
    bb1__0_4350 -> bb2__0_4350 [label="return"];
    bb2__0_4350 -> bb3__0_4350 [label="return"];
    bb3__0_4350 -> bb4__0_4350 [label="return"];
    bb4__0_4350 -> bb5__0_4350 [label="0"];
    bb4__0_4350 -> bb7__0_4350 [label="1"];
    bb4__0_4350 -> bb6__0_4350 [label="otherwise"];
    bb5__0_4350 -> bb9__0_4350 [label="return"];
    bb7__0_4350 -> bb8__0_4350 [label="return"];
    bb8__0_4350 -> bb45__0_4350 [label=""];
    bb9__0_4350 -> bb10__0_4350 [label="return"];
    bb10__0_4350 -> bb11__0_4350 [label="0"];
    bb10__0_4350 -> bb12__0_4350 [label="1"];
    bb10__0_4350 -> bb6__0_4350 [label="otherwise"];
    bb11__0_4350 -> bb14__0_4350 [label="return"];
    bb12__0_4350 -> bb13__0_4350 [label="return"];
    bb13__0_4350 -> bb44__0_4350 [label=""];
    bb14__0_4350 -> bb15__0_4350 [label="return"];
    bb15__0_4350 -> bb16__0_4350 [label="0"];
    bb15__0_4350 -> bb17__0_4350 [label="1"];
    bb15__0_4350 -> bb6__0_4350 [label="otherwise"];
    bb16__0_4350 -> bb19__0_4350 [label="return"];
    bb17__0_4350 -> bb18__0_4350 [label="return"];
    bb18__0_4350 -> bb44__0_4350 [label=""];
    bb19__0_4350 -> bb41__0_4350 [label=""];
    bb20__0_4350 -> bb39__0_4350 [label="0"];
    bb20__0_4350 -> bb21__0_4350 [label="otherwise"];
    bb21__0_4350 -> bb22__0_4350 [label="return"];
    bb22__0_4350 -> bb23__0_4350 [label="return"];
    bb23__0_4350 -> bb24__0_4350 [label="return"];
    bb24__0_4350 -> bb25__0_4350 [label="0"];
    bb24__0_4350 -> bb26__0_4350 [label="1"];
    bb24__0_4350 -> bb6__0_4350 [label="otherwise"];
    bb25__0_4350 -> bb28__0_4350 [label="return"];
    bb26__0_4350 -> bb27__0_4350 [label="return"];
    bb27__0_4350 -> bb43__0_4350 [label=""];
    bb28__0_4350 -> bb29__0_4350 [label="return"];
    bb29__0_4350 -> bb30__0_4350 [label="0"];
    bb29__0_4350 -> bb31__0_4350 [label="1"];
    bb29__0_4350 -> bb6__0_4350 [label="otherwise"];
    bb30__0_4350 -> bb33__0_4350 [label="return"];
    bb31__0_4350 -> bb32__0_4350 [label="return"];
    bb32__0_4350 -> bb42__0_4350 [label=""];
    bb33__0_4350 -> bb34__0_4350 [label="return"];
    bb34__0_4350 -> bb35__0_4350 [label="0"];
    bb34__0_4350 -> bb36__0_4350 [label="1"];
    bb34__0_4350 -> bb6__0_4350 [label="otherwise"];
    bb35__0_4350 -> bb38__0_4350 [label="return"];
    bb36__0_4350 -> bb37__0_4350 [label="return"];
    bb37__0_4350 -> bb42__0_4350 [label=""];
    bb38__0_4350 -> bb40__0_4350 [label=""];
    bb39__0_4350 -> bb40__0_4350 [label=""];
    bb40__0_4350 -> bb41__0_4350 [label=""];
    bb41__0_4350 -> bb46__0_4350 [label=""];
    bb42__0_4350 -> bb43__0_4350 [label=""];
    bb43__0_4350 -> bb45__0_4350 [label=""];
    bb44__0_4350 -> bb45__0_4350 [label=""];
    bb45__0_4350 -> bb46__0_4350 [label=""];
}
