digraph Mir_0_14580 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;U192 as Add&lt;T&gt;&gt;::add(_1: math::bn::U192, _2: T/#0) -&gt; math::bn::U192<br align="left"/>let _3: math::bn::U192;<br align="left"/>let _4: bool;<br align="left"/>let mut _5: (math::bn::U192, bool);<br align="left"/>let mut _6: math::bn::U192;<br align="left"/>let mut _7: math::bn::U192;<br align="left"/>let mut _8: T/#0;<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: !;<br align="left"/>let _12: !;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug result =&gt; _3;<br align="left"/>debug overflow =&gt; _4;<br align="left"/>>;
    bb0__0_14580 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = move _2<br/></td></tr><tr><td align="left">_7 = &lt;T as Into&lt;U192&gt;&gt;::into(move _8)</td></tr></table>>];
    bb1__0_14580 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = U192::overflowing_add(move _6, move _7)</td></tr></table>>];
    bb2__0_14580 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_3)<br/>_3 = (_5.0: math::bn::U192)<br/>StorageLive(_4)<br/>_4 = (_5.1: bool)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_14580 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/></td></tr><tr><td align="left">_12 = begin_panic::&lt;&amp;str&gt;(const &quot;arithmetic operation overflow&quot;)</td></tr></table>>];
    bb4__0_14580 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_9 = const ()<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_0 = _3<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb5__0_14580 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">5 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_14580 -> bb1__0_14580 [label="return"];
    bb0__0_14580 -> bb5__0_14580 [label="unwind"];
    bb1__0_14580 -> bb2__0_14580 [label="return"];
    bb1__0_14580 -> bb5__0_14580 [label="unwind"];
    bb2__0_14580 -> bb4__0_14580 [label="0"];
    bb2__0_14580 -> bb3__0_14580 [label="otherwise"];
    bb3__0_14580 -> bb5__0_14580 [label="unwind"];
}
