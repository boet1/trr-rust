digraph Mir_0_9308 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_funding_rate(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateFundingRate&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _17: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _22: ();<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _25: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _27: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: ();<br align="left"/>let _35: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _36: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _41: Closure(DefId(0:9309 ~ drift[d311]::instructions::keeper::handle_update_funding_rate::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _47: anchor_lang::prelude::Clock;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _49: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _54: anchor_lang::prelude::Clock;<br align="left"/>let _55: i64;<br align="left"/>let _56: u64;<br align="left"/>let _57: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _58: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle_map::OracleMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _60: std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _62: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _65: state::state::OracleGuardRails;<br align="left"/>let mut _66: &amp;ReErased state::state::State;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let _73: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _75: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _76: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _78: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _79: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _80: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _81: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _82: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _88: state::oracle::MMOraclePriceData;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::MMOraclePriceData&gt;;<br align="left"/>let mut _90: std::result::Result&lt;state::oracle::MMOraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _91: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _92: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _93: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _94: state::oracle::OraclePriceData;<br align="left"/>let mut _95: u64;<br align="left"/>let mut _96: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _97: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _98: &amp;ReErased state::state::State;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: state::oracle::MMOraclePriceData;<br align="left"/>let _105: i128;<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _107: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _108: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _109: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _110: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _111: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _112: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _113: &amp;ReErased state::state::State;<br align="left"/>let _114: &amp;ReErased state::state::State;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _116: i64;<br align="left"/>let mut _117: u64;<br align="left"/>let mut _118: isize;<br align="left"/>let _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _122: i128;<br align="left"/>let _123: ();<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _125: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _126: bool;<br align="left"/>let mut _127: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _128: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: ();<br align="left"/>let _131: error::ErrorCode;<br align="left"/>let _132: ();<br align="left"/>let mut _133: &amp;ReErased str;<br align="left"/>let _134: &amp;ReErased str;<br align="left"/>let mut _135: &amp;ReErased std::string::String;<br align="left"/>let _136: &amp;ReErased std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let _138: std::string::String;<br align="left"/>let mut _139: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _143: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _146: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _147: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _148: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _149: &amp;ReErased error::ErrorCode;<br align="left"/>let _150: &amp;ReErased error::ErrorCode;<br align="left"/>let _151: ();<br align="left"/>let mut _152: &amp;ReErased str;<br align="left"/>let _153: &amp;ReErased str;<br align="left"/>let mut _154: &amp;ReErased std::string::String;<br align="left"/>let _155: &amp;ReErased std::string::String;<br align="left"/>let _156: std::string::String;<br align="left"/>let _157: std::string::String;<br align="left"/>let mut _158: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _160: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _161: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _162: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _163: error::ErrorCode;<br align="left"/>let mut _164: isize;<br align="left"/>let _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _166: !;<br align="left"/>let mut _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _168: ();<br align="left"/>let _169: bool;<br align="left"/>let mut _170: bool;<br align="left"/>let mut _171: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _172: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _173: &amp;ReErased state::state::State;<br align="left"/>let _174: &amp;ReErased state::state::State;<br align="left"/>let mut _175: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _176: isize;<br align="left"/>let _177: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _178: !;<br align="left"/>let mut _179: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _180: bool;<br align="left"/>let mut _181: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _182: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _183: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _184: state::paused_operations::PerpOperation;<br align="left"/>let _185: bool;<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _187: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _188: u16;<br align="left"/>let mut _189: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _190: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _191: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _192: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _193: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _194: i64;<br align="left"/>let mut _195: u64;<br align="left"/>let mut _196: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let _197: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let _198: &amp;ReErased state::state::State;<br align="left"/>let mut _199: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _200: bool;<br align="left"/>let mut _201: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _202: isize;<br align="left"/>let _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _204: !;<br align="left"/>let mut _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _206: bool;<br align="left"/>let _207: ();<br align="left"/>let mut _208: bool;<br align="left"/>let mut _209: !;<br align="left"/>let _210: i64;<br align="left"/>let mut _211: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _212: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _213: i64;<br align="left"/>let mut _214: i64;<br align="left"/>let mut _215: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _216: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _217: i64;<br align="left"/>let mut _218: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _219: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _220: isize;<br align="left"/>let _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _222: !;<br align="left"/>let mut _223: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _224: i64;<br align="left"/>let _225: ();<br align="left"/>let mut _226: &amp;ReErased str;<br align="left"/>let _227: &amp;ReErased str;<br align="left"/>let mut _228: &amp;ReErased std::string::String;<br align="left"/>let _229: &amp;ReErased std::string::String;<br align="left"/>let _230: std::string::String;<br align="left"/>let _231: std::string::String;<br align="left"/>let mut _232: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _233: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _234: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _235: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _236: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _237: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _238: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _239: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _240: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _241: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _242: &amp;ReErased i64;<br align="left"/>let _243: &amp;ReErased i64;<br align="left"/>let mut _244: anchor_lang::error::Error;<br align="left"/>let mut _245: error::ErrorCode;<br align="left"/>let mut _246: ();<br align="left"/>let mut _247: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _248: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _249: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _250: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _251: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _252: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _253: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _254: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _255: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _256: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _257: &amp;ReErased mut instructions::keeper::UpdateFundingRate&lt;ReErased&gt;;<br align="left"/>let mut _258: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _259: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _260: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _261: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _262: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: isize;<br align="left"/>let mut _269: isize;<br align="left"/>let mut _270: isize;<br align="left"/>let mut _271: isize;<br align="left"/>let mut _272: isize;<br align="left"/>let mut _273: isize;<br align="left"/>let mut _274: isize;<br align="left"/>let mut _275: isize;<br align="left"/>let mut _276: isize;<br align="left"/>let mut _277: isize;<br align="left"/>let mut _278: isize;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _294: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _295: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _296: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _297: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _298: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug perp_market_index =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug perp_market =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug clock =&gt; _47;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug now =&gt; _55;<br align="left"/>debug clock_slot =&gt; _56;<br align="left"/>debug state =&gt; _57;<br align="left"/>debug oracle_map =&gt; _58;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug oracle_price_data =&gt; _73;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug mm_oracle_price_data =&gt; _88;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug residual =&gt; _119;<br align="left"/>debug val =&gt; _122;<br align="left"/>debug error_code =&gt; _131;<br align="left"/>debug res =&gt; _138;<br align="left"/>debug res =&gt; _157;<br align="left"/>debug residual =&gt; _165;<br align="left"/>debug val =&gt; _168;<br align="left"/>debug funding_paused =&gt; _169;<br align="left"/>debug residual =&gt; _177;<br align="left"/>debug val =&gt; _180;<br align="left"/>debug is_updated =&gt; _185;<br align="left"/>debug residual =&gt; _203;<br align="left"/>debug val =&gt; _206;<br align="left"/>debug time_until_next_update =&gt; _210;<br align="left"/>debug residual =&gt; _221;<br align="left"/>debug val =&gt; _224;<br align="left"/>debug res =&gt; _231;<br align="left"/>>;
    bb0__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_250 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_7 = &amp;((*_250).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_263 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_251 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_17 = &amp;((*_251).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_252 = deref_copy (*_17)<br/>_293 = (((_252.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_16 = &amp;(*_293)<br/></td></tr><tr><td align="left">_15 = constraints::funding_not_paused(move _16)</td></tr></table>>];
    bb4__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_285 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_18 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_14 as Continue).0: ())<br/>_13 = _22<br/>StorageDead(_22)<br/>_265 = discriminant(_14)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_253 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_27 = &amp;((*_253).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_26 = &amp;(*_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_254 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_29 = &amp;((*_254).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_25 = constraints::valid_oracle_for_perp_market(move _26, move _28)</td></tr></table>>];
    bb10__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_283 = discriminant(_14)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb13__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_30 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb14__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_24 as Continue).0: ())<br/>_23 = _34<br/>StorageDead(_34)<br/>_267 = discriminant(_24)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_255 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_40 = &amp;((*_255).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_39 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _40)</td></tr></table>>];
    bb15__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb16__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_281 = discriminant(_24)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _39, move _41)</td></tr></table>>];
    bb18__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb19__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb20__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_37 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_36 = move _46<br/>StorageDead(_46)<br/>_35 = &amp;mut _36<br/>_271 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/></td></tr><tr><td align="left">_49 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb21__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb22__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_269 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb24__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_50 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_48 as Continue).0: anchor_lang::prelude::Clock)<br/>_47 = move _54<br/>StorageDead(_54)<br/>_273 = discriminant(_48)<br/>StorageDead(_48)<br/>StorageLive(_55)<br/>_55 = (_47.4: i64)<br/>StorageLive(_56)<br/>_56 = (_47.0: u64)<br/>StorageLive(_57)<br/>_256 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_57 = &amp;((*_256).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_257 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateFundingRate&lt;'_&gt;)<br/>_62 = &amp;((*_257).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_61 = &amp;(*_62)<br/>StorageLive(_63)<br/>_63 = _56<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_258 = deref_copy (*_57)<br/>_294 = (((_258.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_67 = &amp;(*_294)<br/></td></tr><tr><td align="left">_66 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb26__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_53)<br/>_53 = move _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>_279 = discriminant(_48)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_65 = ((*_66).7: state::state::OracleGuardRails)<br/>_64 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_60 = OracleMap::&lt;'_&gt;::load_one(move _61, move _63, move _64)</td></tr></table>>];
    bb29__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb30__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_68 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb31__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = move ((_59 as Continue).0: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_58 = move _72<br/>StorageDead(_72)<br/>_277 = discriminant(_59)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;mut _58<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;(*_35)<br/></td></tr><tr><td align="left">_81 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _82)</td></tr></table>>];
    bb32__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb33__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>_275 = discriminant(_59)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_80 = &amp;(*_81)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_79 = PerpMarket::oracle_id(move _80)</td></tr></table>>];
    bb35__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_75 = OracleMap::&lt;'_&gt;::get_price_data(move _76, move _77)</td></tr></table>>];
    bb36__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb37__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_83 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb38__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_74 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_73 = _87<br/>StorageDead(_87)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;(*_35)<br/></td></tr><tr><td align="left">_92 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _93)</td></tr></table>>];
    bb39__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb40__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_91 = &amp;(*_92)<br/>StorageDead(_93)<br/>StorageLive(_94)<br/>_94 = (*_73)<br/>StorageLive(_95)<br/>_95 = _56<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_259 = deref_copy (*_57)<br/>_295 = (((_259.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_99 = &amp;(*_295)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _99)</td></tr></table>>];
    bb42__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_97 = &amp;(((*_98).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_90 = PerpMarket::get_mm_oracle_price_data(move _91, move _94, move _95, move _96)</td></tr></table>>];
    bb43__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb44__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_100 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb45__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_89 as Continue).0: state::oracle::MMOraclePriceData)<br/>_88 = _104<br/>StorageDead(_104)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;mut (*_35)<br/></td></tr><tr><td align="left">_109 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _110)</td></tr></table>>];
    bb46__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb47__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_108 = &amp;mut (*_109)<br/>StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;_88<br/>_111 = &amp;(*_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_260 = deref_copy (*_57)<br/>_296 = (((_260.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_115 = &amp;(*_296)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb49__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_113 = &amp;(*_114)<br/>StorageDead(_115)<br/>StorageLive(_116)<br/>_116 = _55<br/>StorageLive(_117)<br/>_117 = _56<br/></td></tr><tr><td align="left">_107 = _update_amm(move _108, move _111, move _113, move _116, move _117)</td></tr></table>>];
    bb50__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb51__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_118 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb52__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_106 as Continue).0: i128)<br/>_105 = _122<br/>StorageDead(_122)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;(*_35)<br/></td></tr><tr><td align="left">_127 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb53__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_121)<br/>_121 = _119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _121)</td></tr></table>>];
    bb54__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_129 = discriminant(((*_127).22: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb56__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_126 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_126 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb59__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageLive(_130)<br/>_130 = ()<br/>_125 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _130)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageLive(_131)<br/>_131 = error::ErrorCode::MarketActionPaused<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_249 = const _<br/>_142 = &amp;(*_249)<br/>_141 = &amp;(*_142)<br/>_140 = move _141 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_141)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;_131<br/>_149 = &amp;(*_150)<br/></td></tr><tr><td align="left">_148 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _149)</td></tr></table>>];
    bb61__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_147 = [move _148]<br/>StorageDead(_148)<br/>_146 = &amp;_147<br/>_145 = &amp;(*_146)<br/>_144 = move _145 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_139 = Arguments::&lt;'_&gt;::new_v1(move _140, move _144)</td></tr></table>>];
    bb62__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_138 = format(move _139)</td></tr></table>>];
    bb63__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_142)<br/>_137 = move _138<br/>StorageDead(_138)<br/>_136 = &amp;_137<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = &lt;String as Deref&gt;::deref(move _135)</td></tr></table>>];
    bb64__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_133 = &amp;(*_134)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_132 = solana_program::log::sol_log(move _133)</td></tr></table>>];
    bb65__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb66__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_248 = const _<br/>_161 = &amp;(*_248)<br/>_160 = &amp;(*_161)<br/>_159 = move _160 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = Arguments::&lt;'_&gt;::new_const(move _159)</td></tr></table>>];
    bb67__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = format(move _158)</td></tr></table>>];
    bb68__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_161)<br/>_156 = move _157<br/>StorageDead(_157)<br/>_155 = &amp;_156<br/>_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_153 = &lt;String as Deref&gt;::deref(move _154)</td></tr></table>>];
    bb69__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_152 = &amp;(*_153)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_151 = solana_program::log::sol_log(move _152)</td></tr></table>>];
    bb70__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb71__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageLive(_163)<br/>_163 = _131<br/>_125 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _163)<br/>StorageDead(_163)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb73__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_164 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _164)</td></tr></table>>];
    bb74__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_124 as Continue).0: ())<br/>_123 = _168<br/>StorageDead(_168)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_261 = deref_copy (*_57)<br/>_297 = (((_261.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_175 = &amp;(*_297)<br/></td></tr><tr><td align="left">_174 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _175)</td></tr></table>>];
    bb75__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_167)<br/>_167 = _165<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _167)</td></tr></table>>];
    bb76__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_173 = &amp;(*_174)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">_172 = state::state::State::funding_paused(move _173)</td></tr></table>>];
    bb78__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _172)</td></tr></table>>];
    bb79__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_176 = discriminant(_171)<br/></td></tr><tr><td align="left">switchInt(move _176)</td></tr></table>>];
    bb80__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_171 as Continue).0: bool)<br/>_170 = _180<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb81__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_171 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_179)<br/>_179 = _177<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _179)</td></tr></table>>];
    bb82__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_171)<br/>_169 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_171)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;(*_35)<br/></td></tr><tr><td align="left">_182 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _183)</td></tr></table>>];
    bb85__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_181 = &amp;(*_182)<br/>StorageDead(_183)<br/>StorageLive(_184)<br/>_184 = PerpOperation::UpdateFunding<br/></td></tr><tr><td align="left">_169 = PerpMarket::is_operation_paused(move _181, move _184)</td></tr></table>>];
    bb86__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = _2<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;mut (*_35)<br/></td></tr><tr><td align="left">_190 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _191)</td></tr></table>>];
    bb88__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_189 = &amp;mut (*_190)<br/>StorageDead(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;mut _58<br/>_192 = &amp;mut (*_193)<br/>StorageLive(_194)<br/>_194 = _55<br/>StorageLive(_195)<br/>_195 = _56<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_262 = deref_copy (*_57)<br/>_298 = (((_262.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_199 = &amp;(*_298)<br/></td></tr><tr><td align="left">_198 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _199)</td></tr></table>>];
    bb89__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_197 = &amp;((*_198).7: state::state::OracleGuardRails)<br/>_196 = &amp;(*_197)<br/>StorageLive(_200)<br/>_200 = _169<br/>StorageLive(_201)<br/>_201 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">_187 = controller::funding::update_funding_rate(move _188, move _189, move _192, move _194, move _195, move _196, move _200, move _201)</td></tr></table>>];
    bb90__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb91__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_202 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb92__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_186 as Continue).0: bool)<br/>_185 = _206<br/>StorageDead(_206)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_186)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = _185<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb93__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_205)<br/>_205 = _203<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _205)</td></tr></table>>];
    bb94__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_207 = const ()<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>StorageLive(_246)<br/>_246 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _246)<br/>StorageDead(_246)<br/>StorageDead(_185)<br/>StorageDead(_169)<br/>StorageDead(_88)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb96__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = _55<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;(*_35)<br/></td></tr><tr><td align="left">_215 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _216)</td></tr></table>>];
    bb97__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>_214 = (((*_215).1: state::perp_market::AMM).50: i64)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = &amp;(*_35)<br/></td></tr><tr><td align="left">_218 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _219)</td></tr></table>>];
    bb98__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_217 = (((*_218).1: state::perp_market::AMM).51: i64)<br/></td></tr><tr><td align="left">_212 = on_the_hour_update(move _213, move _214, move _217)</td></tr></table>>];
    bb99__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_211 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _212)</td></tr></table>>];
    bb100__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_220 = discriminant(_211)<br/></td></tr><tr><td align="left">switchInt(move _220)</td></tr></table>>];
    bb101__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_211 as Continue).0: i64)<br/>_210 = _224<br/>StorageDead(_224)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_211)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_247 = const _<br/>_235 = &amp;(*_247)<br/>_234 = &amp;(*_235)<br/>_233 = move _234 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_234)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = &amp;_210<br/>_242 = &amp;(*_243)<br/></td></tr><tr><td align="left">_241 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _242)</td></tr></table>>];
    bb102__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ((_211 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_223)<br/>_223 = _221<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _223)</td></tr></table>>];
    bb103__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_240 = [move _241]<br/>StorageDead(_241)<br/>_239 = &amp;_240<br/>_238 = &amp;(*_239)<br/>_237 = move _238 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">_232 = Arguments::&lt;'_&gt;::new_v1(move _233, move _237)</td></tr></table>>];
    bb105__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">_231 = format(move _232)</td></tr></table>>];
    bb106__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_243)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageDead(_235)<br/>_230 = move _231<br/>StorageDead(_231)<br/>_229 = &amp;_230<br/>_228 = &amp;(*_229)<br/></td></tr><tr><td align="left">_227 = &lt;String as Deref&gt;::deref(move _228)</td></tr></table>>];
    bb107__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_226 = &amp;(*_227)<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">_225 = solana_program::log::sol_log(move _226)</td></tr></table>>];
    bb108__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/></td></tr><tr><td align="left">drop(_230)</td></tr></table>>];
    bb109__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = error::ErrorCode::FundingWasNotUpdated<br/></td></tr><tr><td align="left">_244 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _245)</td></tr></table>>];
    bb110__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _244)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb112__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb118__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb120__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left">return</td></tr></table>>];
    bb122__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left">drop(_230)</td></tr></table>>];
    bb123__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb124__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb125__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb126__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb127__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb128__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left" balign="left">_287 = discriminant(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left" balign="left">_288 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left" balign="left">_289 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left" balign="left">_290 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left" balign="left">_291 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_9308 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left" balign="left">_292 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9308 -> bb1__0_9308 [label="return"];
    bb1__0_9308 -> bb2__0_9308 [label="return"];
    bb1__0_9308 -> bb127__0_9308 [label="unwind"];
    bb2__0_9308 -> bb3__0_9308 [label="0"];
    bb2__0_9308 -> bb5__0_9308 [label="1"];
    bb2__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb3__0_9308 -> bb7__0_9308 [label="return"];
    bb5__0_9308 -> bb6__0_9308 [label="return"];
    bb5__0_9308 -> bb133__0_9308 [label="unwind"];
    bb6__0_9308 -> bb121__0_9308 [label=""];
    bb7__0_9308 -> bb8__0_9308 [label="return"];
    bb7__0_9308 -> bb127__0_9308 [label="unwind"];
    bb8__0_9308 -> bb9__0_9308 [label="0"];
    bb8__0_9308 -> bb10__0_9308 [label="1"];
    bb8__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb9__0_9308 -> bb12__0_9308 [label="return"];
    bb10__0_9308 -> bb11__0_9308 [label="return"];
    bb10__0_9308 -> bb132__0_9308 [label="unwind"];
    bb11__0_9308 -> bb121__0_9308 [label=""];
    bb12__0_9308 -> bb13__0_9308 [label="return"];
    bb12__0_9308 -> bb127__0_9308 [label="unwind"];
    bb13__0_9308 -> bb14__0_9308 [label="0"];
    bb13__0_9308 -> bb15__0_9308 [label="1"];
    bb13__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb14__0_9308 -> bb17__0_9308 [label="return"];
    bb15__0_9308 -> bb16__0_9308 [label="return"];
    bb15__0_9308 -> bb131__0_9308 [label="unwind"];
    bb16__0_9308 -> bb121__0_9308 [label=""];
    bb17__0_9308 -> bb18__0_9308 [label="return"];
    bb17__0_9308 -> bb127__0_9308 [label="unwind"];
    bb18__0_9308 -> bb19__0_9308 [label="return"];
    bb18__0_9308 -> bb127__0_9308 [label="unwind"];
    bb19__0_9308 -> bb20__0_9308 [label="0"];
    bb19__0_9308 -> bb21__0_9308 [label="1"];
    bb19__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb20__0_9308 -> bb23__0_9308 [label="return"];
    bb20__0_9308 -> bb126__0_9308 [label="unwind"];
    bb21__0_9308 -> bb22__0_9308 [label="return"];
    bb21__0_9308 -> bb130__0_9308 [label="unwind"];
    bb22__0_9308 -> bb120__0_9308 [label=""];
    bb23__0_9308 -> bb24__0_9308 [label="return"];
    bb23__0_9308 -> bb126__0_9308 [label="unwind"];
    bb24__0_9308 -> bb25__0_9308 [label="0"];
    bb24__0_9308 -> bb26__0_9308 [label="1"];
    bb24__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb25__0_9308 -> bb28__0_9308 [label="return"];
    bb25__0_9308 -> bb126__0_9308 [label="unwind"];
    bb26__0_9308 -> bb27__0_9308 [label="return"];
    bb26__0_9308 -> bb129__0_9308 [label="unwind"];
    bb27__0_9308 -> bb119__0_9308 [label=""];
    bb28__0_9308 -> bb29__0_9308 [label="return"];
    bb28__0_9308 -> bb126__0_9308 [label="unwind"];
    bb29__0_9308 -> bb30__0_9308 [label="return"];
    bb29__0_9308 -> bb126__0_9308 [label="unwind"];
    bb30__0_9308 -> bb31__0_9308 [label="0"];
    bb30__0_9308 -> bb32__0_9308 [label="1"];
    bb30__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb31__0_9308 -> bb34__0_9308 [label="return"];
    bb31__0_9308 -> bb125__0_9308 [label="unwind"];
    bb32__0_9308 -> bb33__0_9308 [label="return"];
    bb32__0_9308 -> bb128__0_9308 [label="unwind"];
    bb33__0_9308 -> bb118__0_9308 [label=""];
    bb34__0_9308 -> bb35__0_9308 [label="return"];
    bb34__0_9308 -> bb125__0_9308 [label="unwind"];
    bb35__0_9308 -> bb36__0_9308 [label="return"];
    bb35__0_9308 -> bb125__0_9308 [label="unwind"];
    bb36__0_9308 -> bb37__0_9308 [label="return"];
    bb36__0_9308 -> bb125__0_9308 [label="unwind"];
    bb37__0_9308 -> bb38__0_9308 [label="0"];
    bb37__0_9308 -> bb39__0_9308 [label="1"];
    bb37__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb38__0_9308 -> bb41__0_9308 [label="return"];
    bb38__0_9308 -> bb125__0_9308 [label="unwind"];
    bb39__0_9308 -> bb40__0_9308 [label="return"];
    bb39__0_9308 -> bb125__0_9308 [label="unwind"];
    bb40__0_9308 -> bb117__0_9308 [label=""];
    bb41__0_9308 -> bb42__0_9308 [label="return"];
    bb41__0_9308 -> bb125__0_9308 [label="unwind"];
    bb42__0_9308 -> bb43__0_9308 [label="return"];
    bb42__0_9308 -> bb125__0_9308 [label="unwind"];
    bb43__0_9308 -> bb44__0_9308 [label="return"];
    bb43__0_9308 -> bb125__0_9308 [label="unwind"];
    bb44__0_9308 -> bb45__0_9308 [label="0"];
    bb44__0_9308 -> bb46__0_9308 [label="1"];
    bb44__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb45__0_9308 -> bb48__0_9308 [label="return"];
    bb45__0_9308 -> bb125__0_9308 [label="unwind"];
    bb46__0_9308 -> bb47__0_9308 [label="return"];
    bb46__0_9308 -> bb125__0_9308 [label="unwind"];
    bb47__0_9308 -> bb116__0_9308 [label=""];
    bb48__0_9308 -> bb49__0_9308 [label="return"];
    bb48__0_9308 -> bb125__0_9308 [label="unwind"];
    bb49__0_9308 -> bb50__0_9308 [label="return"];
    bb49__0_9308 -> bb125__0_9308 [label="unwind"];
    bb50__0_9308 -> bb51__0_9308 [label="return"];
    bb50__0_9308 -> bb125__0_9308 [label="unwind"];
    bb51__0_9308 -> bb52__0_9308 [label="0"];
    bb51__0_9308 -> bb53__0_9308 [label="1"];
    bb51__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb52__0_9308 -> bb55__0_9308 [label="return"];
    bb52__0_9308 -> bb125__0_9308 [label="unwind"];
    bb53__0_9308 -> bb54__0_9308 [label="return"];
    bb53__0_9308 -> bb125__0_9308 [label="unwind"];
    bb54__0_9308 -> bb116__0_9308 [label=""];
    bb55__0_9308 -> bb57__0_9308 [label="1"];
    bb55__0_9308 -> bb57__0_9308 [label="6"];
    bb55__0_9308 -> bb56__0_9308 [label="otherwise"];
    bb56__0_9308 -> bb58__0_9308 [label=""];
    bb57__0_9308 -> bb58__0_9308 [label=""];
    bb58__0_9308 -> bb60__0_9308 [label="0"];
    bb58__0_9308 -> bb59__0_9308 [label="otherwise"];
    bb59__0_9308 -> bb72__0_9308 [label=""];
    bb60__0_9308 -> bb61__0_9308 [label="return"];
    bb60__0_9308 -> bb125__0_9308 [label="unwind"];
    bb61__0_9308 -> bb62__0_9308 [label="return"];
    bb61__0_9308 -> bb125__0_9308 [label="unwind"];
    bb62__0_9308 -> bb63__0_9308 [label="return"];
    bb62__0_9308 -> bb125__0_9308 [label="unwind"];
    bb63__0_9308 -> bb64__0_9308 [label="return"];
    bb63__0_9308 -> bb124__0_9308 [label="unwind"];
    bb64__0_9308 -> bb65__0_9308 [label="return"];
    bb64__0_9308 -> bb124__0_9308 [label="unwind"];
    bb65__0_9308 -> bb66__0_9308 [label="return"];
    bb65__0_9308 -> bb125__0_9308 [label="unwind"];
    bb66__0_9308 -> bb67__0_9308 [label="return"];
    bb66__0_9308 -> bb125__0_9308 [label="unwind"];
    bb67__0_9308 -> bb68__0_9308 [label="return"];
    bb67__0_9308 -> bb125__0_9308 [label="unwind"];
    bb68__0_9308 -> bb69__0_9308 [label="return"];
    bb68__0_9308 -> bb123__0_9308 [label="unwind"];
    bb69__0_9308 -> bb70__0_9308 [label="return"];
    bb69__0_9308 -> bb123__0_9308 [label="unwind"];
    bb70__0_9308 -> bb71__0_9308 [label="return"];
    bb70__0_9308 -> bb125__0_9308 [label="unwind"];
    bb71__0_9308 -> bb72__0_9308 [label=""];
    bb72__0_9308 -> bb73__0_9308 [label="return"];
    bb72__0_9308 -> bb125__0_9308 [label="unwind"];
    bb73__0_9308 -> bb74__0_9308 [label="0"];
    bb73__0_9308 -> bb75__0_9308 [label="1"];
    bb73__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb74__0_9308 -> bb77__0_9308 [label="return"];
    bb74__0_9308 -> bb125__0_9308 [label="unwind"];
    bb75__0_9308 -> bb76__0_9308 [label="return"];
    bb75__0_9308 -> bb125__0_9308 [label="unwind"];
    bb76__0_9308 -> bb116__0_9308 [label=""];
    bb77__0_9308 -> bb78__0_9308 [label="return"];
    bb77__0_9308 -> bb125__0_9308 [label="unwind"];
    bb78__0_9308 -> bb79__0_9308 [label="return"];
    bb78__0_9308 -> bb125__0_9308 [label="unwind"];
    bb79__0_9308 -> bb80__0_9308 [label="0"];
    bb79__0_9308 -> bb81__0_9308 [label="1"];
    bb79__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb80__0_9308 -> bb84__0_9308 [label="0"];
    bb80__0_9308 -> bb83__0_9308 [label="otherwise"];
    bb81__0_9308 -> bb82__0_9308 [label="return"];
    bb81__0_9308 -> bb125__0_9308 [label="unwind"];
    bb82__0_9308 -> bb115__0_9308 [label=""];
    bb83__0_9308 -> bb87__0_9308 [label=""];
    bb84__0_9308 -> bb85__0_9308 [label="return"];
    bb84__0_9308 -> bb125__0_9308 [label="unwind"];
    bb85__0_9308 -> bb86__0_9308 [label="return"];
    bb85__0_9308 -> bb125__0_9308 [label="unwind"];
    bb86__0_9308 -> bb87__0_9308 [label=""];
    bb87__0_9308 -> bb88__0_9308 [label="return"];
    bb87__0_9308 -> bb125__0_9308 [label="unwind"];
    bb88__0_9308 -> bb89__0_9308 [label="return"];
    bb88__0_9308 -> bb125__0_9308 [label="unwind"];
    bb89__0_9308 -> bb90__0_9308 [label="return"];
    bb89__0_9308 -> bb125__0_9308 [label="unwind"];
    bb90__0_9308 -> bb91__0_9308 [label="return"];
    bb90__0_9308 -> bb125__0_9308 [label="unwind"];
    bb91__0_9308 -> bb92__0_9308 [label="0"];
    bb91__0_9308 -> bb93__0_9308 [label="1"];
    bb91__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb92__0_9308 -> bb96__0_9308 [label="0"];
    bb92__0_9308 -> bb95__0_9308 [label="otherwise"];
    bb93__0_9308 -> bb94__0_9308 [label="return"];
    bb93__0_9308 -> bb125__0_9308 [label="unwind"];
    bb94__0_9308 -> bb114__0_9308 [label=""];
    bb95__0_9308 -> bb111__0_9308 [label="return"];
    bb95__0_9308 -> bb126__0_9308 [label="unwind"];
    bb96__0_9308 -> bb97__0_9308 [label="return"];
    bb96__0_9308 -> bb125__0_9308 [label="unwind"];
    bb97__0_9308 -> bb98__0_9308 [label="return"];
    bb97__0_9308 -> bb125__0_9308 [label="unwind"];
    bb98__0_9308 -> bb99__0_9308 [label="return"];
    bb98__0_9308 -> bb125__0_9308 [label="unwind"];
    bb99__0_9308 -> bb100__0_9308 [label="return"];
    bb99__0_9308 -> bb125__0_9308 [label="unwind"];
    bb100__0_9308 -> bb101__0_9308 [label="0"];
    bb100__0_9308 -> bb102__0_9308 [label="1"];
    bb100__0_9308 -> bb4__0_9308 [label="otherwise"];
    bb101__0_9308 -> bb104__0_9308 [label="return"];
    bb101__0_9308 -> bb125__0_9308 [label="unwind"];
    bb102__0_9308 -> bb103__0_9308 [label="return"];
    bb102__0_9308 -> bb125__0_9308 [label="unwind"];
    bb103__0_9308 -> bb113__0_9308 [label=""];
    bb104__0_9308 -> bb105__0_9308 [label="return"];
    bb104__0_9308 -> bb125__0_9308 [label="unwind"];
    bb105__0_9308 -> bb106__0_9308 [label="return"];
    bb105__0_9308 -> bb125__0_9308 [label="unwind"];
    bb106__0_9308 -> bb107__0_9308 [label="return"];
    bb106__0_9308 -> bb122__0_9308 [label="unwind"];
    bb107__0_9308 -> bb108__0_9308 [label="return"];
    bb107__0_9308 -> bb122__0_9308 [label="unwind"];
    bb108__0_9308 -> bb109__0_9308 [label="return"];
    bb108__0_9308 -> bb125__0_9308 [label="unwind"];
    bb109__0_9308 -> bb110__0_9308 [label="return"];
    bb109__0_9308 -> bb125__0_9308 [label="unwind"];
    bb110__0_9308 -> bb113__0_9308 [label=""];
    bb111__0_9308 -> bb112__0_9308 [label="return"];
    bb111__0_9308 -> bb127__0_9308 [label="unwind"];
    bb112__0_9308 -> bb121__0_9308 [label=""];
    bb113__0_9308 -> bb114__0_9308 [label=""];
    bb114__0_9308 -> bb115__0_9308 [label=""];
    bb115__0_9308 -> bb116__0_9308 [label=""];
    bb116__0_9308 -> bb117__0_9308 [label=""];
    bb117__0_9308 -> bb118__0_9308 [label="return"];
    bb117__0_9308 -> bb126__0_9308 [label="unwind"];
    bb118__0_9308 -> bb119__0_9308 [label=""];
    bb119__0_9308 -> bb120__0_9308 [label="return"];
    bb119__0_9308 -> bb127__0_9308 [label="unwind"];
    bb120__0_9308 -> bb121__0_9308 [label=""];
    bb122__0_9308 -> bb125__0_9308 [label="return"];
    bb123__0_9308 -> bb125__0_9308 [label="return"];
    bb124__0_9308 -> bb125__0_9308 [label="return"];
    bb125__0_9308 -> bb126__0_9308 [label="return"];
    bb126__0_9308 -> bb127__0_9308 [label="return"];
    bb128__0_9308 -> bb126__0_9308 [label=""];
    bb129__0_9308 -> bb126__0_9308 [label=""];
    bb130__0_9308 -> bb127__0_9308 [label=""];
    bb131__0_9308 -> bb127__0_9308 [label=""];
    bb132__0_9308 -> bb127__0_9308 [label=""];
    bb133__0_9308 -> bb127__0_9308 [label=""];
}
