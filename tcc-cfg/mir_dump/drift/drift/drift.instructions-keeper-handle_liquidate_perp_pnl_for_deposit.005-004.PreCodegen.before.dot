digraph Mir_0_9286 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_liquidate_perp_pnl_for_deposit(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;&gt;, _2: u16, _3: u16, _4: u128, _5: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _10: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _17: anchor_lang::prelude::Clock;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _19: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _24: anchor_lang::prelude::Clock;<br align="left"/>let _25: i64;<br align="left"/>let _26: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _28: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _30: ();<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _33: bool;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _36: ();<br align="left"/>let _37: error::ErrorCode;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: &amp;ReErased std::string::String;<br align="left"/>let _42: &amp;ReErased std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let mut _45: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _48: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _49: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _53: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased error::ErrorCode;<br align="left"/>let _56: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _57: error::ErrorCode;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: ();<br align="left"/>let _63: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _64: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _66: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _67: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _69: Closure(DefId(0:9289 ~ drift[d311]::instructions::keeper::handle_liquidate_perp_pnl_for_deposit::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _75: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _76: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _78: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _79: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _80: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _81: Closure(DefId(0:9290 ~ drift[d311]::instructions::keeper::handle_liquidate_perp_pnl_for_deposit::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _87: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _88: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _89: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _90: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _92: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _93: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _94: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _95: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _96: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _97: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _98: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _99: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _100: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _101: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _102: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _103: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _104: u16;<br align="left"/>let mut _105: u64;<br align="left"/>let mut _106: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _107: state::state::OracleGuardRails;<br align="left"/>let mut _108: &amp;ReErased state::state::State;<br align="left"/>let mut _109: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _115: ();<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _117: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _118: u16;<br align="left"/>let mut _119: u16;<br align="left"/>let mut _120: u128;<br align="left"/>let mut _121: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _122: &amp;ReErased mut state::user::User;<br align="left"/>let mut _123: &amp;ReErased mut state::user::User;<br align="left"/>let mut _124: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _125: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _126: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _127: &amp;ReErased mut state::user::User;<br align="left"/>let mut _128: &amp;ReErased mut state::user::User;<br align="left"/>let mut _129: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _131: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _132: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _133: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _134: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _135: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _136: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _138: i64;<br align="left"/>let mut _139: u64;<br align="left"/>let mut _140: u32;<br align="left"/>let mut _141: &amp;ReErased state::state::State;<br align="left"/>let mut _142: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _143: u128;<br align="left"/>let mut _144: u16;<br align="left"/>let mut _145: &amp;ReErased state::state::State;<br align="left"/>let mut _146: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _147: u128;<br align="left"/>let mut _148: u8;<br align="left"/>let mut _149: &amp;ReErased state::state::State;<br align="left"/>let mut _150: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: ();<br align="left"/>let mut _156: ();<br align="left"/>let mut _157: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _158: &amp;ReErased mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;;<br align="left"/>let mut _159: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _160: &amp;ReErased mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;;<br align="left"/>let mut _161: &amp;ReErased mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;;<br align="left"/>let mut _162: &amp;ReErased mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _166: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _167: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _168: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _169: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _197: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _198: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _199: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _200: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug perp_market_index =&gt; _2;<br align="left"/>debug spot_market_index =&gt; _3;<br align="left"/>debug liquidator_max_pnl_transfer =&gt; _4;<br align="left"/>debug limit_price =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug state =&gt; _16;<br align="left"/>debug clock =&gt; _17;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug now =&gt; _25;<br align="left"/>debug user_key =&gt; _26;<br align="left"/>debug liquidator_key =&gt; _28;<br align="left"/>debug error_code =&gt; _37;<br align="left"/>debug res =&gt; _44;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug user =&gt; _63;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug liquidator =&gt; _75;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug perp_market_map =&gt; _87;<br align="left"/>debug spot_market_map =&gt; _88;<br align="left"/>debug oracle_map =&gt; _89;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>>;
    bb0__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_158 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;'_&gt;)<br/>_10 = &amp;((*_158).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_159 = deref_copy (*_10)<br/>_196 = (((_159.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_9 = &amp;(*_196)<br/></td></tr><tr><td align="left">_8 = constraints::liq_not_paused(move _9)</td></tr></table>>];
    bb1__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: ())<br/>_6 = _15<br/>StorageDead(_15)<br/>_170 = discriminant(_7)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>_160 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;'_&gt;)<br/>_16 = &amp;((*_160).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_188 = discriminant(_7)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_20 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_18 as Continue).0: anchor_lang::prelude::Clock)<br/>_17 = move _24<br/>StorageDead(_24)<br/>_172 = discriminant(_18)<br/>StorageDead(_18)<br/>StorageLive(_25)<br/>_25 = (_17.4: i64)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_161 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;'_&gt;)<br/>_27 = &amp;((*_161).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _27)</td></tr></table>>];
    bb10__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb11__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_186 = discriminant(_18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_162 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;'_&gt;)<br/>_29 = &amp;((*_162).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_28 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _29)</td></tr></table>>];
    bb13__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_26<br/>StorageLive(_35)<br/>_35 = &amp;_28<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _34, move _35)</td></tr></table>>];
    bb14__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb15__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_36)<br/>_36 = ()<br/>_32 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>_37 = error::ErrorCode::UserCantLiquidateThemself<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_157 = const _<br/>_48 = &amp;(*_157)<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_37<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _55)</td></tr></table>>];
    bb17__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = [move _54]<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = Arguments::&lt;'_&gt;::new_v1(move _46, move _50)</td></tr></table>>];
    bb18__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = format(move _45)</td></tr></table>>];
    bb19__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>_43 = move _44<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;String as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb20__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb21__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb22__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageLive(_57)<br/>_57 = _37<br/>_32 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _57)<br/>StorageDead(_57)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb24__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_58 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb25__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_31 as Continue).0: ())<br/>_30 = _62<br/>StorageDead(_62)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_163 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;'_&gt;)<br/>_68 = &amp;((*_163).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_67 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _68)</td></tr></table>>];
    bb26__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb27__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_69)<br/>_69 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_66 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _67, move _69)</td></tr></table>>];
    bb29__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb30__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_70 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb31__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = move ((_65 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_64 = move _74<br/>StorageDead(_74)<br/>_63 = &amp;mut _64<br/>_176 = discriminant(_65)<br/>StorageDead(_65)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_164 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerpPnlForDeposit&lt;'_&gt;)<br/>_80 = &amp;((*_164).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_79 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _80)</td></tr></table>>];
    bb32__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb33__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>_174 = discriminant(_65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageLive(_81)<br/>_81 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_78 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _79, move _81)</td></tr></table>>];
    bb35__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb36__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_82 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb37__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = move ((_77 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_76 = move _86<br/>StorageDead(_86)<br/>_75 = &amp;mut _76<br/>_180 = discriminant(_77)<br/>StorageDead(_77)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_165 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_97 = &amp;(*_165)<br/></td></tr><tr><td align="left">_96 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _97)</td></tr></table>>];
    bb38__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb39__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>_178 = discriminant(_77)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _96)</td></tr></table>>];
    bb41__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_94 = &amp;mut _95<br/>_93 = &amp;mut (*_94)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/></td></tr><tr><td align="left">_100 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb42__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = _3<br/></td></tr><tr><td align="left">_103 = get_writable_spot_market_set(move _104)</td></tr></table>>];
    bb43__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/>StorageLive(_105)<br/>_105 = (_17.0: u64)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_166 = deref_copy (*_16)<br/>_197 = (((_166.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_109 = &amp;(*_197)<br/></td></tr><tr><td align="left">_108 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _109)</td></tr></table>>];
    bb44__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_107 = ((*_108).7: state::state::OracleGuardRails)<br/>_106 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _107)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_92 = load_maps(move _93, move _98, move _101, move _105, move _106)</td></tr></table>>];
    bb45__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb46__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_110 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb47__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = move ((_91 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_90 = move _114<br/>StorageDead(_114)<br/>StorageLive(_87)<br/>_87 = move (_90.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_88)<br/>_88 = move (_90.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_89)<br/>_89 = move (_90.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_184 = discriminant(_91)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb48__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb49__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>_182 = discriminant(_91)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb50__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb51__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = _2<br/>StorageLive(_119)<br/>_119 = _3<br/>StorageLive(_120)<br/>_120 = _4<br/>StorageLive(_121)<br/>_121 = _5<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;mut (*_63)<br/></td></tr><tr><td align="left">_123 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _124)</td></tr></table>>];
    bb52__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_122 = &amp;mut (*_123)<br/>StorageDead(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_26<br/>_125 = &amp;(*_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;mut (*_75)<br/></td></tr><tr><td align="left">_128 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _129)</td></tr></table>>];
    bb53__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_127 = &amp;mut (*_128)<br/>StorageDead(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;_28<br/>_130 = &amp;(*_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_87<br/>_132 = &amp;(*_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;_88<br/>_134 = &amp;(*_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;mut _89<br/>_136 = &amp;mut (*_137)<br/>StorageLive(_138)<br/>_138 = _25<br/>StorageLive(_139)<br/>_139 = (_17.0: u64)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_167 = deref_copy (*_16)<br/>_198 = (((_167.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_142 = &amp;(*_198)<br/></td></tr><tr><td align="left">_141 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _142)</td></tr></table>>];
    bb54__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = ((*_141).11: u32)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_168 = deref_copy (*_16)<br/>_199 = (((_168.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_146 = &amp;(*_199)<br/></td></tr><tr><td align="left">_145 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _146)</td></tr></table>>];
    bb55__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_144 = ((*_145).21: u16)<br/>_143 = move _144 as u128 (IntToInt)<br/>StorageDead(_144)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_169 = deref_copy (*_16)<br/>_200 = (((_169.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_150 = &amp;(*_200)<br/></td></tr><tr><td align="left">_149 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _150)</td></tr></table>>];
    bb56__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = ((*_149).20: u8)<br/>_147 = move _148 as u128 (IntToInt)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_117 = controller::liquidation::liquidate_perp_pnl_for_deposit(move _118, move _119, move _120, move _121, move _122, move _125, move _127, move _130, move _132, move _134, move _136, move _138, move _139, move _140, move _143, move _147)</td></tr></table>>];
    bb57__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb58__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_151 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb59__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_116 as Continue).0: ())<br/>_115 = _155<br/>StorageDead(_155)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_156)<br/>_156 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _156)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb60__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb61__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb62__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb63__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb64__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb65__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb66__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb68__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb69__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb71__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb73__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb74__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left">return</td></tr></table>>];
    bb78__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb79__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb80__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb81__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb82__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb83__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb84__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb85__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb86__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb87__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb88__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left" balign="left">_191 = discriminant(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left" balign="left">_192 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left" balign="left">_193 = discriminant(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left" balign="left">_194 = discriminant(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_9286 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left" balign="left">_195 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9286 -> bb1__0_9286 [label="return"];
    bb1__0_9286 -> bb2__0_9286 [label="return"];
    bb1__0_9286 -> bb87__0_9286 [label="unwind"];
    bb2__0_9286 -> bb3__0_9286 [label="0"];
    bb2__0_9286 -> bb5__0_9286 [label="1"];
    bb2__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb3__0_9286 -> bb7__0_9286 [label="return"];
    bb5__0_9286 -> bb6__0_9286 [label="return"];
    bb5__0_9286 -> bb92__0_9286 [label="unwind"];
    bb6__0_9286 -> bb77__0_9286 [label=""];
    bb7__0_9286 -> bb8__0_9286 [label="return"];
    bb7__0_9286 -> bb87__0_9286 [label="unwind"];
    bb8__0_9286 -> bb9__0_9286 [label="0"];
    bb8__0_9286 -> bb10__0_9286 [label="1"];
    bb8__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb9__0_9286 -> bb12__0_9286 [label="return"];
    bb10__0_9286 -> bb11__0_9286 [label="return"];
    bb10__0_9286 -> bb91__0_9286 [label="unwind"];
    bb11__0_9286 -> bb76__0_9286 [label=""];
    bb12__0_9286 -> bb13__0_9286 [label="return"];
    bb13__0_9286 -> bb14__0_9286 [label="return"];
    bb14__0_9286 -> bb16__0_9286 [label="0"];
    bb14__0_9286 -> bb15__0_9286 [label="otherwise"];
    bb15__0_9286 -> bb23__0_9286 [label=""];
    bb16__0_9286 -> bb17__0_9286 [label="return"];
    bb17__0_9286 -> bb18__0_9286 [label="return"];
    bb18__0_9286 -> bb19__0_9286 [label="return"];
    bb19__0_9286 -> bb20__0_9286 [label="return"];
    bb19__0_9286 -> bb86__0_9286 [label="unwind"];
    bb20__0_9286 -> bb21__0_9286 [label="return"];
    bb20__0_9286 -> bb86__0_9286 [label="unwind"];
    bb21__0_9286 -> bb22__0_9286 [label="return"];
    bb21__0_9286 -> bb87__0_9286 [label="unwind"];
    bb22__0_9286 -> bb23__0_9286 [label=""];
    bb23__0_9286 -> bb24__0_9286 [label="return"];
    bb24__0_9286 -> bb25__0_9286 [label="0"];
    bb24__0_9286 -> bb26__0_9286 [label="1"];
    bb24__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb25__0_9286 -> bb28__0_9286 [label="return"];
    bb26__0_9286 -> bb27__0_9286 [label="return"];
    bb27__0_9286 -> bb75__0_9286 [label=""];
    bb28__0_9286 -> bb29__0_9286 [label="return"];
    bb28__0_9286 -> bb87__0_9286 [label="unwind"];
    bb29__0_9286 -> bb30__0_9286 [label="return"];
    bb29__0_9286 -> bb87__0_9286 [label="unwind"];
    bb30__0_9286 -> bb31__0_9286 [label="0"];
    bb30__0_9286 -> bb32__0_9286 [label="1"];
    bb30__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb31__0_9286 -> bb34__0_9286 [label="return"];
    bb31__0_9286 -> bb85__0_9286 [label="unwind"];
    bb32__0_9286 -> bb33__0_9286 [label="return"];
    bb32__0_9286 -> bb90__0_9286 [label="unwind"];
    bb33__0_9286 -> bb74__0_9286 [label=""];
    bb34__0_9286 -> bb35__0_9286 [label="return"];
    bb34__0_9286 -> bb85__0_9286 [label="unwind"];
    bb35__0_9286 -> bb36__0_9286 [label="return"];
    bb35__0_9286 -> bb85__0_9286 [label="unwind"];
    bb36__0_9286 -> bb37__0_9286 [label="0"];
    bb36__0_9286 -> bb38__0_9286 [label="1"];
    bb36__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb37__0_9286 -> bb40__0_9286 [label="return"];
    bb37__0_9286 -> bb84__0_9286 [label="unwind"];
    bb38__0_9286 -> bb39__0_9286 [label="return"];
    bb38__0_9286 -> bb89__0_9286 [label="unwind"];
    bb39__0_9286 -> bb73__0_9286 [label=""];
    bb40__0_9286 -> bb41__0_9286 [label="return"];
    bb40__0_9286 -> bb84__0_9286 [label="unwind"];
    bb41__0_9286 -> bb42__0_9286 [label="return"];
    bb41__0_9286 -> bb84__0_9286 [label="unwind"];
    bb42__0_9286 -> bb43__0_9286 [label="return"];
    bb42__0_9286 -> bb83__0_9286 [label="unwind"];
    bb43__0_9286 -> bb44__0_9286 [label="return"];
    bb43__0_9286 -> bb82__0_9286 [label="unwind"];
    bb44__0_9286 -> bb45__0_9286 [label="return"];
    bb44__0_9286 -> bb82__0_9286 [label="unwind"];
    bb45__0_9286 -> bb46__0_9286 [label="return"];
    bb45__0_9286 -> bb82__0_9286 [label="unwind"];
    bb46__0_9286 -> bb47__0_9286 [label="0"];
    bb46__0_9286 -> bb48__0_9286 [label="1"];
    bb46__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb47__0_9286 -> bb50__0_9286 [label="return"];
    bb47__0_9286 -> bb78__0_9286 [label="unwind"];
    bb48__0_9286 -> bb49__0_9286 [label="return"];
    bb48__0_9286 -> bb88__0_9286 [label="unwind"];
    bb49__0_9286 -> bb70__0_9286 [label="return"];
    bb49__0_9286 -> bb83__0_9286 [label="unwind"];
    bb50__0_9286 -> bb51__0_9286 [label="return"];
    bb50__0_9286 -> bb79__0_9286 [label="unwind"];
    bb51__0_9286 -> bb52__0_9286 [label="return"];
    bb51__0_9286 -> bb79__0_9286 [label="unwind"];
    bb52__0_9286 -> bb53__0_9286 [label="return"];
    bb52__0_9286 -> bb79__0_9286 [label="unwind"];
    bb53__0_9286 -> bb54__0_9286 [label="return"];
    bb53__0_9286 -> bb79__0_9286 [label="unwind"];
    bb54__0_9286 -> bb55__0_9286 [label="return"];
    bb54__0_9286 -> bb79__0_9286 [label="unwind"];
    bb55__0_9286 -> bb56__0_9286 [label="return"];
    bb55__0_9286 -> bb79__0_9286 [label="unwind"];
    bb56__0_9286 -> bb57__0_9286 [label="return"];
    bb56__0_9286 -> bb79__0_9286 [label="unwind"];
    bb57__0_9286 -> bb58__0_9286 [label="return"];
    bb57__0_9286 -> bb79__0_9286 [label="unwind"];
    bb58__0_9286 -> bb59__0_9286 [label="0"];
    bb58__0_9286 -> bb60__0_9286 [label="1"];
    bb58__0_9286 -> bb4__0_9286 [label="otherwise"];
    bb59__0_9286 -> bb62__0_9286 [label="return"];
    bb59__0_9286 -> bb80__0_9286 [label="unwind"];
    bb60__0_9286 -> bb61__0_9286 [label="return"];
    bb60__0_9286 -> bb79__0_9286 [label="unwind"];
    bb61__0_9286 -> bb67__0_9286 [label="return"];
    bb61__0_9286 -> bb80__0_9286 [label="unwind"];
    bb62__0_9286 -> bb63__0_9286 [label="return"];
    bb62__0_9286 -> bb81__0_9286 [label="unwind"];
    bb63__0_9286 -> bb64__0_9286 [label="return"];
    bb63__0_9286 -> bb84__0_9286 [label="unwind"];
    bb64__0_9286 -> bb65__0_9286 [label="return"];
    bb64__0_9286 -> bb85__0_9286 [label="unwind"];
    bb65__0_9286 -> bb66__0_9286 [label="return"];
    bb65__0_9286 -> bb87__0_9286 [label="unwind"];
    bb66__0_9286 -> bb77__0_9286 [label=""];
    bb67__0_9286 -> bb68__0_9286 [label="return"];
    bb67__0_9286 -> bb81__0_9286 [label="unwind"];
    bb68__0_9286 -> bb69__0_9286 [label="return"];
    bb68__0_9286 -> bb84__0_9286 [label="unwind"];
    bb69__0_9286 -> bb72__0_9286 [label=""];
    bb70__0_9286 -> bb71__0_9286 [label="return"];
    bb70__0_9286 -> bb84__0_9286 [label="unwind"];
    bb71__0_9286 -> bb72__0_9286 [label=""];
    bb72__0_9286 -> bb73__0_9286 [label="return"];
    bb72__0_9286 -> bb85__0_9286 [label="unwind"];
    bb73__0_9286 -> bb74__0_9286 [label="return"];
    bb73__0_9286 -> bb87__0_9286 [label="unwind"];
    bb74__0_9286 -> bb75__0_9286 [label=""];
    bb75__0_9286 -> bb76__0_9286 [label=""];
    bb76__0_9286 -> bb77__0_9286 [label=""];
    bb78__0_9286 -> bb79__0_9286 [label="return"];
    bb79__0_9286 -> bb80__0_9286 [label="return"];
    bb80__0_9286 -> bb81__0_9286 [label="return"];
    bb81__0_9286 -> bb84__0_9286 [label="return"];
    bb82__0_9286 -> bb83__0_9286 [label="return"];
    bb83__0_9286 -> bb84__0_9286 [label="return"];
    bb84__0_9286 -> bb85__0_9286 [label="return"];
    bb85__0_9286 -> bb87__0_9286 [label="return"];
    bb86__0_9286 -> bb87__0_9286 [label="return"];
    bb88__0_9286 -> bb82__0_9286 [label=""];
    bb89__0_9286 -> bb85__0_9286 [label=""];
    bb90__0_9286 -> bb87__0_9286 [label=""];
    bb91__0_9286 -> bb87__0_9286 [label=""];
    bb92__0_9286 -> bb87__0_9286 [label=""];
}
