digraph Mir_0_1207 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_initialize_insurance_fund_stake(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::InitializeInsuranceFundStake&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _3: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _8: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _9: error::ErrorCode;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _15: anchor_lang::prelude::Clock;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _17: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: anchor_lang::prelude::Clock;<br align="left"/>let _23: i64;<br align="left"/>let mut _24: state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _25: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _28: u16;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _31: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _32: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _34: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _40: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _41: ();<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _43: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _44: bool;<br align="left"/>let mut _45: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _46: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _47: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _48: state::paused_operations::InsuranceFundOperation;<br align="left"/>let mut _49: ();<br align="left"/>let _50: error::ErrorCode;<br align="left"/>let _51: ();<br align="left"/>let mut _52: &amp;ReErased str;<br align="left"/>let _53: &amp;ReErased str;<br align="left"/>let mut _54: &amp;ReErased std::string::String;<br align="left"/>let _55: &amp;ReErased std::string::String;<br align="left"/>let _56: std::string::String;<br align="left"/>let _57: std::string::String;<br align="left"/>let mut _58: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _61: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _62: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _63: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _64: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _65: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _66: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _67: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased error::ErrorCode;<br align="left"/>let _69: &amp;ReErased error::ErrorCode;<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased str;<br align="left"/>let _72: &amp;ReErased str;<br align="left"/>let mut _73: &amp;ReErased std::string::String;<br align="left"/>let _74: &amp;ReErased std::string::String;<br align="left"/>let _75: std::string::String;<br align="left"/>let _76: std::string::String;<br align="left"/>let mut _77: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _79: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _80: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _81: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _82: error::ErrorCode;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: ();<br align="left"/>let mut _88: ();<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _91: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _94: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug if_stake =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug clock =&gt; _15;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug now =&gt; _23;<br align="left"/>debug spot_market =&gt; _32;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug error_code =&gt; _50;<br align="left"/>debug res =&gt; _57;<br align="left"/>debug res =&gt; _76;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>>;
    bb0__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_91 = deref_copy (_1.1: &amp;mut instructions::if_staker::InitializeInsuranceFundStake&lt;'_&gt;)<br/>_7 = &amp;((*_91).1: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_init(move _7)</td></tr></table>>];
    bb1__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::UnableToLoadAccountLoader<br/>_8 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt;::Err(move _9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _6, move _8)</td></tr></table>>];
    bb2__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_10 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_4 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_3 = move _14<br/>StorageDead(_14)<br/>_97 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb5__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_95 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb9__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_18 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_16 as Continue).0: anchor_lang::prelude::Clock)<br/>_15 = move _22<br/>StorageDead(_22)<br/>_99 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>_23 = (_15.4: i64)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_92 = deref_copy (_1.1: &amp;mut instructions::if_staker::InitializeInsuranceFundStake&lt;'_&gt;)<br/>_27 = &amp;((*_92).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb11__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_105 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_93 = deref_copy ((*_26).0: &amp;anchor_lang::prelude::Pubkey)<br/>_25 = (*_93)<br/>StorageLive(_28)<br/>_28 = _2<br/>StorageLive(_29)<br/>_29 = _23<br/></td></tr><tr><td align="left">_24 = InsuranceFundStake::new(move _25, move _28, move _29)</td></tr></table>>];
    bb14__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;mut _3<br/></td></tr><tr><td align="left">_30 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _31)</td></tr></table>>];
    bb15__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>(*_30) = move _24<br/>StorageDead(_24)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_94 = deref_copy (_1.1: &amp;mut instructions::if_staker::InitializeInsuranceFundStake&lt;'_&gt;)<br/>_35 = &amp;((*_94).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_34 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load(move _35)</td></tr></table>>];
    bb16__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb17__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb18__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_33 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_32 = move _40<br/>StorageDead(_40)<br/>_101 = discriminant(_33)<br/>StorageDead(_33)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_32<br/></td></tr><tr><td align="left">_46 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb19__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_39)<br/>_39 = move _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb20__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>_103 = discriminant(_33)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_45 = &amp;(*_46)<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>_48 = InsuranceFundOperation::Init<br/></td></tr><tr><td align="left">_44 = SpotMarket::is_insurance_fund_operation_paused(move _45, move _48)</td></tr></table>>];
    bb22__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb23__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_46)<br/>StorageLive(_50)<br/>_50 = error::ErrorCode::InsuranceFundOperationPaused<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_90 = const _<br/>_61 = &amp;(*_90)<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_50<br/>_68 = &amp;(*_69)<br/></td></tr><tr><td align="left">_67 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _68)</td></tr></table>>];
    bb24__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_46)<br/>StorageLive(_49)<br/>_49 = ()<br/>_43 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_66 = [move _67]<br/>StorageDead(_67)<br/>_65 = &amp;_66<br/>_64 = &amp;(*_65)<br/>_63 = move _64 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_58 = Arguments::&lt;'_&gt;::new_v1(move _59, move _63)</td></tr></table>>];
    bb26__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = format(move _58)</td></tr></table>>];
    bb27__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>_56 = move _57<br/>StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = &lt;String as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb28__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_52 = &amp;(*_53)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_51 = solana_program::log::sol_log(move _52)</td></tr></table>>];
    bb29__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb30__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_89 = const _<br/>_80 = &amp;(*_89)<br/>_79 = &amp;(*_80)<br/>_78 = move _79 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = Arguments::&lt;'_&gt;::new_const(move _78)</td></tr></table>>];
    bb31__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = format(move _77)</td></tr></table>>];
    bb32__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_80)<br/>_75 = move _76<br/>StorageDead(_76)<br/>_74 = &amp;_75<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;String as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb33__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_70 = solana_program::log::sol_log(move _71)</td></tr></table>>];
    bb34__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb35__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_82)<br/>_82 = _50<br/>_43 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _82)<br/>StorageDead(_82)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb37__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_83 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb38__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_42 as Continue).0: ())<br/>_41 = _87<br/>StorageDead(_87)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_88)<br/>_88 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _88)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb39__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb40__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb41__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_23)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb42__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb45__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">return</td></tr></table>>];
    bb47__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb48__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb49__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb50__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb51__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb52__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left" balign="left">_107 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1207 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left" balign="left">_109 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1207 -> bb1__0_1207 [label="return"];
    bb1__0_1207 -> bb2__0_1207 [label="return"];
    bb1__0_1207 -> bb51__0_1207 [label="unwind"];
    bb2__0_1207 -> bb3__0_1207 [label="return"];
    bb2__0_1207 -> bb51__0_1207 [label="unwind"];
    bb3__0_1207 -> bb4__0_1207 [label="0"];
    bb3__0_1207 -> bb6__0_1207 [label="1"];
    bb3__0_1207 -> bb5__0_1207 [label="otherwise"];
    bb4__0_1207 -> bb8__0_1207 [label="return"];
    bb4__0_1207 -> bb50__0_1207 [label="unwind"];
    bb6__0_1207 -> bb7__0_1207 [label="return"];
    bb6__0_1207 -> bb54__0_1207 [label="unwind"];
    bb7__0_1207 -> bb45__0_1207 [label=""];
    bb8__0_1207 -> bb9__0_1207 [label="return"];
    bb8__0_1207 -> bb50__0_1207 [label="unwind"];
    bb9__0_1207 -> bb10__0_1207 [label="0"];
    bb9__0_1207 -> bb11__0_1207 [label="1"];
    bb9__0_1207 -> bb5__0_1207 [label="otherwise"];
    bb10__0_1207 -> bb13__0_1207 [label="return"];
    bb10__0_1207 -> bb50__0_1207 [label="unwind"];
    bb11__0_1207 -> bb12__0_1207 [label="return"];
    bb11__0_1207 -> bb53__0_1207 [label="unwind"];
    bb12__0_1207 -> bb44__0_1207 [label=""];
    bb13__0_1207 -> bb14__0_1207 [label="return"];
    bb13__0_1207 -> bb50__0_1207 [label="unwind"];
    bb14__0_1207 -> bb15__0_1207 [label="return"];
    bb14__0_1207 -> bb50__0_1207 [label="unwind"];
    bb15__0_1207 -> bb16__0_1207 [label="return"];
    bb15__0_1207 -> bb50__0_1207 [label="unwind"];
    bb16__0_1207 -> bb17__0_1207 [label="return"];
    bb16__0_1207 -> bb50__0_1207 [label="unwind"];
    bb17__0_1207 -> bb18__0_1207 [label="0"];
    bb17__0_1207 -> bb19__0_1207 [label="1"];
    bb17__0_1207 -> bb5__0_1207 [label="otherwise"];
    bb18__0_1207 -> bb21__0_1207 [label="return"];
    bb18__0_1207 -> bb49__0_1207 [label="unwind"];
    bb19__0_1207 -> bb20__0_1207 [label="return"];
    bb19__0_1207 -> bb52__0_1207 [label="unwind"];
    bb20__0_1207 -> bb43__0_1207 [label=""];
    bb21__0_1207 -> bb22__0_1207 [label="return"];
    bb21__0_1207 -> bb49__0_1207 [label="unwind"];
    bb22__0_1207 -> bb24__0_1207 [label="0"];
    bb22__0_1207 -> bb23__0_1207 [label="otherwise"];
    bb23__0_1207 -> bb25__0_1207 [label="return"];
    bb23__0_1207 -> bb49__0_1207 [label="unwind"];
    bb24__0_1207 -> bb36__0_1207 [label=""];
    bb25__0_1207 -> bb26__0_1207 [label="return"];
    bb25__0_1207 -> bb49__0_1207 [label="unwind"];
    bb26__0_1207 -> bb27__0_1207 [label="return"];
    bb26__0_1207 -> bb49__0_1207 [label="unwind"];
    bb27__0_1207 -> bb28__0_1207 [label="return"];
    bb27__0_1207 -> bb48__0_1207 [label="unwind"];
    bb28__0_1207 -> bb29__0_1207 [label="return"];
    bb28__0_1207 -> bb48__0_1207 [label="unwind"];
    bb29__0_1207 -> bb30__0_1207 [label="return"];
    bb29__0_1207 -> bb49__0_1207 [label="unwind"];
    bb30__0_1207 -> bb31__0_1207 [label="return"];
    bb30__0_1207 -> bb49__0_1207 [label="unwind"];
    bb31__0_1207 -> bb32__0_1207 [label="return"];
    bb31__0_1207 -> bb49__0_1207 [label="unwind"];
    bb32__0_1207 -> bb33__0_1207 [label="return"];
    bb32__0_1207 -> bb47__0_1207 [label="unwind"];
    bb33__0_1207 -> bb34__0_1207 [label="return"];
    bb33__0_1207 -> bb47__0_1207 [label="unwind"];
    bb34__0_1207 -> bb35__0_1207 [label="return"];
    bb34__0_1207 -> bb49__0_1207 [label="unwind"];
    bb35__0_1207 -> bb36__0_1207 [label=""];
    bb36__0_1207 -> bb37__0_1207 [label="return"];
    bb36__0_1207 -> bb49__0_1207 [label="unwind"];
    bb37__0_1207 -> bb38__0_1207 [label="0"];
    bb37__0_1207 -> bb39__0_1207 [label="1"];
    bb37__0_1207 -> bb5__0_1207 [label="otherwise"];
    bb38__0_1207 -> bb41__0_1207 [label="return"];
    bb38__0_1207 -> bb50__0_1207 [label="unwind"];
    bb39__0_1207 -> bb40__0_1207 [label="return"];
    bb39__0_1207 -> bb49__0_1207 [label="unwind"];
    bb40__0_1207 -> bb43__0_1207 [label="return"];
    bb40__0_1207 -> bb50__0_1207 [label="unwind"];
    bb41__0_1207 -> bb42__0_1207 [label="return"];
    bb41__0_1207 -> bb51__0_1207 [label="unwind"];
    bb42__0_1207 -> bb46__0_1207 [label=""];
    bb43__0_1207 -> bb44__0_1207 [label=""];
    bb44__0_1207 -> bb45__0_1207 [label="return"];
    bb44__0_1207 -> bb51__0_1207 [label="unwind"];
    bb45__0_1207 -> bb46__0_1207 [label=""];
    bb47__0_1207 -> bb49__0_1207 [label="return"];
    bb48__0_1207 -> bb49__0_1207 [label="return"];
    bb49__0_1207 -> bb50__0_1207 [label="return"];
    bb50__0_1207 -> bb51__0_1207 [label="return"];
    bb52__0_1207 -> bb50__0_1207 [label=""];
    bb53__0_1207 -> bb50__0_1207 [label=""];
    bb54__0_1207 -> bb51__0_1207 [label=""];
}
