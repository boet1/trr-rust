digraph Mir_0_3317 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;SerumFulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::validate_markets(_1: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, _2: &amp;ReErased state::spot_market::SpotMarket, _3: &amp;ReErased state::spot_market::SpotMarket) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _9: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _10: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _11: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _14: ();<br align="left"/>let _15: error::ErrorCode;<br align="left"/>let _16: ();<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: &amp;ReErased std::string::String;<br align="left"/>let _20: &amp;ReErased std::string::String;<br align="left"/>let _21: std::string::String;<br align="left"/>let _22: std::string::String;<br align="left"/>let mut _23: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _26: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _27: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _32: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased error::ErrorCode;<br align="left"/>let _34: &amp;ReErased error::ErrorCode;<br align="left"/>let _35: ();<br align="left"/>let mut _36: &amp;ReErased str;<br align="left"/>let _37: &amp;ReErased str;<br align="left"/>let mut _38: error::ErrorCode;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: ();<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _46: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _49: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _50: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _51: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _53: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _54: ();<br align="left"/>let _55: error::ErrorCode;<br align="left"/>let _56: ();<br align="left"/>let mut _57: &amp;ReErased str;<br align="left"/>let _58: &amp;ReErased str;<br align="left"/>let mut _59: &amp;ReErased std::string::String;<br align="left"/>let _60: &amp;ReErased std::string::String;<br align="left"/>let _61: std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let mut _63: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _66: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _67: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _71: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _72: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased error::ErrorCode;<br align="left"/>let _74: &amp;ReErased error::ErrorCode;<br align="left"/>let _75: ();<br align="left"/>let mut _76: &amp;ReErased str;<br align="left"/>let _77: &amp;ReErased str;<br align="left"/>let mut _78: error::ErrorCode;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: ();<br align="left"/>let mut _84: ();<br align="left"/>let mut _85: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _86: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _87: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _88: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _89: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _90: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug base_market =&gt; _2;<br align="left"/>debug quote_market =&gt; _3;<br align="left"/>debug error_code =&gt; _15;<br align="left"/>debug res =&gt; _22;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug error_code =&gt; _55;<br align="left"/>debug res =&gt; _62;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>>;
    bb0__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_87 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_89 = (((_87.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_12 = &amp;(*_89)<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _12)</td></tr></table>>];
    bb1__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _10)</td></tr></table>>];
    bb2__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_8 = &amp;((*_9).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_13)<br/>_13 = &amp;((*_2).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _8, move _13)</td></tr></table>>];
    bb3__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb4__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_14)<br/>_14 = ()<br/>_6 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_15)<br/>_15 = error::ErrorCode::DefaultError<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_86 = const _<br/>_26 = &amp;(*_86)<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_15<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _33)</td></tr></table>>];
    bb6__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = [move _32]<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_23 = Arguments::&lt;'_&gt;::new_v1(move _24, move _28)</td></tr></table>>];
    bb7__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = format(move _23)</td></tr></table>>];
    bb8__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>_21 = move _22<br/>StorageDead(_22)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_18 = &lt;String as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb9__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_16 = solana_program::log::sol_log(move _17)</td></tr></table>>];
    bb10__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb11__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = const &quot;base mints dont match&quot;<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = solana_program::log::sol_log(move _36)</td></tr></table>>];
    bb12__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>_38 = _15<br/>_6 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _38)<br/>StorageDead(_38)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb14__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_39 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb15__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_5 as Continue).0: ())<br/>_4 = _43<br/>StorageDead(_43)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_88 = deref_copy ((*_1).10: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_90 = (((_88.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_52 = &amp;(*_90)<br/></td></tr><tr><td align="left">_51 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _52)</td></tr></table>>];
    bb16__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb18__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb20__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>_48 = &amp;((*_49).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_53)<br/>_53 = &amp;((*_3).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_47 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _48, move _53)</td></tr></table>>];
    bb21__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb22__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_54)<br/>_54 = ()<br/>_46 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _54)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_55)<br/>_55 = error::ErrorCode::DefaultError<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_85 = const _<br/>_66 = &amp;(*_85)<br/>_65 = &amp;(*_66)<br/>_64 = move _65 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_65)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_55<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _73)</td></tr></table>>];
    bb24__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_71 = [move _72]<br/>StorageDead(_72)<br/>_70 = &amp;_71<br/>_69 = &amp;(*_70)<br/>_68 = move _69 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_63 = Arguments::&lt;'_&gt;::new_v1(move _64, move _68)</td></tr></table>>];
    bb25__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = format(move _63)</td></tr></table>>];
    bb26__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_66)<br/>_61 = move _62<br/>StorageDead(_62)<br/>_60 = &amp;_61<br/>_59 = &amp;(*_60)<br/></td></tr><tr><td align="left">_58 = &lt;String as Deref&gt;::deref(move _59)</td></tr></table>>];
    bb27__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_57 = &amp;(*_58)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_56 = solana_program::log::sol_log(move _57)</td></tr></table>>];
    bb28__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb29__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = const &quot;base mints dont match&quot;<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = solana_program::log::sol_log(move _76)</td></tr></table>>];
    bb30__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageLive(_78)<br/>_78 = _55<br/>_46 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _78)<br/>StorageDead(_78)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb32__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_79 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb33__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_45 as Continue).0: ())<br/>_44 = _83<br/>StorageDead(_83)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_84)<br/>_84 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _84)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb35__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">return</td></tr></table>>];
    bb37__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb38__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb39__0_3317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3317 -> bb1__0_3317 [label="return"];
    bb1__0_3317 -> bb2__0_3317 [label="return"];
    bb2__0_3317 -> bb3__0_3317 [label="return"];
    bb3__0_3317 -> bb5__0_3317 [label="0"];
    bb3__0_3317 -> bb4__0_3317 [label="otherwise"];
    bb4__0_3317 -> bb13__0_3317 [label=""];
    bb5__0_3317 -> bb6__0_3317 [label="return"];
    bb6__0_3317 -> bb7__0_3317 [label="return"];
    bb7__0_3317 -> bb8__0_3317 [label="return"];
    bb8__0_3317 -> bb9__0_3317 [label="return"];
    bb8__0_3317 -> bb38__0_3317 [label="unwind"];
    bb9__0_3317 -> bb10__0_3317 [label="return"];
    bb9__0_3317 -> bb38__0_3317 [label="unwind"];
    bb10__0_3317 -> bb11__0_3317 [label="return"];
    bb10__0_3317 -> bb39__0_3317 [label="unwind"];
    bb11__0_3317 -> bb12__0_3317 [label="return"];
    bb12__0_3317 -> bb13__0_3317 [label=""];
    bb13__0_3317 -> bb14__0_3317 [label="return"];
    bb14__0_3317 -> bb15__0_3317 [label="0"];
    bb14__0_3317 -> bb17__0_3317 [label="1"];
    bb14__0_3317 -> bb16__0_3317 [label="otherwise"];
    bb15__0_3317 -> bb19__0_3317 [label="return"];
    bb17__0_3317 -> bb18__0_3317 [label="return"];
    bb18__0_3317 -> bb36__0_3317 [label=""];
    bb19__0_3317 -> bb20__0_3317 [label="return"];
    bb20__0_3317 -> bb21__0_3317 [label="return"];
    bb21__0_3317 -> bb23__0_3317 [label="0"];
    bb21__0_3317 -> bb22__0_3317 [label="otherwise"];
    bb22__0_3317 -> bb31__0_3317 [label=""];
    bb23__0_3317 -> bb24__0_3317 [label="return"];
    bb24__0_3317 -> bb25__0_3317 [label="return"];
    bb25__0_3317 -> bb26__0_3317 [label="return"];
    bb26__0_3317 -> bb27__0_3317 [label="return"];
    bb26__0_3317 -> bb37__0_3317 [label="unwind"];
    bb27__0_3317 -> bb28__0_3317 [label="return"];
    bb27__0_3317 -> bb37__0_3317 [label="unwind"];
    bb28__0_3317 -> bb29__0_3317 [label="return"];
    bb28__0_3317 -> bb39__0_3317 [label="unwind"];
    bb29__0_3317 -> bb30__0_3317 [label="return"];
    bb30__0_3317 -> bb31__0_3317 [label=""];
    bb31__0_3317 -> bb32__0_3317 [label="return"];
    bb32__0_3317 -> bb33__0_3317 [label="0"];
    bb32__0_3317 -> bb34__0_3317 [label="1"];
    bb32__0_3317 -> bb16__0_3317 [label="otherwise"];
    bb33__0_3317 -> bb36__0_3317 [label=""];
    bb34__0_3317 -> bb35__0_3317 [label="return"];
    bb35__0_3317 -> bb36__0_3317 [label=""];
    bb37__0_3317 -> bb39__0_3317 [label="return"];
    bb38__0_3317 -> bb39__0_3317 [label="return"];
}
