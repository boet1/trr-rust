digraph Mir_0_5494 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_spot_market_expiry(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;&gt;, _2: i64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _14: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _19: Closure(DefId(0:5495 ~ drift[d311]::instructions::admin::handle_update_spot_market_expiry::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _25: ();<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::string::String;<br align="left"/>let _29: &amp;ReErased std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _36: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased u16;<br align="left"/>let _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _45: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _46: i64;<br align="left"/>let mut _47: anchor_lang::prelude::Clock;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _49: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _54: anchor_lang::prelude::Clock;<br align="left"/>let _55: ();<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _57: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _58: bool;<br align="left"/>let mut _59: i64;<br align="left"/>let mut _60: i64;<br align="left"/>let mut _61: ();<br align="left"/>let _62: error::ErrorCode;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased error::ErrorCode;<br align="left"/>let _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: ();<br align="left"/>let mut _83: &amp;ReErased str;<br align="left"/>let _84: &amp;ReErased str;<br align="left"/>let mut _85: error::ErrorCode;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: ();<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: &amp;ReErased std::string::String;<br align="left"/>let _95: &amp;ReErased std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let mut _98: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _102: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _106: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _107: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _109: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _110: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _111: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _112: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _114: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _115: state::perp_market::MarketStatus;<br align="left"/>let _116: ();<br align="left"/>let mut _117: &amp;ReErased str;<br align="left"/>let _118: &amp;ReErased str;<br align="left"/>let mut _119: &amp;ReErased std::string::String;<br align="left"/>let _120: &amp;ReErased std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let _122: std::string::String;<br align="left"/>let mut _123: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _125: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _126: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _127: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _131: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _132: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased i64;<br align="left"/>let _134: &amp;ReErased i64;<br align="left"/>let _135: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _136: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _137: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased i64;<br align="left"/>let _139: &amp;ReErased i64;<br align="left"/>let mut _140: state::perp_market::MarketStatus;<br align="left"/>let mut _141: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _142: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _143: i64;<br align="left"/>let mut _144: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _145: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _146: ();<br align="left"/>let mut _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _148: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _149: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _150: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _152: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _153: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug expiry_ts =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug spot_market =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug res =&gt; _31;<br align="left"/>debug now =&gt; _46;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug error_code =&gt; _62;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug res =&gt; _97;<br align="left"/>debug res =&gt; _122;<br align="left"/>>;
    bb0__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_152 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_7 = &amp;((*_152).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::spot_market_valid(move _6)</td></tr></table>>];
    bb1__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_154 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_153 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_18 = &amp;((*_153).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_164 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_13 = &amp;mut _14<br/>_158 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_151 = const _<br/>_35 = &amp;(*_151)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_13)<br/></td></tr><tr><td align="left">_44 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb11__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_156 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;((*_44).42: u16)<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _42)</td></tr></table>>];
    bb14__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_v1(move _33, move _37)</td></tr></table>>];
    bb15__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = format(move _32)</td></tr></table>>];
    bb16__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>_30 = move _31<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;String as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb17__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = solana_program::log::sol_log(move _26)</td></tr></table>>];
    bb18__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb19__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/></td></tr><tr><td align="left">_49 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb20__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb21__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_50 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb22__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_48 as Continue).0: anchor_lang::prelude::Clock)<br/>_47 = move _54<br/>StorageDead(_54)<br/>_46 = (_47.4: i64)<br/>_160 = discriminant(_48)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = _46<br/>StorageLive(_60)<br/>_60 = _2<br/>_58 = Lt(move _59, move _60)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb23__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_53)<br/>_53 = move _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb24__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>_162 = discriminant(_48)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_61)<br/>_61 = ()<br/>_57 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _61)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_62)<br/>_62 = error::ErrorCode::DefaultError<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_150 = const _<br/>_73 = &amp;(*_150)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_62<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _80)</td></tr></table>>];
    bb27__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = [move _79]<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1(move _71, move _75)</td></tr></table>>];
    bb28__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb29__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb30__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb31__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb32__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = const &quot;Market expiry ts must later than current clock timestamp&quot;<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = solana_program::log::sol_log(move _83)</td></tr></table>>];
    bb33__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>_85 = _62<br/>_57 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _85)<br/>StorageDead(_85)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb35__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_86 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb36__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_56 as Continue).0: ())<br/>_55 = _90<br/>StorageDead(_90)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_149 = const _<br/>_101 = &amp;(*_149)<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_13)<br/></td></tr><tr><td align="left">_110 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _111)</td></tr></table>>];
    bb37__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb38__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_109 = &amp;((*_110).45: state::perp_market::MarketStatus)<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::MarketStatus&gt;(move _108)</td></tr></table>>];
    bb40__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_148 = const _<br/>_114 = &amp;(*_148)<br/>_113 = &amp;(*_114)<br/></td></tr><tr><td align="left">_112 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::MarketStatus&gt;(move _113)</td></tr></table>>];
    bb41__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_106 = [move _107, move _112]<br/>StorageDead(_112)<br/>StorageDead(_107)<br/>_105 = &amp;_106<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_98 = Arguments::&lt;'_&gt;::new_v1(move _99, move _103)</td></tr></table>>];
    bb42__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = format(move _98)</td></tr></table>>];
    bb43__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>_96 = move _97<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;String as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb44__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb45__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb46__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_147 = const _<br/>_126 = &amp;(*_147)<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;(*_13)<br/></td></tr><tr><td align="left">_135 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb47__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_134 = &amp;((*_135).24: i64)<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _133)</td></tr></table>>];
    bb48__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_2<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _138)</td></tr></table>>];
    bb49__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_131 = [move _132, move _137]<br/>StorageDead(_137)<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/>_128 = move _129 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_123 = Arguments::&lt;'_&gt;::new_v1(move _124, move _128)</td></tr></table>>];
    bb50__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = format(move _123)</td></tr></table>>];
    bb51__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_139)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>_121 = move _122<br/>StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_118 = &lt;String as Deref&gt;::deref(move _119)</td></tr></table>>];
    bb52__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_117 = &amp;(*_118)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_116 = solana_program::log::sol_log(move _117)</td></tr></table>>];
    bb53__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb54__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageLive(_140)<br/>_140 = state::perp_market::MarketStatus::ReduceOnly<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_141 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _142)</td></tr></table>>];
    bb55__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>((*_141).45: state::perp_market::MarketStatus) = move _140<br/>StorageDead(_140)<br/>StorageDead(_141)<br/>StorageLive(_143)<br/>_143 = _2<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_144 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _145)</td></tr></table>>];
    bb56__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>((*_144).24: i64) = move _143<br/>StorageDead(_143)<br/>StorageDead(_144)<br/>StorageLive(_146)<br/>_146 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _146)<br/>StorageDead(_146)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb57__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb59__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left">return</td></tr></table>>];
    bb61__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb62__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb63__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb64__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb65__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb66__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb67__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_166 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_167 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_5494 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left" balign="left">_168 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5494 -> bb1__0_5494 [label="return"];
    bb1__0_5494 -> bb2__0_5494 [label="return"];
    bb1__0_5494 -> bb66__0_5494 [label="unwind"];
    bb2__0_5494 -> bb3__0_5494 [label="0"];
    bb2__0_5494 -> bb5__0_5494 [label="1"];
    bb2__0_5494 -> bb4__0_5494 [label="otherwise"];
    bb3__0_5494 -> bb7__0_5494 [label="return"];
    bb5__0_5494 -> bb6__0_5494 [label="return"];
    bb5__0_5494 -> bb69__0_5494 [label="unwind"];
    bb6__0_5494 -> bb60__0_5494 [label=""];
    bb7__0_5494 -> bb8__0_5494 [label="return"];
    bb7__0_5494 -> bb66__0_5494 [label="unwind"];
    bb8__0_5494 -> bb9__0_5494 [label="return"];
    bb8__0_5494 -> bb66__0_5494 [label="unwind"];
    bb9__0_5494 -> bb10__0_5494 [label="0"];
    bb9__0_5494 -> bb11__0_5494 [label="1"];
    bb9__0_5494 -> bb4__0_5494 [label="otherwise"];
    bb10__0_5494 -> bb13__0_5494 [label="return"];
    bb10__0_5494 -> bb65__0_5494 [label="unwind"];
    bb11__0_5494 -> bb12__0_5494 [label="return"];
    bb11__0_5494 -> bb68__0_5494 [label="unwind"];
    bb12__0_5494 -> bb59__0_5494 [label=""];
    bb13__0_5494 -> bb14__0_5494 [label="return"];
    bb13__0_5494 -> bb65__0_5494 [label="unwind"];
    bb14__0_5494 -> bb15__0_5494 [label="return"];
    bb14__0_5494 -> bb65__0_5494 [label="unwind"];
    bb15__0_5494 -> bb16__0_5494 [label="return"];
    bb15__0_5494 -> bb65__0_5494 [label="unwind"];
    bb16__0_5494 -> bb17__0_5494 [label="return"];
    bb16__0_5494 -> bb64__0_5494 [label="unwind"];
    bb17__0_5494 -> bb18__0_5494 [label="return"];
    bb17__0_5494 -> bb64__0_5494 [label="unwind"];
    bb18__0_5494 -> bb19__0_5494 [label="return"];
    bb18__0_5494 -> bb65__0_5494 [label="unwind"];
    bb19__0_5494 -> bb20__0_5494 [label="return"];
    bb19__0_5494 -> bb65__0_5494 [label="unwind"];
    bb20__0_5494 -> bb21__0_5494 [label="return"];
    bb20__0_5494 -> bb65__0_5494 [label="unwind"];
    bb21__0_5494 -> bb22__0_5494 [label="0"];
    bb21__0_5494 -> bb23__0_5494 [label="1"];
    bb21__0_5494 -> bb4__0_5494 [label="otherwise"];
    bb22__0_5494 -> bb26__0_5494 [label="0"];
    bb22__0_5494 -> bb25__0_5494 [label="otherwise"];
    bb23__0_5494 -> bb24__0_5494 [label="return"];
    bb23__0_5494 -> bb67__0_5494 [label="unwind"];
    bb24__0_5494 -> bb58__0_5494 [label=""];
    bb25__0_5494 -> bb34__0_5494 [label=""];
    bb26__0_5494 -> bb27__0_5494 [label="return"];
    bb26__0_5494 -> bb65__0_5494 [label="unwind"];
    bb27__0_5494 -> bb28__0_5494 [label="return"];
    bb27__0_5494 -> bb65__0_5494 [label="unwind"];
    bb28__0_5494 -> bb29__0_5494 [label="return"];
    bb28__0_5494 -> bb65__0_5494 [label="unwind"];
    bb29__0_5494 -> bb30__0_5494 [label="return"];
    bb29__0_5494 -> bb63__0_5494 [label="unwind"];
    bb30__0_5494 -> bb31__0_5494 [label="return"];
    bb30__0_5494 -> bb63__0_5494 [label="unwind"];
    bb31__0_5494 -> bb32__0_5494 [label="return"];
    bb31__0_5494 -> bb65__0_5494 [label="unwind"];
    bb32__0_5494 -> bb33__0_5494 [label="return"];
    bb32__0_5494 -> bb65__0_5494 [label="unwind"];
    bb33__0_5494 -> bb34__0_5494 [label=""];
    bb34__0_5494 -> bb35__0_5494 [label="return"];
    bb34__0_5494 -> bb65__0_5494 [label="unwind"];
    bb35__0_5494 -> bb36__0_5494 [label="0"];
    bb35__0_5494 -> bb37__0_5494 [label="1"];
    bb35__0_5494 -> bb4__0_5494 [label="otherwise"];
    bb36__0_5494 -> bb39__0_5494 [label="return"];
    bb36__0_5494 -> bb65__0_5494 [label="unwind"];
    bb37__0_5494 -> bb38__0_5494 [label="return"];
    bb37__0_5494 -> bb65__0_5494 [label="unwind"];
    bb38__0_5494 -> bb58__0_5494 [label=""];
    bb39__0_5494 -> bb40__0_5494 [label="return"];
    bb39__0_5494 -> bb65__0_5494 [label="unwind"];
    bb40__0_5494 -> bb41__0_5494 [label="return"];
    bb40__0_5494 -> bb65__0_5494 [label="unwind"];
    bb41__0_5494 -> bb42__0_5494 [label="return"];
    bb41__0_5494 -> bb65__0_5494 [label="unwind"];
    bb42__0_5494 -> bb43__0_5494 [label="return"];
    bb42__0_5494 -> bb65__0_5494 [label="unwind"];
    bb43__0_5494 -> bb44__0_5494 [label="return"];
    bb43__0_5494 -> bb62__0_5494 [label="unwind"];
    bb44__0_5494 -> bb45__0_5494 [label="return"];
    bb44__0_5494 -> bb62__0_5494 [label="unwind"];
    bb45__0_5494 -> bb46__0_5494 [label="return"];
    bb45__0_5494 -> bb65__0_5494 [label="unwind"];
    bb46__0_5494 -> bb47__0_5494 [label="return"];
    bb46__0_5494 -> bb65__0_5494 [label="unwind"];
    bb47__0_5494 -> bb48__0_5494 [label="return"];
    bb47__0_5494 -> bb65__0_5494 [label="unwind"];
    bb48__0_5494 -> bb49__0_5494 [label="return"];
    bb48__0_5494 -> bb65__0_5494 [label="unwind"];
    bb49__0_5494 -> bb50__0_5494 [label="return"];
    bb49__0_5494 -> bb65__0_5494 [label="unwind"];
    bb50__0_5494 -> bb51__0_5494 [label="return"];
    bb50__0_5494 -> bb65__0_5494 [label="unwind"];
    bb51__0_5494 -> bb52__0_5494 [label="return"];
    bb51__0_5494 -> bb61__0_5494 [label="unwind"];
    bb52__0_5494 -> bb53__0_5494 [label="return"];
    bb52__0_5494 -> bb61__0_5494 [label="unwind"];
    bb53__0_5494 -> bb54__0_5494 [label="return"];
    bb53__0_5494 -> bb65__0_5494 [label="unwind"];
    bb54__0_5494 -> bb55__0_5494 [label="return"];
    bb54__0_5494 -> bb65__0_5494 [label="unwind"];
    bb55__0_5494 -> bb56__0_5494 [label="return"];
    bb55__0_5494 -> bb65__0_5494 [label="unwind"];
    bb56__0_5494 -> bb57__0_5494 [label="return"];
    bb56__0_5494 -> bb66__0_5494 [label="unwind"];
    bb57__0_5494 -> bb60__0_5494 [label=""];
    bb58__0_5494 -> bb59__0_5494 [label="return"];
    bb58__0_5494 -> bb66__0_5494 [label="unwind"];
    bb59__0_5494 -> bb60__0_5494 [label=""];
    bb61__0_5494 -> bb65__0_5494 [label="return"];
    bb62__0_5494 -> bb65__0_5494 [label="return"];
    bb63__0_5494 -> bb65__0_5494 [label="return"];
    bb64__0_5494 -> bb65__0_5494 [label="return"];
    bb65__0_5494 -> bb66__0_5494 [label="return"];
    bb67__0_5494 -> bb65__0_5494 [label=""];
    bb68__0_5494 -> bb66__0_5494 [label=""];
    bb69__0_5494 -> bb66__0_5494 [label=""];
}
