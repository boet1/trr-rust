digraph Mir_0_552 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::orders::place_spot_order(_1: &amp;ReErased state::state::State, _2: &amp;ReErased mut state::user::User, _3: anchor_lang::prelude::Pubkey, _4: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _5: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _6: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _7: &amp;ReErased anchor_lang::prelude::Clock, _8: state::order_params::OrderParams, _9: state::order_params::PlaceOrderOptions) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _10: i64;<br align="left"/>let _11: u64;<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _14: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _15: &amp;ReErased mut state::user::User;<br align="left"/>let mut _16: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _19: u32;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: ();<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _27: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: &amp;ReErased state::user::User;<br align="left"/>let mut _30: ();<br align="left"/>let _31: error::ErrorCode;<br align="left"/>let _32: ();<br align="left"/>let mut _33: &amp;ReErased str;<br align="left"/>let _34: &amp;ReErased str;<br align="left"/>let mut _35: &amp;ReErased std::string::String;<br align="left"/>let _36: &amp;ReErased std::string::String;<br align="left"/>let _37: std::string::String;<br align="left"/>let _38: std::string::String;<br align="left"/>let mut _39: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _42: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _43: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _47: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _48: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased error::ErrorCode;<br align="left"/>let _50: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _51: error::ErrorCode;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: ();<br align="left"/>let _57: ();<br align="left"/>let mut _58: bool;<br align="left"/>let _59: ();<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _61: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _62: &amp;ReErased mut state::user::User;<br align="left"/>let mut _63: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _64: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _65: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: ();<br align="left"/>let _75: ();<br align="left"/>let mut _76: bool;<br align="left"/>let mut _77: &amp;ReErased state::user::User;<br align="left"/>let _78: ();<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _80: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: ();<br align="left"/>let _83: error::ErrorCode;<br align="left"/>let _84: ();<br align="left"/>let mut _85: &amp;ReErased str;<br align="left"/>let _86: &amp;ReErased str;<br align="left"/>let mut _87: &amp;ReErased std::string::String;<br align="left"/>let _88: &amp;ReErased std::string::String;<br align="left"/>let _89: std::string::String;<br align="left"/>let _90: std::string::String;<br align="left"/>let mut _91: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _94: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _95: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _99: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _100: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased error::ErrorCode;<br align="left"/>let _102: &amp;ReErased error::ErrorCode;<br align="left"/>let _103: ();<br align="left"/>let mut _104: &amp;ReErased str;<br align="left"/>let _105: &amp;ReErased str;<br align="left"/>let mut _106: error::ErrorCode;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: ();<br align="left"/>let _112: i64;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: i64;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _117: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _118: i64;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _123: i64;<br align="left"/>let _124: ();<br align="left"/>let mut _125: bool;<br align="left"/>let mut _126: i64;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: i64;<br align="left"/>let mut _129: i64;<br align="left"/>let mut _130: !;<br align="left"/>let _131: ();<br align="left"/>let mut _132: &amp;ReErased str;<br align="left"/>let _133: &amp;ReErased str;<br align="left"/>let mut _134: &amp;ReErased std::string::String;<br align="left"/>let _135: &amp;ReErased std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let mut _138: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _141: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _142: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _146: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _147: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased i64;<br align="left"/>let _149: &amp;ReErased i64;<br align="left"/>let mut _150: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased i64;<br align="left"/>let _152: &amp;ReErased i64;<br align="left"/>let mut _153: ();<br align="left"/>let _154: usize;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _156: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _157: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _158: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _159: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _160: &amp;ReErased [state::user::Order];<br align="left"/>let mut _161: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let mut _162: Closure(DefId(0:553 ~ drift[d311]::controller::orders::place_spot_order::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), ()]);<br align="left"/>let mut _163: error::ErrorCode;<br align="left"/>let mut _164: isize;<br align="left"/>let _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _166: !;<br align="left"/>let mut _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _168: usize;<br align="left"/>let _169: ();<br align="left"/>let mut _170: bool;<br align="left"/>let mut _171: u8;<br align="left"/>let _172: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _173: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _174: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _175: &amp;ReErased [state::user::Order];<br align="left"/>let mut _176: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let mut _177: Closure(DefId(0:554 ~ drift[d311]::controller::orders::place_spot_order::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased state::order_params::OrderParams,)]);<br align="left"/>let mut _178: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _179: bool;<br align="left"/>let mut _180: &amp;ReErased std::option::Option&lt;usize&gt;;<br align="left"/>let mut _181: !;<br align="left"/>let _182: ();<br align="left"/>let mut _183: &amp;ReErased str;<br align="left"/>let _184: &amp;ReErased str;<br align="left"/>let mut _185: &amp;ReErased std::string::String;<br align="left"/>let _186: &amp;ReErased std::string::String;<br align="left"/>let _187: std::string::String;<br align="left"/>let _188: std::string::String;<br align="left"/>let mut _189: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _190: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _191: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _192: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _193: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _194: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _195: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _196: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _197: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _198: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _199: &amp;ReErased u8;<br align="left"/>let _200: &amp;ReErased u8;<br align="left"/>let mut _201: error::ErrorCode;<br align="left"/>let _202: u16;<br align="left"/>let _203: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _204: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _206: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _207: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _208: &amp;ReErased u16;<br align="left"/>let _209: &amp;ReErased u16;<br align="left"/>let mut _210: isize;<br align="left"/>let _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _212: !;<br align="left"/>let mut _213: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _214: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _215: bool;<br align="left"/>let mut _216: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _217: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _218: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _219: u64;<br align="left"/>let mut _220: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _221: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _222: ();<br align="left"/>let mut _223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _224: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _225: bool;<br align="left"/>let mut _226: u8;<br align="left"/>let mut _227: ();<br align="left"/>let _228: error::ErrorCode;<br align="left"/>let _229: ();<br align="left"/>let mut _230: &amp;ReErased str;<br align="left"/>let _231: &amp;ReErased str;<br align="left"/>let mut _232: &amp;ReErased std::string::String;<br align="left"/>let _233: &amp;ReErased std::string::String;<br align="left"/>let _234: std::string::String;<br align="left"/>let _235: std::string::String;<br align="left"/>let mut _236: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _237: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _238: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _239: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _240: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _241: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _242: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _243: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _244: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _245: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _246: &amp;ReErased error::ErrorCode;<br align="left"/>let _247: &amp;ReErased error::ErrorCode;<br align="left"/>let _248: ();<br align="left"/>let mut _249: &amp;ReErased str;<br align="left"/>let _250: &amp;ReErased str;<br align="left"/>let mut _251: &amp;ReErased std::string::String;<br align="left"/>let _252: &amp;ReErased std::string::String;<br align="left"/>let _253: std::string::String;<br align="left"/>let _254: std::string::String;<br align="left"/>let mut _255: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _256: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _257: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _258: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _259: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _260: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _261: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _262: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _263: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _264: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _265: &amp;ReErased u8;<br align="left"/>let _266: &amp;ReErased u8;<br align="left"/>let mut _267: error::ErrorCode;<br align="left"/>let mut _268: isize;<br align="left"/>let _269: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _270: !;<br align="left"/>let mut _271: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _272: ();<br align="left"/>let _273: ();<br align="left"/>let mut _274: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _275: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _276: bool;<br align="left"/>let mut _277: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _278: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: ();<br align="left"/>let _281: error::ErrorCode;<br align="left"/>let _282: ();<br align="left"/>let mut _283: &amp;ReErased str;<br align="left"/>let _284: &amp;ReErased str;<br align="left"/>let mut _285: &amp;ReErased std::string::String;<br align="left"/>let _286: &amp;ReErased std::string::String;<br align="left"/>let _287: std::string::String;<br align="left"/>let _288: std::string::String;<br align="left"/>let mut _289: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _290: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _291: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _292: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _293: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _294: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _295: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _296: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _297: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _298: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _299: &amp;ReErased error::ErrorCode;<br align="left"/>let _300: &amp;ReErased error::ErrorCode;<br align="left"/>let _301: ();<br align="left"/>let mut _302: &amp;ReErased str;<br align="left"/>let _303: &amp;ReErased str;<br align="left"/>let mut _304: error::ErrorCode;<br align="left"/>let mut _305: isize;<br align="left"/>let _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _307: !;<br align="left"/>let mut _308: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _309: ();<br align="left"/>let _310: usize;<br align="left"/>let mut _311: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _312: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _313: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _314: &amp;ReErased state::user::User;<br align="left"/>let mut _315: u16;<br align="left"/>let mut _316: Closure(DefId(0:555 ~ drift[d311]::controller::orders::place_spot_order::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; std::result::Result&lt;usize, error::ErrorCode&gt;, []), (&amp;ReErased mut &amp;ReErased mut state::user::User, &amp;ReErased u16)]);<br align="left"/>let mut _317: &amp;ReErased mut &amp;ReErased mut state::user::User;<br align="left"/>let mut _318: &amp;ReErased u16;<br align="left"/>let mut _319: isize;<br align="left"/>let _320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _321: !;<br align="left"/>let mut _322: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _323: usize;<br align="left"/>let _324: state::spot_market::SpotBalanceType;<br align="left"/>let _325: usize;<br align="left"/>let mut _326: usize;<br align="left"/>let mut _327: bool;<br align="left"/>let _328: u128;<br align="left"/>let mut _329: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _330: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _331: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _332: usize;<br align="left"/>let mut _333: usize;<br align="left"/>let mut _334: bool;<br align="left"/>let mut _335: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _336: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _337: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _338: isize;<br align="left"/>let _339: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _340: !;<br align="left"/>let mut _341: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _342: u128;<br align="left"/>let _343: i128;<br align="left"/>let mut _344: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _345: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _346: u128;<br align="left"/>let mut _347: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _348: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _349: isize;<br align="left"/>let _350: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _351: !;<br align="left"/>let mut _352: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _353: i128;<br align="left"/>let _354: state::oracle::OraclePriceData;<br align="left"/>let mut _355: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _356: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _357: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _358: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _359: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _360: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _361: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _362: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _363: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _364: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _365: isize;<br align="left"/>let _366: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _367: !;<br align="left"/>let mut _368: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _369: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _370: controller::position::PositionDirection;<br align="left"/>let _371: u64;<br align="left"/>let mut _372: (controller::position::PositionDirection, u64);<br align="left"/>let _373: ();<br align="left"/>let mut _374: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _375: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _376: bool;<br align="left"/>let mut _377: u64;<br align="left"/>let mut _378: u64;<br align="left"/>let mut _379: ();<br align="left"/>let _380: error::ErrorCode;<br align="left"/>let _381: ();<br align="left"/>let mut _382: &amp;ReErased str;<br align="left"/>let _383: &amp;ReErased str;<br align="left"/>let mut _384: &amp;ReErased std::string::String;<br align="left"/>let _385: &amp;ReErased std::string::String;<br align="left"/>let _386: std::string::String;<br align="left"/>let _387: std::string::String;<br align="left"/>let mut _388: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _389: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _390: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _391: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _392: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _393: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _394: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _395: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _396: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _397: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _398: &amp;ReErased error::ErrorCode;<br align="left"/>let _399: &amp;ReErased error::ErrorCode;<br align="left"/>let _400: ();<br align="left"/>let mut _401: &amp;ReErased str;<br align="left"/>let _402: &amp;ReErased str;<br align="left"/>let mut _403: &amp;ReErased std::string::String;<br align="left"/>let _404: &amp;ReErased std::string::String;<br align="left"/>let _405: std::string::String;<br align="left"/>let _406: std::string::String;<br align="left"/>let mut _407: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _408: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _409: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _410: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _411: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _412: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _413: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _414: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _415: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _416: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _417: &amp;ReErased u64;<br align="left"/>let _418: &amp;ReErased u64;<br align="left"/>let mut _419: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _420: &amp;ReErased u64;<br align="left"/>let _421: &amp;ReErased u64;<br align="left"/>let mut _422: error::ErrorCode;<br align="left"/>let mut _423: isize;<br align="left"/>let _424: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _425: !;<br align="left"/>let mut _426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _427: ();<br align="left"/>let _428: u64;<br align="left"/>let mut _429: bool;<br align="left"/>let mut _430: u64;<br align="left"/>let mut _431: bool;<br align="left"/>let mut _432: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _433: bool;<br align="left"/>let mut _434: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _435: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _436: &amp;ReErased state::user::User;<br align="left"/>let mut _437: u16;<br align="left"/>let mut _438: controller::position::PositionDirection;<br align="left"/>let mut _439: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _440: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _441: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _442: isize;<br align="left"/>let _443: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _444: !;<br align="left"/>let mut _445: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _446: u64;<br align="left"/>let mut _447: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _448: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _449: u64;<br align="left"/>let mut _450: u64;<br align="left"/>let mut _451: isize;<br align="left"/>let _452: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _453: !;<br align="left"/>let mut _454: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _455: u64;<br align="left"/>let _456: ();<br align="left"/>let mut _457: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _458: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _459: bool;<br align="left"/>let mut _460: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _461: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _462: u64;<br align="left"/>let mut _463: u64;<br align="left"/>let mut _464: isize;<br align="left"/>let _465: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _466: !;<br align="left"/>let mut _467: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _468: bool;<br align="left"/>let mut _469: ();<br align="left"/>let _470: error::ErrorCode;<br align="left"/>let _471: ();<br align="left"/>let mut _472: &amp;ReErased str;<br align="left"/>let _473: &amp;ReErased str;<br align="left"/>let mut _474: &amp;ReErased std::string::String;<br align="left"/>let _475: &amp;ReErased std::string::String;<br align="left"/>let _476: std::string::String;<br align="left"/>let _477: std::string::String;<br align="left"/>let mut _478: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _479: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _480: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _481: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _482: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _483: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _484: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _485: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _486: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _487: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _488: &amp;ReErased error::ErrorCode;<br align="left"/>let _489: &amp;ReErased error::ErrorCode;<br align="left"/>let _490: ();<br align="left"/>let mut _491: &amp;ReErased str;<br align="left"/>let _492: &amp;ReErased str;<br align="left"/>let mut _493: &amp;ReErased std::string::String;<br align="left"/>let _494: &amp;ReErased std::string::String;<br align="left"/>let _495: std::string::String;<br align="left"/>let _496: std::string::String;<br align="left"/>let mut _497: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _498: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _499: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _500: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _501: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _502: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _503: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _504: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _505: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _506: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _507: &amp;ReErased u64;<br align="left"/>let _508: &amp;ReErased u64;<br align="left"/>let mut _509: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _510: &amp;ReErased u64;<br align="left"/>let _511: &amp;ReErased u64;<br align="left"/>let mut _512: error::ErrorCode;<br align="left"/>let mut _513: isize;<br align="left"/>let _514: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _515: !;<br align="left"/>let mut _516: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _517: ();<br align="left"/>let _518: controller::position::PositionDirection;<br align="left"/>let mut _519: bool;<br align="left"/>let mut _520: i128;<br align="left"/>let mut _521: controller::position::PositionDirection;<br align="left"/>let mut _522: u64;<br align="left"/>let mut _523: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _524: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _525: u64;<br align="left"/>let mut _526: isize;<br align="left"/>let _527: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _528: !;<br align="left"/>let mut _529: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _530: u64;<br align="left"/>let _531: i64;<br align="left"/>let _532: i64;<br align="left"/>let _533: u8;<br align="left"/>let mut _534: (i64, i64, u8);<br align="left"/>let mut _535: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64, u8)&gt;;<br align="left"/>let mut _536: std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt;;<br align="left"/>let mut _537: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let _538: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _539: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _540: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _541: u64;<br align="left"/>let mut _542: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _543: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _544: u8;<br align="left"/>let mut _545: isize;<br align="left"/>let _546: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _547: !;<br align="left"/>let mut _548: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _549: (i64, i64, u8);<br align="left"/>let _550: ();<br align="left"/>let mut _551: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _552: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _553: bool;<br align="left"/>let mut _554: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _555: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _556: ();<br align="left"/>let _557: error::ErrorCode;<br align="left"/>let _558: ();<br align="left"/>let mut _559: &amp;ReErased str;<br align="left"/>let _560: &amp;ReErased str;<br align="left"/>let mut _561: &amp;ReErased std::string::String;<br align="left"/>let _562: &amp;ReErased std::string::String;<br align="left"/>let _563: std::string::String;<br align="left"/>let _564: std::string::String;<br align="left"/>let mut _565: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _566: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _567: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _568: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _569: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _570: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _571: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _572: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _573: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _574: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _575: &amp;ReErased error::ErrorCode;<br align="left"/>let _576: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _577: error::ErrorCode;<br align="left"/>let mut _578: isize;<br align="left"/>let _579: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _580: !;<br align="left"/>let mut _581: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _582: ();<br align="left"/>let _583: ();<br align="left"/>let mut _584: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _585: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _586: bool;<br align="left"/>let mut _587: u16;<br align="left"/>let mut _588: ();<br align="left"/>let _589: error::ErrorCode;<br align="left"/>let _590: ();<br align="left"/>let mut _591: &amp;ReErased str;<br align="left"/>let _592: &amp;ReErased str;<br align="left"/>let mut _593: &amp;ReErased std::string::String;<br align="left"/>let _594: &amp;ReErased std::string::String;<br align="left"/>let _595: std::string::String;<br align="left"/>let _596: std::string::String;<br align="left"/>let mut _597: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _598: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _599: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _600: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _601: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _602: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _603: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _604: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _605: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _606: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _607: &amp;ReErased error::ErrorCode;<br align="left"/>let _608: &amp;ReErased error::ErrorCode;<br align="left"/>let _609: ();<br align="left"/>let mut _610: &amp;ReErased str;<br align="left"/>let _611: &amp;ReErased str;<br align="left"/>let mut _612: error::ErrorCode;<br align="left"/>let mut _613: isize;<br align="left"/>let _614: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _615: !;<br align="left"/>let mut _616: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _617: ();<br align="left"/>let _618: ();<br align="left"/>let mut _619: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _620: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _621: bool;<br align="left"/>let mut _622: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _623: &amp;ReErased state::user::MarketType;<br align="left"/>let _624: state::user::MarketType;<br align="left"/>let mut _625: ();<br align="left"/>let _626: error::ErrorCode;<br align="left"/>let _627: ();<br align="left"/>let mut _628: &amp;ReErased str;<br align="left"/>let _629: &amp;ReErased str;<br align="left"/>let mut _630: &amp;ReErased std::string::String;<br align="left"/>let _631: &amp;ReErased std::string::String;<br align="left"/>let _632: std::string::String;<br align="left"/>let _633: std::string::String;<br align="left"/>let mut _634: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _635: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _636: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _637: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _638: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _639: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _640: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _641: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _642: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _643: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _644: &amp;ReErased error::ErrorCode;<br align="left"/>let _645: &amp;ReErased error::ErrorCode;<br align="left"/>let _646: ();<br align="left"/>let mut _647: &amp;ReErased str;<br align="left"/>let _648: &amp;ReErased str;<br align="left"/>let mut _649: error::ErrorCode;<br align="left"/>let mut _650: isize;<br align="left"/>let _651: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _652: !;<br align="left"/>let mut _653: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _654: ();<br align="left"/>let mut _655: u8;<br align="left"/>let _656: bool;<br align="left"/>let mut _657: bool;<br align="left"/>let mut _658: u8;<br align="left"/>let mut _659: u8;<br align="left"/>let mut _660: bool;<br align="left"/>let mut _661: bool;<br align="left"/>let mut _662: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _663: state::user::OrderBitFlag;<br align="left"/>let _664: state::user::Order;<br align="left"/>let mut _665: state::user::OrderStatus;<br align="left"/>let mut _666: state::user::OrderType;<br align="left"/>let mut _667: state::user::MarketType;<br align="left"/>let mut _668: u64;<br align="left"/>let mut _669: u32;<br align="left"/>let _670: u32;<br align="left"/>let mut _671: u32;<br align="left"/>let mut _672: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _673: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _674: u32;<br align="left"/>let mut _675: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _676: u8;<br align="left"/>let mut _677: u16;<br align="left"/>let mut _678: u64;<br align="left"/>let mut _679: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _680: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _681: u64;<br align="left"/>let mut _682: u64;<br align="left"/>let mut _683: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _684: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _685: controller::position::PositionDirection;<br align="left"/>let mut _686: isize;<br align="left"/>let _687: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _688: !;<br align="left"/>let mut _689: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _690: u64;<br align="left"/>let mut _691: controller::position::PositionDirection;<br align="left"/>let mut _692: u64;<br align="left"/>let mut _693: controller::position::PositionDirection;<br align="left"/>let mut _694: bool;<br align="left"/>let mut _695: u64;<br align="left"/>let mut _696: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _697: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _698: u64;<br align="left"/>let mut _699: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _700: u64;<br align="left"/>let mut _701: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _702: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _703: controller::position::PositionDirection;<br align="left"/>let mut _704: isize;<br align="left"/>let _705: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _706: !;<br align="left"/>let mut _707: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _708: u64;<br align="left"/>let mut _709: state::user::OrderTriggerCondition;<br align="left"/>let mut _710: bool;<br align="left"/>let mut _711: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _712: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _713: state::order_params::PostOnlyParam;<br align="left"/>let mut _714: i32;<br align="left"/>let mut _715: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _716: bool;<br align="left"/>let mut _717: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _718: i64;<br align="left"/>let mut _719: i64;<br align="left"/>let mut _720: u8;<br align="left"/>let mut _721: i64;<br align="left"/>let mut _722: u8;<br align="left"/>let mut _723: u64;<br align="left"/>let mut _724: u8;<br align="left"/>let mut _725: [u8; 1_usize];<br align="left"/>let _726: ();<br align="left"/>let mut _727: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _728: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _729: &amp;ReErased state::user::Order;<br align="left"/>let _730: &amp;ReErased state::user::Order;<br align="left"/>let mut _731: u64;<br align="left"/>let mut _732: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _733: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _734: u64;<br align="left"/>let mut _735: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _736: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _737: isize;<br align="left"/>let _738: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _739: !;<br align="left"/>let mut _740: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _741: ();<br align="left"/>let _742: bool;<br align="left"/>let mut _743: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _744: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _745: &amp;ReErased state::user::Order;<br align="left"/>let _746: &amp;ReErased state::user::Order;<br align="left"/>let mut _747: i64;<br align="left"/>let mut _748: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _749: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _750: i128;<br align="left"/>let mut _751: isize;<br align="left"/>let _752: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _753: !;<br align="left"/>let mut _754: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _755: i64;<br align="left"/>let mut _756: i64;<br align="left"/>let _757: usize;<br align="left"/>let mut _758: usize;<br align="left"/>let mut _759: bool;<br align="left"/>let mut _760: i64;<br align="left"/>let _761: usize;<br align="left"/>let mut _762: usize;<br align="left"/>let mut _763: bool;<br align="left"/>let mut _764: isize;<br align="left"/>let _765: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _766: !;<br align="left"/>let mut _767: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _768: bool;<br align="left"/>let _769: ();<br align="left"/>let mut _770: &amp;ReErased mut state::user::User;<br align="left"/>let mut _771: bool;<br align="left"/>let mut _772: &amp;ReErased state::user::Order;<br align="left"/>let mut _773: state::user::Order;<br align="left"/>let _774: usize;<br align="left"/>let mut _775: usize;<br align="left"/>let mut _776: bool;<br align="left"/>let _777: usize;<br align="left"/>let mut _778: usize;<br align="left"/>let mut _779: bool;<br align="left"/>let mut _780: (u8, bool);<br align="left"/>let _781: ();<br align="left"/>let mut _782: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _783: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _784: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _785: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _786: usize;<br align="left"/>let mut _787: usize;<br align="left"/>let mut _788: bool;<br align="left"/>let mut _789: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _790: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _791: u64;<br align="left"/>let mut _792: bool;<br align="left"/>let mut _793: &amp;ReErased state::user::Order;<br align="left"/>let mut _794: isize;<br align="left"/>let _795: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _796: !;<br align="left"/>let mut _797: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _798: ();<br align="left"/>let _799: ();<br align="left"/>let mut _800: &amp;ReErased mut state::order_params::PlaceOrderOptions;<br align="left"/>let mut _801: bool;<br align="left"/>let _802: ();<br align="left"/>let mut _803: bool;<br align="left"/>let _804: ();<br align="left"/>let mut _805: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _806: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _807: &amp;ReErased state::user::User;<br align="left"/>let mut _808: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _809: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _810: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _811: bool;<br align="left"/>let mut _812: isize;<br align="left"/>let _813: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _814: !;<br align="left"/>let mut _815: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _816: ();<br align="left"/>let _817: ();<br align="left"/>let mut _818: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _819: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _820: &amp;ReErased state::user::User;<br align="left"/>let mut _821: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _822: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _823: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _824: isize;<br align="left"/>let _825: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _826: !;<br align="left"/>let mut _827: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _828: ();<br align="left"/>let _829: ();<br align="left"/>let mut _830: bool;<br align="left"/>let _831: ();<br align="left"/>let mut _832: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _833: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _834: &amp;ReErased state::user::Order;<br align="left"/>let _835: &amp;ReErased state::user::Order;<br align="left"/>let _836: usize;<br align="left"/>let mut _837: usize;<br align="left"/>let mut _838: bool;<br align="left"/>let mut _839: i64;<br align="left"/>let mut _840: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _841: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _842: i128;<br align="left"/>let mut _843: isize;<br align="left"/>let _844: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _845: !;<br align="left"/>let mut _846: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _847: i64;<br align="left"/>let mut _848: isize;<br align="left"/>let _849: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _850: !;<br align="left"/>let mut _851: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _852: ();<br align="left"/>let _853: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _854: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let _855: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _856: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _857: (std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, std::option::Option&lt;state::user::Order&gt;, std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, std::option::Option&lt;state::user::Order&gt;);<br align="left"/>let mut _858: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _859: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _860: &amp;ReErased state::user::Order;<br align="left"/>let _861: &amp;ReErased state::user::Order;<br align="left"/>let _862: state::events::OrderActionRecord;<br align="left"/>let mut _863: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::events::OrderActionRecord&gt;;<br align="left"/>let mut _864: std::result::Result&lt;state::events::OrderActionRecord, error::ErrorCode&gt;;<br align="left"/>let mut _865: i64;<br align="left"/>let mut _866: state::events::OrderAction;<br align="left"/>let mut _867: state::events::OrderActionExplanation;<br align="left"/>let mut _868: u16;<br align="left"/>let mut _869: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _870: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _871: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _872: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _873: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _874: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _875: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _876: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _877: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _878: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _879: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _880: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _881: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _882: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _883: i64;<br align="left"/>let mut _884: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _885: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _886: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _887: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _888: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _889: isize;<br align="left"/>let _890: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _891: !;<br align="left"/>let mut _892: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _893: state::events::OrderActionRecord;<br align="left"/>let _894: ();<br align="left"/>let mut _895: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _896: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _897: state::events::OrderActionRecord;<br align="left"/>let mut _898: isize;<br align="left"/>let _899: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _900: !;<br align="left"/>let mut _901: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _902: ();<br align="left"/>let _903: state::events::OrderRecord;<br align="left"/>let mut _904: i64;<br align="left"/>let mut _905: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _906: state::user::Order;<br align="left"/>let _907: usize;<br align="left"/>let mut _908: usize;<br align="left"/>let mut _909: bool;<br align="left"/>let _910: ();<br align="left"/>let mut _911: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _912: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _913: state::events::OrderRecord;<br align="left"/>let mut _914: isize;<br align="left"/>let _915: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _916: !;<br align="left"/>let mut _917: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _918: ();<br align="left"/>let _919: ();<br align="left"/>let mut _920: &amp;ReErased mut state::user::User;<br align="left"/>let mut _921: u64;<br align="left"/>let mut _922: ();<br align="left"/>let mut _923: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _924: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _925: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _926: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _927: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _928: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _929: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _930: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _931: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _932: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _933: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _934: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _935: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _936: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _937: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _938: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _939: isize;<br align="left"/>let mut _940: isize;<br align="left"/>let mut _941: isize;<br align="left"/>let mut _942: isize;<br align="left"/>let mut _943: isize;<br align="left"/>debug state =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug user_key =&gt; _3;<br align="left"/>debug perp_market_map =&gt; _4;<br align="left"/>debug spot_market_map =&gt; _5;<br align="left"/>debug oracle_map =&gt; _6;<br align="left"/>debug clock =&gt; _7;<br align="left"/>debug params =&gt; _8;<br align="left"/>debug options =&gt; _9;<br align="left"/>debug now =&gt; _10;<br align="left"/>debug slot =&gt; _11;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug error_code =&gt; _31;<br align="left"/>debug res =&gt; _38;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug error_code =&gt; _83;<br align="left"/>debug res =&gt; _90;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug max_ts =&gt; _112;<br align="left"/>debug max_ts =&gt; _114;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug res =&gt; _137;<br align="left"/>debug new_order_index =&gt; _154;<br align="left"/>debug residual =&gt; _165;<br align="left"/>debug val =&gt; _168;<br align="left"/>debug user_order_id_already_used =&gt; _172;<br align="left"/>debug res =&gt; _188;<br align="left"/>debug market_index =&gt; _202;<br align="left"/>debug spot_market =&gt; _203;<br align="left"/>debug residual =&gt; _211;<br align="left"/>debug val =&gt; _214;<br align="left"/>debug force_reduce_only =&gt; _215;<br align="left"/>debug step_size =&gt; _219;<br align="left"/>debug error_code =&gt; _228;<br align="left"/>debug res =&gt; _235;<br align="left"/>debug res =&gt; _254;<br align="left"/>debug residual =&gt; _269;<br align="left"/>debug val =&gt; _272;<br align="left"/>debug error_code =&gt; _281;<br align="left"/>debug res =&gt; _288;<br align="left"/>debug residual =&gt; _306;<br align="left"/>debug val =&gt; _309;<br align="left"/>debug spot_position_index =&gt; _310;<br align="left"/>debug residual =&gt; _320;<br align="left"/>debug val =&gt; _323;<br align="left"/>debug balance_type =&gt; _324;<br align="left"/>debug token_amount =&gt; _328;<br align="left"/>debug residual =&gt; _339;<br align="left"/>debug val =&gt; _342;<br align="left"/>debug signed_token_amount =&gt; _343;<br align="left"/>debug residual =&gt; _350;<br align="left"/>debug val =&gt; _353;<br align="left"/>debug oracle_price_data =&gt; _354;<br align="left"/>debug residual =&gt; _366;<br align="left"/>debug val =&gt; _369;<br align="left"/>debug existing_position_direction =&gt; _370;<br align="left"/>debug order_base_asset_amount =&gt; _371;<br align="left"/>debug error_code =&gt; _380;<br align="left"/>debug res =&gt; _387;<br align="left"/>debug res =&gt; _406;<br align="left"/>debug residual =&gt; _424;<br align="left"/>debug val =&gt; _427;<br align="left"/>debug base_asset_amount =&gt; _428;<br align="left"/>debug residual =&gt; _443;<br align="left"/>debug val =&gt; _446;<br align="left"/>debug residual =&gt; _452;<br align="left"/>debug val =&gt; _455;<br align="left"/>debug residual =&gt; _465;<br align="left"/>debug val =&gt; _468;<br align="left"/>debug error_code =&gt; _470;<br align="left"/>debug res =&gt; _477;<br align="left"/>debug res =&gt; _496;<br align="left"/>debug residual =&gt; _514;<br align="left"/>debug val =&gt; _517;<br align="left"/>debug existing_position_direction =&gt; _518;<br align="left"/>debug residual =&gt; _527;<br align="left"/>debug val =&gt; _530;<br align="left"/>debug auction_start_price =&gt; _531;<br align="left"/>debug auction_end_price =&gt; _532;<br align="left"/>debug auction_duration =&gt; _533;<br align="left"/>debug residual =&gt; _546;<br align="left"/>debug val =&gt; _549;<br align="left"/>debug error_code =&gt; _557;<br align="left"/>debug res =&gt; _564;<br align="left"/>debug residual =&gt; _579;<br align="left"/>debug val =&gt; _582;<br align="left"/>debug error_code =&gt; _589;<br align="left"/>debug res =&gt; _596;<br align="left"/>debug residual =&gt; _614;<br align="left"/>debug val =&gt; _617;<br align="left"/>debug error_code =&gt; _626;<br align="left"/>debug res =&gt; _633;<br align="left"/>debug residual =&gt; _651;<br align="left"/>debug val =&gt; _654;<br align="left"/>debug bit_flags =&gt; _655;<br align="left"/>debug reduce_only =&gt; _656;<br align="left"/>debug new_order =&gt; _664;<br align="left"/>debug current_id =&gt; _670;<br align="left"/>debug residual =&gt; _687;<br align="left"/>debug val =&gt; _690;<br align="left"/>debug residual =&gt; _705;<br align="left"/>debug val =&gt; _708;<br align="left"/>debug residual =&gt; _738;<br align="left"/>debug val =&gt; _741;<br align="left"/>debug risk_increasing =&gt; _742;<br align="left"/>debug residual =&gt; _752;<br align="left"/>debug val =&gt; _755;<br align="left"/>debug residual =&gt; _765;<br align="left"/>debug val =&gt; _768;<br align="left"/>debug residual =&gt; _795;<br align="left"/>debug val =&gt; _798;<br align="left"/>debug residual =&gt; _813;<br align="left"/>debug val =&gt; _816;<br align="left"/>debug residual =&gt; _825;<br align="left"/>debug val =&gt; _828;<br align="left"/>debug residual =&gt; _844;<br align="left"/>debug val =&gt; _847;<br align="left"/>debug residual =&gt; _849;<br align="left"/>debug val =&gt; _852;<br align="left"/>debug taker =&gt; _853;<br align="left"/>debug taker_order =&gt; _854;<br align="left"/>debug maker =&gt; _855;<br align="left"/>debug maker_order =&gt; _856;<br align="left"/>debug order_action_record =&gt; _862;<br align="left"/>debug residual =&gt; _890;<br align="left"/>debug val =&gt; _893;<br align="left"/>debug residual =&gt; _899;<br align="left"/>debug val =&gt; _902;<br align="left"/>debug order_record =&gt; _903;<br align="left"/>debug residual =&gt; _915;<br align="left"/>debug val =&gt; _918;<br align="left"/>>;
    bb0__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((*_7).4: i64)<br/>StorageLive(_11)<br/>_11 = ((*_7).0: u64)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_2)<br/>StorageLive(_16)<br/>_16 = &amp;(*_4)<br/>StorageLive(_17)<br/>_17 = &amp;(*_5)<br/>StorageLive(_18)<br/>_18 = &amp;mut (*_6)<br/>StorageLive(_19)<br/>_19 = ((*_1).11: u32)<br/></td></tr><tr><td align="left">_14 = validate_user_not_being_liquidated(move _15, move _16, move _17, move _18, move _19)</td></tr></table>>];
    bb1__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb2__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_20 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb3__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_13 as Continue).0: ())<br/>_12 = _24<br/>StorageDead(_24)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;(*_2)<br/></td></tr><tr><td align="left">_28 = User::is_bankrupt(move _29)</td></tr></table>>];
    bb4__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb6__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb8__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = error::ErrorCode::UserBankrupt<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_938 = const _<br/>_42 = &amp;(*_938)<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_31<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _49)</td></tr></table>>];
    bb9__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = ()<br/>_27 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _30)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = [move _48]<br/>StorageDead(_48)<br/>_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_39 = Arguments::&lt;'_&gt;::new_v1(move _40, move _44)</td></tr></table>>];
    bb11__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = format(move _39)</td></tr></table>>];
    bb12__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>_37 = move _38<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/></td></tr><tr><td align="left">_34 = &lt;String as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb13__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_33 = &amp;(*_34)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_32 = solana_program::log::sol_log(move _33)</td></tr></table>>];
    bb14__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb15__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageLive(_51)<br/>_51 = _31<br/>_27 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _51)<br/>StorageDead(_51)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb17__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_52 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb18__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_26 as Continue).0: ())<br/>_25 = _56<br/>StorageDead(_56)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = (_9.1: bool)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb19__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb20__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut (*_2)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;_3<br/>_63 = &amp;(*_64)<br/>StorageLive(_65)<br/>_65 = &amp;(*_4)<br/>StorageLive(_66)<br/>_66 = &amp;(*_5)<br/>StorageLive(_67)<br/>_67 = &amp;mut (*_6)<br/>StorageLive(_68)<br/>_68 = _10<br/>StorageLive(_69)<br/>_69 = _11<br/></td></tr><tr><td align="left">_61 = expire_orders(move _62, move _63, move _65, move _66, move _67, move _68, move _69)</td></tr></table>>];
    bb22__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_57 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb24__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_70 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb25__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_60 as Continue).0: ())<br/>_59 = _74<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>_57 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb27__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_2)<br/></td></tr><tr><td align="left">_76 = User::is_reduce_only(move _77)</td></tr></table>>];
    bb29__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb30__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = (_8.7: bool)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb31__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ()<br/>_80 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = error::ErrorCode::UserReduceOnly<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_937 = const _<br/>_94 = &amp;(*_937)<br/>_93 = &amp;(*_94)<br/>_92 = move _93 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_93)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_83<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _101)</td></tr></table>>];
    bb33__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = [move _100]<br/>StorageDead(_100)<br/>_98 = &amp;_99<br/>_97 = &amp;(*_98)<br/>_96 = move _97 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_91 = Arguments::&lt;'_&gt;::new_v1(move _92, move _96)</td></tr></table>>];
    bb34__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = format(move _91)</td></tr></table>>];
    bb35__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/>_89 = move _90<br/>StorageDead(_90)<br/>_88 = &amp;_89<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = &lt;String as Deref&gt;::deref(move _87)</td></tr></table>>];
    bb36__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_85 = &amp;(*_86)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_84 = solana_program::log::sol_log(move _85)</td></tr></table>>];
    bb37__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb38__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = const &quot;order must be reduce only&quot;<br/>_104 = &amp;(*_105)<br/></td></tr><tr><td align="left">_103 = solana_program::log::sol_log(move _104)</td></tr></table>>];
    bb39__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageLive(_106)<br/>_106 = _83<br/>_80 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _106)<br/>StorageDead(_106)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb41__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_107 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb42__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_79 as Continue).0: ())<br/>_78 = _111<br/>StorageDead(_111)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>_75 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb44__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_75 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_112)<br/>_113 = discriminant((_8.10: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb47__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_115 = discriminant((_8.0: state::user::OrderType))<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb48__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = (((_8.10: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>_112 = _114<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_112 = const 0_i64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = _10<br/></td></tr><tr><td align="left">_117 = &lt;i64 as SafeMath&gt;::safe_add(move _118, const 30_i64)</td></tr></table>>];
    bb51__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb52__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_119 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb53__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_116 as Continue).0: i64)<br/>_112 = _123<br/>StorageDead(_123)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_122)<br/>_122 = _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb55__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = _112<br/>_125 = Ne(move _126, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb57__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _112<br/>StorageLive(_129)<br/>_129 = _10<br/>_127 = Lt(move _128, move _129)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb58__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_923 = const _<br/>_141 = &amp;(*_923)<br/>_140 = &amp;(*_141)<br/>_139 = move _140 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_140)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_112<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _148)</td></tr></table>>];
    bb59__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = &amp;_10<br/>_151 = &amp;(*_152)<br/></td></tr><tr><td align="left">_150 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _151)</td></tr></table>>];
    bb60__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_146 = [move _147, move _150]<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>_145 = &amp;_146<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_138 = Arguments::&lt;'_&gt;::new_v1(move _139, move _143)</td></tr></table>>];
    bb61__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = format(move _138)</td></tr></table>>];
    bb62__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>_136 = move _137<br/>StorageDead(_137)<br/>_135 = &amp;_136<br/>_134 = &amp;(*_135)<br/></td></tr><tr><td align="left">_133 = &lt;String as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb63__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_131 = solana_program::log::sol_log(move _132)</td></tr></table>>];
    bb64__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb65__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageLive(_153)<br/>_153 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _153)<br/>StorageDead(_153)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_124 = const ()<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;((*_2).5: [state::user::Order; 32])<br/>_160 = move _161 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_159 = core::slice::&lt;impl [Order]&gt;::iter(move _160)</td></tr></table>>];
    bb69__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_158 = &amp;mut _159<br/>StorageDead(_160)<br/>StorageLive(_162)<br/>_162 = {closure@programs/drift/src/controller/orders.rs:3451:19: 3451:26}<br/></td></tr><tr><td align="left">_157 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/controller/orders.rs:3451:19: 3451:26}&gt;(move _158, move _162)</td></tr></table>>];
    bb70__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_158)<br/>StorageLive(_163)<br/>_163 = error::ErrorCode::MaxNumberOfOrders<br/></td></tr><tr><td align="left">_156 = Option::&lt;usize&gt;::ok_or::&lt;error::ErrorCode&gt;(move _157, move _163)</td></tr></table>>];
    bb71__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb72__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_164 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _164)</td></tr></table>>];
    bb73__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_155 as Continue).0: usize)<br/>_154 = _168<br/>StorageDead(_168)<br/>StorageDead(_159)<br/>StorageDead(_155)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = (_8.3: u8)<br/>_170 = Gt(move _171, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb74__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_167)<br/>_167 = _165<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _167)</td></tr></table>>];
    bb75__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_159)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = &amp;((*_2).5: [state::user::Order; 32])<br/>_175 = move _176 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_174 = core::slice::&lt;impl [Order]&gt;::iter(move _175)</td></tr></table>>];
    bb77__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_169 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_173 = &amp;mut _174<br/>StorageDead(_175)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;_8<br/>_177 = {closure@programs/drift/src/controller/orders.rs:3458:23: 3458:30} { params: move _178 }<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_172 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/controller/orders.rs:3458:23: 3458:30}&gt;(move _173, move _177)</td></tr></table>>];
    bb79__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_173)<br/>StorageDead(_174)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;_172<br/></td></tr><tr><td align="left">_179 = Option::&lt;usize&gt;::is_some(move _180)</td></tr></table>>];
    bb80__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">switchInt(move _179)</td></tr></table>>];
    bb81__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_924 = const _<br/>_192 = &amp;(*_924)<br/>_191 = &amp;(*_192)<br/>_190 = move _191 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_191)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;(_8.3: u8)<br/>_199 = &amp;(*_200)<br/></td></tr><tr><td align="left">_198 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _199)</td></tr></table>>];
    bb82__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_197 = [move _198]<br/>StorageDead(_198)<br/>_196 = &amp;_197<br/>_195 = &amp;(*_196)<br/>_194 = move _195 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">_189 = Arguments::&lt;'_&gt;::new_v1(move _190, move _194)</td></tr></table>>];
    bb83__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_188 = format(move _189)</td></tr></table>>];
    bb84__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_200)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_192)<br/>_187 = move _188<br/>StorageDead(_188)<br/>_186 = &amp;_187<br/>_185 = &amp;(*_186)<br/></td></tr><tr><td align="left">_184 = &lt;String as Deref&gt;::deref(move _185)</td></tr></table>>];
    bb85__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_183 = &amp;(*_184)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_182 = solana_program::log::sol_log(move _183)</td></tr></table>>];
    bb86__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/></td></tr><tr><td align="left">drop(_187)</td></tr></table>>];
    bb87__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageLive(_201)<br/>_201 = error::ErrorCode::UserOrderIdAlreadyInUse<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _201)<br/>StorageDead(_201)<br/>StorageDead(_179)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_169 = const ()<br/>StorageDead(_179)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/>StorageLive(_202)<br/>_202 = (_8.6: u16)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;(*_5)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;_202<br/>_208 = &amp;(*_209)<br/></td></tr><tr><td align="left">_206 = SpotMarketMap::&lt;'_&gt;::get_ref(move _207, move _208)</td></tr></table>>];
    bb90__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb91__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_210 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb92__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = move ((_205 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_204 = move _214<br/>StorageDead(_214)<br/>_203 = &amp;_204<br/>_941 = discriminant(_205)<br/>StorageDead(_209)<br/>StorageDead(_205)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = &amp;(*_203)<br/></td></tr><tr><td align="left">_217 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _218)</td></tr></table>>];
    bb93__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_213)<br/>_213 = _211<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _213)</td></tr></table>>];
    bb94__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/>_939 = discriminant(_205)<br/>StorageDead(_209)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_216 = &amp;(*_217)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_215 = SpotMarket::is_reduce_only(move _216)</td></tr></table>>];
    bb96__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_217)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;(*_203)<br/></td></tr><tr><td align="left">_220 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb97__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_219 = ((*_220).25: u64)<br/>StorageDead(_220)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = ((*_2).27: u8)<br/>_225 = Eq(move _226, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb98__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageLive(_227)<br/>_227 = ()<br/>_224 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _227)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageLive(_228)<br/>_228 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_936 = const _<br/>_239 = &amp;(*_936)<br/>_238 = &amp;(*_239)<br/>_237 = move _238 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_238)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_228<br/>_246 = &amp;(*_247)<br/></td></tr><tr><td align="left">_245 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _246)</td></tr></table>>];
    bb100__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_244 = [move _245]<br/>StorageDead(_245)<br/>_243 = &amp;_244<br/>_242 = &amp;(*_243)<br/>_241 = move _242 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">_236 = Arguments::&lt;'_&gt;::new_v1(move _237, move _241)</td></tr></table>>];
    bb101__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_235 = format(move _236)</td></tr></table>>];
    bb102__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_247)<br/>StorageDead(_244)<br/>StorageDead(_243)<br/>StorageDead(_239)<br/>_234 = move _235<br/>StorageDead(_235)<br/>_233 = &amp;_234<br/>_232 = &amp;(*_233)<br/></td></tr><tr><td align="left">_231 = &lt;String as Deref&gt;::deref(move _232)</td></tr></table>>];
    bb103__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_230 = &amp;(*_231)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_229 = solana_program::log::sol_log(move _230)</td></tr></table>>];
    bb104__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/></td></tr><tr><td align="left">drop(_234)</td></tr></table>>];
    bb105__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_935 = const _<br/>_258 = &amp;(*_935)<br/>_257 = &amp;(*_258)<br/>_256 = move _257 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_257)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = &amp;((*_2).27: u8)<br/>_265 = &amp;(*_266)<br/></td></tr><tr><td align="left">_264 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _265)</td></tr></table>>];
    bb106__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_263 = [move _264]<br/>StorageDead(_264)<br/>_262 = &amp;_263<br/>_261 = &amp;(*_262)<br/>_260 = move _261 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">_255 = Arguments::&lt;'_&gt;::new_v1(move _256, move _260)</td></tr></table>>];
    bb107__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">_254 = format(move _255)</td></tr></table>>];
    bb108__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageDead(_266)<br/>StorageDead(_263)<br/>StorageDead(_262)<br/>StorageDead(_258)<br/>_253 = move _254<br/>StorageDead(_254)<br/>_252 = &amp;_253<br/>_251 = &amp;(*_252)<br/></td></tr><tr><td align="left">_250 = &lt;String as Deref&gt;::deref(move _251)</td></tr></table>>];
    bb109__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_249 = &amp;(*_250)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">_248 = solana_program::log::sol_log(move _249)</td></tr></table>>];
    bb110__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/></td></tr><tr><td align="left">drop(_253)</td></tr></table>>];
    bb111__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageLive(_267)<br/>_267 = _228<br/>_224 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _267)<br/>StorageDead(_267)<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _224)</td></tr></table>>];
    bb113__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_268 = discriminant(_223)<br/></td></tr><tr><td align="left">switchInt(move _268)</td></tr></table>>];
    bb114__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_272)<br/>_272 = ((_223 as Continue).0: ())<br/>_222 = _272<br/>StorageDead(_272)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = &amp;(*_203)<br/></td></tr><tr><td align="left">_277 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _278)</td></tr></table>>];
    bb115__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_269)<br/>_269 = ((_223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_271)<br/>_271 = _269<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _271)</td></tr></table>>];
    bb116__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>_279 = discriminant(((*_277).45: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _279)</td></tr></table>>];
    bb118__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_276 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_276 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left">switchInt(move _276)</td></tr></table>>];
    bb121__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageLive(_280)<br/>_280 = ()<br/>_275 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _280)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageLive(_281)<br/>_281 = error::ErrorCode::MarketBeingInitialized<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_934 = const _<br/>_292 = &amp;(*_934)<br/>_291 = &amp;(*_292)<br/>_290 = move _291 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_291)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_300 = &amp;_281<br/>_299 = &amp;(*_300)<br/></td></tr><tr><td align="left">_298 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _299)</td></tr></table>>];
    bb123__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_297 = [move _298]<br/>StorageDead(_298)<br/>_296 = &amp;_297<br/>_295 = &amp;(*_296)<br/>_294 = move _295 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_289 = Arguments::&lt;'_&gt;::new_v1(move _290, move _294)</td></tr></table>>];
    bb124__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">_288 = format(move _289)</td></tr></table>>];
    bb125__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_300)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>_287 = move _288<br/>StorageDead(_288)<br/>_286 = &amp;_287<br/>_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_284 = &lt;String as Deref&gt;::deref(move _285)</td></tr></table>>];
    bb126__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">_283 = &amp;(*_284)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">_282 = solana_program::log::sol_log(move _283)</td></tr></table>>];
    bb127__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/></td></tr><tr><td align="left">drop(_287)</td></tr></table>>];
    bb128__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_282)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = const &quot;Market is being initialized&quot;<br/>_302 = &amp;(*_303)<br/></td></tr><tr><td align="left">_301 = solana_program::log::sol_log(move _302)</td></tr></table>>];
    bb129__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageLive(_304)<br/>_304 = _281<br/>_275 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _304)<br/>StorageDead(_304)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/></td></tr><tr><td align="left">_274 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _275)</td></tr></table>>];
    bb131__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>_305 = discriminant(_274)<br/></td></tr><tr><td align="left">switchInt(move _305)</td></tr></table>>];
    bb132__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_309)<br/>_309 = ((_274 as Continue).0: ())<br/>_273 = _309<br/>StorageDead(_309)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_314 = &amp;(*_2)<br/>StorageLive(_315)<br/>_315 = _202<br/></td></tr><tr><td align="left">_313 = User::get_spot_position_index(move _314, move _315)</td></tr></table>>];
    bb133__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_306)<br/>_306 = ((_274 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_308)<br/>_308 = _306<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _308)</td></tr></table>>];
    bb134__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_306)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>StorageDead(_314)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>_317 = &amp;mut _2<br/>StorageLive(_318)<br/>_318 = &amp;_202<br/>_316 = {closure@programs/drift/src/controller/orders.rs:3486:18: 3486:21} { user: move _317, market_index: move _318 }<br/>StorageDead(_318)<br/>StorageDead(_317)<br/></td></tr><tr><td align="left">_312 = std::result::Result::&lt;usize, error::ErrorCode&gt;::or_else::&lt;error::ErrorCode, {closure@programs/drift/src/controller/orders.rs:3486:18: 3486:21}&gt;(move _313, move _316)</td></tr></table>>];
    bb136__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">_311 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _312)</td></tr></table>>];
    bb137__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>_319 = discriminant(_311)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb138__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = ((_311 as Continue).0: usize)<br/>_310 = _323<br/>StorageDead(_323)<br/>StorageDead(_311)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = _310<br/>_326 = Len(((*_2).3: [state::user::SpotPosition; 8]))<br/>_327 = Lt(_325, _326)<br/></td></tr><tr><td align="left">assert(move _327, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _326, _325)</td></tr></table>>];
    bb139__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_320)<br/>_320 = ((_311 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_322)<br/>_322 = _320<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _322)</td></tr></table>>];
    bb140__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">_324 = (((*_2).3: [state::user::SpotPosition; 8])[_325].5: state::spot_market::SpotBalanceType)<br/>StorageDead(_325)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = _310<br/>_333 = Len(((*_2).3: [state::user::SpotPosition; 8]))<br/>_334 = Lt(_332, _333)<br/></td></tr><tr><td align="left">assert(move _334, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _333, _332)</td></tr></table>>];
    bb142__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_331 = &amp;((*_2).3: [state::user::SpotPosition; 8])[_332]<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = &amp;(*_203)<br/></td></tr><tr><td align="left">_336 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _337)</td></tr></table>>];
    bb143__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">_335 = &amp;(*_336)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">_330 = SpotPosition::get_token_amount(move _331, move _335)</td></tr></table>>];
    bb144__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_329 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _330)</td></tr></table>>];
    bb145__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>_338 = discriminant(_329)<br/></td></tr><tr><td align="left">switchInt(move _338)</td></tr></table>>];
    bb146__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_342)<br/>_342 = ((_329 as Continue).0: u128)<br/>_328 = _342<br/>StorageDead(_342)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>StorageDead(_329)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = _328<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>_348 = &amp;_324<br/>_347 = &amp;(*_348)<br/></td></tr><tr><td align="left">_345 = get_signed_token_amount(move _346, move _347)</td></tr></table>>];
    bb147__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>_339 = ((_329 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_341)<br/>_341 = _339<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _341)</td></tr></table>>];
    bb148__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_339)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_346)<br/></td></tr><tr><td align="left">_344 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _345)</td></tr></table>>];
    bb150__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_349 = discriminant(_344)<br/></td></tr><tr><td align="left">switchInt(move _349)</td></tr></table>>];
    bb151__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_353)<br/>_353 = ((_344 as Continue).0: i128)<br/>_343 = _353<br/>StorageDead(_353)<br/>StorageDead(_348)<br/>StorageDead(_344)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = &amp;mut (*_6)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = &amp;(*_203)<br/></td></tr><tr><td align="left">_363 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _364)</td></tr></table>>];
    bb152__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_350)<br/>_350 = ((_344 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_352)<br/>_352 = _350<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _352)</td></tr></table>>];
    bb153__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_350)<br/>StorageDead(_348)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">_362 = &amp;(*_363)<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">_361 = SpotMarket::oracle_id(move _362)</td></tr></table>>];
    bb155__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>_360 = &amp;_361<br/>_359 = &amp;(*_360)<br/></td></tr><tr><td align="left">_357 = OracleMap::&lt;'_&gt;::get_price_data(move _358, move _359)</td></tr></table>>];
    bb156__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_358)<br/></td></tr><tr><td align="left">_356 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _357)</td></tr></table>>];
    bb157__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>_365 = discriminant(_356)<br/></td></tr><tr><td align="left">switchInt(move _365)</td></tr></table>>];
    bb158__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_369)<br/>_369 = ((_356 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_355 = _369<br/>StorageDead(_369)<br/>_354 = (*_355)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_377 = (_8.4: u64)<br/>StorageLive(_378)<br/>_378 = _219<br/>_376 = Ge(move _377, move _378)<br/></td></tr><tr><td align="left">switchInt(move _376)</td></tr></table>>];
    bb159__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_366)<br/>_366 = ((_356 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_368)<br/>_368 = _366<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _368)</td></tr></table>>];
    bb160__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_366)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_377)<br/>StorageLive(_379)<br/>_379 = ()<br/>_375 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _379)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_377)<br/>StorageLive(_380)<br/>_380 = error::ErrorCode::InvalidOrderSizeTooSmall<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_933 = const _<br/>_391 = &amp;(*_933)<br/>_390 = &amp;(*_391)<br/>_389 = move _390 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_390)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>_399 = &amp;_380<br/>_398 = &amp;(*_399)<br/></td></tr><tr><td align="left">_397 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _398)</td></tr></table>>];
    bb163__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>_396 = [move _397]<br/>StorageDead(_397)<br/>_395 = &amp;_396<br/>_394 = &amp;(*_395)<br/>_393 = move _394 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_394)<br/></td></tr><tr><td align="left">_388 = Arguments::&lt;'_&gt;::new_v1(move _389, move _393)</td></tr></table>>];
    bb164__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">_387 = format(move _388)</td></tr></table>>];
    bb165__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_399)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>StorageDead(_391)<br/>_386 = move _387<br/>StorageDead(_387)<br/>_385 = &amp;_386<br/>_384 = &amp;(*_385)<br/></td></tr><tr><td align="left">_383 = &lt;String as Deref&gt;::deref(move _384)</td></tr></table>>];
    bb166__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">_382 = &amp;(*_383)<br/>StorageDead(_384)<br/></td></tr><tr><td align="left">_381 = solana_program::log::sol_log(move _382)</td></tr></table>>];
    bb167__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/></td></tr><tr><td align="left">drop(_386)</td></tr></table>>];
    bb168__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_385)<br/>StorageDead(_383)<br/>StorageDead(_381)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>_932 = const _<br/>_410 = &amp;(*_932)<br/>_409 = &amp;(*_410)<br/>_408 = move _409 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_409)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = &amp;(_8.4: u64)<br/>_417 = &amp;(*_418)<br/></td></tr><tr><td align="left">_416 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _417)</td></tr></table>>];
    bb169__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>_421 = &amp;_219<br/>_420 = &amp;(*_421)<br/></td></tr><tr><td align="left">_419 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _420)</td></tr></table>>];
    bb170__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>_415 = [move _416, move _419]<br/>StorageDead(_419)<br/>StorageDead(_416)<br/>_414 = &amp;_415<br/>_413 = &amp;(*_414)<br/>_412 = move _413 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">_407 = Arguments::&lt;'_&gt;::new_v1(move _408, move _412)</td></tr></table>>];
    bb171__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">_406 = format(move _407)</td></tr></table>>];
    bb172__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_421)<br/>StorageDead(_418)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageDead(_410)<br/>_405 = move _406<br/>StorageDead(_406)<br/>_404 = &amp;_405<br/>_403 = &amp;(*_404)<br/></td></tr><tr><td align="left">_402 = &lt;String as Deref&gt;::deref(move _403)</td></tr></table>>];
    bb173__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">_401 = &amp;(*_402)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">_400 = solana_program::log::sol_log(move _401)</td></tr></table>>];
    bb174__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/></td></tr><tr><td align="left">drop(_405)</td></tr></table>>];
    bb175__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_404)<br/>StorageDead(_402)<br/>StorageDead(_400)<br/>StorageLive(_422)<br/>_422 = _380<br/>_375 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _422)<br/>StorageDead(_422)<br/>StorageDead(_380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _375)</td></tr></table>>];
    bb177__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>_423 = discriminant(_374)<br/></td></tr><tr><td align="left">switchInt(move _423)</td></tr></table>>];
    bb178__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_427)<br/>_427 = ((_374 as Continue).0: ())<br/>_373 = _427<br/>StorageDead(_427)<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>_430 = (_8.4: u64)<br/>_429 = Eq(move _430, const _)<br/></td></tr><tr><td align="left">switchInt(move _429)</td></tr></table>>];
    bb179__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_424)<br/>_424 = ((_374 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_426)<br/>_426 = _424<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _426)</td></tr></table>>];
    bb180__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_424)<br/>StorageDead(_374)<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>_432 = &amp;_8<br/></td></tr><tr><td align="left">_431 = order_params::OrderParams::is_trigger_order(move _432)</td></tr></table>>];
    bb182__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left">switchInt(move _431)</td></tr></table>>];
    bb184__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageLive(_433)<br/>_433 = (_8.7: bool)<br/></td></tr><tr><td align="left">switchInt(move _433)</td></tr></table>>];
    bb185__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;(*_2)<br/>StorageLive(_437)<br/>_437 = (_8.6: u16)<br/>StorageLive(_438)<br/>_438 = (_8.2: controller::position::PositionDirection)<br/>StorageLive(_439)<br/>_439 = &amp;(*_4)<br/>StorageLive(_440)<br/>_440 = &amp;(*_5)<br/>StorageLive(_441)<br/>_441 = &amp;mut (*_6)<br/></td></tr><tr><td align="left">_435 = math::orders::calculate_max_spot_order_size(move _436, move _437, move _438, move _439, move _440, move _441)</td></tr></table>>];
    bb187__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_434 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _435)</td></tr></table>>];
    bb188__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_442 = discriminant(_434)<br/></td></tr><tr><td align="left">switchInt(move _442)</td></tr></table>>];
    bb189__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_446)<br/>_446 = ((_434 as Continue).0: u64)<br/>_428 = _446<br/>StorageDead(_446)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageLive(_443)<br/>_443 = ((_434 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_445)<br/>_445 = _443<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _445)</td></tr></table>>];
    bb191__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>_449 = (_8.4: u64)<br/>StorageLive(_450)<br/>_450 = _219<br/></td></tr><tr><td align="left">_448 = math::orders::standardize_base_asset_amount(move _449, move _450)</td></tr></table>>];
    bb193__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_449)<br/></td></tr><tr><td align="left">_447 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _448)</td></tr></table>>];
    bb194__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>_451 = discriminant(_447)<br/></td></tr><tr><td align="left">switchInt(move _451)</td></tr></table>>];
    bb195__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_455)<br/>_455 = ((_447 as Continue).0: u64)<br/>_428 = _455<br/>StorageDead(_455)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_452)<br/>_452 = ((_447 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_454)<br/>_454 = _452<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _454)</td></tr></table>>];
    bb197__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>StorageDead(_452)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_431)<br/>StorageDead(_429)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>_462 = _428<br/>StorageLive(_463)<br/>_463 = _219<br/></td></tr><tr><td align="left">_461 = math::orders::is_multiple_of_step_size(move _462, move _463)</td></tr></table>>];
    bb199__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageDead(_462)<br/></td></tr><tr><td align="left">_460 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _461)</td></tr></table>>];
    bb200__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>_464 = discriminant(_460)<br/></td></tr><tr><td align="left">switchInt(move _464)</td></tr></table>>];
    bb201__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_468)<br/>_468 = ((_460 as Continue).0: bool)<br/>_459 = _468<br/>StorageDead(_468)<br/></td></tr><tr><td align="left">switchInt(move _459)</td></tr></table>>];
    bb202__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageLive(_465)<br/>_465 = ((_460 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_467)<br/>_467 = _465<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _467)</td></tr></table>>];
    bb203__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_465)<br/>StorageDead(_460)<br/>StorageDead(_459)<br/>StorageDead(_458)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageLive(_469)<br/>_469 = ()<br/>_458 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _469)<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageLive(_470)<br/>_470 = error::ErrorCode::InvalidOrderNotStepSizeMultiple<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>_931 = const _<br/>_481 = &amp;(*_931)<br/>_480 = &amp;(*_481)<br/>_479 = move _480 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_480)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>_489 = &amp;_470<br/>_488 = &amp;(*_489)<br/></td></tr><tr><td align="left">_487 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _488)</td></tr></table>>];
    bb206__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>_486 = [move _487]<br/>StorageDead(_487)<br/>_485 = &amp;_486<br/>_484 = &amp;(*_485)<br/>_483 = move _484 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_484)<br/></td></tr><tr><td align="left">_478 = Arguments::&lt;'_&gt;::new_v1(move _479, move _483)</td></tr></table>>];
    bb207__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>StorageDead(_479)<br/></td></tr><tr><td align="left">_477 = format(move _478)</td></tr></table>>];
    bb208__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>StorageDead(_489)<br/>StorageDead(_486)<br/>StorageDead(_485)<br/>StorageDead(_481)<br/>_476 = move _477<br/>StorageDead(_477)<br/>_475 = &amp;_476<br/>_474 = &amp;(*_475)<br/></td></tr><tr><td align="left">_473 = &lt;String as Deref&gt;::deref(move _474)</td></tr></table>>];
    bb209__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">_472 = &amp;(*_473)<br/>StorageDead(_474)<br/></td></tr><tr><td align="left">_471 = solana_program::log::sol_log(move _472)</td></tr></table>>];
    bb210__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/></td></tr><tr><td align="left">drop(_476)</td></tr></table>>];
    bb211__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>StorageDead(_475)<br/>StorageDead(_473)<br/>StorageDead(_471)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>_930 = const _<br/>_500 = &amp;(*_930)<br/>_499 = &amp;(*_500)<br/>_498 = move _499 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_499)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = &amp;_428<br/>_507 = &amp;(*_508)<br/></td></tr><tr><td align="left">_506 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _507)</td></tr></table>>];
    bb212__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_507)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = &amp;_219<br/>_510 = &amp;(*_511)<br/></td></tr><tr><td align="left">_509 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _510)</td></tr></table>>];
    bb213__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_510)<br/>_505 = [move _506, move _509]<br/>StorageDead(_509)<br/>StorageDead(_506)<br/>_504 = &amp;_505<br/>_503 = &amp;(*_504)<br/>_502 = move _503 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_503)<br/></td></tr><tr><td align="left">_497 = Arguments::&lt;'_&gt;::new_v1(move _498, move _502)</td></tr></table>>];
    bb214__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_498)<br/></td></tr><tr><td align="left">_496 = format(move _497)</td></tr></table>>];
    bb215__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/>StorageDead(_511)<br/>StorageDead(_508)<br/>StorageDead(_505)<br/>StorageDead(_504)<br/>StorageDead(_500)<br/>_495 = move _496<br/>StorageDead(_496)<br/>_494 = &amp;_495<br/>_493 = &amp;(*_494)<br/></td></tr><tr><td align="left">_492 = &lt;String as Deref&gt;::deref(move _493)</td></tr></table>>];
    bb216__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">_491 = &amp;(*_492)<br/>StorageDead(_493)<br/></td></tr><tr><td align="left">_490 = solana_program::log::sol_log(move _491)</td></tr></table>>];
    bb217__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/></td></tr><tr><td align="left">drop(_495)</td></tr></table>>];
    bb218__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>StorageDead(_494)<br/>StorageDead(_492)<br/>StorageDead(_490)<br/>StorageLive(_512)<br/>_512 = _470<br/>_458 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _512)<br/>StorageDead(_512)<br/>StorageDead(_470)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/></td></tr><tr><td align="left">_457 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _458)</td></tr></table>>];
    bb220__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>_513 = discriminant(_457)<br/></td></tr><tr><td align="left">switchInt(move _513)</td></tr></table>>];
    bb221__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_517)<br/>_517 = ((_457 as Continue).0: ())<br/>_456 = _517<br/>StorageDead(_517)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>_520 = _343<br/>_519 = Ge(move _520, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _519)</td></tr></table>>];
    bb222__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_514)<br/>_514 = ((_457 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_516)<br/>_516 = _514<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _516)</td></tr></table>>];
    bb223__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>_518 = controller::position::PositionDirection::Long<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>_518 = controller::position::PositionDirection::Short<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>StorageLive(_521)<br/>_521 = _518<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>_525 = _428<br/></td></tr><tr><td align="left">_524 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _525)</td></tr></table>>];
    bb227__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/></td></tr><tr><td align="left">_523 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _524)</td></tr></table>>];
    bb228__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>_526 = discriminant(_523)<br/></td></tr><tr><td align="left">switchInt(move _526)</td></tr></table>>];
    bb229__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_530)<br/>_530 = ((_523 as Continue).0: u64)<br/>_522 = _530<br/>StorageDead(_530)<br/>_372 = (move _521, move _522)<br/>StorageDead(_522)<br/>StorageDead(_521)<br/>StorageDead(_518)<br/>StorageDead(_428)<br/>StorageLive(_370)<br/>_370 = (_372.0: controller::position::PositionDirection)<br/>StorageLive(_371)<br/>_371 = (_372.1: u64)<br/>StorageDead(_523)<br/>StorageDead(_372)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>_538 = &amp;_8<br/>_537 = &amp;(*_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>_540 = &amp;_354<br/>_539 = &amp;(*_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>_543 = &amp;(*_203)<br/></td></tr><tr><td align="left">_542 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _543)</td></tr></table>>];
    bb230__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_527)<br/>_527 = ((_523 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_529)<br/>_529 = _527<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _529)</td></tr></table>>];
    bb231__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/>StorageDead(_527)<br/>StorageDead(_522)<br/>StorageDead(_521)<br/>StorageDead(_518)<br/>StorageDead(_428)<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>_541 = ((*_542).26: u64)<br/>StorageLive(_544)<br/>_544 = ((*_1).18: u8)<br/></td></tr><tr><td align="left">_536 = get_auction_params(move _537, move _539, move _541, move _544)</td></tr></table>>];
    bb233__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_544)<br/>StorageDead(_541)<br/>StorageDead(_539)<br/>StorageDead(_537)<br/></td></tr><tr><td align="left">_535 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as Try&gt;::branch(move _536)</td></tr></table>>];
    bb234__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>_545 = discriminant(_535)<br/></td></tr><tr><td align="left">switchInt(move _545)</td></tr></table>>];
    bb235__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageLive(_549)<br/>_549 = ((_535 as Continue).0: (i64, i64, u8))<br/>_534 = _549<br/>StorageDead(_549)<br/>StorageLive(_531)<br/>_531 = (_534.0: i64)<br/>StorageLive(_532)<br/>_532 = (_534.1: i64)<br/>StorageLive(_533)<br/>_533 = (_534.2: u8)<br/>StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_538)<br/>StorageDead(_535)<br/>StorageDead(_534)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>_555 = &amp;(*_203)<br/></td></tr><tr><td align="left">_554 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _555)</td></tr></table>>];
    bb236__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_546)<br/>_546 = ((_535 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_548)<br/>_548 = _546<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _548)</td></tr></table>>];
    bb237__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>StorageDead(_546)<br/>StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_538)<br/>StorageDead(_535)<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/>_553 = ((*_554).43: bool)<br/></td></tr><tr><td align="left">switchInt(move _553)</td></tr></table>>];
    bb239__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>StorageLive(_556)<br/>_556 = ()<br/>_552 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _556)<br/>StorageDead(_556)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>StorageLive(_557)<br/>_557 = error::ErrorCode::SpotOrdersDisabled<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>_929 = const _<br/>_568 = &amp;(*_929)<br/>_567 = &amp;(*_568)<br/>_566 = move _567 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_567)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>StorageLive(_576)<br/>_576 = &amp;_557<br/>_575 = &amp;(*_576)<br/></td></tr><tr><td align="left">_574 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _575)</td></tr></table>>];
    bb241__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>_573 = [move _574]<br/>StorageDead(_574)<br/>_572 = &amp;_573<br/>_571 = &amp;(*_572)<br/>_570 = move _571 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_571)<br/></td></tr><tr><td align="left">_565 = Arguments::&lt;'_&gt;::new_v1(move _566, move _570)</td></tr></table>>];
    bb242__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>StorageDead(_566)<br/></td></tr><tr><td align="left">_564 = format(move _565)</td></tr></table>>];
    bb243__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageDead(_576)<br/>StorageDead(_573)<br/>StorageDead(_572)<br/>StorageDead(_568)<br/>_563 = move _564<br/>StorageDead(_564)<br/>_562 = &amp;_563<br/>_561 = &amp;(*_562)<br/></td></tr><tr><td align="left">_560 = &lt;String as Deref&gt;::deref(move _561)</td></tr></table>>];
    bb244__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">_559 = &amp;(*_560)<br/>StorageDead(_561)<br/></td></tr><tr><td align="left">_558 = solana_program::log::sol_log(move _559)</td></tr></table>>];
    bb245__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_559)<br/></td></tr><tr><td align="left">drop(_563)</td></tr></table>>];
    bb246__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_563)<br/>StorageDead(_562)<br/>StorageDead(_560)<br/>StorageDead(_558)<br/>StorageLive(_577)<br/>_577 = _557<br/>_552 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _577)<br/>StorageDead(_577)<br/>StorageDead(_557)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/></td></tr><tr><td align="left">_551 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _552)</td></tr></table>>];
    bb248__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/>_578 = discriminant(_551)<br/></td></tr><tr><td align="left">switchInt(move _578)</td></tr></table>>];
    bb249__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_582)<br/>_582 = ((_551 as Continue).0: ())<br/>_550 = _582<br/>StorageDead(_582)<br/>StorageDead(_551)<br/>StorageDead(_550)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>_587 = (_8.6: u16)<br/>_586 = Ne(move _587, const _)<br/></td></tr><tr><td align="left">switchInt(move _586)</td></tr></table>>];
    bb250__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_579)<br/>_579 = ((_551 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_581)<br/>_581 = _579<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _581)</td></tr></table>>];
    bb251__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageDead(_579)<br/>StorageDead(_551)<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_587)<br/>StorageLive(_588)<br/>_588 = ()<br/>_585 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _588)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_587)<br/>StorageLive(_589)<br/>_589 = error::ErrorCode::InvalidOrderBaseQuoteAsset<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>StorageLive(_600)<br/>_928 = const _<br/>_600 = &amp;(*_928)<br/>_599 = &amp;(*_600)<br/>_598 = move _599 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_599)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>_608 = &amp;_589<br/>_607 = &amp;(*_608)<br/></td></tr><tr><td align="left">_606 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _607)</td></tr></table>>];
    bb254__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>_605 = [move _606]<br/>StorageDead(_606)<br/>_604 = &amp;_605<br/>_603 = &amp;(*_604)<br/>_602 = move _603 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_603)<br/></td></tr><tr><td align="left">_597 = Arguments::&lt;'_&gt;::new_v1(move _598, move _602)</td></tr></table>>];
    bb255__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/>StorageDead(_598)<br/></td></tr><tr><td align="left">_596 = format(move _597)</td></tr></table>>];
    bb256__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/>StorageDead(_608)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/>StorageDead(_600)<br/>_595 = move _596<br/>StorageDead(_596)<br/>_594 = &amp;_595<br/>_593 = &amp;(*_594)<br/></td></tr><tr><td align="left">_592 = &lt;String as Deref&gt;::deref(move _593)</td></tr></table>>];
    bb257__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">_591 = &amp;(*_592)<br/>StorageDead(_593)<br/></td></tr><tr><td align="left">_590 = solana_program::log::sol_log(move _591)</td></tr></table>>];
    bb258__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/></td></tr><tr><td align="left">drop(_595)</td></tr></table>>];
    bb259__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>StorageDead(_594)<br/>StorageDead(_592)<br/>StorageDead(_590)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>_611 = const &quot;can not place order for quote asset&quot;<br/>_610 = &amp;(*_611)<br/></td></tr><tr><td align="left">_609 = solana_program::log::sol_log(move _610)</td></tr></table>>];
    bb260__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_610)<br/>StorageDead(_611)<br/>StorageDead(_609)<br/>StorageLive(_612)<br/>_612 = _589<br/>_585 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _612)<br/>StorageDead(_612)<br/>StorageDead(_589)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/></td></tr><tr><td align="left">_584 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _585)</td></tr></table>>];
    bb262__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>_613 = discriminant(_584)<br/></td></tr><tr><td align="left">switchInt(move _613)</td></tr></table>>];
    bb263__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_617)<br/>_617 = ((_584 as Continue).0: ())<br/>_583 = _617<br/>StorageDead(_617)<br/>StorageDead(_584)<br/>StorageDead(_583)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>_622 = &amp;(_8.1: state::user::MarketType)<br/>StorageLive(_623)<br/>_927 = const _<br/>_623 = &amp;(*_927)<br/></td></tr><tr><td align="left">_621 = &lt;state::user::MarketType as PartialEq&gt;::eq(move _622, move _623)</td></tr></table>>];
    bb264__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_614)<br/>_614 = ((_584 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_616)<br/>_616 = _614<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _616)</td></tr></table>>];
    bb265__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_616)<br/>StorageDead(_614)<br/>StorageDead(_584)<br/>StorageDead(_583)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left">switchInt(move _621)</td></tr></table>>];
    bb267__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_623)<br/>StorageDead(_622)<br/>StorageLive(_625)<br/>_625 = ()<br/>_620 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _625)<br/>StorageDead(_625)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_623)<br/>StorageDead(_622)<br/>StorageLive(_626)<br/>_626 = error::ErrorCode::InvalidOrderMarketType<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>_926 = const _<br/>_637 = &amp;(*_926)<br/>_636 = &amp;(*_637)<br/>_635 = move _636 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_636)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>_645 = &amp;_626<br/>_644 = &amp;(*_645)<br/></td></tr><tr><td align="left">_643 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _644)</td></tr></table>>];
    bb269__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>_642 = [move _643]<br/>StorageDead(_643)<br/>_641 = &amp;_642<br/>_640 = &amp;(*_641)<br/>_639 = move _640 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">_634 = Arguments::&lt;'_&gt;::new_v1(move _635, move _639)</td></tr></table>>];
    bb270__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>StorageDead(_635)<br/></td></tr><tr><td align="left">_633 = format(move _634)</td></tr></table>>];
    bb271__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_634)<br/>StorageDead(_645)<br/>StorageDead(_642)<br/>StorageDead(_641)<br/>StorageDead(_637)<br/>_632 = move _633<br/>StorageDead(_633)<br/>_631 = &amp;_632<br/>_630 = &amp;(*_631)<br/></td></tr><tr><td align="left">_629 = &lt;String as Deref&gt;::deref(move _630)</td></tr></table>>];
    bb272__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">_628 = &amp;(*_629)<br/>StorageDead(_630)<br/></td></tr><tr><td align="left">_627 = solana_program::log::sol_log(move _628)</td></tr></table>>];
    bb273__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_628)<br/></td></tr><tr><td align="left">drop(_632)</td></tr></table>>];
    bb274__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_631)<br/>StorageDead(_629)<br/>StorageDead(_627)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>_648 = const &quot;must be spot order&quot;<br/>_647 = &amp;(*_648)<br/></td></tr><tr><td align="left">_646 = solana_program::log::sol_log(move _647)</td></tr></table>>];
    bb275__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageDead(_648)<br/>StorageDead(_646)<br/>StorageLive(_649)<br/>_649 = _626<br/>_620 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _649)<br/>StorageDead(_649)<br/>StorageDead(_626)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/></td></tr><tr><td align="left">_619 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _620)</td></tr></table>>];
    bb277__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>_650 = discriminant(_619)<br/></td></tr><tr><td align="left">switchInt(move _650)</td></tr></table>>];
    bb278__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageLive(_654)<br/>_654 = ((_619 as Continue).0: ())<br/>_618 = _654<br/>StorageDead(_654)<br/>StorageDead(_619)<br/>StorageDead(_618)<br/>StorageLive(_655)<br/>_655 = const 0_u8<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>_657 = (_8.7: bool)<br/></td></tr><tr><td align="left">switchInt(move _657)</td></tr></table>>];
    bb279__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageLive(_651)<br/>_651 = ((_619 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_653)<br/>_653 = _651<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _653)</td></tr></table>>];
    bb280__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>StorageDead(_651)<br/>StorageDead(_619)<br/>StorageDead(_618)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">_656 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">_656 = _215<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = _655<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>_662 = &amp;_8<br/></td></tr><tr><td align="left">_661 = order_params::OrderParams::is_trigger_order(move _662)</td></tr></table>>];
    bb284__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left">switchInt(move _661)</td></tr></table>>];
    bb285__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>_660 = _656<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>_660 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_661)<br/>StorageLive(_663)<br/>_663 = OrderBitFlag::NewTriggerReduceOnly<br/></td></tr><tr><td align="left">_658 = math::orders::set_order_bit_flag(move _659, move _660, move _663)</td></tr></table>>];
    bb288__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/>StorageDead(_660)<br/>StorageDead(_659)<br/>_655 = move _658<br/>StorageDead(_658)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>_665 = OrderStatus::Open<br/>StorageLive(_666)<br/>_666 = (_8.0: state::user::OrderType)<br/>StorageLive(_667)<br/>_667 = (_8.1: state::user::MarketType)<br/>StorageLive(_668)<br/>_668 = _11<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>_670 = ((*_2).15: u32)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>_674 = _670<br/></td></tr><tr><td align="left">_673 = core::num::&lt;impl u32&gt;::checked_add(move _674, const 1_u32)</td></tr></table>>];
    bb289__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/>StorageLive(_675)<br/>_675 = Option::&lt;u32&gt;::Some(const 1_u32)<br/></td></tr><tr><td align="left">_672 = Option::&lt;u32&gt;::or(move _673, move _675)</td></tr></table>>];
    bb290__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>StorageDead(_673)<br/></td></tr><tr><td align="left">_671 = Option::&lt;u32&gt;::unwrap(move _672)</td></tr></table>>];
    bb291__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>((*_2).15: u32) = move _671<br/>StorageDead(_671)<br/>_669 = _670<br/>StorageDead(_670)<br/>StorageLive(_676)<br/>_676 = (_8.3: u8)<br/>StorageLive(_677)<br/>_677 = (_8.6: u16)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>_681 = (_8.5: u64)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>_684 = &amp;(*_203)<br/></td></tr><tr><td align="left">_683 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _684)</td></tr></table>>];
    bb292__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>_682 = ((*_683).26: u64)<br/>StorageLive(_685)<br/>_685 = (_8.2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_680 = math::orders::standardize_price(move _681, move _682, move _685)</td></tr></table>>];
    bb293__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_685)<br/>StorageDead(_682)<br/>StorageDead(_681)<br/></td></tr><tr><td align="left">_679 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _680)</td></tr></table>>];
    bb294__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>_686 = discriminant(_679)<br/></td></tr><tr><td align="left">switchInt(move _686)</td></tr></table>>];
    bb295__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageLive(_690)<br/>_690 = ((_679 as Continue).0: u64)<br/>_678 = _690<br/>StorageDead(_690)<br/>StorageLive(_691)<br/>_691 = _370<br/>StorageLive(_692)<br/>_692 = _371<br/>StorageLive(_693)<br/>_693 = (_8.2: controller::position::PositionDirection)<br/>StorageLive(_694)<br/>_694 = _656<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_699 = (_8.11: std::option::Option&lt;u64&gt;)<br/></td></tr><tr><td align="left">_698 = Option::&lt;u64&gt;::unwrap_or(move _699, const 0_u64)</td></tr></table>>];
    bb296__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageLive(_687)<br/>_687 = ((_679 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_689)<br/>_689 = _687<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _689)</td></tr></table>>];
    bb297__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_689)<br/>StorageDead(_687)<br/>StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_676)<br/>StorageDead(_669)<br/>StorageDead(_668)<br/>StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb298__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>_702 = &amp;(*_203)<br/></td></tr><tr><td align="left">_701 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _702)</td></tr></table>>];
    bb299__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_702)<br/>_700 = ((*_701).26: u64)<br/>StorageLive(_703)<br/>_703 = (_8.2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_697 = math::orders::standardize_price(move _698, move _700, move _703)</td></tr></table>>];
    bb300__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>StorageDead(_700)<br/>StorageDead(_698)<br/></td></tr><tr><td align="left">_696 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _697)</td></tr></table>>];
    bb301__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/>_704 = discriminant(_696)<br/></td></tr><tr><td align="left">switchInt(move _704)</td></tr></table>>];
    bb302__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageLive(_708)<br/>_708 = ((_696 as Continue).0: u64)<br/>_695 = _708<br/>StorageDead(_708)<br/>StorageLive(_709)<br/>_709 = (_8.12: state::user::OrderTriggerCondition)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>_711 = &amp;(_8.8: state::order_params::PostOnlyParam)<br/>StorageLive(_712)<br/>_925 = const _<br/>_712 = &amp;(*_925)<br/></td></tr><tr><td align="left">_710 = &lt;PostOnlyParam as PartialEq&gt;::ne(move _711, move _712)</td></tr></table>>];
    bb303__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageLive(_705)<br/>_705 = ((_696 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_707)<br/>_707 = _705<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _707)</td></tr></table>>];
    bb304__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_707)<br/>StorageDead(_705)<br/>StorageDead(_695)<br/>StorageDead(_694)<br/>StorageDead(_693)<br/>StorageDead(_692)<br/>StorageDead(_691)<br/>StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_676)<br/>StorageDead(_669)<br/>StorageDead(_668)<br/>StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/>StorageDead(_701)<br/>StorageDead(_696)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/>StorageDead(_711)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>_715 = (_8.13: std::option::Option&lt;i32&gt;)<br/></td></tr><tr><td align="left">_714 = Option::&lt;i32&gt;::unwrap_or(move _715, const 0_i32)</td></tr></table>>];
    bb306__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>_717 = &amp;_8<br/></td></tr><tr><td align="left">_716 = order_params::OrderParams::is_immediate_or_cancel(move _717)</td></tr></table>>];
    bb307__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>StorageLive(_718)<br/>_718 = _531<br/>StorageLive(_719)<br/>_719 = _532<br/>StorageLive(_720)<br/>_720 = _533<br/>StorageLive(_721)<br/>_721 = _112<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>_723 = _11<br/></td></tr><tr><td align="left">_722 = math::orders::get_posted_slot_from_clock_slot(move _723)</td></tr></table>>];
    bb308__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_723)<br/>StorageLive(_724)<br/>_724 = _655<br/>StorageLive(_725)<br/>_725 = [const 0_u8; 1]<br/>_664 = Order { slot: move _668, price: move _678, base_asset_amount: move _692, base_asset_amount_filled: const 0_u64, quote_asset_amount_filled: const 0_u64, trigger_price: move _695, auction_start_price: move _718, auction_end_price: move _719, max_ts: move _721, oracle_price_offset: move _714, order_id: move _669, market_index: move _677, status: move _665, order_type: move _666, market_type: move _667, user_order_id: move _676, existing_position_direction: move _691, direction: move _693, reduce_only: move _694, post_only: move _710, immediate_or_cancel: move _716, trigger_condition: move _709, auction_duration: move _720, posted_slot_tail: move _722, bit_flags: move _724, padding: move _725 }<br/>StorageDead(_725)<br/>StorageDead(_724)<br/>StorageDead(_722)<br/>StorageDead(_721)<br/>StorageDead(_720)<br/>StorageDead(_719)<br/>StorageDead(_718)<br/>StorageDead(_716)<br/>StorageDead(_714)<br/>StorageDead(_710)<br/>StorageDead(_709)<br/>StorageDead(_695)<br/>StorageDead(_694)<br/>StorageDead(_693)<br/>StorageDead(_692)<br/>StorageDead(_691)<br/>StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_676)<br/>StorageDead(_669)<br/>StorageDead(_668)<br/>StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/>StorageDead(_701)<br/>StorageDead(_696)<br/>StorageDead(_683)<br/>StorageDead(_679)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>StorageLive(_730)<br/>_730 = &amp;_664<br/>_729 = &amp;(*_730)<br/>StorageLive(_731)<br/>StorageLive(_732)<br/>StorageLive(_733)<br/>_733 = &amp;(*_203)<br/></td></tr><tr><td align="left">_732 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _733)</td></tr></table>>];
    bb309__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_733)<br/>_731 = ((*_732).25: u64)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>StorageLive(_736)<br/>_736 = &amp;(*_203)<br/></td></tr><tr><td align="left">_735 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _736)</td></tr></table>>];
    bb310__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/>_734 = ((*_735).27: u64)<br/></td></tr><tr><td align="left">_728 = validate_spot_order(move _729, move _731, move _734)</td></tr></table>>];
    bb311__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_734)<br/>StorageDead(_731)<br/>StorageDead(_729)<br/></td></tr><tr><td align="left">_727 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _728)</td></tr></table>>];
    bb312__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_728)<br/>_737 = discriminant(_727)<br/></td></tr><tr><td align="left">switchInt(move _737)</td></tr></table>>];
    bb313__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageLive(_741)<br/>_741 = ((_727 as Continue).0: ())<br/>_726 = _741<br/>StorageDead(_741)<br/>StorageDead(_735)<br/>StorageDead(_732)<br/>StorageDead(_730)<br/>StorageDead(_727)<br/>StorageDead(_726)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>_746 = &amp;_664<br/>_745 = &amp;(*_746)<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>_750 = _343<br/></td></tr><tr><td align="left">_749 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _750)</td></tr></table>>];
    bb314__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageLive(_738)<br/>_738 = ((_727 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_740)<br/>_740 = _738<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _740)</td></tr></table>>];
    bb315__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>StorageDead(_738)<br/>StorageDead(_735)<br/>StorageDead(_732)<br/>StorageDead(_730)<br/>StorageDead(_727)<br/>StorageDead(_726)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_750)<br/></td></tr><tr><td align="left">_748 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _749)</td></tr></table>>];
    bb317__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_749)<br/>_751 = discriminant(_748)<br/></td></tr><tr><td align="left">switchInt(move _751)</td></tr></table>>];
    bb318__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageLive(_755)<br/>_755 = ((_748 as Continue).0: i64)<br/>_747 = _755<br/>StorageDead(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>_757 = _310<br/>_758 = Len(((*_2).3: [state::user::SpotPosition; 8]))<br/>_759 = Lt(_757, _758)<br/></td></tr><tr><td align="left">assert(move _759, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _758, _757)</td></tr></table>>];
    bb319__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageLive(_752)<br/>_752 = ((_748 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_754)<br/>_754 = _752<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _754)</td></tr></table>>];
    bb320__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_754)<br/>StorageDead(_752)<br/>StorageDead(_747)<br/>StorageDead(_745)<br/>StorageDead(_744)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb321__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">_756 = (((*_2).3: [state::user::SpotPosition; 8])[_757].1: i64)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>_761 = _310<br/>_762 = Len(((*_2).3: [state::user::SpotPosition; 8]))<br/>_763 = Lt(_761, _762)<br/></td></tr><tr><td align="left">assert(move _763, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _762, _761)</td></tr></table>>];
    bb322__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">_760 = (((*_2).3: [state::user::SpotPosition; 8])[_761].2: i64)<br/></td></tr><tr><td align="left">_744 = math::orders::is_new_order_risk_increasing(move _745, move _747, move _756, move _760)</td></tr></table>>];
    bb323__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_760)<br/>StorageDead(_756)<br/>StorageDead(_747)<br/>StorageDead(_745)<br/></td></tr><tr><td align="left">_743 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _744)</td></tr></table>>];
    bb324__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_744)<br/>_764 = discriminant(_743)<br/></td></tr><tr><td align="left">switchInt(move _764)</td></tr></table>>];
    bb325__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageLive(_768)<br/>_768 = ((_743 as Continue).0: bool)<br/>_742 = _768<br/>StorageDead(_768)<br/>StorageDead(_761)<br/>StorageDead(_757)<br/>StorageDead(_748)<br/>StorageDead(_746)<br/>StorageDead(_743)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>_770 = &amp;mut (*_2)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>_772 = &amp;_664<br/></td></tr><tr><td align="left">_771 = Order::has_auction(move _772)</td></tr></table>>];
    bb326__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageLive(_765)<br/>_765 = ((_743 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_767)<br/>_767 = _765<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _767)</td></tr></table>>];
    bb327__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_767)<br/>StorageDead(_765)<br/>StorageDead(_761)<br/>StorageDead(_757)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb328__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/></td></tr><tr><td align="left">_769 = User::increment_open_orders(move _770, move _771)</td></tr></table>>];
    bb329__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>StorageDead(_770)<br/>StorageDead(_769)<br/>StorageLive(_773)<br/>_773 = _664<br/>StorageLive(_774)<br/>_774 = _154<br/>_775 = Len(((*_2).5: [state::user::Order; 32]))<br/>_776 = Lt(_774, _775)<br/></td></tr><tr><td align="left">assert(move _776, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _775, _774)</td></tr></table>>];
    bb330__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">((*_2).5: [state::user::Order; 32])[_774] = move _773<br/>StorageDead(_773)<br/>StorageDead(_774)<br/>StorageLive(_777)<br/>_777 = _310<br/>_778 = Len(((*_2).3: [state::user::SpotPosition; 8]))<br/>_779 = Lt(_777, _778)<br/></td></tr><tr><td align="left">assert(move _779, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _778, _777)</td></tr></table>>];
    bb331__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">_780 = CheckedAdd((((*_2).3: [state::user::SpotPosition; 8])[_777].6: u8), const 1_u8)<br/></td></tr><tr><td align="left">assert(!move (_780.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, (((*_2).3: [state::user::SpotPosition; 8])[_777].6: u8), const 1_u8)</td></tr></table>>];
    bb332__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">(((*_2).3: [state::user::SpotPosition; 8])[_777].6: u8) = move (_780.0: u8)<br/>StorageDead(_777)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>_786 = _310<br/>_787 = Len(((*_2).3: [state::user::SpotPosition; 8]))<br/>_788 = Lt(_786, _787)<br/></td></tr><tr><td align="left">assert(move _788, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _787, _786)</td></tr></table>>];
    bb333__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">_785 = &amp;mut ((*_2).3: [state::user::SpotPosition; 8])[_786]<br/>_784 = &amp;mut (*_785)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>_790 = &amp;(_8.2: controller::position::PositionDirection)<br/>_789 = &amp;(*_790)<br/>StorageLive(_791)<br/>_791 = _371<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>_793 = &amp;_664<br/></td></tr><tr><td align="left">_792 = Order::update_open_bids_and_asks(move _793)</td></tr></table>>];
    bb334__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_793)<br/></td></tr><tr><td align="left">_783 = increase_spot_open_bids_and_asks(move _784, move _789, move _791, move _792)</td></tr></table>>];
    bb335__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_792)<br/>StorageDead(_791)<br/>StorageDead(_789)<br/>StorageDead(_784)<br/></td></tr><tr><td align="left">_782 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _783)</td></tr></table>>];
    bb336__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_783)<br/>_794 = discriminant(_782)<br/></td></tr><tr><td align="left">switchInt(move _794)</td></tr></table>>];
    bb337__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageLive(_798)<br/>_798 = ((_782 as Continue).0: ())<br/>_781 = _798<br/>StorageDead(_798)<br/>StorageDead(_790)<br/>StorageDead(_786)<br/>StorageDead(_785)<br/>StorageDead(_782)<br/>StorageDead(_781)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>_800 = &amp;mut _9<br/>StorageLive(_801)<br/>_801 = _742<br/></td></tr><tr><td align="left">_799 = PlaceOrderOptions::update_risk_increasing(move _800, move _801)</td></tr></table>>];
    bb338__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageLive(_795)<br/>_795 = ((_782 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_797)<br/>_797 = _795<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _797)</td></tr></table>>];
    bb339__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>StorageDead(_795)<br/>StorageDead(_790)<br/>StorageDead(_786)<br/>StorageDead(_785)<br/>StorageDead(_782)<br/>StorageDead(_781)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb340__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_800)<br/>StorageDead(_799)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>_803 = (_9.2: bool)<br/></td></tr><tr><td align="left">switchInt(move _803)</td></tr></table>>];
    bb341__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>_807 = &amp;(*_2)<br/>StorageLive(_808)<br/>_808 = &amp;(*_4)<br/>StorageLive(_809)<br/>_809 = &amp;(*_5)<br/>StorageLive(_810)<br/>_810 = &amp;mut (*_6)<br/>StorageLive(_811)<br/>_811 = (_9.3: bool)<br/></td></tr><tr><td align="left">_806 = math::margin::meets_place_order_margin_requirement(move _807, move _808, move _809, move _810, move _811)</td></tr></table>>];
    bb342__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>StorageDead(_810)<br/>StorageDead(_809)<br/>StorageDead(_808)<br/>StorageDead(_807)<br/></td></tr><tr><td align="left">_805 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _806)</td></tr></table>>];
    bb343__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/>_812 = discriminant(_805)<br/></td></tr><tr><td align="left">switchInt(move _812)</td></tr></table>>];
    bb344__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageLive(_816)<br/>_816 = ((_805 as Continue).0: ())<br/>_804 = _816<br/>StorageDead(_816)<br/>StorageDead(_805)<br/>StorageDead(_804)<br/>_802 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb345__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageLive(_813)<br/>_813 = ((_805 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_815)<br/>_815 = _813<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _815)</td></tr></table>>];
    bb346__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_815)<br/>StorageDead(_813)<br/>StorageDead(_805)<br/>StorageDead(_804)<br/>StorageDead(_803)<br/>StorageDead(_802)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb347__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">_802 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb348__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_803)<br/>StorageDead(_802)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>_820 = &amp;(*_2)<br/>StorageLive(_821)<br/>_821 = &amp;(*_4)<br/>StorageLive(_822)<br/>_822 = &amp;(*_5)<br/>StorageLive(_823)<br/>_823 = &amp;mut (*_6)<br/></td></tr><tr><td align="left">_819 = math::margin::validate_spot_margin_trading(move _820, move _821, move _822, move _823)</td></tr></table>>];
    bb349__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageDead(_822)<br/>StorageDead(_821)<br/>StorageDead(_820)<br/></td></tr><tr><td align="left">_818 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _819)</td></tr></table>>];
    bb350__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_819)<br/>_824 = discriminant(_818)<br/></td></tr><tr><td align="left">switchInt(move _824)</td></tr></table>>];
    bb351__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageLive(_828)<br/>_828 = ((_818 as Continue).0: ())<br/>_817 = _828<br/>StorageDead(_828)<br/>StorageDead(_818)<br/>StorageDead(_817)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>_830 = _215<br/></td></tr><tr><td align="left">switchInt(move _830)</td></tr></table>>];
    bb352__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageLive(_825)<br/>_825 = ((_818 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_827)<br/>_827 = _825<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _827)</td></tr></table>>];
    bb353__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>StorageDead(_825)<br/>StorageDead(_818)<br/>StorageDead(_817)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb354__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageLive(_831)<br/>StorageLive(_832)<br/>StorageLive(_833)<br/>StorageLive(_834)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>_836 = _154<br/>_837 = Len(((*_2).5: [state::user::Order; 32]))<br/>_838 = Lt(_836, _837)<br/></td></tr><tr><td align="left">assert(move _838, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _837, _836)</td></tr></table>>];
    bb355__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">_829 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb356__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">_835 = &amp;((*_2).5: [state::user::Order; 32])[_836]<br/>_834 = &amp;(*_835)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>_842 = _343<br/></td></tr><tr><td align="left">_841 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _842)</td></tr></table>>];
    bb357__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/></td></tr><tr><td align="left">_840 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _841)</td></tr></table>>];
    bb358__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>_843 = discriminant(_840)<br/></td></tr><tr><td align="left">switchInt(move _843)</td></tr></table>>];
    bb359__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageLive(_847)<br/>_847 = ((_840 as Continue).0: i64)<br/>_839 = _847<br/>StorageDead(_847)<br/></td></tr><tr><td align="left">_833 = validate_order_for_force_reduce_only(move _834, move _839)</td></tr></table>>];
    bb360__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageLive(_844)<br/>_844 = ((_840 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_846)<br/>_846 = _844<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _846)</td></tr></table>>];
    bb361__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/>StorageDead(_844)<br/>StorageDead(_839)<br/>StorageDead(_834)<br/>StorageDead(_833)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb362__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>StorageDead(_834)<br/></td></tr><tr><td align="left">_832 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _833)</td></tr></table>>];
    bb363__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_833)<br/>_848 = discriminant(_832)<br/></td></tr><tr><td align="left">switchInt(move _848)</td></tr></table>>];
    bb364__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageLive(_852)<br/>_852 = ((_832 as Continue).0: ())<br/>_831 = _852<br/>StorageDead(_852)<br/>StorageDead(_840)<br/>StorageDead(_836)<br/>StorageDead(_835)<br/>StorageDead(_832)<br/>StorageDead(_831)<br/>_829 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb365__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_849)<br/>_849 = ((_832 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_851)<br/>_851 = _849<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _851)</td></tr></table>>];
    bb366__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/>StorageDead(_849)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb367__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_830)<br/>StorageDead(_829)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>_859 = &amp;_3<br/>_858 = &amp;(*_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>_861 = &amp;_664<br/>_860 = &amp;(*_861)<br/></td></tr><tr><td align="left">_857 = get_taker_and_maker_for_order_record(move _858, move _860)</td></tr></table>>];
    bb368__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_860)<br/>StorageDead(_858)<br/>StorageLive(_853)<br/>_853 = (_857.0: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_854)<br/>_854 = (_857.1: std::option::Option&lt;state::user::Order&gt;)<br/>StorageLive(_855)<br/>_855 = (_857.2: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_856)<br/>_856 = (_857.3: std::option::Option&lt;state::user::Order&gt;)<br/>StorageDead(_861)<br/>StorageDead(_859)<br/>StorageDead(_857)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>StorageLive(_864)<br/>StorageLive(_865)<br/>_865 = _10<br/>StorageLive(_866)<br/>_866 = OrderAction::Place<br/>StorageLive(_867)<br/>_867 = OrderActionExplanation::None<br/>StorageLive(_868)<br/>_868 = (_8.6: u16)<br/>StorageLive(_869)<br/>_869 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_870)<br/>_870 = Option::&lt;u64&gt;::None<br/>StorageLive(_871)<br/>_871 = Option::&lt;u64&gt;::None<br/>StorageLive(_872)<br/>_872 = Option::&lt;u64&gt;::None<br/>StorageLive(_873)<br/>_873 = Option::&lt;u64&gt;::None<br/>StorageLive(_874)<br/>_874 = Option::&lt;u64&gt;::None<br/>StorageLive(_875)<br/>_875 = Option::&lt;u64&gt;::None<br/>StorageLive(_876)<br/>_876 = Option::&lt;u64&gt;::None<br/>StorageLive(_877)<br/>_877 = Option::&lt;i64&gt;::None<br/>StorageLive(_878)<br/>_878 = Option::&lt;u64&gt;::None<br/>StorageLive(_879)<br/>_879 = _853<br/>StorageLive(_880)<br/>_880 = _854<br/>StorageLive(_881)<br/>_881 = _855<br/>StorageLive(_882)<br/>_882 = _856<br/>StorageLive(_883)<br/>_883 = (_354.0: i64)<br/>StorageLive(_884)<br/>_884 = Option::&lt;u64&gt;::None<br/>StorageLive(_885)<br/>_885 = Option::&lt;u64&gt;::None<br/>StorageLive(_886)<br/>_886 = Option::&lt;u64&gt;::None<br/>StorageLive(_887)<br/>_887 = Option::&lt;u64&gt;::None<br/>StorageLive(_888)<br/>_888 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">_864 = get_order_action_record(move _865, move _866, move _867, move _868, move _869, move _870, move _871, move _872, move _873, move _874, move _875, move _876, move _877, move _878, move _879, move _880, move _881, move _882, move _883, const 0_u8, move _884, move _885, move _886, move _887, move _888)</td></tr></table>>];
    bb369__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/>StorageDead(_887)<br/>StorageDead(_886)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/>StorageDead(_883)<br/>StorageDead(_882)<br/>StorageDead(_881)<br/>StorageDead(_880)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_877)<br/>StorageDead(_876)<br/>StorageDead(_875)<br/>StorageDead(_874)<br/>StorageDead(_873)<br/>StorageDead(_872)<br/>StorageDead(_871)<br/>StorageDead(_870)<br/>StorageDead(_869)<br/>StorageDead(_868)<br/>StorageDead(_867)<br/>StorageDead(_866)<br/>StorageDead(_865)<br/></td></tr><tr><td align="left">_863 = &lt;std::result::Result&lt;OrderActionRecord, error::ErrorCode&gt; as Try&gt;::branch(move _864)</td></tr></table>>];
    bb370__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/>_889 = discriminant(_863)<br/></td></tr><tr><td align="left">switchInt(move _889)</td></tr></table>>];
    bb371__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageLive(_893)<br/>_893 = move ((_863 as Continue).0: state::events::OrderActionRecord)<br/>_862 = move _893<br/>StorageDead(_893)<br/>StorageDead(_863)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>_897 = move _862<br/></td></tr><tr><td align="left">_896 = emit_stack::&lt;OrderActionRecord, 464&gt;(move _897)</td></tr></table>>];
    bb372__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_890)<br/>_890 = ((_863 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_892)<br/>_892 = _890<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _892)</td></tr></table>>];
    bb373__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_892)<br/>StorageDead(_890)<br/>StorageDead(_863)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb374__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/></td></tr><tr><td align="left">_895 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _896)</td></tr></table>>];
    bb375__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>_898 = discriminant(_895)<br/></td></tr><tr><td align="left">switchInt(move _898)</td></tr></table>>];
    bb376__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageLive(_902)<br/>_902 = ((_895 as Continue).0: ())<br/>_894 = _902<br/>StorageDead(_902)<br/>StorageDead(_895)<br/>StorageDead(_894)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>_904 = _10<br/>StorageLive(_905)<br/>_905 = _3<br/>StorageLive(_906)<br/>StorageLive(_907)<br/>_907 = _154<br/>_908 = Len(((*_2).5: [state::user::Order; 32]))<br/>_909 = Lt(_907, _908)<br/></td></tr><tr><td align="left">assert(move _909, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _908, _907)</td></tr></table>>];
    bb377__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageLive(_899)<br/>_899 = ((_895 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_901)<br/>_901 = _899<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _901)</td></tr></table>>];
    bb378__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_901)<br/>StorageDead(_899)<br/>StorageDead(_895)<br/>StorageDead(_894)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb379__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">_906 = ((*_2).5: [state::user::Order; 32])[_907]<br/>_903 = OrderRecord { ts: move _904, user: move _905, order: move _906 }<br/>StorageDead(_906)<br/>StorageDead(_905)<br/>StorageDead(_904)<br/>StorageDead(_907)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>_913 = move _903<br/></td></tr><tr><td align="left">_912 = emit_stack::&lt;OrderRecord, 192&gt;(move _913)</td></tr></table>>];
    bb380__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_913)<br/></td></tr><tr><td align="left">_911 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _912)</td></tr></table>>];
    bb381__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/>_914 = discriminant(_911)<br/></td></tr><tr><td align="left">switchInt(move _914)</td></tr></table>>];
    bb382__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_918)<br/>_918 = ((_911 as Continue).0: ())<br/>_910 = _918<br/>StorageDead(_918)<br/>StorageDead(_911)<br/>StorageDead(_910)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>_920 = &amp;mut (*_2)<br/>StorageLive(_921)<br/>_921 = _11<br/></td></tr><tr><td align="left">_919 = User::update_last_active_slot(move _920, move _921)</td></tr></table>>];
    bb383__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_915)<br/>_915 = ((_911 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_917)<br/>_917 = _915<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _917)</td></tr></table>>];
    bb384__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_917)<br/>StorageDead(_915)<br/>StorageDead(_911)<br/>StorageDead(_910)<br/>StorageDead(_903)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_921)<br/>StorageDead(_920)<br/>StorageDead(_919)<br/>StorageLive(_922)<br/>_922 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _922)<br/>StorageDead(_922)<br/>StorageDead(_903)<br/>StorageDead(_862)<br/>StorageDead(_856)<br/>StorageDead(_855)<br/>StorageDead(_854)<br/>StorageDead(_853)<br/>StorageDead(_742)<br/>StorageDead(_664)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>StorageDead(_354)<br/>StorageDead(_343)<br/>StorageDead(_328)<br/>StorageDead(_324)<br/>StorageDead(_310)<br/>StorageDead(_219)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">drop(_204)</td></tr></table>>];
    bb386__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_154)<br/>StorageDead(_112)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_862)<br/>StorageDead(_856)<br/>StorageDead(_855)<br/>StorageDead(_854)<br/>StorageDead(_853)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb388__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>StorageDead(_836)<br/>StorageDead(_835)<br/>StorageDead(_832)<br/>StorageDead(_831)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb389__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_748)<br/>StorageDead(_746)<br/>StorageDead(_743)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb390__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_742)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb391__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_683)<br/>StorageDead(_679)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb392__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb393__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb394__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb395__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb396__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_431)<br/>StorageDead(_429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb397__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb398__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb399__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb400__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb401__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb402__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">drop(_204)</td></tr></table>>];
    bb404__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb405__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb406__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb407__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb408__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left">return</td></tr></table>>];
    bb409__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">409 (cleanup)</td></tr><tr><td align="left">drop(_632)</td></tr></table>>];
    bb410__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">410 (cleanup)</td></tr><tr><td align="left">drop(_595)</td></tr></table>>];
    bb411__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">411 (cleanup)</td></tr><tr><td align="left">drop(_563)</td></tr></table>>];
    bb412__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">412 (cleanup)</td></tr><tr><td align="left">drop(_495)</td></tr></table>>];
    bb413__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">413 (cleanup)</td></tr><tr><td align="left">drop(_476)</td></tr></table>>];
    bb414__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">414 (cleanup)</td></tr><tr><td align="left">drop(_405)</td></tr></table>>];
    bb415__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">415 (cleanup)</td></tr><tr><td align="left">drop(_386)</td></tr></table>>];
    bb416__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">416 (cleanup)</td></tr><tr><td align="left">drop(_287)</td></tr></table>>];
    bb417__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">417 (cleanup)</td></tr><tr><td align="left">drop(_253)</td></tr></table>>];
    bb418__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">418 (cleanup)</td></tr><tr><td align="left">drop(_234)</td></tr></table>>];
    bb419__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">419 (cleanup)</td></tr><tr><td align="left">drop(_204)</td></tr></table>>];
    bb420__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">420 (cleanup)</td></tr><tr><td align="left">drop(_187)</td></tr></table>>];
    bb421__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">421 (cleanup)</td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb422__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">422 (cleanup)</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb423__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">423 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb424__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">424 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb425__0_552 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">425 (cleanup)</td></tr><tr><td align="left" balign="left">_943 = discriminant(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_552 -> bb1__0_552 [label="return"];
    bb1__0_552 -> bb2__0_552 [label="return"];
    bb2__0_552 -> bb3__0_552 [label="0"];
    bb2__0_552 -> bb5__0_552 [label="1"];
    bb2__0_552 -> bb4__0_552 [label="otherwise"];
    bb3__0_552 -> bb7__0_552 [label="return"];
    bb5__0_552 -> bb6__0_552 [label="return"];
    bb6__0_552 -> bb407__0_552 [label=""];
    bb7__0_552 -> bb9__0_552 [label="0"];
    bb7__0_552 -> bb8__0_552 [label="otherwise"];
    bb8__0_552 -> bb10__0_552 [label="return"];
    bb9__0_552 -> bb16__0_552 [label=""];
    bb10__0_552 -> bb11__0_552 [label="return"];
    bb11__0_552 -> bb12__0_552 [label="return"];
    bb12__0_552 -> bb13__0_552 [label="return"];
    bb12__0_552 -> bb423__0_552 [label="unwind"];
    bb13__0_552 -> bb14__0_552 [label="return"];
    bb13__0_552 -> bb423__0_552 [label="unwind"];
    bb14__0_552 -> bb15__0_552 [label="return"];
    bb14__0_552 -> bb424__0_552 [label="unwind"];
    bb15__0_552 -> bb16__0_552 [label=""];
    bb16__0_552 -> bb17__0_552 [label="return"];
    bb17__0_552 -> bb18__0_552 [label="0"];
    bb17__0_552 -> bb19__0_552 [label="1"];
    bb17__0_552 -> bb4__0_552 [label="otherwise"];
    bb18__0_552 -> bb22__0_552 [label="0"];
    bb18__0_552 -> bb21__0_552 [label="otherwise"];
    bb19__0_552 -> bb20__0_552 [label="return"];
    bb20__0_552 -> bb407__0_552 [label=""];
    bb21__0_552 -> bb23__0_552 [label="return"];
    bb22__0_552 -> bb28__0_552 [label=""];
    bb23__0_552 -> bb24__0_552 [label="return"];
    bb24__0_552 -> bb25__0_552 [label="0"];
    bb24__0_552 -> bb26__0_552 [label="1"];
    bb24__0_552 -> bb4__0_552 [label="otherwise"];
    bb25__0_552 -> bb28__0_552 [label=""];
    bb26__0_552 -> bb27__0_552 [label="return"];
    bb27__0_552 -> bb407__0_552 [label=""];
    bb28__0_552 -> bb29__0_552 [label="return"];
    bb29__0_552 -> bb45__0_552 [label="0"];
    bb29__0_552 -> bb30__0_552 [label="otherwise"];
    bb30__0_552 -> bb32__0_552 [label="0"];
    bb30__0_552 -> bb31__0_552 [label="otherwise"];
    bb31__0_552 -> bb40__0_552 [label=""];
    bb32__0_552 -> bb33__0_552 [label="return"];
    bb33__0_552 -> bb34__0_552 [label="return"];
    bb34__0_552 -> bb35__0_552 [label="return"];
    bb35__0_552 -> bb36__0_552 [label="return"];
    bb35__0_552 -> bb422__0_552 [label="unwind"];
    bb36__0_552 -> bb37__0_552 [label="return"];
    bb36__0_552 -> bb422__0_552 [label="unwind"];
    bb37__0_552 -> bb38__0_552 [label="return"];
    bb37__0_552 -> bb424__0_552 [label="unwind"];
    bb38__0_552 -> bb39__0_552 [label="return"];
    bb39__0_552 -> bb40__0_552 [label=""];
    bb40__0_552 -> bb41__0_552 [label="return"];
    bb41__0_552 -> bb42__0_552 [label="0"];
    bb41__0_552 -> bb43__0_552 [label="1"];
    bb41__0_552 -> bb4__0_552 [label="otherwise"];
    bb42__0_552 -> bb46__0_552 [label=""];
    bb43__0_552 -> bb44__0_552 [label="return"];
    bb44__0_552 -> bb407__0_552 [label=""];
    bb45__0_552 -> bb46__0_552 [label=""];
    bb46__0_552 -> bb47__0_552 [label="0"];
    bb46__0_552 -> bb48__0_552 [label="1"];
    bb46__0_552 -> bb4__0_552 [label="otherwise"];
    bb47__0_552 -> bb50__0_552 [label="0"];
    bb47__0_552 -> bb50__0_552 [label="4"];
    bb47__0_552 -> bb49__0_552 [label="otherwise"];
    bb48__0_552 -> bb56__0_552 [label=""];
    bb49__0_552 -> bb56__0_552 [label=""];
    bb50__0_552 -> bb51__0_552 [label="return"];
    bb51__0_552 -> bb52__0_552 [label="return"];
    bb52__0_552 -> bb53__0_552 [label="0"];
    bb52__0_552 -> bb54__0_552 [label="1"];
    bb52__0_552 -> bb4__0_552 [label="otherwise"];
    bb53__0_552 -> bb56__0_552 [label=""];
    bb54__0_552 -> bb55__0_552 [label="return"];
    bb55__0_552 -> bb406__0_552 [label=""];
    bb56__0_552 -> bb67__0_552 [label="0"];
    bb56__0_552 -> bb57__0_552 [label="otherwise"];
    bb57__0_552 -> bb66__0_552 [label="0"];
    bb57__0_552 -> bb58__0_552 [label="otherwise"];
    bb58__0_552 -> bb59__0_552 [label="return"];
    bb59__0_552 -> bb60__0_552 [label="return"];
    bb60__0_552 -> bb61__0_552 [label="return"];
    bb61__0_552 -> bb62__0_552 [label="return"];
    bb62__0_552 -> bb63__0_552 [label="return"];
    bb62__0_552 -> bb421__0_552 [label="unwind"];
    bb63__0_552 -> bb64__0_552 [label="return"];
    bb63__0_552 -> bb421__0_552 [label="unwind"];
    bb64__0_552 -> bb65__0_552 [label="return"];
    bb64__0_552 -> bb424__0_552 [label="unwind"];
    bb65__0_552 -> bb406__0_552 [label=""];
    bb66__0_552 -> bb68__0_552 [label=""];
    bb67__0_552 -> bb68__0_552 [label=""];
    bb68__0_552 -> bb69__0_552 [label="return"];
    bb69__0_552 -> bb70__0_552 [label="return"];
    bb70__0_552 -> bb71__0_552 [label="return"];
    bb71__0_552 -> bb72__0_552 [label="return"];
    bb72__0_552 -> bb73__0_552 [label="0"];
    bb72__0_552 -> bb74__0_552 [label="1"];
    bb72__0_552 -> bb4__0_552 [label="otherwise"];
    bb73__0_552 -> bb77__0_552 [label="0"];
    bb73__0_552 -> bb76__0_552 [label="otherwise"];
    bb74__0_552 -> bb75__0_552 [label="return"];
    bb75__0_552 -> bb405__0_552 [label=""];
    bb76__0_552 -> bb78__0_552 [label="return"];
    bb77__0_552 -> bb89__0_552 [label=""];
    bb78__0_552 -> bb79__0_552 [label="return"];
    bb79__0_552 -> bb80__0_552 [label="return"];
    bb80__0_552 -> bb88__0_552 [label="0"];
    bb80__0_552 -> bb81__0_552 [label="otherwise"];
    bb81__0_552 -> bb82__0_552 [label="return"];
    bb82__0_552 -> bb83__0_552 [label="return"];
    bb83__0_552 -> bb84__0_552 [label="return"];
    bb84__0_552 -> bb85__0_552 [label="return"];
    bb84__0_552 -> bb420__0_552 [label="unwind"];
    bb85__0_552 -> bb86__0_552 [label="return"];
    bb85__0_552 -> bb420__0_552 [label="unwind"];
    bb86__0_552 -> bb87__0_552 [label="return"];
    bb86__0_552 -> bb424__0_552 [label="unwind"];
    bb87__0_552 -> bb405__0_552 [label=""];
    bb88__0_552 -> bb89__0_552 [label=""];
    bb89__0_552 -> bb90__0_552 [label="return"];
    bb90__0_552 -> bb91__0_552 [label="return"];
    bb90__0_552 -> bb424__0_552 [label="unwind"];
    bb91__0_552 -> bb92__0_552 [label="0"];
    bb91__0_552 -> bb93__0_552 [label="1"];
    bb91__0_552 -> bb4__0_552 [label="otherwise"];
    bb92__0_552 -> bb95__0_552 [label="return"];
    bb92__0_552 -> bb419__0_552 [label="unwind"];
    bb93__0_552 -> bb94__0_552 [label="return"];
    bb93__0_552 -> bb425__0_552 [label="unwind"];
    bb94__0_552 -> bb404__0_552 [label=""];
    bb95__0_552 -> bb96__0_552 [label="return"];
    bb95__0_552 -> bb419__0_552 [label="unwind"];
    bb96__0_552 -> bb97__0_552 [label="return"];
    bb96__0_552 -> bb419__0_552 [label="unwind"];
    bb97__0_552 -> bb99__0_552 [label="0"];
    bb97__0_552 -> bb98__0_552 [label="otherwise"];
    bb98__0_552 -> bb112__0_552 [label=""];
    bb99__0_552 -> bb100__0_552 [label="return"];
    bb99__0_552 -> bb419__0_552 [label="unwind"];
    bb100__0_552 -> bb101__0_552 [label="return"];
    bb100__0_552 -> bb419__0_552 [label="unwind"];
    bb101__0_552 -> bb102__0_552 [label="return"];
    bb101__0_552 -> bb419__0_552 [label="unwind"];
    bb102__0_552 -> bb103__0_552 [label="return"];
    bb102__0_552 -> bb418__0_552 [label="unwind"];
    bb103__0_552 -> bb104__0_552 [label="return"];
    bb103__0_552 -> bb418__0_552 [label="unwind"];
    bb104__0_552 -> bb105__0_552 [label="return"];
    bb104__0_552 -> bb419__0_552 [label="unwind"];
    bb105__0_552 -> bb106__0_552 [label="return"];
    bb105__0_552 -> bb419__0_552 [label="unwind"];
    bb106__0_552 -> bb107__0_552 [label="return"];
    bb106__0_552 -> bb419__0_552 [label="unwind"];
    bb107__0_552 -> bb108__0_552 [label="return"];
    bb107__0_552 -> bb419__0_552 [label="unwind"];
    bb108__0_552 -> bb109__0_552 [label="return"];
    bb108__0_552 -> bb417__0_552 [label="unwind"];
    bb109__0_552 -> bb110__0_552 [label="return"];
    bb109__0_552 -> bb417__0_552 [label="unwind"];
    bb110__0_552 -> bb111__0_552 [label="return"];
    bb110__0_552 -> bb419__0_552 [label="unwind"];
    bb111__0_552 -> bb112__0_552 [label=""];
    bb112__0_552 -> bb113__0_552 [label="return"];
    bb112__0_552 -> bb419__0_552 [label="unwind"];
    bb113__0_552 -> bb114__0_552 [label="0"];
    bb113__0_552 -> bb115__0_552 [label="1"];
    bb113__0_552 -> bb4__0_552 [label="otherwise"];
    bb114__0_552 -> bb117__0_552 [label="return"];
    bb114__0_552 -> bb419__0_552 [label="unwind"];
    bb115__0_552 -> bb116__0_552 [label="return"];
    bb115__0_552 -> bb419__0_552 [label="unwind"];
    bb116__0_552 -> bb403__0_552 [label=""];
    bb117__0_552 -> bb119__0_552 [label="0"];
    bb117__0_552 -> bb118__0_552 [label="otherwise"];
    bb118__0_552 -> bb120__0_552 [label=""];
    bb119__0_552 -> bb120__0_552 [label=""];
    bb120__0_552 -> bb121__0_552 [label="0"];
    bb120__0_552 -> bb122__0_552 [label="otherwise"];
    bb121__0_552 -> bb130__0_552 [label=""];
    bb122__0_552 -> bb123__0_552 [label="return"];
    bb122__0_552 -> bb419__0_552 [label="unwind"];
    bb123__0_552 -> bb124__0_552 [label="return"];
    bb123__0_552 -> bb419__0_552 [label="unwind"];
    bb124__0_552 -> bb125__0_552 [label="return"];
    bb124__0_552 -> bb419__0_552 [label="unwind"];
    bb125__0_552 -> bb126__0_552 [label="return"];
    bb125__0_552 -> bb416__0_552 [label="unwind"];
    bb126__0_552 -> bb127__0_552 [label="return"];
    bb126__0_552 -> bb416__0_552 [label="unwind"];
    bb127__0_552 -> bb128__0_552 [label="return"];
    bb127__0_552 -> bb419__0_552 [label="unwind"];
    bb128__0_552 -> bb129__0_552 [label="return"];
    bb128__0_552 -> bb419__0_552 [label="unwind"];
    bb129__0_552 -> bb130__0_552 [label=""];
    bb130__0_552 -> bb131__0_552 [label="return"];
    bb130__0_552 -> bb419__0_552 [label="unwind"];
    bb131__0_552 -> bb132__0_552 [label="0"];
    bb131__0_552 -> bb133__0_552 [label="1"];
    bb131__0_552 -> bb4__0_552 [label="otherwise"];
    bb132__0_552 -> bb135__0_552 [label="return"];
    bb132__0_552 -> bb419__0_552 [label="unwind"];
    bb133__0_552 -> bb134__0_552 [label="return"];
    bb133__0_552 -> bb419__0_552 [label="unwind"];
    bb134__0_552 -> bb403__0_552 [label=""];
    bb135__0_552 -> bb136__0_552 [label="return"];
    bb135__0_552 -> bb419__0_552 [label="unwind"];
    bb136__0_552 -> bb137__0_552 [label="return"];
    bb136__0_552 -> bb419__0_552 [label="unwind"];
    bb137__0_552 -> bb138__0_552 [label="0"];
    bb137__0_552 -> bb139__0_552 [label="1"];
    bb137__0_552 -> bb4__0_552 [label="otherwise"];
    bb138__0_552 -> bb141__0_552 [label="success"];
    bb138__0_552 -> bb419__0_552 [label="unwind"];
    bb139__0_552 -> bb140__0_552 [label="return"];
    bb139__0_552 -> bb419__0_552 [label="unwind"];
    bb140__0_552 -> bb402__0_552 [label=""];
    bb141__0_552 -> bb142__0_552 [label="success"];
    bb141__0_552 -> bb419__0_552 [label="unwind"];
    bb142__0_552 -> bb143__0_552 [label="return"];
    bb142__0_552 -> bb419__0_552 [label="unwind"];
    bb143__0_552 -> bb144__0_552 [label="return"];
    bb143__0_552 -> bb419__0_552 [label="unwind"];
    bb144__0_552 -> bb145__0_552 [label="return"];
    bb144__0_552 -> bb419__0_552 [label="unwind"];
    bb145__0_552 -> bb146__0_552 [label="0"];
    bb145__0_552 -> bb147__0_552 [label="1"];
    bb145__0_552 -> bb4__0_552 [label="otherwise"];
    bb146__0_552 -> bb149__0_552 [label="return"];
    bb146__0_552 -> bb419__0_552 [label="unwind"];
    bb147__0_552 -> bb148__0_552 [label="return"];
    bb147__0_552 -> bb419__0_552 [label="unwind"];
    bb148__0_552 -> bb401__0_552 [label=""];
    bb149__0_552 -> bb150__0_552 [label="return"];
    bb149__0_552 -> bb419__0_552 [label="unwind"];
    bb150__0_552 -> bb151__0_552 [label="0"];
    bb150__0_552 -> bb152__0_552 [label="1"];
    bb150__0_552 -> bb4__0_552 [label="otherwise"];
    bb151__0_552 -> bb154__0_552 [label="return"];
    bb151__0_552 -> bb419__0_552 [label="unwind"];
    bb152__0_552 -> bb153__0_552 [label="return"];
    bb152__0_552 -> bb419__0_552 [label="unwind"];
    bb153__0_552 -> bb400__0_552 [label=""];
    bb154__0_552 -> bb155__0_552 [label="return"];
    bb154__0_552 -> bb419__0_552 [label="unwind"];
    bb155__0_552 -> bb156__0_552 [label="return"];
    bb155__0_552 -> bb419__0_552 [label="unwind"];
    bb156__0_552 -> bb157__0_552 [label="return"];
    bb156__0_552 -> bb419__0_552 [label="unwind"];
    bb157__0_552 -> bb158__0_552 [label="0"];
    bb157__0_552 -> bb159__0_552 [label="1"];
    bb157__0_552 -> bb4__0_552 [label="otherwise"];
    bb158__0_552 -> bb162__0_552 [label="0"];
    bb158__0_552 -> bb161__0_552 [label="otherwise"];
    bb159__0_552 -> bb160__0_552 [label="return"];
    bb159__0_552 -> bb419__0_552 [label="unwind"];
    bb160__0_552 -> bb399__0_552 [label=""];
    bb161__0_552 -> bb176__0_552 [label=""];
    bb162__0_552 -> bb163__0_552 [label="return"];
    bb162__0_552 -> bb419__0_552 [label="unwind"];
    bb163__0_552 -> bb164__0_552 [label="return"];
    bb163__0_552 -> bb419__0_552 [label="unwind"];
    bb164__0_552 -> bb165__0_552 [label="return"];
    bb164__0_552 -> bb419__0_552 [label="unwind"];
    bb165__0_552 -> bb166__0_552 [label="return"];
    bb165__0_552 -> bb415__0_552 [label="unwind"];
    bb166__0_552 -> bb167__0_552 [label="return"];
    bb166__0_552 -> bb415__0_552 [label="unwind"];
    bb167__0_552 -> bb168__0_552 [label="return"];
    bb167__0_552 -> bb419__0_552 [label="unwind"];
    bb168__0_552 -> bb169__0_552 [label="return"];
    bb168__0_552 -> bb419__0_552 [label="unwind"];
    bb169__0_552 -> bb170__0_552 [label="return"];
    bb169__0_552 -> bb419__0_552 [label="unwind"];
    bb170__0_552 -> bb171__0_552 [label="return"];
    bb170__0_552 -> bb419__0_552 [label="unwind"];
    bb171__0_552 -> bb172__0_552 [label="return"];
    bb171__0_552 -> bb419__0_552 [label="unwind"];
    bb172__0_552 -> bb173__0_552 [label="return"];
    bb172__0_552 -> bb414__0_552 [label="unwind"];
    bb173__0_552 -> bb174__0_552 [label="return"];
    bb173__0_552 -> bb414__0_552 [label="unwind"];
    bb174__0_552 -> bb175__0_552 [label="return"];
    bb174__0_552 -> bb419__0_552 [label="unwind"];
    bb175__0_552 -> bb176__0_552 [label=""];
    bb176__0_552 -> bb177__0_552 [label="return"];
    bb176__0_552 -> bb419__0_552 [label="unwind"];
    bb177__0_552 -> bb178__0_552 [label="0"];
    bb177__0_552 -> bb179__0_552 [label="1"];
    bb177__0_552 -> bb4__0_552 [label="otherwise"];
    bb178__0_552 -> bb182__0_552 [label="0"];
    bb178__0_552 -> bb181__0_552 [label="otherwise"];
    bb179__0_552 -> bb180__0_552 [label="return"];
    bb179__0_552 -> bb419__0_552 [label="unwind"];
    bb180__0_552 -> bb398__0_552 [label=""];
    bb181__0_552 -> bb183__0_552 [label="return"];
    bb181__0_552 -> bb419__0_552 [label="unwind"];
    bb182__0_552 -> bb192__0_552 [label=""];
    bb183__0_552 -> bb185__0_552 [label="0"];
    bb183__0_552 -> bb184__0_552 [label="otherwise"];
    bb184__0_552 -> bb186__0_552 [label="0"];
    bb184__0_552 -> bb192__0_552 [label="otherwise"];
    bb185__0_552 -> bb186__0_552 [label=""];
    bb186__0_552 -> bb187__0_552 [label="return"];
    bb186__0_552 -> bb419__0_552 [label="unwind"];
    bb187__0_552 -> bb188__0_552 [label="return"];
    bb187__0_552 -> bb419__0_552 [label="unwind"];
    bb188__0_552 -> bb189__0_552 [label="0"];
    bb188__0_552 -> bb190__0_552 [label="1"];
    bb188__0_552 -> bb4__0_552 [label="otherwise"];
    bb189__0_552 -> bb198__0_552 [label=""];
    bb190__0_552 -> bb191__0_552 [label="return"];
    bb190__0_552 -> bb419__0_552 [label="unwind"];
    bb191__0_552 -> bb396__0_552 [label=""];
    bb192__0_552 -> bb193__0_552 [label="return"];
    bb192__0_552 -> bb419__0_552 [label="unwind"];
    bb193__0_552 -> bb194__0_552 [label="return"];
    bb193__0_552 -> bb419__0_552 [label="unwind"];
    bb194__0_552 -> bb195__0_552 [label="0"];
    bb194__0_552 -> bb196__0_552 [label="1"];
    bb194__0_552 -> bb4__0_552 [label="otherwise"];
    bb195__0_552 -> bb198__0_552 [label=""];
    bb196__0_552 -> bb197__0_552 [label="return"];
    bb196__0_552 -> bb419__0_552 [label="unwind"];
    bb197__0_552 -> bb396__0_552 [label=""];
    bb198__0_552 -> bb199__0_552 [label="return"];
    bb198__0_552 -> bb419__0_552 [label="unwind"];
    bb199__0_552 -> bb200__0_552 [label="return"];
    bb199__0_552 -> bb419__0_552 [label="unwind"];
    bb200__0_552 -> bb201__0_552 [label="0"];
    bb200__0_552 -> bb202__0_552 [label="1"];
    bb200__0_552 -> bb4__0_552 [label="otherwise"];
    bb201__0_552 -> bb205__0_552 [label="0"];
    bb201__0_552 -> bb204__0_552 [label="otherwise"];
    bb202__0_552 -> bb203__0_552 [label="return"];
    bb202__0_552 -> bb419__0_552 [label="unwind"];
    bb203__0_552 -> bb395__0_552 [label=""];
    bb204__0_552 -> bb219__0_552 [label=""];
    bb205__0_552 -> bb206__0_552 [label="return"];
    bb205__0_552 -> bb419__0_552 [label="unwind"];
    bb206__0_552 -> bb207__0_552 [label="return"];
    bb206__0_552 -> bb419__0_552 [label="unwind"];
    bb207__0_552 -> bb208__0_552 [label="return"];
    bb207__0_552 -> bb419__0_552 [label="unwind"];
    bb208__0_552 -> bb209__0_552 [label="return"];
    bb208__0_552 -> bb413__0_552 [label="unwind"];
    bb209__0_552 -> bb210__0_552 [label="return"];
    bb209__0_552 -> bb413__0_552 [label="unwind"];
    bb210__0_552 -> bb211__0_552 [label="return"];
    bb210__0_552 -> bb419__0_552 [label="unwind"];
    bb211__0_552 -> bb212__0_552 [label="return"];
    bb211__0_552 -> bb419__0_552 [label="unwind"];
    bb212__0_552 -> bb213__0_552 [label="return"];
    bb212__0_552 -> bb419__0_552 [label="unwind"];
    bb213__0_552 -> bb214__0_552 [label="return"];
    bb213__0_552 -> bb419__0_552 [label="unwind"];
    bb214__0_552 -> bb215__0_552 [label="return"];
    bb214__0_552 -> bb419__0_552 [label="unwind"];
    bb215__0_552 -> bb216__0_552 [label="return"];
    bb215__0_552 -> bb412__0_552 [label="unwind"];
    bb216__0_552 -> bb217__0_552 [label="return"];
    bb216__0_552 -> bb412__0_552 [label="unwind"];
    bb217__0_552 -> bb218__0_552 [label="return"];
    bb217__0_552 -> bb419__0_552 [label="unwind"];
    bb218__0_552 -> bb219__0_552 [label=""];
    bb219__0_552 -> bb220__0_552 [label="return"];
    bb219__0_552 -> bb419__0_552 [label="unwind"];
    bb220__0_552 -> bb221__0_552 [label="0"];
    bb220__0_552 -> bb222__0_552 [label="1"];
    bb220__0_552 -> bb4__0_552 [label="otherwise"];
    bb221__0_552 -> bb225__0_552 [label="0"];
    bb221__0_552 -> bb224__0_552 [label="otherwise"];
    bb222__0_552 -> bb223__0_552 [label="return"];
    bb222__0_552 -> bb419__0_552 [label="unwind"];
    bb223__0_552 -> bb395__0_552 [label=""];
    bb224__0_552 -> bb226__0_552 [label=""];
    bb225__0_552 -> bb226__0_552 [label=""];
    bb226__0_552 -> bb227__0_552 [label="return"];
    bb226__0_552 -> bb419__0_552 [label="unwind"];
    bb227__0_552 -> bb228__0_552 [label="return"];
    bb227__0_552 -> bb419__0_552 [label="unwind"];
    bb228__0_552 -> bb229__0_552 [label="0"];
    bb228__0_552 -> bb230__0_552 [label="1"];
    bb228__0_552 -> bb4__0_552 [label="otherwise"];
    bb229__0_552 -> bb232__0_552 [label="return"];
    bb229__0_552 -> bb419__0_552 [label="unwind"];
    bb230__0_552 -> bb231__0_552 [label="return"];
    bb230__0_552 -> bb419__0_552 [label="unwind"];
    bb231__0_552 -> bb398__0_552 [label=""];
    bb232__0_552 -> bb233__0_552 [label="return"];
    bb232__0_552 -> bb419__0_552 [label="unwind"];
    bb233__0_552 -> bb234__0_552 [label="return"];
    bb233__0_552 -> bb419__0_552 [label="unwind"];
    bb234__0_552 -> bb235__0_552 [label="0"];
    bb234__0_552 -> bb236__0_552 [label="1"];
    bb234__0_552 -> bb4__0_552 [label="otherwise"];
    bb235__0_552 -> bb238__0_552 [label="return"];
    bb235__0_552 -> bb419__0_552 [label="unwind"];
    bb236__0_552 -> bb237__0_552 [label="return"];
    bb236__0_552 -> bb419__0_552 [label="unwind"];
    bb237__0_552 -> bb394__0_552 [label=""];
    bb238__0_552 -> bb240__0_552 [label="0"];
    bb238__0_552 -> bb239__0_552 [label="otherwise"];
    bb239__0_552 -> bb247__0_552 [label=""];
    bb240__0_552 -> bb241__0_552 [label="return"];
    bb240__0_552 -> bb419__0_552 [label="unwind"];
    bb241__0_552 -> bb242__0_552 [label="return"];
    bb241__0_552 -> bb419__0_552 [label="unwind"];
    bb242__0_552 -> bb243__0_552 [label="return"];
    bb242__0_552 -> bb419__0_552 [label="unwind"];
    bb243__0_552 -> bb244__0_552 [label="return"];
    bb243__0_552 -> bb411__0_552 [label="unwind"];
    bb244__0_552 -> bb245__0_552 [label="return"];
    bb244__0_552 -> bb411__0_552 [label="unwind"];
    bb245__0_552 -> bb246__0_552 [label="return"];
    bb245__0_552 -> bb419__0_552 [label="unwind"];
    bb246__0_552 -> bb247__0_552 [label=""];
    bb247__0_552 -> bb248__0_552 [label="return"];
    bb247__0_552 -> bb419__0_552 [label="unwind"];
    bb248__0_552 -> bb249__0_552 [label="0"];
    bb248__0_552 -> bb250__0_552 [label="1"];
    bb248__0_552 -> bb4__0_552 [label="otherwise"];
    bb249__0_552 -> bb253__0_552 [label="0"];
    bb249__0_552 -> bb252__0_552 [label="otherwise"];
    bb250__0_552 -> bb251__0_552 [label="return"];
    bb250__0_552 -> bb419__0_552 [label="unwind"];
    bb251__0_552 -> bb393__0_552 [label=""];
    bb252__0_552 -> bb261__0_552 [label=""];
    bb253__0_552 -> bb254__0_552 [label="return"];
    bb253__0_552 -> bb419__0_552 [label="unwind"];
    bb254__0_552 -> bb255__0_552 [label="return"];
    bb254__0_552 -> bb419__0_552 [label="unwind"];
    bb255__0_552 -> bb256__0_552 [label="return"];
    bb255__0_552 -> bb419__0_552 [label="unwind"];
    bb256__0_552 -> bb257__0_552 [label="return"];
    bb256__0_552 -> bb410__0_552 [label="unwind"];
    bb257__0_552 -> bb258__0_552 [label="return"];
    bb257__0_552 -> bb410__0_552 [label="unwind"];
    bb258__0_552 -> bb259__0_552 [label="return"];
    bb258__0_552 -> bb419__0_552 [label="unwind"];
    bb259__0_552 -> bb260__0_552 [label="return"];
    bb259__0_552 -> bb419__0_552 [label="unwind"];
    bb260__0_552 -> bb261__0_552 [label=""];
    bb261__0_552 -> bb262__0_552 [label="return"];
    bb261__0_552 -> bb419__0_552 [label="unwind"];
    bb262__0_552 -> bb263__0_552 [label="0"];
    bb262__0_552 -> bb264__0_552 [label="1"];
    bb262__0_552 -> bb4__0_552 [label="otherwise"];
    bb263__0_552 -> bb266__0_552 [label="return"];
    bb263__0_552 -> bb419__0_552 [label="unwind"];
    bb264__0_552 -> bb265__0_552 [label="return"];
    bb264__0_552 -> bb419__0_552 [label="unwind"];
    bb265__0_552 -> bb393__0_552 [label=""];
    bb266__0_552 -> bb268__0_552 [label="0"];
    bb266__0_552 -> bb267__0_552 [label="otherwise"];
    bb267__0_552 -> bb276__0_552 [label=""];
    bb268__0_552 -> bb269__0_552 [label="return"];
    bb268__0_552 -> bb419__0_552 [label="unwind"];
    bb269__0_552 -> bb270__0_552 [label="return"];
    bb269__0_552 -> bb419__0_552 [label="unwind"];
    bb270__0_552 -> bb271__0_552 [label="return"];
    bb270__0_552 -> bb419__0_552 [label="unwind"];
    bb271__0_552 -> bb272__0_552 [label="return"];
    bb271__0_552 -> bb409__0_552 [label="unwind"];
    bb272__0_552 -> bb273__0_552 [label="return"];
    bb272__0_552 -> bb409__0_552 [label="unwind"];
    bb273__0_552 -> bb274__0_552 [label="return"];
    bb273__0_552 -> bb419__0_552 [label="unwind"];
    bb274__0_552 -> bb275__0_552 [label="return"];
    bb274__0_552 -> bb419__0_552 [label="unwind"];
    bb275__0_552 -> bb276__0_552 [label=""];
    bb276__0_552 -> bb277__0_552 [label="return"];
    bb276__0_552 -> bb419__0_552 [label="unwind"];
    bb277__0_552 -> bb278__0_552 [label="0"];
    bb277__0_552 -> bb279__0_552 [label="1"];
    bb277__0_552 -> bb4__0_552 [label="otherwise"];
    bb278__0_552 -> bb282__0_552 [label="0"];
    bb278__0_552 -> bb281__0_552 [label="otherwise"];
    bb279__0_552 -> bb280__0_552 [label="return"];
    bb279__0_552 -> bb419__0_552 [label="unwind"];
    bb280__0_552 -> bb393__0_552 [label=""];
    bb281__0_552 -> bb283__0_552 [label=""];
    bb282__0_552 -> bb283__0_552 [label=""];
    bb283__0_552 -> bb284__0_552 [label="return"];
    bb283__0_552 -> bb419__0_552 [label="unwind"];
    bb284__0_552 -> bb286__0_552 [label="0"];
    bb284__0_552 -> bb285__0_552 [label="otherwise"];
    bb285__0_552 -> bb287__0_552 [label=""];
    bb286__0_552 -> bb287__0_552 [label=""];
    bb287__0_552 -> bb288__0_552 [label="return"];
    bb287__0_552 -> bb419__0_552 [label="unwind"];
    bb288__0_552 -> bb289__0_552 [label="return"];
    bb288__0_552 -> bb419__0_552 [label="unwind"];
    bb289__0_552 -> bb290__0_552 [label="return"];
    bb289__0_552 -> bb419__0_552 [label="unwind"];
    bb290__0_552 -> bb291__0_552 [label="return"];
    bb290__0_552 -> bb419__0_552 [label="unwind"];
    bb291__0_552 -> bb292__0_552 [label="return"];
    bb291__0_552 -> bb419__0_552 [label="unwind"];
    bb292__0_552 -> bb293__0_552 [label="return"];
    bb292__0_552 -> bb419__0_552 [label="unwind"];
    bb293__0_552 -> bb294__0_552 [label="return"];
    bb293__0_552 -> bb419__0_552 [label="unwind"];
    bb294__0_552 -> bb295__0_552 [label="0"];
    bb294__0_552 -> bb296__0_552 [label="1"];
    bb294__0_552 -> bb4__0_552 [label="otherwise"];
    bb295__0_552 -> bb298__0_552 [label="return"];
    bb295__0_552 -> bb419__0_552 [label="unwind"];
    bb296__0_552 -> bb297__0_552 [label="return"];
    bb296__0_552 -> bb419__0_552 [label="unwind"];
    bb297__0_552 -> bb391__0_552 [label=""];
    bb298__0_552 -> bb299__0_552 [label="return"];
    bb298__0_552 -> bb419__0_552 [label="unwind"];
    bb299__0_552 -> bb300__0_552 [label="return"];
    bb299__0_552 -> bb419__0_552 [label="unwind"];
    bb300__0_552 -> bb301__0_552 [label="return"];
    bb300__0_552 -> bb419__0_552 [label="unwind"];
    bb301__0_552 -> bb302__0_552 [label="0"];
    bb301__0_552 -> bb303__0_552 [label="1"];
    bb301__0_552 -> bb4__0_552 [label="otherwise"];
    bb302__0_552 -> bb305__0_552 [label="return"];
    bb302__0_552 -> bb419__0_552 [label="unwind"];
    bb303__0_552 -> bb304__0_552 [label="return"];
    bb303__0_552 -> bb419__0_552 [label="unwind"];
    bb304__0_552 -> bb391__0_552 [label=""];
    bb305__0_552 -> bb306__0_552 [label="return"];
    bb305__0_552 -> bb419__0_552 [label="unwind"];
    bb306__0_552 -> bb307__0_552 [label="return"];
    bb306__0_552 -> bb419__0_552 [label="unwind"];
    bb307__0_552 -> bb308__0_552 [label="return"];
    bb307__0_552 -> bb419__0_552 [label="unwind"];
    bb308__0_552 -> bb309__0_552 [label="return"];
    bb308__0_552 -> bb419__0_552 [label="unwind"];
    bb309__0_552 -> bb310__0_552 [label="return"];
    bb309__0_552 -> bb419__0_552 [label="unwind"];
    bb310__0_552 -> bb311__0_552 [label="return"];
    bb310__0_552 -> bb419__0_552 [label="unwind"];
    bb311__0_552 -> bb312__0_552 [label="return"];
    bb311__0_552 -> bb419__0_552 [label="unwind"];
    bb312__0_552 -> bb313__0_552 [label="0"];
    bb312__0_552 -> bb314__0_552 [label="1"];
    bb312__0_552 -> bb4__0_552 [label="otherwise"];
    bb313__0_552 -> bb316__0_552 [label="return"];
    bb313__0_552 -> bb419__0_552 [label="unwind"];
    bb314__0_552 -> bb315__0_552 [label="return"];
    bb314__0_552 -> bb419__0_552 [label="unwind"];
    bb315__0_552 -> bb392__0_552 [label=""];
    bb316__0_552 -> bb317__0_552 [label="return"];
    bb316__0_552 -> bb419__0_552 [label="unwind"];
    bb317__0_552 -> bb318__0_552 [label="0"];
    bb317__0_552 -> bb319__0_552 [label="1"];
    bb317__0_552 -> bb4__0_552 [label="otherwise"];
    bb318__0_552 -> bb321__0_552 [label="success"];
    bb318__0_552 -> bb419__0_552 [label="unwind"];
    bb319__0_552 -> bb320__0_552 [label="return"];
    bb319__0_552 -> bb419__0_552 [label="unwind"];
    bb320__0_552 -> bb389__0_552 [label=""];
    bb321__0_552 -> bb322__0_552 [label="success"];
    bb321__0_552 -> bb419__0_552 [label="unwind"];
    bb322__0_552 -> bb323__0_552 [label="return"];
    bb322__0_552 -> bb419__0_552 [label="unwind"];
    bb323__0_552 -> bb324__0_552 [label="return"];
    bb323__0_552 -> bb419__0_552 [label="unwind"];
    bb324__0_552 -> bb325__0_552 [label="0"];
    bb324__0_552 -> bb326__0_552 [label="1"];
    bb324__0_552 -> bb4__0_552 [label="otherwise"];
    bb325__0_552 -> bb328__0_552 [label="return"];
    bb325__0_552 -> bb419__0_552 [label="unwind"];
    bb326__0_552 -> bb327__0_552 [label="return"];
    bb326__0_552 -> bb419__0_552 [label="unwind"];
    bb327__0_552 -> bb389__0_552 [label=""];
    bb328__0_552 -> bb329__0_552 [label="return"];
    bb328__0_552 -> bb419__0_552 [label="unwind"];
    bb329__0_552 -> bb330__0_552 [label="success"];
    bb329__0_552 -> bb419__0_552 [label="unwind"];
    bb330__0_552 -> bb331__0_552 [label="success"];
    bb330__0_552 -> bb419__0_552 [label="unwind"];
    bb331__0_552 -> bb332__0_552 [label="success"];
    bb331__0_552 -> bb419__0_552 [label="unwind"];
    bb332__0_552 -> bb333__0_552 [label="success"];
    bb332__0_552 -> bb419__0_552 [label="unwind"];
    bb333__0_552 -> bb334__0_552 [label="return"];
    bb333__0_552 -> bb419__0_552 [label="unwind"];
    bb334__0_552 -> bb335__0_552 [label="return"];
    bb334__0_552 -> bb419__0_552 [label="unwind"];
    bb335__0_552 -> bb336__0_552 [label="return"];
    bb335__0_552 -> bb419__0_552 [label="unwind"];
    bb336__0_552 -> bb337__0_552 [label="0"];
    bb336__0_552 -> bb338__0_552 [label="1"];
    bb336__0_552 -> bb4__0_552 [label="otherwise"];
    bb337__0_552 -> bb340__0_552 [label="return"];
    bb337__0_552 -> bb419__0_552 [label="unwind"];
    bb338__0_552 -> bb339__0_552 [label="return"];
    bb338__0_552 -> bb419__0_552 [label="unwind"];
    bb339__0_552 -> bb390__0_552 [label=""];
    bb340__0_552 -> bb347__0_552 [label="0"];
    bb340__0_552 -> bb341__0_552 [label="otherwise"];
    bb341__0_552 -> bb342__0_552 [label="return"];
    bb341__0_552 -> bb419__0_552 [label="unwind"];
    bb342__0_552 -> bb343__0_552 [label="return"];
    bb342__0_552 -> bb419__0_552 [label="unwind"];
    bb343__0_552 -> bb344__0_552 [label="0"];
    bb343__0_552 -> bb345__0_552 [label="1"];
    bb343__0_552 -> bb4__0_552 [label="otherwise"];
    bb344__0_552 -> bb348__0_552 [label=""];
    bb345__0_552 -> bb346__0_552 [label="return"];
    bb345__0_552 -> bb419__0_552 [label="unwind"];
    bb346__0_552 -> bb390__0_552 [label=""];
    bb347__0_552 -> bb348__0_552 [label=""];
    bb348__0_552 -> bb349__0_552 [label="return"];
    bb348__0_552 -> bb419__0_552 [label="unwind"];
    bb349__0_552 -> bb350__0_552 [label="return"];
    bb349__0_552 -> bb419__0_552 [label="unwind"];
    bb350__0_552 -> bb351__0_552 [label="0"];
    bb350__0_552 -> bb352__0_552 [label="1"];
    bb350__0_552 -> bb4__0_552 [label="otherwise"];
    bb351__0_552 -> bb355__0_552 [label="0"];
    bb351__0_552 -> bb354__0_552 [label="otherwise"];
    bb352__0_552 -> bb353__0_552 [label="return"];
    bb352__0_552 -> bb419__0_552 [label="unwind"];
    bb353__0_552 -> bb390__0_552 [label=""];
    bb354__0_552 -> bb356__0_552 [label="success"];
    bb354__0_552 -> bb419__0_552 [label="unwind"];
    bb355__0_552 -> bb367__0_552 [label=""];
    bb356__0_552 -> bb357__0_552 [label="return"];
    bb356__0_552 -> bb419__0_552 [label="unwind"];
    bb357__0_552 -> bb358__0_552 [label="return"];
    bb357__0_552 -> bb419__0_552 [label="unwind"];
    bb358__0_552 -> bb359__0_552 [label="0"];
    bb358__0_552 -> bb360__0_552 [label="1"];
    bb358__0_552 -> bb4__0_552 [label="otherwise"];
    bb359__0_552 -> bb362__0_552 [label="return"];
    bb359__0_552 -> bb419__0_552 [label="unwind"];
    bb360__0_552 -> bb361__0_552 [label="return"];
    bb360__0_552 -> bb419__0_552 [label="unwind"];
    bb361__0_552 -> bb388__0_552 [label=""];
    bb362__0_552 -> bb363__0_552 [label="return"];
    bb362__0_552 -> bb419__0_552 [label="unwind"];
    bb363__0_552 -> bb364__0_552 [label="0"];
    bb363__0_552 -> bb365__0_552 [label="1"];
    bb363__0_552 -> bb4__0_552 [label="otherwise"];
    bb364__0_552 -> bb367__0_552 [label=""];
    bb365__0_552 -> bb366__0_552 [label="return"];
    bb365__0_552 -> bb419__0_552 [label="unwind"];
    bb366__0_552 -> bb388__0_552 [label=""];
    bb367__0_552 -> bb368__0_552 [label="return"];
    bb367__0_552 -> bb419__0_552 [label="unwind"];
    bb368__0_552 -> bb369__0_552 [label="return"];
    bb368__0_552 -> bb419__0_552 [label="unwind"];
    bb369__0_552 -> bb370__0_552 [label="return"];
    bb369__0_552 -> bb419__0_552 [label="unwind"];
    bb370__0_552 -> bb371__0_552 [label="0"];
    bb370__0_552 -> bb372__0_552 [label="1"];
    bb370__0_552 -> bb4__0_552 [label="otherwise"];
    bb371__0_552 -> bb374__0_552 [label="return"];
    bb371__0_552 -> bb419__0_552 [label="unwind"];
    bb372__0_552 -> bb373__0_552 [label="return"];
    bb372__0_552 -> bb419__0_552 [label="unwind"];
    bb373__0_552 -> bb387__0_552 [label=""];
    bb374__0_552 -> bb375__0_552 [label="return"];
    bb374__0_552 -> bb419__0_552 [label="unwind"];
    bb375__0_552 -> bb376__0_552 [label="0"];
    bb375__0_552 -> bb377__0_552 [label="1"];
    bb375__0_552 -> bb4__0_552 [label="otherwise"];
    bb376__0_552 -> bb379__0_552 [label="success"];
    bb376__0_552 -> bb419__0_552 [label="unwind"];
    bb377__0_552 -> bb378__0_552 [label="return"];
    bb377__0_552 -> bb419__0_552 [label="unwind"];
    bb378__0_552 -> bb387__0_552 [label=""];
    bb379__0_552 -> bb380__0_552 [label="return"];
    bb379__0_552 -> bb419__0_552 [label="unwind"];
    bb380__0_552 -> bb381__0_552 [label="return"];
    bb380__0_552 -> bb419__0_552 [label="unwind"];
    bb381__0_552 -> bb382__0_552 [label="0"];
    bb381__0_552 -> bb383__0_552 [label="1"];
    bb381__0_552 -> bb4__0_552 [label="otherwise"];
    bb382__0_552 -> bb385__0_552 [label="return"];
    bb382__0_552 -> bb419__0_552 [label="unwind"];
    bb383__0_552 -> bb384__0_552 [label="return"];
    bb383__0_552 -> bb419__0_552 [label="unwind"];
    bb384__0_552 -> bb387__0_552 [label=""];
    bb385__0_552 -> bb386__0_552 [label="return"];
    bb385__0_552 -> bb424__0_552 [label="unwind"];
    bb386__0_552 -> bb408__0_552 [label=""];
    bb387__0_552 -> bb390__0_552 [label=""];
    bb388__0_552 -> bb390__0_552 [label=""];
    bb389__0_552 -> bb390__0_552 [label=""];
    bb390__0_552 -> bb392__0_552 [label=""];
    bb391__0_552 -> bb392__0_552 [label=""];
    bb392__0_552 -> bb393__0_552 [label=""];
    bb393__0_552 -> bb394__0_552 [label=""];
    bb394__0_552 -> bb399__0_552 [label=""];
    bb395__0_552 -> bb397__0_552 [label=""];
    bb396__0_552 -> bb397__0_552 [label=""];
    bb397__0_552 -> bb398__0_552 [label=""];
    bb398__0_552 -> bb399__0_552 [label=""];
    bb399__0_552 -> bb400__0_552 [label=""];
    bb400__0_552 -> bb401__0_552 [label=""];
    bb401__0_552 -> bb402__0_552 [label=""];
    bb402__0_552 -> bb403__0_552 [label=""];
    bb403__0_552 -> bb404__0_552 [label="return"];
    bb403__0_552 -> bb424__0_552 [label="unwind"];
    bb404__0_552 -> bb405__0_552 [label=""];
    bb405__0_552 -> bb406__0_552 [label=""];
    bb406__0_552 -> bb407__0_552 [label=""];
    bb407__0_552 -> bb408__0_552 [label=""];
    bb409__0_552 -> bb419__0_552 [label="return"];
    bb410__0_552 -> bb419__0_552 [label="return"];
    bb411__0_552 -> bb419__0_552 [label="return"];
    bb412__0_552 -> bb419__0_552 [label="return"];
    bb413__0_552 -> bb419__0_552 [label="return"];
    bb414__0_552 -> bb419__0_552 [label="return"];
    bb415__0_552 -> bb419__0_552 [label="return"];
    bb416__0_552 -> bb419__0_552 [label="return"];
    bb417__0_552 -> bb419__0_552 [label="return"];
    bb418__0_552 -> bb419__0_552 [label="return"];
    bb419__0_552 -> bb424__0_552 [label="return"];
    bb420__0_552 -> bb424__0_552 [label="return"];
    bb421__0_552 -> bb424__0_552 [label="return"];
    bb422__0_552 -> bb424__0_552 [label="return"];
    bb423__0_552 -> bb424__0_552 [label="return"];
    bb425__0_552 -> bb424__0_552 [label=""];
}
