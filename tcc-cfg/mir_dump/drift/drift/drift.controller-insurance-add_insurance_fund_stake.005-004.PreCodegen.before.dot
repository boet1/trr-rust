digraph Mir_0_194 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::insurance::add_insurance_fund_stake(_1: u64, _2: u64, _3: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake, _4: &amp;ReErased mut state::user::UserStats, _5: &amp;ReErased mut state::spot_market::SpotMarket, _6: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: ();<br align="left"/>let _15: error::ErrorCode;<br align="left"/>let _16: ();<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: &amp;ReErased std::string::String;<br align="left"/>let _20: &amp;ReErased std::string::String;<br align="left"/>let _21: std::string::String;<br align="left"/>let _22: std::string::String;<br align="left"/>let mut _23: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _26: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _27: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _32: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased error::ErrorCode;<br align="left"/>let _34: &amp;ReErased error::ErrorCode;<br align="left"/>let _35: ();<br align="left"/>let mut _36: &amp;ReErased str;<br align="left"/>let _37: &amp;ReErased str;<br align="left"/>let mut _38: error::ErrorCode;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: ();<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _46: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: ();<br align="left"/>let _54: ();<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _56: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _57: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _58: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: ();<br align="left"/>let _64: u128;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _66: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _67: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _68: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u128;<br align="left"/>let _74: u128;<br align="left"/>let _75: u128;<br align="left"/>let _76: u128;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _79: u64;<br align="left"/>let mut _80: u128;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: u128;<br align="left"/>let mut _87: i64;<br align="left"/>let mut _88: bool;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _91: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _92: u64;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: i64;<br align="left"/>let mut _98: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _99: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _100: i64;<br align="left"/>let mut _101: i64;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _103: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _104: u64;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: i64;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: i64;<br align="left"/>let _115: ();<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _117: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _118: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _119: u128;<br align="left"/>let mut _120: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: ();<br align="left"/>let mut _126: u128;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _128: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _129: u128;<br align="left"/>let mut _130: u128;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _135: u128;<br align="left"/>let mut _136: u128;<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _138: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _139: u128;<br align="left"/>let mut _140: u128;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: u128;<br align="left"/>let _146: ();<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _148: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _149: i64;<br align="left"/>let mut _150: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _151: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _152: u64;<br align="left"/>let mut _153: isize;<br align="left"/>let _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _155: !;<br align="left"/>let mut _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _157: i64;<br align="left"/>let mut _158: u64;<br align="left"/>let mut _159: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _160: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _161: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _162: i64;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: ();<br align="left"/>let _168: u128;<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _170: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _171: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _172: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _173: isize;<br align="left"/>let _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _175: !;<br align="left"/>let mut _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _177: u128;<br align="left"/>let _178: ();<br align="left"/>let _179: ();<br align="left"/>let mut _180: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _181: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _182: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _183: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _184: &amp;ReErased [u8];<br align="left"/>let _185: &amp;ReErased [u8];<br align="left"/>let mut _186: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _187: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _188: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _189: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _190: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _191: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _192: i64;<br align="left"/>let mut _193: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _194: state::events::StakeAction;<br align="left"/>let mut _195: u64;<br align="left"/>let mut _196: u16;<br align="left"/>let mut _197: u64;<br align="left"/>let mut _198: u128;<br align="left"/>let mut _199: u128;<br align="left"/>let mut _200: u128;<br align="left"/>let mut _201: u128;<br align="left"/>let mut _202: u128;<br align="left"/>let mut _203: u128;<br align="left"/>let mut _204: ();<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug amount =&gt; _1;<br align="left"/>debug insurance_vault_amount =&gt; _2;<br align="left"/>debug insurance_fund_stake =&gt; _3;<br align="left"/>debug user_stats =&gt; _4;<br align="left"/>debug spot_market =&gt; _5;<br align="left"/>debug now =&gt; _6;<br align="left"/>debug error_code =&gt; _15;<br align="left"/>debug res =&gt; _22;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug if_shares_before =&gt; _64;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug total_if_shares_before =&gt; _74;<br align="left"/>debug user_if_shares_before =&gt; _75;<br align="left"/>debug n_shares =&gt; _76;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug residual =&gt; _154;<br align="left"/>debug val =&gt; _157;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug if_shares_after =&gt; _168;<br align="left"/>debug residual =&gt; _174;<br align="left"/>debug val =&gt; _177;<br align="left"/>>;
    bb0__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _2<br/>_10 = Eq(move _11, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb1__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>_12 = Ne(move _13, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb2__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>_15 = error::ErrorCode::InvalidIFForNewStakes<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_205 = const _<br/>_26 = &amp;(*_205)<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_15<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _33)</td></tr></table>>];
    bb3__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ()<br/>_9 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = [move _32]<br/>StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_23 = Arguments::&lt;'_&gt;::new_v1(move _24, move _28)</td></tr></table>>];
    bb7__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = format(move _23)</td></tr></table>>];
    bb8__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>_21 = move _22<br/>StorageDead(_22)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_18 = &lt;String as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb9__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_16 = solana_program::log::sol_log(move _17)</td></tr></table>>];
    bb10__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb11__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = const &quot;Insurance Fund balance should be non-zero for new stakers to enter&quot;<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = solana_program::log::sol_log(move _36)</td></tr></table>>];
    bb12__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>_38 = _15<br/>_9 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _38)<br/>StorageDead(_38)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb14__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_39 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb15__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_8 as Continue).0: ())<br/>_7 = _43<br/>StorageDead(_43)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _2<br/>StorageLive(_48)<br/>_48 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_46 = apply_rebase_to_insurance_fund(move _47, move _48)</td></tr></table>>];
    bb16__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb18__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb20__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_49 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb21__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_45 as Continue).0: ())<br/>_44 = _53<br/>StorageDead(_53)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_3)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_56 = apply_rebase_to_insurance_fund_stake(move _57, move _58)</td></tr></table>>];
    bb22__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb23__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb25__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb26__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: ())<br/>_54 = _63<br/>StorageDead(_63)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;(*_3)<br/>StorageLive(_68)<br/>_68 = &amp;(*_5)<br/></td></tr><tr><td align="left">_66 = InsuranceFundStake::checked_if_shares(move _67, move _68)</td></tr></table>>];
    bb27__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb28__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb30__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_69 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb31__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_65 as Continue).0: u128)<br/>_64 = _73<br/>StorageDead(_73)<br/>StorageDead(_65)<br/>StorageLive(_74)<br/>_74 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_75)<br/>_75 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _1<br/>StorageLive(_80)<br/>_80 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_81)<br/>_81 = _2<br/></td></tr><tr><td align="left">_78 = vault_amount_to_if_shares(move _79, move _80, move _81)</td></tr></table>>];
    bb32__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb33__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb35__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_82 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb36__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_77 as Continue).0: u128)<br/>_76 = _86<br/>StorageDead(_86)<br/>StorageDead(_77)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _64<br/>_88 = Eq(move _89, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb37__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb38__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = _1<br/></td></tr><tr><td align="left">_91 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _92)</td></tr></table>>];
    bb40__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = ((*_3).7: i64)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = _1<br/></td></tr><tr><td align="left">_103 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _104)</td></tr></table>>];
    bb41__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb42__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_93 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb43__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_90 as Continue).0: i64)<br/>_87 = _97<br/>StorageDead(_97)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb45__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb47__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_105 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb48__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_102 as Continue).0: i64)<br/>_101 = _109<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_99 = &lt;i64 as SafeMath&gt;::safe_add(move _100, move _101)</td></tr></table>>];
    bb49__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb50__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _99)</td></tr></table>>];
    bb52__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_110 = discriminant(_98)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb53__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_98 as Continue).0: i64)<br/>_87 = _114<br/>StorageDead(_114)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_98 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb55__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>((*_3).7: i64) = move _87<br/>StorageDead(_87)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_3)<br/>StorageLive(_119)<br/>_119 = _76<br/>StorageLive(_120)<br/>_120 = &amp;(*_5)<br/></td></tr><tr><td align="left">_117 = InsuranceFundStake::increase_if_shares(move _118, move _119, move _120)</td></tr></table>>];
    bb57__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb58__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_121 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb59__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_116 as Continue).0: ())<br/>_115 = _125<br/>StorageDead(_125)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_130)<br/>_130 = _76<br/></td></tr><tr><td align="left">_128 = &lt;u128 as SafeMath&gt;::safe_add(move _129, move _130)</td></tr></table>>];
    bb60__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb61__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb63__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_131 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb64__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_127 as Continue).0: u128)<br/>_126 = _135<br/>StorageDead(_135)<br/>(((*_5).9: state::spot_market::InsuranceFund).1: u128) = move _126<br/>StorageDead(_126)<br/>StorageDead(_127)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_140)<br/>_140 = _76<br/></td></tr><tr><td align="left">_138 = &lt;u128 as SafeMath&gt;::safe_add(move _139, move _140)</td></tr></table>>];
    bb65__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_134)<br/>_134 = _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb66__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_126)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb68__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_141 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb69__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_137 as Continue).0: u128)<br/>_136 = _145<br/>StorageDead(_145)<br/>(((*_5).9: state::spot_market::InsuranceFund).2: u128) = move _136<br/>StorageDead(_136)<br/>StorageDead(_137)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = _1<br/></td></tr><tr><td align="left">_151 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _152)</td></tr></table>>];
    bb70__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb71__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_136)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _151)</td></tr></table>>];
    bb73__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_153 = discriminant(_150)<br/></td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb74__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_150 as Continue).0: i64)<br/>_149 = _157<br/>StorageDead(_157)<br/>StorageLive(_158)<br/>_158 = _2<br/>StorageLive(_159)<br/>_159 = &amp;mut (*_3)<br/>StorageLive(_160)<br/>_160 = &amp;mut (*_4)<br/>StorageLive(_161)<br/>_161 = &amp;mut (*_5)<br/>StorageLive(_162)<br/>_162 = _6<br/></td></tr><tr><td align="left">_148 = update_user_stats_if_stake_amount(move _149, move _158, move _159, move _160, move _161, move _162)</td></tr></table>>];
    bb75__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_150 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_156)<br/>_156 = _154<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _156)</td></tr></table>>];
    bb76__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb78__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_163 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb79__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_147 as Continue).0: ())<br/>_146 = _167<br/>StorageDead(_167)<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = &amp;(*_3)<br/>StorageLive(_172)<br/>_172 = &amp;(*_5)<br/></td></tr><tr><td align="left">_170 = InsuranceFundStake::checked_if_shares(move _171, move _172)</td></tr></table>>];
    bb80__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb81__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb83__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_173 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb84__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_169 as Continue).0: u128)<br/>_168 = _177<br/>StorageDead(_177)<br/>StorageDead(_169)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = _6<br/>StorageLive(_193)<br/>_193 = ((*_4).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_194)<br/>_194 = StakeAction::Stake<br/>StorageLive(_195)<br/>_195 = _1<br/>StorageLive(_196)<br/>_196 = ((*_5).42: u16)<br/>StorageLive(_197)<br/>_197 = _2<br/>StorageLive(_198)<br/>_198 = _64<br/>StorageLive(_199)<br/>_199 = _75<br/>StorageLive(_200)<br/>_200 = _74<br/>StorageLive(_201)<br/>_201 = _168<br/>StorageLive(_202)<br/>_202 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_203)<br/>_203 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>_191 = InsuranceFundStakeRecord { ts: move _192, user_authority: move _193, action: move _194, amount: move _195, market_index: move _196, insurance_vault_amount_before: move _197, if_shares_before: move _198, user_if_shares_before: move _199, total_if_shares_before: move _200, if_shares_after: move _201, user_if_shares_after: move _203, total_if_shares_after: move _202 }<br/>StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>_190 = &amp;_191<br/>_189 = &amp;(*_190)<br/></td></tr><tr><td align="left">_188 = &lt;InsuranceFundStakeRecord as anchor_lang::Event&gt;::data(move _189)</td></tr></table>>];
    bb85__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_176)<br/>_176 = _174<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _176)</td></tr></table>>];
    bb86__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/></td></tr><tr><td align="left">_185 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _186)</td></tr></table>>];
    bb88__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_184 = &amp;(*_185)<br/>StorageDead(_186)<br/>_183 = [move _184]<br/>StorageDead(_184)<br/>_182 = &amp;_183<br/>_181 = &amp;(*_182)<br/>_180 = move _181 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = solana_program::log::sol_log_data(move _180)</td></tr></table>>];
    bb89__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb90__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>_178 = const ()<br/>StorageDead(_178)<br/>StorageLive(_204)<br/>_204 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _204)<br/>StorageDead(_204)<br/>StorageDead(_168)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left">return</td></tr></table>>];
    bb97__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left">drop(_188)</td></tr></table>>];
    bb98__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb99__0_194 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_194 -> bb4__0_194 [label="0"];
    bb0__0_194 -> bb1__0_194 [label="otherwise"];
    bb1__0_194 -> bb3__0_194 [label="0"];
    bb1__0_194 -> bb2__0_194 [label="otherwise"];
    bb2__0_194 -> bb6__0_194 [label="return"];
    bb3__0_194 -> bb5__0_194 [label=""];
    bb4__0_194 -> bb5__0_194 [label=""];
    bb5__0_194 -> bb13__0_194 [label=""];
    bb6__0_194 -> bb7__0_194 [label="return"];
    bb7__0_194 -> bb8__0_194 [label="return"];
    bb8__0_194 -> bb9__0_194 [label="return"];
    bb8__0_194 -> bb98__0_194 [label="unwind"];
    bb9__0_194 -> bb10__0_194 [label="return"];
    bb9__0_194 -> bb98__0_194 [label="unwind"];
    bb10__0_194 -> bb11__0_194 [label="return"];
    bb10__0_194 -> bb99__0_194 [label="unwind"];
    bb11__0_194 -> bb12__0_194 [label="return"];
    bb12__0_194 -> bb13__0_194 [label=""];
    bb13__0_194 -> bb14__0_194 [label="return"];
    bb14__0_194 -> bb15__0_194 [label="0"];
    bb14__0_194 -> bb17__0_194 [label="1"];
    bb14__0_194 -> bb16__0_194 [label="otherwise"];
    bb15__0_194 -> bb19__0_194 [label="return"];
    bb17__0_194 -> bb18__0_194 [label="return"];
    bb18__0_194 -> bb96__0_194 [label=""];
    bb19__0_194 -> bb20__0_194 [label="return"];
    bb20__0_194 -> bb21__0_194 [label="0"];
    bb20__0_194 -> bb22__0_194 [label="1"];
    bb20__0_194 -> bb16__0_194 [label="otherwise"];
    bb21__0_194 -> bb24__0_194 [label="return"];
    bb22__0_194 -> bb23__0_194 [label="return"];
    bb23__0_194 -> bb96__0_194 [label=""];
    bb24__0_194 -> bb25__0_194 [label="return"];
    bb25__0_194 -> bb26__0_194 [label="0"];
    bb25__0_194 -> bb27__0_194 [label="1"];
    bb25__0_194 -> bb16__0_194 [label="otherwise"];
    bb26__0_194 -> bb29__0_194 [label="return"];
    bb27__0_194 -> bb28__0_194 [label="return"];
    bb28__0_194 -> bb96__0_194 [label=""];
    bb29__0_194 -> bb30__0_194 [label="return"];
    bb30__0_194 -> bb31__0_194 [label="0"];
    bb30__0_194 -> bb32__0_194 [label="1"];
    bb30__0_194 -> bb16__0_194 [label="otherwise"];
    bb31__0_194 -> bb34__0_194 [label="return"];
    bb32__0_194 -> bb33__0_194 [label="return"];
    bb33__0_194 -> bb95__0_194 [label=""];
    bb34__0_194 -> bb35__0_194 [label="return"];
    bb35__0_194 -> bb36__0_194 [label="0"];
    bb35__0_194 -> bb37__0_194 [label="1"];
    bb35__0_194 -> bb16__0_194 [label="otherwise"];
    bb36__0_194 -> bb40__0_194 [label="0"];
    bb36__0_194 -> bb39__0_194 [label="otherwise"];
    bb37__0_194 -> bb38__0_194 [label="return"];
    bb38__0_194 -> bb94__0_194 [label=""];
    bb39__0_194 -> bb41__0_194 [label="return"];
    bb40__0_194 -> bb46__0_194 [label="return"];
    bb41__0_194 -> bb42__0_194 [label="return"];
    bb42__0_194 -> bb43__0_194 [label="0"];
    bb42__0_194 -> bb44__0_194 [label="1"];
    bb42__0_194 -> bb16__0_194 [label="otherwise"];
    bb43__0_194 -> bb56__0_194 [label=""];
    bb44__0_194 -> bb45__0_194 [label="return"];
    bb45__0_194 -> bb93__0_194 [label=""];
    bb46__0_194 -> bb47__0_194 [label="return"];
    bb47__0_194 -> bb48__0_194 [label="0"];
    bb47__0_194 -> bb49__0_194 [label="1"];
    bb47__0_194 -> bb16__0_194 [label="otherwise"];
    bb48__0_194 -> bb51__0_194 [label="return"];
    bb49__0_194 -> bb50__0_194 [label="return"];
    bb50__0_194 -> bb92__0_194 [label=""];
    bb51__0_194 -> bb52__0_194 [label="return"];
    bb52__0_194 -> bb53__0_194 [label="0"];
    bb52__0_194 -> bb54__0_194 [label="1"];
    bb52__0_194 -> bb16__0_194 [label="otherwise"];
    bb53__0_194 -> bb56__0_194 [label=""];
    bb54__0_194 -> bb55__0_194 [label="return"];
    bb55__0_194 -> bb92__0_194 [label=""];
    bb56__0_194 -> bb57__0_194 [label="return"];
    bb57__0_194 -> bb58__0_194 [label="return"];
    bb58__0_194 -> bb59__0_194 [label="0"];
    bb58__0_194 -> bb60__0_194 [label="1"];
    bb58__0_194 -> bb16__0_194 [label="otherwise"];
    bb59__0_194 -> bb62__0_194 [label="return"];
    bb60__0_194 -> bb61__0_194 [label="return"];
    bb61__0_194 -> bb94__0_194 [label=""];
    bb62__0_194 -> bb63__0_194 [label="return"];
    bb63__0_194 -> bb64__0_194 [label="0"];
    bb63__0_194 -> bb65__0_194 [label="1"];
    bb63__0_194 -> bb16__0_194 [label="otherwise"];
    bb64__0_194 -> bb67__0_194 [label="return"];
    bb65__0_194 -> bb66__0_194 [label="return"];
    bb66__0_194 -> bb94__0_194 [label=""];
    bb67__0_194 -> bb68__0_194 [label="return"];
    bb68__0_194 -> bb69__0_194 [label="0"];
    bb68__0_194 -> bb70__0_194 [label="1"];
    bb68__0_194 -> bb16__0_194 [label="otherwise"];
    bb69__0_194 -> bb72__0_194 [label="return"];
    bb70__0_194 -> bb71__0_194 [label="return"];
    bb71__0_194 -> bb94__0_194 [label=""];
    bb72__0_194 -> bb73__0_194 [label="return"];
    bb73__0_194 -> bb74__0_194 [label="0"];
    bb73__0_194 -> bb75__0_194 [label="1"];
    bb73__0_194 -> bb16__0_194 [label="otherwise"];
    bb74__0_194 -> bb77__0_194 [label="return"];
    bb75__0_194 -> bb76__0_194 [label="return"];
    bb76__0_194 -> bb91__0_194 [label=""];
    bb77__0_194 -> bb78__0_194 [label="return"];
    bb78__0_194 -> bb79__0_194 [label="0"];
    bb78__0_194 -> bb80__0_194 [label="1"];
    bb78__0_194 -> bb16__0_194 [label="otherwise"];
    bb79__0_194 -> bb82__0_194 [label="return"];
    bb80__0_194 -> bb81__0_194 [label="return"];
    bb81__0_194 -> bb91__0_194 [label=""];
    bb82__0_194 -> bb83__0_194 [label="return"];
    bb83__0_194 -> bb84__0_194 [label="0"];
    bb83__0_194 -> bb85__0_194 [label="1"];
    bb83__0_194 -> bb16__0_194 [label="otherwise"];
    bb84__0_194 -> bb87__0_194 [label="return"];
    bb85__0_194 -> bb86__0_194 [label="return"];
    bb86__0_194 -> bb94__0_194 [label=""];
    bb87__0_194 -> bb88__0_194 [label="return"];
    bb87__0_194 -> bb97__0_194 [label="unwind"];
    bb88__0_194 -> bb89__0_194 [label="return"];
    bb88__0_194 -> bb97__0_194 [label="unwind"];
    bb89__0_194 -> bb90__0_194 [label="return"];
    bb89__0_194 -> bb99__0_194 [label="unwind"];
    bb90__0_194 -> bb96__0_194 [label=""];
    bb91__0_194 -> bb94__0_194 [label=""];
    bb92__0_194 -> bb93__0_194 [label=""];
    bb93__0_194 -> bb94__0_194 [label=""];
    bb94__0_194 -> bb95__0_194 [label=""];
    bb95__0_194 -> bb96__0_194 [label=""];
    bb97__0_194 -> bb99__0_194 [label="return"];
    bb98__0_194 -> bb99__0_194 [label="return"];
}
