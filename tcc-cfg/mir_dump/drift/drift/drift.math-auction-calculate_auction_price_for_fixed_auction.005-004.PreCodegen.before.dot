digraph Mir_0_1904 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_auction_price_for_fixed_auction(_1: &amp;ReErased state::user::Order, _2: u64, _3: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: u64;<br align="left"/>let _14: u64;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _19: u8;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: u64;<br align="left"/>let _25: u8;<br align="left"/>let _26: u64;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u64;<br align="left"/>let _35: u64;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _37: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _38: i64;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u64;<br align="left"/>let _44: ();<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: u8;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: controller::position::PositionDirection;<br align="left"/>let _51: u64;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _54: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _60: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: u64;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _70: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: u64;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _85: u8;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u64;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _95: u64;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _97: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _98: u64;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _100: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _101: u64;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _103: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _104: u64;<br align="left"/>let mut _105: u64;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: u64;<br align="left"/>let mut _111: u64;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _113: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _114: u64;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: u64;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: u64;<br align="left"/>let mut _125: u64;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _127: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _128: u8;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: u64;<br align="left"/>let mut _134: isize;<br align="left"/>let _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _136: !;<br align="left"/>let mut _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _138: u64;<br align="left"/>let _139: u64;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _142: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _143: u64;<br align="left"/>let mut _144: u64;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: u64;<br align="left"/>let mut _150: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _151: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _152: u64;<br align="left"/>let mut _153: u64;<br align="left"/>let mut _154: isize;<br align="left"/>let _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _156: !;<br align="left"/>let mut _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _158: u64;<br align="left"/>let mut _159: u64;<br align="left"/>let mut _160: u64;<br align="left"/>let mut _161: controller::position::PositionDirection;<br align="left"/>debug order =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug tick_size =&gt; _3;<br align="left"/>debug slots_elapsed =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug delta_numerator =&gt; _14;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug delta_denominator =&gt; _25;<br align="left"/>debug auction_start_price =&gt; _26;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug auction_end_price =&gt; _35;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug price_delta =&gt; _51;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>debug residual =&gt; _135;<br align="left"/>debug val =&gt; _138;<br align="left"/>debug price =&gt; _139;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug residual =&gt; _155;<br align="left"/>debug val =&gt; _158;<br align="left"/>>;
    bb0__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>StorageLive(_8)<br/>_8 = ((*_1).0: u64)<br/></td></tr><tr><td align="left">_6 = &lt;u64 as SafeMath&gt;::safe_sub(move _7, move _8)</td></tr></table>>];
    bb1__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: u64)<br/>_4 = _13<br/>StorageDead(_13)<br/>StorageDead(_5)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _4<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_1).22: u8)<br/></td></tr><tr><td align="left">_18 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _19)</td></tr></table>>];
    bb4__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_20 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Continue).0: u64)<br/>_16 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_14 = std::cmp::min::&lt;u64&gt;(move _15, move _16)</td></tr></table>>];
    bb10__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb11__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_17)<br/>StorageLive(_25)<br/>_25 = ((*_1).22: u8)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).6: i64)<br/></td></tr><tr><td align="left">_28 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _29)</td></tr></table>>];
    bb13__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb14__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_30 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Continue).0: u64)<br/>_26 = _34<br/>StorageDead(_34)<br/>StorageDead(_27)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = ((*_1).7: i64)<br/></td></tr><tr><td align="left">_37 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _38)</td></tr></table>>];
    bb16__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb17__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb19__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb20__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_36 as Continue).0: u64)<br/>_35 = _43<br/>StorageDead(_43)<br/>StorageDead(_36)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _25<br/>_45 = Eq(move _46, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb21__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb22__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_48)<br/>_48 = _35<br/>StorageLive(_49)<br/>_49 = _3<br/>StorageLive(_50)<br/>_50 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_price(move _48, move _49, move _50)</td></tr></table>>];
    bb24__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = const ()<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_51)<br/>_52 = discriminant(((*_1).17: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb25__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = _26<br/>StorageLive(_105)<br/>_105 = _35<br/></td></tr><tr><td align="left">_103 = &lt;u64 as SafeMath&gt;::safe_sub(move _104, move _105)</td></tr></table>>];
    bb27__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = _35<br/>StorageLive(_62)<br/>_62 = _26<br/></td></tr><tr><td align="left">_60 = &lt;u64 as SafeMath&gt;::safe_sub(move _61, move _62)</td></tr></table>>];
    bb28__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb29__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_63 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb30__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_59 as Continue).0: u64)<br/>_58 = _67<br/>StorageDead(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _14<br/></td></tr><tr><td align="left">_70 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _71)</td></tr></table>>];
    bb31__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb32__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb34__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_72 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb35__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_69 as Continue).0: u64)<br/>_68 = _76<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_57 = &lt;u64 as SafeMath&gt;::safe_mul(move _58, move _68)</td></tr></table>>];
    bb36__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb37__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb39__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_77 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb40__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_56 as Continue).0: u64)<br/>_55 = _81<br/>StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _25<br/></td></tr><tr><td align="left">_84 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _85)</td></tr></table>>];
    bb41__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb42__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb44__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_86 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb45__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_83 as Continue).0: u64)<br/>_82 = _90<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_54 = &lt;u64 as SafeMath&gt;::safe_div(move _55, move _82)</td></tr></table>>];
    bb46__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb47__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_82)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb49__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_91 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb50__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_53 as Continue).0: u64)<br/>_51 = _95<br/>StorageDead(_95)<br/>StorageDead(_83)<br/>StorageDead(_69)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb52__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb54__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_106 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb55__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_102 as Continue).0: u64)<br/>_101 = _110<br/>StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = _14<br/></td></tr><tr><td align="left">_113 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _114)</td></tr></table>>];
    bb56__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb57__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb59__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_115 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb60__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_112 as Continue).0: u64)<br/>_111 = _119<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_100 = &lt;u64 as SafeMath&gt;::safe_mul(move _101, move _111)</td></tr></table>>];
    bb61__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb62__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb64__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_120 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb65__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_99 as Continue).0: u64)<br/>_98 = _124<br/>StorageDead(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _25<br/></td></tr><tr><td align="left">_127 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _128)</td></tr></table>>];
    bb66__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb67__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb69__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_129 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb70__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_126 as Continue).0: u64)<br/>_125 = _133<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_97 = &lt;u64 as SafeMath&gt;::safe_div(move _98, move _125)</td></tr></table>>];
    bb71__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb72__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_125)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb74__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_134 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb75__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_96 as Continue).0: u64)<br/>_51 = _138<br/>StorageDead(_138)<br/>StorageDead(_126)<br/>StorageDead(_112)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_137)<br/>_137 = _135<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _137)</td></tr></table>>];
    bb77__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_140 = discriminant(((*_1).17: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb79__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = _26<br/>StorageLive(_153)<br/>_153 = _51<br/></td></tr><tr><td align="left">_151 = &lt;u64 as SafeMath&gt;::safe_sub(move _152, move _153)</td></tr></table>>];
    bb80__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = _26<br/>StorageLive(_144)<br/>_144 = _51<br/></td></tr><tr><td align="left">_142 = &lt;u64 as SafeMath&gt;::safe_add(move _143, move _144)</td></tr></table>>];
    bb81__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb82__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_145 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb83__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_141 as Continue).0: u64)<br/>_139 = _149<br/>StorageDead(_149)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb85__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _151)</td></tr></table>>];
    bb87__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_154 = discriminant(_150)<br/></td></tr><tr><td align="left">switchInt(move _154)</td></tr></table>>];
    bb88__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_150 as Continue).0: u64)<br/>_139 = _158<br/>StorageDead(_158)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_150 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_157)<br/>_157 = _155<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _157)</td></tr></table>>];
    bb90__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_155)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = _139<br/>StorageLive(_160)<br/>_160 = _3<br/>StorageLive(_161)<br/>_161 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_price(move _159, move _160, move _161)</td></tr></table>>];
    bb92__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_139)<br/>StorageDead(_51)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_14)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_1904 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1904 -> bb1__0_1904 [label="return"];
    bb1__0_1904 -> bb2__0_1904 [label="return"];
    bb2__0_1904 -> bb3__0_1904 [label="0"];
    bb2__0_1904 -> bb5__0_1904 [label="1"];
    bb2__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb3__0_1904 -> bb7__0_1904 [label="return"];
    bb5__0_1904 -> bb6__0_1904 [label="return"];
    bb6__0_1904 -> bb106__0_1904 [label=""];
    bb7__0_1904 -> bb8__0_1904 [label="return"];
    bb8__0_1904 -> bb9__0_1904 [label="0"];
    bb8__0_1904 -> bb10__0_1904 [label="1"];
    bb8__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb9__0_1904 -> bb12__0_1904 [label="return"];
    bb10__0_1904 -> bb11__0_1904 [label="return"];
    bb11__0_1904 -> bb105__0_1904 [label=""];
    bb12__0_1904 -> bb13__0_1904 [label="return"];
    bb13__0_1904 -> bb14__0_1904 [label="return"];
    bb14__0_1904 -> bb15__0_1904 [label="0"];
    bb14__0_1904 -> bb16__0_1904 [label="1"];
    bb14__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb15__0_1904 -> bb18__0_1904 [label="return"];
    bb16__0_1904 -> bb17__0_1904 [label="return"];
    bb17__0_1904 -> bb104__0_1904 [label=""];
    bb18__0_1904 -> bb19__0_1904 [label="return"];
    bb19__0_1904 -> bb20__0_1904 [label="0"];
    bb19__0_1904 -> bb21__0_1904 [label="1"];
    bb19__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb20__0_1904 -> bb24__0_1904 [label="0"];
    bb20__0_1904 -> bb23__0_1904 [label="otherwise"];
    bb21__0_1904 -> bb22__0_1904 [label="return"];
    bb22__0_1904 -> bb103__0_1904 [label=""];
    bb23__0_1904 -> bb25__0_1904 [label="return"];
    bb24__0_1904 -> bb27__0_1904 [label="0"];
    bb24__0_1904 -> bb26__0_1904 [label="1"];
    bb24__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb25__0_1904 -> bb103__0_1904 [label=""];
    bb26__0_1904 -> bb53__0_1904 [label="return"];
    bb27__0_1904 -> bb28__0_1904 [label="return"];
    bb28__0_1904 -> bb29__0_1904 [label="return"];
    bb29__0_1904 -> bb30__0_1904 [label="0"];
    bb29__0_1904 -> bb31__0_1904 [label="1"];
    bb29__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb30__0_1904 -> bb33__0_1904 [label="return"];
    bb31__0_1904 -> bb32__0_1904 [label="return"];
    bb32__0_1904 -> bb101__0_1904 [label=""];
    bb33__0_1904 -> bb34__0_1904 [label="return"];
    bb34__0_1904 -> bb35__0_1904 [label="0"];
    bb34__0_1904 -> bb36__0_1904 [label="1"];
    bb34__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb35__0_1904 -> bb38__0_1904 [label="return"];
    bb36__0_1904 -> bb37__0_1904 [label="return"];
    bb37__0_1904 -> bb99__0_1904 [label=""];
    bb38__0_1904 -> bb39__0_1904 [label="return"];
    bb39__0_1904 -> bb40__0_1904 [label="0"];
    bb39__0_1904 -> bb41__0_1904 [label="1"];
    bb39__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb40__0_1904 -> bb43__0_1904 [label="return"];
    bb41__0_1904 -> bb42__0_1904 [label="return"];
    bb42__0_1904 -> bb99__0_1904 [label=""];
    bb43__0_1904 -> bb44__0_1904 [label="return"];
    bb44__0_1904 -> bb45__0_1904 [label="0"];
    bb44__0_1904 -> bb46__0_1904 [label="1"];
    bb44__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb45__0_1904 -> bb48__0_1904 [label="return"];
    bb46__0_1904 -> bb47__0_1904 [label="return"];
    bb47__0_1904 -> bb98__0_1904 [label=""];
    bb48__0_1904 -> bb49__0_1904 [label="return"];
    bb49__0_1904 -> bb50__0_1904 [label="0"];
    bb49__0_1904 -> bb51__0_1904 [label="1"];
    bb49__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb50__0_1904 -> bb78__0_1904 [label=""];
    bb51__0_1904 -> bb52__0_1904 [label="return"];
    bb52__0_1904 -> bb98__0_1904 [label=""];
    bb53__0_1904 -> bb54__0_1904 [label="return"];
    bb54__0_1904 -> bb55__0_1904 [label="0"];
    bb54__0_1904 -> bb56__0_1904 [label="1"];
    bb54__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb55__0_1904 -> bb58__0_1904 [label="return"];
    bb56__0_1904 -> bb57__0_1904 [label="return"];
    bb57__0_1904 -> bb97__0_1904 [label=""];
    bb58__0_1904 -> bb59__0_1904 [label="return"];
    bb59__0_1904 -> bb60__0_1904 [label="0"];
    bb59__0_1904 -> bb61__0_1904 [label="1"];
    bb59__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb60__0_1904 -> bb63__0_1904 [label="return"];
    bb61__0_1904 -> bb62__0_1904 [label="return"];
    bb62__0_1904 -> bb95__0_1904 [label=""];
    bb63__0_1904 -> bb64__0_1904 [label="return"];
    bb64__0_1904 -> bb65__0_1904 [label="0"];
    bb64__0_1904 -> bb66__0_1904 [label="1"];
    bb64__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb65__0_1904 -> bb68__0_1904 [label="return"];
    bb66__0_1904 -> bb67__0_1904 [label="return"];
    bb67__0_1904 -> bb95__0_1904 [label=""];
    bb68__0_1904 -> bb69__0_1904 [label="return"];
    bb69__0_1904 -> bb70__0_1904 [label="0"];
    bb69__0_1904 -> bb71__0_1904 [label="1"];
    bb69__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb70__0_1904 -> bb73__0_1904 [label="return"];
    bb71__0_1904 -> bb72__0_1904 [label="return"];
    bb72__0_1904 -> bb94__0_1904 [label=""];
    bb73__0_1904 -> bb74__0_1904 [label="return"];
    bb74__0_1904 -> bb75__0_1904 [label="0"];
    bb74__0_1904 -> bb76__0_1904 [label="1"];
    bb74__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb75__0_1904 -> bb78__0_1904 [label=""];
    bb76__0_1904 -> bb77__0_1904 [label="return"];
    bb77__0_1904 -> bb94__0_1904 [label=""];
    bb78__0_1904 -> bb80__0_1904 [label="0"];
    bb78__0_1904 -> bb79__0_1904 [label="1"];
    bb78__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb79__0_1904 -> bb86__0_1904 [label="return"];
    bb80__0_1904 -> bb81__0_1904 [label="return"];
    bb81__0_1904 -> bb82__0_1904 [label="return"];
    bb82__0_1904 -> bb83__0_1904 [label="0"];
    bb82__0_1904 -> bb84__0_1904 [label="1"];
    bb82__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb83__0_1904 -> bb91__0_1904 [label=""];
    bb84__0_1904 -> bb85__0_1904 [label="return"];
    bb85__0_1904 -> bb93__0_1904 [label=""];
    bb86__0_1904 -> bb87__0_1904 [label="return"];
    bb87__0_1904 -> bb88__0_1904 [label="0"];
    bb87__0_1904 -> bb89__0_1904 [label="1"];
    bb87__0_1904 -> bb4__0_1904 [label="otherwise"];
    bb88__0_1904 -> bb91__0_1904 [label=""];
    bb89__0_1904 -> bb90__0_1904 [label="return"];
    bb90__0_1904 -> bb93__0_1904 [label=""];
    bb91__0_1904 -> bb92__0_1904 [label="return"];
    bb92__0_1904 -> bb107__0_1904 [label=""];
    bb93__0_1904 -> bb102__0_1904 [label=""];
    bb94__0_1904 -> bb96__0_1904 [label=""];
    bb95__0_1904 -> bb96__0_1904 [label=""];
    bb96__0_1904 -> bb97__0_1904 [label=""];
    bb97__0_1904 -> bb102__0_1904 [label=""];
    bb98__0_1904 -> bb100__0_1904 [label=""];
    bb99__0_1904 -> bb100__0_1904 [label=""];
    bb100__0_1904 -> bb101__0_1904 [label=""];
    bb101__0_1904 -> bb102__0_1904 [label=""];
    bb102__0_1904 -> bb103__0_1904 [label=""];
    bb103__0_1904 -> bb104__0_1904 [label=""];
    bb104__0_1904 -> bb105__0_1904 [label=""];
    bb105__0_1904 -> bb106__0_1904 [label=""];
    bb106__0_1904 -> bb107__0_1904 [label=""];
}
