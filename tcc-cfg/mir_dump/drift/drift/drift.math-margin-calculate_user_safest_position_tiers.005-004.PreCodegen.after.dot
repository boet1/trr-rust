digraph Mir_0_2462 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_user_safest_position_tiers(_1: &amp;ReErased state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;(state::spot_market::AssetTier, state::perp_market::ContractTier), error::ErrorCode&gt;<br align="left"/>let mut _4: state::spot_market::AssetTier;<br align="left"/>let mut _5: state::perp_market::ContractTier;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _8: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _9: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _10: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _11: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::option::Option&lt;&amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _15: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _16: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: !;<br align="left"/>let _19: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _20: ();<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _25: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _26: state::spot_market::SpotBalanceType;<br align="left"/>let mut _27: !;<br align="left"/>let _28: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _30: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _31: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased u16;<br align="left"/>let _33: &amp;ReErased u16;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _39: state::spot_market::AssetTier;<br align="left"/>let mut _40: state::spot_market::AssetTier;<br align="left"/>let mut _41: state::spot_market::AssetTier;<br align="left"/>let mut _42: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _43: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _46: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _47: &amp;ReErased [state::user::PerpPosition];<br align="left"/>let mut _48: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _49: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::option::Option&lt;&amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _52: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _53: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: !;<br align="left"/>let _56: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _57: ();<br align="left"/>let mut _58: bool;<br align="left"/>let mut _59: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _60: !;<br align="left"/>let _61: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _62: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _64: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _65: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased u16;<br align="left"/>let _67: &amp;ReErased u16;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _73: state::perp_market::ContractTier;<br align="left"/>let mut _74: state::perp_market::ContractTier;<br align="left"/>let mut _75: state::perp_market::ContractTier;<br align="left"/>let mut _76: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _77: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _78: (state::spot_market::AssetTier, state::perp_market::ContractTier);<br align="left"/>let mut _79: state::spot_market::AssetTier;<br align="left"/>let mut _80: state::perp_market::ContractTier;<br align="left"/>let mut _81: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug safest_tier_spot_liablity =&gt; _4;<br align="left"/>debug safest_tier_perp_liablity =&gt; _5;<br align="left"/>debug iter =&gt; _11;<br align="left"/>debug spot_position =&gt; _19;<br align="left"/>debug spot_market =&gt; _28;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug iter =&gt; _49;<br align="left"/>debug market_position =&gt; _56;<br align="left"/>debug market =&gt; _61;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>>;
    bb0__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = &lt;state::spot_market::AssetTier as Default&gt;::default()</td></tr></table>>];
    bb1__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = &lt;state::perp_market::ContractTier as Default&gt;::default()</td></tr></table>>];
    bb2__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).3: [state::user::SpotPosition; 8])<br/>_9 = move _10 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = core::slice::&lt;impl [SpotPosition]&gt;::iter(move _9)</td></tr></table>>];
    bb3__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as IntoIterator&gt;::into_iter(move _8)</td></tr></table>>];
    bb4__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_11)<br/>_11 = move _7<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;mut _11<br/>_15 = &amp;mut (*_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::next(move _15)</td></tr></table>>];
    bb6__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb7__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_14 as Some).0: &amp;state::user::SpotPosition)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_19)<br/></td></tr><tr><td align="left">_21 = SpotPosition::is_available(move _22)</td></tr></table>>];
    bb8__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_6 = const ()<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;((*_1).4: [state::user::PerpPosition; 8])<br/>_47 = move _48 as &amp;[state::user::PerpPosition] (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = core::slice::&lt;impl [PerpPosition]&gt;::iter(move _47)</td></tr></table>>];
    bb10__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb11__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;((*_19).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_25)<br/>_81 = const _<br/>_25 = &amp;(*_81)<br/></td></tr><tr><td align="left">_23 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _24, move _25)</td></tr></table>>];
    bb13__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb14__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>_20 = const ()<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;(*_3)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;((*_19).4: u16)<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_30 = SpotMarketMap::&lt;'_&gt;::get_ref(move _31, move _32)</td></tr></table>>];
    bb16__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb17__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb18__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_29 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_28 = move _38<br/>StorageDead(_38)<br/>_84 = discriminant(_29)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _4<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_28<br/></td></tr><tr><td align="left">_42 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _43)</td></tr></table>>];
    bb19__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(state::spot_market::AssetTier, state::perp_market::ContractTier), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb20__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>_82 = discriminant(_29)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_41 = ((*_42).46: state::spot_market::AssetTier)<br/></td></tr><tr><td align="left">_39 = std::cmp::min::&lt;state::spot_market::AssetTier&gt;(move _40, move _41)</td></tr></table>>];
    bb22__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>_4 = move _39<br/>StorageDead(_39)<br/>StorageDead(_42)<br/>_13 = const ()<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb23__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as IntoIterator&gt;::into_iter(move _46)</td></tr></table>>];
    bb25__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_49)<br/>_49 = move _45<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;mut _49<br/>_52 = &amp;mut (*_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as Iterator&gt;::next(move _52)</td></tr></table>>];
    bb27__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_54 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb28__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_51 as Some).0: &amp;state::user::PerpPosition)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;(*_56)<br/></td></tr><tr><td align="left">_58 = PerpPosition::is_available(move _59)</td></tr></table>>];
    bb29__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_44 = const ()<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _4<br/>StorageLive(_80)<br/>_80 = _5<br/>_78 = (move _79, move _80)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>_0 = std::result::Result::&lt;(state::spot_market::AssetTier, state::perp_market::ContractTier), error::ErrorCode&gt;::Ok(move _78)<br/>StorageDead(_78)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb31__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_57 = const ()<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;(*_2)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;((*_56).13: u16)<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_64 = PerpMarketMap::&lt;'_&gt;::get_ref(move _65, move _66)</td></tr></table>>];
    bb33__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb34__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_68 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb35__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = move ((_63 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_62 = move _72<br/>StorageDead(_72)<br/>_61 = &amp;_62<br/>_88 = discriminant(_63)<br/>StorageDead(_67)<br/>StorageDead(_63)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _5<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_61)<br/></td></tr><tr><td align="left">_76 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb36__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(state::spot_market::AssetTier, state::perp_market::ContractTier), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb37__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>_86 = discriminant(_63)<br/>StorageDead(_67)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_75 = ((*_76).24: state::perp_market::ContractTier)<br/></td></tr><tr><td align="left">_73 = std::cmp::min::&lt;state::perp_market::ContractTier&gt;(move _74, move _75)</td></tr></table>>];
    bb39__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>_5 = move _73<br/>StorageDead(_73)<br/>StorageDead(_76)<br/>_50 = const ()<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb40__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb43__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb44__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb45__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb46__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2462 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2462 -> bb1__0_2462 [label="return"];
    bb1__0_2462 -> bb2__0_2462 [label="return"];
    bb2__0_2462 -> bb3__0_2462 [label="return"];
    bb3__0_2462 -> bb4__0_2462 [label="return"];
    bb4__0_2462 -> bb5__0_2462 [label=""];
    bb5__0_2462 -> bb6__0_2462 [label="return"];
    bb6__0_2462 -> bb9__0_2462 [label="0"];
    bb6__0_2462 -> bb7__0_2462 [label="1"];
    bb6__0_2462 -> bb8__0_2462 [label="otherwise"];
    bb7__0_2462 -> bb10__0_2462 [label="return"];
    bb9__0_2462 -> bb24__0_2462 [label="return"];
    bb10__0_2462 -> bb12__0_2462 [label="0"];
    bb10__0_2462 -> bb11__0_2462 [label="otherwise"];
    bb11__0_2462 -> bb14__0_2462 [label=""];
    bb12__0_2462 -> bb13__0_2462 [label="return"];
    bb13__0_2462 -> bb15__0_2462 [label="0"];
    bb13__0_2462 -> bb14__0_2462 [label="otherwise"];
    bb14__0_2462 -> bb5__0_2462 [label=""];
    bb15__0_2462 -> bb16__0_2462 [label="return"];
    bb16__0_2462 -> bb17__0_2462 [label="return"];
    bb16__0_2462 -> bb45__0_2462 [label="unwind"];
    bb17__0_2462 -> bb18__0_2462 [label="0"];
    bb17__0_2462 -> bb19__0_2462 [label="1"];
    bb17__0_2462 -> bb8__0_2462 [label="otherwise"];
    bb18__0_2462 -> bb21__0_2462 [label="return"];
    bb18__0_2462 -> bb44__0_2462 [label="unwind"];
    bb19__0_2462 -> bb20__0_2462 [label="return"];
    bb19__0_2462 -> bb47__0_2462 [label="unwind"];
    bb20__0_2462 -> bb41__0_2462 [label=""];
    bb21__0_2462 -> bb22__0_2462 [label="return"];
    bb21__0_2462 -> bb44__0_2462 [label="unwind"];
    bb22__0_2462 -> bb23__0_2462 [label="return"];
    bb22__0_2462 -> bb45__0_2462 [label="unwind"];
    bb23__0_2462 -> bb5__0_2462 [label=""];
    bb24__0_2462 -> bb25__0_2462 [label="return"];
    bb25__0_2462 -> bb26__0_2462 [label=""];
    bb26__0_2462 -> bb27__0_2462 [label="return"];
    bb27__0_2462 -> bb29__0_2462 [label="0"];
    bb27__0_2462 -> bb28__0_2462 [label="1"];
    bb27__0_2462 -> bb8__0_2462 [label="otherwise"];
    bb28__0_2462 -> bb30__0_2462 [label="return"];
    bb29__0_2462 -> bb42__0_2462 [label=""];
    bb30__0_2462 -> bb32__0_2462 [label="0"];
    bb30__0_2462 -> bb31__0_2462 [label="otherwise"];
    bb31__0_2462 -> bb26__0_2462 [label=""];
    bb32__0_2462 -> bb33__0_2462 [label="return"];
    bb33__0_2462 -> bb34__0_2462 [label="return"];
    bb33__0_2462 -> bb45__0_2462 [label="unwind"];
    bb34__0_2462 -> bb35__0_2462 [label="0"];
    bb34__0_2462 -> bb36__0_2462 [label="1"];
    bb34__0_2462 -> bb8__0_2462 [label="otherwise"];
    bb35__0_2462 -> bb38__0_2462 [label="return"];
    bb35__0_2462 -> bb43__0_2462 [label="unwind"];
    bb36__0_2462 -> bb37__0_2462 [label="return"];
    bb36__0_2462 -> bb46__0_2462 [label="unwind"];
    bb37__0_2462 -> bb41__0_2462 [label=""];
    bb38__0_2462 -> bb39__0_2462 [label="return"];
    bb38__0_2462 -> bb43__0_2462 [label="unwind"];
    bb39__0_2462 -> bb40__0_2462 [label="return"];
    bb39__0_2462 -> bb45__0_2462 [label="unwind"];
    bb40__0_2462 -> bb26__0_2462 [label=""];
    bb41__0_2462 -> bb42__0_2462 [label=""];
    bb43__0_2462 -> bb45__0_2462 [label="return"];
    bb44__0_2462 -> bb45__0_2462 [label="return"];
    bb46__0_2462 -> bb45__0_2462 [label=""];
    bb47__0_2462 -> bb45__0_2462 [label=""];
}
