// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:924:1: 924:33>::update_balance_type` after PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:924:1: 924:33>::update_balance_type(_1: &mut PoolBalance, _2: SpotBalanceType) -> std::result::Result<(), error::ErrorCode> {
    debug self => _1;
    debug _balance_type => _2;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let mut _3: error::ErrorCode;

    bb0: {
        StorageLive(_3);
        _3 = error::ErrorCode::CantUpdatePoolBalanceType;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _3);
        StorageDead(_3);
        return;
    }
}
