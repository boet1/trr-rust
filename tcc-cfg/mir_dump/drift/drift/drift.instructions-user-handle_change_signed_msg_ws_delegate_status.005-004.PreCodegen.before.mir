// MIR for `instructions::user::handle_change_signed_msg_ws_delegate_status` before PreCodegen

fn instructions::user::handle_change_signed_msg_ws_delegate_status(_1: anchor_lang::context::Context<'_, '_, '_, '_, instructions::user::ChangeSignedMsgWsDelegateStatus<'_>>, _2: anchor_lang::prelude::Pubkey, _3: bool) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug delegate => _2;
    debug add => _3;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _4: ();
    let mut _5: bool;
    let _6: ();
    let mut _7: &mut std::vec::Vec<anchor_lang::prelude::Pubkey>;
    let mut _8: &mut state::signed_msg_user::SignedMsgWsDelegates;
    let mut _9: &mut anchor_lang::prelude::Account<'_, state::signed_msg_user::SignedMsgWsDelegates>;
    let mut _10: anchor_lang::prelude::Pubkey;
    let _11: ();
    let mut _12: &mut std::vec::Vec<anchor_lang::prelude::Pubkey>;
    let mut _13: &mut state::signed_msg_user::SignedMsgWsDelegates;
    let mut _14: &mut anchor_lang::prelude::Account<'_, state::signed_msg_user::SignedMsgWsDelegates>;
    let mut _15: {closure@programs/drift/src/instructions/user.rs:369:21: 369:30};
    let mut _16: &anchor_lang::prelude::Pubkey;
    let mut _17: ();
    let mut _18: &mut instructions::user::ChangeSignedMsgWsDelegateStatus<'_>;
    let mut _19: &mut instructions::user::ChangeSignedMsgWsDelegateStatus<'_>;

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = _3;
        switchInt(move _5) -> [0: bb4, otherwise: bb1];
    }

    bb1: {
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _18 = deref_copy (_1.1: &mut instructions::user::ChangeSignedMsgWsDelegateStatus<'_>);
        _9 = &mut ((*_18).0: anchor_lang::prelude::Account<'_, state::signed_msg_user::SignedMsgWsDelegates>);
        _8 = <anchor_lang::prelude::Account<'_, SignedMsgWsDelegates> as DerefMut>::deref_mut(move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        _7 = &mut ((*_8).0: std::vec::Vec<anchor_lang::prelude::Pubkey>);
        StorageLive(_10);
        _10 = _2;
        _6 = Vec::<anchor_lang::prelude::Pubkey>::push(move _7, move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_8);
        StorageDead(_6);
        _4 = const ();
        goto -> bb7;
    }

    bb4: {
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        _19 = deref_copy (_1.1: &mut instructions::user::ChangeSignedMsgWsDelegateStatus<'_>);
        _14 = &mut ((*_19).0: anchor_lang::prelude::Account<'_, state::signed_msg_user::SignedMsgWsDelegates>);
        _13 = <anchor_lang::prelude::Account<'_, SignedMsgWsDelegates> as DerefMut>::deref_mut(move _14) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_14);
        _12 = &mut ((*_13).0: std::vec::Vec<anchor_lang::prelude::Pubkey>);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &_2;
        _15 = {closure@programs/drift/src/instructions/user.rs:369:21: 369:30} { delegate: move _16 };
        StorageDead(_16);
        _11 = Vec::<anchor_lang::prelude::Pubkey>::retain::<{closure@programs/drift/src/instructions/user.rs:369:21: 369:30}>(move _12, move _15) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_13);
        StorageDead(_11);
        _4 = const ();
        goto -> bb7;
    }

    bb7: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_17);
        _17 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _17);
        StorageDead(_17);
        return;
    }
}
