digraph Mir_0_1810 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn normalise_oracle_price(_1: &amp;ReErased state::perp_market::AMM, _2: &amp;ReErased state::oracle::OraclePriceData, _3: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let _5: i64;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: u64;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _21: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: u64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: i64;<br align="left"/>let _32: i64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: i64;<br align="left"/>let _41: i64;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _43: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: i64;<br align="left"/>let _50: i64;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: i64;<br align="left"/>let mut _53: i64;<br align="left"/>let mut _54: i64;<br align="left"/>let mut _55: i64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _58: i64;<br align="left"/>let mut _59: i64;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: i64;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _68: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _69: i64;<br align="left"/>let mut _70: i64;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: i64;<br align="left"/>let mut _76: i64;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _79: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _80: i64;<br align="left"/>let mut _81: i64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: i64;<br align="left"/>let mut _87: i64;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _90: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _91: i64;<br align="left"/>let mut _92: i64;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: i64;<br align="left"/>let mut _98: i64;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug oracle_price_data =&gt; _2;<br align="left"/>debug precomputed_reserve_price =&gt; _3;<br align="left"/>debug oracle_price =&gt; _4;<br align="left"/>debug reserve_price =&gt; _5;<br align="left"/>debug reserve_price =&gt; _7;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug reserve_price_2p5_bps =&gt; _32;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug conf_int =&gt; _41;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug normalised_price =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>>;
    bb0__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = ((*_2).0: i64)<br/>StorageLive(_5)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_1)<br/></td></tr><tr><td align="left">_20 = AMM::reserve_price(move _21)</td></tr></table>>];
    bb2__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = ((_3 as Some).0: u64)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _7<br/></td></tr><tr><td align="left">_9 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _10)</td></tr></table>>];
    bb4__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb5__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb6__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: i64)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb8__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb10__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_22 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb11__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_19 as Continue).0: u64)<br/>_18 = _26<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_17 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _18)</td></tr></table>>];
    bb12__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb13__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb15__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_27 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb16__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_16 as Continue).0: i64)<br/>_5 = _31<br/>StorageDead(_31)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb18__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _5<br/></td></tr><tr><td align="left">_34 = &lt;i64 as SafeMath&gt;::safe_div(move _35, const 4000_i64)</td></tr></table>>];
    bb20__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb21__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb22__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_33 as Continue).0: i64)<br/>_32 = _40<br/>StorageDead(_40)<br/>StorageDead(_33)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = ((*_2).1: u64)<br/></td></tr><tr><td align="left">_43 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _44)</td></tr></table>>];
    bb23__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb24__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb26__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_45 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb27__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_42 as Continue).0: i64)<br/>_41 = _49<br/>StorageDead(_49)<br/>StorageDead(_42)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _5<br/>StorageLive(_53)<br/>_53 = _4<br/>_51 = Gt(move _52, move _53)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb28__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb29__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _5<br/>StorageLive(_59)<br/>_59 = _32<br/></td></tr><tr><td align="left">_57 = &lt;i64 as SafeMath&gt;::safe_sub(move _58, move _59)</td></tr></table>>];
    bb31__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _5<br/>StorageLive(_81)<br/>_81 = _32<br/></td></tr><tr><td align="left">_79 = &lt;i64 as SafeMath&gt;::safe_add(move _80, move _81)</td></tr></table>>];
    bb32__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb33__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_60 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb34__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_56 as Continue).0: i64)<br/>_55 = _64<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = _4<br/></td></tr><tr><td align="left">_54 = std::cmp::max::&lt;i64&gt;(move _55, move _65)</td></tr></table>>];
    bb35__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb36__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_55)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _4<br/>StorageLive(_70)<br/>_70 = _41<br/></td></tr><tr><td align="left">_68 = &lt;i64 as SafeMath&gt;::safe_add(move _69, move _70)</td></tr></table>>];
    bb38__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb39__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_71 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb40__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_67 as Continue).0: i64)<br/>_66 = _75<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_50 = std::cmp::min::&lt;i64&gt;(move _54, move _66)</td></tr></table>>];
    bb41__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb42__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_66)<br/>StorageDead(_54)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_54)<br/>StorageDead(_67)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb45__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_82 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb46__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_78 as Continue).0: i64)<br/>_77 = _86<br/>StorageDead(_86)<br/>StorageLive(_87)<br/>_87 = _4<br/></td></tr><tr><td align="left">_76 = std::cmp::min::&lt;i64&gt;(move _77, move _87)</td></tr></table>>];
    bb47__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb48__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_77)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _4<br/>StorageLive(_92)<br/>_92 = _41<br/></td></tr><tr><td align="left">_90 = &lt;i64 as SafeMath&gt;::safe_sub(move _91, move _92)</td></tr></table>>];
    bb50__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb51__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_93 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb52__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_89 as Continue).0: i64)<br/>_88 = _97<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_50 = std::cmp::max::&lt;i64&gt;(move _76, move _88)</td></tr></table>>];
    bb53__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb54__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_88)<br/>StorageDead(_76)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_76)<br/>StorageDead(_89)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_98)<br/>_98 = _50<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _98)<br/>StorageDead(_98)<br/>StorageDead(_50)<br/>StorageDead(_41)<br/>StorageDead(_32)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_1810 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1810 -> bb1__0_1810 [label="0"];
    bb0__0_1810 -> bb3__0_1810 [label="1"];
    bb0__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb1__0_1810 -> bb9__0_1810 [label="return"];
    bb3__0_1810 -> bb4__0_1810 [label="return"];
    bb4__0_1810 -> bb5__0_1810 [label="return"];
    bb5__0_1810 -> bb6__0_1810 [label="0"];
    bb5__0_1810 -> bb7__0_1810 [label="1"];
    bb5__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb6__0_1810 -> bb19__0_1810 [label=""];
    bb7__0_1810 -> bb8__0_1810 [label="return"];
    bb8__0_1810 -> bb63__0_1810 [label=""];
    bb9__0_1810 -> bb10__0_1810 [label="return"];
    bb10__0_1810 -> bb11__0_1810 [label="0"];
    bb10__0_1810 -> bb12__0_1810 [label="1"];
    bb10__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb11__0_1810 -> bb14__0_1810 [label="return"];
    bb12__0_1810 -> bb13__0_1810 [label="return"];
    bb13__0_1810 -> bb62__0_1810 [label=""];
    bb14__0_1810 -> bb15__0_1810 [label="return"];
    bb15__0_1810 -> bb16__0_1810 [label="0"];
    bb15__0_1810 -> bb17__0_1810 [label="1"];
    bb15__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb16__0_1810 -> bb19__0_1810 [label=""];
    bb17__0_1810 -> bb18__0_1810 [label="return"];
    bb18__0_1810 -> bb62__0_1810 [label=""];
    bb19__0_1810 -> bb20__0_1810 [label="return"];
    bb20__0_1810 -> bb21__0_1810 [label="return"];
    bb21__0_1810 -> bb22__0_1810 [label="0"];
    bb21__0_1810 -> bb23__0_1810 [label="1"];
    bb21__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb22__0_1810 -> bb25__0_1810 [label="return"];
    bb23__0_1810 -> bb24__0_1810 [label="return"];
    bb24__0_1810 -> bb61__0_1810 [label=""];
    bb25__0_1810 -> bb26__0_1810 [label="return"];
    bb26__0_1810 -> bb27__0_1810 [label="0"];
    bb26__0_1810 -> bb28__0_1810 [label="1"];
    bb26__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb27__0_1810 -> bb31__0_1810 [label="0"];
    bb27__0_1810 -> bb30__0_1810 [label="otherwise"];
    bb28__0_1810 -> bb29__0_1810 [label="return"];
    bb29__0_1810 -> bb60__0_1810 [label=""];
    bb30__0_1810 -> bb32__0_1810 [label="return"];
    bb31__0_1810 -> bb44__0_1810 [label="return"];
    bb32__0_1810 -> bb33__0_1810 [label="return"];
    bb33__0_1810 -> bb34__0_1810 [label="0"];
    bb33__0_1810 -> bb35__0_1810 [label="1"];
    bb33__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb34__0_1810 -> bb37__0_1810 [label="return"];
    bb35__0_1810 -> bb36__0_1810 [label="return"];
    bb36__0_1810 -> bb58__0_1810 [label=""];
    bb37__0_1810 -> bb38__0_1810 [label="return"];
    bb38__0_1810 -> bb39__0_1810 [label="return"];
    bb39__0_1810 -> bb40__0_1810 [label="0"];
    bb39__0_1810 -> bb41__0_1810 [label="1"];
    bb39__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb40__0_1810 -> bb43__0_1810 [label="return"];
    bb41__0_1810 -> bb42__0_1810 [label="return"];
    bb42__0_1810 -> bb58__0_1810 [label=""];
    bb43__0_1810 -> bb56__0_1810 [label=""];
    bb44__0_1810 -> bb45__0_1810 [label="return"];
    bb45__0_1810 -> bb46__0_1810 [label="0"];
    bb45__0_1810 -> bb47__0_1810 [label="1"];
    bb45__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb46__0_1810 -> bb49__0_1810 [label="return"];
    bb47__0_1810 -> bb48__0_1810 [label="return"];
    bb48__0_1810 -> bb57__0_1810 [label=""];
    bb49__0_1810 -> bb50__0_1810 [label="return"];
    bb50__0_1810 -> bb51__0_1810 [label="return"];
    bb51__0_1810 -> bb52__0_1810 [label="0"];
    bb51__0_1810 -> bb53__0_1810 [label="1"];
    bb51__0_1810 -> bb2__0_1810 [label="otherwise"];
    bb52__0_1810 -> bb55__0_1810 [label="return"];
    bb53__0_1810 -> bb54__0_1810 [label="return"];
    bb54__0_1810 -> bb57__0_1810 [label=""];
    bb55__0_1810 -> bb56__0_1810 [label=""];
    bb56__0_1810 -> bb64__0_1810 [label=""];
    bb57__0_1810 -> bb59__0_1810 [label=""];
    bb58__0_1810 -> bb59__0_1810 [label=""];
    bb59__0_1810 -> bb60__0_1810 [label=""];
    bb60__0_1810 -> bb61__0_1810 [label=""];
    bb61__0_1810 -> bb63__0_1810 [label=""];
    bb62__0_1810 -> bb63__0_1810 [label=""];
    bb63__0_1810 -> bb64__0_1810 [label=""];
}
