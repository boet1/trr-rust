// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:148:14: 148:23>::eq` before PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:148:14: 148:23>::eq(_1: &PerpMarket, _2: &PerpMarket) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: &anchor_lang::prelude::Pubkey;
    let mut _5: &anchor_lang::prelude::Pubkey;
    let mut _6: bool;
    let mut _7: &state::perp_market::AMM;
    let mut _8: &state::perp_market::AMM;
    let mut _9: bool;
    let mut _10: &state::perp_market::PoolBalance;
    let mut _11: &state::perp_market::PoolBalance;
    let mut _12: bool;
    let mut _13: &[u8; 32];
    let mut _14: &[u8; 32];
    let mut _15: bool;
    let mut _16: &state::perp_market::InsuranceClaim;
    let mut _17: &state::perp_market::InsuranceClaim;
    let mut _18: bool;
    let mut _19: u64;
    let mut _20: u64;
    let mut _21: bool;
    let mut _22: i64;
    let mut _23: i64;
    let mut _24: bool;
    let mut _25: i64;
    let mut _26: i64;
    let mut _27: bool;
    let mut _28: u64;
    let mut _29: u64;
    let mut _30: bool;
    let mut _31: u64;
    let mut _32: u64;
    let mut _33: bool;
    let mut _34: u64;
    let mut _35: u64;
    let mut _36: bool;
    let mut _37: u32;
    let mut _38: u32;
    let mut _39: bool;
    let mut _40: u32;
    let mut _41: u32;
    let mut _42: bool;
    let mut _43: u32;
    let mut _44: u32;
    let mut _45: bool;
    let mut _46: u32;
    let mut _47: u32;
    let mut _48: bool;
    let mut _49: u32;
    let mut _50: u32;
    let mut _51: bool;
    let mut _52: u32;
    let mut _53: u32;
    let mut _54: bool;
    let mut _55: u32;
    let mut _56: u32;
    let mut _57: bool;
    let mut _58: u32;
    let mut _59: u32;
    let mut _60: bool;
    let mut _61: u32;
    let mut _62: u32;
    let mut _63: bool;
    let mut _64: u32;
    let mut _65: u32;
    let mut _66: bool;
    let mut _67: u16;
    let mut _68: u16;
    let mut _69: bool;
    let mut _70: &state::perp_market::MarketStatus;
    let mut _71: &state::perp_market::MarketStatus;
    let mut _72: bool;
    let mut _73: &state::perp_market::ContractType;
    let mut _74: &state::perp_market::ContractType;
    let mut _75: bool;
    let mut _76: &state::perp_market::ContractTier;
    let mut _77: &state::perp_market::ContractTier;
    let mut _78: bool;
    let mut _79: u8;
    let mut _80: u8;
    let mut _81: bool;
    let mut _82: u16;
    let mut _83: u16;
    let mut _84: bool;
    let mut _85: i16;
    let mut _86: i16;
    let mut _87: bool;
    let mut _88: u8;
    let mut _89: u8;
    let mut _90: bool;
    let mut _91: u8;
    let mut _92: u8;
    let mut _93: bool;
    let mut _94: u8;
    let mut _95: u8;
    let mut _96: bool;
    let mut _97: u8;
    let mut _98: u8;
    let mut _99: bool;
    let mut _100: u16;
    let mut _101: u16;
    let mut _102: bool;
    let mut _103: u16;
    let mut _104: u16;
    let mut _105: bool;
    let mut _106: u8;
    let mut _107: u8;
    let mut _108: bool;
    let mut _109: u8;
    let mut _110: u8;
    let mut _111: bool;
    let mut _112: u32;
    let mut _113: u32;
    let mut _114: bool;
    let mut _115: u64;
    let mut _116: u64;
    let mut _117: &[u8; 24];
    let mut _118: &[u8; 24];

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: anchor_lang::prelude::Pubkey);
        StorageLive(_5);
        _5 = &((*_2).0: anchor_lang::prelude::Pubkey);
        _3 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb84, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: state::perp_market::AMM);
        StorageLive(_8);
        _8 = &((*_2).1: state::perp_market::AMM);
        _6 = <AMM as PartialEq>::eq(move _7, move _8) -> [return: bb3, unwind continue];
    }

    bb3: {
        switchInt(move _6) -> [0: bb83, otherwise: bb4];
    }

    bb4: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: state::perp_market::PoolBalance);
        StorageLive(_11);
        _11 = &((*_2).2: state::perp_market::PoolBalance);
        _9 = <PoolBalance as PartialEq>::eq(move _10, move _11) -> [return: bb5, unwind continue];
    }

    bb5: {
        switchInt(move _9) -> [0: bb82, otherwise: bb6];
    }

    bb6: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: [u8; 32]);
        StorageLive(_14);
        _14 = &((*_2).3: [u8; 32]);
        _12 = <[u8; 32] as PartialEq>::eq(move _13, move _14) -> [return: bb7, unwind continue];
    }

    bb7: {
        switchInt(move _12) -> [0: bb81, otherwise: bb8];
    }

    bb8: {
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).4: state::perp_market::InsuranceClaim);
        StorageLive(_17);
        _17 = &((*_2).4: state::perp_market::InsuranceClaim);
        _15 = <InsuranceClaim as PartialEq>::eq(move _16, move _17) -> [return: bb9, unwind continue];
    }

    bb9: {
        switchInt(move _15) -> [0: bb80, otherwise: bb10];
    }

    bb10: {
        StorageDead(_17);
        StorageDead(_16);
        StorageLive(_18);
        StorageLive(_19);
        _19 = ((*_1).5: u64);
        StorageLive(_20);
        _20 = ((*_2).5: u64);
        _18 = Eq(move _19, move _20);
        switchInt(move _18) -> [0: bb79, otherwise: bb11];
    }

    bb11: {
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_21);
        StorageLive(_22);
        _22 = ((*_1).6: i64);
        StorageLive(_23);
        _23 = ((*_2).6: i64);
        _21 = Eq(move _22, move _23);
        switchInt(move _21) -> [0: bb78, otherwise: bb12];
    }

    bb12: {
        StorageDead(_23);
        StorageDead(_22);
        StorageLive(_24);
        StorageLive(_25);
        _25 = ((*_1).7: i64);
        StorageLive(_26);
        _26 = ((*_2).7: i64);
        _24 = Eq(move _25, move _26);
        switchInt(move _24) -> [0: bb77, otherwise: bb13];
    }

    bb13: {
        StorageDead(_26);
        StorageDead(_25);
        StorageLive(_27);
        StorageLive(_28);
        _28 = ((*_1).8: u64);
        StorageLive(_29);
        _29 = ((*_2).8: u64);
        _27 = Eq(move _28, move _29);
        switchInt(move _27) -> [0: bb76, otherwise: bb14];
    }

    bb14: {
        StorageDead(_29);
        StorageDead(_28);
        StorageLive(_30);
        StorageLive(_31);
        _31 = ((*_1).9: u64);
        StorageLive(_32);
        _32 = ((*_2).9: u64);
        _30 = Eq(move _31, move _32);
        switchInt(move _30) -> [0: bb75, otherwise: bb15];
    }

    bb15: {
        StorageDead(_32);
        StorageDead(_31);
        StorageLive(_33);
        StorageLive(_34);
        _34 = ((*_1).10: u64);
        StorageLive(_35);
        _35 = ((*_2).10: u64);
        _33 = Eq(move _34, move _35);
        switchInt(move _33) -> [0: bb74, otherwise: bb16];
    }

    bb16: {
        StorageDead(_35);
        StorageDead(_34);
        StorageLive(_36);
        StorageLive(_37);
        _37 = ((*_1).11: u32);
        StorageLive(_38);
        _38 = ((*_2).11: u32);
        _36 = Eq(move _37, move _38);
        switchInt(move _36) -> [0: bb73, otherwise: bb17];
    }

    bb17: {
        StorageDead(_38);
        StorageDead(_37);
        StorageLive(_39);
        StorageLive(_40);
        _40 = ((*_1).12: u32);
        StorageLive(_41);
        _41 = ((*_2).12: u32);
        _39 = Eq(move _40, move _41);
        switchInt(move _39) -> [0: bb72, otherwise: bb18];
    }

    bb18: {
        StorageDead(_41);
        StorageDead(_40);
        StorageLive(_42);
        StorageLive(_43);
        _43 = ((*_1).13: u32);
        StorageLive(_44);
        _44 = ((*_2).13: u32);
        _42 = Eq(move _43, move _44);
        switchInt(move _42) -> [0: bb71, otherwise: bb19];
    }

    bb19: {
        StorageDead(_44);
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        _46 = ((*_1).14: u32);
        StorageLive(_47);
        _47 = ((*_2).14: u32);
        _45 = Eq(move _46, move _47);
        switchInt(move _45) -> [0: bb70, otherwise: bb20];
    }

    bb20: {
        StorageDead(_47);
        StorageDead(_46);
        StorageLive(_48);
        StorageLive(_49);
        _49 = ((*_1).15: u32);
        StorageLive(_50);
        _50 = ((*_2).15: u32);
        _48 = Eq(move _49, move _50);
        switchInt(move _48) -> [0: bb69, otherwise: bb21];
    }

    bb21: {
        StorageDead(_50);
        StorageDead(_49);
        StorageLive(_51);
        StorageLive(_52);
        _52 = ((*_1).16: u32);
        StorageLive(_53);
        _53 = ((*_2).16: u32);
        _51 = Eq(move _52, move _53);
        switchInt(move _51) -> [0: bb68, otherwise: bb22];
    }

    bb22: {
        StorageDead(_53);
        StorageDead(_52);
        StorageLive(_54);
        StorageLive(_55);
        _55 = ((*_1).17: u32);
        StorageLive(_56);
        _56 = ((*_2).17: u32);
        _54 = Eq(move _55, move _56);
        switchInt(move _54) -> [0: bb67, otherwise: bb23];
    }

    bb23: {
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_57);
        StorageLive(_58);
        _58 = ((*_1).18: u32);
        StorageLive(_59);
        _59 = ((*_2).18: u32);
        _57 = Eq(move _58, move _59);
        switchInt(move _57) -> [0: bb66, otherwise: bb24];
    }

    bb24: {
        StorageDead(_59);
        StorageDead(_58);
        StorageLive(_60);
        StorageLive(_61);
        _61 = ((*_1).19: u32);
        StorageLive(_62);
        _62 = ((*_2).19: u32);
        _60 = Eq(move _61, move _62);
        switchInt(move _60) -> [0: bb65, otherwise: bb25];
    }

    bb25: {
        StorageDead(_62);
        StorageDead(_61);
        StorageLive(_63);
        StorageLive(_64);
        _64 = ((*_1).20: u32);
        StorageLive(_65);
        _65 = ((*_2).20: u32);
        _63 = Eq(move _64, move _65);
        switchInt(move _63) -> [0: bb64, otherwise: bb26];
    }

    bb26: {
        StorageDead(_65);
        StorageDead(_64);
        StorageLive(_66);
        StorageLive(_67);
        _67 = ((*_1).21: u16);
        StorageLive(_68);
        _68 = ((*_2).21: u16);
        _66 = Eq(move _67, move _68);
        switchInt(move _66) -> [0: bb63, otherwise: bb27];
    }

    bb27: {
        StorageDead(_68);
        StorageDead(_67);
        StorageLive(_69);
        StorageLive(_70);
        _70 = &((*_1).22: state::perp_market::MarketStatus);
        StorageLive(_71);
        _71 = &((*_2).22: state::perp_market::MarketStatus);
        _69 = <state::perp_market::MarketStatus as PartialEq>::eq(move _70, move _71) -> [return: bb28, unwind continue];
    }

    bb28: {
        switchInt(move _69) -> [0: bb62, otherwise: bb29];
    }

    bb29: {
        StorageDead(_71);
        StorageDead(_70);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &((*_1).23: state::perp_market::ContractType);
        StorageLive(_74);
        _74 = &((*_2).23: state::perp_market::ContractType);
        _72 = <ContractType as PartialEq>::eq(move _73, move _74) -> [return: bb30, unwind continue];
    }

    bb30: {
        switchInt(move _72) -> [0: bb61, otherwise: bb31];
    }

    bb31: {
        StorageDead(_74);
        StorageDead(_73);
        StorageLive(_75);
        StorageLive(_76);
        _76 = &((*_1).24: state::perp_market::ContractTier);
        StorageLive(_77);
        _77 = &((*_2).24: state::perp_market::ContractTier);
        _75 = <state::perp_market::ContractTier as PartialEq>::eq(move _76, move _77) -> [return: bb32, unwind continue];
    }

    bb32: {
        switchInt(move _75) -> [0: bb60, otherwise: bb33];
    }

    bb33: {
        StorageDead(_77);
        StorageDead(_76);
        StorageLive(_78);
        StorageLive(_79);
        _79 = ((*_1).25: u8);
        StorageLive(_80);
        _80 = ((*_2).25: u8);
        _78 = Eq(move _79, move _80);
        switchInt(move _78) -> [0: bb59, otherwise: bb34];
    }

    bb34: {
        StorageDead(_80);
        StorageDead(_79);
        StorageLive(_81);
        StorageLive(_82);
        _82 = ((*_1).26: u16);
        StorageLive(_83);
        _83 = ((*_2).26: u16);
        _81 = Eq(move _82, move _83);
        switchInt(move _81) -> [0: bb58, otherwise: bb35];
    }

    bb35: {
        StorageDead(_83);
        StorageDead(_82);
        StorageLive(_84);
        StorageLive(_85);
        _85 = ((*_1).27: i16);
        StorageLive(_86);
        _86 = ((*_2).27: i16);
        _84 = Eq(move _85, move _86);
        switchInt(move _84) -> [0: bb57, otherwise: bb36];
    }

    bb36: {
        StorageDead(_86);
        StorageDead(_85);
        StorageLive(_87);
        StorageLive(_88);
        _88 = ((*_1).28: u8);
        StorageLive(_89);
        _89 = ((*_2).28: u8);
        _87 = Eq(move _88, move _89);
        switchInt(move _87) -> [0: bb56, otherwise: bb37];
    }

    bb37: {
        StorageDead(_89);
        StorageDead(_88);
        StorageLive(_90);
        StorageLive(_91);
        _91 = ((*_1).29: u8);
        StorageLive(_92);
        _92 = ((*_2).29: u8);
        _90 = Eq(move _91, move _92);
        switchInt(move _90) -> [0: bb55, otherwise: bb38];
    }

    bb38: {
        StorageDead(_92);
        StorageDead(_91);
        StorageLive(_93);
        StorageLive(_94);
        _94 = ((*_1).30: u8);
        StorageLive(_95);
        _95 = ((*_2).30: u8);
        _93 = Eq(move _94, move _95);
        switchInt(move _93) -> [0: bb54, otherwise: bb39];
    }

    bb39: {
        StorageDead(_95);
        StorageDead(_94);
        StorageLive(_96);
        StorageLive(_97);
        _97 = ((*_1).31: u8);
        StorageLive(_98);
        _98 = ((*_2).31: u8);
        _96 = Eq(move _97, move _98);
        switchInt(move _96) -> [0: bb53, otherwise: bb40];
    }

    bb40: {
        StorageDead(_98);
        StorageDead(_97);
        StorageLive(_99);
        StorageLive(_100);
        _100 = ((*_1).32: u16);
        StorageLive(_101);
        _101 = ((*_2).32: u16);
        _99 = Eq(move _100, move _101);
        switchInt(move _99) -> [0: bb52, otherwise: bb41];
    }

    bb41: {
        StorageDead(_101);
        StorageDead(_100);
        StorageLive(_102);
        StorageLive(_103);
        _103 = ((*_1).33: u16);
        StorageLive(_104);
        _104 = ((*_2).33: u16);
        _102 = Eq(move _103, move _104);
        switchInt(move _102) -> [0: bb51, otherwise: bb42];
    }

    bb42: {
        StorageDead(_104);
        StorageDead(_103);
        StorageLive(_105);
        StorageLive(_106);
        _106 = ((*_1).34: u8);
        StorageLive(_107);
        _107 = ((*_2).34: u8);
        _105 = Eq(move _106, move _107);
        switchInt(move _105) -> [0: bb50, otherwise: bb43];
    }

    bb43: {
        StorageDead(_107);
        StorageDead(_106);
        StorageLive(_108);
        StorageLive(_109);
        _109 = ((*_1).35: u8);
        StorageLive(_110);
        _110 = ((*_2).35: u8);
        _108 = Eq(move _109, move _110);
        switchInt(move _108) -> [0: bb49, otherwise: bb44];
    }

    bb44: {
        StorageDead(_110);
        StorageDead(_109);
        StorageLive(_111);
        StorageLive(_112);
        _112 = ((*_1).36: u32);
        StorageLive(_113);
        _113 = ((*_2).36: u32);
        _111 = Eq(move _112, move _113);
        switchInt(move _111) -> [0: bb48, otherwise: bb45];
    }

    bb45: {
        StorageDead(_113);
        StorageDead(_112);
        StorageLive(_114);
        StorageLive(_115);
        _115 = ((*_1).37: u64);
        StorageLive(_116);
        _116 = ((*_2).37: u64);
        _114 = Eq(move _115, move _116);
        switchInt(move _114) -> [0: bb47, otherwise: bb46];
    }

    bb46: {
        StorageDead(_116);
        StorageDead(_115);
        StorageLive(_117);
        _117 = &((*_1).38: [u8; 24]);
        StorageLive(_118);
        _118 = &((*_2).38: [u8; 24]);
        _0 = <[u8; 24] as PartialEq>::eq(move _117, move _118) -> [return: bb86, unwind continue];
    }

    bb47: {
        StorageDead(_116);
        StorageDead(_115);
        goto -> bb85;
    }

    bb48: {
        StorageDead(_113);
        StorageDead(_112);
        goto -> bb85;
    }

    bb49: {
        StorageDead(_110);
        StorageDead(_109);
        goto -> bb85;
    }

    bb50: {
        StorageDead(_107);
        StorageDead(_106);
        goto -> bb85;
    }

    bb51: {
        StorageDead(_104);
        StorageDead(_103);
        goto -> bb85;
    }

    bb52: {
        StorageDead(_101);
        StorageDead(_100);
        goto -> bb85;
    }

    bb53: {
        StorageDead(_98);
        StorageDead(_97);
        goto -> bb85;
    }

    bb54: {
        StorageDead(_95);
        StorageDead(_94);
        goto -> bb85;
    }

    bb55: {
        StorageDead(_92);
        StorageDead(_91);
        goto -> bb85;
    }

    bb56: {
        StorageDead(_89);
        StorageDead(_88);
        goto -> bb85;
    }

    bb57: {
        StorageDead(_86);
        StorageDead(_85);
        goto -> bb85;
    }

    bb58: {
        StorageDead(_83);
        StorageDead(_82);
        goto -> bb85;
    }

    bb59: {
        StorageDead(_80);
        StorageDead(_79);
        goto -> bb85;
    }

    bb60: {
        StorageDead(_77);
        StorageDead(_76);
        goto -> bb85;
    }

    bb61: {
        StorageDead(_74);
        StorageDead(_73);
        goto -> bb85;
    }

    bb62: {
        StorageDead(_71);
        StorageDead(_70);
        goto -> bb85;
    }

    bb63: {
        StorageDead(_68);
        StorageDead(_67);
        goto -> bb85;
    }

    bb64: {
        StorageDead(_65);
        StorageDead(_64);
        goto -> bb85;
    }

    bb65: {
        StorageDead(_62);
        StorageDead(_61);
        goto -> bb85;
    }

    bb66: {
        StorageDead(_59);
        StorageDead(_58);
        goto -> bb85;
    }

    bb67: {
        StorageDead(_56);
        StorageDead(_55);
        goto -> bb85;
    }

    bb68: {
        StorageDead(_53);
        StorageDead(_52);
        goto -> bb85;
    }

    bb69: {
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb85;
    }

    bb70: {
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb85;
    }

    bb71: {
        StorageDead(_44);
        StorageDead(_43);
        goto -> bb85;
    }

    bb72: {
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb85;
    }

    bb73: {
        StorageDead(_38);
        StorageDead(_37);
        goto -> bb85;
    }

    bb74: {
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb85;
    }

    bb75: {
        StorageDead(_32);
        StorageDead(_31);
        goto -> bb85;
    }

    bb76: {
        StorageDead(_29);
        StorageDead(_28);
        goto -> bb85;
    }

    bb77: {
        StorageDead(_26);
        StorageDead(_25);
        goto -> bb85;
    }

    bb78: {
        StorageDead(_23);
        StorageDead(_22);
        goto -> bb85;
    }

    bb79: {
        StorageDead(_20);
        StorageDead(_19);
        goto -> bb85;
    }

    bb80: {
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb85;
    }

    bb81: {
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb85;
    }

    bb82: {
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb85;
    }

    bb83: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb85;
    }

    bb84: {
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb85;
    }

    bb85: {
        _0 = const false;
        goto -> bb87;
    }

    bb86: {
        StorageDead(_118);
        StorageDead(_117);
        goto -> bb87;
    }

    bb87: {
        StorageDead(_114);
        StorageDead(_111);
        StorageDead(_108);
        StorageDead(_105);
        StorageDead(_102);
        StorageDead(_99);
        StorageDead(_96);
        StorageDead(_93);
        StorageDead(_90);
        StorageDead(_87);
        StorageDead(_84);
        StorageDead(_81);
        StorageDead(_78);
        StorageDead(_75);
        StorageDead(_72);
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_63);
        StorageDead(_60);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_24);
        StorageDead(_21);
        StorageDead(_18);
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_9);
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}
