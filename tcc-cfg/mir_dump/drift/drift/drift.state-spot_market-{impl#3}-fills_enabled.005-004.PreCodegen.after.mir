// MIR for `state::spot_market::<impl at programs/drift/src/state/spot_market.rs:291:1: 291:16>::fills_enabled` after PreCodegen

fn state::spot_market::<impl at programs/drift/src/state/spot_market.rs:291:1: 291:16>::fills_enabled(_1: &SpotMarket) -> bool {
    debug self => _1;
    let mut _0: bool;
    let mut _2: bool;
    let mut _3: isize;
    let mut _4: bool;
    let mut _5: &state::spot_market::SpotMarket;
    let mut _6: state::paused_operations::SpotOperation;

    bb0: {
        StorageLive(_2);
        _3 = discriminant(((*_1).45: state::perp_market::MarketStatus));
        switchInt(move _3) -> [1: bb2, 6: bb2, otherwise: bb1];
    }

    bb1: {
        _2 = const false;
        goto -> bb3;
    }

    bb2: {
        _2 = const true;
        goto -> bb3;
    }

    bb3: {
        switchInt(move _2) -> [0: bb5, otherwise: bb4];
    }

    bb4: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        StorageLive(_6);
        _6 = SpotOperation::Fill;
        _4 = SpotMarket::is_operation_paused(move _5, move _6) -> [return: bb6, unwind continue];
    }

    bb5: {
        _0 = const false;
        goto -> bb7;
    }

    bb6: {
        StorageDead(_6);
        StorageDead(_5);
        _0 = Not(move _4);
        StorageDead(_4);
        goto -> bb7;
    }

    bb7: {
        StorageDead(_2);
        return;
    }
}
