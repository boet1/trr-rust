digraph Mir_0_2901 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn emit_buffers(_1: T/#0, _2: &amp;ReErased mut [u8], _3: &amp;ReErased mut [u8]) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let mut _4: std::io::Cursor&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _5: &amp;ReErased mut [u8];<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased mut std::io::Cursor&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _11: &amp;ReErased [u8];<br align="left"/>let mut _12: &amp;ReErased [u8; 8_usize];<br align="left"/>let _13: &amp;ReErased [u8; 8_usize];<br align="left"/>let _14: [u8; 8_usize];<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: ();<br align="left"/>let _20: ();<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _22: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _23: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased mut std::io::Cursor&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _25: &amp;ReErased T/#0;<br align="left"/>let _26: &amp;ReErased T/#0;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: ();<br align="left"/>let _32: usize;<br align="left"/>let mut _33: u64;<br align="left"/>let mut _34: &amp;ReErased std::io::Cursor&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _35: usize;<br align="left"/>let mut _36: &amp;ReErased [u8];<br align="left"/>let _37: &amp;ReErased [u8];<br align="left"/>let mut _38: &amp;ReErased [u8];<br align="left"/>let _39: &amp;ReErased mut [u8];<br align="left"/>let mut _40: std::io::Cursor&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _41: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _42: usize;<br align="left"/>let mut _43: &amp;ReErased mut [u8];<br align="left"/>let _44: &amp;ReErased [u8];<br align="left"/>let _45: &amp;ReErased [u8];<br align="left"/>let mut _46: &amp;ReErased [u8];<br align="left"/>let mut _47: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _48: usize;<br align="left"/>let _49: &amp;ReErased str;<br align="left"/>let mut _50: &amp;ReErased [u8];<br align="left"/>let _51: ();<br align="left"/>let mut _52: &amp;ReErased str;<br align="left"/>let mut _53: ();<br align="left"/>debug event =&gt; _1;<br align="left"/>debug data_buf =&gt; _2;<br align="left"/>debug out_buf =&gt; _3;<br align="left"/>debug data_writer =&gt; _4;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug data_len =&gt; _32;<br align="left"/>debug out_len =&gt; _35;<br align="left"/>debug msg_bytes =&gt; _44;<br align="left"/>debug msg_str =&gt; _49;<br align="left"/>>;
    bb0__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = move _2<br/></td></tr><tr><td align="left">_4 = std::io::Cursor::&lt;&amp;mut [u8]&gt;::new(move _5)</td></tr></table>>];
    bb1__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;mut _4<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = &lt;T as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb2__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_13 = &amp;_14<br/>_12 = &amp;(*_13)<br/>_11 = move _12 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_9 = &lt;std::io::Cursor&lt;&amp;mut [u8]&gt; as std::io::Write&gt;::write_all(move _10, move _11)</td></tr></table>>];
    bb3__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(), std::io::Error&gt; as SafeUnwrap&gt;::safe_unwrap(move _9)</td></tr></table>>];
    bb4__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb5__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_15 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb6__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_7 as Continue).0: ())<br/>_6 = _19<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut _4<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;_1<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_23 = borsh::to_writer::&lt;T, &amp;mut std::io::Cursor&lt;&amp;mut [u8]&gt;&gt;(move _24, move _25)</td></tr></table>>];
    bb7__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb9__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;(), std::io::Error&gt; as SafeUnwrap&gt;::safe_unwrap(move _23)</td></tr></table>>];
    bb11__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb12__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_27 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb13__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_21 as Continue).0: ())<br/>_20 = _31<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_4<br/></td></tr><tr><td align="left">_33 = std::io::Cursor::&lt;&amp;mut [u8]&gt;::position(move _34)</td></tr></table>>];
    bb14__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb15__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = move _33 as usize (IntToInt)<br/>StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = move _4<br/></td></tr><tr><td align="left">_39 = std::io::Cursor::&lt;&amp;mut [u8]&gt;::into_inner(move _40)</td></tr></table>>];
    bb17__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_38 = &amp;(*_39)<br/>StorageDead(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _32<br/>_41 = std::ops::Range::&lt;usize&gt; { start: const 0_usize, end: move _42 }<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_37 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _38, move _41)</td></tr></table>>];
    bb18__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_38)<br/>_36 = &amp;(*_37)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_35 = encode_config_slice::&lt;&amp;[u8]&gt;(move _36, const _, move _43)</td></tr></table>>];
    bb19__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_36)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_3)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _35<br/>_47 = std::ops::Range::&lt;usize&gt; { start: const 0_usize, end: move _48 }<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_45 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _46, move _47)</td></tr></table>>];
    bb20__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>_44 = &amp;(*_45)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;(*_44)<br/></td></tr><tr><td align="left">_49 = from_utf8_unchecked(move _50)</td></tr></table>>];
    bb21__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;(*_49)<br/></td></tr><tr><td align="left">_51 = solana_program::log::sol_log(move _52)</td></tr></table>>];
    bb22__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_53)<br/>_53 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _53)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb23__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb24__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">return</td></tr></table>>];
    bb25__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb26__0_2901 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2901 -> bb1__0_2901 [label="return"];
    bb0__0_2901 -> bb25__0_2901 [label="unwind"];
    bb1__0_2901 -> bb2__0_2901 [label="return"];
    bb1__0_2901 -> bb25__0_2901 [label="unwind"];
    bb2__0_2901 -> bb3__0_2901 [label="return"];
    bb2__0_2901 -> bb25__0_2901 [label="unwind"];
    bb3__0_2901 -> bb4__0_2901 [label="return"];
    bb3__0_2901 -> bb25__0_2901 [label="unwind"];
    bb4__0_2901 -> bb5__0_2901 [label="return"];
    bb4__0_2901 -> bb25__0_2901 [label="unwind"];
    bb5__0_2901 -> bb6__0_2901 [label="0"];
    bb5__0_2901 -> bb8__0_2901 [label="1"];
    bb5__0_2901 -> bb7__0_2901 [label="otherwise"];
    bb6__0_2901 -> bb10__0_2901 [label="return"];
    bb6__0_2901 -> bb25__0_2901 [label="unwind"];
    bb8__0_2901 -> bb9__0_2901 [label="return"];
    bb8__0_2901 -> bb25__0_2901 [label="unwind"];
    bb9__0_2901 -> bb23__0_2901 [label=""];
    bb10__0_2901 -> bb11__0_2901 [label="return"];
    bb10__0_2901 -> bb25__0_2901 [label="unwind"];
    bb11__0_2901 -> bb12__0_2901 [label="return"];
    bb11__0_2901 -> bb25__0_2901 [label="unwind"];
    bb12__0_2901 -> bb13__0_2901 [label="0"];
    bb12__0_2901 -> bb14__0_2901 [label="1"];
    bb12__0_2901 -> bb7__0_2901 [label="otherwise"];
    bb13__0_2901 -> bb16__0_2901 [label="return"];
    bb13__0_2901 -> bb25__0_2901 [label="unwind"];
    bb14__0_2901 -> bb15__0_2901 [label="return"];
    bb14__0_2901 -> bb25__0_2901 [label="unwind"];
    bb15__0_2901 -> bb23__0_2901 [label=""];
    bb16__0_2901 -> bb17__0_2901 [label="return"];
    bb16__0_2901 -> bb25__0_2901 [label="unwind"];
    bb17__0_2901 -> bb18__0_2901 [label="return"];
    bb17__0_2901 -> bb25__0_2901 [label="unwind"];
    bb18__0_2901 -> bb19__0_2901 [label="return"];
    bb18__0_2901 -> bb25__0_2901 [label="unwind"];
    bb19__0_2901 -> bb20__0_2901 [label="return"];
    bb19__0_2901 -> bb25__0_2901 [label="unwind"];
    bb20__0_2901 -> bb21__0_2901 [label="return"];
    bb20__0_2901 -> bb25__0_2901 [label="unwind"];
    bb21__0_2901 -> bb22__0_2901 [label="return"];
    bb21__0_2901 -> bb25__0_2901 [label="unwind"];
    bb22__0_2901 -> bb24__0_2901 [label="return"];
    bb22__0_2901 -> bb26__0_2901 [label="unwind"];
    bb23__0_2901 -> bb24__0_2901 [label="return"];
    bb23__0_2901 -> bb26__0_2901 [label="unwind"];
    bb25__0_2901 -> bb26__0_2901 [label="return"];
}
