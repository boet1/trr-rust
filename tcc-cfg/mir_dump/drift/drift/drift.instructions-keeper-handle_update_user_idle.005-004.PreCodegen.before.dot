digraph Mir_0_9211 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_user_idle(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateUserIdle&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _14: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _17: Closure(DefId(0:9214 ~ drift[d311]::instructions::keeper::handle_update_user_idle::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _23: anchor_lang::prelude::Clock;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _25: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _30: anchor_lang::prelude::Clock;<br align="left"/>let _31: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _32: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _33: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _34: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _36: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _37: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _38: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _39: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _40: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _41: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _43: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _44: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _45: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _46: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _47: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: anchor_lang::prelude::Clock;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _51: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _56: anchor_lang::prelude::Clock;<br align="left"/>let mut _57: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _63: i128;<br align="left"/>let mut _64: (i128, bool);<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, bool)&gt;;<br align="left"/>let mut _66: std::result::Result&lt;(i128, bool), error::ErrorCode&gt;;<br align="left"/>let mut _67: &amp;ReErased state::user::User;<br align="left"/>let _68: &amp;ReErased state::user::User;<br align="left"/>let mut _69: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _70: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _71: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _72: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _74: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: (i128, bool);<br align="left"/>let _82: bool;<br align="left"/>let mut _83: i128;<br align="left"/>let mut _84: i128;<br align="left"/>let mut _85: (i128, bool);<br align="left"/>let _86: ();<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _88: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _89: &amp;ReErased state::user::User;<br align="left"/>let _90: &amp;ReErased state::user::User;<br align="left"/>let mut _91: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _92: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: ();<br align="left"/>let mut _100: &amp;ReErased mut state::user::User;<br align="left"/>let mut _101: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _102: ();<br align="left"/>let mut _103: &amp;ReErased mut instructions::keeper::UpdateUserIdle&lt;ReErased&gt;;<br align="left"/>let mut _104: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _105: &amp;ReErased mut instructions::keeper::UpdateUserIdle&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug user =&gt; _12;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug clock =&gt; _23;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug perp_market_map =&gt; _31;<br align="left"/>debug spot_market_map =&gt; _32;<br align="left"/>debug oracle_map =&gt; _33;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug equity =&gt; _63;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug accelerated =&gt; _82;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>>;
    bb0__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_108 = const false<br/>_107 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_103 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserIdle&lt;'_&gt;)<br/>_6 = &amp;((*_103).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_104 = deref_copy (*_6)<br/>_136 = (((_104.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_136)<br/></td></tr><tr><td align="left">_4 = constraints::exchange_not_paused(move _5)</td></tr></table>>];
    bb1__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_109 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_105 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserIdle&lt;'_&gt;)<br/>_16 = &amp;((*_105).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_15 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _16)</td></tr></table>>];
    bb4__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_127 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_14 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _15, move _17)</td></tr></table>>];
    bb8__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb9__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_18 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_13 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_12 = move _22<br/>StorageDead(_22)<br/>_113 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb11__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_111 = discriminant(_13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb14__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_26 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb15__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_24 as Continue).0: anchor_lang::prelude::Clock)<br/>_23 = move _30<br/>StorageDead(_30)<br/>_115 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_106 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_41 = &amp;(*_106)<br/></td></tr><tr><td align="left">_40 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _41)</td></tr></table>>];
    bb16__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_29)<br/>_29 = move _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb17__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>_125 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _40)</td></tr></table>>];
    bb19__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = &amp;mut _39<br/>_37 = &amp;mut (*_38)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/></td></tr><tr><td align="left">_44 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb20__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/></td></tr><tr><td align="left">_47 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb21__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/></td></tr><tr><td align="left">_51 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb22__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb23__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_107 = const true<br/>_108 = const true<br/>StorageDead(_51)<br/>_52 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb24__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_50 as Continue).0: anchor_lang::prelude::Clock)<br/>_49 = move _56<br/>StorageDead(_56)<br/>_48 = (_49.0: u64)<br/>StorageLive(_57)<br/>_57 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_36 = load_maps(move _37, move _42, move _45, move _48, move _57)</td></tr></table>>];
    bb25__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_55)<br/>_55 = move _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb26__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb28__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_58 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb29__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_35 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_34 = move _62<br/>StorageDead(_62)<br/>StorageLive(_31)<br/>_31 = move (_34.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_32)<br/>_32 = move (_34.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_33)<br/>_33 = move (_34.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_119 = discriminant(_35)<br/>_121 = discriminant(_50)<br/>_107 = const false<br/>_108 = const false<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb30__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb31__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>_117 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb33__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_12<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb34__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_67 = &amp;(*_68)<br/>StorageDead(_69)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;_31<br/>_71 = &amp;(*_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_32<br/>_73 = &amp;(*_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;mut _33<br/>_75 = &amp;mut (*_76)<br/></td></tr><tr><td align="left">_66 = calculate_user_equity(move _67, move _71, move _73, move _75)</td></tr></table>>];
    bb35__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb36__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_77 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb37__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_65 as Continue).0: (i128, bool))<br/>_64 = _81<br/>StorageDead(_81)<br/>StorageLive(_63)<br/>_63 = (_64.0: i128)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = _63<br/>StorageLive(_84)<br/>_85 = CheckedMul(const _, const 1000_i128)<br/></td></tr><tr><td align="left">assert(!move (_85.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const 1000_i128)</td></tr></table>>];
    bb38__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb39__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_84 = move (_85.0: i128)<br/>_82 = Lt(move _83, move _84)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;_12<br/>_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _91)</td></tr></table>>];
    bb41__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_89 = &amp;(*_90)<br/>StorageDead(_91)<br/>StorageLive(_93)<br/>_93 = (_23.0: u64)<br/>StorageLive(_94)<br/>_94 = _82<br/></td></tr><tr><td align="left">_88 = validate_user_is_idle(move _89, move _93, move _94)</td></tr></table>>];
    bb42__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb43__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_95 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb44__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_87 as Continue).0: ())<br/>_86 = _99<br/>StorageDead(_99)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;mut _12<br/></td></tr><tr><td align="left">_100 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _101)</td></tr></table>>];
    bb45__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb46__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>((*_100).21: bool) = const true<br/>StorageDead(_100)<br/>StorageLive(_102)<br/>_102 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _102)<br/>StorageDead(_102)<br/>StorageDead(_82)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb48__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb49__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb50__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb51__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb53__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb54__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb55__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_123 = discriminant(_50)<br/>_107 = const false<br/>_108 = const false<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb57__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb58__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb60__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left">return</td></tr></table>>];
    bb62__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb63__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb64__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb65__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb66__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb67__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb68__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb69__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb70__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left" balign="left">_131 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left" balign="left">_132 = discriminant(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left" balign="left">_133 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left" balign="left">_134 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_9211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left" balign="left">_135 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9211 -> bb1__0_9211 [label="return"];
    bb1__0_9211 -> bb2__0_9211 [label="return"];
    bb1__0_9211 -> bb69__0_9211 [label="unwind"];
    bb2__0_9211 -> bb3__0_9211 [label="0"];
    bb2__0_9211 -> bb5__0_9211 [label="1"];
    bb2__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb3__0_9211 -> bb7__0_9211 [label="return"];
    bb5__0_9211 -> bb6__0_9211 [label="return"];
    bb5__0_9211 -> bb74__0_9211 [label="unwind"];
    bb6__0_9211 -> bb61__0_9211 [label=""];
    bb7__0_9211 -> bb8__0_9211 [label="return"];
    bb7__0_9211 -> bb69__0_9211 [label="unwind"];
    bb8__0_9211 -> bb9__0_9211 [label="return"];
    bb8__0_9211 -> bb69__0_9211 [label="unwind"];
    bb9__0_9211 -> bb10__0_9211 [label="0"];
    bb9__0_9211 -> bb11__0_9211 [label="1"];
    bb9__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb10__0_9211 -> bb13__0_9211 [label="return"];
    bb10__0_9211 -> bb68__0_9211 [label="unwind"];
    bb11__0_9211 -> bb12__0_9211 [label="return"];
    bb11__0_9211 -> bb73__0_9211 [label="unwind"];
    bb12__0_9211 -> bb60__0_9211 [label=""];
    bb13__0_9211 -> bb14__0_9211 [label="return"];
    bb13__0_9211 -> bb68__0_9211 [label="unwind"];
    bb14__0_9211 -> bb15__0_9211 [label="0"];
    bb14__0_9211 -> bb16__0_9211 [label="1"];
    bb14__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb15__0_9211 -> bb18__0_9211 [label="return"];
    bb15__0_9211 -> bb68__0_9211 [label="unwind"];
    bb16__0_9211 -> bb17__0_9211 [label="return"];
    bb16__0_9211 -> bb72__0_9211 [label="unwind"];
    bb17__0_9211 -> bb59__0_9211 [label=""];
    bb18__0_9211 -> bb19__0_9211 [label="return"];
    bb18__0_9211 -> bb68__0_9211 [label="unwind"];
    bb19__0_9211 -> bb20__0_9211 [label="return"];
    bb19__0_9211 -> bb68__0_9211 [label="unwind"];
    bb20__0_9211 -> bb21__0_9211 [label="return"];
    bb20__0_9211 -> bb67__0_9211 [label="unwind"];
    bb21__0_9211 -> bb22__0_9211 [label="return"];
    bb21__0_9211 -> bb66__0_9211 [label="unwind"];
    bb22__0_9211 -> bb23__0_9211 [label="return"];
    bb22__0_9211 -> bb66__0_9211 [label="unwind"];
    bb23__0_9211 -> bb24__0_9211 [label="0"];
    bb23__0_9211 -> bb25__0_9211 [label="1"];
    bb23__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb24__0_9211 -> bb27__0_9211 [label="return"];
    bb24__0_9211 -> bb71__0_9211 [label="unwind"];
    bb25__0_9211 -> bb26__0_9211 [label="return"];
    bb25__0_9211 -> bb71__0_9211 [label="unwind"];
    bb26__0_9211 -> bb56__0_9211 [label=""];
    bb27__0_9211 -> bb28__0_9211 [label="return"];
    bb27__0_9211 -> bb71__0_9211 [label="unwind"];
    bb28__0_9211 -> bb29__0_9211 [label="0"];
    bb28__0_9211 -> bb30__0_9211 [label="1"];
    bb28__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb29__0_9211 -> bb32__0_9211 [label="return"];
    bb29__0_9211 -> bb62__0_9211 [label="unwind"];
    bb30__0_9211 -> bb31__0_9211 [label="return"];
    bb30__0_9211 -> bb70__0_9211 [label="unwind"];
    bb31__0_9211 -> bb56__0_9211 [label=""];
    bb32__0_9211 -> bb33__0_9211 [label="return"];
    bb32__0_9211 -> bb63__0_9211 [label="unwind"];
    bb33__0_9211 -> bb34__0_9211 [label="return"];
    bb33__0_9211 -> bb63__0_9211 [label="unwind"];
    bb34__0_9211 -> bb35__0_9211 [label="return"];
    bb34__0_9211 -> bb63__0_9211 [label="unwind"];
    bb35__0_9211 -> bb36__0_9211 [label="return"];
    bb35__0_9211 -> bb63__0_9211 [label="unwind"];
    bb36__0_9211 -> bb37__0_9211 [label="0"];
    bb36__0_9211 -> bb38__0_9211 [label="1"];
    bb36__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb37__0_9211 -> bb40__0_9211 [label="success"];
    bb37__0_9211 -> bb63__0_9211 [label="unwind"];
    bb38__0_9211 -> bb39__0_9211 [label="return"];
    bb38__0_9211 -> bb63__0_9211 [label="unwind"];
    bb39__0_9211 -> bb52__0_9211 [label=""];
    bb40__0_9211 -> bb41__0_9211 [label="return"];
    bb40__0_9211 -> bb63__0_9211 [label="unwind"];
    bb41__0_9211 -> bb42__0_9211 [label="return"];
    bb41__0_9211 -> bb63__0_9211 [label="unwind"];
    bb42__0_9211 -> bb43__0_9211 [label="return"];
    bb42__0_9211 -> bb63__0_9211 [label="unwind"];
    bb43__0_9211 -> bb44__0_9211 [label="0"];
    bb43__0_9211 -> bb45__0_9211 [label="1"];
    bb43__0_9211 -> bb4__0_9211 [label="otherwise"];
    bb44__0_9211 -> bb47__0_9211 [label="return"];
    bb44__0_9211 -> bb63__0_9211 [label="unwind"];
    bb45__0_9211 -> bb46__0_9211 [label="return"];
    bb45__0_9211 -> bb63__0_9211 [label="unwind"];
    bb46__0_9211 -> bb52__0_9211 [label=""];
    bb47__0_9211 -> bb48__0_9211 [label="return"];
    bb47__0_9211 -> bb64__0_9211 [label="unwind"];
    bb48__0_9211 -> bb49__0_9211 [label="return"];
    bb48__0_9211 -> bb65__0_9211 [label="unwind"];
    bb49__0_9211 -> bb50__0_9211 [label="return"];
    bb49__0_9211 -> bb68__0_9211 [label="unwind"];
    bb50__0_9211 -> bb51__0_9211 [label="return"];
    bb50__0_9211 -> bb69__0_9211 [label="unwind"];
    bb51__0_9211 -> bb61__0_9211 [label=""];
    bb52__0_9211 -> bb53__0_9211 [label="return"];
    bb52__0_9211 -> bb64__0_9211 [label="unwind"];
    bb53__0_9211 -> bb54__0_9211 [label="return"];
    bb53__0_9211 -> bb65__0_9211 [label="unwind"];
    bb54__0_9211 -> bb55__0_9211 [label="return"];
    bb54__0_9211 -> bb68__0_9211 [label="unwind"];
    bb55__0_9211 -> bb59__0_9211 [label=""];
    bb56__0_9211 -> bb57__0_9211 [label="return"];
    bb56__0_9211 -> bb67__0_9211 [label="unwind"];
    bb57__0_9211 -> bb58__0_9211 [label="return"];
    bb57__0_9211 -> bb68__0_9211 [label="unwind"];
    bb58__0_9211 -> bb59__0_9211 [label=""];
    bb59__0_9211 -> bb60__0_9211 [label="return"];
    bb59__0_9211 -> bb69__0_9211 [label="unwind"];
    bb60__0_9211 -> bb61__0_9211 [label=""];
    bb62__0_9211 -> bb63__0_9211 [label="return"];
    bb63__0_9211 -> bb64__0_9211 [label="return"];
    bb64__0_9211 -> bb65__0_9211 [label="return"];
    bb65__0_9211 -> bb68__0_9211 [label="return"];
    bb66__0_9211 -> bb67__0_9211 [label="return"];
    bb67__0_9211 -> bb68__0_9211 [label="return"];
    bb68__0_9211 -> bb69__0_9211 [label="return"];
    bb70__0_9211 -> bb71__0_9211 [label=""];
    bb71__0_9211 -> bb66__0_9211 [label=""];
    bb72__0_9211 -> bb68__0_9211 [label=""];
    bb73__0_9211 -> bb69__0_9211 [label=""];
    bb74__0_9211 -> bb69__0_9211 [label=""];
}
