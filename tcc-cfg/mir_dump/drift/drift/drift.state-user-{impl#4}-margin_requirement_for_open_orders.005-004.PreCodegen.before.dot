digraph Mir_0_4344 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotPosition::margin_requirement_for_open_orders(_1: &amp;ReErased state::user::SpotPosition) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let mut _2: u128;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _5: u8;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _10: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>>;
    bb0__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).6: u8)<br/></td></tr><tr><td align="left">_4 = &lt;u8 as Cast&gt;::cast::&lt;u128&gt;(move _5)</td></tr></table>>];
    bb1__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_3 as Continue).0: u128)<br/>_2 = _10<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as SafeMath&gt;::safe_mul(move _2, const _)</td></tr></table>>];
    bb4__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_9)<br/>_9 = _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_2)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_4344 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4344 -> bb1__0_4344 [label="return"];
    bb1__0_4344 -> bb2__0_4344 [label="return"];
    bb2__0_4344 -> bb3__0_4344 [label="0"];
    bb2__0_4344 -> bb5__0_4344 [label="1"];
    bb2__0_4344 -> bb4__0_4344 [label="otherwise"];
    bb3__0_4344 -> bb7__0_4344 [label="return"];
    bb5__0_4344 -> bb6__0_4344 [label="return"];
    bb6__0_4344 -> bb8__0_4344 [label=""];
    bb7__0_4344 -> bb8__0_4344 [label=""];
}
