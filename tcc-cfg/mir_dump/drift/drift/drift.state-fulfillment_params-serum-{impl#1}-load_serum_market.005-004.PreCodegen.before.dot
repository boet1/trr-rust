digraph Mir_0_3249 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SerumContext::&lt;'a, 'b&gt;::load_serum_market(_1: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;) -&gt; std::result::Result&lt;serum_dex::state::Market&lt;ReErased&gt;, error::ErrorCode&gt;<br align="left"/>let mut _2: std::result::Result&lt;serum_dex::state::Market&lt;ReErased&gt;, serum_dex::error::DexError&gt;;<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: Closure(DefId(0:3250 ~ drift[d311]::state::fulfillment_params::serum::{impl#1}::load_serum_market::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((serum_dex::error::DexError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_3249 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_6 = deref_copy ((*_1).1: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_3 = &amp;(*_6)<br/>StorageLive(_4)<br/>_7 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_8 = deref_copy ((*_7).0: &amp;anchor_lang::prelude::Pubkey)<br/>_4 = &amp;(*_8)<br/></td></tr><tr><td align="left">_2 = serum_dex::state::Market::&lt;'_&gt;::load(move _3, move _4, const false)</td></tr></table>>];
    bb1__0_3249 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_5)<br/>_5 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:69:80: 69:83}<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;serum_dex::state::Market&lt;'_&gt;, DexError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/serum.rs:69:80: 69:83}&gt;(move _2, move _5)</td></tr></table>>];
    bb2__0_3249 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb3__0_3249 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">3 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3249 -> bb1__0_3249 [label="return"];
    bb1__0_3249 -> bb2__0_3249 [label="return"];
    bb1__0_3249 -> bb3__0_3249 [label="unwind"];
}
