digraph Mir_0_11731 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_cancel_orders(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::CancelOrder&lt;ReErased&gt;&gt;, _2: std::option::Option&lt;state::user::MarketType&gt;, _3: std::option::Option&lt;u16&gt;, _4: std::option::Option&lt;controller::position::PositionDirection&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _16: anchor_lang::prelude::Clock;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _18: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _23: anchor_lang::prelude::Clock;<br align="left"/>let _24: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _25: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _26: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _27: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _28: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _30: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _31: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _35: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _41: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _44: state::state::OracleGuardRails;<br align="left"/>let mut _45: &amp;ReErased state::state::State;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _52: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _53: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _54: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _56: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _57: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _59: Closure(DefId(0:11734 ~ drift[d311]::instructions::user::handle_cancel_orders::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _65: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _68: &amp;ReErased mut state::user::User;<br align="left"/>let mut _69: &amp;ReErased mut state::user::User;<br align="left"/>let mut _70: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _71: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _72: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _73: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _74: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _75: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _76: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _78: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _81: i64;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: state::events::OrderActionExplanation;<br align="left"/>let mut _84: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _85: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _86: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _92: ();<br align="left"/>let mut _93: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _94: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _95: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _97: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _98: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _100: bool;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _128: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_type =&gt; _2;<br align="left"/>debug market_index =&gt; _3;<br align="left"/>debug direction =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug clock =&gt; _15;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug state =&gt; _24;<br align="left"/>debug perp_market_map =&gt; _25;<br align="left"/>debug spot_market_map =&gt; _26;<br align="left"/>debug oracle_map =&gt; _27;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug user_key =&gt; _52;<br align="left"/>debug user =&gt; _54;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>>;
    bb0__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_100 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_93 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_9 = &amp;((*_93).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_94 = deref_copy (*_9)<br/>_127 = (((_94.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_127)<br/></td></tr><tr><td align="left">_7 = constraints::exchange_not_paused(move _8)</td></tr></table>>];
    bb1__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_101 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_119 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_19 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_17 as Continue).0: anchor_lang::prelude::Clock)<br/>_16 = move _23<br/>StorageDead(_23)<br/>_15 = &amp;_16<br/>_103 = discriminant(_17)<br/>StorageDead(_17)<br/>StorageLive(_24)<br/>_95 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_24 = &amp;((*_95).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_96 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_35 = &amp;(*_96)<br/></td></tr><tr><td align="left">_34 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _35)</td></tr></table>>];
    bb10__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_117 = discriminant(_17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _34)</td></tr></table>>];
    bb13__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = &amp;mut _33<br/>_31 = &amp;mut (*_32)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/></td></tr><tr><td align="left">_38 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/></td></tr><tr><td align="left">_41 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb15__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>StorageLive(_42)<br/>_42 = ((*_15).0: u64)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_97 = deref_copy (*_24)<br/>_128 = (((_97.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_46 = &amp;(*_128)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb16__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = ((*_45).7: state::state::OracleGuardRails)<br/>_43 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _44)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_30 = load_maps(move _31, move _36, move _39, move _42, move _43)</td></tr></table>>];
    bb17__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb18__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_47 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb19__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_29 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_28 = move _51<br/>StorageDead(_51)<br/>StorageLive(_25)<br/>_25 = move (_28.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_26)<br/>_26 = move (_28.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_27)<br/>_27 = move (_28.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_107 = discriminant(_29)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb20__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb21__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>_105 = discriminant(_29)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb22__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb23__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_98 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_53 = &amp;((*_98).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_52 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _53)</td></tr></table>>];
    bb24__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_99 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_58 = &amp;((*_99).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_57 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _58)</td></tr></table>>];
    bb25__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_59)<br/>_59 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_56 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _57, move _59)</td></tr></table>>];
    bb26__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb27__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_60 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb28__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_55 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_54 = move _64<br/>StorageDead(_64)<br/>_111 = discriminant(_55)<br/>StorageDead(_55)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;mut _54<br/>_70 = &amp;mut (*_71)<br/></td></tr><tr><td align="left">_69 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _70)</td></tr></table>>];
    bb29__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb30__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_109 = discriminant(_55)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_68 = &amp;mut (*_69)<br/>StorageDead(_70)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_52<br/>_72 = &amp;(*_73)<br/>StorageLive(_74)<br/>_74 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_25<br/>_75 = &amp;(*_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_26<br/>_77 = &amp;(*_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;mut _27<br/>_79 = &amp;mut (*_80)<br/>StorageLive(_81)<br/>_81 = ((*_15).4: i64)<br/>StorageLive(_82)<br/>_82 = ((*_15).0: u64)<br/>StorageLive(_83)<br/>_83 = OrderActionExplanation::None<br/>StorageLive(_84)<br/>_84 = _2<br/>StorageLive(_85)<br/>_85 = _3<br/>StorageLive(_86)<br/>_86 = _4<br/></td></tr><tr><td align="left">_67 = controller::orders::cancel_orders(move _68, move _72, move _74, move _75, move _77, move _79, move _81, move _82, move _83, move _84, move _85, move _86)</td></tr></table>>];
    bb32__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb33__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_100 = const true<br/>StorageDead(_67)<br/>_87 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb34__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = move ((_66 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_65 = move _91<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb35__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb36__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>_113 = discriminant(_66)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>_100 = const false<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb37__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_115 = discriminant(_66)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>_100 = const false<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_92)<br/>_92 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _92)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb38__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb39__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb40__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb41__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb43__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb44__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb45__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb47__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">return</td></tr></table>>];
    bb51__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb52__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb53__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb54__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb55__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb56__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb57__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb58__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb59__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left" balign="left">_121 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left" balign="left">_122 = discriminant(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left" balign="left">_124 = discriminant(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_125 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_11731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left" balign="left">_126 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11731 -> bb1__0_11731 [label="return"];
    bb1__0_11731 -> bb2__0_11731 [label="return"];
    bb1__0_11731 -> bb58__0_11731 [label="unwind"];
    bb2__0_11731 -> bb3__0_11731 [label="0"];
    bb2__0_11731 -> bb5__0_11731 [label="1"];
    bb2__0_11731 -> bb4__0_11731 [label="otherwise"];
    bb3__0_11731 -> bb7__0_11731 [label="return"];
    bb5__0_11731 -> bb6__0_11731 [label="return"];
    bb5__0_11731 -> bb63__0_11731 [label="unwind"];
    bb6__0_11731 -> bb50__0_11731 [label=""];
    bb7__0_11731 -> bb8__0_11731 [label="return"];
    bb7__0_11731 -> bb58__0_11731 [label="unwind"];
    bb8__0_11731 -> bb9__0_11731 [label="0"];
    bb8__0_11731 -> bb10__0_11731 [label="1"];
    bb8__0_11731 -> bb4__0_11731 [label="otherwise"];
    bb9__0_11731 -> bb12__0_11731 [label="return"];
    bb10__0_11731 -> bb11__0_11731 [label="return"];
    bb10__0_11731 -> bb62__0_11731 [label="unwind"];
    bb11__0_11731 -> bb49__0_11731 [label=""];
    bb12__0_11731 -> bb13__0_11731 [label="return"];
    bb13__0_11731 -> bb14__0_11731 [label="return"];
    bb14__0_11731 -> bb15__0_11731 [label="return"];
    bb14__0_11731 -> bb57__0_11731 [label="unwind"];
    bb15__0_11731 -> bb16__0_11731 [label="return"];
    bb15__0_11731 -> bb56__0_11731 [label="unwind"];
    bb16__0_11731 -> bb17__0_11731 [label="return"];
    bb16__0_11731 -> bb56__0_11731 [label="unwind"];
    bb17__0_11731 -> bb18__0_11731 [label="return"];
    bb17__0_11731 -> bb56__0_11731 [label="unwind"];
    bb18__0_11731 -> bb19__0_11731 [label="0"];
    bb18__0_11731 -> bb20__0_11731 [label="1"];
    bb18__0_11731 -> bb4__0_11731 [label="otherwise"];
    bb19__0_11731 -> bb22__0_11731 [label="return"];
    bb19__0_11731 -> bb52__0_11731 [label="unwind"];
    bb20__0_11731 -> bb21__0_11731 [label="return"];
    bb20__0_11731 -> bb61__0_11731 [label="unwind"];
    bb21__0_11731 -> bb46__0_11731 [label="return"];
    bb21__0_11731 -> bb57__0_11731 [label="unwind"];
    bb22__0_11731 -> bb23__0_11731 [label="return"];
    bb22__0_11731 -> bb53__0_11731 [label="unwind"];
    bb23__0_11731 -> bb24__0_11731 [label="return"];
    bb23__0_11731 -> bb53__0_11731 [label="unwind"];
    bb24__0_11731 -> bb25__0_11731 [label="return"];
    bb24__0_11731 -> bb53__0_11731 [label="unwind"];
    bb25__0_11731 -> bb26__0_11731 [label="return"];
    bb25__0_11731 -> bb53__0_11731 [label="unwind"];
    bb26__0_11731 -> bb27__0_11731 [label="return"];
    bb26__0_11731 -> bb53__0_11731 [label="unwind"];
    bb27__0_11731 -> bb28__0_11731 [label="0"];
    bb27__0_11731 -> bb29__0_11731 [label="1"];
    bb27__0_11731 -> bb4__0_11731 [label="otherwise"];
    bb28__0_11731 -> bb31__0_11731 [label="return"];
    bb28__0_11731 -> bb51__0_11731 [label="unwind"];
    bb29__0_11731 -> bb30__0_11731 [label="return"];
    bb29__0_11731 -> bb60__0_11731 [label="unwind"];
    bb30__0_11731 -> bb42__0_11731 [label=""];
    bb31__0_11731 -> bb32__0_11731 [label="return"];
    bb31__0_11731 -> bb51__0_11731 [label="unwind"];
    bb32__0_11731 -> bb33__0_11731 [label="return"];
    bb32__0_11731 -> bb51__0_11731 [label="unwind"];
    bb33__0_11731 -> bb34__0_11731 [label="0"];
    bb33__0_11731 -> bb35__0_11731 [label="1"];
    bb33__0_11731 -> bb4__0_11731 [label="otherwise"];
    bb34__0_11731 -> bb37__0_11731 [label="return"];
    bb34__0_11731 -> bb59__0_11731 [label="unwind"];
    bb35__0_11731 -> bb36__0_11731 [label="return"];
    bb35__0_11731 -> bb59__0_11731 [label="unwind"];
    bb36__0_11731 -> bb42__0_11731 [label="return"];
    bb36__0_11731 -> bb53__0_11731 [label="unwind"];
    bb37__0_11731 -> bb38__0_11731 [label="return"];
    bb37__0_11731 -> bb53__0_11731 [label="unwind"];
    bb38__0_11731 -> bb39__0_11731 [label="return"];
    bb38__0_11731 -> bb54__0_11731 [label="unwind"];
    bb39__0_11731 -> bb40__0_11731 [label="return"];
    bb39__0_11731 -> bb55__0_11731 [label="unwind"];
    bb40__0_11731 -> bb41__0_11731 [label="return"];
    bb40__0_11731 -> bb58__0_11731 [label="unwind"];
    bb41__0_11731 -> bb50__0_11731 [label=""];
    bb42__0_11731 -> bb43__0_11731 [label="return"];
    bb42__0_11731 -> bb54__0_11731 [label="unwind"];
    bb43__0_11731 -> bb44__0_11731 [label="return"];
    bb43__0_11731 -> bb55__0_11731 [label="unwind"];
    bb44__0_11731 -> bb45__0_11731 [label="return"];
    bb44__0_11731 -> bb58__0_11731 [label="unwind"];
    bb45__0_11731 -> bb48__0_11731 [label=""];
    bb46__0_11731 -> bb47__0_11731 [label="return"];
    bb46__0_11731 -> bb58__0_11731 [label="unwind"];
    bb47__0_11731 -> bb48__0_11731 [label=""];
    bb48__0_11731 -> bb49__0_11731 [label=""];
    bb49__0_11731 -> bb50__0_11731 [label=""];
    bb51__0_11731 -> bb53__0_11731 [label="return"];
    bb52__0_11731 -> bb53__0_11731 [label="return"];
    bb53__0_11731 -> bb54__0_11731 [label="return"];
    bb54__0_11731 -> bb55__0_11731 [label="return"];
    bb55__0_11731 -> bb58__0_11731 [label="return"];
    bb56__0_11731 -> bb57__0_11731 [label="return"];
    bb57__0_11731 -> bb58__0_11731 [label="return"];
    bb59__0_11731 -> bb51__0_11731 [label=""];
    bb60__0_11731 -> bb53__0_11731 [label=""];
    bb61__0_11731 -> bb56__0_11731 [label=""];
    bb62__0_11731 -> bb58__0_11731 [label=""];
    bb63__0_11731 -> bb58__0_11731 [label=""];
}
