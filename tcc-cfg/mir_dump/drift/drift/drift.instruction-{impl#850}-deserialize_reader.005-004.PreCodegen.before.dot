digraph Mir_0_22519 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;instruction::InitializeSpotMarket as BorshDeserialize&gt;::deserialize_reader(_1: &amp;ReErased mut R/#0) -&gt; std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt;<br align="left"/>let mut _2: instruction::InitializeSpotMarket;<br align="left"/>let mut _3: u32;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased mut R/#0;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _11: u32;<br align="left"/>let mut _12: u32;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased mut R/#0;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _20: u32;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased mut R/#0;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _29: u32;<br align="left"/>let mut _30: state::oracle::OracleSource;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, state::oracle::OracleSource&gt;;<br align="left"/>let mut _32: std::result::Result&lt;state::oracle::OracleSource, std::io::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased mut R/#0;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _38: state::oracle::OracleSource;<br align="left"/>let mut _39: u32;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased mut R/#0;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _47: u32;<br align="left"/>let mut _48: u32;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _50: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased mut R/#0;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _56: u32;<br align="left"/>let mut _57: u32;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _59: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _60: &amp;ReErased mut R/#0;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _65: u32;<br align="left"/>let mut _66: u32;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _68: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased mut R/#0;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _74: u32;<br align="left"/>let mut _75: u32;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _77: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _78: &amp;ReErased mut R/#0;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _83: u32;<br align="left"/>let mut _84: u32;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _86: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _87: &amp;ReErased mut R/#0;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _92: u32;<br align="left"/>let mut _93: u32;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _96: &amp;ReErased mut R/#0;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _101: u32;<br align="left"/>let mut _102: bool;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, bool&gt;;<br align="left"/>let mut _104: std::result::Result&lt;bool, std::io::Error&gt;;<br align="left"/>let mut _105: &amp;ReErased mut R/#0;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _110: bool;<br align="left"/>let mut _111: state::spot_market::AssetTier;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, state::spot_market::AssetTier&gt;;<br align="left"/>let mut _113: std::result::Result&lt;state::spot_market::AssetTier, std::io::Error&gt;;<br align="left"/>let mut _114: &amp;ReErased mut R/#0;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _119: state::spot_market::AssetTier;<br align="left"/>let mut _120: u64;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _122: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _123: &amp;ReErased mut R/#0;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _128: u64;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _131: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _132: &amp;ReErased mut R/#0;<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _137: u64;<br align="left"/>let mut _138: u64;<br align="left"/>let mut _139: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _140: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _141: &amp;ReErased mut R/#0;<br align="left"/>let mut _142: isize;<br align="left"/>let _143: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _144: !;<br align="left"/>let mut _145: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _146: u64;<br align="left"/>let mut _147: u64;<br align="left"/>let mut _148: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _149: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _150: &amp;ReErased mut R/#0;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _155: u64;<br align="left"/>let mut _156: u32;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u32&gt;;<br align="left"/>let mut _158: std::result::Result&lt;u32, std::io::Error&gt;;<br align="left"/>let mut _159: &amp;ReErased mut R/#0;<br align="left"/>let mut _160: isize;<br align="left"/>let _161: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _162: !;<br align="left"/>let mut _163: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _164: u32;<br align="left"/>let mut _165: [u8; 32_usize];<br align="left"/>let mut _166: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, [u8; 32_usize]&gt;;<br align="left"/>let mut _167: std::result::Result&lt;[u8; 32_usize], std::io::Error&gt;;<br align="left"/>let mut _168: &amp;ReErased mut R/#0;<br align="left"/>let mut _169: isize;<br align="left"/>let _170: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _171: !;<br align="left"/>let mut _172: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _173: [u8; 32_usize];<br align="left"/>let mut _174: bool;<br align="left"/>let mut _175: bool;<br align="left"/>let mut _176: bool;<br align="left"/>let mut _177: bool;<br align="left"/>let mut _178: bool;<br align="left"/>let mut _179: bool;<br align="left"/>let mut _180: bool;<br align="left"/>let mut _181: bool;<br align="left"/>let mut _182: bool;<br align="left"/>let mut _183: bool;<br align="left"/>let mut _184: bool;<br align="left"/>let mut _185: bool;<br align="left"/>let mut _186: bool;<br align="left"/>let mut _187: bool;<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: bool;<br align="left"/>let mut _190: bool;<br align="left"/>let mut _191: bool;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>let mut _197: isize;<br align="left"/>let mut _198: isize;<br align="left"/>let mut _199: isize;<br align="left"/>let mut _200: isize;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: isize;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: isize;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: isize;<br align="left"/>let mut _227: isize;<br align="left"/>let mut _228: isize;<br align="left"/>let mut _229: isize;<br align="left"/>let mut _230: isize;<br align="left"/>let mut _231: isize;<br align="left"/>let mut _232: isize;<br align="left"/>let mut _233: isize;<br align="left"/>let mut _234: isize;<br align="left"/>let mut _235: isize;<br align="left"/>let mut _236: isize;<br align="left"/>let mut _237: isize;<br align="left"/>let mut _238: isize;<br align="left"/>let mut _239: isize;<br align="left"/>let mut _240: isize;<br align="left"/>let mut _241: isize;<br align="left"/>let mut _242: isize;<br align="left"/>let mut _243: isize;<br align="left"/>let mut _244: isize;<br align="left"/>let mut _245: isize;<br align="left"/>let mut _246: isize;<br align="left"/>let mut _247: isize;<br align="left"/>let mut _248: isize;<br align="left"/>let mut _249: isize;<br align="left"/>let mut _250: isize;<br align="left"/>let mut _251: isize;<br align="left"/>let mut _252: isize;<br align="left"/>let mut _253: isize;<br align="left"/>let mut _254: isize;<br align="left"/>let mut _255: isize;<br align="left"/>let mut _256: isize;<br align="left"/>let mut _257: isize;<br align="left"/>let mut _258: isize;<br align="left"/>let mut _259: isize;<br align="left"/>let mut _260: isize;<br align="left"/>let mut _261: isize;<br align="left"/>let mut _262: isize;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: isize;<br align="left"/>let mut _269: isize;<br align="left"/>let mut _270: isize;<br align="left"/>let mut _271: isize;<br align="left"/>let mut _272: isize;<br align="left"/>let mut _273: isize;<br align="left"/>let mut _274: isize;<br align="left"/>let mut _275: isize;<br align="left"/>let mut _276: isize;<br align="left"/>let mut _277: isize;<br align="left"/>let mut _278: isize;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>debug reader =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>debug residual =&gt; _143;<br align="left"/>debug val =&gt; _146;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug residual =&gt; _161;<br align="left"/>debug val =&gt; _164;<br align="left"/>debug residual =&gt; _170;<br align="left"/>debug val =&gt; _173;<br align="left"/>>;
    bb0__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_191 = const false<br/>_190 = const false<br/>_189 = const false<br/>_188 = const false<br/>_187 = const false<br/>_186 = const false<br/>_185 = const false<br/>_184 = const false<br/>_183 = const false<br/>_182 = const false<br/>_181 = const false<br/>_180 = const false<br/>_179 = const false<br/>_178 = const false<br/>_177 = const false<br/>_176 = const false<br/>_175 = const false<br/>_174 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_5 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _6)</td></tr></table>>];
    bb1__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_191 = const true<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Continue).0: u32)<br/>_3 = _11<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_14 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _15)</td></tr></table>>];
    bb4__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_190 = const true<br/>StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: u32)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_23 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _24)</td></tr></table>>];
    bb10__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb13__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_189 = const true<br/>StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb14__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: u32)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_32 = &lt;state::oracle::OracleSource as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _33)</td></tr></table>>];
    bb15__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_28)<br/>_28 = move _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb16__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;state::oracle::OracleSource, std::io::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb18__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_188 = const true<br/>StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb19__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: state::oracle::OracleSource)<br/>_30 = _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_41 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _42)</td></tr></table>>];
    bb20__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb21__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb23__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_187 = const true<br/>StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Continue).0: u32)<br/>_39 = _47<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_50 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _51)</td></tr></table>>];
    bb25__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb28__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_186 = const true<br/>StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb29__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_49 as Continue).0: u32)<br/>_48 = _56<br/>StorageDead(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_59 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _60)</td></tr></table>>];
    bb30__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_55)<br/>_55 = move _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb31__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb33__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_185 = const true<br/>StorageDead(_59)<br/>_61 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb34__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_58 as Continue).0: u32)<br/>_57 = _65<br/>StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_68 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _69)</td></tr></table>>];
    bb35__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb36__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb38__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_184 = const true<br/>StorageDead(_68)<br/>_70 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb39__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_67 as Continue).0: u32)<br/>_66 = _74<br/>StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_77 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _78)</td></tr></table>>];
    bb40__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_73)<br/>_73 = move _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb41__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb43__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_183 = const true<br/>StorageDead(_77)<br/>_79 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb44__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_76 as Continue).0: u32)<br/>_75 = _83<br/>StorageDead(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_86 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _87)</td></tr></table>>];
    bb45__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_82)<br/>_82 = move _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb46__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb48__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_182 = const true<br/>StorageDead(_86)<br/>_88 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb49__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_85 as Continue).0: u32)<br/>_84 = _92<br/>StorageDead(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_95 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _96)</td></tr></table>>];
    bb50__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = move ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_91)<br/>_91 = move _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb51__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb53__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_181 = const true<br/>StorageDead(_95)<br/>_97 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb54__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_94 as Continue).0: u32)<br/>_93 = _101<br/>StorageDead(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_104 = &lt;bool as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _105)</td></tr></table>>];
    bb55__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_100)<br/>_100 = move _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb56__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;bool, std::io::Error&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb58__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_180 = const true<br/>StorageDead(_104)<br/>_106 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb59__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_103 as Continue).0: bool)<br/>_102 = _110<br/>StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_113 = &lt;state::spot_market::AssetTier as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _114)</td></tr></table>>];
    bb60__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = move ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_109)<br/>_109 = move _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb61__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;state::spot_market::AssetTier, std::io::Error&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb63__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_179 = const true<br/>StorageDead(_113)<br/>_115 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb64__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_112 as Continue).0: state::spot_market::AssetTier)<br/>_111 = _119<br/>StorageDead(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_122 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _123)</td></tr></table>>];
    bb65__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = move ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_118)<br/>_118 = move _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb66__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb68__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_178 = const true<br/>StorageDead(_122)<br/>_124 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb69__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_121 as Continue).0: u64)<br/>_120 = _128<br/>StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_131 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _132)</td></tr></table>>];
    bb70__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = move ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_127)<br/>_127 = move _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb71__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb73__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_177 = const true<br/>StorageDead(_131)<br/>_133 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb74__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_130 as Continue).0: u64)<br/>_129 = _137<br/>StorageDead(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_140 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _141)</td></tr></table>>];
    bb75__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = move ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_136)<br/>_136 = move _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb76__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _140)</td></tr></table>>];
    bb78__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_176 = const true<br/>StorageDead(_140)<br/>_142 = discriminant(_139)<br/></td></tr><tr><td align="left">switchInt(move _142)</td></tr></table>>];
    bb79__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_139 as Continue).0: u64)<br/>_138 = _146<br/>StorageDead(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_149 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _150)</td></tr></table>>];
    bb80__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = move ((_139 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_145)<br/>_145 = move _143<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _145)</td></tr></table>>];
    bb81__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_138)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/></td></tr><tr><td align="left">_148 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _149)</td></tr></table>>];
    bb83__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_175 = const true<br/>StorageDead(_149)<br/>_151 = discriminant(_148)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb84__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_148 as Continue).0: u64)<br/>_147 = _155<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_158 = &lt;u32 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _159)</td></tr></table>>];
    bb85__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = move ((_148 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_154)<br/>_154 = move _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb86__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_147)<br/>StorageDead(_138)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;u32, std::io::Error&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb88__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_174 = const true<br/>StorageDead(_158)<br/>_160 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb89__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_157 as Continue).0: u32)<br/>_156 = _164<br/>StorageDead(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_167 = &lt;[u8; 32] as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _168)</td></tr></table>>];
    bb90__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = move ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_163)<br/>_163 = move _161<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _163)</td></tr></table>>];
    bb91__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_156)<br/>StorageDead(_147)<br/>StorageDead(_138)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;std::result::Result&lt;[u8; 32], std::io::Error&gt; as Try&gt;::branch(move _167)</td></tr></table>>];
    bb93__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_169 = discriminant(_166)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb94__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_166 as Continue).0: [u8; 32])<br/>_165 = _173<br/>StorageDead(_173)<br/>_2 = instruction::InitializeSpotMarket { optimal_utilization: move _3, optimal_borrow_rate: move _12, max_borrow_rate: move _21, oracle_source: move _30, initial_asset_weight: move _39, maintenance_asset_weight: move _48, initial_liability_weight: move _57, maintenance_liability_weight: move _66, imf_factor: move _75, liquidator_fee: move _84, if_liquidation_fee: move _93, active_status: move _102, asset_tier: move _111, scale_initial_asset_weight_start: move _120, withdraw_guard_threshold: move _129, order_tick_size: move _138, order_step_size: move _147, if_total_factor: move _156, name: move _165 }<br/>StorageDead(_165)<br/>StorageDead(_156)<br/>StorageDead(_147)<br/>StorageDead(_138)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;instruction::InitializeSpotMarket, std::io::Error&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>_192 = discriminant(_166)<br/>StorageDead(_166)<br/>_194 = discriminant(_157)<br/>_174 = const false<br/>StorageDead(_157)<br/>_196 = discriminant(_148)<br/>_175 = const false<br/>StorageDead(_148)<br/>_198 = discriminant(_139)<br/>_176 = const false<br/>StorageDead(_139)<br/>_200 = discriminant(_130)<br/>_177 = const false<br/>StorageDead(_130)<br/>_202 = discriminant(_121)<br/>_178 = const false<br/>StorageDead(_121)<br/>_204 = discriminant(_112)<br/>_179 = const false<br/>StorageDead(_112)<br/>_206 = discriminant(_103)<br/>_180 = const false<br/>StorageDead(_103)<br/>_208 = discriminant(_94)<br/>_181 = const false<br/>StorageDead(_94)<br/>_210 = discriminant(_85)<br/>_182 = const false<br/>StorageDead(_85)<br/>_212 = discriminant(_76)<br/>_183 = const false<br/>StorageDead(_76)<br/>_214 = discriminant(_67)<br/>_184 = const false<br/>StorageDead(_67)<br/>_216 = discriminant(_58)<br/>_185 = const false<br/>StorageDead(_58)<br/>_218 = discriminant(_49)<br/>_186 = const false<br/>StorageDead(_49)<br/>_220 = discriminant(_40)<br/>_187 = const false<br/>StorageDead(_40)<br/>_222 = discriminant(_31)<br/>_188 = const false<br/>StorageDead(_31)<br/>_224 = discriminant(_22)<br/>_189 = const false<br/>StorageDead(_22)<br/>_226 = discriminant(_13)<br/>_190 = const false<br/>StorageDead(_13)<br/>_228 = discriminant(_4)<br/>_191 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = move ((_166 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_172)<br/>_172 = move _170<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instruction::InitializeSpotMarket, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _172)</td></tr></table>>];
    bb96__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_165)<br/>StorageDead(_156)<br/>StorageDead(_147)<br/>StorageDead(_138)<br/>StorageDead(_129)<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>_230 = discriminant(_166)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left">return</td></tr></table>>];
    bb98__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb99__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_232 = discriminant(_157)<br/>_174 = const false<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_234 = discriminant(_148)<br/>_175 = const false<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_236 = discriminant(_139)<br/>_176 = const false<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_238 = discriminant(_130)<br/>_177 = const false<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_240 = discriminant(_121)<br/>_178 = const false<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_242 = discriminant(_112)<br/>_179 = const false<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_244 = discriminant(_103)<br/>_180 = const false<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_246 = discriminant(_94)<br/>_181 = const false<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_248 = discriminant(_85)<br/>_182 = const false<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_250 = discriminant(_76)<br/>_183 = const false<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_252 = discriminant(_67)<br/>_184 = const false<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">_254 = discriminant(_58)<br/>_185 = const false<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_256 = discriminant(_49)<br/>_186 = const false<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_258 = discriminant(_40)<br/>_187 = const false<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">_260 = discriminant(_31)<br/>_188 = const false<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_262 = discriminant(_22)<br/>_189 = const false<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_264 = discriminant(_13)<br/>_190 = const false<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_266 = discriminant(_4)<br/>_191 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left" balign="left">_268 = discriminant(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">118 (cleanup)</td></tr><tr><td align="left" balign="left">_269 = discriminant(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">119 (cleanup)</td></tr><tr><td align="left" balign="left">_270 = discriminant(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">120 (cleanup)</td></tr><tr><td align="left" balign="left">_271 = discriminant(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">121 (cleanup)</td></tr><tr><td align="left" balign="left">_272 = discriminant(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left" balign="left">_273 = discriminant(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left" balign="left">_274 = discriminant(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left" balign="left">_275 = discriminant(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left" balign="left">_276 = discriminant(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left" balign="left">_277 = discriminant(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left" balign="left">_278 = discriminant(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left" balign="left">_279 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left" balign="left">_280 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left" balign="left">_281 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left" balign="left">_282 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left" balign="left">_283 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left" balign="left">_284 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left" balign="left">_285 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_22519 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">135 (cleanup)</td></tr><tr><td align="left" balign="left">_286 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_22519 -> bb1__0_22519 [label="return"];
    bb1__0_22519 -> bb2__0_22519 [label="return"];
    bb1__0_22519 -> bb98__0_22519 [label="unwind"];
    bb2__0_22519 -> bb3__0_22519 [label="0"];
    bb2__0_22519 -> bb5__0_22519 [label="1"];
    bb2__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb3__0_22519 -> bb7__0_22519 [label="return"];
    bb3__0_22519 -> bb135__0_22519 [label="unwind"];
    bb5__0_22519 -> bb6__0_22519 [label="return"];
    bb5__0_22519 -> bb135__0_22519 [label="unwind"];
    bb6__0_22519 -> bb116__0_22519 [label=""];
    bb7__0_22519 -> bb8__0_22519 [label="return"];
    bb7__0_22519 -> bb135__0_22519 [label="unwind"];
    bb8__0_22519 -> bb9__0_22519 [label="0"];
    bb8__0_22519 -> bb10__0_22519 [label="1"];
    bb8__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb9__0_22519 -> bb12__0_22519 [label="return"];
    bb9__0_22519 -> bb134__0_22519 [label="unwind"];
    bb10__0_22519 -> bb11__0_22519 [label="return"];
    bb10__0_22519 -> bb134__0_22519 [label="unwind"];
    bb11__0_22519 -> bb115__0_22519 [label=""];
    bb12__0_22519 -> bb13__0_22519 [label="return"];
    bb12__0_22519 -> bb134__0_22519 [label="unwind"];
    bb13__0_22519 -> bb14__0_22519 [label="0"];
    bb13__0_22519 -> bb15__0_22519 [label="1"];
    bb13__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb14__0_22519 -> bb17__0_22519 [label="return"];
    bb14__0_22519 -> bb133__0_22519 [label="unwind"];
    bb15__0_22519 -> bb16__0_22519 [label="return"];
    bb15__0_22519 -> bb133__0_22519 [label="unwind"];
    bb16__0_22519 -> bb114__0_22519 [label=""];
    bb17__0_22519 -> bb18__0_22519 [label="return"];
    bb17__0_22519 -> bb133__0_22519 [label="unwind"];
    bb18__0_22519 -> bb19__0_22519 [label="0"];
    bb18__0_22519 -> bb20__0_22519 [label="1"];
    bb18__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb19__0_22519 -> bb22__0_22519 [label="return"];
    bb19__0_22519 -> bb132__0_22519 [label="unwind"];
    bb20__0_22519 -> bb21__0_22519 [label="return"];
    bb20__0_22519 -> bb132__0_22519 [label="unwind"];
    bb21__0_22519 -> bb113__0_22519 [label=""];
    bb22__0_22519 -> bb23__0_22519 [label="return"];
    bb22__0_22519 -> bb132__0_22519 [label="unwind"];
    bb23__0_22519 -> bb24__0_22519 [label="0"];
    bb23__0_22519 -> bb25__0_22519 [label="1"];
    bb23__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb24__0_22519 -> bb27__0_22519 [label="return"];
    bb24__0_22519 -> bb131__0_22519 [label="unwind"];
    bb25__0_22519 -> bb26__0_22519 [label="return"];
    bb25__0_22519 -> bb131__0_22519 [label="unwind"];
    bb26__0_22519 -> bb112__0_22519 [label=""];
    bb27__0_22519 -> bb28__0_22519 [label="return"];
    bb27__0_22519 -> bb131__0_22519 [label="unwind"];
    bb28__0_22519 -> bb29__0_22519 [label="0"];
    bb28__0_22519 -> bb30__0_22519 [label="1"];
    bb28__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb29__0_22519 -> bb32__0_22519 [label="return"];
    bb29__0_22519 -> bb130__0_22519 [label="unwind"];
    bb30__0_22519 -> bb31__0_22519 [label="return"];
    bb30__0_22519 -> bb130__0_22519 [label="unwind"];
    bb31__0_22519 -> bb111__0_22519 [label=""];
    bb32__0_22519 -> bb33__0_22519 [label="return"];
    bb32__0_22519 -> bb130__0_22519 [label="unwind"];
    bb33__0_22519 -> bb34__0_22519 [label="0"];
    bb33__0_22519 -> bb35__0_22519 [label="1"];
    bb33__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb34__0_22519 -> bb37__0_22519 [label="return"];
    bb34__0_22519 -> bb129__0_22519 [label="unwind"];
    bb35__0_22519 -> bb36__0_22519 [label="return"];
    bb35__0_22519 -> bb129__0_22519 [label="unwind"];
    bb36__0_22519 -> bb110__0_22519 [label=""];
    bb37__0_22519 -> bb38__0_22519 [label="return"];
    bb37__0_22519 -> bb129__0_22519 [label="unwind"];
    bb38__0_22519 -> bb39__0_22519 [label="0"];
    bb38__0_22519 -> bb40__0_22519 [label="1"];
    bb38__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb39__0_22519 -> bb42__0_22519 [label="return"];
    bb39__0_22519 -> bb128__0_22519 [label="unwind"];
    bb40__0_22519 -> bb41__0_22519 [label="return"];
    bb40__0_22519 -> bb128__0_22519 [label="unwind"];
    bb41__0_22519 -> bb109__0_22519 [label=""];
    bb42__0_22519 -> bb43__0_22519 [label="return"];
    bb42__0_22519 -> bb128__0_22519 [label="unwind"];
    bb43__0_22519 -> bb44__0_22519 [label="0"];
    bb43__0_22519 -> bb45__0_22519 [label="1"];
    bb43__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb44__0_22519 -> bb47__0_22519 [label="return"];
    bb44__0_22519 -> bb127__0_22519 [label="unwind"];
    bb45__0_22519 -> bb46__0_22519 [label="return"];
    bb45__0_22519 -> bb127__0_22519 [label="unwind"];
    bb46__0_22519 -> bb108__0_22519 [label=""];
    bb47__0_22519 -> bb48__0_22519 [label="return"];
    bb47__0_22519 -> bb127__0_22519 [label="unwind"];
    bb48__0_22519 -> bb49__0_22519 [label="0"];
    bb48__0_22519 -> bb50__0_22519 [label="1"];
    bb48__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb49__0_22519 -> bb52__0_22519 [label="return"];
    bb49__0_22519 -> bb126__0_22519 [label="unwind"];
    bb50__0_22519 -> bb51__0_22519 [label="return"];
    bb50__0_22519 -> bb126__0_22519 [label="unwind"];
    bb51__0_22519 -> bb107__0_22519 [label=""];
    bb52__0_22519 -> bb53__0_22519 [label="return"];
    bb52__0_22519 -> bb126__0_22519 [label="unwind"];
    bb53__0_22519 -> bb54__0_22519 [label="0"];
    bb53__0_22519 -> bb55__0_22519 [label="1"];
    bb53__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb54__0_22519 -> bb57__0_22519 [label="return"];
    bb54__0_22519 -> bb125__0_22519 [label="unwind"];
    bb55__0_22519 -> bb56__0_22519 [label="return"];
    bb55__0_22519 -> bb125__0_22519 [label="unwind"];
    bb56__0_22519 -> bb106__0_22519 [label=""];
    bb57__0_22519 -> bb58__0_22519 [label="return"];
    bb57__0_22519 -> bb125__0_22519 [label="unwind"];
    bb58__0_22519 -> bb59__0_22519 [label="0"];
    bb58__0_22519 -> bb60__0_22519 [label="1"];
    bb58__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb59__0_22519 -> bb62__0_22519 [label="return"];
    bb59__0_22519 -> bb124__0_22519 [label="unwind"];
    bb60__0_22519 -> bb61__0_22519 [label="return"];
    bb60__0_22519 -> bb124__0_22519 [label="unwind"];
    bb61__0_22519 -> bb105__0_22519 [label=""];
    bb62__0_22519 -> bb63__0_22519 [label="return"];
    bb62__0_22519 -> bb124__0_22519 [label="unwind"];
    bb63__0_22519 -> bb64__0_22519 [label="0"];
    bb63__0_22519 -> bb65__0_22519 [label="1"];
    bb63__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb64__0_22519 -> bb67__0_22519 [label="return"];
    bb64__0_22519 -> bb123__0_22519 [label="unwind"];
    bb65__0_22519 -> bb66__0_22519 [label="return"];
    bb65__0_22519 -> bb123__0_22519 [label="unwind"];
    bb66__0_22519 -> bb104__0_22519 [label=""];
    bb67__0_22519 -> bb68__0_22519 [label="return"];
    bb67__0_22519 -> bb123__0_22519 [label="unwind"];
    bb68__0_22519 -> bb69__0_22519 [label="0"];
    bb68__0_22519 -> bb70__0_22519 [label="1"];
    bb68__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb69__0_22519 -> bb72__0_22519 [label="return"];
    bb69__0_22519 -> bb122__0_22519 [label="unwind"];
    bb70__0_22519 -> bb71__0_22519 [label="return"];
    bb70__0_22519 -> bb122__0_22519 [label="unwind"];
    bb71__0_22519 -> bb103__0_22519 [label=""];
    bb72__0_22519 -> bb73__0_22519 [label="return"];
    bb72__0_22519 -> bb122__0_22519 [label="unwind"];
    bb73__0_22519 -> bb74__0_22519 [label="0"];
    bb73__0_22519 -> bb75__0_22519 [label="1"];
    bb73__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb74__0_22519 -> bb77__0_22519 [label="return"];
    bb74__0_22519 -> bb121__0_22519 [label="unwind"];
    bb75__0_22519 -> bb76__0_22519 [label="return"];
    bb75__0_22519 -> bb121__0_22519 [label="unwind"];
    bb76__0_22519 -> bb102__0_22519 [label=""];
    bb77__0_22519 -> bb78__0_22519 [label="return"];
    bb77__0_22519 -> bb121__0_22519 [label="unwind"];
    bb78__0_22519 -> bb79__0_22519 [label="0"];
    bb78__0_22519 -> bb80__0_22519 [label="1"];
    bb78__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb79__0_22519 -> bb82__0_22519 [label="return"];
    bb79__0_22519 -> bb120__0_22519 [label="unwind"];
    bb80__0_22519 -> bb81__0_22519 [label="return"];
    bb80__0_22519 -> bb120__0_22519 [label="unwind"];
    bb81__0_22519 -> bb101__0_22519 [label=""];
    bb82__0_22519 -> bb83__0_22519 [label="return"];
    bb82__0_22519 -> bb120__0_22519 [label="unwind"];
    bb83__0_22519 -> bb84__0_22519 [label="0"];
    bb83__0_22519 -> bb85__0_22519 [label="1"];
    bb83__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb84__0_22519 -> bb87__0_22519 [label="return"];
    bb84__0_22519 -> bb119__0_22519 [label="unwind"];
    bb85__0_22519 -> bb86__0_22519 [label="return"];
    bb85__0_22519 -> bb119__0_22519 [label="unwind"];
    bb86__0_22519 -> bb100__0_22519 [label=""];
    bb87__0_22519 -> bb88__0_22519 [label="return"];
    bb87__0_22519 -> bb119__0_22519 [label="unwind"];
    bb88__0_22519 -> bb89__0_22519 [label="0"];
    bb88__0_22519 -> bb90__0_22519 [label="1"];
    bb88__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb89__0_22519 -> bb92__0_22519 [label="return"];
    bb89__0_22519 -> bb118__0_22519 [label="unwind"];
    bb90__0_22519 -> bb91__0_22519 [label="return"];
    bb90__0_22519 -> bb118__0_22519 [label="unwind"];
    bb91__0_22519 -> bb99__0_22519 [label=""];
    bb92__0_22519 -> bb93__0_22519 [label="return"];
    bb92__0_22519 -> bb118__0_22519 [label="unwind"];
    bb93__0_22519 -> bb94__0_22519 [label="0"];
    bb93__0_22519 -> bb95__0_22519 [label="1"];
    bb93__0_22519 -> bb4__0_22519 [label="otherwise"];
    bb94__0_22519 -> bb97__0_22519 [label=""];
    bb95__0_22519 -> bb96__0_22519 [label="return"];
    bb95__0_22519 -> bb117__0_22519 [label="unwind"];
    bb96__0_22519 -> bb99__0_22519 [label=""];
    bb99__0_22519 -> bb100__0_22519 [label=""];
    bb100__0_22519 -> bb101__0_22519 [label=""];
    bb101__0_22519 -> bb102__0_22519 [label=""];
    bb102__0_22519 -> bb103__0_22519 [label=""];
    bb103__0_22519 -> bb104__0_22519 [label=""];
    bb104__0_22519 -> bb105__0_22519 [label=""];
    bb105__0_22519 -> bb106__0_22519 [label=""];
    bb106__0_22519 -> bb107__0_22519 [label=""];
    bb107__0_22519 -> bb108__0_22519 [label=""];
    bb108__0_22519 -> bb109__0_22519 [label=""];
    bb109__0_22519 -> bb110__0_22519 [label=""];
    bb110__0_22519 -> bb111__0_22519 [label=""];
    bb111__0_22519 -> bb112__0_22519 [label=""];
    bb112__0_22519 -> bb113__0_22519 [label=""];
    bb113__0_22519 -> bb114__0_22519 [label=""];
    bb114__0_22519 -> bb115__0_22519 [label=""];
    bb115__0_22519 -> bb116__0_22519 [label=""];
    bb116__0_22519 -> bb97__0_22519 [label=""];
    bb117__0_22519 -> bb118__0_22519 [label=""];
    bb118__0_22519 -> bb119__0_22519 [label=""];
    bb119__0_22519 -> bb120__0_22519 [label=""];
    bb120__0_22519 -> bb121__0_22519 [label=""];
    bb121__0_22519 -> bb122__0_22519 [label=""];
    bb122__0_22519 -> bb123__0_22519 [label=""];
    bb123__0_22519 -> bb124__0_22519 [label=""];
    bb124__0_22519 -> bb125__0_22519 [label=""];
    bb125__0_22519 -> bb126__0_22519 [label=""];
    bb126__0_22519 -> bb127__0_22519 [label=""];
    bb127__0_22519 -> bb128__0_22519 [label=""];
    bb128__0_22519 -> bb129__0_22519 [label=""];
    bb129__0_22519 -> bb130__0_22519 [label=""];
    bb130__0_22519 -> bb131__0_22519 [label=""];
    bb131__0_22519 -> bb132__0_22519 [label=""];
    bb132__0_22519 -> bb133__0_22519 [label=""];
    bb133__0_22519 -> bb134__0_22519 [label=""];
    bb134__0_22519 -> bb135__0_22519 [label=""];
    bb135__0_22519 -> bb98__0_22519 [label=""];
}
