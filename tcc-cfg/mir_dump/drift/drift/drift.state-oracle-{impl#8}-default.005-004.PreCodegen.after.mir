// MIR for `state::oracle::<impl at programs/drift/src/state/oracle.rs:25:10: 25:17>::default` after PreCodegen

fn state::oracle::<impl at programs/drift/src/state/oracle.rs:25:10: 25:17>::default() -> HistoricalOracleData {
    let mut _0: state::oracle::HistoricalOracleData;
    let mut _1: i64;
    let mut _2: u64;
    let mut _3: i64;
    let mut _4: i64;
    let mut _5: i64;
    let mut _6: i64;

    bb0: {
        StorageLive(_1);
        _1 = <i64 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <i64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <i64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <i64 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <i64 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        _0 = HistoricalOracleData { last_oracle_price: move _1, last_oracle_conf: move _2, last_oracle_delay: move _3, last_oracle_price_twap: move _4, last_oracle_price_twap_5min: move _5, last_oracle_price_twap_ts: move _6 };
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
