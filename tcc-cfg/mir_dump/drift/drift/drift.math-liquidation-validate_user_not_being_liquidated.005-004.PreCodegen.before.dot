digraph Mir_0_2387 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_user_not_being_liquidated(_1: &amp;ReErased mut state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _5: u32) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: &amp;ReErased state::user::User;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: ();<br align="left"/>let _11: bool;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _13: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased state::user::User;<br align="left"/>let mut _15: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _18: u32;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: bool;<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: error::ErrorCode;<br align="left"/>let mut _28: &amp;ReErased mut state::user::User;<br align="left"/>let mut _29: ();<br align="left"/>debug user =&gt; _1;<br align="left"/>debug market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _5;<br align="left"/>debug is_still_being_liquidated =&gt; _11;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>>;
    bb0__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/></td></tr><tr><td align="left">_7 = User::is_being_liquidated(move _8)</td></tr></table>>];
    bb1__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_6 = const ()<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/>StorageLive(_15)<br/>_15 = &amp;(*_2)<br/>StorageLive(_16)<br/>_16 = &amp;(*_3)<br/>StorageLive(_17)<br/>_17 = &amp;mut (*_4)<br/>StorageLive(_18)<br/>_18 = _5<br/></td></tr><tr><td align="left">_13 = is_user_being_liquidated(move _14, move _15, move _16, move _17, move _18)</td></tr></table>>];
    bb3__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_10)<br/>_10 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _10)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb5__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_19 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb6__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_12 as Continue).0: bool)<br/>_11 = _23<br/>StorageDead(_23)<br/>StorageDead(_12)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _11<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb7__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb9__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = error::ErrorCode::UserIsBeingLiquidated<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _27)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_24 = User::exit_liquidation(move _28)</td></tr></table>>];
    bb12__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>_29 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _29)<br/>StorageDead(_29)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2387 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2387 -> bb1__0_2387 [label="return"];
    bb1__0_2387 -> bb3__0_2387 [label="0"];
    bb1__0_2387 -> bb2__0_2387 [label="otherwise"];
    bb2__0_2387 -> bb4__0_2387 [label="return"];
    bb3__0_2387 -> bb14__0_2387 [label=""];
    bb4__0_2387 -> bb5__0_2387 [label="return"];
    bb5__0_2387 -> bb6__0_2387 [label="0"];
    bb5__0_2387 -> bb8__0_2387 [label="1"];
    bb5__0_2387 -> bb7__0_2387 [label="otherwise"];
    bb6__0_2387 -> bb11__0_2387 [label="0"];
    bb6__0_2387 -> bb10__0_2387 [label="otherwise"];
    bb8__0_2387 -> bb9__0_2387 [label="return"];
    bb9__0_2387 -> bb13__0_2387 [label=""];
    bb10__0_2387 -> bb13__0_2387 [label=""];
    bb11__0_2387 -> bb12__0_2387 [label="return"];
    bb12__0_2387 -> bb14__0_2387 [label=""];
    bb13__0_2387 -> bb14__0_2387 [label=""];
}
