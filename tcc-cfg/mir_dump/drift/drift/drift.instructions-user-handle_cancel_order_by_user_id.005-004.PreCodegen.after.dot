digraph Mir_0_11725 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_cancel_order_by_user_id(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::CancelOrder&lt;ReErased&gt;&gt;, _2: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _23: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _24: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _25: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _26: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _28: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _29: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _30: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _31: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _32: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _33: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _34: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _35: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _36: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _39: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _42: state::state::OracleGuardRails;<br align="left"/>let mut _43: &amp;ReErased state::state::State;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _52: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _53: u8;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _55: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _56: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _57: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _59: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: ();<br align="left"/>let mut _68: ();<br align="left"/>let mut _69: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _70: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _71: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _73: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _74: &amp;ReErased mut instructions::user::CancelOrder&lt;ReErased&gt;;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _92: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug user_order_id =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug state =&gt; _22;<br align="left"/>debug perp_market_map =&gt; _23;<br align="left"/>debug spot_market_map =&gt; _24;<br align="left"/>debug oracle_map =&gt; _25;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>>;
    bb0__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_69 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_7 = &amp;((*_69).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_70 = deref_copy (*_7)<br/>_91 = (((_70.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_91)<br/></td></tr><tr><td align="left">_5 = constraints::exchange_not_paused(move _6)</td></tr></table>>];
    bb1__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_75 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_85 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_13 = &amp;_14<br/>_77 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_71 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_22 = &amp;((*_71).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_72 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_33 = &amp;(*_72)<br/></td></tr><tr><td align="left">_32 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _33)</td></tr></table>>];
    bb10__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_83 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _32)</td></tr></table>>];
    bb13__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = &amp;mut _31<br/>_29 = &amp;mut (*_30)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/></td></tr><tr><td align="left">_36 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_35 = &amp;_36<br/>_34 = &amp;(*_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/></td></tr><tr><td align="left">_39 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb15__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>StorageLive(_40)<br/>_40 = ((*_13).0: u64)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_73 = deref_copy (*_22)<br/>_92 = (((_73.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_44 = &amp;(*_92)<br/></td></tr><tr><td align="left">_43 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb16__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = ((*_43).7: state::state::OracleGuardRails)<br/>_41 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_28 = load_maps(move _29, move _34, move _37, move _40, move _41)</td></tr></table>>];
    bb17__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb18__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_45 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb19__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_27 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_26 = move _49<br/>StorageDead(_49)<br/>StorageLive(_23)<br/>_23 = move (_26.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_24)<br/>_24 = move (_26.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_25)<br/>_25 = move (_26.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_81 = discriminant(_27)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb20__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb21__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_79 = discriminant(_27)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb22__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb23__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _2<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_74 = deref_copy (_1.1: &amp;mut instructions::user::CancelOrder&lt;'_&gt;)<br/>_55 = &amp;((*_74).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_54 = &amp;(*_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;_23<br/>_56 = &amp;(*_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_24<br/>_58 = &amp;(*_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;mut _25<br/>_60 = &amp;mut (*_61)<br/>StorageLive(_62)<br/>_62 = &amp;(*_13)<br/></td></tr><tr><td align="left">_52 = cancel_order_by_user_order_id(move _53, move _54, move _56, move _58, move _60, move _62)</td></tr></table>>];
    bb24__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb25__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_63 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb26__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_51 as Continue).0: ())<br/>_50 = _67<br/>StorageDead(_67)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_68)<br/>_68 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _68)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb27__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb28__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb29__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb30__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb31__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb33__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb34__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb36__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">return</td></tr></table>>];
    bb40__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb41__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb42__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb43__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb44__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb45__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb46__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb47__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_88 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_11725 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11725 -> bb1__0_11725 [label="return"];
    bb1__0_11725 -> bb2__0_11725 [label="return"];
    bb1__0_11725 -> bb46__0_11725 [label="unwind"];
    bb2__0_11725 -> bb3__0_11725 [label="0"];
    bb2__0_11725 -> bb5__0_11725 [label="1"];
    bb2__0_11725 -> bb4__0_11725 [label="otherwise"];
    bb3__0_11725 -> bb7__0_11725 [label="return"];
    bb5__0_11725 -> bb6__0_11725 [label="return"];
    bb5__0_11725 -> bb49__0_11725 [label="unwind"];
    bb6__0_11725 -> bb39__0_11725 [label=""];
    bb7__0_11725 -> bb8__0_11725 [label="return"];
    bb7__0_11725 -> bb46__0_11725 [label="unwind"];
    bb8__0_11725 -> bb9__0_11725 [label="0"];
    bb8__0_11725 -> bb10__0_11725 [label="1"];
    bb8__0_11725 -> bb4__0_11725 [label="otherwise"];
    bb9__0_11725 -> bb12__0_11725 [label="return"];
    bb10__0_11725 -> bb11__0_11725 [label="return"];
    bb10__0_11725 -> bb48__0_11725 [label="unwind"];
    bb11__0_11725 -> bb38__0_11725 [label=""];
    bb12__0_11725 -> bb13__0_11725 [label="return"];
    bb13__0_11725 -> bb14__0_11725 [label="return"];
    bb14__0_11725 -> bb15__0_11725 [label="return"];
    bb14__0_11725 -> bb45__0_11725 [label="unwind"];
    bb15__0_11725 -> bb16__0_11725 [label="return"];
    bb15__0_11725 -> bb44__0_11725 [label="unwind"];
    bb16__0_11725 -> bb17__0_11725 [label="return"];
    bb16__0_11725 -> bb44__0_11725 [label="unwind"];
    bb17__0_11725 -> bb18__0_11725 [label="return"];
    bb17__0_11725 -> bb44__0_11725 [label="unwind"];
    bb18__0_11725 -> bb19__0_11725 [label="0"];
    bb18__0_11725 -> bb20__0_11725 [label="1"];
    bb18__0_11725 -> bb4__0_11725 [label="otherwise"];
    bb19__0_11725 -> bb22__0_11725 [label="return"];
    bb19__0_11725 -> bb40__0_11725 [label="unwind"];
    bb20__0_11725 -> bb21__0_11725 [label="return"];
    bb20__0_11725 -> bb47__0_11725 [label="unwind"];
    bb21__0_11725 -> bb35__0_11725 [label="return"];
    bb21__0_11725 -> bb45__0_11725 [label="unwind"];
    bb22__0_11725 -> bb23__0_11725 [label="return"];
    bb22__0_11725 -> bb41__0_11725 [label="unwind"];
    bb23__0_11725 -> bb24__0_11725 [label="return"];
    bb23__0_11725 -> bb41__0_11725 [label="unwind"];
    bb24__0_11725 -> bb25__0_11725 [label="return"];
    bb24__0_11725 -> bb41__0_11725 [label="unwind"];
    bb25__0_11725 -> bb26__0_11725 [label="0"];
    bb25__0_11725 -> bb27__0_11725 [label="1"];
    bb25__0_11725 -> bb4__0_11725 [label="otherwise"];
    bb26__0_11725 -> bb29__0_11725 [label="return"];
    bb26__0_11725 -> bb42__0_11725 [label="unwind"];
    bb27__0_11725 -> bb28__0_11725 [label="return"];
    bb27__0_11725 -> bb41__0_11725 [label="unwind"];
    bb28__0_11725 -> bb32__0_11725 [label="return"];
    bb28__0_11725 -> bb42__0_11725 [label="unwind"];
    bb29__0_11725 -> bb30__0_11725 [label="return"];
    bb29__0_11725 -> bb43__0_11725 [label="unwind"];
    bb30__0_11725 -> bb31__0_11725 [label="return"];
    bb30__0_11725 -> bb46__0_11725 [label="unwind"];
    bb31__0_11725 -> bb39__0_11725 [label=""];
    bb32__0_11725 -> bb33__0_11725 [label="return"];
    bb32__0_11725 -> bb43__0_11725 [label="unwind"];
    bb33__0_11725 -> bb34__0_11725 [label="return"];
    bb33__0_11725 -> bb46__0_11725 [label="unwind"];
    bb34__0_11725 -> bb37__0_11725 [label=""];
    bb35__0_11725 -> bb36__0_11725 [label="return"];
    bb35__0_11725 -> bb46__0_11725 [label="unwind"];
    bb36__0_11725 -> bb37__0_11725 [label=""];
    bb37__0_11725 -> bb38__0_11725 [label=""];
    bb38__0_11725 -> bb39__0_11725 [label=""];
    bb40__0_11725 -> bb41__0_11725 [label="return"];
    bb41__0_11725 -> bb42__0_11725 [label="return"];
    bb42__0_11725 -> bb43__0_11725 [label="return"];
    bb43__0_11725 -> bb46__0_11725 [label="return"];
    bb44__0_11725 -> bb45__0_11725 [label="return"];
    bb45__0_11725 -> bb46__0_11725 [label="return"];
    bb47__0_11725 -> bb44__0_11725 [label=""];
    bb48__0_11725 -> bb46__0_11725 [label=""];
    bb49__0_11725 -> bb46__0_11725 [label=""];
}
