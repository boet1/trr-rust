digraph Mir_0_2881 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_order_action_record(_1: i64, _2: state::events::OrderAction, _3: state::events::OrderActionExplanation, _4: u16, _5: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, _6: std::option::Option&lt;u64&gt;, _7: std::option::Option&lt;u64&gt;, _8: std::option::Option&lt;u64&gt;, _9: std::option::Option&lt;u64&gt;, _10: std::option::Option&lt;u64&gt;, _11: std::option::Option&lt;u64&gt;, _12: std::option::Option&lt;u64&gt;, _13: std::option::Option&lt;i64&gt;, _14: std::option::Option&lt;u64&gt;, _15: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, _16: std::option::Option&lt;state::user::Order&gt;, _17: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, _18: std::option::Option&lt;state::user::Order&gt;, _19: i64, _20: u8, _21: std::option::Option&lt;u64&gt;, _22: std::option::Option&lt;u64&gt;, _23: std::option::Option&lt;u64&gt;, _24: std::option::Option&lt;u64&gt;, _25: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;state::events::OrderActionRecord, error::ErrorCode&gt;<br align="left"/>let mut _26: state::events::OrderActionRecord;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: state::events::OrderAction;<br align="left"/>let mut _29: state::events::OrderActionExplanation;<br align="left"/>let mut _30: u16;<br align="left"/>let mut _31: state::user::MarketType;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: state::user::Order;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: state::user::Order;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: error::ErrorCode;<br align="left"/>let mut _38: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _39: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _40: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _41: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _42: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _43: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _44: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: u64;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _50: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: i64;<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _61: u64;<br align="left"/>let _62: &amp;ReErased u64;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: u32;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _67: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u32;<br align="left"/>let mut _74: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _75: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _76: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _77: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _78: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _79: Closure(DefId(0:2882 ~ drift[d311]::state::events::get_order_action_record::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u32, []), ()]);<br align="left"/>let mut _80: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _81: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _82: Closure(DefId(0:2883 ~ drift[d311]::state::events::get_order_action_record::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; controller::position::PositionDirection, []), ()]);<br align="left"/>let mut _83: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _84: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _85: Closure(DefId(0:2884 ~ drift[d311]::state::events::get_order_action_record::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u64, []), ()]);<br align="left"/>let mut _86: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _87: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _88: Closure(DefId(0:2885 ~ drift[d311]::state::events::get_order_action_record::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u64, []), ()]);<br align="left"/>let mut _89: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _90: std::option::Option&lt;&amp;ReErased state::user::Order&gt;;<br align="left"/>let mut _91: &amp;ReErased std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _92: Closure(DefId(0:2886 ~ drift[d311]::state::events::get_order_action_record::{closure#4}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; u64, []), ()]);<br align="left"/>let mut _93: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _94: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _95: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _96: Closure(DefId(0:2887 ~ drift[d311]::state::events::get_order_action_record::{closure#5}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u32, []), ()]);<br align="left"/>let mut _97: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _98: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _99: Closure(DefId(0:2888 ~ drift[d311]::state::events::get_order_action_record::{closure#6}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; controller::position::PositionDirection, []), ()]);<br align="left"/>let mut _100: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _101: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _102: Closure(DefId(0:2889 ~ drift[d311]::state::events::get_order_action_record::{closure#7}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u64, []), ()]);<br align="left"/>let mut _103: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _104: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _105: Closure(DefId(0:2890 ~ drift[d311]::state::events::get_order_action_record::{closure#8}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u64, []), ()]);<br align="left"/>let mut _106: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _107: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _108: Closure(DefId(0:2891 ~ drift[d311]::state::events::get_order_action_record::{closure#9}), [i32, Binder(extern &quot;RustCall&quot; fn((state::user::Order,)) -&gt; u64, []), ()]);<br align="left"/>let mut _109: i64;<br align="left"/>let mut _110: u8;<br align="left"/>let mut _111: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _112: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _113: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _114: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _115: std::option::Option&lt;u64&gt;;<br align="left"/>debug ts =&gt; _1;<br align="left"/>debug action =&gt; _2;<br align="left"/>debug action_explanation =&gt; _3;<br align="left"/>debug market_index =&gt; _4;<br align="left"/>debug filler =&gt; _5;<br align="left"/>debug fill_record_id =&gt; _6;<br align="left"/>debug filler_reward =&gt; _7;<br align="left"/>debug base_asset_amount_filled =&gt; _8;<br align="left"/>debug quote_asset_amount_filled =&gt; _9;<br align="left"/>debug taker_fee =&gt; _10;<br align="left"/>debug maker_rebate =&gt; _11;<br align="left"/>debug referrer_reward =&gt; _12;<br align="left"/>debug quote_asset_amount_surplus =&gt; _13;<br align="left"/>debug spot_fulfillment_method_fee =&gt; _14;<br align="left"/>debug taker =&gt; _15;<br align="left"/>debug taker_order =&gt; _16;<br align="left"/>debug maker =&gt; _17;<br align="left"/>debug maker_order =&gt; _18;<br align="left"/>debug oracle_price =&gt; _19;<br align="left"/>debug bit_flags =&gt; _20;<br align="left"/>debug taker_existing_quote_entry_amount =&gt; _21;<br align="left"/>debug taker_existing_base_asset_amount =&gt; _22;<br align="left"/>debug maker_existing_quote_entry_amount =&gt; _23;<br align="left"/>debug maker_existing_base_asset_amount =&gt; _24;<br align="left"/>debug trigger_price =&gt; _25;<br align="left"/>debug taker_order =&gt; _33;<br align="left"/>debug maker_order =&gt; _35;<br align="left"/>debug maker_rebate =&gt; _46;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug referrer_reward =&gt; _61;<br align="left"/>debug referrer_reward =&gt; _62;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>>;
    bb0__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _1<br/>StorageLive(_28)<br/>_28 = _2<br/>StorageLive(_29)<br/>_29 = _3<br/>StorageLive(_30)<br/>_30 = _4<br/>StorageLive(_31)<br/>_32 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb1__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_16 as Some).0: state::user::Order)<br/>_31 = (_33.14: state::user::MarketType)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_34 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb3__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_18 as Some).0: state::user::Order)<br/>_31 = (_35.14: state::user::MarketType)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = error::ErrorCode::InvalidOrder<br/>_0 = std::result::Result::&lt;OrderActionRecord, error::ErrorCode&gt;::Err(move _37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = _5<br/>StorageLive(_39)<br/>_39 = _7<br/>StorageLive(_40)<br/>_40 = _6<br/>StorageLive(_41)<br/>_41 = _8<br/>StorageLive(_42)<br/>_42 = _9<br/>StorageLive(_43)<br/>_43 = _10<br/>StorageLive(_44)<br/>_45 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb6__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_44 = Option::&lt;i64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_11 as Some).0: u64)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _46<br/></td></tr><tr><td align="left">_50 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _51)</td></tr></table>>];
    bb9__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb10__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb11__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_49 as Continue).0: i64)<br/>_48 = _56<br/>StorageDead(_56)<br/>_57 = Eq(_48, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _57, &quot;attempt to negate `{}`, which would overflow&quot;, _48)</td></tr></table>>];
    bb12__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderActionRecord, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb13__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_47 = Neg(move _48)<br/>StorageDead(_48)<br/>_44 = Option::&lt;i64&gt;::Some(move _47)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_59 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb16__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_58 = Option::&lt;u32&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = &amp;((_12 as Some).0: u64)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = (*_62)<br/>_63 = Gt(move _64, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb18__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_61)<br/>_61 = ((_12 as Some).0: u64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _61<br/></td></tr><tr><td align="left">_67 = &lt;u64 as Cast&gt;::cast::&lt;u32&gt;(move _68)</td></tr></table>>];
    bb19__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb21__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_69 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb22__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_66 as Continue).0: u32)<br/>_65 = _73<br/>StorageDead(_73)<br/>_58 = Option::&lt;u32&gt;::Some(move _65)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderActionRecord, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb24__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = _13<br/>StorageLive(_75)<br/>_75 = _14<br/>StorageLive(_76)<br/>_76 = _15<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _16<br/>StorageLive(_79)<br/>_79 = {closure@programs/drift/src/state/events.rs:321:41: 321:48}<br/></td></tr><tr><td align="left">_77 = Option::&lt;Order&gt;::map::&lt;u32, {closure@programs/drift/src/state/events.rs:321:41: 321:48}&gt;(move _78, move _79)</td></tr></table>>];
    bb26__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _16<br/>StorageLive(_82)<br/>_82 = {closure@programs/drift/src/state/events.rs:322:48: 322:55}<br/></td></tr><tr><td align="left">_80 = Option::&lt;Order&gt;::map::&lt;controller::position::PositionDirection, {closure@programs/drift/src/state/events.rs:322:48: 322:55}&gt;(move _81, move _82)</td></tr></table>>];
    bb27__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = _16<br/>StorageLive(_85)<br/>_85 = {closure@programs/drift/src/state/events.rs:323:56: 323:63}<br/></td></tr><tr><td align="left">_83 = Option::&lt;Order&gt;::map::&lt;u64, {closure@programs/drift/src/state/events.rs:323:56: 323:63}&gt;(move _84, move _85)</td></tr></table>>];
    bb28__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _16<br/>StorageLive(_88)<br/>_88 = {closure@programs/drift/src/state/events.rs:325:18: 325:25}<br/></td></tr><tr><td align="left">_86 = Option::&lt;Order&gt;::map::&lt;u64, {closure@programs/drift/src/state/events.rs:325:18: 325:25}&gt;(move _87, move _88)</td></tr></table>>];
    bb29__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_16<br/></td></tr><tr><td align="left">_90 = Option::&lt;Order&gt;::as_ref(move _91)</td></tr></table>>];
    bb30__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageLive(_92)<br/>_92 = {closure@programs/drift/src/state/events.rs:328:18: 328:25}<br/></td></tr><tr><td align="left">_89 = Option::&lt;&amp;Order&gt;::map::&lt;u64, {closure@programs/drift/src/state/events.rs:328:18: 328:25}&gt;(move _90, move _92)</td></tr></table>>];
    bb31__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>_93 = _17<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = _18<br/>StorageLive(_96)<br/>_96 = {closure@programs/drift/src/state/events.rs:330:41: 330:48}<br/></td></tr><tr><td align="left">_94 = Option::&lt;Order&gt;::map::&lt;u32, {closure@programs/drift/src/state/events.rs:330:41: 330:48}&gt;(move _95, move _96)</td></tr></table>>];
    bb32__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = _18<br/>StorageLive(_99)<br/>_99 = {closure@programs/drift/src/state/events.rs:331:48: 331:55}<br/></td></tr><tr><td align="left">_97 = Option::&lt;Order&gt;::map::&lt;controller::position::PositionDirection, {closure@programs/drift/src/state/events.rs:331:48: 331:55}&gt;(move _98, move _99)</td></tr></table>>];
    bb33__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _18<br/>StorageLive(_102)<br/>_102 = {closure@programs/drift/src/state/events.rs:332:56: 332:63}<br/></td></tr><tr><td align="left">_100 = Option::&lt;Order&gt;::map::&lt;u64, {closure@programs/drift/src/state/events.rs:332:56: 332:63}&gt;(move _101, move _102)</td></tr></table>>];
    bb34__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = _18<br/>StorageLive(_105)<br/>_105 = {closure@programs/drift/src/state/events.rs:334:18: 334:25}<br/></td></tr><tr><td align="left">_103 = Option::&lt;Order&gt;::map::&lt;u64, {closure@programs/drift/src/state/events.rs:334:18: 334:25}&gt;(move _104, move _105)</td></tr></table>>];
    bb35__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = _18<br/>StorageLive(_108)<br/>_108 = {closure@programs/drift/src/state/events.rs:336:18: 336:25}<br/></td></tr><tr><td align="left">_106 = Option::&lt;Order&gt;::map::&lt;u64, {closure@programs/drift/src/state/events.rs:336:18: 336:25}&gt;(move _107, move _108)</td></tr></table>>];
    bb36__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/>StorageLive(_109)<br/>_109 = _19<br/>StorageLive(_110)<br/>_110 = _20<br/>StorageLive(_111)<br/>_111 = _21<br/>StorageLive(_112)<br/>_112 = _22<br/>StorageLive(_113)<br/>_113 = _23<br/>StorageLive(_114)<br/>_114 = _24<br/>StorageLive(_115)<br/>_115 = _25<br/>_26 = OrderActionRecord { ts: move _27, action: move _28, action_explanation: move _29, market_index: move _30, market_type: move _31, filler: move _38, filler_reward: move _39, fill_record_id: move _40, base_asset_amount_filled: move _41, quote_asset_amount_filled: move _42, taker_fee: move _43, maker_fee: move _44, referrer_reward: move _58, quote_asset_amount_surplus: move _74, spot_fulfillment_method_fee: move _75, taker: move _76, taker_order_id: move _77, taker_order_direction: move _80, taker_order_base_asset_amount: move _83, taker_order_cumulative_base_asset_amount_filled: move _86, taker_order_cumulative_quote_asset_amount_filled: move _89, maker: move _93, maker_order_id: move _94, maker_order_direction: move _97, maker_order_base_asset_amount: move _100, maker_order_cumulative_base_asset_amount_filled: move _103, maker_order_cumulative_quote_asset_amount_filled: move _106, oracle_price: move _109, bit_flags: move _110, taker_existing_quote_entry_amount: move _111, taker_existing_base_asset_amount: move _112, maker_existing_quote_entry_amount: move _113, maker_existing_base_asset_amount: move _114, trigger_price: move _115 }<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_58)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>_0 = std::result::Result::&lt;OrderActionRecord, error::ErrorCode&gt;::Ok(move _26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2881 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2881 -> bb1__0_2881 [label="1"];
    bb0__0_2881 -> bb2__0_2881 [label="otherwise"];
    bb1__0_2881 -> bb5__0_2881 [label=""];
    bb2__0_2881 -> bb3__0_2881 [label="1"];
    bb2__0_2881 -> bb4__0_2881 [label="otherwise"];
    bb3__0_2881 -> bb5__0_2881 [label=""];
    bb4__0_2881 -> bb38__0_2881 [label=""];
    bb5__0_2881 -> bb6__0_2881 [label="0"];
    bb5__0_2881 -> bb8__0_2881 [label="1"];
    bb5__0_2881 -> bb7__0_2881 [label="otherwise"];
    bb6__0_2881 -> bb15__0_2881 [label=""];
    bb8__0_2881 -> bb9__0_2881 [label="return"];
    bb9__0_2881 -> bb10__0_2881 [label="return"];
    bb10__0_2881 -> bb11__0_2881 [label="0"];
    bb10__0_2881 -> bb12__0_2881 [label="1"];
    bb10__0_2881 -> bb7__0_2881 [label="otherwise"];
    bb11__0_2881 -> bb14__0_2881 [label="success"];
    bb12__0_2881 -> bb13__0_2881 [label="return"];
    bb13__0_2881 -> bb37__0_2881 [label=""];
    bb14__0_2881 -> bb15__0_2881 [label=""];
    bb15__0_2881 -> bb17__0_2881 [label="1"];
    bb15__0_2881 -> bb16__0_2881 [label="otherwise"];
    bb16__0_2881 -> bb25__0_2881 [label=""];
    bb17__0_2881 -> bb19__0_2881 [label="0"];
    bb17__0_2881 -> bb18__0_2881 [label="otherwise"];
    bb18__0_2881 -> bb20__0_2881 [label="return"];
    bb19__0_2881 -> bb16__0_2881 [label=""];
    bb20__0_2881 -> bb21__0_2881 [label="return"];
    bb21__0_2881 -> bb22__0_2881 [label="0"];
    bb21__0_2881 -> bb23__0_2881 [label="1"];
    bb21__0_2881 -> bb7__0_2881 [label="otherwise"];
    bb22__0_2881 -> bb25__0_2881 [label=""];
    bb23__0_2881 -> bb24__0_2881 [label="return"];
    bb24__0_2881 -> bb37__0_2881 [label=""];
    bb25__0_2881 -> bb26__0_2881 [label="return"];
    bb26__0_2881 -> bb27__0_2881 [label="return"];
    bb27__0_2881 -> bb28__0_2881 [label="return"];
    bb28__0_2881 -> bb29__0_2881 [label="return"];
    bb29__0_2881 -> bb30__0_2881 [label="return"];
    bb30__0_2881 -> bb31__0_2881 [label="return"];
    bb31__0_2881 -> bb32__0_2881 [label="return"];
    bb32__0_2881 -> bb33__0_2881 [label="return"];
    bb33__0_2881 -> bb34__0_2881 [label="return"];
    bb34__0_2881 -> bb35__0_2881 [label="return"];
    bb35__0_2881 -> bb36__0_2881 [label="return"];
    bb36__0_2881 -> bb39__0_2881 [label=""];
    bb37__0_2881 -> bb38__0_2881 [label=""];
    bb38__0_2881 -> bb39__0_2881 [label=""];
}
