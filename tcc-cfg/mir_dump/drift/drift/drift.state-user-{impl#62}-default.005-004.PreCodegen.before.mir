// MIR for `state::user::<impl at programs/drift/src/state/user.rs:735:23: 735:30>::default` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:735:23: 735:30>::default() -> OrderFillSimulation {
    let mut _0: state::user::OrderFillSimulation;
    let mut _1: i128;
    let mut _2: i128;
    let mut _3: i128;
    let mut _4: i128;
    let mut _5: i128;

    bb0: {
        StorageLive(_1);
        _1 = <i128 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <i128 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <i128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <i128 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <i128 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        _0 = OrderFillSimulation { token_amount: move _1, orders_value: move _2, token_value: move _3, weighted_token_value: move _4, free_collateral_contribution: move _5 };
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
