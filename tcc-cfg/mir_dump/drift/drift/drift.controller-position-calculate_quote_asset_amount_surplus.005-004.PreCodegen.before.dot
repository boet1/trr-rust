digraph Mir_0_687 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::position::calculate_quote_asset_amount_surplus(_1: controller::position::PositionDirection, _2: u64, _3: u64, _4: u64) -&gt; std::result::Result&lt;(u64, i64), error::ErrorCode&gt;<br align="left"/>let _5: u64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: controller::position::PositionDirection;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u64;<br align="left"/>let _16: i64;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _19: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: i64;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: i64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i64;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _44: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _45: i64;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _47: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: i64;<br align="left"/>let mut _54: i64;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _56: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _57: u64;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: i64;<br align="left"/>let mut _68: (u64, i64);<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: i64;<br align="left"/>debug position_direction =&gt; _1;<br align="left"/>debug quote_asset_swapped =&gt; _2;<br align="left"/>debug base_asset_amount =&gt; _3;<br align="left"/>debug fill_price =&gt; _4;<br align="left"/>debug quote_asset_amount =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug quote_asset_amount_surplus =&gt; _16;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>>;
    bb0__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _3<br/>StorageLive(_9)<br/>_9 = _4<br/>StorageLive(_10)<br/>_10 = _1<br/></td></tr><tr><td align="left">_7 = calculate_quote_asset_amount_for_maker_order(move _8, move _9, const _, move _10)</td></tr></table>>];
    bb1__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_6 as Continue).0: u64)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>_17 = discriminant(_1)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb4__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _2<br/></td></tr><tr><td align="left">_47 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _48)</td></tr></table>>];
    bb8__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _5<br/></td></tr><tr><td align="left">_22 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _23)</td></tr></table>>];
    bb9__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_24 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_21 as Continue).0: i64)<br/>_20 = _28<br/>StorageDead(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _2<br/></td></tr><tr><td align="left">_31 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _32)</td></tr></table>>];
    bb12__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb15__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_33 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb16__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_30 as Continue).0: i64)<br/>_29 = _37<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_19 = &lt;i64 as SafeMath&gt;::safe_sub(move _20, move _29)</td></tr></table>>];
    bb17__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb18__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb20__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_38 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_18 as Continue).0: i64)<br/>_16 = _42<br/>StorageDead(_42)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb23__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb25__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_49 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb26__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_46 as Continue).0: i64)<br/>_45 = _53<br/>StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _5<br/></td></tr><tr><td align="left">_56 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _57)</td></tr></table>>];
    bb27__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb28__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb30__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_58 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb31__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_55 as Continue).0: i64)<br/>_54 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_44 = &lt;i64 as SafeMath&gt;::safe_sub(move _45, move _54)</td></tr></table>>];
    bb32__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb33__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb35__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_63 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb36__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_43 as Continue).0: i64)<br/>_16 = _67<br/>StorageDead(_67)<br/>StorageDead(_55)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, i64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb38__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _5<br/>StorageLive(_70)<br/>_70 = _16<br/>_68 = (move _69, move _70)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>_0 = std::result::Result::&lt;(u64, i64), error::ErrorCode&gt;::Ok(move _68)<br/>StorageDead(_68)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_687 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_687 -> bb1__0_687 [label="return"];
    bb1__0_687 -> bb2__0_687 [label="return"];
    bb2__0_687 -> bb3__0_687 [label="0"];
    bb2__0_687 -> bb5__0_687 [label="1"];
    bb2__0_687 -> bb4__0_687 [label="otherwise"];
    bb3__0_687 -> bb8__0_687 [label="0"];
    bb3__0_687 -> bb7__0_687 [label="1"];
    bb3__0_687 -> bb4__0_687 [label="otherwise"];
    bb5__0_687 -> bb6__0_687 [label="return"];
    bb6__0_687 -> bb45__0_687 [label=""];
    bb7__0_687 -> bb24__0_687 [label="return"];
    bb8__0_687 -> bb9__0_687 [label="return"];
    bb9__0_687 -> bb10__0_687 [label="return"];
    bb10__0_687 -> bb11__0_687 [label="0"];
    bb10__0_687 -> bb12__0_687 [label="1"];
    bb10__0_687 -> bb4__0_687 [label="otherwise"];
    bb11__0_687 -> bb14__0_687 [label="return"];
    bb12__0_687 -> bb13__0_687 [label="return"];
    bb13__0_687 -> bb43__0_687 [label=""];
    bb14__0_687 -> bb15__0_687 [label="return"];
    bb15__0_687 -> bb16__0_687 [label="0"];
    bb15__0_687 -> bb17__0_687 [label="1"];
    bb15__0_687 -> bb4__0_687 [label="otherwise"];
    bb16__0_687 -> bb19__0_687 [label="return"];
    bb17__0_687 -> bb18__0_687 [label="return"];
    bb18__0_687 -> bb42__0_687 [label=""];
    bb19__0_687 -> bb20__0_687 [label="return"];
    bb20__0_687 -> bb21__0_687 [label="0"];
    bb20__0_687 -> bb22__0_687 [label="1"];
    bb20__0_687 -> bb4__0_687 [label="otherwise"];
    bb21__0_687 -> bb39__0_687 [label=""];
    bb22__0_687 -> bb23__0_687 [label="return"];
    bb23__0_687 -> bb42__0_687 [label=""];
    bb24__0_687 -> bb25__0_687 [label="return"];
    bb25__0_687 -> bb26__0_687 [label="0"];
    bb25__0_687 -> bb27__0_687 [label="1"];
    bb25__0_687 -> bb4__0_687 [label="otherwise"];
    bb26__0_687 -> bb29__0_687 [label="return"];
    bb27__0_687 -> bb28__0_687 [label="return"];
    bb28__0_687 -> bb41__0_687 [label=""];
    bb29__0_687 -> bb30__0_687 [label="return"];
    bb30__0_687 -> bb31__0_687 [label="0"];
    bb30__0_687 -> bb32__0_687 [label="1"];
    bb30__0_687 -> bb4__0_687 [label="otherwise"];
    bb31__0_687 -> bb34__0_687 [label="return"];
    bb32__0_687 -> bb33__0_687 [label="return"];
    bb33__0_687 -> bb40__0_687 [label=""];
    bb34__0_687 -> bb35__0_687 [label="return"];
    bb35__0_687 -> bb36__0_687 [label="0"];
    bb35__0_687 -> bb37__0_687 [label="1"];
    bb35__0_687 -> bb4__0_687 [label="otherwise"];
    bb36__0_687 -> bb39__0_687 [label=""];
    bb37__0_687 -> bb38__0_687 [label="return"];
    bb38__0_687 -> bb40__0_687 [label=""];
    bb39__0_687 -> bb46__0_687 [label=""];
    bb40__0_687 -> bb41__0_687 [label=""];
    bb41__0_687 -> bb44__0_687 [label=""];
    bb42__0_687 -> bb43__0_687 [label=""];
    bb43__0_687 -> bb44__0_687 [label=""];
    bb44__0_687 -> bb45__0_687 [label=""];
    bb45__0_687 -> bb46__0_687 [label=""];
}
