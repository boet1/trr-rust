digraph Mir_0_8605 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;if_staker::__client_accounts_initialize_insurance_fund_stake::InitializeInsuranceFundStake as BorshSerialize&gt;::serialize(_1: &amp;ReErased instructions::if_staker::__client_accounts_initialize_insurance_fund_stake::InitializeInsuranceFundStake, _2: &amp;ReErased mut W/#0) -&gt; std::result::Result&lt;(), std::io::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: &amp;ReErased mut W/#0;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _16: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased mut W/#0;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _24: ();<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _27: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _30: &amp;ReErased mut W/#0;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _35: ();<br align="left"/>let _36: ();<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _38: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut W/#0;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _46: ();<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _50: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _51: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _52: &amp;ReErased mut W/#0;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _57: ();<br align="left"/>let _58: ();<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _60: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _62: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _63: &amp;ReErased mut W/#0;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _68: ();<br align="left"/>let _69: ();<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _71: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _72: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _73: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _74: &amp;ReErased mut W/#0;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _79: ();<br align="left"/>let _80: ();<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _82: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _83: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased mut W/#0;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _90: ();<br align="left"/>let mut _91: ();<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug writer =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>>;
    bb0__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/>_6 = &amp;(*_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _6, move _8)</td></tr></table>>];
    bb1__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_4 as Continue).0: ())<br/>_3 = _13<br/>StorageDead(_13)<br/>_92 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_1).1: anchor_lang::prelude::Pubkey)<br/>_17 = &amp;(*_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _17, move _19)</td></tr></table>>];
    bb4__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_122 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_15 as Continue).0: ())<br/>_14 = _24<br/>StorageDead(_24)<br/>_94 = discriminant(_15)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;((*_1).2: anchor_lang::prelude::Pubkey)<br/>_28 = &amp;(*_29)<br/>StorageLive(_30)<br/>_30 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_27 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _28, move _30)</td></tr></table>>];
    bb10__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb11__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_120 = discriminant(_15)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb13__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_26 as Continue).0: ())<br/>_25 = _35<br/>StorageDead(_35)<br/>_96 = discriminant(_26)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;((*_1).3: anchor_lang::prelude::Pubkey)<br/>_39 = &amp;(*_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _39, move _41)</td></tr></table>>];
    bb15__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_118 = discriminant(_26)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb18__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb19__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_37 as Continue).0: ())<br/>_36 = _46<br/>StorageDead(_46)<br/>_98 = discriminant(_37)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;((*_1).4: anchor_lang::prelude::Pubkey)<br/>_50 = &amp;(*_51)<br/>StorageLive(_52)<br/>_52 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_49 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _50, move _52)</td></tr></table>>];
    bb20__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb21__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_116 = discriminant(_37)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb23__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb24__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_48 as Continue).0: ())<br/>_47 = _57<br/>StorageDead(_57)<br/>_100 = discriminant(_48)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;((*_1).5: anchor_lang::prelude::Pubkey)<br/>_61 = &amp;(*_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_60 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _61, move _63)</td></tr></table>>];
    bb25__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_56)<br/>_56 = move _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb26__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_114 = discriminant(_48)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb28__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_64 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb29__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_59 as Continue).0: ())<br/>_58 = _68<br/>StorageDead(_68)<br/>_102 = discriminant(_59)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;((*_1).6: anchor_lang::prelude::Pubkey)<br/>_72 = &amp;(*_73)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_71 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _72, move _74)</td></tr></table>>];
    bb30__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_67)<br/>_67 = move _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb31__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>_112 = discriminant(_59)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb33__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_75 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb34__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_70 as Continue).0: ())<br/>_69 = _79<br/>StorageDead(_79)<br/>_104 = discriminant(_70)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;((*_1).7: anchor_lang::prelude::Pubkey)<br/>_83 = &amp;(*_84)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_82 = &lt;anchor_lang::prelude::Pubkey as BorshSerialize&gt;::serialize::&lt;W&gt;(move _83, move _85)</td></tr></table>>];
    bb35__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb36__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_110 = discriminant(_70)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb38__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_86 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb39__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_81 as Continue).0: ())<br/>_80 = _90<br/>StorageDead(_90)<br/>_106 = discriminant(_81)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_91)<br/>_91 = ()<br/>_0 = std::result::Result::&lt;(), std::io::Error&gt;::Ok(move _91)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_89)<br/>_89 = move _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb41__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>_108 = discriminant(_81)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb43__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb44__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left" balign="left">_124 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left" balign="left">_125 = discriminant(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left" balign="left">_126 = discriminant(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_127 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_128 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_129 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_130 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_8605 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left" balign="left">_131 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_8605 -> bb1__0_8605 [label="return"];
    bb1__0_8605 -> bb2__0_8605 [label="return"];
    bb1__0_8605 -> bb43__0_8605 [label="unwind"];
    bb2__0_8605 -> bb3__0_8605 [label="0"];
    bb2__0_8605 -> bb5__0_8605 [label="1"];
    bb2__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb3__0_8605 -> bb7__0_8605 [label="return"];
    bb5__0_8605 -> bb6__0_8605 [label="return"];
    bb5__0_8605 -> bb51__0_8605 [label="unwind"];
    bb6__0_8605 -> bb42__0_8605 [label=""];
    bb7__0_8605 -> bb8__0_8605 [label="return"];
    bb7__0_8605 -> bb43__0_8605 [label="unwind"];
    bb8__0_8605 -> bb9__0_8605 [label="0"];
    bb8__0_8605 -> bb10__0_8605 [label="1"];
    bb8__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb9__0_8605 -> bb12__0_8605 [label="return"];
    bb10__0_8605 -> bb11__0_8605 [label="return"];
    bb10__0_8605 -> bb50__0_8605 [label="unwind"];
    bb11__0_8605 -> bb42__0_8605 [label=""];
    bb12__0_8605 -> bb13__0_8605 [label="return"];
    bb12__0_8605 -> bb43__0_8605 [label="unwind"];
    bb13__0_8605 -> bb14__0_8605 [label="0"];
    bb13__0_8605 -> bb15__0_8605 [label="1"];
    bb13__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb14__0_8605 -> bb17__0_8605 [label="return"];
    bb15__0_8605 -> bb16__0_8605 [label="return"];
    bb15__0_8605 -> bb49__0_8605 [label="unwind"];
    bb16__0_8605 -> bb42__0_8605 [label=""];
    bb17__0_8605 -> bb18__0_8605 [label="return"];
    bb17__0_8605 -> bb43__0_8605 [label="unwind"];
    bb18__0_8605 -> bb19__0_8605 [label="0"];
    bb18__0_8605 -> bb20__0_8605 [label="1"];
    bb18__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb19__0_8605 -> bb22__0_8605 [label="return"];
    bb20__0_8605 -> bb21__0_8605 [label="return"];
    bb20__0_8605 -> bb48__0_8605 [label="unwind"];
    bb21__0_8605 -> bb42__0_8605 [label=""];
    bb22__0_8605 -> bb23__0_8605 [label="return"];
    bb22__0_8605 -> bb43__0_8605 [label="unwind"];
    bb23__0_8605 -> bb24__0_8605 [label="0"];
    bb23__0_8605 -> bb25__0_8605 [label="1"];
    bb23__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb24__0_8605 -> bb27__0_8605 [label="return"];
    bb25__0_8605 -> bb26__0_8605 [label="return"];
    bb25__0_8605 -> bb47__0_8605 [label="unwind"];
    bb26__0_8605 -> bb42__0_8605 [label=""];
    bb27__0_8605 -> bb28__0_8605 [label="return"];
    bb27__0_8605 -> bb43__0_8605 [label="unwind"];
    bb28__0_8605 -> bb29__0_8605 [label="0"];
    bb28__0_8605 -> bb30__0_8605 [label="1"];
    bb28__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb29__0_8605 -> bb32__0_8605 [label="return"];
    bb30__0_8605 -> bb31__0_8605 [label="return"];
    bb30__0_8605 -> bb46__0_8605 [label="unwind"];
    bb31__0_8605 -> bb42__0_8605 [label=""];
    bb32__0_8605 -> bb33__0_8605 [label="return"];
    bb32__0_8605 -> bb43__0_8605 [label="unwind"];
    bb33__0_8605 -> bb34__0_8605 [label="0"];
    bb33__0_8605 -> bb35__0_8605 [label="1"];
    bb33__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb34__0_8605 -> bb37__0_8605 [label="return"];
    bb35__0_8605 -> bb36__0_8605 [label="return"];
    bb35__0_8605 -> bb45__0_8605 [label="unwind"];
    bb36__0_8605 -> bb42__0_8605 [label=""];
    bb37__0_8605 -> bb38__0_8605 [label="return"];
    bb37__0_8605 -> bb43__0_8605 [label="unwind"];
    bb38__0_8605 -> bb39__0_8605 [label="0"];
    bb38__0_8605 -> bb40__0_8605 [label="1"];
    bb38__0_8605 -> bb4__0_8605 [label="otherwise"];
    bb39__0_8605 -> bb42__0_8605 [label=""];
    bb40__0_8605 -> bb41__0_8605 [label="return"];
    bb40__0_8605 -> bb44__0_8605 [label="unwind"];
    bb41__0_8605 -> bb42__0_8605 [label=""];
    bb44__0_8605 -> bb43__0_8605 [label=""];
    bb45__0_8605 -> bb43__0_8605 [label=""];
    bb46__0_8605 -> bb43__0_8605 [label=""];
    bb47__0_8605 -> bb43__0_8605 [label=""];
    bb48__0_8605 -> bb43__0_8605 [label=""];
    bb49__0_8605 -> bb43__0_8605 [label=""];
    bb50__0_8605 -> bb43__0_8605 [label=""];
    bb51__0_8605 -> bb43__0_8605 [label=""];
}
