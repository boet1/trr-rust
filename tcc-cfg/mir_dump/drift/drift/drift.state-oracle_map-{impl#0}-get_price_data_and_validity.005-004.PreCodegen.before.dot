digraph Mir_0_3599 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OracleMap::&lt;'a&gt;::get_price_data_and_validity(_1: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _2: state::user::MarketType, _3: u16, _4: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource), _5: i64, _6: u64, _7: i8) -&gt; std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity), error::ErrorCode&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _12: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _15: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _16: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _17: math::oracle::OracleValidity;<br align="left"/>let _18: ();<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _21: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _22: !;<br align="left"/>let _23: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _25: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _26: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _27: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _28: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _34: math::oracle::OracleValidity;<br align="left"/>let mut _35: std::option::Option&lt;&amp;ReErased math::oracle::OracleValidity&gt;;<br align="left"/>let mut _36: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity, std::alloc::Global&gt;;<br align="left"/>let mut _37: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _38: isize;<br align="left"/>let _39: &amp;ReErased math::oracle::OracleValidity;<br align="left"/>let _40: math::oracle::OracleValidity;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::oracle::OracleValidity&gt;;<br align="left"/>let mut _42: std::result::Result&lt;math::oracle::OracleValidity, error::ErrorCode&gt;;<br align="left"/>let mut _43: state::user::MarketType;<br align="left"/>let mut _44: u16;<br align="left"/>let mut _45: i64;<br align="left"/>let mut _46: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _47: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _48: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _51: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _52: math::oracle::LogMode;<br align="left"/>let mut _53: i8;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: math::oracle::OracleValidity;<br align="left"/>let _59: std::option::Option&lt;math::oracle::OracleValidity&gt;;<br align="left"/>let mut _60: &amp;ReErased mut std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity, std::alloc::Global&gt;;<br align="left"/>let mut _61: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _62: math::oracle::OracleValidity;<br align="left"/>let mut _63: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _64: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _65: math::oracle::OracleValidity;<br align="left"/>let _66: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _67: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _68: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let _74: ();<br align="left"/>let mut _75: &amp;ReErased str;<br align="left"/>let _76: &amp;ReErased str;<br align="left"/>let mut _77: &amp;ReErased std::string::String;<br align="left"/>let _78: &amp;ReErased std::string::String;<br align="left"/>let _79: std::string::String;<br align="left"/>let _80: std::string::String;<br align="left"/>let mut _81: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _84: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _85: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _89: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _90: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _92: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _93: error::ErrorCode;<br align="left"/>let _94: state::oracle::OraclePriceData;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _96: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _97: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _98: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: state::oracle::OraclePriceData;<br align="left"/>let _106: std::option::Option&lt;state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _107: &amp;ReErased mut std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _108: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _109: state::oracle::OraclePriceData;<br align="left"/>let _110: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _112: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _113: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _114: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _115: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _121: math::oracle::OracleValidity;<br align="left"/>let mut _122: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::oracle::OracleValidity&gt;;<br align="left"/>let mut _123: std::result::Result&lt;math::oracle::OracleValidity, error::ErrorCode&gt;;<br align="left"/>let mut _124: state::user::MarketType;<br align="left"/>let mut _125: u16;<br align="left"/>let mut _126: i64;<br align="left"/>let mut _127: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _128: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _129: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _130: u64;<br align="left"/>let mut _131: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _132: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _133: math::oracle::LogMode;<br align="left"/>let mut _134: i8;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: math::oracle::OracleValidity;<br align="left"/>let _140: std::option::Option&lt;math::oracle::OracleValidity&gt;;<br align="left"/>let mut _141: &amp;ReErased mut std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity, std::alloc::Global&gt;;<br align="left"/>let mut _142: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _143: math::oracle::OracleValidity;<br align="left"/>let mut _144: (&amp;ReErased state::oracle::OraclePriceData, math::oracle::OracleValidity);<br align="left"/>let mut _145: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _146: math::oracle::OracleValidity;<br align="left"/>let mut _147: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market_type =&gt; _2;<br align="left"/>debug market_index =&gt; _3;<br align="left"/>debug oracle_id =&gt; _4;<br align="left"/>debug last_oracle_price_twap =&gt; _5;<br align="left"/>debug max_confidence_interval_multiplier =&gt; _6;<br align="left"/>debug slots_before_stale_for_amm_override =&gt; _7;<br align="left"/>debug oracle_price_data =&gt; _23;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug oracle_validity =&gt; _34;<br align="left"/>debug oracle_validity =&gt; _39;<br align="left"/>debug oracle_validity =&gt; _40;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug account_info =&gt; _66;<br align="left"/>debug account_info =&gt; _72;<br align="left"/>debug res =&gt; _80;<br align="left"/>debug price_data =&gt; _94;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug oracle_price_data =&gt; _110;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug oracle_validity =&gt; _121;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>>;
    bb0__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;((*_4).0: anchor_lang::prelude::Pubkey)<br/>_11 = &amp;(*_12)<br/></td></tr><tr><td align="left">_9 = OracleMap::&lt;'_&gt;::should_get_quote_asset_price_data(move _10, move _11)</td></tr></table>>];
    bb1__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb2__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;((*_1).5: state::oracle::OraclePriceData)<br/>_15 = &amp;(*_16)<br/>StorageLive(_17)<br/>_17 = OracleValidity::Valid<br/>_14 = (move _15, move _17)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>_0 = std::result::Result::&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt;::Ok(move _14)<br/>StorageDead(_14)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>_8 = const ()<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_21)<br/>_21 = &amp;(*_4)<br/></td></tr><tr><td align="left">_19 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::contains_key::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _20, move _21)</td></tr></table>>];
    bb4__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb5__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_28)<br/>_28 = &amp;(*_4)<br/></td></tr><tr><td align="left">_26 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::get::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _27, move _28)</td></tr></table>>];
    bb6__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;Option&lt;&amp;OraclePriceData&gt; as SafeUnwrap&gt;::safe_unwrap(move _26)</td></tr></table>>];
    bb7__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb8__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_29 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_24 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_23 = _33<br/>StorageDead(_33)<br/>StorageDead(_24)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;((*_1).2: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity&gt;)<br/>StorageLive(_37)<br/>_37 = &amp;(*_4)<br/></td></tr><tr><td align="left">_35 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OracleValidity&gt;::get::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _36, move _37)</td></tr></table>>];
    bb10__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb12__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>_38 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb14__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_35 as Some).0: &amp;math::oracle::OracleValidity)<br/>_34 = (*_39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _2<br/>StorageLive(_44)<br/>_44 = _3<br/>StorageLive(_45)<br/>_45 = _5<br/>StorageLive(_46)<br/>_46 = &amp;(*_23)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;(((*_1).4: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_47 = &amp;(*_48)<br/>StorageLive(_49)<br/>_49 = _6<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;((*_4).1: state::oracle::OracleSource)<br/>_50 = &amp;(*_51)<br/>StorageLive(_52)<br/>_52 = LogMode::ExchangeOracle<br/>StorageLive(_53)<br/>_53 = _7<br/></td></tr><tr><td align="left">_42 = oracle_validity(move _43, move _44, move _45, move _46, move _47, move _49, move _50, move _52, move _53)</td></tr></table>>];
    bb16__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb17__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_54 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb18__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_41 as Continue).0: math::oracle::OracleValidity)<br/>_40 = _58<br/>StorageDead(_58)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_41)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;mut ((*_1).2: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity&gt;)<br/>StorageLive(_61)<br/>_61 = (*_4)<br/>StorageLive(_62)<br/>_62 = _40<br/></td></tr><tr><td align="left">_59 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OracleValidity&gt;::insert(move _60, move _61, move _62)</td></tr></table>>];
    bb19__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb20__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>_34 = _40<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_23)<br/>StorageLive(_65)<br/>_65 = _34<br/>_63 = (move _64, move _65)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>_0 = std::result::Result::&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt;::Ok(move _63)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>_18 = const ()<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;((*_1).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;((*_4).0: anchor_lang::prelude::Pubkey)<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_67 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::get::&lt;anchor_lang::prelude::Pubkey&gt;(move _68, move _69)</td></tr></table>>];
    bb24__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>_71 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb25__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_147 = const _<br/>_84 = &amp;(*_147)<br/>_83 = &amp;(*_84)<br/>_82 = move _83 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_83)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;((*_4).0: anchor_lang::prelude::Pubkey)<br/>_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _91)</td></tr></table>>];
    bb26__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_67 as Some).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_66 = _72<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;((*_4).1: state::oracle::OracleSource)<br/>_97 = &amp;(*_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_66)<br/>StorageLive(_100)<br/>_100 = ((*_1).3: u64)<br/></td></tr><tr><td align="left">_96 = get_oracle_price(move _97, move _99, move _100)</td></tr></table>>];
    bb27__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_89 = [move _90]<br/>StorageDead(_90)<br/>_88 = &amp;_89<br/>_87 = &amp;(*_88)<br/>_86 = move _87 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_81 = Arguments::&lt;'_&gt;::new_v1(move _82, move _86)</td></tr></table>>];
    bb28__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = format(move _81)</td></tr></table>>];
    bb29__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_84)<br/>_79 = move _80<br/>StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = &lt;String as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb30__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_75 = &amp;(*_76)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_74 = solana_program::log::sol_log(move _75)</td></tr></table>>];
    bb31__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb32__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageLive(_93)<br/>_93 = error::ErrorCode::OracleNotFound<br/>_0 = std::result::Result::&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt;::Err(move _93)<br/>StorageDead(_93)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb34__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_101 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb35__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_95 as Continue).0: state::oracle::OraclePriceData)<br/>_94 = _105<br/>StorageDead(_105)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;mut ((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_108)<br/>_108 = (*_4)<br/>StorageLive(_109)<br/>_109 = _94<br/></td></tr><tr><td align="left">_106 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::insert(move _107, move _108, move _109)</td></tr></table>>];
    bb36__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb37__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_115)<br/>_115 = &amp;(*_4)<br/></td></tr><tr><td align="left">_113 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::get::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _114, move _115)</td></tr></table>>];
    bb39__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;Option&lt;&amp;OraclePriceData&gt; as SafeUnwrap&gt;::safe_unwrap(move _113)</td></tr></table>>];
    bb40__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb41__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_116 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb42__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_111 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_110 = _120<br/>StorageDead(_120)<br/>StorageDead(_111)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _2<br/>StorageLive(_125)<br/>_125 = _3<br/>StorageLive(_126)<br/>_126 = _5<br/>StorageLive(_127)<br/>_127 = &amp;(*_110)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(((*_1).4: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_128 = &amp;(*_129)<br/>StorageLive(_130)<br/>_130 = _6<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;((*_4).1: state::oracle::OracleSource)<br/>_131 = &amp;(*_132)<br/>StorageLive(_133)<br/>_133 = LogMode::ExchangeOracle<br/>StorageLive(_134)<br/>_134 = _7<br/></td></tr><tr><td align="left">_123 = oracle_validity(move _124, move _125, move _126, move _127, move _128, move _130, move _131, move _133, move _134)</td></tr></table>>];
    bb43__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb44__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as Try&gt;::branch(move _123)</td></tr></table>>];
    bb46__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_135 = discriminant(_122)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb47__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_122 as Continue).0: math::oracle::OracleValidity)<br/>_121 = _139<br/>StorageDead(_139)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_122)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;mut ((*_1).2: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), math::oracle::OracleValidity&gt;)<br/>StorageLive(_142)<br/>_142 = (*_4)<br/>StorageLive(_143)<br/>_143 = _121<br/></td></tr><tr><td align="left">_140 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OracleValidity&gt;::insert(move _141, move _142, move _143)</td></tr></table>>];
    bb48__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_122 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb49__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;(*_110)<br/>StorageLive(_146)<br/>_146 = _121<br/>_144 = (move _145, move _146)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>_0 = std::result::Result::&lt;(&amp;OraclePriceData, OracleValidity), error::ErrorCode&gt;::Ok(move _144)<br/>StorageDead(_144)<br/>StorageDead(_121)<br/>StorageDead(_110)<br/>StorageDead(_94)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">return</td></tr></table>>];
    bb57__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb58__0_3599 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3599 -> bb1__0_3599 [label="return"];
    bb1__0_3599 -> bb3__0_3599 [label="0"];
    bb1__0_3599 -> bb2__0_3599 [label="otherwise"];
    bb2__0_3599 -> bb56__0_3599 [label=""];
    bb3__0_3599 -> bb4__0_3599 [label="return"];
    bb4__0_3599 -> bb23__0_3599 [label="0"];
    bb4__0_3599 -> bb5__0_3599 [label="otherwise"];
    bb5__0_3599 -> bb6__0_3599 [label="return"];
    bb6__0_3599 -> bb7__0_3599 [label="return"];
    bb7__0_3599 -> bb8__0_3599 [label="return"];
    bb8__0_3599 -> bb9__0_3599 [label="0"];
    bb8__0_3599 -> bb11__0_3599 [label="1"];
    bb8__0_3599 -> bb10__0_3599 [label="otherwise"];
    bb9__0_3599 -> bb13__0_3599 [label="return"];
    bb11__0_3599 -> bb12__0_3599 [label="return"];
    bb12__0_3599 -> bb55__0_3599 [label=""];
    bb13__0_3599 -> bb14__0_3599 [label="1"];
    bb13__0_3599 -> bb15__0_3599 [label="otherwise"];
    bb14__0_3599 -> bb22__0_3599 [label=""];
    bb15__0_3599 -> bb16__0_3599 [label="return"];
    bb16__0_3599 -> bb17__0_3599 [label="return"];
    bb17__0_3599 -> bb18__0_3599 [label="0"];
    bb17__0_3599 -> bb19__0_3599 [label="1"];
    bb17__0_3599 -> bb10__0_3599 [label="otherwise"];
    bb18__0_3599 -> bb21__0_3599 [label="return"];
    bb19__0_3599 -> bb20__0_3599 [label="return"];
    bb20__0_3599 -> bb54__0_3599 [label=""];
    bb21__0_3599 -> bb22__0_3599 [label=""];
    bb22__0_3599 -> bb54__0_3599 [label=""];
    bb23__0_3599 -> bb24__0_3599 [label="return"];
    bb24__0_3599 -> bb25__0_3599 [label="0"];
    bb24__0_3599 -> bb26__0_3599 [label="1"];
    bb24__0_3599 -> bb10__0_3599 [label="otherwise"];
    bb25__0_3599 -> bb27__0_3599 [label="return"];
    bb26__0_3599 -> bb33__0_3599 [label="return"];
    bb27__0_3599 -> bb28__0_3599 [label="return"];
    bb28__0_3599 -> bb29__0_3599 [label="return"];
    bb29__0_3599 -> bb30__0_3599 [label="return"];
    bb29__0_3599 -> bb57__0_3599 [label="unwind"];
    bb30__0_3599 -> bb31__0_3599 [label="return"];
    bb30__0_3599 -> bb57__0_3599 [label="unwind"];
    bb31__0_3599 -> bb32__0_3599 [label="return"];
    bb31__0_3599 -> bb58__0_3599 [label="unwind"];
    bb32__0_3599 -> bb53__0_3599 [label=""];
    bb33__0_3599 -> bb34__0_3599 [label="return"];
    bb34__0_3599 -> bb35__0_3599 [label="0"];
    bb34__0_3599 -> bb36__0_3599 [label="1"];
    bb34__0_3599 -> bb10__0_3599 [label="otherwise"];
    bb35__0_3599 -> bb38__0_3599 [label="return"];
    bb36__0_3599 -> bb37__0_3599 [label="return"];
    bb37__0_3599 -> bb52__0_3599 [label=""];
    bb38__0_3599 -> bb39__0_3599 [label="return"];
    bb39__0_3599 -> bb40__0_3599 [label="return"];
    bb40__0_3599 -> bb41__0_3599 [label="return"];
    bb41__0_3599 -> bb42__0_3599 [label="0"];
    bb41__0_3599 -> bb43__0_3599 [label="1"];
    bb41__0_3599 -> bb10__0_3599 [label="otherwise"];
    bb42__0_3599 -> bb45__0_3599 [label="return"];
    bb43__0_3599 -> bb44__0_3599 [label="return"];
    bb44__0_3599 -> bb51__0_3599 [label=""];
    bb45__0_3599 -> bb46__0_3599 [label="return"];
    bb46__0_3599 -> bb47__0_3599 [label="0"];
    bb46__0_3599 -> bb48__0_3599 [label="1"];
    bb46__0_3599 -> bb10__0_3599 [label="otherwise"];
    bb47__0_3599 -> bb50__0_3599 [label="return"];
    bb48__0_3599 -> bb49__0_3599 [label="return"];
    bb49__0_3599 -> bb51__0_3599 [label=""];
    bb50__0_3599 -> bb56__0_3599 [label=""];
    bb51__0_3599 -> bb52__0_3599 [label=""];
    bb52__0_3599 -> bb53__0_3599 [label=""];
    bb53__0_3599 -> bb56__0_3599 [label=""];
    bb54__0_3599 -> bb55__0_3599 [label=""];
    bb55__0_3599 -> bb56__0_3599 [label=""];
    bb57__0_3599 -> bb58__0_3599 [label="return"];
}
