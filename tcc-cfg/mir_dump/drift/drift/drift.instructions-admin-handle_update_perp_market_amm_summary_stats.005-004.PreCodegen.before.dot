digraph Mir_0_5529 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_amm_summary_stats(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;&gt;, _2: instructions::admin::UpdatePerpMarketSummaryStatsParams) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _17: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _19: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _24: ();<br align="left"/>let _25: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _26: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _31: Closure(DefId(0:5530 ~ drift[d311]::instructions::admin::handle_update_perp_market_amm_summary_stats::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _37: &amp;ReErased mut std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _38: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _40: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _41: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _43: Closure(DefId(0:5531 ~ drift[d311]::instructions::admin::handle_update_perp_market_amm_summary_stats::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _49: ();<br align="left"/>let mut _50: &amp;ReErased str;<br align="left"/>let _51: &amp;ReErased str;<br align="left"/>let mut _52: &amp;ReErased std::string::String;<br align="left"/>let _53: &amp;ReErased std::string::String;<br align="left"/>let _54: std::string::String;<br align="left"/>let _55: std::string::String;<br align="left"/>let mut _56: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _57: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _58: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _59: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _60: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _62: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _63: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _64: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _65: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased u16;<br align="left"/>let _67: &amp;ReErased u16;<br align="left"/>let _68: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _69: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased str;<br align="left"/>let _72: &amp;ReErased str;<br align="left"/>let mut _73: &amp;ReErased std::string::String;<br align="left"/>let _74: &amp;ReErased std::string::String;<br align="left"/>let _75: std::string::String;<br align="left"/>let _76: std::string::String;<br align="left"/>let mut _77: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _79: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _80: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _81: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _83: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _85: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _86: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased u16;<br align="left"/>let _88: &amp;ReErased u16;<br align="left"/>let _89: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _90: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _91: anchor_lang::prelude::Clock;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _93: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _98: anchor_lang::prelude::Clock;<br align="left"/>let _99: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _100: i64;<br align="left"/>let mut _101: state::oracle::OraclePriceData;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _103: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _104: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _105: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _106: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _107: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _108: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _109: u64;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: state::oracle::OraclePriceData;<br align="left"/>let _115: ();<br align="left"/>let mut _116: isize;<br align="left"/>let _117: i64;<br align="left"/>let _118: ();<br align="left"/>let mut _119: &amp;ReErased str;<br align="left"/>let _120: &amp;ReErased str;<br align="left"/>let mut _121: &amp;ReErased std::string::String;<br align="left"/>let _122: &amp;ReErased std::string::String;<br align="left"/>let _123: std::string::String;<br align="left"/>let _124: std::string::String;<br align="left"/>let mut _125: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _127: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _128: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _129: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _131: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _132: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _133: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _134: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased i64;<br align="left"/>let _136: &amp;ReErased i64;<br align="left"/>let _137: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _138: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _139: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased i64;<br align="left"/>let _141: &amp;ReErased i64;<br align="left"/>let mut _142: i64;<br align="left"/>let mut _143: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _144: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _145: ();<br align="left"/>let mut _146: isize;<br align="left"/>let _147: i64;<br align="left"/>let _148: ();<br align="left"/>let mut _149: &amp;ReErased str;<br align="left"/>let _150: &amp;ReErased str;<br align="left"/>let mut _151: &amp;ReErased std::string::String;<br align="left"/>let _152: &amp;ReErased std::string::String;<br align="left"/>let _153: std::string::String;<br align="left"/>let _154: std::string::String;<br align="left"/>let mut _155: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _156: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _157: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _158: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _159: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _160: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _161: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _163: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _164: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased i64;<br align="left"/>let _166: &amp;ReErased i64;<br align="left"/>let _167: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _168: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _169: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _170: &amp;ReErased i64;<br align="left"/>let _171: &amp;ReErased i64;<br align="left"/>let mut _172: i64;<br align="left"/>let mut _173: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _174: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _175: ();<br align="left"/>let mut _176: bool;<br align="left"/>let mut _177: &amp;ReErased std::option::Option&lt;bool&gt;;<br align="left"/>let mut _178: &amp;ReErased std::option::Option&lt;bool&gt;;<br align="left"/>let _179: std::option::Option&lt;bool&gt;;<br align="left"/>let _180: i128;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _182: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _183: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _184: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _185: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _186: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _187: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _188: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _189: i64;<br align="left"/>let mut _190: bool;<br align="left"/>let mut _191: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: i128;<br align="left"/>let _197: ();<br align="left"/>let mut _198: &amp;ReErased str;<br align="left"/>let _199: &amp;ReErased str;<br align="left"/>let mut _200: &amp;ReErased std::string::String;<br align="left"/>let _201: &amp;ReErased std::string::String;<br align="left"/>let _202: std::string::String;<br align="left"/>let _203: std::string::String;<br align="left"/>let mut _204: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _207: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _208: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _210: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _211: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _212: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _213: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _214: &amp;ReErased u16;<br align="left"/>let _215: &amp;ReErased u16;<br align="left"/>let _216: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _217: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _218: ();<br align="left"/>let mut _219: &amp;ReErased str;<br align="left"/>let _220: &amp;ReErased str;<br align="left"/>let mut _221: &amp;ReErased std::string::String;<br align="left"/>let _222: &amp;ReErased std::string::String;<br align="left"/>let _223: std::string::String;<br align="left"/>let _224: std::string::String;<br align="left"/>let mut _225: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _226: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _227: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _228: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _229: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _230: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _231: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _232: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _233: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _234: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _235: &amp;ReErased i128;<br align="left"/>let _236: &amp;ReErased i128;<br align="left"/>let _237: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _238: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _239: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _240: &amp;ReErased i128;<br align="left"/>let _241: &amp;ReErased i128;<br align="left"/>let _242: i128;<br align="left"/>let mut _243: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _244: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _245: i128;<br align="left"/>let mut _246: i128;<br align="left"/>let mut _247: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _248: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _249: isize;<br align="left"/>let _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _253: i128;<br align="left"/>let _254: ();<br align="left"/>let mut _255: &amp;ReErased str;<br align="left"/>let _256: &amp;ReErased str;<br align="left"/>let mut _257: &amp;ReErased std::string::String;<br align="left"/>let _258: &amp;ReErased std::string::String;<br align="left"/>let _259: std::string::String;<br align="left"/>let _260: std::string::String;<br align="left"/>let mut _261: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _262: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _263: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _264: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _265: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _266: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _267: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _268: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _269: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _270: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _271: &amp;ReErased i128;<br align="left"/>let _272: &amp;ReErased i128;<br align="left"/>let _273: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _274: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _275: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _276: &amp;ReErased i128;<br align="left"/>let _277: &amp;ReErased i128;<br align="left"/>let _278: i128;<br align="left"/>let mut _279: i128;<br align="left"/>let mut _280: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _281: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _282: i128;<br align="left"/>let _283: ();<br align="left"/>let mut _284: &amp;ReErased str;<br align="left"/>let _285: &amp;ReErased str;<br align="left"/>let mut _286: &amp;ReErased std::string::String;<br align="left"/>let _287: &amp;ReErased std::string::String;<br align="left"/>let _288: std::string::String;<br align="left"/>let _289: std::string::String;<br align="left"/>let mut _290: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _291: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _292: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _293: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _294: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _295: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _296: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _297: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _298: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _299: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _300: &amp;ReErased i128;<br align="left"/>let _301: &amp;ReErased i128;<br align="left"/>let _302: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _303: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _304: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _305: &amp;ReErased i128;<br align="left"/>let _306: &amp;ReErased i128;<br align="left"/>let _307: i128;<br align="left"/>let mut _308: i128;<br align="left"/>let mut _309: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _310: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _311: i128;<br align="left"/>let mut _312: i128;<br align="left"/>let mut _313: i128;<br align="left"/>let mut _314: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _315: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _316: i128;<br align="left"/>let mut _317: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _318: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _319: i128;<br align="left"/>let mut _320: i128;<br align="left"/>let mut _321: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _322: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _323: i128;<br align="left"/>let mut _324: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _325: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _326: i128;<br align="left"/>let mut _327: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _328: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _329: ();<br align="left"/>let mut _330: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _331: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _332: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _333: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _334: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _335: isize;<br align="left"/>let _336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _337: !;<br align="left"/>let mut _338: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _339: ();<br align="left"/>let mut _340: ();<br align="left"/>let mut _341: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _342: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _343: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _344: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _345: &amp;ReErased std::option::Option&lt;bool&gt;;<br align="left"/>let mut _346: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _347: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _348: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _349: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _350: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;;<br align="left"/>let mut _351: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;;<br align="left"/>let mut _353: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;;<br align="left"/>let mut _354: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;;<br align="left"/>let mut _355: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;ReErased&gt;;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>let mut _363: isize;<br align="left"/>let mut _364: isize;<br align="left"/>let mut _365: isize;<br align="left"/>let mut _366: isize;<br align="left"/>let mut _367: isize;<br align="left"/>let mut _368: isize;<br align="left"/>let mut _369: isize;<br align="left"/>let mut _370: isize;<br align="left"/>let mut _371: isize;<br align="left"/>let mut _372: isize;<br align="left"/>let mut _373: isize;<br align="left"/>let mut _374: isize;<br align="left"/>let mut _375: isize;<br align="left"/>let mut _376: isize;<br align="left"/>let mut _377: isize;<br align="left"/>let mut _378: isize;<br align="left"/>let mut _379: isize;<br align="left"/>let mut _380: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug perp_market =&gt; _25;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug spot_market =&gt; _37;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug res =&gt; _55;<br align="left"/>debug res =&gt; _76;<br align="left"/>debug clock =&gt; _91;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug price_oracle =&gt; _99;<br align="left"/>debug oracle_price =&gt; _100;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug quote_asset_amount_with_unsettled_lp =&gt; _117;<br align="left"/>debug res =&gt; _124;<br align="left"/>debug net_unsettled_funding_pnl =&gt; _147;<br align="left"/>debug res =&gt; _154;<br align="left"/>debug new_total_fee_minus_distributions =&gt; _180;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug res =&gt; _203;<br align="left"/>debug res =&gt; _224;<br align="left"/>debug fee_difference =&gt; _242;<br align="left"/>debug residual =&gt; _250;<br align="left"/>debug val =&gt; _253;<br align="left"/>debug res =&gt; _260;<br align="left"/>debug res =&gt; _289;<br align="left"/>debug residual =&gt; _336;<br align="left"/>debug val =&gt; _339;<br align="left"/>>;
    bb0__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_350 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;'_&gt;)<br/>_7 = &amp;((*_350).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_356 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_351 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;'_&gt;)<br/>_17 = &amp;((*_351).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_16 = &amp;(*_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_352 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;'_&gt;)<br/>_19 = &amp;((*_352).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_18 = &amp;(*_19)<br/></td></tr><tr><td align="left">_15 = constraints::valid_oracle_for_perp_market(move _16, move _18)</td></tr></table>>];
    bb4__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_374 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_20 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_14 as Continue).0: ())<br/>_13 = _24<br/>StorageDead(_24)<br/>_358 = discriminant(_14)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_353 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;'_&gt;)<br/>_30 = &amp;((*_353).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_29 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _30)</td></tr></table>>];
    bb10__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb11__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_372 = discriminant(_14)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_28 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _29, move _31)</td></tr></table>>];
    bb13__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb14__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_32 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb15__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_27 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_26 = move _36<br/>StorageDead(_36)<br/>_25 = &amp;mut _26<br/>_362 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_354 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;'_&gt;)<br/>_42 = &amp;((*_354).3: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_41 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load(move _42)</td></tr></table>>];
    bb16__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb17__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_360 = discriminant(_27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_43)<br/>_43 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_40 = std::result::Result::&lt;Ref&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _41, move _43)</td></tr></table>>];
    bb19__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb20__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_44 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb21__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = move ((_39 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_38 = move _48<br/>StorageDead(_48)<br/>_37 = &amp;mut _38<br/>_366 = discriminant(_39)<br/>StorageDead(_39)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_349 = const _<br/>_59 = &amp;(*_349)<br/>_58 = &amp;(*_59)<br/>_57 = move _58 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_58)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_25)<br/></td></tr><tr><td align="left">_68 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb22__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb23__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>_364 = discriminant(_39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_67 = &amp;((*_68).21: u16)<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _66)</td></tr></table>>];
    bb25__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = [move _65]<br/>StorageDead(_65)<br/>_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/>_61 = move _62 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_56 = Arguments::&lt;'_&gt;::new_v1(move _57, move _61)</td></tr></table>>];
    bb26__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = format(move _56)</td></tr></table>>];
    bb27__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>_54 = move _55<br/>StorageDead(_55)<br/>_53 = &amp;_54<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_51 = &lt;String as Deref&gt;::deref(move _52)</td></tr></table>>];
    bb28__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_50 = &amp;(*_51)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_49 = solana_program::log::sol_log(move _50)</td></tr></table>>];
    bb29__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb30__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_348 = const _<br/>_80 = &amp;(*_348)<br/>_79 = &amp;(*_80)<br/>_78 = move _79 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_79)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;(*_37)<br/></td></tr><tr><td align="left">_89 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb31__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_88 = &amp;((*_89).42: u16)<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _87)</td></tr></table>>];
    bb32__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_85 = [move _86]<br/>StorageDead(_86)<br/>_84 = &amp;_85<br/>_83 = &amp;(*_84)<br/>_82 = move _83 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_77 = Arguments::&lt;'_&gt;::new_v1(move _78, move _82)</td></tr></table>>];
    bb33__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = format(move _77)</td></tr></table>>];
    bb34__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>_75 = move _76<br/>StorageDead(_76)<br/>_74 = &amp;_75<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;String as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb35__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_70 = solana_program::log::sol_log(move _71)</td></tr></table>>];
    bb36__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb37__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/></td></tr><tr><td align="left">_93 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb38__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb39__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_94 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb40__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_92 as Continue).0: anchor_lang::prelude::Clock)<br/>_91 = move _98<br/>StorageDead(_98)<br/>_368 = discriminant(_92)<br/>StorageDead(_92)<br/>StorageLive(_99)<br/>_355 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketAmmSummaryStats&lt;'_&gt;)<br/>_99 = &amp;((*_355).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;(*_25)<br/></td></tr><tr><td align="left">_106 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _107)</td></tr></table>>];
    bb41__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_97)<br/>_97 = move _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb42__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>_370 = discriminant(_92)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_105 = &amp;(((*_106).1: state::perp_market::AMM).72: state::oracle::OracleSource)<br/>_104 = &amp;(*_105)<br/>StorageLive(_108)<br/>_108 = &amp;(*_99)<br/>StorageLive(_109)<br/>_109 = (_91.0: u64)<br/></td></tr><tr><td align="left">_103 = get_oracle_price(move _104, move _108, move _109)</td></tr></table>>];
    bb44__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb45__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_110 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb46__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_102 as Continue).0: state::oracle::OraclePriceData)<br/>_101 = _114<br/>StorageDead(_114)<br/>StorageLive(_100)<br/>_100 = (_101.0: i64)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_115)<br/>_116 = discriminant((_2.0: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb47__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb48__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_115 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = (((_2.0: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_347 = const _<br/>_128 = &amp;(*_347)<br/>_127 = &amp;(*_128)<br/>_126 = move _127 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_127)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;(*_25)<br/></td></tr><tr><td align="left">_137 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _138)</td></tr></table>>];
    bb51__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_136 = &amp;(((*_137).1: state::perp_market::AMM).81: i64)<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _135)</td></tr></table>>];
    bb52__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;_117<br/>_140 = &amp;(*_141)<br/></td></tr><tr><td align="left">_139 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _140)</td></tr></table>>];
    bb53__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_133 = [move _134, move _139]<br/>StorageDead(_139)<br/>StorageDead(_134)<br/>_132 = &amp;_133<br/>_131 = &amp;(*_132)<br/>_130 = move _131 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_125 = Arguments::&lt;'_&gt;::new_v1(move _126, move _130)</td></tr></table>>];
    bb54__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = format(move _125)</td></tr></table>>];
    bb55__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>_123 = move _124<br/>StorageDead(_124)<br/>_122 = &amp;_123<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = &lt;String as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb56__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_119 = &amp;(*_120)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_118 = solana_program::log::sol_log(move _119)</td></tr></table>>];
    bb57__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb58__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageLive(_142)<br/>_142 = _117<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_143 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _144)</td></tr></table>>];
    bb59__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>(((*_143).1: state::perp_market::AMM).81: i64) = move _142<br/>StorageDead(_142)<br/>StorageDead(_143)<br/>_115 = const ()<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageLive(_145)<br/>_146 = discriminant((_2.1: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb61__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = (((_2.1: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_346 = const _<br/>_158 = &amp;(*_346)<br/>_157 = &amp;(*_158)<br/>_156 = move _157 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_157)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;(*_25)<br/></td></tr><tr><td align="left">_167 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _168)</td></tr></table>>];
    bb62__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_166 = &amp;(((*_167).1: state::perp_market::AMM).80: i64)<br/>_165 = &amp;(*_166)<br/></td></tr><tr><td align="left">_164 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _165)</td></tr></table>>];
    bb63__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = &amp;_147<br/>_170 = &amp;(*_171)<br/></td></tr><tr><td align="left">_169 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _170)</td></tr></table>>];
    bb64__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_163 = [move _164, move _169]<br/>StorageDead(_169)<br/>StorageDead(_164)<br/>_162 = &amp;_163<br/>_161 = &amp;(*_162)<br/>_160 = move _161 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_155 = Arguments::&lt;'_&gt;::new_v1(move _156, move _160)</td></tr></table>>];
    bb65__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">_154 = format(move _155)</td></tr></table>>];
    bb66__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_171)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/>_153 = move _154<br/>StorageDead(_154)<br/>_152 = &amp;_153<br/>_151 = &amp;(*_152)<br/></td></tr><tr><td align="left">_150 = &lt;String as Deref&gt;::deref(move _151)</td></tr></table>>];
    bb67__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_149 = &amp;(*_150)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">_148 = solana_program::log::sol_log(move _149)</td></tr></table>>];
    bb68__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">drop(_153)</td></tr></table>>];
    bb69__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageLive(_172)<br/>_172 = _147<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_173 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _174)</td></tr></table>>];
    bb70__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>(((*_173).1: state::perp_market::AMM).80: i64) = move _172<br/>StorageDead(_172)<br/>StorageDead(_173)<br/>_145 = const ()<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_145 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;(_2.2: std::option::Option&lt;bool&gt;)<br/>StorageLive(_178)<br/>_345 = const _<br/>_178 = &amp;(*_345)<br/></td></tr><tr><td align="left">_176 = &lt;Option&lt;bool&gt; as PartialEq&gt;::eq(move _177, move _178)</td></tr></table>>];
    bb73__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">switchInt(move _176)</td></tr></table>>];
    bb74__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = &amp;(*_25)<br/></td></tr><tr><td align="left">_184 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _185)</td></tr></table>>];
    bb75__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_183 = &amp;(*_184)<br/>StorageDead(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;(*_37)<br/></td></tr><tr><td align="left">_187 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb76__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_186 = &amp;(*_187)<br/>StorageDead(_188)<br/>StorageLive(_189)<br/>_189 = _100<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = (_2.3: std::option::Option&lt;bool&gt;)<br/></td></tr><tr><td align="left">_190 = Option::&lt;bool&gt;::unwrap_or(move _191, const false)</td></tr></table>>];
    bb77__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/></td></tr><tr><td align="left">_182 = calculate_perp_market_amm_summary_stats(move _183, move _186, move _189, move _190)</td></tr></table>>];
    bb78__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb79__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_192 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb80__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_181 as Continue).0: i128)<br/>_180 = _196<br/>StorageDead(_196)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_344 = const _<br/>_207 = &amp;(*_344)<br/>_206 = &amp;(*_207)<br/>_205 = move _206 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_206)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_25)<br/></td></tr><tr><td align="left">_216 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb81__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb82__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_215 = &amp;((*_216).21: u16)<br/>_214 = &amp;(*_215)<br/></td></tr><tr><td align="left">_213 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _214)</td></tr></table>>];
    bb84__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_212 = [move _213]<br/>StorageDead(_213)<br/>_211 = &amp;_212<br/>_210 = &amp;(*_211)<br/>_209 = move _210 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_204 = Arguments::&lt;'_&gt;::new_v1(move _205, move _209)</td></tr></table>>];
    bb85__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = format(move _204)</td></tr></table>>];
    bb86__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageDead(_207)<br/>_202 = move _203<br/>StorageDead(_203)<br/>_201 = &amp;_202<br/>_200 = &amp;(*_201)<br/></td></tr><tr><td align="left">_199 = &lt;String as Deref&gt;::deref(move _200)</td></tr></table>>];
    bb87__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_198 = &amp;(*_199)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_197 = solana_program::log::sol_log(move _198)</td></tr></table>>];
    bb88__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb89__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_343 = const _<br/>_228 = &amp;(*_343)<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = &amp;(*_25)<br/></td></tr><tr><td align="left">_237 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _238)</td></tr></table>>];
    bb90__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_236 = &amp;(((*_237).1: state::perp_market::AMM).31: i128)<br/>_235 = &amp;(*_236)<br/></td></tr><tr><td align="left">_234 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i128&gt;(move _235)</td></tr></table>>];
    bb91__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;_180<br/>_240 = &amp;(*_241)<br/></td></tr><tr><td align="left">_239 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i128&gt;(move _240)</td></tr></table>>];
    bb92__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>_233 = [move _234, move _239]<br/>StorageDead(_239)<br/>StorageDead(_234)<br/>_232 = &amp;_233<br/>_231 = &amp;(*_232)<br/>_230 = move _231 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">_225 = Arguments::&lt;'_&gt;::new_v1(move _226, move _230)</td></tr></table>>];
    bb93__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = format(move _225)</td></tr></table>>];
    bb94__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/>StorageDead(_236)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_228)<br/>_223 = move _224<br/>StorageDead(_224)<br/>_222 = &amp;_223<br/>_221 = &amp;(*_222)<br/></td></tr><tr><td align="left">_220 = &lt;String as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb95__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_218 = solana_program::log::sol_log(move _219)</td></tr></table>>];
    bb96__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb97__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = _180<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;(*_25)<br/></td></tr><tr><td align="left">_247 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _248)</td></tr></table>>];
    bb98__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>_246 = (((*_247).1: state::perp_market::AMM).31: i128)<br/></td></tr><tr><td align="left">_244 = &lt;i128 as SafeMath&gt;::safe_sub(move _245, move _246)</td></tr></table>>];
    bb99__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">_243 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _244)</td></tr></table>>];
    bb100__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_249 = discriminant(_243)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb101__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_253)<br/>_253 = ((_243 as Continue).0: i128)<br/>_242 = _253<br/>StorageDead(_253)<br/>StorageDead(_247)<br/>StorageDead(_243)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_342 = const _<br/>_264 = &amp;(*_342)<br/>_263 = &amp;(*_264)<br/>_262 = move _263 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_263)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;(*_25)<br/></td></tr><tr><td align="left">_273 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _274)</td></tr></table>>];
    bb102__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = ((_243 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_252)<br/>_252 = _250<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _252)</td></tr></table>>];
    bb103__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_247)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_272 = &amp;(((*_273).1: state::perp_market::AMM).28: i128)<br/>_271 = &amp;(*_272)<br/></td></tr><tr><td align="left">_270 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _271)</td></tr></table>>];
    bb105__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;(*_25)<br/></td></tr><tr><td align="left">_280 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _281)</td></tr></table>>];
    bb106__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>_279 = (((*_280).1: state::perp_market::AMM).28: i128)<br/>StorageLive(_282)<br/>_282 = _242<br/></td></tr><tr><td align="left">_278 = core::num::&lt;impl i128&gt;::saturating_add(move _279, move _282)</td></tr></table>>];
    bb107__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_279)<br/>_277 = &amp;_278<br/>_276 = &amp;(*_277)<br/></td></tr><tr><td align="left">_275 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _276)</td></tr></table>>];
    bb108__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>_269 = [move _270, move _275]<br/>StorageDead(_275)<br/>StorageDead(_270)<br/>_268 = &amp;_269<br/>_267 = &amp;(*_268)<br/>_266 = move _267 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">_261 = Arguments::&lt;'_&gt;::new_v1(move _262, move _266)</td></tr></table>>];
    bb109__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_260 = format(move _261)</td></tr></table>>];
    bb110__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageDead(_264)<br/>_259 = move _260<br/>StorageDead(_260)<br/>_258 = &amp;_259<br/>_257 = &amp;(*_258)<br/></td></tr><tr><td align="left">_256 = &lt;String as Deref&gt;::deref(move _257)</td></tr></table>>];
    bb111__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_255 = &amp;(*_256)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_254 = solana_program::log::sol_log(move _255)</td></tr></table>>];
    bb112__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">drop(_259)</td></tr></table>>];
    bb113__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_341 = const _<br/>_293 = &amp;(*_341)<br/>_292 = &amp;(*_293)<br/>_291 = move _292 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_292)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = &amp;(*_25)<br/></td></tr><tr><td align="left">_302 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _303)</td></tr></table>>];
    bb114__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>_301 = &amp;(((*_302).1: state::perp_market::AMM).29: i128)<br/>_300 = &amp;(*_301)<br/></td></tr><tr><td align="left">_299 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _300)</td></tr></table>>];
    bb115__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;(*_25)<br/></td></tr><tr><td align="left">_309 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _310)</td></tr></table>>];
    bb116__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>_308 = (((*_309).1: state::perp_market::AMM).29: i128)<br/>StorageLive(_311)<br/>_311 = _242<br/></td></tr><tr><td align="left">_307 = core::num::&lt;impl i128&gt;::saturating_add(move _308, move _311)</td></tr></table>>];
    bb117__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageDead(_308)<br/>_306 = &amp;_307<br/>_305 = &amp;(*_306)<br/></td></tr><tr><td align="left">_304 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _305)</td></tr></table>>];
    bb118__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>_298 = [move _299, move _304]<br/>StorageDead(_304)<br/>StorageDead(_299)<br/>_297 = &amp;_298<br/>_296 = &amp;(*_297)<br/>_295 = move _296 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">_290 = Arguments::&lt;'_&gt;::new_v1(move _291, move _295)</td></tr></table>>];
    bb119__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_289 = format(move _290)</td></tr></table>>];
    bb120__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_309)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_293)<br/>_288 = move _289<br/>StorageDead(_289)<br/>_287 = &amp;_288<br/>_286 = &amp;(*_287)<br/></td></tr><tr><td align="left">_285 = &lt;String as Deref&gt;::deref(move _286)</td></tr></table>>];
    bb121__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_284 = &amp;(*_285)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">_283 = solana_program::log::sol_log(move _284)</td></tr></table>>];
    bb122__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/></td></tr><tr><td align="left">drop(_288)</td></tr></table>>];
    bb123__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_287)<br/>StorageDead(_285)<br/>StorageDead(_283)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = &amp;(*_25)<br/></td></tr><tr><td align="left">_314 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _315)</td></tr></table>>];
    bb124__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_313 = (((*_314).1: state::perp_market::AMM).28: i128)<br/>StorageLive(_316)<br/>_316 = _242<br/></td></tr><tr><td align="left">_312 = core::num::&lt;impl i128&gt;::saturating_add(move _313, move _316)</td></tr></table>>];
    bb125__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_313)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_317 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _318)</td></tr></table>>];
    bb126__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>(((*_317).1: state::perp_market::AMM).28: i128) = move _312<br/>StorageDead(_312)<br/>StorageDead(_317)<br/>StorageDead(_314)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_322 = &amp;(*_25)<br/></td></tr><tr><td align="left">_321 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _322)</td></tr></table>>];
    bb127__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>_320 = (((*_321).1: state::perp_market::AMM).29: i128)<br/>StorageLive(_323)<br/>_323 = _242<br/></td></tr><tr><td align="left">_319 = core::num::&lt;impl i128&gt;::saturating_add(move _320, move _323)</td></tr></table>>];
    bb128__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_320)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_324 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _325)</td></tr></table>>];
    bb129__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>(((*_324).1: state::perp_market::AMM).29: i128) = move _319<br/>StorageDead(_319)<br/>StorageDead(_324)<br/>StorageDead(_321)<br/>StorageLive(_326)<br/>_326 = _180<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>_328 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_327 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _328)</td></tr></table>>];
    bb130__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>(((*_327).1: state::perp_market::AMM).31: i128) = move _326<br/>StorageDead(_326)<br/>StorageDead(_327)<br/>_175 = const ()<br/>StorageDead(_242)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>_175 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_334 = &amp;(*_25)<br/></td></tr><tr><td align="left">_333 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _334)</td></tr></table>>];
    bb133__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">_332 = &amp;(*_333)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">_331 = validate_perp_market(move _332)</td></tr></table>>];
    bb134__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/></td></tr><tr><td align="left">_330 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _331)</td></tr></table>>];
    bb135__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>_335 = discriminant(_330)<br/></td></tr><tr><td align="left">switchInt(move _335)</td></tr></table>>];
    bb136__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>_339 = ((_330 as Continue).0: ())<br/>_329 = _339<br/>StorageDead(_339)<br/>StorageDead(_333)<br/>StorageDead(_330)<br/>StorageDead(_329)<br/>StorageLive(_340)<br/>_340 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _340)<br/>StorageDead(_340)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb137__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>_336 = ((_330 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_338)<br/>_338 = _336<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _338)</td></tr></table>>];
    bb138__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_333)<br/>StorageDead(_330)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb140__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb145__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb146__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left">return</td></tr></table>>];
    bb148__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left">drop(_288)</td></tr></table>>];
    bb149__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left">drop(_259)</td></tr></table>>];
    bb150__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb151__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb152__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">152 (cleanup)</td></tr><tr><td align="left">drop(_153)</td></tr></table>>];
    bb153__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">153 (cleanup)</td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb154__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">154 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb155__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">155 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb156__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">156 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb157__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">157 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb158__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">158 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb159__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">159 (cleanup)</td></tr><tr><td align="left" balign="left">_376 = discriminant(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">160 (cleanup)</td></tr><tr><td align="left" balign="left">_377 = discriminant(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">161 (cleanup)</td></tr><tr><td align="left" balign="left">_378 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">162 (cleanup)</td></tr><tr><td align="left" balign="left">_379 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_5529 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">163 (cleanup)</td></tr><tr><td align="left" balign="left">_380 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5529 -> bb1__0_5529 [label="return"];
    bb1__0_5529 -> bb2__0_5529 [label="return"];
    bb1__0_5529 -> bb158__0_5529 [label="unwind"];
    bb2__0_5529 -> bb3__0_5529 [label="0"];
    bb2__0_5529 -> bb5__0_5529 [label="1"];
    bb2__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb3__0_5529 -> bb7__0_5529 [label="return"];
    bb5__0_5529 -> bb6__0_5529 [label="return"];
    bb5__0_5529 -> bb163__0_5529 [label="unwind"];
    bb6__0_5529 -> bb147__0_5529 [label=""];
    bb7__0_5529 -> bb8__0_5529 [label="return"];
    bb7__0_5529 -> bb158__0_5529 [label="unwind"];
    bb8__0_5529 -> bb9__0_5529 [label="0"];
    bb8__0_5529 -> bb10__0_5529 [label="1"];
    bb8__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb9__0_5529 -> bb12__0_5529 [label="return"];
    bb10__0_5529 -> bb11__0_5529 [label="return"];
    bb10__0_5529 -> bb162__0_5529 [label="unwind"];
    bb11__0_5529 -> bb147__0_5529 [label=""];
    bb12__0_5529 -> bb13__0_5529 [label="return"];
    bb12__0_5529 -> bb158__0_5529 [label="unwind"];
    bb13__0_5529 -> bb14__0_5529 [label="return"];
    bb13__0_5529 -> bb158__0_5529 [label="unwind"];
    bb14__0_5529 -> bb15__0_5529 [label="0"];
    bb14__0_5529 -> bb16__0_5529 [label="1"];
    bb14__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb15__0_5529 -> bb18__0_5529 [label="return"];
    bb15__0_5529 -> bb157__0_5529 [label="unwind"];
    bb16__0_5529 -> bb17__0_5529 [label="return"];
    bb16__0_5529 -> bb161__0_5529 [label="unwind"];
    bb17__0_5529 -> bb146__0_5529 [label=""];
    bb18__0_5529 -> bb19__0_5529 [label="return"];
    bb18__0_5529 -> bb157__0_5529 [label="unwind"];
    bb19__0_5529 -> bb20__0_5529 [label="return"];
    bb19__0_5529 -> bb157__0_5529 [label="unwind"];
    bb20__0_5529 -> bb21__0_5529 [label="0"];
    bb20__0_5529 -> bb22__0_5529 [label="1"];
    bb20__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb21__0_5529 -> bb24__0_5529 [label="return"];
    bb21__0_5529 -> bb156__0_5529 [label="unwind"];
    bb22__0_5529 -> bb23__0_5529 [label="return"];
    bb22__0_5529 -> bb160__0_5529 [label="unwind"];
    bb23__0_5529 -> bb145__0_5529 [label=""];
    bb24__0_5529 -> bb25__0_5529 [label="return"];
    bb24__0_5529 -> bb156__0_5529 [label="unwind"];
    bb25__0_5529 -> bb26__0_5529 [label="return"];
    bb25__0_5529 -> bb156__0_5529 [label="unwind"];
    bb26__0_5529 -> bb27__0_5529 [label="return"];
    bb26__0_5529 -> bb156__0_5529 [label="unwind"];
    bb27__0_5529 -> bb28__0_5529 [label="return"];
    bb27__0_5529 -> bb155__0_5529 [label="unwind"];
    bb28__0_5529 -> bb29__0_5529 [label="return"];
    bb28__0_5529 -> bb155__0_5529 [label="unwind"];
    bb29__0_5529 -> bb30__0_5529 [label="return"];
    bb29__0_5529 -> bb156__0_5529 [label="unwind"];
    bb30__0_5529 -> bb31__0_5529 [label="return"];
    bb30__0_5529 -> bb156__0_5529 [label="unwind"];
    bb31__0_5529 -> bb32__0_5529 [label="return"];
    bb31__0_5529 -> bb156__0_5529 [label="unwind"];
    bb32__0_5529 -> bb33__0_5529 [label="return"];
    bb32__0_5529 -> bb156__0_5529 [label="unwind"];
    bb33__0_5529 -> bb34__0_5529 [label="return"];
    bb33__0_5529 -> bb156__0_5529 [label="unwind"];
    bb34__0_5529 -> bb35__0_5529 [label="return"];
    bb34__0_5529 -> bb154__0_5529 [label="unwind"];
    bb35__0_5529 -> bb36__0_5529 [label="return"];
    bb35__0_5529 -> bb154__0_5529 [label="unwind"];
    bb36__0_5529 -> bb37__0_5529 [label="return"];
    bb36__0_5529 -> bb156__0_5529 [label="unwind"];
    bb37__0_5529 -> bb38__0_5529 [label="return"];
    bb37__0_5529 -> bb156__0_5529 [label="unwind"];
    bb38__0_5529 -> bb39__0_5529 [label="return"];
    bb38__0_5529 -> bb156__0_5529 [label="unwind"];
    bb39__0_5529 -> bb40__0_5529 [label="0"];
    bb39__0_5529 -> bb41__0_5529 [label="1"];
    bb39__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb40__0_5529 -> bb43__0_5529 [label="return"];
    bb40__0_5529 -> bb156__0_5529 [label="unwind"];
    bb41__0_5529 -> bb42__0_5529 [label="return"];
    bb41__0_5529 -> bb159__0_5529 [label="unwind"];
    bb42__0_5529 -> bb144__0_5529 [label=""];
    bb43__0_5529 -> bb44__0_5529 [label="return"];
    bb43__0_5529 -> bb156__0_5529 [label="unwind"];
    bb44__0_5529 -> bb45__0_5529 [label="return"];
    bb44__0_5529 -> bb156__0_5529 [label="unwind"];
    bb45__0_5529 -> bb46__0_5529 [label="0"];
    bb45__0_5529 -> bb47__0_5529 [label="1"];
    bb45__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb46__0_5529 -> bb50__0_5529 [label="1"];
    bb46__0_5529 -> bb49__0_5529 [label="otherwise"];
    bb47__0_5529 -> bb48__0_5529 [label="return"];
    bb47__0_5529 -> bb156__0_5529 [label="unwind"];
    bb48__0_5529 -> bb143__0_5529 [label=""];
    bb49__0_5529 -> bb60__0_5529 [label=""];
    bb50__0_5529 -> bb51__0_5529 [label="return"];
    bb50__0_5529 -> bb156__0_5529 [label="unwind"];
    bb51__0_5529 -> bb52__0_5529 [label="return"];
    bb51__0_5529 -> bb156__0_5529 [label="unwind"];
    bb52__0_5529 -> bb53__0_5529 [label="return"];
    bb52__0_5529 -> bb156__0_5529 [label="unwind"];
    bb53__0_5529 -> bb54__0_5529 [label="return"];
    bb53__0_5529 -> bb156__0_5529 [label="unwind"];
    bb54__0_5529 -> bb55__0_5529 [label="return"];
    bb54__0_5529 -> bb156__0_5529 [label="unwind"];
    bb55__0_5529 -> bb56__0_5529 [label="return"];
    bb55__0_5529 -> bb153__0_5529 [label="unwind"];
    bb56__0_5529 -> bb57__0_5529 [label="return"];
    bb56__0_5529 -> bb153__0_5529 [label="unwind"];
    bb57__0_5529 -> bb58__0_5529 [label="return"];
    bb57__0_5529 -> bb156__0_5529 [label="unwind"];
    bb58__0_5529 -> bb59__0_5529 [label="return"];
    bb58__0_5529 -> bb156__0_5529 [label="unwind"];
    bb59__0_5529 -> bb60__0_5529 [label=""];
    bb60__0_5529 -> bb61__0_5529 [label="1"];
    bb60__0_5529 -> bb71__0_5529 [label="otherwise"];
    bb61__0_5529 -> bb62__0_5529 [label="return"];
    bb61__0_5529 -> bb156__0_5529 [label="unwind"];
    bb62__0_5529 -> bb63__0_5529 [label="return"];
    bb62__0_5529 -> bb156__0_5529 [label="unwind"];
    bb63__0_5529 -> bb64__0_5529 [label="return"];
    bb63__0_5529 -> bb156__0_5529 [label="unwind"];
    bb64__0_5529 -> bb65__0_5529 [label="return"];
    bb64__0_5529 -> bb156__0_5529 [label="unwind"];
    bb65__0_5529 -> bb66__0_5529 [label="return"];
    bb65__0_5529 -> bb156__0_5529 [label="unwind"];
    bb66__0_5529 -> bb67__0_5529 [label="return"];
    bb66__0_5529 -> bb152__0_5529 [label="unwind"];
    bb67__0_5529 -> bb68__0_5529 [label="return"];
    bb67__0_5529 -> bb152__0_5529 [label="unwind"];
    bb68__0_5529 -> bb69__0_5529 [label="return"];
    bb68__0_5529 -> bb156__0_5529 [label="unwind"];
    bb69__0_5529 -> bb70__0_5529 [label="return"];
    bb69__0_5529 -> bb156__0_5529 [label="unwind"];
    bb70__0_5529 -> bb72__0_5529 [label=""];
    bb71__0_5529 -> bb72__0_5529 [label=""];
    bb72__0_5529 -> bb73__0_5529 [label="return"];
    bb72__0_5529 -> bb156__0_5529 [label="unwind"];
    bb73__0_5529 -> bb131__0_5529 [label="0"];
    bb73__0_5529 -> bb74__0_5529 [label="otherwise"];
    bb74__0_5529 -> bb75__0_5529 [label="return"];
    bb74__0_5529 -> bb156__0_5529 [label="unwind"];
    bb75__0_5529 -> bb76__0_5529 [label="return"];
    bb75__0_5529 -> bb156__0_5529 [label="unwind"];
    bb76__0_5529 -> bb77__0_5529 [label="return"];
    bb76__0_5529 -> bb156__0_5529 [label="unwind"];
    bb77__0_5529 -> bb78__0_5529 [label="return"];
    bb77__0_5529 -> bb156__0_5529 [label="unwind"];
    bb78__0_5529 -> bb79__0_5529 [label="return"];
    bb78__0_5529 -> bb156__0_5529 [label="unwind"];
    bb79__0_5529 -> bb80__0_5529 [label="0"];
    bb79__0_5529 -> bb81__0_5529 [label="1"];
    bb79__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb80__0_5529 -> bb83__0_5529 [label="return"];
    bb80__0_5529 -> bb156__0_5529 [label="unwind"];
    bb81__0_5529 -> bb82__0_5529 [label="return"];
    bb81__0_5529 -> bb156__0_5529 [label="unwind"];
    bb82__0_5529 -> bb141__0_5529 [label=""];
    bb83__0_5529 -> bb84__0_5529 [label="return"];
    bb83__0_5529 -> bb156__0_5529 [label="unwind"];
    bb84__0_5529 -> bb85__0_5529 [label="return"];
    bb84__0_5529 -> bb156__0_5529 [label="unwind"];
    bb85__0_5529 -> bb86__0_5529 [label="return"];
    bb85__0_5529 -> bb156__0_5529 [label="unwind"];
    bb86__0_5529 -> bb87__0_5529 [label="return"];
    bb86__0_5529 -> bb151__0_5529 [label="unwind"];
    bb87__0_5529 -> bb88__0_5529 [label="return"];
    bb87__0_5529 -> bb151__0_5529 [label="unwind"];
    bb88__0_5529 -> bb89__0_5529 [label="return"];
    bb88__0_5529 -> bb156__0_5529 [label="unwind"];
    bb89__0_5529 -> bb90__0_5529 [label="return"];
    bb89__0_5529 -> bb156__0_5529 [label="unwind"];
    bb90__0_5529 -> bb91__0_5529 [label="return"];
    bb90__0_5529 -> bb156__0_5529 [label="unwind"];
    bb91__0_5529 -> bb92__0_5529 [label="return"];
    bb91__0_5529 -> bb156__0_5529 [label="unwind"];
    bb92__0_5529 -> bb93__0_5529 [label="return"];
    bb92__0_5529 -> bb156__0_5529 [label="unwind"];
    bb93__0_5529 -> bb94__0_5529 [label="return"];
    bb93__0_5529 -> bb156__0_5529 [label="unwind"];
    bb94__0_5529 -> bb95__0_5529 [label="return"];
    bb94__0_5529 -> bb150__0_5529 [label="unwind"];
    bb95__0_5529 -> bb96__0_5529 [label="return"];
    bb95__0_5529 -> bb150__0_5529 [label="unwind"];
    bb96__0_5529 -> bb97__0_5529 [label="return"];
    bb96__0_5529 -> bb156__0_5529 [label="unwind"];
    bb97__0_5529 -> bb98__0_5529 [label="return"];
    bb97__0_5529 -> bb156__0_5529 [label="unwind"];
    bb98__0_5529 -> bb99__0_5529 [label="return"];
    bb98__0_5529 -> bb156__0_5529 [label="unwind"];
    bb99__0_5529 -> bb100__0_5529 [label="return"];
    bb99__0_5529 -> bb156__0_5529 [label="unwind"];
    bb100__0_5529 -> bb101__0_5529 [label="0"];
    bb100__0_5529 -> bb102__0_5529 [label="1"];
    bb100__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb101__0_5529 -> bb104__0_5529 [label="return"];
    bb101__0_5529 -> bb156__0_5529 [label="unwind"];
    bb102__0_5529 -> bb103__0_5529 [label="return"];
    bb102__0_5529 -> bb156__0_5529 [label="unwind"];
    bb103__0_5529 -> bb141__0_5529 [label=""];
    bb104__0_5529 -> bb105__0_5529 [label="return"];
    bb104__0_5529 -> bb156__0_5529 [label="unwind"];
    bb105__0_5529 -> bb106__0_5529 [label="return"];
    bb105__0_5529 -> bb156__0_5529 [label="unwind"];
    bb106__0_5529 -> bb107__0_5529 [label="return"];
    bb106__0_5529 -> bb156__0_5529 [label="unwind"];
    bb107__0_5529 -> bb108__0_5529 [label="return"];
    bb107__0_5529 -> bb156__0_5529 [label="unwind"];
    bb108__0_5529 -> bb109__0_5529 [label="return"];
    bb108__0_5529 -> bb156__0_5529 [label="unwind"];
    bb109__0_5529 -> bb110__0_5529 [label="return"];
    bb109__0_5529 -> bb156__0_5529 [label="unwind"];
    bb110__0_5529 -> bb111__0_5529 [label="return"];
    bb110__0_5529 -> bb149__0_5529 [label="unwind"];
    bb111__0_5529 -> bb112__0_5529 [label="return"];
    bb111__0_5529 -> bb149__0_5529 [label="unwind"];
    bb112__0_5529 -> bb113__0_5529 [label="return"];
    bb112__0_5529 -> bb156__0_5529 [label="unwind"];
    bb113__0_5529 -> bb114__0_5529 [label="return"];
    bb113__0_5529 -> bb156__0_5529 [label="unwind"];
    bb114__0_5529 -> bb115__0_5529 [label="return"];
    bb114__0_5529 -> bb156__0_5529 [label="unwind"];
    bb115__0_5529 -> bb116__0_5529 [label="return"];
    bb115__0_5529 -> bb156__0_5529 [label="unwind"];
    bb116__0_5529 -> bb117__0_5529 [label="return"];
    bb116__0_5529 -> bb156__0_5529 [label="unwind"];
    bb117__0_5529 -> bb118__0_5529 [label="return"];
    bb117__0_5529 -> bb156__0_5529 [label="unwind"];
    bb118__0_5529 -> bb119__0_5529 [label="return"];
    bb118__0_5529 -> bb156__0_5529 [label="unwind"];
    bb119__0_5529 -> bb120__0_5529 [label="return"];
    bb119__0_5529 -> bb156__0_5529 [label="unwind"];
    bb120__0_5529 -> bb121__0_5529 [label="return"];
    bb120__0_5529 -> bb148__0_5529 [label="unwind"];
    bb121__0_5529 -> bb122__0_5529 [label="return"];
    bb121__0_5529 -> bb148__0_5529 [label="unwind"];
    bb122__0_5529 -> bb123__0_5529 [label="return"];
    bb122__0_5529 -> bb156__0_5529 [label="unwind"];
    bb123__0_5529 -> bb124__0_5529 [label="return"];
    bb123__0_5529 -> bb156__0_5529 [label="unwind"];
    bb124__0_5529 -> bb125__0_5529 [label="return"];
    bb124__0_5529 -> bb156__0_5529 [label="unwind"];
    bb125__0_5529 -> bb126__0_5529 [label="return"];
    bb125__0_5529 -> bb156__0_5529 [label="unwind"];
    bb126__0_5529 -> bb127__0_5529 [label="return"];
    bb126__0_5529 -> bb156__0_5529 [label="unwind"];
    bb127__0_5529 -> bb128__0_5529 [label="return"];
    bb127__0_5529 -> bb156__0_5529 [label="unwind"];
    bb128__0_5529 -> bb129__0_5529 [label="return"];
    bb128__0_5529 -> bb156__0_5529 [label="unwind"];
    bb129__0_5529 -> bb130__0_5529 [label="return"];
    bb129__0_5529 -> bb156__0_5529 [label="unwind"];
    bb130__0_5529 -> bb132__0_5529 [label=""];
    bb131__0_5529 -> bb132__0_5529 [label=""];
    bb132__0_5529 -> bb133__0_5529 [label="return"];
    bb132__0_5529 -> bb156__0_5529 [label="unwind"];
    bb133__0_5529 -> bb134__0_5529 [label="return"];
    bb133__0_5529 -> bb156__0_5529 [label="unwind"];
    bb134__0_5529 -> bb135__0_5529 [label="return"];
    bb134__0_5529 -> bb156__0_5529 [label="unwind"];
    bb135__0_5529 -> bb136__0_5529 [label="0"];
    bb135__0_5529 -> bb137__0_5529 [label="1"];
    bb135__0_5529 -> bb4__0_5529 [label="otherwise"];
    bb136__0_5529 -> bb139__0_5529 [label="return"];
    bb136__0_5529 -> bb157__0_5529 [label="unwind"];
    bb137__0_5529 -> bb138__0_5529 [label="return"];
    bb137__0_5529 -> bb156__0_5529 [label="unwind"];
    bb138__0_5529 -> bb142__0_5529 [label=""];
    bb139__0_5529 -> bb140__0_5529 [label="return"];
    bb139__0_5529 -> bb158__0_5529 [label="unwind"];
    bb140__0_5529 -> bb147__0_5529 [label=""];
    bb141__0_5529 -> bb142__0_5529 [label=""];
    bb142__0_5529 -> bb143__0_5529 [label=""];
    bb143__0_5529 -> bb144__0_5529 [label=""];
    bb144__0_5529 -> bb145__0_5529 [label="return"];
    bb144__0_5529 -> bb157__0_5529 [label="unwind"];
    bb145__0_5529 -> bb146__0_5529 [label="return"];
    bb145__0_5529 -> bb158__0_5529 [label="unwind"];
    bb146__0_5529 -> bb147__0_5529 [label=""];
    bb148__0_5529 -> bb156__0_5529 [label="return"];
    bb149__0_5529 -> bb156__0_5529 [label="return"];
    bb150__0_5529 -> bb156__0_5529 [label="return"];
    bb151__0_5529 -> bb156__0_5529 [label="return"];
    bb152__0_5529 -> bb156__0_5529 [label="return"];
    bb153__0_5529 -> bb156__0_5529 [label="return"];
    bb154__0_5529 -> bb156__0_5529 [label="return"];
    bb155__0_5529 -> bb156__0_5529 [label="return"];
    bb156__0_5529 -> bb157__0_5529 [label="return"];
    bb157__0_5529 -> bb158__0_5529 [label="return"];
    bb159__0_5529 -> bb156__0_5529 [label=""];
    bb160__0_5529 -> bb157__0_5529 [label=""];
    bb161__0_5529 -> bb158__0_5529 [label=""];
    bb162__0_5529 -> bb158__0_5529 [label=""];
    bb163__0_5529 -> bb158__0_5529 [label=""];
}
