digraph Mir_0_2399 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_spot_if_fee(_1: u128, _2: u128, _3: u32, _4: u32, _5: u32, _6: u32, _7: u32, _8: i64, _9: u32) -&gt; std::result::Result&lt;u32, error::ErrorCode&gt;<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: u32;<br align="left"/>let mut _13: u32;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: u32;<br align="left"/>let mut _20: !;<br align="left"/>let _21: u128;<br align="left"/>let mut _22: u32;<br align="left"/>let _23: u128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _29: u32;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u128;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: u128;<br align="left"/>let _42: u128;<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _44: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _47: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _48: u32;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: u128;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: bool;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u128;<br align="left"/>let _61: u32;<br align="left"/>let mut _62: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _63: u128;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _65: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _66: u128;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _68: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _69: u128;<br align="left"/>let mut _70: u128;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: u128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _77: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _78: u128;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _82: u32;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: u128;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _92: u128;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _96: u32;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: u128;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: u128;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _109: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _110: u128;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _112: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _113: u128;<br align="left"/>let mut _114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _115: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _116: u128;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _118: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _119: u128;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: u128;<br align="left"/>let mut _125: u128;<br align="left"/>let mut _126: isize;<br align="left"/>let _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _128: !;<br align="left"/>let mut _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _130: u128;<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: u128;<br align="left"/>let mut _137: u128;<br align="left"/>let mut _138: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _139: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _140: i64;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: u128;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: u128;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: u128;<br align="left"/>let mut _156: u128;<br align="left"/>let mut _157: isize;<br align="left"/>let _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _159: !;<br align="left"/>let mut _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _161: u128;<br align="left"/>let mut _162: u32;<br align="left"/>let mut _163: u32;<br align="left"/>let mut _164: u32;<br align="left"/>debug margin_shortage =&gt; _1;<br align="left"/>debug token_amount =&gt; _2;<br align="left"/>debug asset_weight =&gt; _3;<br align="left"/>debug asset_liquidation_multiplier =&gt; _4;<br align="left"/>debug liability_weight =&gt; _5;<br align="left"/>debug liability_liquidation_multiplier =&gt; _6;<br align="left"/>debug liability_decimals =&gt; _7;<br align="left"/>debug liability_price =&gt; _8;<br align="left"/>debug max_if_fee =&gt; _9;<br align="left"/>debug token_precision =&gt; _21;<br align="left"/>debug liability_weight =&gt; _23;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug asset_weight =&gt; _42;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug implied_if_fee =&gt; _61;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug residual =&gt; _127;<br align="left"/>debug val =&gt; _130;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug residual =&gt; _158;<br align="left"/>debug val =&gt; _161;<br align="left"/>>;
    bb0__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _3<br/>StorageLive(_13)<br/>_13 = _5<br/>_11 = Ge(move _12, move _13)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb1__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _8<br/>_14 = Eq(move _15, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb3__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/>_16 = Eq(move _17, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb5__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _6<br/>_18 = Eq(move _19, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb7__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(const 0_u32)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_10 = const ()<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _7<br/></td></tr><tr><td align="left">_21 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _22)</td></tr></table>>];
    bb9__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _5<br/></td></tr><tr><td align="left">_28 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _29)</td></tr></table>>];
    bb10__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb11__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_30 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb12__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Continue).0: u128)<br/>_26 = _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>_36 = Eq(const _, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _36, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb13__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb15__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_35 = Div(const _, const _)<br/></td></tr><tr><td align="left">_25 = &lt;u128 as SafeMath&gt;::safe_mul(move _26, move _35)</td></tr></table>>];
    bb17__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb18__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_37 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb19__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_24 as Continue).0: u128)<br/>_23 = _41<br/>StorageDead(_41)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _3<br/></td></tr><tr><td align="left">_47 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _48)</td></tr></table>>];
    bb20__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb21__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb23__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_49 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb24__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_46 as Continue).0: u128)<br/>_45 = _53<br/>StorageDead(_53)<br/>StorageLive(_54)<br/>_55 = Eq(const _, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _55, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb25__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb26__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_54 = Div(const _, const _)<br/></td></tr><tr><td align="left">_44 = &lt;u128 as SafeMath&gt;::safe_mul(move _45, move _54)</td></tr></table>>];
    bb28__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb29__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_56 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb30__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_43 as Continue).0: u128)<br/>_42 = _60<br/>StorageDead(_60)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _23<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _42<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _4<br/></td></tr><tr><td align="left">_81 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _82)</td></tr></table>>];
    bb31__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb32__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb34__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_83 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb35__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_80 as Continue).0: u128)<br/>_79 = _87<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_77 = &lt;u128 as SafeMath&gt;::safe_mul(move _78, move _79)</td></tr></table>>];
    bb36__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb37__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb39__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_88 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb40__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_76 as Continue).0: u128)<br/>_75 = _92<br/>StorageDead(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _6<br/></td></tr><tr><td align="left">_95 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _96)</td></tr></table>>];
    bb41__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_91)<br/>_91 = _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb42__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb44__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_97 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb45__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_94 as Continue).0: u128)<br/>_93 = _101<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_74 = &lt;u128 as SafeMath&gt;::safe_div(move _75, move _93)</td></tr></table>>];
    bb46__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb47__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb49__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_102 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb50__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_73 as Continue).0: u128)<br/>_72 = _106<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_70 = core::num::&lt;impl u128&gt;::saturating_sub(move _71, move _72)</td></tr></table>>];
    bb51__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb52__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = _1<br/></td></tr><tr><td align="left">_118 = &lt;u128 as SafeMath&gt;::safe_mul(move _119, const _)</td></tr></table>>];
    bb54__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb55__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_120 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb56__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_117 as Continue).0: u128)<br/>_116 = _124<br/>StorageDead(_124)<br/>StorageLive(_125)<br/>_125 = _21<br/></td></tr><tr><td align="left">_115 = &lt;u128 as SafeMath&gt;::safe_mul(move _116, move _125)</td></tr></table>>];
    bb57__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb58__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _115)</td></tr></table>>];
    bb60__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_126 = discriminant(_114)<br/></td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb61__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_114 as Continue).0: u128)<br/>_113 = _130<br/>StorageDead(_130)<br/>StorageLive(_131)<br/>_131 = _2<br/></td></tr><tr><td align="left">_112 = &lt;u128 as SafeMath&gt;::safe_div(move _113, move _131)</td></tr></table>>];
    bb62__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_127)<br/>_127 = ((_114 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_129)<br/>_129 = _127<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _129)</td></tr></table>>];
    bb63__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb65__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_132 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb66__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_111 as Continue).0: u128)<br/>_110 = _136<br/>StorageDead(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = _8<br/></td></tr><tr><td align="left">_139 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _140)</td></tr></table>>];
    bb67__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb68__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">_138 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _139)</td></tr></table>>];
    bb70__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_141 = discriminant(_138)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb71__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_138 as Continue).0: u128)<br/>_137 = _145<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_109 = &lt;u128 as SafeMath&gt;::safe_div(move _110, move _137)</td></tr></table>>];
    bb72__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_138 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb73__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_137)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _109)</td></tr></table>>];
    bb75__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_146 = discriminant(_108)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb76__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_108 as Continue).0: u128)<br/>_107 = _150<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_69 = core::num::&lt;impl u128&gt;::saturating_sub(move _70, move _107)</td></tr></table>>];
    bb77__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_108 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb78__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;u128 as SafeMath&gt;::safe_mul(move _69, const _)</td></tr></table>>];
    bb80__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb81__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_151 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb82__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_67 as Continue).0: u128)<br/>_66 = _155<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>_156 = _23<br/></td></tr><tr><td align="left">_65 = &lt;u128 as SafeMath&gt;::safe_div(move _66, move _156)</td></tr></table>>];
    bb83__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb84__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb86__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_157 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _157)</td></tr></table>>];
    bb87__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = ((_64 as Continue).0: u128)<br/>_63 = _161<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_62 = &lt;u128 as Cast&gt;::cast::&lt;u32&gt;(move _63)</td></tr></table>>];
    bb88__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_160)<br/>_160 = _158<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _160)</td></tr></table>>];
    bb89__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = std::result::Result::&lt;u32, error::ErrorCode&gt;::unwrap_or(move _62, const _)</td></tr></table>>];
    bb91__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_138)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_94)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = _9<br/>StorageLive(_164)<br/>_164 = _61<br/></td></tr><tr><td align="left">_162 = &lt;u32 as Ord&gt;::min(move _163, move _164)</td></tr></table>>];
    bb92__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_163)<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(move _162)<br/>StorageDead(_162)<br/>StorageDead(_61)<br/>StorageDead(_42)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_2399 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2399 -> bb2__0_2399 [label="0"];
    bb0__0_2399 -> bb1__0_2399 [label="otherwise"];
    bb1__0_2399 -> bb3__0_2399 [label=""];
    bb2__0_2399 -> bb4__0_2399 [label="0"];
    bb2__0_2399 -> bb3__0_2399 [label="otherwise"];
    bb3__0_2399 -> bb5__0_2399 [label=""];
    bb4__0_2399 -> bb6__0_2399 [label="0"];
    bb4__0_2399 -> bb5__0_2399 [label="otherwise"];
    bb5__0_2399 -> bb7__0_2399 [label=""];
    bb6__0_2399 -> bb8__0_2399 [label="0"];
    bb6__0_2399 -> bb7__0_2399 [label="otherwise"];
    bb7__0_2399 -> bb107__0_2399 [label=""];
    bb8__0_2399 -> bb9__0_2399 [label="return"];
    bb9__0_2399 -> bb10__0_2399 [label="return"];
    bb10__0_2399 -> bb11__0_2399 [label="return"];
    bb11__0_2399 -> bb12__0_2399 [label="0"];
    bb11__0_2399 -> bb14__0_2399 [label="1"];
    bb11__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb12__0_2399 -> bb16__0_2399 [label="success"];
    bb14__0_2399 -> bb15__0_2399 [label="return"];
    bb15__0_2399 -> bb105__0_2399 [label=""];
    bb16__0_2399 -> bb17__0_2399 [label="return"];
    bb17__0_2399 -> bb18__0_2399 [label="return"];
    bb18__0_2399 -> bb19__0_2399 [label="0"];
    bb18__0_2399 -> bb20__0_2399 [label="1"];
    bb18__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb19__0_2399 -> bb22__0_2399 [label="return"];
    bb20__0_2399 -> bb21__0_2399 [label="return"];
    bb21__0_2399 -> bb105__0_2399 [label=""];
    bb22__0_2399 -> bb23__0_2399 [label="return"];
    bb23__0_2399 -> bb24__0_2399 [label="0"];
    bb23__0_2399 -> bb25__0_2399 [label="1"];
    bb23__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb24__0_2399 -> bb27__0_2399 [label="success"];
    bb25__0_2399 -> bb26__0_2399 [label="return"];
    bb26__0_2399 -> bb103__0_2399 [label=""];
    bb27__0_2399 -> bb28__0_2399 [label="return"];
    bb28__0_2399 -> bb29__0_2399 [label="return"];
    bb29__0_2399 -> bb30__0_2399 [label="0"];
    bb29__0_2399 -> bb31__0_2399 [label="1"];
    bb29__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb30__0_2399 -> bb33__0_2399 [label="return"];
    bb31__0_2399 -> bb32__0_2399 [label="return"];
    bb32__0_2399 -> bb103__0_2399 [label=""];
    bb33__0_2399 -> bb34__0_2399 [label="return"];
    bb34__0_2399 -> bb35__0_2399 [label="0"];
    bb34__0_2399 -> bb36__0_2399 [label="1"];
    bb34__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb35__0_2399 -> bb38__0_2399 [label="return"];
    bb36__0_2399 -> bb37__0_2399 [label="return"];
    bb37__0_2399 -> bb101__0_2399 [label=""];
    bb38__0_2399 -> bb39__0_2399 [label="return"];
    bb39__0_2399 -> bb40__0_2399 [label="0"];
    bb39__0_2399 -> bb41__0_2399 [label="1"];
    bb39__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb40__0_2399 -> bb43__0_2399 [label="return"];
    bb41__0_2399 -> bb42__0_2399 [label="return"];
    bb42__0_2399 -> bb101__0_2399 [label=""];
    bb43__0_2399 -> bb44__0_2399 [label="return"];
    bb44__0_2399 -> bb45__0_2399 [label="0"];
    bb44__0_2399 -> bb46__0_2399 [label="1"];
    bb44__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb45__0_2399 -> bb48__0_2399 [label="return"];
    bb46__0_2399 -> bb47__0_2399 [label="return"];
    bb47__0_2399 -> bb99__0_2399 [label=""];
    bb48__0_2399 -> bb49__0_2399 [label="return"];
    bb49__0_2399 -> bb50__0_2399 [label="0"];
    bb49__0_2399 -> bb51__0_2399 [label="1"];
    bb49__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb50__0_2399 -> bb53__0_2399 [label="return"];
    bb51__0_2399 -> bb52__0_2399 [label="return"];
    bb52__0_2399 -> bb99__0_2399 [label=""];
    bb53__0_2399 -> bb54__0_2399 [label="return"];
    bb54__0_2399 -> bb55__0_2399 [label="return"];
    bb55__0_2399 -> bb56__0_2399 [label="0"];
    bb55__0_2399 -> bb57__0_2399 [label="1"];
    bb55__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb56__0_2399 -> bb59__0_2399 [label="return"];
    bb57__0_2399 -> bb58__0_2399 [label="return"];
    bb58__0_2399 -> bb96__0_2399 [label=""];
    bb59__0_2399 -> bb60__0_2399 [label="return"];
    bb60__0_2399 -> bb61__0_2399 [label="0"];
    bb60__0_2399 -> bb62__0_2399 [label="1"];
    bb60__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb61__0_2399 -> bb64__0_2399 [label="return"];
    bb62__0_2399 -> bb63__0_2399 [label="return"];
    bb63__0_2399 -> bb96__0_2399 [label=""];
    bb64__0_2399 -> bb65__0_2399 [label="return"];
    bb65__0_2399 -> bb66__0_2399 [label="0"];
    bb65__0_2399 -> bb67__0_2399 [label="1"];
    bb65__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb66__0_2399 -> bb69__0_2399 [label="return"];
    bb67__0_2399 -> bb68__0_2399 [label="return"];
    bb68__0_2399 -> bb97__0_2399 [label=""];
    bb69__0_2399 -> bb70__0_2399 [label="return"];
    bb70__0_2399 -> bb71__0_2399 [label="0"];
    bb70__0_2399 -> bb72__0_2399 [label="1"];
    bb70__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb71__0_2399 -> bb74__0_2399 [label="return"];
    bb72__0_2399 -> bb73__0_2399 [label="return"];
    bb73__0_2399 -> bb93__0_2399 [label=""];
    bb74__0_2399 -> bb75__0_2399 [label="return"];
    bb75__0_2399 -> bb76__0_2399 [label="0"];
    bb75__0_2399 -> bb77__0_2399 [label="1"];
    bb75__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb76__0_2399 -> bb79__0_2399 [label="return"];
    bb77__0_2399 -> bb78__0_2399 [label="return"];
    bb78__0_2399 -> bb93__0_2399 [label=""];
    bb79__0_2399 -> bb80__0_2399 [label="return"];
    bb80__0_2399 -> bb81__0_2399 [label="return"];
    bb81__0_2399 -> bb82__0_2399 [label="0"];
    bb81__0_2399 -> bb83__0_2399 [label="1"];
    bb81__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb82__0_2399 -> bb85__0_2399 [label="return"];
    bb83__0_2399 -> bb84__0_2399 [label="return"];
    bb84__0_2399 -> bb94__0_2399 [label=""];
    bb85__0_2399 -> bb86__0_2399 [label="return"];
    bb86__0_2399 -> bb87__0_2399 [label="0"];
    bb86__0_2399 -> bb88__0_2399 [label="1"];
    bb86__0_2399 -> bb13__0_2399 [label="otherwise"];
    bb87__0_2399 -> bb90__0_2399 [label="return"];
    bb88__0_2399 -> bb89__0_2399 [label="return"];
    bb89__0_2399 -> bb95__0_2399 [label=""];
    bb90__0_2399 -> bb91__0_2399 [label="return"];
    bb91__0_2399 -> bb92__0_2399 [label="return"];
    bb92__0_2399 -> bb107__0_2399 [label=""];
    bb93__0_2399 -> bb94__0_2399 [label=""];
    bb94__0_2399 -> bb95__0_2399 [label=""];
    bb95__0_2399 -> bb98__0_2399 [label=""];
    bb96__0_2399 -> bb97__0_2399 [label=""];
    bb97__0_2399 -> bb98__0_2399 [label=""];
    bb98__0_2399 -> bb100__0_2399 [label=""];
    bb99__0_2399 -> bb100__0_2399 [label=""];
    bb100__0_2399 -> bb102__0_2399 [label=""];
    bb101__0_2399 -> bb102__0_2399 [label=""];
    bb102__0_2399 -> bb104__0_2399 [label=""];
    bb103__0_2399 -> bb104__0_2399 [label=""];
    bb104__0_2399 -> bb106__0_2399 [label=""];
    bb105__0_2399 -> bb106__0_2399 [label=""];
    bb106__0_2399 -> bb107__0_2399 [label=""];
}
