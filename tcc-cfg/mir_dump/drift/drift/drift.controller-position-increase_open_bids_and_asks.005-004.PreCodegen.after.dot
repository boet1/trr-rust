digraph Mir_0_694 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn increase_open_bids_and_asks(_1: &amp;ReErased mut state::user::PerpPosition, _2: &amp;ReErased controller::position::PositionDirection, _3: u64, _4: bool) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: ();<br align="left"/>let _9: ();<br align="left"/>let mut _10: isize;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _13: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _14: i64;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: i64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: i64;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: i64;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: i64;<br align="left"/>let mut _47: ();<br align="left"/>debug position =&gt; _1;<br align="left"/>debug direction =&gt; _2;<br align="left"/>debug base_asset_amount_unfilled =&gt; _3;<br align="left"/>debug update =&gt; _4;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>>;
    bb0__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _4<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>_10 = discriminant((*_2))<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = ((*_1).6: i64)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _3<br/></td></tr><tr><td align="left">_35 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _36)</td></tr></table>>];
    bb4__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = ((*_1).5: i64)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _3<br/></td></tr><tr><td align="left">_17 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _18)</td></tr></table>>];
    bb6__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb7__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb8__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_16 as Continue).0: i64)<br/>_15 = _23<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_13 = &lt;i64 as SafeMath&gt;::safe_add(move _14, move _15)</td></tr></table>>];
    bb9__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb10__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb12__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_24 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb13__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_12 as Continue).0: i64)<br/>_11 = _28<br/>StorageDead(_28)<br/>((*_1).5: i64) = move _11<br/>StorageDead(_11)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>_9 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb15__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb17__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb18__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: i64)<br/>_33 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_31 = &lt;i64 as SafeMath&gt;::safe_sub(move _32, move _33)</td></tr></table>>];
    bb19__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb20__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb22__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_42 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb23__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_30 as Continue).0: i64)<br/>_29 = _46<br/>StorageDead(_46)<br/>((*_1).6: i64) = move _29<br/>StorageDead(_29)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>_9 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb25__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_47)<br/>_47 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _47)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_694 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_694 -> bb1__0_694 [label="0"];
    bb0__0_694 -> bb2__0_694 [label="otherwise"];
    bb1__0_694 -> bb30__0_694 [label=""];
    bb2__0_694 -> bb5__0_694 [label="0"];
    bb2__0_694 -> bb3__0_694 [label="1"];
    bb2__0_694 -> bb4__0_694 [label="otherwise"];
    bb3__0_694 -> bb16__0_694 [label="return"];
    bb5__0_694 -> bb6__0_694 [label="return"];
    bb6__0_694 -> bb7__0_694 [label="return"];
    bb7__0_694 -> bb8__0_694 [label="0"];
    bb7__0_694 -> bb9__0_694 [label="1"];
    bb7__0_694 -> bb4__0_694 [label="otherwise"];
    bb8__0_694 -> bb11__0_694 [label="return"];
    bb9__0_694 -> bb10__0_694 [label="return"];
    bb10__0_694 -> bb28__0_694 [label=""];
    bb11__0_694 -> bb12__0_694 [label="return"];
    bb12__0_694 -> bb13__0_694 [label="0"];
    bb12__0_694 -> bb14__0_694 [label="1"];
    bb12__0_694 -> bb4__0_694 [label="otherwise"];
    bb13__0_694 -> bb26__0_694 [label=""];
    bb14__0_694 -> bb15__0_694 [label="return"];
    bb15__0_694 -> bb28__0_694 [label=""];
    bb16__0_694 -> bb17__0_694 [label="return"];
    bb17__0_694 -> bb18__0_694 [label="0"];
    bb17__0_694 -> bb19__0_694 [label="1"];
    bb17__0_694 -> bb4__0_694 [label="otherwise"];
    bb18__0_694 -> bb21__0_694 [label="return"];
    bb19__0_694 -> bb20__0_694 [label="return"];
    bb20__0_694 -> bb27__0_694 [label=""];
    bb21__0_694 -> bb22__0_694 [label="return"];
    bb22__0_694 -> bb23__0_694 [label="0"];
    bb22__0_694 -> bb24__0_694 [label="1"];
    bb22__0_694 -> bb4__0_694 [label="otherwise"];
    bb23__0_694 -> bb26__0_694 [label=""];
    bb24__0_694 -> bb25__0_694 [label="return"];
    bb25__0_694 -> bb27__0_694 [label=""];
    bb26__0_694 -> bb30__0_694 [label=""];
    bb27__0_694 -> bb29__0_694 [label=""];
    bb28__0_694 -> bb29__0_694 [label=""];
    bb29__0_694 -> bb30__0_694 [label=""];
}
