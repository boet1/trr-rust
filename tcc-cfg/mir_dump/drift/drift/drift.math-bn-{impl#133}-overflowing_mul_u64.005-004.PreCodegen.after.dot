digraph Mir_0_14541 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U192::overflowing_mul_u64(_1: math::bn::U192, _2: u64) -&gt; (math::bn::U192, u64)<br align="left"/>let mut _3: u64;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::slice::IterMut&lt;ReErased, u64&gt;;<br align="left"/>let mut _6: std::slice::IterMut&lt;ReErased, u64&gt;;<br align="left"/>let mut _7: &amp;ReErased mut [u64];<br align="left"/>let mut _8: &amp;ReErased mut [u64; 3_usize];<br align="left"/>let mut _9: std::slice::IterMut&lt;ReErased, u64&gt;;<br align="left"/>let mut _10: ();<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::option::Option&lt;&amp;ReErased mut u64&gt;;<br align="left"/>let mut _13: &amp;ReErased mut std::slice::IterMut&lt;ReErased, u64&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::slice::IterMut&lt;ReErased, u64&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: !;<br align="left"/>let _17: &amp;ReErased mut u64;<br align="left"/>let _18: u64;<br align="left"/>let _19: u64;<br align="left"/>let mut _20: (u64, u64);<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: math::bn::U192;<br align="left"/>let mut _27: u64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug carry =&gt; _3;<br align="left"/>debug iter =&gt; _9;<br align="left"/>debug d =&gt; _17;<br align="left"/>debug res =&gt; _18;<br align="left"/>debug c =&gt; _19;<br align="left"/>>;
    bb0__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = const 0_u64<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (_1.0: [u64; 3])<br/>_7 = move _8 as &amp;mut [u64] (PointerCoercion(Unsize))<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [u64]&gt;::iter_mut(move _7)</td></tr></table>>];
    bb1__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::slice::IterMut&lt;'_, u64&gt; as IntoIterator&gt;::into_iter(move _6)</td></tr></table>>];
    bb2__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_9)<br/>_9 = move _5<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _9<br/>_13 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::slice::IterMut&lt;'_, u64&gt; as Iterator&gt;::next(move _13)</td></tr></table>>];
    bb4__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_15 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb5__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_12 as Some).0: &amp;mut u64)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = (*_17)<br/>StorageLive(_22)<br/>_22 = _2<br/>StorageLive(_23)<br/>_23 = _3<br/></td></tr><tr><td align="left">_20 = U192::mul_u64(move _21, move _22, move _23)</td></tr></table>>];
    bb6__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_4 = const ()<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_26)<br/>_26 = _1<br/>StorageLive(_27)<br/>_27 = _3<br/>_0 = (move _26, move _27)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb8__0_14541 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_18)<br/>_18 = (_20.0: u64)<br/>StorageLive(_19)<br/>_19 = (_20.1: u64)<br/>StorageDead(_20)<br/>StorageLive(_24)<br/>_24 = _18<br/>(*_17) = move _24<br/>StorageDead(_24)<br/>StorageLive(_25)<br/>_25 = _19<br/>_3 = move _25<br/>StorageDead(_25)<br/>_11 = const ()<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_10 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_14541 -> bb1__0_14541 [label="return"];
    bb1__0_14541 -> bb2__0_14541 [label="return"];
    bb2__0_14541 -> bb3__0_14541 [label=""];
    bb3__0_14541 -> bb4__0_14541 [label="return"];
    bb4__0_14541 -> bb7__0_14541 [label="0"];
    bb4__0_14541 -> bb5__0_14541 [label="1"];
    bb4__0_14541 -> bb6__0_14541 [label="otherwise"];
    bb5__0_14541 -> bb8__0_14541 [label="return"];
    bb8__0_14541 -> bb3__0_14541 [label=""];
}
