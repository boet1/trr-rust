digraph Mir_0_2800 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_token_value(_1: i128, _2: u32, _3: i64) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: !;<br align="left"/>let _8: i128;<br align="left"/>let mut _9: u32;<br align="left"/>let _10: i128;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _13: i128;<br align="left"/>let mut _14: i128;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _16: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _17: i64;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: i128;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: i128;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: i128;<br align="left"/>let mut _30: i128;<br align="left"/>let mut _31: i128;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: i128;<br align="left"/>debug token_amount =&gt; _1;<br align="left"/>debug spot_decimals =&gt; _2;<br align="left"/>debug oracle_price =&gt; _3;<br align="left"/>debug precision_decrease =&gt; _8;<br align="left"/>debug token_with_oracle =&gt; _10;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>>;
    bb0__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>_5 = Eq(move _6, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(const 0_i128)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _2<br/></td></tr><tr><td align="left">_8 = core::num::&lt;impl i128&gt;::pow(const 10_i128, move _9)</td></tr></table>>];
    bb3__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _1<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _3<br/></td></tr><tr><td align="left">_16 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _17)</td></tr></table>>];
    bb4__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb5__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_18 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb6__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_15 as Continue).0: i128)<br/>_14 = _22<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_12 = &lt;i128 as SafeMath&gt;::safe_mul(move _13, move _14)</td></tr></table>>];
    bb7__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb9__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb11__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_23 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb12__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_11 as Continue).0: i128)<br/>_10 = _27<br/>StorageDead(_27)<br/>StorageDead(_15)<br/>StorageDead(_11)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _10<br/>_28 = Lt(move _29, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb13__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb14__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = _10<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _8<br/></td></tr><tr><td align="left">_31 = core::num::&lt;impl i128&gt;::abs(move _32)</td></tr></table>>];
    bb16__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_33)<br/>_33 = _10<br/>StorageLive(_34)<br/>_34 = _8<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_div(move _33, move _34)</td></tr></table>>];
    bb17__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeDivFloor&gt;::safe_div_floor(move _30, move _31)</td></tr></table>>];
    bb18__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2800 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2800 -> bb2__0_2800 [label="0"];
    bb0__0_2800 -> bb1__0_2800 [label="otherwise"];
    bb1__0_2800 -> bb22__0_2800 [label=""];
    bb2__0_2800 -> bb3__0_2800 [label="return"];
    bb3__0_2800 -> bb4__0_2800 [label="return"];
    bb4__0_2800 -> bb5__0_2800 [label="return"];
    bb5__0_2800 -> bb6__0_2800 [label="0"];
    bb5__0_2800 -> bb8__0_2800 [label="1"];
    bb5__0_2800 -> bb7__0_2800 [label="otherwise"];
    bb6__0_2800 -> bb10__0_2800 [label="return"];
    bb8__0_2800 -> bb9__0_2800 [label="return"];
    bb9__0_2800 -> bb21__0_2800 [label=""];
    bb10__0_2800 -> bb11__0_2800 [label="return"];
    bb11__0_2800 -> bb12__0_2800 [label="0"];
    bb11__0_2800 -> bb13__0_2800 [label="1"];
    bb11__0_2800 -> bb7__0_2800 [label="otherwise"];
    bb12__0_2800 -> bb16__0_2800 [label="0"];
    bb12__0_2800 -> bb15__0_2800 [label="otherwise"];
    bb13__0_2800 -> bb14__0_2800 [label="return"];
    bb14__0_2800 -> bb21__0_2800 [label=""];
    bb15__0_2800 -> bb17__0_2800 [label="return"];
    bb16__0_2800 -> bb19__0_2800 [label="return"];
    bb17__0_2800 -> bb18__0_2800 [label="return"];
    bb18__0_2800 -> bb20__0_2800 [label=""];
    bb19__0_2800 -> bb20__0_2800 [label=""];
    bb20__0_2800 -> bb22__0_2800 [label=""];
    bb21__0_2800 -> bb22__0_2800 [label=""];
}
