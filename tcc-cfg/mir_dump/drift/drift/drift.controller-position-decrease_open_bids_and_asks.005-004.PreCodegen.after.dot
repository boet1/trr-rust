digraph Mir_0_695 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn decrease_open_bids_and_asks(_1: &amp;ReErased mut state::user::PerpPosition, _2: &amp;ReErased controller::position::PositionDirection, _3: u64, _4: bool) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: ();<br align="left"/>let _9: ();<br align="left"/>let mut _10: isize;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _14: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: i64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _33: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _34: i64;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _37: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: i64;<br align="left"/>let mut _49: ();<br align="left"/>debug position =&gt; _1;<br align="left"/>debug direction =&gt; _2;<br align="left"/>debug base_asset_amount_unfilled =&gt; _3;<br align="left"/>debug update =&gt; _4;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>>;
    bb0__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _4<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>_10 = discriminant((*_2))<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = ((*_1).6: i64)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _3<br/></td></tr><tr><td align="left">_37 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _38)</td></tr></table>>];
    bb4__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = ((*_1).5: i64)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/></td></tr><tr><td align="left">_18 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _19)</td></tr></table>>];
    bb6__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb7__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_20 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb8__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Continue).0: i64)<br/>_16 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_14 = &lt;i64 as SafeMath&gt;::safe_sub(move _15, move _16)</td></tr></table>>];
    bb9__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb10__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb12__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_25 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb13__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_13 as Continue).0: i64)<br/>_12 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_11 = &lt;i64 as Ord&gt;::max(move _12, const 0_i64)</td></tr></table>>];
    bb14__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb15__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>((*_1).5: i64) = move _11<br/>StorageDead(_11)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>_9 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb18__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb19__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_36 as Continue).0: i64)<br/>_35 = _43<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_33 = &lt;i64 as SafeMath&gt;::safe_add(move _34, move _35)</td></tr></table>>];
    bb20__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb21__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb23__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_44 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb24__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_32 as Continue).0: i64)<br/>_31 = _48<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_30 = &lt;i64 as Ord&gt;::min(move _31, const 0_i64)</td></tr></table>>];
    bb25__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb26__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>((*_1).6: i64) = move _30<br/>StorageDead(_30)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>_9 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_49)<br/>_49 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_695 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_695 -> bb1__0_695 [label="0"];
    bb0__0_695 -> bb2__0_695 [label="otherwise"];
    bb1__0_695 -> bb32__0_695 [label=""];
    bb2__0_695 -> bb5__0_695 [label="0"];
    bb2__0_695 -> bb3__0_695 [label="1"];
    bb2__0_695 -> bb4__0_695 [label="otherwise"];
    bb3__0_695 -> bb17__0_695 [label="return"];
    bb5__0_695 -> bb6__0_695 [label="return"];
    bb6__0_695 -> bb7__0_695 [label="return"];
    bb7__0_695 -> bb8__0_695 [label="0"];
    bb7__0_695 -> bb9__0_695 [label="1"];
    bb7__0_695 -> bb4__0_695 [label="otherwise"];
    bb8__0_695 -> bb11__0_695 [label="return"];
    bb9__0_695 -> bb10__0_695 [label="return"];
    bb10__0_695 -> bb30__0_695 [label=""];
    bb11__0_695 -> bb12__0_695 [label="return"];
    bb12__0_695 -> bb13__0_695 [label="0"];
    bb12__0_695 -> bb14__0_695 [label="1"];
    bb12__0_695 -> bb4__0_695 [label="otherwise"];
    bb13__0_695 -> bb16__0_695 [label="return"];
    bb14__0_695 -> bb15__0_695 [label="return"];
    bb15__0_695 -> bb30__0_695 [label=""];
    bb16__0_695 -> bb28__0_695 [label=""];
    bb17__0_695 -> bb18__0_695 [label="return"];
    bb18__0_695 -> bb19__0_695 [label="0"];
    bb18__0_695 -> bb20__0_695 [label="1"];
    bb18__0_695 -> bb4__0_695 [label="otherwise"];
    bb19__0_695 -> bb22__0_695 [label="return"];
    bb20__0_695 -> bb21__0_695 [label="return"];
    bb21__0_695 -> bb29__0_695 [label=""];
    bb22__0_695 -> bb23__0_695 [label="return"];
    bb23__0_695 -> bb24__0_695 [label="0"];
    bb23__0_695 -> bb25__0_695 [label="1"];
    bb23__0_695 -> bb4__0_695 [label="otherwise"];
    bb24__0_695 -> bb27__0_695 [label="return"];
    bb25__0_695 -> bb26__0_695 [label="return"];
    bb26__0_695 -> bb29__0_695 [label=""];
    bb27__0_695 -> bb28__0_695 [label=""];
    bb28__0_695 -> bb32__0_695 [label=""];
    bb29__0_695 -> bb31__0_695 [label=""];
    bb30__0_695 -> bb31__0_695 [label=""];
    bb31__0_695 -> bb32__0_695 [label=""];
}
