// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:298:1: 298:16>::is_reduce_only` before PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:298:1: 298:16>::is_reduce_only(_1: &PerpMarket) -> std::result::Result<bool, error::ErrorCode> {
    debug self => _1;
    let mut _0: std::result::Result<bool, error::ErrorCode>;
    let mut _2: bool;
    let mut _3: &state::perp_market::MarketStatus;
    let mut _4: &state::perp_market::MarketStatus;
    let _5: state::perp_market::MarketStatus;
    let mut _6: &state::perp_market::MarketStatus;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = &((*_1).22: state::perp_market::MarketStatus);
        StorageLive(_4);
        _6 = const _;
        _4 = &(*_6);
        _2 = <state::perp_market::MarketStatus as PartialEq>::eq(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        _0 = std::result::Result::<bool, error::ErrorCode>::Ok(move _2);
        StorageDead(_2);
        return;
    }
}
