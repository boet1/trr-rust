digraph Mir_0_19686 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn __global::update_spot_market_fuel(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: &amp;ReErased str;<br align="left"/>let _6: &amp;ReErased str;<br align="left"/>let _7: instruction::UpdateSpotMarketFuel;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, instruction::UpdateSpotMarketFuel&gt;;<br align="left"/>let mut _9: std::result::Result&lt;instruction::UpdateSpotMarketFuel, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _10: std::result::Result&lt;instruction::UpdateSpotMarketFuel, std::io::Error&gt;;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased [u8];<br align="left"/>let _14: &amp;ReErased [u8];<br align="left"/>let mut _15: &amp;ReErased [u8];<br align="left"/>let mut _16: std::ops::RangeFull;<br align="left"/>let mut _17: Closure(DefId(0:19688 ~ drift[d311]::__private::__global::update_spot_market_fuel::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _22: instruction::UpdateSpotMarketFuel;<br align="left"/>let _23: std::option::Option&lt;u8&gt;;<br align="left"/>let _24: std::option::Option&lt;u8&gt;;<br align="left"/>let _25: std::option::Option&lt;u8&gt;;<br align="left"/>let _26: std::option::Option&lt;u8&gt;;<br align="left"/>let _27: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _28: instructions::admin::AdminUpdateSpotMarketFuelBumps;<br align="left"/>let mut _29: std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _31: instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;&gt;;<br align="left"/>let mut _33: std::result::Result&lt;instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _35: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _36: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [u8];<br align="left"/>let mut _38: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarketFuelBumps;<br align="left"/>let mut _39: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarketFuelBumps;<br align="left"/>let mut _40: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _41: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _46: instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _50: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _52: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _55: instructions::admin::AdminUpdateSpotMarketFuelBumps;<br align="left"/>let mut _56: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _57: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _58: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _59: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _60: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _65: ();<br align="left"/>let mut _66: &amp;ReErased instructions::admin::AdminUpdateSpotMarketFuel&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug ix =&gt; _7;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug fuel_boost_deposits =&gt; _23;<br align="left"/>debug fuel_boost_borrows =&gt; _24;<br align="left"/>debug fuel_boost_taker =&gt; _25;<br align="left"/>debug fuel_boost_maker =&gt; _26;<br align="left"/>debug fuel_boost_insurance =&gt; _27;<br align="left"/>debug __bumps =&gt; _28;<br align="left"/>debug __reallocs =&gt; _29;<br align="left"/>debug __remaining_accounts =&gt; _30;<br align="left"/>debug __accounts =&gt; _31;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug result =&gt; _47;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>>;
    bb0__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = const &quot;Instruction: UpdateSpotMarketFuel&quot;<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = solana_program::log::sol_log(move _5)</td></tr></table>>];
    bb1__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/>StorageLive(_16)<br/>_16 = RangeFull<br/></td></tr><tr><td align="left">_14 = &lt;[u8] as Index&lt;RangeFull&gt;&gt;::index(move _15, move _16)</td></tr></table>>];
    bb2__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>_13 = &amp;(*_14)<br/>_12 = &amp;mut _13<br/>_11 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_10 = &lt;UpdateSpotMarketFuel as BorshDeserialize&gt;::deserialize(move _11)</td></tr></table>>];
    bb3__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_17)<br/>_17 = {closure@programs/drift/src/lib.rs:69:1: 69:11}<br/></td></tr><tr><td align="left">_9 = std::result::Result::&lt;UpdateSpotMarketFuel, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/lib.rs:69:1: 69:11}&gt;(move _10, move _17)</td></tr></table>>];
    bb4__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;UpdateSpotMarketFuel, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb5__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_18 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb6__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_8 as Continue).0: instruction::UpdateSpotMarketFuel)<br/>_7 = move _22<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageLive(_23)<br/>_23 = (_7.0: std::option::Option&lt;u8&gt;)<br/>StorageLive(_24)<br/>_24 = (_7.1: std::option::Option&lt;u8&gt;)<br/>StorageLive(_25)<br/>_25 = (_7.2: std::option::Option&lt;u8&gt;)<br/>StorageLive(_26)<br/>_26 = (_7.3: std::option::Option&lt;u8&gt;)<br/>StorageLive(_27)<br/>_27 = (_7.4: std::option::Option&lt;u8&gt;)<br/>StorageLive(_28)<br/></td></tr><tr><td align="left">_28 = &lt;AdminUpdateSpotMarketFuelBumps as Default&gt;::default()</td></tr></table>>];
    bb7__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb9__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/></td></tr><tr><td align="left">_29 = BTreeSet::&lt;anchor_lang::prelude::Pubkey&gt;::new()</td></tr></table>>];
    bb11__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = &amp;(*_2)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_1)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;mut _30<br/>_35 = &amp;mut (*_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_3)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;mut _28<br/>_38 = &amp;mut (*_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;mut _29<br/>_40 = &amp;mut (*_41)<br/></td></tr><tr><td align="left">_33 = &lt;admin::AdminUpdateSpotMarketFuel&lt;'_&gt; as anchor_lang::Accounts&lt;'_, AdminUpdateSpotMarketFuelBumps&gt;&gt;::try_accounts(move _34, move _35, move _37, move _38, move _40)</td></tr></table>>];
    bb12__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;admin::AdminUpdateSpotMarketFuel&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb13__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_42 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb14__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_32 as Continue).0: instructions::admin::AdminUpdateSpotMarketFuel&lt;'_&gt;)<br/>_31 = move _46<br/>StorageDead(_46)<br/>_68 = discriminant(_32)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_1)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;mut _31<br/>_52 = &amp;mut (*_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_30)<br/>StorageLive(_55)<br/>_55 = move _28<br/></td></tr><tr><td align="left">_50 = anchor_lang::context::Context::&lt;'_, '_, '_, '_, admin::AdminUpdateSpotMarketFuel&lt;'_&gt;&gt;::new(move _51, move _52, move _54, move _55)</td></tr></table>>];
    bb15__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb16__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_74 = discriminant(_32)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_56)<br/>_56 = _23<br/>StorageLive(_57)<br/>_57 = _24<br/>StorageLive(_58)<br/>_58 = _25<br/>StorageLive(_59)<br/>_59 = _26<br/>StorageLive(_60)<br/>_60 = _27<br/></td></tr><tr><td align="left">_49 = drift::update_spot_market_fuel(move _50, move _56, move _57, move _58, move _59, move _60)</td></tr></table>>];
    bb18__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb19__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_61 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb20__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_48 as Continue).0: ())<br/>_47 = _65<br/>StorageDead(_65)<br/>_70 = discriminant(_48)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageLive(_66)<br/>_66 = &amp;_31<br/>StorageLive(_67)<br/>_67 = &amp;(*_1)<br/></td></tr><tr><td align="left">_0 = &lt;admin::AdminUpdateSpotMarketFuel&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _66, move _67)</td></tr></table>>];
    bb21__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb22__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>_72 = discriminant(_48)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb23__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb24__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb25__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb27__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">return</td></tr></table>>];
    bb30__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb31__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb32__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb33__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left" balign="left">_76 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_19686 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left" balign="left">_77 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_19686 -> bb1__0_19686 [label="return"];
    bb1__0_19686 -> bb2__0_19686 [label="return"];
    bb2__0_19686 -> bb3__0_19686 [label="return"];
    bb3__0_19686 -> bb4__0_19686 [label="return"];
    bb3__0_19686 -> bb32__0_19686 [label="unwind"];
    bb4__0_19686 -> bb5__0_19686 [label="return"];
    bb5__0_19686 -> bb6__0_19686 [label="0"];
    bb5__0_19686 -> bb8__0_19686 [label="1"];
    bb5__0_19686 -> bb7__0_19686 [label="otherwise"];
    bb6__0_19686 -> bb10__0_19686 [label="return"];
    bb8__0_19686 -> bb9__0_19686 [label="return"];
    bb9__0_19686 -> bb28__0_19686 [label=""];
    bb10__0_19686 -> bb11__0_19686 [label="return"];
    bb11__0_19686 -> bb12__0_19686 [label="return"];
    bb11__0_19686 -> bb31__0_19686 [label="unwind"];
    bb12__0_19686 -> bb13__0_19686 [label="return"];
    bb12__0_19686 -> bb31__0_19686 [label="unwind"];
    bb13__0_19686 -> bb14__0_19686 [label="0"];
    bb13__0_19686 -> bb15__0_19686 [label="1"];
    bb13__0_19686 -> bb7__0_19686 [label="otherwise"];
    bb14__0_19686 -> bb17__0_19686 [label="return"];
    bb14__0_19686 -> bb30__0_19686 [label="unwind"];
    bb15__0_19686 -> bb16__0_19686 [label="return"];
    bb15__0_19686 -> bb34__0_19686 [label="unwind"];
    bb16__0_19686 -> bb26__0_19686 [label=""];
    bb17__0_19686 -> bb18__0_19686 [label="return"];
    bb17__0_19686 -> bb30__0_19686 [label="unwind"];
    bb18__0_19686 -> bb19__0_19686 [label="return"];
    bb18__0_19686 -> bb30__0_19686 [label="unwind"];
    bb19__0_19686 -> bb20__0_19686 [label="0"];
    bb19__0_19686 -> bb21__0_19686 [label="1"];
    bb19__0_19686 -> bb7__0_19686 [label="otherwise"];
    bb20__0_19686 -> bb23__0_19686 [label="return"];
    bb20__0_19686 -> bb30__0_19686 [label="unwind"];
    bb21__0_19686 -> bb22__0_19686 [label="return"];
    bb21__0_19686 -> bb33__0_19686 [label="unwind"];
    bb22__0_19686 -> bb26__0_19686 [label="return"];
    bb22__0_19686 -> bb31__0_19686 [label="unwind"];
    bb23__0_19686 -> bb24__0_19686 [label="return"];
    bb23__0_19686 -> bb31__0_19686 [label="unwind"];
    bb24__0_19686 -> bb25__0_19686 [label="return"];
    bb24__0_19686 -> bb32__0_19686 [label="unwind"];
    bb25__0_19686 -> bb29__0_19686 [label=""];
    bb26__0_19686 -> bb27__0_19686 [label="return"];
    bb26__0_19686 -> bb32__0_19686 [label="unwind"];
    bb27__0_19686 -> bb28__0_19686 [label=""];
    bb28__0_19686 -> bb29__0_19686 [label=""];
    bb30__0_19686 -> bb31__0_19686 [label="return"];
    bb31__0_19686 -> bb32__0_19686 [label="return"];
    bb33__0_19686 -> bb30__0_19686 [label=""];
    bb34__0_19686 -> bb31__0_19686 [label=""];
}
