digraph Mir_0_1076 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_serum_vault(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::UpdateSerumVault&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _9: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _10: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _12: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _13: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _16: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _17: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _18: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _21: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _22: ();<br align="left"/>let _23: error::ErrorCode;<br align="left"/>let _24: ();<br align="left"/>let mut _25: &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased str;<br align="left"/>let mut _27: &amp;ReErased std::string::String;<br align="left"/>let _28: &amp;ReErased std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let mut _31: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: &amp;ReErased error::ErrorCode;<br align="left"/>let _43: ();<br align="left"/>let mut _44: &amp;ReErased str;<br align="left"/>let _45: &amp;ReErased str;<br align="left"/>let mut _46: error::ErrorCode;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: ();<br align="left"/>let _52: ();<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _54: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _55: bool;<br align="left"/>let mut _56: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _57: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _58: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _59: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _60: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _62: &amp;ReErased state::state::State;<br align="left"/>let mut _63: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _64: ();<br align="left"/>let _65: error::ErrorCode;<br align="left"/>let _66: ();<br align="left"/>let mut _67: &amp;ReErased str;<br align="left"/>let _68: &amp;ReErased str;<br align="left"/>let mut _69: &amp;ReErased std::string::String;<br align="left"/>let _70: &amp;ReErased std::string::String;<br align="left"/>let _71: std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let mut _73: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _77: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _78: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _82: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased error::ErrorCode;<br align="left"/>let _84: &amp;ReErased error::ErrorCode;<br align="left"/>let _85: ();<br align="left"/>let mut _86: &amp;ReErased str;<br align="left"/>let _87: &amp;ReErased str;<br align="left"/>let mut _88: error::ErrorCode;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: ();<br align="left"/>let _94: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _95: ();<br align="left"/>let mut _96: &amp;ReErased str;<br align="left"/>let _97: &amp;ReErased str;<br align="left"/>let mut _98: &amp;ReErased std::string::String;<br align="left"/>let _99: &amp;ReErased std::string::String;<br align="left"/>let _100: std::string::String;<br align="left"/>let _101: std::string::String;<br align="left"/>let mut _102: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _104: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _105: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _106: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _108: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _109: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _110: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _113: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _114: &amp;ReErased state::state::State;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _116: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _118: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _119: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _121: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _122: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _123: &amp;ReErased mut state::state::State;<br align="left"/>let mut _124: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _125: ();<br align="left"/>let mut _126: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _127: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _128: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _129: &amp;ReErased mut instructions::admin::UpdateSerumVault&lt;ReErased&gt;;<br align="left"/>let mut _130: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _131: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _132: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _133: &amp;ReErased mut instructions::admin::UpdateSerumVault&lt;ReErased&gt;;<br align="left"/>let mut _134: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _135: &amp;ReErased mut instructions::admin::UpdateSerumVault&lt;ReErased&gt;;<br align="left"/>let mut _136: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _137: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _138: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _139: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _140: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _141: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _142: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _143: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _144: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _145: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _146: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _147: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug vault =&gt; _2;<br align="left"/>debug error_code =&gt; _23;<br align="left"/>debug res =&gt; _30;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug error_code =&gt; _65;<br align="left"/>debug res =&gt; _72;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug state =&gt; _94;<br align="left"/>debug res =&gt; _101;<br align="left"/>>;
    bb0__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_129 = deref_copy (_1.1: &amp;mut instructions::admin::UpdateSerumVault&lt;'_&gt;)<br/>_2 = &amp;((*_129).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_130 = deref_copy (*_2)<br/>_140 = (((_130.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_11 = &amp;(*_140)<br/></td></tr><tr><td align="left">_10 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _11)</td></tr></table>>];
    bb1__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb2__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_7 = &amp;((*_8).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/></td></tr><tr><td align="left">_13 = srm_mint::id()</td></tr></table>>];
    bb3__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_12 = &amp;_13<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _7, move _12)</td></tr></table>>];
    bb4__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb5__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_131 = deref_copy (*_2)<br/>_141 = (((_131.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_19 = &amp;(*_141)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb7__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _17)</td></tr></table>>];
    bb8__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_15 = &amp;((*_16).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/></td></tr><tr><td align="left">_21 = msrm_mint::id()</td></tr></table>>];
    bb9__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_20 = &amp;_21<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _15, move _20)</td></tr></table>>];
    bb10__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb11__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_22 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_23)<br/>_23 = error::ErrorCode::InvalidSrmVault<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_128 = const _<br/>_34 = &amp;(*_128)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;_23<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _41)</td></tr></table>>];
    bb13__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = [move _40]<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_31 = Arguments::&lt;'_&gt;::new_v1(move _32, move _36)</td></tr></table>>];
    bb14__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = format(move _31)</td></tr></table>>];
    bb15__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>_29 = move _30<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;String as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb16__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = solana_program::log::sol_log(move _25)</td></tr></table>>];
    bb17__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb18__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = const &quot;vault did not hav srm or msrm mint&quot;<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = solana_program::log::sol_log(move _44)</td></tr></table>>];
    bb19__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>_46 = _23<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _46)<br/>StorageDead(_46)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb21__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_47 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb22__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_4 as Continue).0: ())<br/>_3 = _51<br/>StorageDead(_51)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_132 = deref_copy (*_2)<br/>_142 = (((_132.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_60 = &amp;(*_142)<br/></td></tr><tr><td align="left">_59 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb23__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb24__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb25__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _58)</td></tr></table>>];
    bb27__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>_56 = &amp;((*_57).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_133 = deref_copy (_1.1: &amp;mut instructions::admin::UpdateSerumVault&lt;'_&gt;)<br/>_134 = deref_copy ((*_133).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_143 = (((_134.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_63 = &amp;(*_143)<br/></td></tr><tr><td align="left">_62 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb28__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = &amp;((*_62).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_55 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _56, move _61)</td></tr></table>>];
    bb29__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb30__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_64)<br/>_64 = ()<br/>_54 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _64)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_65)<br/>_65 = error::ErrorCode::InvalidVaultOwner<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_127 = const _<br/>_76 = &amp;(*_127)<br/>_75 = &amp;(*_76)<br/>_74 = move _75 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_75)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;_65<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _83)</td></tr></table>>];
    bb32__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = [move _82]<br/>StorageDead(_82)<br/>_80 = &amp;_81<br/>_79 = &amp;(*_80)<br/>_78 = move _79 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_73 = Arguments::&lt;'_&gt;::new_v1(move _74, move _78)</td></tr></table>>];
    bb33__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = format(move _73)</td></tr></table>>];
    bb34__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>_71 = move _72<br/>StorageDead(_72)<br/>_70 = &amp;_71<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = &lt;String as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb35__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_67 = &amp;(*_68)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_66 = solana_program::log::sol_log(move _67)</td></tr></table>>];
    bb36__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb37__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = const &quot;vault owner was not program signer&quot;<br/>_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = solana_program::log::sol_log(move _86)</td></tr></table>>];
    bb38__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageLive(_88)<br/>_88 = _65<br/>_54 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _88)<br/>StorageDead(_88)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb40__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_89 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb41__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_53 as Continue).0: ())<br/>_52 = _93<br/>StorageDead(_93)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_94)<br/>_135 = deref_copy (_1.1: &amp;mut instructions::admin::UpdateSerumVault&lt;'_&gt;)<br/>_94 = &amp;mut ((*_135).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_126 = const _<br/>_105 = &amp;(*_126)<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_136 = deref_copy (*_94)<br/>_144 = (((_136.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_115 = &amp;(*_144)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb42__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb43__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_113 = &amp;((*_114).4: anchor_lang::prelude::Pubkey)<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::prelude::Pubkey&gt;(move _112)</td></tr></table>>];
    bb45__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_137 = deref_copy (*_2)<br/>_145 = (((_137.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_120 = &amp;(*_145)<br/></td></tr><tr><td align="left">_119 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _120)</td></tr></table>>];
    bb46__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_118 = &amp;_119<br/>_117 = &amp;(*_118)<br/></td></tr><tr><td align="left">_116 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::prelude::Pubkey&gt;(move _117)</td></tr></table>>];
    bb47__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_110 = [move _111, move _116]<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/>_107 = move _108 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_102 = Arguments::&lt;'_&gt;::new_v1(move _103, move _107)</td></tr></table>>];
    bb48__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = format(move _102)</td></tr></table>>];
    bb49__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/>_100 = move _101<br/>StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = &lt;String as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb50__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_95 = solana_program::log::sol_log(move _96)</td></tr></table>>];
    bb51__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb52__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_138 = deref_copy (*_2)<br/>_146 = (((_138.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_122 = &amp;(*_146)<br/></td></tr><tr><td align="left">_121 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _122)</td></tr></table>>];
    bb53__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_139 = deref_copy (*_94)<br/>_147 = (((_139.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_124 = &amp;mut (*_147)<br/></td></tr><tr><td align="left">_123 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as DerefMut&gt;::deref_mut(move _124)</td></tr></table>>];
    bb54__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>((*_123).4: anchor_lang::prelude::Pubkey) = move _121<br/>StorageDead(_121)<br/>StorageDead(_123)<br/>StorageLive(_125)<br/>_125 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _125)<br/>StorageDead(_125)<br/>StorageDead(_94)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">return</td></tr></table>>];
    bb57__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb58__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb59__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb60__0_1076 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1076 -> bb1__0_1076 [label="return"];
    bb1__0_1076 -> bb2__0_1076 [label="return"];
    bb2__0_1076 -> bb3__0_1076 [label="return"];
    bb3__0_1076 -> bb4__0_1076 [label="return"];
    bb4__0_1076 -> bb6__0_1076 [label="0"];
    bb4__0_1076 -> bb5__0_1076 [label="otherwise"];
    bb5__0_1076 -> bb11__0_1076 [label=""];
    bb6__0_1076 -> bb7__0_1076 [label="return"];
    bb7__0_1076 -> bb8__0_1076 [label="return"];
    bb8__0_1076 -> bb9__0_1076 [label="return"];
    bb9__0_1076 -> bb10__0_1076 [label="return"];
    bb10__0_1076 -> bb12__0_1076 [label="0"];
    bb10__0_1076 -> bb11__0_1076 [label="otherwise"];
    bb11__0_1076 -> bb20__0_1076 [label=""];
    bb12__0_1076 -> bb13__0_1076 [label="return"];
    bb13__0_1076 -> bb14__0_1076 [label="return"];
    bb14__0_1076 -> bb15__0_1076 [label="return"];
    bb15__0_1076 -> bb16__0_1076 [label="return"];
    bb15__0_1076 -> bb59__0_1076 [label="unwind"];
    bb16__0_1076 -> bb17__0_1076 [label="return"];
    bb16__0_1076 -> bb59__0_1076 [label="unwind"];
    bb17__0_1076 -> bb18__0_1076 [label="return"];
    bb17__0_1076 -> bb60__0_1076 [label="unwind"];
    bb18__0_1076 -> bb19__0_1076 [label="return"];
    bb19__0_1076 -> bb20__0_1076 [label=""];
    bb20__0_1076 -> bb21__0_1076 [label="return"];
    bb21__0_1076 -> bb22__0_1076 [label="0"];
    bb21__0_1076 -> bb24__0_1076 [label="1"];
    bb21__0_1076 -> bb23__0_1076 [label="otherwise"];
    bb22__0_1076 -> bb26__0_1076 [label="return"];
    bb24__0_1076 -> bb25__0_1076 [label="return"];
    bb25__0_1076 -> bb55__0_1076 [label=""];
    bb26__0_1076 -> bb27__0_1076 [label="return"];
    bb27__0_1076 -> bb28__0_1076 [label="return"];
    bb28__0_1076 -> bb29__0_1076 [label="return"];
    bb29__0_1076 -> bb31__0_1076 [label="0"];
    bb29__0_1076 -> bb30__0_1076 [label="otherwise"];
    bb30__0_1076 -> bb39__0_1076 [label=""];
    bb31__0_1076 -> bb32__0_1076 [label="return"];
    bb32__0_1076 -> bb33__0_1076 [label="return"];
    bb33__0_1076 -> bb34__0_1076 [label="return"];
    bb34__0_1076 -> bb35__0_1076 [label="return"];
    bb34__0_1076 -> bb58__0_1076 [label="unwind"];
    bb35__0_1076 -> bb36__0_1076 [label="return"];
    bb35__0_1076 -> bb58__0_1076 [label="unwind"];
    bb36__0_1076 -> bb37__0_1076 [label="return"];
    bb36__0_1076 -> bb60__0_1076 [label="unwind"];
    bb37__0_1076 -> bb38__0_1076 [label="return"];
    bb38__0_1076 -> bb39__0_1076 [label=""];
    bb39__0_1076 -> bb40__0_1076 [label="return"];
    bb40__0_1076 -> bb41__0_1076 [label="0"];
    bb40__0_1076 -> bb42__0_1076 [label="1"];
    bb40__0_1076 -> bb23__0_1076 [label="otherwise"];
    bb41__0_1076 -> bb44__0_1076 [label="return"];
    bb42__0_1076 -> bb43__0_1076 [label="return"];
    bb43__0_1076 -> bb55__0_1076 [label=""];
    bb44__0_1076 -> bb45__0_1076 [label="return"];
    bb45__0_1076 -> bb46__0_1076 [label="return"];
    bb46__0_1076 -> bb47__0_1076 [label="return"];
    bb47__0_1076 -> bb48__0_1076 [label="return"];
    bb48__0_1076 -> bb49__0_1076 [label="return"];
    bb49__0_1076 -> bb50__0_1076 [label="return"];
    bb49__0_1076 -> bb57__0_1076 [label="unwind"];
    bb50__0_1076 -> bb51__0_1076 [label="return"];
    bb50__0_1076 -> bb57__0_1076 [label="unwind"];
    bb51__0_1076 -> bb52__0_1076 [label="return"];
    bb51__0_1076 -> bb60__0_1076 [label="unwind"];
    bb52__0_1076 -> bb53__0_1076 [label="return"];
    bb53__0_1076 -> bb54__0_1076 [label="return"];
    bb54__0_1076 -> bb56__0_1076 [label=""];
    bb55__0_1076 -> bb56__0_1076 [label=""];
    bb57__0_1076 -> bb60__0_1076 [label="return"];
    bb58__0_1076 -> bb60__0_1076 [label="return"];
    bb59__0_1076 -> bb60__0_1076 [label="return"];
}
