digraph Mir_0_3312 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;SerumFulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::fulfill_order(_1: &amp;ReErased mut state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, _2: controller::position::PositionDirection, _3: u64, _4: u64, _5: u64) -&gt; std::result::Result&lt;state::spot_fulfillment_params::ExternalSpotFill, error::ErrorCode&gt;<br align="left"/>let _6: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, serum_dex::state::Market&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;serum_dex::state::Market&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _10: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _17: serum_dex::matching::Side;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: u64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _25: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u64;<br align="left"/>let _31: u64;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _33: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _37: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _38: u32;<br align="left"/>let mut _39: u64;<br align="left"/>let mut _40: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _41: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _42: controller::position::PositionDirection;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u64;<br align="left"/>let _48: u64;<br align="left"/>let mut _49: u64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _56: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: u64;<br align="left"/>let _63: ();<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let _70: serum_dex::instruction::NewOrderInstructionV3;<br align="left"/>let mut _71: serum_dex::matching::Side;<br align="left"/>let mut _72: std::num::NonZeroU64;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::num::NonZeroU64&gt;;<br align="left"/>let mut _74: std::result::Result&lt;std::num::NonZeroU64, error::ErrorCode&gt;;<br align="left"/>let mut _75: std::option::Option&lt;std::num::NonZeroU64&gt;;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: std::num::NonZeroU64;<br align="left"/>let mut _82: std::num::NonZeroU64;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::num::NonZeroU64&gt;;<br align="left"/>let mut _84: std::result::Result&lt;std::num::NonZeroU64, error::ErrorCode&gt;;<br align="left"/>let mut _85: std::option::Option&lt;std::num::NonZeroU64&gt;;<br align="left"/>let mut _86: u64;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: std::num::NonZeroU64;<br align="left"/>let mut _92: std::num::NonZeroU64;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::num::NonZeroU64&gt;;<br align="left"/>let mut _94: std::result::Result&lt;std::num::NonZeroU64, error::ErrorCode&gt;;<br align="left"/>let mut _95: std::option::Option&lt;std::num::NonZeroU64&gt;;<br align="left"/>let mut _96: u64;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: std::num::NonZeroU64;<br align="left"/>let mut _102: serum_dex::instruction::SelfTradeBehavior;<br align="left"/>let mut _103: serum_dex::matching::OrderType;<br align="left"/>let mut _104: i64;<br align="left"/>let _105: u64;<br align="left"/>let mut _106: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _107: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _108: u64;<br align="left"/>let mut _109: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _110: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _111: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _113: u64;<br align="left"/>let mut _114: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _115: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _116: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _118: u64;<br align="left"/>let mut _119: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _120: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _121: ();<br align="left"/>let mut _122: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _123: ();<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _125: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _126: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _127: controller::position::PositionDirection;<br align="left"/>let mut _128: serum_dex::instruction::NewOrderInstructionV3;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: ();<br align="left"/>let _134: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let mut _135: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, serum_dex::state::Market&lt;ReErased&gt;&gt;;<br align="left"/>let mut _136: std::result::Result&lt;serum_dex::state::Market&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _137: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _138: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _140: isize;<br align="left"/>let _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _144: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _145: u64;<br align="left"/>let mut _146: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _147: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _148: u64;<br align="left"/>let mut _149: &amp;ReErased serum_dex::state::MarketState;<br align="left"/>let mut _150: &amp;ReErased serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _151: ();<br align="left"/>let mut _152: serum_dex::state::Market&lt;ReErased&gt;;<br align="left"/>let _153: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let mut _154: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;&gt;;<br align="left"/>let mut _155: std::result::Result&lt;std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _156: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _157: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _163: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let _164: u64;<br align="left"/>let mut _165: &amp;ReErased serum_dex::state::OpenOrders;<br align="left"/>let mut _166: &amp;ReErased std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let _167: ();<br align="left"/>let mut _168: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let _169: ();<br align="left"/>let mut _170: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _171: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _172: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _173: isize;<br align="left"/>let _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _175: !;<br align="left"/>let mut _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _177: ();<br align="left"/>let _178: ();<br align="left"/>let mut _179: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _180: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _181: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _182: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _183: Closure(DefId(0:3313 ~ drift[d311]::state::fulfillment_params::serum::{impl#5}::fulfill_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _184: isize;<br align="left"/>let _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _186: !;<br align="left"/>let mut _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _188: ();<br align="left"/>let _189: ();<br align="left"/>let mut _190: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _191: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _192: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _193: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _194: Closure(DefId(0:3314 ~ drift[d311]::state::fulfillment_params::serum::{impl#5}::fulfill_order::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _195: isize;<br align="left"/>let _196: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _197: !;<br align="left"/>let mut _198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _199: ();<br align="left"/>let _200: u64;<br align="left"/>let mut _201: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _202: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _203: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _204: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _205: u64;<br align="left"/>let mut _206: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _207: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _208: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _210: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let mut _211: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;&gt;;<br align="left"/>let mut _212: std::result::Result&lt;std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _213: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _214: &amp;ReErased state::fulfillment_params::serum::SerumContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _215: &amp;ReErased state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let _221: u64;<br align="left"/>let mut _222: &amp;ReErased serum_dex::state::OpenOrders;<br align="left"/>let mut _223: &amp;ReErased std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let _224: ();<br align="left"/>let mut _225: std::cell::Ref&lt;ReErased, serum_dex::state::OpenOrders&gt;;<br align="left"/>let _226: u64;<br align="left"/>let mut _227: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _228: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _229: u64;<br align="left"/>let mut _230: u64;<br align="left"/>let mut _231: isize;<br align="left"/>let _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _233: !;<br align="left"/>let mut _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _235: u64;<br align="left"/>let _236: state::spot_market::SpotBalanceType;<br align="left"/>let _237: u64;<br align="left"/>let mut _238: (state::spot_market::SpotBalanceType, u64);<br align="left"/>let mut _239: bool;<br align="left"/>let mut _240: u64;<br align="left"/>let mut _241: u64;<br align="left"/>let mut _242: state::spot_market::SpotBalanceType;<br align="left"/>let mut _243: u64;<br align="left"/>let mut _244: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _245: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _246: u64;<br align="left"/>let mut _247: u64;<br align="left"/>let mut _248: isize;<br align="left"/>let _249: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _250: !;<br align="left"/>let mut _251: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _252: u64;<br align="left"/>let mut _253: state::spot_market::SpotBalanceType;<br align="left"/>let mut _254: u64;<br align="left"/>let mut _255: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _256: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _257: u64;<br align="left"/>let mut _258: u64;<br align="left"/>let mut _259: isize;<br align="left"/>let _260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _261: !;<br align="left"/>let mut _262: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _263: u64;<br align="left"/>let _264: ();<br align="left"/>let mut _265: bool;<br align="left"/>let mut _266: u64;<br align="left"/>let mut _267: !;<br align="left"/>let _268: ();<br align="left"/>let mut _269: &amp;ReErased str;<br align="left"/>let _270: &amp;ReErased str;<br align="left"/>let mut _271: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let _272: u64;<br align="left"/>let mut _273: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _274: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _275: u64;<br align="left"/>let mut _276: u64;<br align="left"/>let mut _277: isize;<br align="left"/>let _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _279: !;<br align="left"/>let mut _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _281: u64;<br align="left"/>let _282: u64;<br align="left"/>let _283: state::spot_market::SpotBalanceType;<br align="left"/>let _284: u64;<br align="left"/>let mut _285: (state::spot_market::SpotBalanceType, u64);<br align="left"/>let mut _286: bool;<br align="left"/>let mut _287: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _288: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _289: state::spot_market::SpotBalanceType;<br align="left"/>let _290: u64;<br align="left"/>let mut _291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _292: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _293: u64;<br align="left"/>let mut _294: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _295: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _296: u64;<br align="left"/>let mut _297: u64;<br align="left"/>let mut _298: isize;<br align="left"/>let _299: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _300: !;<br align="left"/>let mut _301: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _302: u64;<br align="left"/>let mut _303: u64;<br align="left"/>let mut _304: isize;<br align="left"/>let _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _306: !;<br align="left"/>let mut _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _308: u64;<br align="left"/>let mut _309: state::spot_market::SpotBalanceType;<br align="left"/>let mut _310: u64;<br align="left"/>let mut _311: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _312: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _313: u64;<br align="left"/>let mut _314: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _315: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _316: u64;<br align="left"/>let mut _317: u64;<br align="left"/>let mut _318: isize;<br align="left"/>let _319: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _320: !;<br align="left"/>let mut _321: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _322: u64;<br align="left"/>let mut _323: u64;<br align="left"/>let mut _324: isize;<br align="left"/>let _325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _326: !;<br align="left"/>let mut _327: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _328: u64;<br align="left"/>let _329: u64;<br align="left"/>let mut _330: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _331: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _332: u64;<br align="left"/>let mut _333: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _334: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _335: u64;<br align="left"/>let mut _336: u64;<br align="left"/>let mut _337: isize;<br align="left"/>let _338: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _339: !;<br align="left"/>let mut _340: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _341: u64;<br align="left"/>let mut _342: u64;<br align="left"/>let mut _343: isize;<br align="left"/>let _344: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _345: !;<br align="left"/>let mut _346: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _347: u64;<br align="left"/>let mut _348: state::spot_market::SpotBalanceType;<br align="left"/>let mut _349: u64;<br align="left"/>let mut _350: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _351: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _352: u64;<br align="left"/>let mut _353: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _354: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _355: u64;<br align="left"/>let mut _356: u64;<br align="left"/>let mut _357: isize;<br align="left"/>let _358: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _359: !;<br align="left"/>let mut _360: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _361: u64;<br align="left"/>let mut _362: u64;<br align="left"/>let mut _363: isize;<br align="left"/>let _364: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _365: !;<br align="left"/>let mut _366: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _367: u64;<br align="left"/>let mut _368: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let mut _369: u64;<br align="left"/>let mut _370: u64;<br align="left"/>let mut _371: state::spot_market::SpotBalanceType;<br align="left"/>let mut _372: state::spot_market::SpotBalanceType;<br align="left"/>let mut _373: u64;<br align="left"/>let mut _374: u64;<br align="left"/>let mut _375: u64;<br align="left"/>let mut _376: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _377: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _378: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _379: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _380: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _381: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _382: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _383: bool;<br align="left"/>let mut _384: bool;<br align="left"/>let mut _385: bool;<br align="left"/>let mut _386: bool;<br align="left"/>let mut _387: isize;<br align="left"/>let mut _388: isize;<br align="left"/>let mut _389: isize;<br align="left"/>let mut _390: isize;<br align="left"/>let mut _391: isize;<br align="left"/>let mut _392: isize;<br align="left"/>let mut _393: isize;<br align="left"/>let mut _394: isize;<br align="left"/>let mut _395: isize;<br align="left"/>let mut _396: isize;<br align="left"/>let mut _397: isize;<br align="left"/>let mut _398: isize;<br align="left"/>let mut _399: isize;<br align="left"/>let mut _400: isize;<br align="left"/>let mut _401: isize;<br align="left"/>let mut _402: isize;<br align="left"/>let mut _403: isize;<br align="left"/>let mut _404: isize;<br align="left"/>let mut _405: isize;<br align="left"/>let mut _406: isize;<br align="left"/>let mut _407: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _408: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _409: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _410: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _411: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _412: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug taker_direction =&gt; _2;<br align="left"/>debug taker_price =&gt; _3;<br align="left"/>debug taker_base_asset_amount =&gt; _4;<br align="left"/>debug taker_max_quote_asset_amount =&gt; _5;<br align="left"/>debug market_state_before =&gt; _6;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug serum_order_side =&gt; _17;<br align="left"/>debug serum_max_coin_qty =&gt; _19;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug serum_limit_price =&gt; _31;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug serum_max_native_pc_qty =&gt; _48;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug serum_order =&gt; _70;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug _market_fees_accrued_before =&gt; _105;<br align="left"/>debug base_before =&gt; _108;<br align="left"/>debug quote_before =&gt; _113;<br align="left"/>debug market_rebates_accrued_before =&gt; _118;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>debug market_state_after =&gt; _134;<br align="left"/>debug residual =&gt; _141;<br align="left"/>debug val =&gt; _144;<br align="left"/>debug _market_fees_accrued_after =&gt; _145;<br align="left"/>debug market_rebates_accrued_after =&gt; _148;<br align="left"/>debug open_orders_before =&gt; _153;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>debug unsettled_referrer_rebate_before =&gt; _164;<br align="left"/>debug residual =&gt; _174;<br align="left"/>debug val =&gt; _177;<br align="left"/>debug residual =&gt; _185;<br align="left"/>debug val =&gt; _188;<br align="left"/>debug residual =&gt; _196;<br align="left"/>debug val =&gt; _199;<br align="left"/>debug base_after =&gt; _200;<br align="left"/>debug quote_after =&gt; _205;<br align="left"/>debug open_orders_after =&gt; _210;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug unsettled_referrer_rebate_after =&gt; _221;<br align="left"/>debug settled_referred_rebate =&gt; _226;<br align="left"/>debug residual =&gt; _232;<br align="left"/>debug val =&gt; _235;<br align="left"/>debug base_update_direction =&gt; _236;<br align="left"/>debug base_asset_amount_filled =&gt; _237;<br align="left"/>debug residual =&gt; _249;<br align="left"/>debug val =&gt; _252;<br align="left"/>debug residual =&gt; _260;<br align="left"/>debug val =&gt; _263;<br align="left"/>debug serum_referrer_rebate =&gt; _272;<br align="left"/>debug residual =&gt; _278;<br align="left"/>debug val =&gt; _281;<br align="left"/>debug serum_fee =&gt; _282;<br align="left"/>debug quote_update_direction =&gt; _283;<br align="left"/>debug quote_asset_amount_filled =&gt; _284;<br align="left"/>debug quote_asset_amount_delta =&gt; _290;<br align="left"/>debug residual =&gt; _299;<br align="left"/>debug val =&gt; _302;<br align="left"/>debug residual =&gt; _305;<br align="left"/>debug val =&gt; _308;<br align="left"/>debug residual =&gt; _319;<br align="left"/>debug val =&gt; _322;<br align="left"/>debug residual =&gt; _325;<br align="left"/>debug val =&gt; _328;<br align="left"/>debug quote_asset_amount_delta =&gt; _329;<br align="left"/>debug residual =&gt; _338;<br align="left"/>debug val =&gt; _341;<br align="left"/>debug residual =&gt; _344;<br align="left"/>debug val =&gt; _347;<br align="left"/>debug residual =&gt; _358;<br align="left"/>debug val =&gt; _361;<br align="left"/>debug residual =&gt; _364;<br align="left"/>debug val =&gt; _367;<br align="left"/>>;
    bb0__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_383 = const false<br/>_386 = const false<br/>_385 = const false<br/>_384 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/></td></tr><tr><td align="left">_10 = &lt;SerumFulfillmentParams&lt;'_, '_&gt; as Deref&gt;::deref(move _11)</td></tr></table>>];
    bb1__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_9 = &amp;(*_10)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_8 = SerumContext::&lt;'_, '_&gt;::load_serum_market(move _9)</td></tr></table>>];
    bb2__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;serum_dex::state::Market&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_7 as Continue).0: serum_dex::state::Market&lt;'_&gt;)<br/>_383 = const true<br/>_6 = move _16<br/>StorageDead(_16)<br/>_389 = discriminant(_7)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>_18 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb5__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>_387 = discriminant(_7)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_17 = serum_dex::matching::Side::Ask<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_17 = serum_dex::matching::Side::Bid<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _4<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;_6<br/></td></tr><tr><td align="left">_24 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _25)</td></tr></table>>];
    bb11__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_23 = ((*_24).16: u64)<br/></td></tr><tr><td align="left">_21 = calculate_serum_max_coin_qty(move _22, move _23)</td></tr></table>>];
    bb12__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb13__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_26 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb14__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_20 as Continue).0: u64)<br/>_19 = _30<br/>StorageDead(_30)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _3<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;_6<br/></td></tr><tr><td align="left">_36 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb15__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb16__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = ((*_36).17: u64)<br/>StorageLive(_38)<br/>_38 = ((*_1).14: u32)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_6<br/></td></tr><tr><td align="left">_40 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb18__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = ((*_40).16: u64)<br/>StorageLive(_42)<br/>_42 = _2<br/></td></tr><tr><td align="left">_33 = calculate_serum_limit_price(move _34, move _35, move _38, move _39, move _42)</td></tr></table>>];
    bb19__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb20__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_43 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb21__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_32 as Continue).0: u64)<br/>_31 = _47<br/>StorageDead(_47)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _31<br/>StorageLive(_53)<br/>_53 = _19<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_6<br/></td></tr><tr><td align="left">_55 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _56)</td></tr></table>>];
    bb22__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb23__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_54 = ((*_55).17: u64)<br/></td></tr><tr><td align="left">_51 = calculate_serum_max_native_pc_quantity(move _52, move _53, move _54)</td></tr></table>>];
    bb25__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb26__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_57 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_50 as Continue).0: u64)<br/>_49 = _61<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>_62 = _5<br/></td></tr><tr><td align="left">_48 = &lt;u64 as Ord&gt;::min(move _49, move _62)</td></tr></table>>];
    bb28__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_49)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_49)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _19<br/>_64 = Eq(move _65, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb31__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _48<br/>_66 = Eq(move _67, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb33__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageLive(_69)<br/></td></tr><tr><td align="left">_69 = ExternalSpotFill::empty()</td></tr></table>>];
    bb34__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _69)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_63 = const ()<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _17<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = _31<br/></td></tr><tr><td align="left">_75 = NonZeroU64::new(move _76)</td></tr></table>>];
    bb36__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;Option&lt;NonZeroU64&gt; as SafeUnwrap&gt;::safe_unwrap(move _75)</td></tr></table>>];
    bb37__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;NonZeroU64, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb38__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_77 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb39__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_73 as Continue).0: std::num::NonZeroU64)<br/>_72 = _81<br/>StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _19<br/></td></tr><tr><td align="left">_85 = NonZeroU64::new(move _86)</td></tr></table>>];
    bb40__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb41__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;Option&lt;NonZeroU64&gt; as SafeUnwrap&gt;::safe_unwrap(move _85)</td></tr></table>>];
    bb43__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;NonZeroU64, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb44__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_87 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb45__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_83 as Continue).0: std::num::NonZeroU64)<br/>_82 = _91<br/>StorageDead(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _48<br/></td></tr><tr><td align="left">_95 = NonZeroU64::new(move _96)</td></tr></table>>];
    bb46__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb47__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_82)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;Option&lt;NonZeroU64&gt; as SafeUnwrap&gt;::safe_unwrap(move _95)</td></tr></table>>];
    bb49__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;NonZeroU64, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb50__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_97 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb51__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_93 as Continue).0: std::num::NonZeroU64)<br/>_92 = _101<br/>StorageDead(_101)<br/>StorageLive(_102)<br/>_102 = serum_dex::instruction::SelfTradeBehavior::AbortTransaction<br/>StorageLive(_103)<br/>_103 = serum_dex::matching::OrderType::ImmediateOrCancel<br/>StorageLive(_104)<br/>_104 = ((*_1).15: i64)<br/>_70 = NewOrderInstructionV3 { side: move _71, limit_price: move _72, max_coin_qty: move _82, max_native_pc_qty_including_fees: move _92, self_trade_behavior: move _102, order_type: move _103, client_order_id: const 0_u64, limit: const 10_u16, max_ts: move _104 }<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_92)<br/>StorageDead(_82)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_93)<br/>StorageDead(_83)<br/>StorageDead(_73)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_6<br/></td></tr><tr><td align="left">_106 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _107)</td></tr></table>>];
    bb52__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb53__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_92)<br/>StorageDead(_82)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_105 = ((*_106).10: u64)<br/>StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_377 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_407 = (((_377.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_112 = &amp;(*_407)<br/></td></tr><tr><td align="left">_111 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _112)</td></tr></table>>];
    bb55__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb56__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>_108 = ((*_109).2: u64)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_378 = deref_copy ((*_1).10: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_408 = (((_378.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_117 = &amp;(*_408)<br/></td></tr><tr><td align="left">_116 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _117)</td></tr></table>>];
    bb57__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb58__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>_113 = ((*_114).2: u64)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;_6<br/></td></tr><tr><td align="left">_119 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _120)</td></tr></table>>];
    bb59__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_118 = ((*_119).19: u64)<br/>StorageDead(_119)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_383 = const false<br/>_122 = move _6<br/></td></tr><tr><td align="left">_121 = std::mem::drop::&lt;serum_dex::state::Market&lt;'_&gt;&gt;(move _122)</td></tr></table>>];
    bb60__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;(*_1)<br/>StorageLive(_127)<br/>_127 = _2<br/>StorageLive(_128)<br/>_128 = move _70<br/></td></tr><tr><td align="left">_125 = SerumFulfillmentParams::&lt;'_, '_&gt;::invoke_new_order(move _126, move _127, move _128)</td></tr></table>>];
    bb61__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb62__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_129 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb63__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_124 as Continue).0: ())<br/>_123 = _133<br/>StorageDead(_133)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;(*_1)<br/></td></tr><tr><td align="left">_138 = &lt;SerumFulfillmentParams&lt;'_, '_&gt; as Deref&gt;::deref(move _139)</td></tr></table>>];
    bb64__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb65__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_137 = &amp;(*_138)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_136 = SerumContext::&lt;'_, '_&gt;::load_serum_market(move _137)</td></tr></table>>];
    bb67__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = &lt;std::result::Result&lt;serum_dex::state::Market&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _136)</td></tr></table>>];
    bb68__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_140 = discriminant(_135)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb69__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = move ((_135 as Continue).0: serum_dex::state::Market&lt;'_&gt;)<br/>_386 = const true<br/>_134 = move _144<br/>StorageDead(_144)<br/>_393 = discriminant(_135)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_134<br/></td></tr><tr><td align="left">_146 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _147)</td></tr></table>>];
    bb70__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_135 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_143)<br/>_143 = _141<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _143)</td></tr></table>>];
    bb71__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>_391 = discriminant(_135)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_145 = ((*_146).10: u64)<br/>StorageDead(_146)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;_134<br/></td></tr><tr><td align="left">_149 = &lt;serum_dex::state::Market&lt;'_&gt; as Deref&gt;::deref(move _150)</td></tr></table>>];
    bb73__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = ((*_149).19: u64)<br/>StorageDead(_149)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_386 = const false<br/>_152 = move _134<br/></td></tr><tr><td align="left">_151 = std::mem::drop::&lt;serum_dex::state::Market&lt;'_&gt;&gt;(move _152)</td></tr></table>>];
    bb74__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;(*_1)<br/></td></tr><tr><td align="left">_157 = &lt;SerumFulfillmentParams&lt;'_, '_&gt; as Deref&gt;::deref(move _158)</td></tr></table>>];
    bb75__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_156 = &amp;(*_157)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_155 = SerumContext::&lt;'_, '_&gt;::load_open_orders(move _156)</td></tr></table>>];
    bb76__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">_154 = &lt;std::result::Result&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _155)</td></tr></table>>];
    bb77__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_159 = discriminant(_154)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb78__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = move ((_154 as Continue).0: std::cell::Ref&lt;'_, serum_dex::state::OpenOrders&gt;)<br/>_385 = const true<br/>_153 = move _163<br/>StorageDead(_163)<br/>_397 = discriminant(_154)<br/>StorageDead(_157)<br/>StorageDead(_154)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;_153<br/></td></tr><tr><td align="left">_165 = &lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt; as Deref&gt;::deref(move _166)</td></tr></table>>];
    bb79__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_154 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_162)<br/>_162 = _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb80__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>_395 = discriminant(_154)<br/>StorageDead(_157)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>_164 = ((*_165).11: u64)<br/>StorageDead(_165)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_385 = const false<br/>_168 = move _153<br/></td></tr><tr><td align="left">_167 = std::mem::drop::&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;&gt;(move _168)</td></tr></table>>];
    bb82__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_167)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = &amp;(*_1)<br/></td></tr><tr><td align="left">_171 = SerumFulfillmentParams::&lt;'_, '_&gt;::invoke_settle_funds(move _172)</td></tr></table>>];
    bb83__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _171)</td></tr></table>>];
    bb84__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_173 = discriminant(_170)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb85__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_170 as Continue).0: ())<br/>_169 = _177<br/>StorageDead(_177)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_379 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_409 = (((_379.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_182 = &amp;mut (*_409)<br/></td></tr><tr><td align="left">_181 = anchor_lang::prelude::Account::&lt;'_, anchor_spl::token::TokenAccount&gt;::reload(move _182)</td></tr></table>>];
    bb86__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_170 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_176)<br/>_176 = _174<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _176)</td></tr></table>>];
    bb87__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageLive(_183)<br/>_183 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:609:49: 609:53}<br/></td></tr><tr><td align="left">_180 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/serum.rs:609:49: 609:53}&gt;(move _181, move _183)</td></tr></table>>];
    bb89__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _180)</td></tr></table>>];
    bb90__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_184 = discriminant(_179)<br/></td></tr><tr><td align="left">switchInt(move _184)</td></tr></table>>];
    bb91__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_179 as Continue).0: ())<br/>_178 = _188<br/>StorageDead(_188)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_380 = deref_copy ((*_1).10: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_410 = (((_380.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_193 = &amp;mut (*_410)<br/></td></tr><tr><td align="left">_192 = anchor_lang::prelude::Account::&lt;'_, anchor_spl::token::TokenAccount&gt;::reload(move _193)</td></tr></table>>];
    bb92__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_179 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_187)<br/>_187 = _185<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _187)</td></tr></table>>];
    bb93__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageLive(_194)<br/>_194 = {closure@programs/drift/src/state/fulfillment_params/serum.rs:613:50: 613:54}<br/></td></tr><tr><td align="left">_191 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/serum.rs:613:50: 613:54}&gt;(move _192, move _194)</td></tr></table>>];
    bb95__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">_190 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _191)</td></tr></table>>];
    bb96__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_195 = discriminant(_190)<br/></td></tr><tr><td align="left">switchInt(move _195)</td></tr></table>>];
    bb97__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_199)<br/>_199 = ((_190 as Continue).0: ())<br/>_189 = _199<br/>StorageDead(_199)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_381 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_411 = (((_381.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_204 = &amp;(*_411)<br/></td></tr><tr><td align="left">_203 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _204)</td></tr></table>>];
    bb98__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_190 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_198)<br/>_198 = _196<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _198)</td></tr></table>>];
    bb99__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_202 = &amp;(*_203)<br/></td></tr><tr><td align="left">_201 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _202)</td></tr></table>>];
    bb101__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_202)<br/>_200 = ((*_201).2: u64)<br/>StorageDead(_203)<br/>StorageDead(_201)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_382 = deref_copy ((*_1).10: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_412 = (((_382.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_209 = &amp;(*_412)<br/></td></tr><tr><td align="left">_208 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb102__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _207)</td></tr></table>>];
    bb103__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>_205 = ((*_206).2: u64)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;(*_1)<br/></td></tr><tr><td align="left">_214 = &lt;SerumFulfillmentParams&lt;'_, '_&gt; as Deref&gt;::deref(move _215)</td></tr></table>>];
    bb104__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_213 = &amp;(*_214)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">_212 = SerumContext::&lt;'_, '_&gt;::load_open_orders(move _213)</td></tr></table>>];
    bb105__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/></td></tr><tr><td align="left">_211 = &lt;std::result::Result&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _212)</td></tr></table>>];
    bb106__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_216 = discriminant(_211)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb107__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = move ((_211 as Continue).0: std::cell::Ref&lt;'_, serum_dex::state::OpenOrders&gt;)<br/>_384 = const true<br/>_210 = move _220<br/>StorageDead(_220)<br/>_401 = discriminant(_211)<br/>StorageDead(_214)<br/>StorageDead(_211)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;_210<br/></td></tr><tr><td align="left">_222 = &lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt; as Deref&gt;::deref(move _223)</td></tr></table>>];
    bb108__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_211 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb109__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/>_399 = discriminant(_211)<br/>StorageDead(_214)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_221 = ((*_222).11: u64)<br/>StorageDead(_222)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_384 = const false<br/>_225 = move _210<br/></td></tr><tr><td align="left">_224 = std::mem::drop::&lt;Ref&lt;'_, serum_dex::state::OpenOrders&gt;&gt;(move _225)</td></tr></table>>];
    bb111__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_224)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_229 = _164<br/>StorageLive(_230)<br/>_230 = _221<br/></td></tr><tr><td align="left">_228 = &lt;u64 as SafeMath&gt;::safe_sub(move _229, move _230)</td></tr></table>>];
    bb112__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">_227 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _228)</td></tr></table>>];
    bb113__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>_231 = discriminant(_227)<br/></td></tr><tr><td align="left">switchInt(move _231)</td></tr></table>>];
    bb114__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_235)<br/>_235 = ((_227 as Continue).0: u64)<br/>_226 = _235<br/>StorageDead(_235)<br/>StorageDead(_227)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = _200<br/>StorageLive(_241)<br/>_241 = _108<br/>_239 = Gt(move _240, move _241)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb115__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = ((_227 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_234)<br/>_234 = _232<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _234)</td></tr></table>>];
    bb116__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_242)<br/>_242 = SpotBalanceType::Deposit<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = _200<br/>StorageLive(_247)<br/>_247 = _108<br/></td></tr><tr><td align="left">_245 = &lt;u64 as SafeMath&gt;::safe_sub(move _246, move _247)</td></tr></table>>];
    bb118__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_253)<br/>_253 = SpotBalanceType::Borrow<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = _108<br/>StorageLive(_258)<br/>_258 = _200<br/></td></tr><tr><td align="left">_256 = &lt;u64 as SafeMath&gt;::safe_sub(move _257, move _258)</td></tr></table>>];
    bb119__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">_244 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _245)</td></tr></table>>];
    bb120__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>_248 = discriminant(_244)<br/></td></tr><tr><td align="left">switchInt(move _248)</td></tr></table>>];
    bb121__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = ((_244 as Continue).0: u64)<br/>_243 = _252<br/>StorageDead(_252)<br/>_238 = (move _242, move _243)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = ((_244 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_251)<br/>_251 = _249<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _251)</td></tr></table>>];
    bb123__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_255 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _256)</td></tr></table>>];
    bb125__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_259 = discriminant(_255)<br/></td></tr><tr><td align="left">switchInt(move _259)</td></tr></table>>];
    bb126__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_255 as Continue).0: u64)<br/>_254 = _263<br/>StorageDead(_263)<br/>_238 = (move _253, move _254)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_260)<br/>_260 = ((_255 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_262)<br/>_262 = _260<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _262)</td></tr></table>>];
    bb128__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageLive(_236)<br/>_236 = (_238.0: state::spot_market::SpotBalanceType)<br/>StorageLive(_237)<br/>_237 = (_238.1: u64)<br/>StorageDead(_238)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = _237<br/>_265 = Eq(move _266, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _265)</td></tr></table>>];
    bb130__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = const &quot;No base filled on serum&quot;<br/>_269 = &amp;(*_270)<br/></td></tr><tr><td align="left">_268 = solana_program::log::sol_log(move _269)</td></tr></table>>];
    bb131__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_270)<br/>StorageDead(_268)<br/>StorageLive(_271)<br/></td></tr><tr><td align="left">_271 = ExternalSpotFill::empty()</td></tr></table>>];
    bb132__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _271)<br/>StorageDead(_271)<br/>StorageDead(_265)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>_264 = const ()<br/>StorageDead(_265)<br/>StorageDead(_264)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = _148<br/>StorageLive(_276)<br/>_276 = _118<br/></td></tr><tr><td align="left">_274 = &lt;u64 as SafeMath&gt;::safe_sub(move _275, move _276)</td></tr></table>>];
    bb134__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">_273 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _274)</td></tr></table>>];
    bb135__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_277 = discriminant(_273)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb136__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_273 as Continue).0: u64)<br/>_272 = _281<br/>StorageDead(_281)<br/>StorageDead(_273)<br/>StorageLive(_282)<br/>_282 = _272<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = &amp;_236<br/>StorageLive(_288)<br/>_376 = const _<br/>_288 = &amp;(*_376)<br/></td></tr><tr><td align="left">_286 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _287, move _288)</td></tr></table>>];
    bb137__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_273 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_280)<br/>_280 = _278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _280)</td></tr></table>>];
    bb138__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left">switchInt(move _286)</td></tr></table>>];
    bb140__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_287)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = _205<br/>StorageLive(_297)<br/>_297 = _113<br/></td></tr><tr><td align="left">_295 = &lt;u64 as SafeMath&gt;::safe_sub(move _296, move _297)</td></tr></table>>];
    bb141__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">_294 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _295)</td></tr></table>>];
    bb142__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>_298 = discriminant(_294)<br/></td></tr><tr><td align="left">switchInt(move _298)</td></tr></table>>];
    bb143__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_302)<br/>_302 = ((_294 as Continue).0: u64)<br/>_293 = _302<br/>StorageDead(_302)<br/>StorageLive(_303)<br/>_303 = _226<br/></td></tr><tr><td align="left">_292 = &lt;u64 as SafeMath&gt;::safe_sub(move _293, move _303)</td></tr></table>>];
    bb144__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_294 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_301)<br/>_301 = _299<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _301)</td></tr></table>>];
    bb145__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_293)<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">_291 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _292)</td></tr></table>>];
    bb147__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_304 = discriminant(_291)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb148__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_291 as Continue).0: u64)<br/>_290 = _308<br/>StorageDead(_308)<br/>StorageDead(_294)<br/>StorageDead(_291)<br/>StorageLive(_309)<br/>_309 = SpotBalanceType::Deposit<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_316 = _290<br/>StorageLive(_317)<br/>_317 = _282<br/></td></tr><tr><td align="left">_315 = &lt;u64 as SafeMath&gt;::safe_add(move _316, move _317)</td></tr></table>>];
    bb149__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_291 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_307)<br/>_307 = _305<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _307)</td></tr></table>>];
    bb150__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_314 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _315)</td></tr></table>>];
    bb152__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_318 = discriminant(_314)<br/></td></tr><tr><td align="left">switchInt(move _318)</td></tr></table>>];
    bb153__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_322)<br/>_322 = ((_314 as Continue).0: u64)<br/>_313 = _322<br/>StorageDead(_322)<br/>StorageLive(_323)<br/>_323 = _272<br/></td></tr><tr><td align="left">_312 = &lt;u64 as SafeMath&gt;::safe_add(move _313, move _323)</td></tr></table>>];
    bb154__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_319)<br/>_319 = ((_314 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_321)<br/>_321 = _319<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _321)</td></tr></table>>];
    bb155__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/>StorageDead(_313)<br/>StorageDead(_312)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">_311 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _312)</td></tr></table>>];
    bb157__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>_324 = discriminant(_311)<br/></td></tr><tr><td align="left">switchInt(move _324)</td></tr></table>>];
    bb158__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = ((_311 as Continue).0: u64)<br/>_310 = _328<br/>StorageDead(_328)<br/>_285 = (move _309, move _310)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>StorageDead(_290)<br/>StorageDead(_314)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_325)<br/>_325 = ((_311 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_327)<br/>_327 = _325<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _327)</td></tr></table>>];
    bb160__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_287)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = _113<br/>StorageLive(_336)<br/>_336 = _226<br/></td></tr><tr><td align="left">_334 = &lt;u64 as SafeMath&gt;::safe_add(move _335, move _336)</td></tr></table>>];
    bb162__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_333 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _334)</td></tr></table>>];
    bb163__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>_337 = discriminant(_333)<br/></td></tr><tr><td align="left">switchInt(move _337)</td></tr></table>>];
    bb164__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_341)<br/>_341 = ((_333 as Continue).0: u64)<br/>_332 = _341<br/>StorageDead(_341)<br/>StorageLive(_342)<br/>_342 = _205<br/></td></tr><tr><td align="left">_331 = &lt;u64 as SafeMath&gt;::safe_sub(move _332, move _342)</td></tr></table>>];
    bb165__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_338)<br/>_338 = ((_333 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_340)<br/>_340 = _338<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _340)</td></tr></table>>];
    bb166__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_338)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_332)<br/></td></tr><tr><td align="left">_330 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _331)</td></tr></table>>];
    bb168__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>_343 = discriminant(_330)<br/></td></tr><tr><td align="left">switchInt(move _343)</td></tr></table>>];
    bb169__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageLive(_347)<br/>_347 = ((_330 as Continue).0: u64)<br/>_329 = _347<br/>StorageDead(_347)<br/>StorageDead(_333)<br/>StorageDead(_330)<br/>StorageLive(_348)<br/>_348 = SpotBalanceType::Borrow<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>_355 = _329<br/>StorageLive(_356)<br/>_356 = _282<br/></td></tr><tr><td align="left">_354 = &lt;u64 as SafeMath&gt;::safe_sub(move _355, move _356)</td></tr></table>>];
    bb170__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = ((_330 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_346)<br/>_346 = _344<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _346)</td></tr></table>>];
    bb171__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">_353 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _354)</td></tr></table>>];
    bb173__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>_357 = discriminant(_353)<br/></td></tr><tr><td align="left">switchInt(move _357)</td></tr></table>>];
    bb174__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = ((_353 as Continue).0: u64)<br/>_352 = _361<br/>StorageDead(_361)<br/>StorageLive(_362)<br/>_362 = _272<br/></td></tr><tr><td align="left">_351 = &lt;u64 as SafeMath&gt;::safe_sub(move _352, move _362)</td></tr></table>>];
    bb175__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = ((_353 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_360)<br/>_360 = _358<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _360)</td></tr></table>>];
    bb176__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">_350 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _351)</td></tr></table>>];
    bb178__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>_363 = discriminant(_350)<br/></td></tr><tr><td align="left">switchInt(move _363)</td></tr></table>>];
    bb179__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_367)<br/>_367 = ((_350 as Continue).0: u64)<br/>_349 = _367<br/>StorageDead(_367)<br/>_285 = (move _348, move _349)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_329)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_350 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_366)<br/>_366 = _364<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _366)</td></tr></table>>];
    bb181__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageLive(_283)<br/>_283 = (_285.0: state::spot_market::SpotBalanceType)<br/>StorageLive(_284)<br/>_284 = (_285.1: u64)<br/>StorageDead(_285)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = _237<br/>StorageLive(_370)<br/>_370 = _284<br/>StorageLive(_371)<br/>_371 = _236<br/>StorageLive(_372)<br/>_372 = _283<br/>StorageLive(_373)<br/>_373 = _282<br/>StorageLive(_374)<br/>_374 = _272<br/>StorageLive(_375)<br/>_375 = _226<br/>_368 = ExternalSpotFill { base_asset_amount_filled: move _369, base_update_direction: move _371, quote_asset_amount_filled: move _370, quote_update_direction: move _372, settled_referrer_rebate: move _375, unsettled_referrer_rebate: move _374, fee: move _373 }<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _368)<br/>StorageDead(_368)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_272)<br/>StorageDead(_237)<br/>StorageDead(_236)<br/>StorageDead(_226)<br/>StorageDead(_221)<br/>_384 = const false<br/>StorageDead(_210)<br/>StorageDead(_205)<br/>StorageDead(_200)<br/>StorageDead(_164)<br/>_385 = const false<br/>StorageDead(_153)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>_386 = const false<br/>StorageDead(_134)<br/>StorageDead(_118)<br/>StorageDead(_113)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_70)<br/>StorageDead(_48)<br/>StorageDead(_31)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>_383 = const false<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_329)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_330)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_309)<br/>StorageDead(_290)<br/>StorageDead(_314)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_285)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">_384 = const false<br/>StorageDead(_210)<br/>StorageDead(_205)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">_385 = const false<br/>StorageDead(_153)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">_386 = const false<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_113)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">switchInt(_383)</td></tr></table>>];
    bb203__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">_383 = const false<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left">return</td></tr></table>>];
    bb205__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb206__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb207__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">207 (cleanup)</td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb208__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">208 (cleanup)</td></tr><tr><td align="left">switchInt(_384)</td></tr></table>>];
    bb209__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">209 (cleanup)</td></tr><tr><td align="left" balign="left">_403 = discriminant(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">210 (cleanup)</td></tr><tr><td align="left">drop(_153)</td></tr></table>>];
    bb211__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">211 (cleanup)</td></tr><tr><td align="left">switchInt(_385)</td></tr></table>>];
    bb212__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">212 (cleanup)</td></tr><tr><td align="left" balign="left">_404 = discriminant(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">213 (cleanup)</td></tr><tr><td align="left">drop(_134)</td></tr></table>>];
    bb214__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">214 (cleanup)</td></tr><tr><td align="left">switchInt(_386)</td></tr></table>>];
    bb215__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">215 (cleanup)</td></tr><tr><td align="left" balign="left">_405 = discriminant(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">216 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb217__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">217 (cleanup)</td></tr><tr><td align="left">switchInt(_383)</td></tr></table>>];
    bb218__0_3312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">218 (cleanup)</td></tr><tr><td align="left" balign="left">_406 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3312 -> bb1__0_3312 [label="return"];
    bb1__0_3312 -> bb2__0_3312 [label="return"];
    bb2__0_3312 -> bb3__0_3312 [label="return"];
    bb2__0_3312 -> bb205__0_3312 [label="unwind"];
    bb3__0_3312 -> bb4__0_3312 [label="0"];
    bb3__0_3312 -> bb6__0_3312 [label="1"];
    bb3__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb4__0_3312 -> bb9__0_3312 [label="0"];
    bb4__0_3312 -> bb8__0_3312 [label="1"];
    bb4__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb6__0_3312 -> bb7__0_3312 [label="return"];
    bb6__0_3312 -> bb218__0_3312 [label="unwind"];
    bb7__0_3312 -> bb203__0_3312 [label=""];
    bb8__0_3312 -> bb10__0_3312 [label=""];
    bb9__0_3312 -> bb10__0_3312 [label=""];
    bb10__0_3312 -> bb11__0_3312 [label="return"];
    bb10__0_3312 -> bb217__0_3312 [label="unwind"];
    bb11__0_3312 -> bb12__0_3312 [label="return"];
    bb11__0_3312 -> bb217__0_3312 [label="unwind"];
    bb12__0_3312 -> bb13__0_3312 [label="return"];
    bb12__0_3312 -> bb217__0_3312 [label="unwind"];
    bb13__0_3312 -> bb14__0_3312 [label="0"];
    bb13__0_3312 -> bb15__0_3312 [label="1"];
    bb13__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb14__0_3312 -> bb17__0_3312 [label="return"];
    bb14__0_3312 -> bb217__0_3312 [label="unwind"];
    bb15__0_3312 -> bb16__0_3312 [label="return"];
    bb15__0_3312 -> bb217__0_3312 [label="unwind"];
    bb16__0_3312 -> bb202__0_3312 [label=""];
    bb17__0_3312 -> bb18__0_3312 [label="return"];
    bb17__0_3312 -> bb217__0_3312 [label="unwind"];
    bb18__0_3312 -> bb19__0_3312 [label="return"];
    bb18__0_3312 -> bb217__0_3312 [label="unwind"];
    bb19__0_3312 -> bb20__0_3312 [label="return"];
    bb19__0_3312 -> bb217__0_3312 [label="unwind"];
    bb20__0_3312 -> bb21__0_3312 [label="0"];
    bb20__0_3312 -> bb22__0_3312 [label="1"];
    bb20__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb21__0_3312 -> bb24__0_3312 [label="return"];
    bb21__0_3312 -> bb217__0_3312 [label="unwind"];
    bb22__0_3312 -> bb23__0_3312 [label="return"];
    bb22__0_3312 -> bb217__0_3312 [label="unwind"];
    bb23__0_3312 -> bb201__0_3312 [label=""];
    bb24__0_3312 -> bb25__0_3312 [label="return"];
    bb24__0_3312 -> bb217__0_3312 [label="unwind"];
    bb25__0_3312 -> bb26__0_3312 [label="return"];
    bb25__0_3312 -> bb217__0_3312 [label="unwind"];
    bb26__0_3312 -> bb27__0_3312 [label="0"];
    bb26__0_3312 -> bb28__0_3312 [label="1"];
    bb26__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb27__0_3312 -> bb30__0_3312 [label="return"];
    bb27__0_3312 -> bb217__0_3312 [label="unwind"];
    bb28__0_3312 -> bb29__0_3312 [label="return"];
    bb28__0_3312 -> bb217__0_3312 [label="unwind"];
    bb29__0_3312 -> bb200__0_3312 [label=""];
    bb30__0_3312 -> bb32__0_3312 [label="0"];
    bb30__0_3312 -> bb31__0_3312 [label="otherwise"];
    bb31__0_3312 -> bb33__0_3312 [label=""];
    bb32__0_3312 -> bb35__0_3312 [label="0"];
    bb32__0_3312 -> bb33__0_3312 [label="otherwise"];
    bb33__0_3312 -> bb34__0_3312 [label="return"];
    bb33__0_3312 -> bb217__0_3312 [label="unwind"];
    bb34__0_3312 -> bb200__0_3312 [label=""];
    bb35__0_3312 -> bb36__0_3312 [label="return"];
    bb35__0_3312 -> bb217__0_3312 [label="unwind"];
    bb36__0_3312 -> bb37__0_3312 [label="return"];
    bb36__0_3312 -> bb217__0_3312 [label="unwind"];
    bb37__0_3312 -> bb38__0_3312 [label="return"];
    bb37__0_3312 -> bb217__0_3312 [label="unwind"];
    bb38__0_3312 -> bb39__0_3312 [label="0"];
    bb38__0_3312 -> bb40__0_3312 [label="1"];
    bb38__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb39__0_3312 -> bb42__0_3312 [label="return"];
    bb39__0_3312 -> bb217__0_3312 [label="unwind"];
    bb40__0_3312 -> bb41__0_3312 [label="return"];
    bb40__0_3312 -> bb217__0_3312 [label="unwind"];
    bb41__0_3312 -> bb198__0_3312 [label=""];
    bb42__0_3312 -> bb43__0_3312 [label="return"];
    bb42__0_3312 -> bb217__0_3312 [label="unwind"];
    bb43__0_3312 -> bb44__0_3312 [label="return"];
    bb43__0_3312 -> bb217__0_3312 [label="unwind"];
    bb44__0_3312 -> bb45__0_3312 [label="0"];
    bb44__0_3312 -> bb46__0_3312 [label="1"];
    bb44__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb45__0_3312 -> bb48__0_3312 [label="return"];
    bb45__0_3312 -> bb217__0_3312 [label="unwind"];
    bb46__0_3312 -> bb47__0_3312 [label="return"];
    bb46__0_3312 -> bb217__0_3312 [label="unwind"];
    bb47__0_3312 -> bb197__0_3312 [label=""];
    bb48__0_3312 -> bb49__0_3312 [label="return"];
    bb48__0_3312 -> bb217__0_3312 [label="unwind"];
    bb49__0_3312 -> bb50__0_3312 [label="return"];
    bb49__0_3312 -> bb217__0_3312 [label="unwind"];
    bb50__0_3312 -> bb51__0_3312 [label="0"];
    bb50__0_3312 -> bb52__0_3312 [label="1"];
    bb50__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb51__0_3312 -> bb54__0_3312 [label="return"];
    bb51__0_3312 -> bb217__0_3312 [label="unwind"];
    bb52__0_3312 -> bb53__0_3312 [label="return"];
    bb52__0_3312 -> bb217__0_3312 [label="unwind"];
    bb53__0_3312 -> bb197__0_3312 [label=""];
    bb54__0_3312 -> bb55__0_3312 [label="return"];
    bb54__0_3312 -> bb217__0_3312 [label="unwind"];
    bb55__0_3312 -> bb56__0_3312 [label="return"];
    bb55__0_3312 -> bb217__0_3312 [label="unwind"];
    bb56__0_3312 -> bb57__0_3312 [label="return"];
    bb56__0_3312 -> bb217__0_3312 [label="unwind"];
    bb57__0_3312 -> bb58__0_3312 [label="return"];
    bb57__0_3312 -> bb217__0_3312 [label="unwind"];
    bb58__0_3312 -> bb59__0_3312 [label="return"];
    bb58__0_3312 -> bb217__0_3312 [label="unwind"];
    bb59__0_3312 -> bb60__0_3312 [label="return"];
    bb59__0_3312 -> bb217__0_3312 [label="unwind"];
    bb60__0_3312 -> bb61__0_3312 [label="return"];
    bb60__0_3312 -> bb217__0_3312 [label="unwind"];
    bb61__0_3312 -> bb62__0_3312 [label="return"];
    bb61__0_3312 -> bb217__0_3312 [label="unwind"];
    bb62__0_3312 -> bb63__0_3312 [label="0"];
    bb62__0_3312 -> bb64__0_3312 [label="1"];
    bb62__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb63__0_3312 -> bb66__0_3312 [label="return"];
    bb63__0_3312 -> bb217__0_3312 [label="unwind"];
    bb64__0_3312 -> bb65__0_3312 [label="return"];
    bb64__0_3312 -> bb217__0_3312 [label="unwind"];
    bb65__0_3312 -> bb196__0_3312 [label=""];
    bb66__0_3312 -> bb67__0_3312 [label="return"];
    bb66__0_3312 -> bb217__0_3312 [label="unwind"];
    bb67__0_3312 -> bb68__0_3312 [label="return"];
    bb67__0_3312 -> bb217__0_3312 [label="unwind"];
    bb68__0_3312 -> bb69__0_3312 [label="0"];
    bb68__0_3312 -> bb70__0_3312 [label="1"];
    bb68__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb69__0_3312 -> bb72__0_3312 [label="return"];
    bb69__0_3312 -> bb214__0_3312 [label="unwind"];
    bb70__0_3312 -> bb71__0_3312 [label="return"];
    bb70__0_3312 -> bb215__0_3312 [label="unwind"];
    bb71__0_3312 -> bb195__0_3312 [label=""];
    bb72__0_3312 -> bb73__0_3312 [label="return"];
    bb72__0_3312 -> bb214__0_3312 [label="unwind"];
    bb73__0_3312 -> bb74__0_3312 [label="return"];
    bb73__0_3312 -> bb214__0_3312 [label="unwind"];
    bb74__0_3312 -> bb75__0_3312 [label="return"];
    bb74__0_3312 -> bb214__0_3312 [label="unwind"];
    bb75__0_3312 -> bb76__0_3312 [label="return"];
    bb75__0_3312 -> bb214__0_3312 [label="unwind"];
    bb76__0_3312 -> bb77__0_3312 [label="return"];
    bb76__0_3312 -> bb214__0_3312 [label="unwind"];
    bb77__0_3312 -> bb78__0_3312 [label="0"];
    bb77__0_3312 -> bb79__0_3312 [label="1"];
    bb77__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb78__0_3312 -> bb81__0_3312 [label="return"];
    bb78__0_3312 -> bb211__0_3312 [label="unwind"];
    bb79__0_3312 -> bb80__0_3312 [label="return"];
    bb79__0_3312 -> bb212__0_3312 [label="unwind"];
    bb80__0_3312 -> bb194__0_3312 [label=""];
    bb81__0_3312 -> bb82__0_3312 [label="return"];
    bb81__0_3312 -> bb211__0_3312 [label="unwind"];
    bb82__0_3312 -> bb83__0_3312 [label="return"];
    bb82__0_3312 -> bb211__0_3312 [label="unwind"];
    bb83__0_3312 -> bb84__0_3312 [label="return"];
    bb83__0_3312 -> bb211__0_3312 [label="unwind"];
    bb84__0_3312 -> bb85__0_3312 [label="0"];
    bb84__0_3312 -> bb86__0_3312 [label="1"];
    bb84__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb85__0_3312 -> bb88__0_3312 [label="return"];
    bb85__0_3312 -> bb211__0_3312 [label="unwind"];
    bb86__0_3312 -> bb87__0_3312 [label="return"];
    bb86__0_3312 -> bb211__0_3312 [label="unwind"];
    bb87__0_3312 -> bb193__0_3312 [label=""];
    bb88__0_3312 -> bb89__0_3312 [label="return"];
    bb88__0_3312 -> bb211__0_3312 [label="unwind"];
    bb89__0_3312 -> bb90__0_3312 [label="return"];
    bb89__0_3312 -> bb211__0_3312 [label="unwind"];
    bb90__0_3312 -> bb91__0_3312 [label="0"];
    bb90__0_3312 -> bb92__0_3312 [label="1"];
    bb90__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb91__0_3312 -> bb94__0_3312 [label="return"];
    bb91__0_3312 -> bb211__0_3312 [label="unwind"];
    bb92__0_3312 -> bb93__0_3312 [label="return"];
    bb92__0_3312 -> bb211__0_3312 [label="unwind"];
    bb93__0_3312 -> bb193__0_3312 [label=""];
    bb94__0_3312 -> bb95__0_3312 [label="return"];
    bb94__0_3312 -> bb211__0_3312 [label="unwind"];
    bb95__0_3312 -> bb96__0_3312 [label="return"];
    bb95__0_3312 -> bb211__0_3312 [label="unwind"];
    bb96__0_3312 -> bb97__0_3312 [label="0"];
    bb96__0_3312 -> bb98__0_3312 [label="1"];
    bb96__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb97__0_3312 -> bb100__0_3312 [label="return"];
    bb97__0_3312 -> bb211__0_3312 [label="unwind"];
    bb98__0_3312 -> bb99__0_3312 [label="return"];
    bb98__0_3312 -> bb211__0_3312 [label="unwind"];
    bb99__0_3312 -> bb193__0_3312 [label=""];
    bb100__0_3312 -> bb101__0_3312 [label="return"];
    bb100__0_3312 -> bb211__0_3312 [label="unwind"];
    bb101__0_3312 -> bb102__0_3312 [label="return"];
    bb101__0_3312 -> bb211__0_3312 [label="unwind"];
    bb102__0_3312 -> bb103__0_3312 [label="return"];
    bb102__0_3312 -> bb211__0_3312 [label="unwind"];
    bb103__0_3312 -> bb104__0_3312 [label="return"];
    bb103__0_3312 -> bb211__0_3312 [label="unwind"];
    bb104__0_3312 -> bb105__0_3312 [label="return"];
    bb104__0_3312 -> bb211__0_3312 [label="unwind"];
    bb105__0_3312 -> bb106__0_3312 [label="return"];
    bb105__0_3312 -> bb211__0_3312 [label="unwind"];
    bb106__0_3312 -> bb107__0_3312 [label="0"];
    bb106__0_3312 -> bb108__0_3312 [label="1"];
    bb106__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb107__0_3312 -> bb110__0_3312 [label="return"];
    bb107__0_3312 -> bb208__0_3312 [label="unwind"];
    bb108__0_3312 -> bb109__0_3312 [label="return"];
    bb108__0_3312 -> bb209__0_3312 [label="unwind"];
    bb109__0_3312 -> bb192__0_3312 [label=""];
    bb110__0_3312 -> bb111__0_3312 [label="return"];
    bb110__0_3312 -> bb208__0_3312 [label="unwind"];
    bb111__0_3312 -> bb112__0_3312 [label="return"];
    bb111__0_3312 -> bb208__0_3312 [label="unwind"];
    bb112__0_3312 -> bb113__0_3312 [label="return"];
    bb112__0_3312 -> bb208__0_3312 [label="unwind"];
    bb113__0_3312 -> bb114__0_3312 [label="0"];
    bb113__0_3312 -> bb115__0_3312 [label="1"];
    bb113__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb114__0_3312 -> bb118__0_3312 [label="0"];
    bb114__0_3312 -> bb117__0_3312 [label="otherwise"];
    bb115__0_3312 -> bb116__0_3312 [label="return"];
    bb115__0_3312 -> bb208__0_3312 [label="unwind"];
    bb116__0_3312 -> bb191__0_3312 [label=""];
    bb117__0_3312 -> bb119__0_3312 [label="return"];
    bb117__0_3312 -> bb208__0_3312 [label="unwind"];
    bb118__0_3312 -> bb124__0_3312 [label="return"];
    bb118__0_3312 -> bb208__0_3312 [label="unwind"];
    bb119__0_3312 -> bb120__0_3312 [label="return"];
    bb119__0_3312 -> bb208__0_3312 [label="unwind"];
    bb120__0_3312 -> bb121__0_3312 [label="0"];
    bb120__0_3312 -> bb122__0_3312 [label="1"];
    bb120__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb121__0_3312 -> bb129__0_3312 [label=""];
    bb122__0_3312 -> bb123__0_3312 [label="return"];
    bb122__0_3312 -> bb208__0_3312 [label="unwind"];
    bb123__0_3312 -> bb190__0_3312 [label=""];
    bb124__0_3312 -> bb125__0_3312 [label="return"];
    bb124__0_3312 -> bb208__0_3312 [label="unwind"];
    bb125__0_3312 -> bb126__0_3312 [label="0"];
    bb125__0_3312 -> bb127__0_3312 [label="1"];
    bb125__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb126__0_3312 -> bb129__0_3312 [label=""];
    bb127__0_3312 -> bb128__0_3312 [label="return"];
    bb127__0_3312 -> bb208__0_3312 [label="unwind"];
    bb128__0_3312 -> bb190__0_3312 [label=""];
    bb129__0_3312 -> bb133__0_3312 [label="0"];
    bb129__0_3312 -> bb130__0_3312 [label="otherwise"];
    bb130__0_3312 -> bb131__0_3312 [label="return"];
    bb130__0_3312 -> bb208__0_3312 [label="unwind"];
    bb131__0_3312 -> bb132__0_3312 [label="return"];
    bb131__0_3312 -> bb208__0_3312 [label="unwind"];
    bb132__0_3312 -> bb189__0_3312 [label=""];
    bb133__0_3312 -> bb134__0_3312 [label="return"];
    bb133__0_3312 -> bb208__0_3312 [label="unwind"];
    bb134__0_3312 -> bb135__0_3312 [label="return"];
    bb134__0_3312 -> bb208__0_3312 [label="unwind"];
    bb135__0_3312 -> bb136__0_3312 [label="0"];
    bb135__0_3312 -> bb137__0_3312 [label="1"];
    bb135__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb136__0_3312 -> bb139__0_3312 [label="return"];
    bb136__0_3312 -> bb208__0_3312 [label="unwind"];
    bb137__0_3312 -> bb138__0_3312 [label="return"];
    bb137__0_3312 -> bb208__0_3312 [label="unwind"];
    bb138__0_3312 -> bb188__0_3312 [label=""];
    bb139__0_3312 -> bb161__0_3312 [label="0"];
    bb139__0_3312 -> bb140__0_3312 [label="otherwise"];
    bb140__0_3312 -> bb141__0_3312 [label="return"];
    bb140__0_3312 -> bb208__0_3312 [label="unwind"];
    bb141__0_3312 -> bb142__0_3312 [label="return"];
    bb141__0_3312 -> bb208__0_3312 [label="unwind"];
    bb142__0_3312 -> bb143__0_3312 [label="0"];
    bb142__0_3312 -> bb144__0_3312 [label="1"];
    bb142__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb143__0_3312 -> bb146__0_3312 [label="return"];
    bb143__0_3312 -> bb208__0_3312 [label="unwind"];
    bb144__0_3312 -> bb145__0_3312 [label="return"];
    bb144__0_3312 -> bb208__0_3312 [label="unwind"];
    bb145__0_3312 -> bb186__0_3312 [label=""];
    bb146__0_3312 -> bb147__0_3312 [label="return"];
    bb146__0_3312 -> bb208__0_3312 [label="unwind"];
    bb147__0_3312 -> bb148__0_3312 [label="0"];
    bb147__0_3312 -> bb149__0_3312 [label="1"];
    bb147__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb148__0_3312 -> bb151__0_3312 [label="return"];
    bb148__0_3312 -> bb208__0_3312 [label="unwind"];
    bb149__0_3312 -> bb150__0_3312 [label="return"];
    bb149__0_3312 -> bb208__0_3312 [label="unwind"];
    bb150__0_3312 -> bb186__0_3312 [label=""];
    bb151__0_3312 -> bb152__0_3312 [label="return"];
    bb151__0_3312 -> bb208__0_3312 [label="unwind"];
    bb152__0_3312 -> bb153__0_3312 [label="0"];
    bb152__0_3312 -> bb154__0_3312 [label="1"];
    bb152__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb153__0_3312 -> bb156__0_3312 [label="return"];
    bb153__0_3312 -> bb208__0_3312 [label="unwind"];
    bb154__0_3312 -> bb155__0_3312 [label="return"];
    bb154__0_3312 -> bb208__0_3312 [label="unwind"];
    bb155__0_3312 -> bb185__0_3312 [label=""];
    bb156__0_3312 -> bb157__0_3312 [label="return"];
    bb156__0_3312 -> bb208__0_3312 [label="unwind"];
    bb157__0_3312 -> bb158__0_3312 [label="0"];
    bb157__0_3312 -> bb159__0_3312 [label="1"];
    bb157__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb158__0_3312 -> bb182__0_3312 [label=""];
    bb159__0_3312 -> bb160__0_3312 [label="return"];
    bb159__0_3312 -> bb208__0_3312 [label="unwind"];
    bb160__0_3312 -> bb185__0_3312 [label=""];
    bb161__0_3312 -> bb162__0_3312 [label="return"];
    bb161__0_3312 -> bb208__0_3312 [label="unwind"];
    bb162__0_3312 -> bb163__0_3312 [label="return"];
    bb162__0_3312 -> bb208__0_3312 [label="unwind"];
    bb163__0_3312 -> bb164__0_3312 [label="0"];
    bb163__0_3312 -> bb165__0_3312 [label="1"];
    bb163__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb164__0_3312 -> bb167__0_3312 [label="return"];
    bb164__0_3312 -> bb208__0_3312 [label="unwind"];
    bb165__0_3312 -> bb166__0_3312 [label="return"];
    bb165__0_3312 -> bb208__0_3312 [label="unwind"];
    bb166__0_3312 -> bb184__0_3312 [label=""];
    bb167__0_3312 -> bb168__0_3312 [label="return"];
    bb167__0_3312 -> bb208__0_3312 [label="unwind"];
    bb168__0_3312 -> bb169__0_3312 [label="0"];
    bb168__0_3312 -> bb170__0_3312 [label="1"];
    bb168__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb169__0_3312 -> bb172__0_3312 [label="return"];
    bb169__0_3312 -> bb208__0_3312 [label="unwind"];
    bb170__0_3312 -> bb171__0_3312 [label="return"];
    bb170__0_3312 -> bb208__0_3312 [label="unwind"];
    bb171__0_3312 -> bb184__0_3312 [label=""];
    bb172__0_3312 -> bb173__0_3312 [label="return"];
    bb172__0_3312 -> bb208__0_3312 [label="unwind"];
    bb173__0_3312 -> bb174__0_3312 [label="0"];
    bb173__0_3312 -> bb175__0_3312 [label="1"];
    bb173__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb174__0_3312 -> bb177__0_3312 [label="return"];
    bb174__0_3312 -> bb208__0_3312 [label="unwind"];
    bb175__0_3312 -> bb176__0_3312 [label="return"];
    bb175__0_3312 -> bb208__0_3312 [label="unwind"];
    bb176__0_3312 -> bb183__0_3312 [label=""];
    bb177__0_3312 -> bb178__0_3312 [label="return"];
    bb177__0_3312 -> bb208__0_3312 [label="unwind"];
    bb178__0_3312 -> bb179__0_3312 [label="0"];
    bb178__0_3312 -> bb180__0_3312 [label="1"];
    bb178__0_3312 -> bb5__0_3312 [label="otherwise"];
    bb179__0_3312 -> bb182__0_3312 [label=""];
    bb180__0_3312 -> bb181__0_3312 [label="return"];
    bb180__0_3312 -> bb208__0_3312 [label="unwind"];
    bb181__0_3312 -> bb183__0_3312 [label=""];
    bb182__0_3312 -> bb204__0_3312 [label=""];
    bb183__0_3312 -> bb187__0_3312 [label=""];
    bb184__0_3312 -> bb187__0_3312 [label=""];
    bb185__0_3312 -> bb187__0_3312 [label=""];
    bb186__0_3312 -> bb187__0_3312 [label=""];
    bb187__0_3312 -> bb188__0_3312 [label=""];
    bb188__0_3312 -> bb189__0_3312 [label=""];
    bb189__0_3312 -> bb191__0_3312 [label=""];
    bb190__0_3312 -> bb191__0_3312 [label=""];
    bb191__0_3312 -> bb192__0_3312 [label=""];
    bb192__0_3312 -> bb193__0_3312 [label=""];
    bb193__0_3312 -> bb194__0_3312 [label=""];
    bb194__0_3312 -> bb195__0_3312 [label=""];
    bb195__0_3312 -> bb196__0_3312 [label=""];
    bb196__0_3312 -> bb199__0_3312 [label=""];
    bb197__0_3312 -> bb198__0_3312 [label=""];
    bb198__0_3312 -> bb199__0_3312 [label=""];
    bb199__0_3312 -> bb200__0_3312 [label=""];
    bb200__0_3312 -> bb201__0_3312 [label=""];
    bb201__0_3312 -> bb202__0_3312 [label=""];
    bb202__0_3312 -> bb203__0_3312 [label="0"];
    bb202__0_3312 -> bb206__0_3312 [label="otherwise"];
    bb203__0_3312 -> bb204__0_3312 [label=""];
    bb206__0_3312 -> bb203__0_3312 [label="return"];
    bb206__0_3312 -> bb205__0_3312 [label="unwind"];
    bb207__0_3312 -> bb211__0_3312 [label="return"];
    bb208__0_3312 -> bb211__0_3312 [label="0"];
    bb208__0_3312 -> bb207__0_3312 [label="otherwise"];
    bb209__0_3312 -> bb211__0_3312 [label=""];
    bb210__0_3312 -> bb214__0_3312 [label="return"];
    bb211__0_3312 -> bb214__0_3312 [label="0"];
    bb211__0_3312 -> bb210__0_3312 [label="otherwise"];
    bb212__0_3312 -> bb214__0_3312 [label=""];
    bb213__0_3312 -> bb217__0_3312 [label="return"];
    bb214__0_3312 -> bb217__0_3312 [label="0"];
    bb214__0_3312 -> bb213__0_3312 [label="otherwise"];
    bb215__0_3312 -> bb217__0_3312 [label=""];
    bb216__0_3312 -> bb205__0_3312 [label="return"];
    bb217__0_3312 -> bb205__0_3312 [label="0"];
    bb217__0_3312 -> bb216__0_3312 [label="otherwise"];
    bb218__0_3312 -> bb205__0_3312 [label=""];
}
