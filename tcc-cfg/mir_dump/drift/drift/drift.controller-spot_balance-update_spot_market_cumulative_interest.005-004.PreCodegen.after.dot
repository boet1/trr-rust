digraph Mir_0_793 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::spot_balance::update_spot_market_cumulative_interest(_1: &amp;ReErased mut state::spot_market::SpotMarket, _2: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;, _3: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _7: state::paused_operations::SpotOperation;<br align="left"/>let mut _8: !;<br align="left"/>let _9: ();<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _11: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _12: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _13: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _14: i64;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: ();<br align="left"/>let mut _20: ();<br align="left"/>let _21: u128;<br align="left"/>let _22: u128;<br align="left"/>let mut _23: math::spot_balance::InterestAccumulated;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::spot_balance::InterestAccumulated&gt;;<br align="left"/>let mut _25: std::result::Result&lt;math::spot_balance::InterestAccumulated, error::ErrorCode&gt;;<br align="left"/>let mut _26: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: math::spot_balance::InterestAccumulated;<br align="left"/>let _33: ();<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: u128;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: u32;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u128;<br align="left"/>let _57: u128;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _59: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _60: u128;<br align="left"/>let mut _61: u128;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: u128;<br align="left"/>let mut _69: u128;<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _71: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _72: u128;<br align="left"/>let mut _73: u128;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: u128;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _82: u128;<br align="left"/>let mut _83: u128;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: u128;<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _91: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _92: i64;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: u64;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _100: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _101: u128;<br align="left"/>let mut _102: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: u128;<br align="left"/>let _109: ();<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _111: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _112: u128;<br align="left"/>let mut _113: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _114: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _115: state::spot_market::SpotBalanceType;<br align="left"/>let mut _116: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: ();<br align="left"/>let _122: ();<br align="left"/>let _123: ();<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _125: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _126: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _127: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _128: &amp;ReErased [u8];<br align="left"/>let _129: &amp;ReErased [u8];<br align="left"/>let mut _130: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _131: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _132: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _133: &amp;ReErased state::events::SpotInterestRecord;<br align="left"/>let _134: &amp;ReErased state::events::SpotInterestRecord;<br align="left"/>let _135: state::events::SpotInterestRecord;<br align="left"/>let mut _136: i64;<br align="left"/>let mut _137: u16;<br align="left"/>let mut _138: u128;<br align="left"/>let mut _139: u128;<br align="left"/>let mut _140: u128;<br align="left"/>let mut _141: u128;<br align="left"/>let mut _142: u32;<br align="left"/>let mut _143: u32;<br align="left"/>let mut _144: u32;<br align="left"/>let _145: ();<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _147: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _148: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _149: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _150: i64;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: ();<br align="left"/>let mut _156: ();<br align="left"/>let mut _157: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug oracle_price_data =&gt; _2;<br align="left"/>debug now =&gt; _3;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug deposit_interest =&gt; _21;<br align="left"/>debug borrow_interest =&gt; _22;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug deposit_interest_for_stakers =&gt; _38;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug deposit_interest_for_lenders =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug token_amount =&gt; _98;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>>;
    bb0__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>_7 = SpotOperation::UpdateCumulativeInterest<br/></td></tr><tr><td align="left">_5 = SpotMarket::is_operation_paused(move _6, move _7)</td></tr></table>>];
    bb1__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;mut (*_1)<br/>StorageLive(_13)<br/>_13 = _2<br/>StorageLive(_14)<br/>_14 = _3<br/></td></tr><tr><td align="left">_11 = update_spot_market_twap_stats(move _12, move _13, move _14)</td></tr></table>>];
    bb3__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_15 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb5__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_10 as Continue).0: ())<br/>_9 = _19<br/>StorageDead(_19)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_20)<br/>_20 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb8__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_1)<br/>StorageLive(_27)<br/>_27 = _3<br/></td></tr><tr><td align="left">_25 = calculate_accumulated_interest(move _26, move _27)</td></tr></table>>];
    bb10__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb11__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_28 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb12__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_24 as Continue).0: math::spot_balance::InterestAccumulated)<br/>_23 = move _32<br/>StorageDead(_32)<br/>StorageLive(_21)<br/>_21 = (_23.1: u128)<br/>StorageLive(_22)<br/>_22 = (_23.0: u128)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _21<br/>_34 = Gt(move _35, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb13__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb14__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _22<br/>_36 = Gt(move _37, const 1_u128)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb16__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _21<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = (((*_1).9: state::spot_market::InsuranceFund).7: u32)<br/>_45 = move _46 as u128 (IntToInt)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = &lt;u128 as SafeMath&gt;::safe_mul(move _44, move _45)</td></tr></table>>];
    bb18__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb19__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_47 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb20__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_42 as Continue).0: u128)<br/>_41 = _51<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_40 = &lt;u128 as SafeMath&gt;::safe_div(move _41, const _)</td></tr></table>>];
    bb21__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb22__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb24__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_52 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb25__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_39 as Continue).0: u128)<br/>_38 = _56<br/>StorageDead(_56)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _21<br/>StorageLive(_61)<br/>_61 = _38<br/></td></tr><tr><td align="left">_59 = &lt;u128 as SafeMath&gt;::safe_sub(move _60, move _61)</td></tr></table>>];
    bb26__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb27__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb29__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_62 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb30__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_58 as Continue).0: u128)<br/>_57 = _66<br/>StorageDead(_66)<br/>StorageDead(_58)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _57<br/>_67 = Gt(move _68, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb31__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb32__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = ((*_1).13: u128)<br/>StorageLive(_73)<br/>_73 = _57<br/></td></tr><tr><td align="left">_71 = &lt;u128 as SafeMath&gt;::safe_add(move _72, move _73)</td></tr></table>>];
    bb34__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_33 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb36__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_74 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb37__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_70 as Continue).0: u128)<br/>_69 = _78<br/>StorageDead(_78)<br/>((*_1).13: u128) = move _69<br/>StorageDead(_69)<br/>StorageDead(_70)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = ((*_1).14: u128)<br/>StorageLive(_83)<br/>_83 = _22<br/></td></tr><tr><td align="left">_81 = &lt;u128 as SafeMath&gt;::safe_add(move _82, move _83)</td></tr></table>>];
    bb38__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb39__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb41__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_84 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb42__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_80 as Continue).0: u128)<br/>_79 = _88<br/>StorageDead(_88)<br/>((*_1).14: u128) = move _79<br/>StorageDead(_79)<br/>StorageDead(_80)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = _3<br/></td></tr><tr><td align="left">_91 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _92)</td></tr></table>>];
    bb43__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb44__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_79)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb46__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_93 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb47__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_90 as Continue).0: u64)<br/>_89 = _97<br/>StorageDead(_97)<br/>((*_1).22: u64) = move _89<br/>StorageDead(_89)<br/>StorageDead(_90)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = ((*_1).11: u128)<br/>StorageLive(_102)<br/>_102 = &amp;(*_1)<br/>StorageLive(_103)<br/>_103 = _38<br/></td></tr><tr><td align="left">_100 = get_interest_token_amount(move _101, move _102, move _103)</td></tr></table>>];
    bb48__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb49__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_89)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb51__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_104 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb52__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_99 as Continue).0: u128)<br/>_98 = _108<br/>StorageDead(_108)<br/>StorageDead(_99)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = _98<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_157 = const _<br/>_114 = &amp;(*_157)<br/>_113 = &amp;(*_114)<br/>StorageLive(_116)<br/>_116 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_111 = update_revenue_pool_balances(move _112, move _113, move _116)</td></tr></table>>];
    bb53__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb54__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb56__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_117 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb57__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_110 as Continue).0: ())<br/>_109 = _121<br/>StorageDead(_121)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = _3<br/>StorageLive(_137)<br/>_137 = ((*_1).42: u16)<br/>StorageLive(_138)<br/>_138 = ((*_1).11: u128)<br/>StorageLive(_139)<br/>_139 = ((*_1).13: u128)<br/>StorageLive(_140)<br/>_140 = ((*_1).12: u128)<br/>StorageLive(_141)<br/>_141 = ((*_1).14: u128)<br/>StorageLive(_142)<br/>_142 = ((*_1).38: u32)<br/>StorageLive(_143)<br/>_143 = ((*_1).39: u32)<br/>StorageLive(_144)<br/>_144 = ((*_1).40: u32)<br/>_135 = SpotInterestRecord { ts: move _136, market_index: move _137, deposit_balance: move _138, cumulative_deposit_interest: move _139, borrow_balance: move _140, cumulative_borrow_interest: move _141, optimal_utilization: move _142, optimal_borrow_rate: move _143, max_borrow_rate: move _144 }<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;SpotInterestRecord as anchor_lang::Event&gt;::data(move _133)</td></tr></table>>];
    bb58__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb59__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = &amp;_132<br/>_130 = &amp;(*_131)<br/></td></tr><tr><td align="left">_129 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb61__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_128 = &amp;(*_129)<br/>StorageDead(_130)<br/>_127 = [move _128]<br/>StorageDead(_128)<br/>_126 = &amp;_127<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = solana_program::log::sol_log_data(move _124)</td></tr></table>>];
    bb62__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">drop(_132)</td></tr></table>>];
    bb63__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>_122 = const ()<br/>StorageDead(_122)<br/>_33 = const ()<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_57)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_33 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;mut (*_1)<br/>StorageLive(_149)<br/>_149 = _2<br/>StorageLive(_150)<br/>_150 = _3<br/></td></tr><tr><td align="left">_147 = update_spot_market_twap_stats(move _148, move _149, move _150)</td></tr></table>>];
    bb68__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb69__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_151 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb70__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_146 as Continue).0: ())<br/>_145 = _155<br/>StorageDead(_155)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_156)<br/>_156 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _156)<br/>StorageDead(_156)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb72__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">return</td></tr></table>>];
    bb81__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_132)</td></tr></table>>];
    bb82__0_793 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_793 -> bb1__0_793 [label="return"];
    bb1__0_793 -> bb9__0_793 [label="0"];
    bb1__0_793 -> bb2__0_793 [label="otherwise"];
    bb2__0_793 -> bb3__0_793 [label="return"];
    bb3__0_793 -> bb4__0_793 [label="return"];
    bb4__0_793 -> bb5__0_793 [label="0"];
    bb4__0_793 -> bb7__0_793 [label="1"];
    bb4__0_793 -> bb6__0_793 [label="otherwise"];
    bb5__0_793 -> bb79__0_793 [label=""];
    bb7__0_793 -> bb8__0_793 [label="return"];
    bb8__0_793 -> bb79__0_793 [label=""];
    bb9__0_793 -> bb10__0_793 [label="return"];
    bb10__0_793 -> bb11__0_793 [label="return"];
    bb11__0_793 -> bb12__0_793 [label="0"];
    bb11__0_793 -> bb13__0_793 [label="1"];
    bb11__0_793 -> bb6__0_793 [label="otherwise"];
    bb12__0_793 -> bb16__0_793 [label="0"];
    bb12__0_793 -> bb15__0_793 [label="otherwise"];
    bb13__0_793 -> bb14__0_793 [label="return"];
    bb14__0_793 -> bb80__0_793 [label=""];
    bb15__0_793 -> bb65__0_793 [label="0"];
    bb15__0_793 -> bb17__0_793 [label="otherwise"];
    bb16__0_793 -> bb66__0_793 [label=""];
    bb17__0_793 -> bb18__0_793 [label="return"];
    bb18__0_793 -> bb19__0_793 [label="return"];
    bb19__0_793 -> bb20__0_793 [label="0"];
    bb19__0_793 -> bb21__0_793 [label="1"];
    bb19__0_793 -> bb6__0_793 [label="otherwise"];
    bb20__0_793 -> bb23__0_793 [label="return"];
    bb21__0_793 -> bb22__0_793 [label="return"];
    bb22__0_793 -> bb76__0_793 [label=""];
    bb23__0_793 -> bb24__0_793 [label="return"];
    bb24__0_793 -> bb25__0_793 [label="0"];
    bb24__0_793 -> bb26__0_793 [label="1"];
    bb24__0_793 -> bb6__0_793 [label="otherwise"];
    bb25__0_793 -> bb28__0_793 [label="return"];
    bb26__0_793 -> bb27__0_793 [label="return"];
    bb27__0_793 -> bb76__0_793 [label=""];
    bb28__0_793 -> bb29__0_793 [label="return"];
    bb29__0_793 -> bb30__0_793 [label="0"];
    bb29__0_793 -> bb31__0_793 [label="1"];
    bb29__0_793 -> bb6__0_793 [label="otherwise"];
    bb30__0_793 -> bb34__0_793 [label="0"];
    bb30__0_793 -> bb33__0_793 [label="otherwise"];
    bb31__0_793 -> bb32__0_793 [label="return"];
    bb32__0_793 -> bb75__0_793 [label=""];
    bb33__0_793 -> bb35__0_793 [label="return"];
    bb34__0_793 -> bb64__0_793 [label=""];
    bb35__0_793 -> bb36__0_793 [label="return"];
    bb36__0_793 -> bb37__0_793 [label="0"];
    bb36__0_793 -> bb38__0_793 [label="1"];
    bb36__0_793 -> bb6__0_793 [label="otherwise"];
    bb37__0_793 -> bb40__0_793 [label="return"];
    bb38__0_793 -> bb39__0_793 [label="return"];
    bb39__0_793 -> bb74__0_793 [label=""];
    bb40__0_793 -> bb41__0_793 [label="return"];
    bb41__0_793 -> bb42__0_793 [label="0"];
    bb41__0_793 -> bb43__0_793 [label="1"];
    bb41__0_793 -> bb6__0_793 [label="otherwise"];
    bb42__0_793 -> bb45__0_793 [label="return"];
    bb43__0_793 -> bb44__0_793 [label="return"];
    bb44__0_793 -> bb74__0_793 [label=""];
    bb45__0_793 -> bb46__0_793 [label="return"];
    bb46__0_793 -> bb47__0_793 [label="0"];
    bb46__0_793 -> bb48__0_793 [label="1"];
    bb46__0_793 -> bb6__0_793 [label="otherwise"];
    bb47__0_793 -> bb50__0_793 [label="return"];
    bb48__0_793 -> bb49__0_793 [label="return"];
    bb49__0_793 -> bb74__0_793 [label=""];
    bb50__0_793 -> bb51__0_793 [label="return"];
    bb51__0_793 -> bb52__0_793 [label="0"];
    bb51__0_793 -> bb53__0_793 [label="1"];
    bb51__0_793 -> bb6__0_793 [label="otherwise"];
    bb52__0_793 -> bb55__0_793 [label="return"];
    bb53__0_793 -> bb54__0_793 [label="return"];
    bb54__0_793 -> bb73__0_793 [label=""];
    bb55__0_793 -> bb56__0_793 [label="return"];
    bb56__0_793 -> bb57__0_793 [label="0"];
    bb56__0_793 -> bb58__0_793 [label="1"];
    bb56__0_793 -> bb6__0_793 [label="otherwise"];
    bb57__0_793 -> bb60__0_793 [label="return"];
    bb58__0_793 -> bb59__0_793 [label="return"];
    bb59__0_793 -> bb73__0_793 [label=""];
    bb60__0_793 -> bb61__0_793 [label="return"];
    bb60__0_793 -> bb81__0_793 [label="unwind"];
    bb61__0_793 -> bb62__0_793 [label="return"];
    bb61__0_793 -> bb81__0_793 [label="unwind"];
    bb62__0_793 -> bb63__0_793 [label="return"];
    bb62__0_793 -> bb82__0_793 [label="unwind"];
    bb63__0_793 -> bb64__0_793 [label=""];
    bb64__0_793 -> bb67__0_793 [label=""];
    bb65__0_793 -> bb66__0_793 [label=""];
    bb66__0_793 -> bb67__0_793 [label=""];
    bb67__0_793 -> bb68__0_793 [label="return"];
    bb68__0_793 -> bb69__0_793 [label="return"];
    bb69__0_793 -> bb70__0_793 [label="0"];
    bb69__0_793 -> bb71__0_793 [label="1"];
    bb69__0_793 -> bb6__0_793 [label="otherwise"];
    bb70__0_793 -> bb80__0_793 [label=""];
    bb71__0_793 -> bb72__0_793 [label="return"];
    bb72__0_793 -> bb78__0_793 [label=""];
    bb73__0_793 -> bb74__0_793 [label=""];
    bb74__0_793 -> bb75__0_793 [label=""];
    bb75__0_793 -> bb77__0_793 [label=""];
    bb76__0_793 -> bb77__0_793 [label=""];
    bb77__0_793 -> bb78__0_793 [label=""];
    bb78__0_793 -> bb80__0_793 [label=""];
    bb79__0_793 -> bb80__0_793 [label=""];
    bb81__0_793 -> bb82__0_793 [label="return"];
}
