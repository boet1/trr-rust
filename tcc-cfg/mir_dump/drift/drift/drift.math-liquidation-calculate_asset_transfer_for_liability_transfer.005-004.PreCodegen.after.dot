digraph Mir_0_2385 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_asset_transfer_for_liability_transfer(_1: u128, _2: u32, _3: u32, _4: i64, _5: u128, _6: u32, _7: u32, _8: i64) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _9: u128;<br align="left"/>let _10: u128;<br align="left"/>let mut _11: (u128, u128);<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: u32;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: u32;<br align="left"/>let mut _19: (u32, bool);<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: u32;<br align="left"/>let mut _23: u32;<br align="left"/>let mut _24: (u32, bool);<br align="left"/>let mut _25: u128;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _37: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u128;<br align="left"/>let mut _48: u128;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _50: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u128;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: u128;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _64: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _65: u32;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: u128;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: u128;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: u128;<br align="left"/>let mut _88: u128;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _90: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _91: u32;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: u128;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: u128;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: u128;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: u128;<br align="left"/>let _113: u128;<br align="left"/>let _114: u128;<br align="left"/>let mut _115: (u128, u128);<br align="left"/>let mut _116: bool;<br align="left"/>let mut _117: u32;<br align="left"/>let mut _118: u128;<br align="left"/>let mut _119: u32;<br align="left"/>let mut _120: u32;<br align="left"/>let mut _121: (u32, bool);<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: u32;<br align="left"/>let mut _124: u32;<br align="left"/>let mut _125: (u32, bool);<br align="left"/>let _126: u128;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: u128;<br align="left"/>let mut _129: u128;<br align="left"/>let mut _130: u128;<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: (u128, bool);<br align="left"/>let mut _133: u128;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: (u128, bool);<br align="left"/>let _136: u128;<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _138: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _139: u128;<br align="left"/>let mut _140: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _141: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _142: u128;<br align="left"/>let mut _143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _144: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _145: u128;<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _147: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _148: u128;<br align="left"/>let mut _149: u128;<br align="left"/>let mut _150: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _151: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _152: i64;<br align="left"/>let mut _153: isize;<br align="left"/>let _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _155: !;<br align="left"/>let mut _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _157: u128;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _162: u128;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: u128;<br align="left"/>let mut _168: u128;<br align="left"/>let mut _169: isize;<br align="left"/>let _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _171: !;<br align="left"/>let mut _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _173: u128;<br align="left"/>let mut _174: u128;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _179: u128;<br align="left"/>let _180: ();<br align="left"/>let mut _181: bool;<br align="left"/>let mut _182: u128;<br align="left"/>let mut _183: u128;<br align="left"/>let mut _184: u128;<br align="left"/>debug asset_amount =&gt; _1;<br align="left"/>debug asset_liquidation_multiplier =&gt; _2;<br align="left"/>debug asset_decimals =&gt; _3;<br align="left"/>debug asset_price =&gt; _4;<br align="left"/>debug liability_amount =&gt; _5;<br align="left"/>debug liability_liquidation_multiplier =&gt; _6;<br align="left"/>debug liability_decimals =&gt; _7;<br align="left"/>debug liability_price =&gt; _8;<br align="left"/>debug numerator_scale =&gt; _9;<br align="left"/>debug denominator_scale =&gt; _10;<br align="left"/>debug asset_transfer =&gt; _25;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug asset_value_numerator_scale =&gt; _113;<br align="left"/>debug asset_value_denominator_scale =&gt; _114;<br align="left"/>debug asset_delta =&gt; _126;<br align="left"/>debug asset_value_delta =&gt; _136;<br align="left"/>debug residual =&gt; _154;<br align="left"/>debug val =&gt; _157;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug residual =&gt; _170;<br align="left"/>debug val =&gt; _173;<br align="left"/>debug residual =&gt; _176;<br align="left"/>debug val =&gt; _179;<br align="left"/>>;
    bb0__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _3<br/>StorageLive(_14)<br/>_14 = _7<br/>_12 = Gt(move _13, move _14)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb1__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _3<br/>StorageLive(_18)<br/>_18 = _7<br/>_19 = CheckedSub(_17, _18)<br/></td></tr><tr><td align="left">assert(!move (_19.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _17, move _18)</td></tr></table>>];
    bb2__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_16 = move (_19.0: u32)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _16)</td></tr></table>>];
    bb3__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_11 = (move _15, const 1_u128)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _7<br/>StorageLive(_23)<br/>_23 = _3<br/>_24 = CheckedSub(_22, _23)<br/></td></tr><tr><td align="left">assert(!move (_24.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _22, move _23)</td></tr></table>>];
    bb5__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_21 = move (_24.0: u32)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _21)</td></tr></table>>];
    bb6__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_11 = (const 1_u128, move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_9)<br/>_9 = (_11.0: u128)<br/>StorageLive(_10)<br/>_10 = (_11.1: u128)<br/>StorageDead(_11)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = _5<br/>StorageLive(_42)<br/>_42 = _9<br/></td></tr><tr><td align="left">_40 = &lt;u128 as SafeMath&gt;::safe_mul(move _41, move _42)</td></tr></table>>];
    bb8__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb9__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_43 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb10__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_39 as Continue).0: u128)<br/>_38 = _47<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _8<br/></td></tr><tr><td align="left">_50 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _51)</td></tr></table>>];
    bb11__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb13__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb15__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb16__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_49 as Continue).0: u128)<br/>_48 = _56<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_37 = &lt;u128 as SafeMath&gt;::safe_mul(move _38, move _48)</td></tr></table>>];
    bb17__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb18__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb20__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_57 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb21__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_36 as Continue).0: u128)<br/>_35 = _61<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _2<br/></td></tr><tr><td align="left">_64 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _65)</td></tr></table>>];
    bb22__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb23__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb25__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_66 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb26__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_63 as Continue).0: u128)<br/>_62 = _70<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_34 = &lt;u128 as SafeMath&gt;::safe_mul(move _35, move _62)</td></tr></table>>];
    bb27__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb28__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb30__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_71 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb31__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_33 as Continue).0: u128)<br/>_32 = _75<br/>StorageDead(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _4<br/></td></tr><tr><td align="left">_81 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _82)</td></tr></table>>];
    bb32__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb33__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb35__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_83 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb36__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_80 as Continue).0: u128)<br/>_79 = _87<br/>StorageDead(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _6<br/></td></tr><tr><td align="left">_90 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _91)</td></tr></table>>];
    bb37__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb38__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb40__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_92 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb41__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_89 as Continue).0: u128)<br/>_88 = _96<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_78 = &lt;u128 as SafeMath&gt;::safe_mul(move _79, move _88)</td></tr></table>>];
    bb42__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb43__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_88)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb45__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_97 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb46__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_77 as Continue).0: u128)<br/>_76 = _101<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_31 = &lt;u128 as SafeMath&gt;::safe_div(move _32, move _76)</td></tr></table>>];
    bb47__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb48__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb50__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_102 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb51__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_30 as Continue).0: u128)<br/>_29 = _106<br/>StorageDead(_106)<br/>StorageLive(_107)<br/>_107 = _10<br/></td></tr><tr><td align="left">_28 = &lt;u128 as SafeMath&gt;::safe_div(move _29, move _107)</td></tr></table>>];
    bb52__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb53__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb55__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_108 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb56__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_27 as Continue).0: u128)<br/>_26 = _112<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_25 = &lt;u128 as Ord&gt;::max(move _26, const 1_u128)</td></tr></table>>];
    bb57__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb58__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_89)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_63)<br/>StorageDead(_49)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = _3<br/>_116 = Gt(move _117, const 6_u32)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb60__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = _3<br/>_121 = CheckedSub(_120, const 6_u32)<br/></td></tr><tr><td align="left">assert(!move (_121.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _120, const 6_u32)</td></tr></table>>];
    bb61__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_119 = move (_121.0: u32)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _119)</td></tr></table>>];
    bb62__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_115 = (move _118, const 1_u128)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _3<br/>_125 = CheckedSub(const 6_u32, _124)<br/></td></tr><tr><td align="left">assert(!move (_125.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const 6_u32, move _124)</td></tr></table>>];
    bb64__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_123 = move (_125.0: u32)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _123)</td></tr></table>>];
    bb65__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_115 = (const 1_u128, move _122)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_113)<br/>_113 = (_115.0: u128)<br/>StorageLive(_114)<br/>_114 = (_115.1: u128)<br/>StorageDead(_115)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _25<br/>StorageLive(_129)<br/>_129 = _1<br/>_127 = Gt(move _128, move _129)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb67__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_130)<br/>_130 = _25<br/>StorageLive(_131)<br/>_131 = _1<br/>_132 = CheckedSub(_130, _131)<br/></td></tr><tr><td align="left">assert(!move (_132.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _130, move _131)</td></tr></table>>];
    bb68__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_126 = move (_132.0: u128)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_133)<br/>_133 = _1<br/>StorageLive(_134)<br/>_134 = _25<br/>_135 = CheckedSub(_133, _134)<br/></td></tr><tr><td align="left">assert(!move (_135.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _133, move _134)</td></tr></table>>];
    bb70__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_126 = move (_135.0: u128)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = _126<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = _4<br/></td></tr><tr><td align="left">_151 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _152)</td></tr></table>>];
    bb72__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _151)</td></tr></table>>];
    bb73__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_153 = discriminant(_150)<br/></td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb74__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_150 as Continue).0: u128)<br/>_149 = _157<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_147 = &lt;u128 as SafeMath&gt;::safe_mul(move _148, move _149)</td></tr></table>>];
    bb75__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_150 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_156)<br/>_156 = _154<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _156)</td></tr></table>>];
    bb76__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb78__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_158 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb79__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_146 as Continue).0: u128)<br/>_145 = _162<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_144 = &lt;u128 as SafeMath&gt;::safe_div(move _145, const _)</td></tr></table>>];
    bb80__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_161)<br/>_161 = _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb81__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _144)</td></tr></table>>];
    bb83__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_163 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb84__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_143 as Continue).0: u128)<br/>_142 = _167<br/>StorageDead(_167)<br/>StorageLive(_168)<br/>_168 = _113<br/></td></tr><tr><td align="left">_141 = &lt;u128 as SafeMath&gt;::safe_mul(move _142, move _168)</td></tr></table>>];
    bb85__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_143 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb86__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _141)</td></tr></table>>];
    bb88__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_169 = discriminant(_140)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb89__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_140 as Continue).0: u128)<br/>_139 = _173<br/>StorageDead(_173)<br/>StorageLive(_174)<br/>_174 = _114<br/></td></tr><tr><td align="left">_138 = &lt;u128 as SafeMath&gt;::safe_div(move _139, move _174)</td></tr></table>>];
    bb90__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_140 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_172)<br/>_172 = _170<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _172)</td></tr></table>>];
    bb91__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb93__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_175 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb94__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_179)<br/>_179 = ((_137 as Continue).0: u128)<br/>_136 = _179<br/>StorageDead(_179)<br/>StorageDead(_150)<br/>StorageDead(_146)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = _136<br/>_181 = Lt(move _182, const _)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb95__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_178)<br/>_178 = _176<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _178)</td></tr></table>>];
    bb96__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageLive(_183)<br/>_183 = _1<br/>_25 = move _183<br/>StorageDead(_183)<br/>_180 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_180 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageLive(_184)<br/>_184 = _25<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _184)<br/>StorageDead(_184)<br/>StorageDead(_136)<br/>StorageDead(_126)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_25)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_146)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_126)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_2385 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2385 -> bb4__0_2385 [label="0"];
    bb0__0_2385 -> bb1__0_2385 [label="otherwise"];
    bb1__0_2385 -> bb2__0_2385 [label="success"];
    bb2__0_2385 -> bb3__0_2385 [label="return"];
    bb3__0_2385 -> bb7__0_2385 [label=""];
    bb4__0_2385 -> bb5__0_2385 [label="success"];
    bb5__0_2385 -> bb6__0_2385 [label="return"];
    bb6__0_2385 -> bb7__0_2385 [label=""];
    bb7__0_2385 -> bb8__0_2385 [label="return"];
    bb8__0_2385 -> bb9__0_2385 [label="return"];
    bb9__0_2385 -> bb10__0_2385 [label="0"];
    bb9__0_2385 -> bb12__0_2385 [label="1"];
    bb9__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb10__0_2385 -> bb14__0_2385 [label="return"];
    bb12__0_2385 -> bb13__0_2385 [label="return"];
    bb13__0_2385 -> bb112__0_2385 [label=""];
    bb14__0_2385 -> bb15__0_2385 [label="return"];
    bb15__0_2385 -> bb16__0_2385 [label="0"];
    bb15__0_2385 -> bb17__0_2385 [label="1"];
    bb15__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb16__0_2385 -> bb19__0_2385 [label="return"];
    bb17__0_2385 -> bb18__0_2385 [label="return"];
    bb18__0_2385 -> bb110__0_2385 [label=""];
    bb19__0_2385 -> bb20__0_2385 [label="return"];
    bb20__0_2385 -> bb21__0_2385 [label="0"];
    bb20__0_2385 -> bb22__0_2385 [label="1"];
    bb20__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb21__0_2385 -> bb24__0_2385 [label="return"];
    bb22__0_2385 -> bb23__0_2385 [label="return"];
    bb23__0_2385 -> bb110__0_2385 [label=""];
    bb24__0_2385 -> bb25__0_2385 [label="return"];
    bb25__0_2385 -> bb26__0_2385 [label="0"];
    bb25__0_2385 -> bb27__0_2385 [label="1"];
    bb25__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb26__0_2385 -> bb29__0_2385 [label="return"];
    bb27__0_2385 -> bb28__0_2385 [label="return"];
    bb28__0_2385 -> bb108__0_2385 [label=""];
    bb29__0_2385 -> bb30__0_2385 [label="return"];
    bb30__0_2385 -> bb31__0_2385 [label="0"];
    bb30__0_2385 -> bb32__0_2385 [label="1"];
    bb30__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb31__0_2385 -> bb34__0_2385 [label="return"];
    bb32__0_2385 -> bb33__0_2385 [label="return"];
    bb33__0_2385 -> bb108__0_2385 [label=""];
    bb34__0_2385 -> bb35__0_2385 [label="return"];
    bb35__0_2385 -> bb36__0_2385 [label="0"];
    bb35__0_2385 -> bb37__0_2385 [label="1"];
    bb35__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb36__0_2385 -> bb39__0_2385 [label="return"];
    bb37__0_2385 -> bb38__0_2385 [label="return"];
    bb38__0_2385 -> bb107__0_2385 [label=""];
    bb39__0_2385 -> bb40__0_2385 [label="return"];
    bb40__0_2385 -> bb41__0_2385 [label="0"];
    bb40__0_2385 -> bb42__0_2385 [label="1"];
    bb40__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb41__0_2385 -> bb44__0_2385 [label="return"];
    bb42__0_2385 -> bb43__0_2385 [label="return"];
    bb43__0_2385 -> bb104__0_2385 [label=""];
    bb44__0_2385 -> bb45__0_2385 [label="return"];
    bb45__0_2385 -> bb46__0_2385 [label="0"];
    bb45__0_2385 -> bb47__0_2385 [label="1"];
    bb45__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb46__0_2385 -> bb49__0_2385 [label="return"];
    bb47__0_2385 -> bb48__0_2385 [label="return"];
    bb48__0_2385 -> bb104__0_2385 [label=""];
    bb49__0_2385 -> bb50__0_2385 [label="return"];
    bb50__0_2385 -> bb51__0_2385 [label="0"];
    bb50__0_2385 -> bb52__0_2385 [label="1"];
    bb50__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb51__0_2385 -> bb54__0_2385 [label="return"];
    bb52__0_2385 -> bb53__0_2385 [label="return"];
    bb53__0_2385 -> bb105__0_2385 [label=""];
    bb54__0_2385 -> bb55__0_2385 [label="return"];
    bb55__0_2385 -> bb56__0_2385 [label="0"];
    bb55__0_2385 -> bb57__0_2385 [label="1"];
    bb55__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb56__0_2385 -> bb59__0_2385 [label="return"];
    bb57__0_2385 -> bb58__0_2385 [label="return"];
    bb58__0_2385 -> bb106__0_2385 [label=""];
    bb59__0_2385 -> bb63__0_2385 [label="0"];
    bb59__0_2385 -> bb60__0_2385 [label="otherwise"];
    bb60__0_2385 -> bb61__0_2385 [label="success"];
    bb61__0_2385 -> bb62__0_2385 [label="return"];
    bb62__0_2385 -> bb66__0_2385 [label=""];
    bb63__0_2385 -> bb64__0_2385 [label="success"];
    bb64__0_2385 -> bb65__0_2385 [label="return"];
    bb65__0_2385 -> bb66__0_2385 [label=""];
    bb66__0_2385 -> bb69__0_2385 [label="0"];
    bb66__0_2385 -> bb67__0_2385 [label="otherwise"];
    bb67__0_2385 -> bb68__0_2385 [label="success"];
    bb68__0_2385 -> bb71__0_2385 [label=""];
    bb69__0_2385 -> bb70__0_2385 [label="success"];
    bb70__0_2385 -> bb71__0_2385 [label=""];
    bb71__0_2385 -> bb72__0_2385 [label="return"];
    bb72__0_2385 -> bb73__0_2385 [label="return"];
    bb73__0_2385 -> bb74__0_2385 [label="0"];
    bb73__0_2385 -> bb75__0_2385 [label="1"];
    bb73__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb74__0_2385 -> bb77__0_2385 [label="return"];
    bb75__0_2385 -> bb76__0_2385 [label="return"];
    bb76__0_2385 -> bb100__0_2385 [label=""];
    bb77__0_2385 -> bb78__0_2385 [label="return"];
    bb78__0_2385 -> bb79__0_2385 [label="0"];
    bb78__0_2385 -> bb80__0_2385 [label="1"];
    bb78__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb79__0_2385 -> bb82__0_2385 [label="return"];
    bb80__0_2385 -> bb81__0_2385 [label="return"];
    bb81__0_2385 -> bb100__0_2385 [label=""];
    bb82__0_2385 -> bb83__0_2385 [label="return"];
    bb83__0_2385 -> bb84__0_2385 [label="0"];
    bb83__0_2385 -> bb85__0_2385 [label="1"];
    bb83__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb84__0_2385 -> bb87__0_2385 [label="return"];
    bb85__0_2385 -> bb86__0_2385 [label="return"];
    bb86__0_2385 -> bb101__0_2385 [label=""];
    bb87__0_2385 -> bb88__0_2385 [label="return"];
    bb88__0_2385 -> bb89__0_2385 [label="0"];
    bb88__0_2385 -> bb90__0_2385 [label="1"];
    bb88__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb89__0_2385 -> bb92__0_2385 [label="return"];
    bb90__0_2385 -> bb91__0_2385 [label="return"];
    bb91__0_2385 -> bb102__0_2385 [label=""];
    bb92__0_2385 -> bb93__0_2385 [label="return"];
    bb93__0_2385 -> bb94__0_2385 [label="0"];
    bb93__0_2385 -> bb95__0_2385 [label="1"];
    bb93__0_2385 -> bb11__0_2385 [label="otherwise"];
    bb94__0_2385 -> bb98__0_2385 [label="0"];
    bb94__0_2385 -> bb97__0_2385 [label="otherwise"];
    bb95__0_2385 -> bb96__0_2385 [label="return"];
    bb96__0_2385 -> bb103__0_2385 [label=""];
    bb97__0_2385 -> bb99__0_2385 [label=""];
    bb98__0_2385 -> bb99__0_2385 [label=""];
    bb99__0_2385 -> bb114__0_2385 [label=""];
    bb100__0_2385 -> bb101__0_2385 [label=""];
    bb101__0_2385 -> bb102__0_2385 [label=""];
    bb102__0_2385 -> bb103__0_2385 [label=""];
    bb103__0_2385 -> bb113__0_2385 [label=""];
    bb104__0_2385 -> bb105__0_2385 [label=""];
    bb105__0_2385 -> bb106__0_2385 [label=""];
    bb106__0_2385 -> bb107__0_2385 [label=""];
    bb107__0_2385 -> bb109__0_2385 [label=""];
    bb108__0_2385 -> bb109__0_2385 [label=""];
    bb109__0_2385 -> bb111__0_2385 [label=""];
    bb110__0_2385 -> bb111__0_2385 [label=""];
    bb111__0_2385 -> bb112__0_2385 [label=""];
    bb112__0_2385 -> bb113__0_2385 [label=""];
    bb113__0_2385 -> bb114__0_2385 [label=""];
}
