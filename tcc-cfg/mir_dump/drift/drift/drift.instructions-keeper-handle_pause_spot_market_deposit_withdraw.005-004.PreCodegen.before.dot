digraph Mir_0_1390 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_pause_spot_market_deposit_withdraw(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::PauseSpotMarketDepositWithdraw&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _3: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _8: Closure(DefId(0:9343 ~ drift[d311]::instructions::keeper::handle_pause_spot_market_deposit_withdraw::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _14: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _15: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _16: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _17: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _20: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _21: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _25: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: u32;<br align="left"/>let mut _28: isize;<br align="left"/>let mut _29: ();<br align="left"/>let _30: error::ErrorCode;<br align="left"/>let _31: ();<br align="left"/>let mut _32: &amp;ReErased str;<br align="left"/>let _33: &amp;ReErased str;<br align="left"/>let mut _34: &amp;ReErased std::string::String;<br align="left"/>let _35: &amp;ReErased std::string::String;<br align="left"/>let _36: std::string::String;<br align="left"/>let _37: std::string::String;<br align="left"/>let mut _38: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _42: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _46: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _47: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased error::ErrorCode;<br align="left"/>let _49: &amp;ReErased error::ErrorCode;<br align="left"/>let _50: ();<br align="left"/>let mut _51: &amp;ReErased str;<br align="left"/>let _52: &amp;ReErased str;<br align="left"/>let mut _53: error::ErrorCode;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: ();<br align="left"/>let mut _59: u8;<br align="left"/>let mut _60: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _61: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _62: u8;<br align="left"/>let mut _63: isize;<br align="left"/>let mut _64: (isize, bool);<br align="left"/>let mut _65: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _66: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _67: u8;<br align="left"/>let mut _68: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _69: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _70: u8;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: (isize, bool);<br align="left"/>let mut _73: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _74: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _75: ();<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _77: &amp;ReErased mut instructions::keeper::PauseSpotMarketDepositWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased mut instructions::keeper::PauseSpotMarketDepositWithdraw&lt;ReErased&gt;;<br align="left"/>let mut _79: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug result =&gt; _14;<br align="left"/>debug error_code =&gt; _30;<br align="left"/>debug res =&gt; _37;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>>;
    bb0__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::keeper::PauseSpotMarketDepositWithdraw&lt;'_&gt;)<br/>_7 = &amp;((*_77).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _7)</td></tr></table>>];
    bb1__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _6, move _8)</td></tr></table>>];
    bb2__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_4 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_3 = move _13<br/>StorageDead(_13)<br/>_2 = &amp;mut _3<br/>_82 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_2)<br/></td></tr><tr><td align="left">_16 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _17)</td></tr></table>>];
    bb5__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb7__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_80 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_15 = &amp;(*_16)<br/>StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_78 = deref_copy (_1.1: &amp;mut instructions::keeper::PauseSpotMarketDepositWithdraw&lt;'_&gt;)<br/>_79 = deref_copy ((*_78).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_85 = (((_79.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_22 = &amp;(*_85)<br/></td></tr><tr><td align="left">_21 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _22)</td></tr></table>>];
    bb9__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _20)</td></tr></table>>];
    bb10__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_18 = ((*_19).2: u64)<br/></td></tr><tr><td align="left">_14 = validate_spot_market_vault_amount(move _15, move _18)</td></tr></table>>];
    bb11__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_28 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb12__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_26 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_27 = discriminant(((_14 as Err).0: error::ErrorCode))<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb14__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_26 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb16__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ()<br/>_25 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = error::ErrorCode::DefaultError<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_76 = const _<br/>_41 = &amp;(*_76)<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;_30<br/>_48 = &amp;(*_49)<br/></td></tr><tr><td align="left">_47 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _48)</td></tr></table>>];
    bb18__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_46 = [move _47]<br/>StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/>_43 = move _44 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_38 = Arguments::&lt;'_&gt;::new_v1(move _39, move _43)</td></tr></table>>];
    bb19__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = format(move _38)</td></tr></table>>];
    bb20__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>_36 = move _37<br/>StorageDead(_37)<br/>_35 = &amp;_36<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = &lt;String as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb21__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_32 = &amp;(*_33)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_31 = solana_program::log::sol_log(move _32)</td></tr></table>>];
    bb22__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb23__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = const &quot;spot market vault amount is valid&quot;<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = solana_program::log::sol_log(move _51)</td></tr></table>>];
    bb24__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageLive(_53)<br/>_53 = _30<br/>_25 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _53)<br/>StorageDead(_53)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb26__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_54 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb27__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_24 as Continue).0: ())<br/>_23 = _58<br/>StorageDead(_58)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_2)<br/></td></tr><tr><td align="left">_60 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb28__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb29__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb30__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = ((*_60).47: u8)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_64 = CheckedAdd(const _, const 0_isize)<br/></td></tr><tr><td align="left">assert(!move (_64.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_isize)</td></tr></table>>];
    bb31__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_63 = move (_64.0: isize)<br/>_62 = move _63 as u8 (IntToInt)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_65 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _66)</td></tr></table>>];
    bb32__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>((*_65).47: u8) = BitOr(move _59, move _62)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_65)<br/>StorageDead(_60)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_2)<br/></td></tr><tr><td align="left">_68 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb33__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_67 = ((*_68).47: u8)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_72 = CheckedAdd(const _, const 0_isize)<br/></td></tr><tr><td align="left">assert(!move (_72.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_isize)</td></tr></table>>];
    bb34__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_71 = move (_72.0: isize)<br/>_70 = move _71 as u8 (IntToInt)<br/>StorageDead(_71)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_73 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _74)</td></tr></table>>];
    bb35__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>((*_73).47: u8) = BitOr(move _67, move _70)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/>StorageLive(_75)<br/>_75 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _75)<br/>StorageDead(_75)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb36__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">return</td></tr></table>>];
    bb39__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb40__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb41__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb42__0_1390 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left" balign="left">_84 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1390 -> bb1__0_1390 [label="return"];
    bb1__0_1390 -> bb2__0_1390 [label="return"];
    bb1__0_1390 -> bb41__0_1390 [label="unwind"];
    bb2__0_1390 -> bb3__0_1390 [label="return"];
    bb2__0_1390 -> bb41__0_1390 [label="unwind"];
    bb3__0_1390 -> bb4__0_1390 [label="0"];
    bb3__0_1390 -> bb6__0_1390 [label="1"];
    bb3__0_1390 -> bb5__0_1390 [label="otherwise"];
    bb4__0_1390 -> bb8__0_1390 [label="return"];
    bb4__0_1390 -> bb40__0_1390 [label="unwind"];
    bb6__0_1390 -> bb7__0_1390 [label="return"];
    bb6__0_1390 -> bb42__0_1390 [label="unwind"];
    bb7__0_1390 -> bb37__0_1390 [label=""];
    bb8__0_1390 -> bb9__0_1390 [label="return"];
    bb8__0_1390 -> bb40__0_1390 [label="unwind"];
    bb9__0_1390 -> bb10__0_1390 [label="return"];
    bb9__0_1390 -> bb40__0_1390 [label="unwind"];
    bb10__0_1390 -> bb11__0_1390 [label="return"];
    bb10__0_1390 -> bb40__0_1390 [label="unwind"];
    bb11__0_1390 -> bb13__0_1390 [label="1"];
    bb11__0_1390 -> bb12__0_1390 [label="otherwise"];
    bb12__0_1390 -> bb15__0_1390 [label=""];
    bb13__0_1390 -> bb14__0_1390 [label="173"];
    bb13__0_1390 -> bb12__0_1390 [label="otherwise"];
    bb14__0_1390 -> bb15__0_1390 [label=""];
    bb15__0_1390 -> bb17__0_1390 [label="0"];
    bb15__0_1390 -> bb16__0_1390 [label="otherwise"];
    bb16__0_1390 -> bb25__0_1390 [label=""];
    bb17__0_1390 -> bb18__0_1390 [label="return"];
    bb17__0_1390 -> bb40__0_1390 [label="unwind"];
    bb18__0_1390 -> bb19__0_1390 [label="return"];
    bb18__0_1390 -> bb40__0_1390 [label="unwind"];
    bb19__0_1390 -> bb20__0_1390 [label="return"];
    bb19__0_1390 -> bb40__0_1390 [label="unwind"];
    bb20__0_1390 -> bb21__0_1390 [label="return"];
    bb20__0_1390 -> bb39__0_1390 [label="unwind"];
    bb21__0_1390 -> bb22__0_1390 [label="return"];
    bb21__0_1390 -> bb39__0_1390 [label="unwind"];
    bb22__0_1390 -> bb23__0_1390 [label="return"];
    bb22__0_1390 -> bb40__0_1390 [label="unwind"];
    bb23__0_1390 -> bb24__0_1390 [label="return"];
    bb23__0_1390 -> bb40__0_1390 [label="unwind"];
    bb24__0_1390 -> bb25__0_1390 [label=""];
    bb25__0_1390 -> bb26__0_1390 [label="return"];
    bb25__0_1390 -> bb40__0_1390 [label="unwind"];
    bb26__0_1390 -> bb27__0_1390 [label="0"];
    bb26__0_1390 -> bb28__0_1390 [label="1"];
    bb26__0_1390 -> bb5__0_1390 [label="otherwise"];
    bb27__0_1390 -> bb30__0_1390 [label="return"];
    bb27__0_1390 -> bb40__0_1390 [label="unwind"];
    bb28__0_1390 -> bb29__0_1390 [label="return"];
    bb28__0_1390 -> bb40__0_1390 [label="unwind"];
    bb29__0_1390 -> bb37__0_1390 [label="return"];
    bb29__0_1390 -> bb41__0_1390 [label="unwind"];
    bb30__0_1390 -> bb31__0_1390 [label="success"];
    bb30__0_1390 -> bb40__0_1390 [label="unwind"];
    bb31__0_1390 -> bb32__0_1390 [label="return"];
    bb31__0_1390 -> bb40__0_1390 [label="unwind"];
    bb32__0_1390 -> bb33__0_1390 [label="return"];
    bb32__0_1390 -> bb40__0_1390 [label="unwind"];
    bb33__0_1390 -> bb34__0_1390 [label="success"];
    bb33__0_1390 -> bb40__0_1390 [label="unwind"];
    bb34__0_1390 -> bb35__0_1390 [label="return"];
    bb34__0_1390 -> bb40__0_1390 [label="unwind"];
    bb35__0_1390 -> bb36__0_1390 [label="return"];
    bb35__0_1390 -> bb41__0_1390 [label="unwind"];
    bb36__0_1390 -> bb38__0_1390 [label=""];
    bb37__0_1390 -> bb38__0_1390 [label=""];
    bb39__0_1390 -> bb40__0_1390 [label="return"];
    bb40__0_1390 -> bb41__0_1390 [label="return"];
    bb42__0_1390 -> bb41__0_1390 [label=""];
}
