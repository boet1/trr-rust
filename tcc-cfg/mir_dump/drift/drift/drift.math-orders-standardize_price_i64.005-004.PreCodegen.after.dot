digraph Mir_0_2595 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::standardize_price_i64(_1: i64, _2: i64, _3: controller::position::PositionDirection) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: !;<br align="left"/>let _8: i64;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _10: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _11: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: Closure(DefId(0:15128 ~ drift[d311]::math::orders::standardize_price_i64::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: i64;<br align="left"/>let _20: ();<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: i64;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _30: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: i64;<br align="left"/>let mut _38: i64;<br align="left"/>debug price =&gt; _1;<br align="left"/>debug tick_size =&gt; _2;<br align="left"/>debug direction =&gt; _3;<br align="left"/>debug remainder =&gt; _8;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>>;
    bb0__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>_5 = Eq(move _6, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(const 0_i64)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _1<br/>StorageLive(_13)<br/>_13 = _2<br/></td></tr><tr><td align="left">_11 = core::num::&lt;impl i64&gt;::checked_rem_euclid(move _12, move _13)</td></tr></table>>];
    bb3__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_14)<br/>_14 = {closure@programs/drift/src/error.rs:658:9: 658:11}<br/></td></tr><tr><td align="left">_10 = Option::&lt;i64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:658:9: 658:11}&gt;(move _11, move _14)</td></tr></table>>];
    bb4__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb5__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb6__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_9 as Continue).0: i64)<br/>_8 = _19<br/>StorageDead(_19)<br/>StorageDead(_9)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _8<br/>_21 = Eq(move _22, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb7__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb9__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_24)<br/>_24 = _1<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _24)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_20 = const ()<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>_25 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _1<br/>StorageLive(_32)<br/>_32 = _2<br/></td></tr><tr><td align="left">_30 = &lt;i64 as SafeMath&gt;::safe_add(move _31, move _32)</td></tr></table>>];
    bb13__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = _1<br/>StorageLive(_27)<br/>_27 = _8<br/></td></tr><tr><td align="left">_0 = &lt;i64 as SafeMath&gt;::safe_sub(move _26, move _27)</td></tr></table>>];
    bb14__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb16__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_33 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb17__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_29 as Continue).0: i64)<br/>_28 = _37<br/>StorageDead(_37)<br/>StorageLive(_38)<br/>_38 = _8<br/></td></tr><tr><td align="left">_0 = &lt;i64 as SafeMath&gt;::safe_sub(move _28, move _38)</td></tr></table>>];
    bb18__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb19__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2595 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2595 -> bb2__0_2595 [label="0"];
    bb0__0_2595 -> bb1__0_2595 [label="otherwise"];
    bb1__0_2595 -> bb23__0_2595 [label=""];
    bb2__0_2595 -> bb3__0_2595 [label="return"];
    bb3__0_2595 -> bb4__0_2595 [label="return"];
    bb4__0_2595 -> bb5__0_2595 [label="return"];
    bb5__0_2595 -> bb6__0_2595 [label="0"];
    bb5__0_2595 -> bb8__0_2595 [label="1"];
    bb5__0_2595 -> bb7__0_2595 [label="otherwise"];
    bb6__0_2595 -> bb11__0_2595 [label="0"];
    bb6__0_2595 -> bb10__0_2595 [label="otherwise"];
    bb8__0_2595 -> bb9__0_2595 [label="return"];
    bb9__0_2595 -> bb22__0_2595 [label=""];
    bb10__0_2595 -> bb22__0_2595 [label=""];
    bb11__0_2595 -> bb13__0_2595 [label="0"];
    bb11__0_2595 -> bb12__0_2595 [label="1"];
    bb11__0_2595 -> bb7__0_2595 [label="otherwise"];
    bb12__0_2595 -> bb15__0_2595 [label="return"];
    bb13__0_2595 -> bb14__0_2595 [label="return"];
    bb14__0_2595 -> bb21__0_2595 [label=""];
    bb15__0_2595 -> bb16__0_2595 [label="return"];
    bb16__0_2595 -> bb17__0_2595 [label="0"];
    bb16__0_2595 -> bb18__0_2595 [label="1"];
    bb16__0_2595 -> bb7__0_2595 [label="otherwise"];
    bb17__0_2595 -> bb20__0_2595 [label="return"];
    bb18__0_2595 -> bb19__0_2595 [label="return"];
    bb19__0_2595 -> bb22__0_2595 [label=""];
    bb20__0_2595 -> bb21__0_2595 [label=""];
    bb21__0_2595 -> bb23__0_2595 [label=""];
    bb22__0_2595 -> bb23__0_2595 [label=""];
}
