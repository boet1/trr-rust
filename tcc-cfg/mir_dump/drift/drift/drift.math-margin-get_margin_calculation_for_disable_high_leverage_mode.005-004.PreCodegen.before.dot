digraph Mir_0_2475 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_margin_calculation_for_disable_high_leverage_mode(_1: &amp;ReErased mut state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;<br align="left"/>let _5: u32;<br align="left"/>let mut _6: std::collections::BTreeMap&lt;usize, u16, std::alloc::Global&gt;;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::user::PerpPosition&gt;&gt;;<br align="left"/>let mut _9: std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::user::PerpPosition&gt;&gt;;<br align="left"/>let mut _10: std::slice::IterMut&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _11: &amp;ReErased mut [state::user::PerpPosition];<br align="left"/>let mut _12: &amp;ReErased mut [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _13: std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::user::PerpPosition&gt;&gt;;<br align="left"/>let mut _14: ();<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::option::Option&lt;(usize, &amp;ReErased mut state::user::PerpPosition)&gt;;<br align="left"/>let mut _17: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::user::PerpPosition&gt;&gt;;<br align="left"/>let mut _18: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::IterMut&lt;ReErased, state::user::PerpPosition&gt;&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let mut _20: !;<br align="left"/>let _21: usize;<br align="left"/>let _22: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _23: ();<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: u16;<br align="left"/>let mut _26: !;<br align="left"/>let _27: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeMap&lt;usize, u16, std::alloc::Global&gt;;<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: u16;<br align="left"/>let _31: u32;<br align="left"/>let mut _32: bool;<br align="left"/>let _33: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _35: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _36: &amp;ReErased state::user::User;<br align="left"/>let mut _37: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _40: state::margin_calculation::MarginContext;<br align="left"/>let mut _41: state::margin_calculation::MarginContext;<br align="left"/>let mut _42: math::margin::MarginRequirementType;<br align="left"/>let mut _43: u32;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _49: u32;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::collections::btree_map::Iter&lt;ReErased, usize, u16&gt;;<br align="left"/>let mut _52: std::collections::btree_map::Iter&lt;ReErased, usize, u16&gt;;<br align="left"/>let mut _53: &amp;ReErased std::collections::BTreeMap&lt;usize, u16, std::alloc::Global&gt;;<br align="left"/>let mut _54: std::collections::btree_map::Iter&lt;ReErased, usize, u16&gt;;<br align="left"/>let _55: ();<br align="left"/>let mut _56: std::option::Option&lt;(&amp;ReErased usize, &amp;ReErased u16)&gt;;<br align="left"/>let mut _57: &amp;ReErased mut std::collections::btree_map::Iter&lt;ReErased, usize, u16&gt;;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::btree_map::Iter&lt;ReErased, usize, u16&gt;;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: !;<br align="left"/>let _61: &amp;ReErased usize;<br align="left"/>let _62: &amp;ReErased u16;<br align="left"/>let mut _63: u16;<br align="left"/>let _64: usize;<br align="left"/>let mut _65: usize;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: state::margin_calculation::MarginCalculation;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>debug custom_margin_ratio_before =&gt; _5;<br align="left"/>debug perp_position_max_margin_ratio_map =&gt; _6;<br align="left"/>debug iter =&gt; _13;<br align="left"/>debug index =&gt; _21;<br align="left"/>debug position =&gt; _22;<br align="left"/>debug margin_buffer =&gt; _31;<br align="left"/>debug margin_calc =&gt; _33;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug iter =&gt; _54;<br align="left"/>debug index =&gt; _61;<br align="left"/>debug perp_position_max_margin_ratio =&gt; _62;<br align="left"/>>;
    bb0__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = ((*_1).16: u32)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = BTreeMap::&lt;usize, u16&gt;::new()</td></tr></table>>];
    bb1__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;mut ((*_1).4: [state::user::PerpPosition; 8])<br/>_11 = move _12 as &amp;mut [state::user::PerpPosition] (PointerCoercion(Unsize))<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = core::slice::&lt;impl [PerpPosition]&gt;::iter_mut(move _11)</td></tr></table>>];
    bb2__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::slice::IterMut&lt;'_, PerpPosition&gt; as Iterator&gt;::enumerate(move _10)</td></tr></table>>];
    bb3__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;Enumerate&lt;std::slice::IterMut&lt;'_, PerpPosition&gt;&gt; as IntoIterator&gt;::into_iter(move _9)</td></tr></table>>];
    bb4__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_13)<br/>_13 = move _8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;mut _13<br/>_17 = &amp;mut (*_18)<br/></td></tr><tr><td align="left">_16 = &lt;Enumerate&lt;std::slice::IterMut&lt;'_, PerpPosition&gt;&gt; as Iterator&gt;::next(move _17)</td></tr></table>>];
    bb6__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb7__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = (((_16 as Some).0: (usize, &amp;mut state::user::PerpPosition)).0: usize)<br/>StorageLive(_22)<br/>_22 = move (((_16 as Some).0: (usize, &amp;mut state::user::PerpPosition)).1: &amp;mut state::user::PerpPosition)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = ((*_22).12: u16)<br/>_24 = Eq(move _25, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb8__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_7 = const ()<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_31)<br/>_32 = Eq(const 100_u32, const 0_u32)<br/></td></tr><tr><td align="left">assert(!move _32, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb10__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_23 = const ()<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;mut _6<br/>StorageLive(_29)<br/>_29 = _21<br/>StorageLive(_30)<br/>_30 = ((*_22).12: u16)<br/></td></tr><tr><td align="left">_27 = BTreeMap::&lt;usize, u16&gt;::insert(move _28, move _29, move _30)</td></tr></table>>];
    bb12__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>((*_22).12: u16) = const 0_u16<br/>_15 = const ()<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>_14 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_31 = Div(const _, const 100_u32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;(*_1)<br/>StorageLive(_37)<br/>_37 = &amp;(*_2)<br/>StorageLive(_38)<br/>_38 = &amp;(*_3)<br/>StorageLive(_39)<br/>_39 = &amp;mut (*_4)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_41 = MarginContext::standard(move _42)</td></tr></table>>];
    bb14__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_43)<br/>_43 = _31<br/></td></tr><tr><td align="left">_40 = MarginContext::margin_buffer(move _41, move _43)</td></tr></table>>];
    bb15__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_35 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _36, move _37, move _38, move _39, move _40)</td></tr></table>>];
    bb16__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb17__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_44 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb18__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_34 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_33 = _48<br/>StorageDead(_48)<br/>StorageDead(_34)<br/>StorageLive(_49)<br/>_49 = _5<br/>((*_1).16: u32) = move _49<br/>StorageDead(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_6<br/></td></tr><tr><td align="left">_52 = BTreeMap::&lt;usize, u16&gt;::iter(move _53)</td></tr></table>>];
    bb19__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb20__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb21__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::collections::btree_map::Iter&lt;'_, usize, u16&gt; as IntoIterator&gt;::into_iter(move _52)</td></tr></table>>];
    bb22__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_54)<br/>_54 = move _51<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;mut _54<br/>_57 = &amp;mut (*_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::collections::btree_map::Iter&lt;'_, usize, u16&gt; as Iterator&gt;::next(move _57)</td></tr></table>>];
    bb24__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_59 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb25__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = (((_56 as Some).0: (&amp;usize, &amp;u16)).0: &amp;usize)<br/>StorageLive(_62)<br/>_62 = (((_56 as Some).0: (&amp;usize, &amp;u16)).1: &amp;u16)<br/>StorageLive(_63)<br/>_63 = (*_62)<br/>StorageLive(_64)<br/>_64 = (*_61)<br/>_65 = Len(((*_1).4: [state::user::PerpPosition; 8]))<br/>_66 = Lt(_64, _65)<br/></td></tr><tr><td align="left">assert(move _66, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _65, _64)</td></tr></table>>];
    bb26__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_50 = const ()<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_67)<br/>_67 = _33<br/>_0 = std::result::Result::&lt;MarginCalculation, error::ErrorCode&gt;::Ok(move _67)<br/>StorageDead(_67)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb27__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">(((*_1).4: [state::user::PerpPosition; 8])[_64].12: u16) = move _63<br/>StorageDead(_63)<br/>StorageDead(_64)<br/>_55 = const ()<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>_14 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">return</td></tr></table>>];
    bb31__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb32__0_2475 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2475 -> bb1__0_2475 [label="return"];
    bb1__0_2475 -> bb2__0_2475 [label="return"];
    bb1__0_2475 -> bb31__0_2475 [label="unwind"];
    bb2__0_2475 -> bb3__0_2475 [label="return"];
    bb2__0_2475 -> bb31__0_2475 [label="unwind"];
    bb3__0_2475 -> bb4__0_2475 [label="return"];
    bb3__0_2475 -> bb31__0_2475 [label="unwind"];
    bb4__0_2475 -> bb5__0_2475 [label=""];
    bb5__0_2475 -> bb6__0_2475 [label="return"];
    bb5__0_2475 -> bb31__0_2475 [label="unwind"];
    bb6__0_2475 -> bb9__0_2475 [label="0"];
    bb6__0_2475 -> bb7__0_2475 [label="1"];
    bb6__0_2475 -> bb8__0_2475 [label="otherwise"];
    bb7__0_2475 -> bb11__0_2475 [label="0"];
    bb7__0_2475 -> bb10__0_2475 [label="otherwise"];
    bb9__0_2475 -> bb13__0_2475 [label="success"];
    bb9__0_2475 -> bb31__0_2475 [label="unwind"];
    bb10__0_2475 -> bb5__0_2475 [label=""];
    bb11__0_2475 -> bb12__0_2475 [label="return"];
    bb11__0_2475 -> bb31__0_2475 [label="unwind"];
    bb12__0_2475 -> bb5__0_2475 [label=""];
    bb13__0_2475 -> bb14__0_2475 [label="return"];
    bb13__0_2475 -> bb31__0_2475 [label="unwind"];
    bb14__0_2475 -> bb15__0_2475 [label="return"];
    bb14__0_2475 -> bb31__0_2475 [label="unwind"];
    bb15__0_2475 -> bb16__0_2475 [label="return"];
    bb15__0_2475 -> bb31__0_2475 [label="unwind"];
    bb16__0_2475 -> bb17__0_2475 [label="return"];
    bb16__0_2475 -> bb31__0_2475 [label="unwind"];
    bb17__0_2475 -> bb18__0_2475 [label="0"];
    bb17__0_2475 -> bb19__0_2475 [label="1"];
    bb17__0_2475 -> bb8__0_2475 [label="otherwise"];
    bb18__0_2475 -> bb21__0_2475 [label="return"];
    bb18__0_2475 -> bb31__0_2475 [label="unwind"];
    bb19__0_2475 -> bb20__0_2475 [label="return"];
    bb19__0_2475 -> bb31__0_2475 [label="unwind"];
    bb20__0_2475 -> bb29__0_2475 [label="return"];
    bb20__0_2475 -> bb32__0_2475 [label="unwind"];
    bb21__0_2475 -> bb22__0_2475 [label="return"];
    bb21__0_2475 -> bb31__0_2475 [label="unwind"];
    bb22__0_2475 -> bb23__0_2475 [label=""];
    bb23__0_2475 -> bb24__0_2475 [label="return"];
    bb23__0_2475 -> bb31__0_2475 [label="unwind"];
    bb24__0_2475 -> bb26__0_2475 [label="0"];
    bb24__0_2475 -> bb25__0_2475 [label="1"];
    bb24__0_2475 -> bb8__0_2475 [label="otherwise"];
    bb25__0_2475 -> bb27__0_2475 [label="success"];
    bb25__0_2475 -> bb31__0_2475 [label="unwind"];
    bb26__0_2475 -> bb28__0_2475 [label="return"];
    bb26__0_2475 -> bb32__0_2475 [label="unwind"];
    bb27__0_2475 -> bb23__0_2475 [label=""];
    bb28__0_2475 -> bb30__0_2475 [label=""];
    bb29__0_2475 -> bb30__0_2475 [label=""];
    bb31__0_2475 -> bb32__0_2475 [label="return"];
}
