digraph Mir_0_3526 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_switchboard_price(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: u64) -&gt; std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;<br align="left"/>let _3: std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _8: std::result::Result&lt;std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _9: error::ErrorCode;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let _15: i64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _18: i128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _21: &amp;ReErased switchboard::SwitchboardDecimal;<br align="left"/>let _22: &amp;ReErased switchboard::SwitchboardDecimal;<br align="left"/>let _23: &amp;ReErased switchboard::AggregatorAccountData;<br align="left"/>let mut _24: &amp;ReErased std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i128;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: i64;<br align="left"/>let _35: i64;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _37: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _38: i128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _41: &amp;ReErased switchboard::SwitchboardDecimal;<br align="left"/>let _42: &amp;ReErased switchboard::SwitchboardDecimal;<br align="left"/>let _43: &amp;ReErased switchboard::AggregatorAccountData;<br align="left"/>let mut _44: &amp;ReErased std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: i128;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: i64;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: i64;<br align="left"/>let _58: u64;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _60: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: i64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: u64;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: i64;<br align="left"/>let mut _70: u64;<br align="left"/>let _71: i64;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _73: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _74: i64;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _76: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: i64;<br align="left"/>let mut _83: i64;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _85: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _86: u64;<br align="left"/>let mut _87: &amp;ReErased switchboard::AggregatorAccountData;<br align="left"/>let mut _88: &amp;ReErased std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: i64;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: i64;<br align="left"/>let _99: bool;<br align="left"/>let mut _100: u32;<br align="left"/>let mut _101: &amp;ReErased switchboard::AggregatorAccountData;<br align="left"/>let mut _102: &amp;ReErased std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let mut _103: u32;<br align="left"/>let mut _104: &amp;ReErased switchboard::AggregatorAccountData;<br align="left"/>let mut _105: &amp;ReErased std::cell::Ref&lt;ReErased, switchboard::AggregatorAccountData&gt;;<br align="left"/>let mut _106: state::oracle::OraclePriceData;<br align="left"/>let mut _107: i64;<br align="left"/>let mut _108: u64;<br align="left"/>let mut _109: i64;<br align="left"/>let mut _110: bool;<br align="left"/>let mut _111: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>debug price_oracle =&gt; _1;<br align="left"/>debug clock_slot =&gt; _2;<br align="left"/>debug aggregator_data =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug price =&gt; _15;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug confidence =&gt; _35;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug confidence =&gt; _55;<br align="left"/>debug price_10bps =&gt; _58;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug delay =&gt; _71;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug has_sufficient_number_of_data_points =&gt; _99;<br align="left"/>>;
    bb0__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = load_ref::&lt;AggregatorAccountData&gt;(move _7)</td></tr></table>>];
    bb1__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::UnableToLoadOracle<br/>_8 = std::result::Result::&lt;Ref&lt;'_, AggregatorAccountData&gt;, error::ErrorCode&gt;::Err(move _9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;Ref&lt;'_, AggregatorAccountData&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _6, move _8)</td></tr></table>>];
    bb2__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;Ref&lt;'_, AggregatorAccountData&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_10 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_4 as Continue).0: std::cell::Ref&lt;'_, switchboard::AggregatorAccountData&gt;)<br/>_3 = move _14<br/>StorageDead(_14)<br/>_114 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;_3<br/></td></tr><tr><td align="left">_23 = &lt;Ref&lt;'_, AggregatorAccountData&gt; as Deref&gt;::deref(move _24)</td></tr></table>>];
    bb5__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_112 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_22 = &amp;(((*_23).16: switchboard::AggregatorRound).5: switchboard::SwitchboardDecimal)<br/>_21 = &amp;(*_22)<br/></td></tr><tr><td align="left">_20 = convert_switchboard_decimal(move _21)</td></tr></table>>];
    bb9__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb10__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_25 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb11__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_19 as Continue).0: i128)<br/>_18 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_17 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _18)</td></tr></table>>];
    bb12__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb13__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb15__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_30 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb16__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_16 as Continue).0: i64)<br/>_15 = _34<br/>StorageDead(_34)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_3<br/></td></tr><tr><td align="left">_43 = &lt;Ref&lt;'_, AggregatorAccountData&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb17__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb18__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = &amp;(((*_43).16: switchboard::AggregatorRound).6: switchboard::SwitchboardDecimal)<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = convert_switchboard_decimal(move _41)</td></tr></table>>];
    bb20__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb21__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_45 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb22__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_39 as Continue).0: i128)<br/>_38 = _49<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_37 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _38)</td></tr></table>>];
    bb23__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb24__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb26__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_50 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb27__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_36 as Continue).0: i64)<br/>_35 = _54<br/>StorageDead(_54)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _35<br/>_56 = Lt(move _57, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb28__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb29__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_55 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _15<br/></td></tr><tr><td align="left">_61 = core::num::&lt;impl i64&gt;::unsigned_abs(move _62)</td></tr></table>>];
    bb32__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;u64 as SafeMath&gt;::safe_div(move _61, const 1000_u64)</td></tr></table>>];
    bb33__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb34__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_63 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb35__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_59 as Continue).0: u64)<br/>_58 = _67<br/>StorageDead(_67)<br/>StorageDead(_59)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _35<br/></td></tr><tr><td align="left">_68 = core::num::&lt;impl i64&gt;::unsigned_abs(move _69)</td></tr></table>>];
    bb36__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb37__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_70)<br/>_70 = _58<br/></td></tr><tr><td align="left">_55 = &lt;u64 as Ord&gt;::max(move _68, move _70)</td></tr></table>>];
    bb39__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = _2<br/></td></tr><tr><td align="left">_76 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _77)</td></tr></table>>];
    bb41__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb42__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_78 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb43__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_75 as Continue).0: i64)<br/>_74 = _82<br/>StorageDead(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_3<br/></td></tr><tr><td align="left">_87 = &lt;Ref&lt;'_, AggregatorAccountData&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb44__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb45__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_86 = (((*_87).16: switchboard::AggregatorRound).3: u64)<br/></td></tr><tr><td align="left">_85 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _86)</td></tr></table>>];
    bb47__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb48__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_89 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb49__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_84 as Continue).0: i64)<br/>_83 = _93<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_73 = &lt;i64 as SafeMath&gt;::safe_sub(move _74, move _83)</td></tr></table>>];
    bb50__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb51__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_83)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb53__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_94 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb54__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_72 as Continue).0: i64)<br/>_71 = _98<br/>StorageDead(_98)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_3<br/></td></tr><tr><td align="left">_101 = &lt;Ref&lt;'_, AggregatorAccountData&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb55__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb56__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_100 = (((*_101).16: switchboard::AggregatorRound).0: u32)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;_3<br/></td></tr><tr><td align="left">_104 = &lt;Ref&lt;'_, AggregatorAccountData&gt; as Deref&gt;::deref(move _105)</td></tr></table>>];
    bb58__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_103 = ((*_104).5: u32)<br/>_99 = Ge(move _100, move _103)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = _15<br/>StorageLive(_108)<br/>_108 = _55<br/>StorageLive(_109)<br/>_109 = _71<br/>StorageLive(_110)<br/>_110 = _99<br/>StorageLive(_111)<br/>_111 = Option::&lt;u64&gt;::None<br/>_106 = OraclePriceData { price: move _107, confidence: move _108, delay: move _109, has_sufficient_number_of_data_points: move _110, sequence_id: move _111 }<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>_0 = std::result::Result::&lt;OraclePriceData, error::ErrorCode&gt;::Ok(move _106)<br/>StorageDead(_106)<br/>StorageDead(_99)<br/>StorageDead(_71)<br/>StorageDead(_55)<br/>StorageDead(_35)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb59__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb67__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">return</td></tr></table>>];
    bb69__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb70__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb71__0_3526 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left" balign="left">_116 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3526 -> bb1__0_3526 [label="return"];
    bb1__0_3526 -> bb2__0_3526 [label="return"];
    bb1__0_3526 -> bb70__0_3526 [label="unwind"];
    bb2__0_3526 -> bb3__0_3526 [label="return"];
    bb2__0_3526 -> bb70__0_3526 [label="unwind"];
    bb3__0_3526 -> bb4__0_3526 [label="0"];
    bb3__0_3526 -> bb6__0_3526 [label="1"];
    bb3__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb4__0_3526 -> bb8__0_3526 [label="return"];
    bb4__0_3526 -> bb69__0_3526 [label="unwind"];
    bb6__0_3526 -> bb7__0_3526 [label="return"];
    bb6__0_3526 -> bb71__0_3526 [label="unwind"];
    bb7__0_3526 -> bb67__0_3526 [label=""];
    bb8__0_3526 -> bb9__0_3526 [label="return"];
    bb8__0_3526 -> bb69__0_3526 [label="unwind"];
    bb9__0_3526 -> bb10__0_3526 [label="return"];
    bb9__0_3526 -> bb69__0_3526 [label="unwind"];
    bb10__0_3526 -> bb11__0_3526 [label="0"];
    bb10__0_3526 -> bb12__0_3526 [label="1"];
    bb10__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb11__0_3526 -> bb14__0_3526 [label="return"];
    bb11__0_3526 -> bb69__0_3526 [label="unwind"];
    bb12__0_3526 -> bb13__0_3526 [label="return"];
    bb12__0_3526 -> bb69__0_3526 [label="unwind"];
    bb13__0_3526 -> bb65__0_3526 [label=""];
    bb14__0_3526 -> bb15__0_3526 [label="return"];
    bb14__0_3526 -> bb69__0_3526 [label="unwind"];
    bb15__0_3526 -> bb16__0_3526 [label="0"];
    bb15__0_3526 -> bb17__0_3526 [label="1"];
    bb15__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb16__0_3526 -> bb19__0_3526 [label="return"];
    bb16__0_3526 -> bb69__0_3526 [label="unwind"];
    bb17__0_3526 -> bb18__0_3526 [label="return"];
    bb17__0_3526 -> bb69__0_3526 [label="unwind"];
    bb18__0_3526 -> bb65__0_3526 [label=""];
    bb19__0_3526 -> bb20__0_3526 [label="return"];
    bb19__0_3526 -> bb69__0_3526 [label="unwind"];
    bb20__0_3526 -> bb21__0_3526 [label="return"];
    bb20__0_3526 -> bb69__0_3526 [label="unwind"];
    bb21__0_3526 -> bb22__0_3526 [label="0"];
    bb21__0_3526 -> bb23__0_3526 [label="1"];
    bb21__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb22__0_3526 -> bb25__0_3526 [label="return"];
    bb22__0_3526 -> bb69__0_3526 [label="unwind"];
    bb23__0_3526 -> bb24__0_3526 [label="return"];
    bb23__0_3526 -> bb69__0_3526 [label="unwind"];
    bb24__0_3526 -> bb63__0_3526 [label=""];
    bb25__0_3526 -> bb26__0_3526 [label="return"];
    bb25__0_3526 -> bb69__0_3526 [label="unwind"];
    bb26__0_3526 -> bb27__0_3526 [label="0"];
    bb26__0_3526 -> bb28__0_3526 [label="1"];
    bb26__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb27__0_3526 -> bb31__0_3526 [label="0"];
    bb27__0_3526 -> bb30__0_3526 [label="otherwise"];
    bb28__0_3526 -> bb29__0_3526 [label="return"];
    bb28__0_3526 -> bb69__0_3526 [label="unwind"];
    bb29__0_3526 -> bb63__0_3526 [label=""];
    bb30__0_3526 -> bb40__0_3526 [label=""];
    bb31__0_3526 -> bb32__0_3526 [label="return"];
    bb31__0_3526 -> bb69__0_3526 [label="unwind"];
    bb32__0_3526 -> bb33__0_3526 [label="return"];
    bb32__0_3526 -> bb69__0_3526 [label="unwind"];
    bb33__0_3526 -> bb34__0_3526 [label="return"];
    bb33__0_3526 -> bb69__0_3526 [label="unwind"];
    bb34__0_3526 -> bb35__0_3526 [label="0"];
    bb34__0_3526 -> bb36__0_3526 [label="1"];
    bb34__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb35__0_3526 -> bb38__0_3526 [label="return"];
    bb35__0_3526 -> bb69__0_3526 [label="unwind"];
    bb36__0_3526 -> bb37__0_3526 [label="return"];
    bb36__0_3526 -> bb69__0_3526 [label="unwind"];
    bb37__0_3526 -> bb62__0_3526 [label=""];
    bb38__0_3526 -> bb39__0_3526 [label="return"];
    bb38__0_3526 -> bb69__0_3526 [label="unwind"];
    bb39__0_3526 -> bb40__0_3526 [label=""];
    bb40__0_3526 -> bb41__0_3526 [label="return"];
    bb40__0_3526 -> bb69__0_3526 [label="unwind"];
    bb41__0_3526 -> bb42__0_3526 [label="return"];
    bb41__0_3526 -> bb69__0_3526 [label="unwind"];
    bb42__0_3526 -> bb43__0_3526 [label="0"];
    bb42__0_3526 -> bb44__0_3526 [label="1"];
    bb42__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb43__0_3526 -> bb46__0_3526 [label="return"];
    bb43__0_3526 -> bb69__0_3526 [label="unwind"];
    bb44__0_3526 -> bb45__0_3526 [label="return"];
    bb44__0_3526 -> bb69__0_3526 [label="unwind"];
    bb45__0_3526 -> bb61__0_3526 [label=""];
    bb46__0_3526 -> bb47__0_3526 [label="return"];
    bb46__0_3526 -> bb69__0_3526 [label="unwind"];
    bb47__0_3526 -> bb48__0_3526 [label="return"];
    bb47__0_3526 -> bb69__0_3526 [label="unwind"];
    bb48__0_3526 -> bb49__0_3526 [label="0"];
    bb48__0_3526 -> bb50__0_3526 [label="1"];
    bb48__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb49__0_3526 -> bb52__0_3526 [label="return"];
    bb49__0_3526 -> bb69__0_3526 [label="unwind"];
    bb50__0_3526 -> bb51__0_3526 [label="return"];
    bb50__0_3526 -> bb69__0_3526 [label="unwind"];
    bb51__0_3526 -> bb60__0_3526 [label=""];
    bb52__0_3526 -> bb53__0_3526 [label="return"];
    bb52__0_3526 -> bb69__0_3526 [label="unwind"];
    bb53__0_3526 -> bb54__0_3526 [label="0"];
    bb53__0_3526 -> bb55__0_3526 [label="1"];
    bb53__0_3526 -> bb5__0_3526 [label="otherwise"];
    bb54__0_3526 -> bb57__0_3526 [label="return"];
    bb54__0_3526 -> bb69__0_3526 [label="unwind"];
    bb55__0_3526 -> bb56__0_3526 [label="return"];
    bb55__0_3526 -> bb69__0_3526 [label="unwind"];
    bb56__0_3526 -> bb60__0_3526 [label=""];
    bb57__0_3526 -> bb58__0_3526 [label="return"];
    bb57__0_3526 -> bb69__0_3526 [label="unwind"];
    bb58__0_3526 -> bb59__0_3526 [label="return"];
    bb58__0_3526 -> bb70__0_3526 [label="unwind"];
    bb59__0_3526 -> bb68__0_3526 [label=""];
    bb60__0_3526 -> bb61__0_3526 [label=""];
    bb61__0_3526 -> bb62__0_3526 [label=""];
    bb62__0_3526 -> bb64__0_3526 [label=""];
    bb63__0_3526 -> bb64__0_3526 [label=""];
    bb64__0_3526 -> bb66__0_3526 [label=""];
    bb65__0_3526 -> bb66__0_3526 [label=""];
    bb66__0_3526 -> bb67__0_3526 [label="return"];
    bb66__0_3526 -> bb70__0_3526 [label="unwind"];
    bb67__0_3526 -> bb68__0_3526 [label=""];
    bb69__0_3526 -> bb70__0_3526 [label="return"];
    bb71__0_3526 -> bb70__0_3526 [label=""];
}
