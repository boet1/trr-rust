digraph Mir_0_2222 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_referee_fee_and_referrer_reward(_1: u64, _2: &amp;ReErased state::state::FeeTier, _3: u64, _4: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;) -&gt; std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt;<br align="left"/>let _5: u64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: u128;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: u32;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: u128;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: u64;<br align="left"/>let _27: u64;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: u32;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: u32;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u64;<br align="left"/>let _49: u64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: u64;<br align="left"/>let _59: u64;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: &amp;ReErased &amp;ReErased mut state::user::UserStats;<br align="left"/>let _62: u64;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: u64;<br align="left"/>let mut _67: (u64, u64, u64);<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: &amp;ReErased mut state::user::UserStats;<br align="left"/>debug fee =&gt; _1;<br align="left"/>debug fee_tier =&gt; _2;<br align="left"/>debug referrer_reward_epoch_upper_bound =&gt; _3;<br align="left"/>debug referrer_stats =&gt; _4;<br align="left"/>debug referee_discount =&gt; _5;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug max_referrer_reward_from_fee =&gt; _27;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug referee_fee =&gt; _49;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug referrer_reward =&gt; _59;<br align="left"/>debug referrer_stats =&gt; _61;<br align="left"/>debug max_referrer_reward_in_epoch =&gt; _62;<br align="left"/>>;
    bb0__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _1<br/>_11 = move _12 as u128 (IntToInt)<br/>StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = ((*_2).6: u32)<br/>_13 = move _14 as u128 (IntToInt)<br/>StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = ((*_2).7: u32)<br/>_15 = move _16 as u128 (IntToInt)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_10 = get_proportion_u128(move _11, move _13, move _15)</td></tr></table>>];
    bb1__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb2__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_17 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb3__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_9 as Continue).0: u128)<br/>_8 = _21<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_7 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _8)</td></tr></table>>];
    bb4__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb6__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb8__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_22 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb9__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_6 as Continue).0: u64)<br/>_5 = _26<br/>StorageDead(_26)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _1<br/>_33 = move _34 as u128 (IntToInt)<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = ((*_2).4: u32)<br/>_35 = move _36 as u128 (IntToInt)<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = ((*_2).5: u32)<br/>_37 = move _38 as u128 (IntToInt)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = get_proportion_u128(move _33, move _35, move _37)</td></tr></table>>];
    bb10__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb11__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb13__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_39 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb14__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_31 as Continue).0: u128)<br/>_30 = _43<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_29 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _30)</td></tr></table>>];
    bb15__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb16__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb18__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_44 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb19__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_28 as Continue).0: u64)<br/>_27 = _48<br/>StorageDead(_48)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _1<br/>StorageLive(_53)<br/>_53 = _5<br/></td></tr><tr><td align="left">_51 = &lt;u64 as SafeMath&gt;::safe_sub(move _52, move _53)</td></tr></table>>];
    bb20__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb21__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb23__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_54 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb24__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_50 as Continue).0: u64)<br/>_49 = _58<br/>StorageDead(_58)<br/>StorageDead(_50)<br/>StorageLive(_59)<br/>_60 = discriminant((*_4))<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb25__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb26__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_59 = _27<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = &amp;(((*_4) as Some).0: &amp;mut state::user::UserStats)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _3<br/>StorageLive(_64)<br/>_71 = deref_copy (*_61)<br/>_64 = (((*_71).2: state::user::UserFees).5: u64)<br/></td></tr><tr><td align="left">_62 = core::num::&lt;impl u64&gt;::saturating_sub(move _63, move _64)</td></tr></table>>];
    bb29__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>_65 = _27<br/>StorageLive(_66)<br/>_66 = _62<br/></td></tr><tr><td align="left">_59 = &lt;u64 as Ord&gt;::min(move _65, move _66)</td></tr></table>>];
    bb30__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _49<br/>StorageLive(_69)<br/>_69 = _5<br/>StorageLive(_70)<br/>_70 = _59<br/>_67 = (move _68, move _69, move _70)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>_0 = std::result::Result::&lt;(u64, u64, u64), error::ErrorCode&gt;::Ok(move _67)<br/>StorageDead(_67)<br/>StorageDead(_59)<br/>StorageDead(_49)<br/>StorageDead(_27)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2222 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2222 -> bb1__0_2222 [label="return"];
    bb1__0_2222 -> bb2__0_2222 [label="return"];
    bb2__0_2222 -> bb3__0_2222 [label="0"];
    bb2__0_2222 -> bb5__0_2222 [label="1"];
    bb2__0_2222 -> bb4__0_2222 [label="otherwise"];
    bb3__0_2222 -> bb7__0_2222 [label="return"];
    bb5__0_2222 -> bb6__0_2222 [label="return"];
    bb6__0_2222 -> bb34__0_2222 [label=""];
    bb7__0_2222 -> bb8__0_2222 [label="return"];
    bb8__0_2222 -> bb9__0_2222 [label="0"];
    bb8__0_2222 -> bb10__0_2222 [label="1"];
    bb8__0_2222 -> bb4__0_2222 [label="otherwise"];
    bb9__0_2222 -> bb12__0_2222 [label="return"];
    bb10__0_2222 -> bb11__0_2222 [label="return"];
    bb11__0_2222 -> bb34__0_2222 [label=""];
    bb12__0_2222 -> bb13__0_2222 [label="return"];
    bb13__0_2222 -> bb14__0_2222 [label="0"];
    bb13__0_2222 -> bb15__0_2222 [label="1"];
    bb13__0_2222 -> bb4__0_2222 [label="otherwise"];
    bb14__0_2222 -> bb17__0_2222 [label="return"];
    bb15__0_2222 -> bb16__0_2222 [label="return"];
    bb16__0_2222 -> bb32__0_2222 [label=""];
    bb17__0_2222 -> bb18__0_2222 [label="return"];
    bb18__0_2222 -> bb19__0_2222 [label="0"];
    bb18__0_2222 -> bb20__0_2222 [label="1"];
    bb18__0_2222 -> bb4__0_2222 [label="otherwise"];
    bb19__0_2222 -> bb22__0_2222 [label="return"];
    bb20__0_2222 -> bb21__0_2222 [label="return"];
    bb21__0_2222 -> bb32__0_2222 [label=""];
    bb22__0_2222 -> bb23__0_2222 [label="return"];
    bb23__0_2222 -> bb24__0_2222 [label="0"];
    bb23__0_2222 -> bb25__0_2222 [label="1"];
    bb23__0_2222 -> bb4__0_2222 [label="otherwise"];
    bb24__0_2222 -> bb27__0_2222 [label="0"];
    bb24__0_2222 -> bb28__0_2222 [label="1"];
    bb24__0_2222 -> bb4__0_2222 [label="otherwise"];
    bb25__0_2222 -> bb26__0_2222 [label="return"];
    bb26__0_2222 -> bb33__0_2222 [label=""];
    bb27__0_2222 -> bb31__0_2222 [label=""];
    bb28__0_2222 -> bb29__0_2222 [label="return"];
    bb29__0_2222 -> bb30__0_2222 [label="return"];
    bb30__0_2222 -> bb31__0_2222 [label=""];
    bb31__0_2222 -> bb36__0_2222 [label=""];
    bb32__0_2222 -> bb33__0_2222 [label=""];
    bb33__0_2222 -> bb35__0_2222 [label=""];
    bb34__0_2222 -> bb35__0_2222 [label=""];
    bb35__0_2222 -> bb36__0_2222 [label=""];
}
