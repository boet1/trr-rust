// MIR for `drift::liquidate_perp_pnl_for_deposit` after PreCodegen

fn drift::liquidate_perp_pnl_for_deposit(_1: anchor_lang::context::Context<'_, '_, '_, '_, keeper::LiquidatePerpPnlForDeposit<'_>>, _2: u16, _3: u16, _4: u128, _5: Option<u64>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug perp_market_index => _2;
    debug spot_market_index => _3;
    debug liquidator_max_pnl_transfer => _4;
    debug limit_price => _5;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _6: anchor_lang::context::Context<'_, '_, '_, '_, instructions::keeper::LiquidatePerpPnlForDeposit<'_>>;
    let mut _7: u16;
    let mut _8: u16;
    let mut _9: u128;
    let mut _10: std::option::Option<u64>;

    bb0: {
        StorageLive(_6);
        _6 = move _1;
        StorageLive(_7);
        _7 = _2;
        StorageLive(_8);
        _8 = _3;
        StorageLive(_9);
        _9 = _4;
        StorageLive(_10);
        _10 = _5;
        _0 = keeper::handle_liquidate_perp_pnl_for_deposit::<'_, '_>(move _6, move _7, move _8, move _9, move _10) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        return;
    }
}
