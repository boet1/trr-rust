digraph Mir_0_9240 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_settle_multiple_pnls(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::SettlePNL&lt;ReErased&gt;&gt;, _2: std::vec::Vec&lt;u16, std::alloc::Global&gt;, _3: state::settle_pnl_mode::SettlePnlMode) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _23: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _25: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _26: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _31: Closure(DefId(0:9245 ~ drift[d311]::instructions::keeper::handle_settle_multiple_pnls::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _37: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _38: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _39: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _40: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _42: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _43: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _44: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _45: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _46: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _47: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _48: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _49: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _50: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _51: &amp;ReErased [u16];<br align="left"/>let _52: &amp;ReErased [u16];<br align="left"/>let mut _53: &amp;ReErased std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _54: &amp;ReErased std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _55: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _56: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _57: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _60: state::state::OracleGuardRails;<br align="left"/>let mut _61: &amp;ReErased state::state::State;<br align="left"/>let mut _62: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _68: bool;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _70: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _71: &amp;ReErased state::user::User;<br align="left"/>let _72: &amp;ReErased state::user::User;<br align="left"/>let mut _73: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _74: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _75: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _77: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: bool;<br align="left"/>let _85: ();<br align="left"/>let mut _86: std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _87: std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _88: &amp;ReErased [u16];<br align="left"/>let _89: &amp;ReErased [u16];<br align="left"/>let mut _90: &amp;ReErased std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _91: std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _92: ();<br align="left"/>let _93: ();<br align="left"/>let mut _94: std::option::Option&lt;&amp;ReErased u16&gt;;<br align="left"/>let mut _95: &amp;ReErased mut std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _96: &amp;ReErased mut std::slice::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: !;<br align="left"/>let _99: &amp;ReErased u16;<br align="left"/>let _100: bool;<br align="left"/>let mut _101: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _102: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _103: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _104: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _106: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _107: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased u16;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _114: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _115: state::perp_market::MarketStatus;<br align="left"/>let mut _116: bool;<br align="left"/>let _117: ();<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _119: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _125: ();<br align="left"/>let _126: ();<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _128: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _129: u16;<br align="left"/>let mut _130: &amp;ReErased mut state::user::User;<br align="left"/>let mut _131: &amp;ReErased mut state::user::User;<br align="left"/>let mut _132: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _133: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _134: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _135: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _136: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _138: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _142: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _143: &amp;ReErased state::state::State;<br align="left"/>let _144: &amp;ReErased state::state::State;<br align="left"/>let mut _145: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: ();<br align="left"/>let _151: ();<br align="left"/>let mut _152: &amp;ReErased mut state::user::User;<br align="left"/>let mut _153: &amp;ReErased mut state::user::User;<br align="left"/>let mut _154: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _155: u64;<br align="left"/>let _156: error::ErrorCode;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _158: std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt;;<br align="left"/>let mut _159: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _160: u16;<br align="left"/>let mut _161: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _162: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased state::state::State;<br align="left"/>let _166: &amp;ReErased state::state::State;<br align="left"/>let mut _167: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _168: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _169: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _170: Closure(DefId(0:9243 ~ drift[d311]::instructions::keeper::handle_settle_multiple_pnls::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((i128,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _171: isize;<br align="left"/>let _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _173: !;<br align="left"/>let mut _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _175: error::ErrorCode;<br align="left"/>let _176: error::ErrorCode;<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _178: std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt;;<br align="left"/>let mut _179: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _180: u16;<br align="left"/>let mut _181: &amp;ReErased mut state::user::User;<br align="left"/>let mut _182: &amp;ReErased mut state::user::User;<br align="left"/>let mut _183: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _184: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _185: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _186: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _187: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _188: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _189: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _190: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _191: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _192: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _193: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _195: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _196: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _197: &amp;ReErased state::state::State;<br align="left"/>let _198: &amp;ReErased state::state::State;<br align="left"/>let mut _199: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _200: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _201: bool;<br align="left"/>let mut _202: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _203: Closure(DefId(0:9244 ~ drift[d311]::instructions::keeper::handle_settle_multiple_pnls::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(((),)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _204: isize;<br align="left"/>let _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _206: !;<br align="left"/>let mut _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _208: error::ErrorCode;<br align="left"/>let _209: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _210: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _211: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _212: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _213: isize;<br align="left"/>let _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _217: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _218: i64;<br align="left"/>let mut _219: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _220: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _221: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _222: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _223: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _224: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _225: u64;<br align="left"/>let mut _226: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _227: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _228: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _229: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _234: i64;<br align="left"/>let mut _235: ();<br align="left"/>let mut _236: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _237: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _238: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _239: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _240: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _241: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _242: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _243: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _244: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _245: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _246: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _247: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _248: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _249: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _250: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _251: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _252: bool;<br align="left"/>let mut _253: isize;<br align="left"/>let mut _254: isize;<br align="left"/>let mut _255: isize;<br align="left"/>let mut _256: isize;<br align="left"/>let mut _257: isize;<br align="left"/>let mut _258: isize;<br align="left"/>let mut _259: isize;<br align="left"/>let mut _260: isize;<br align="left"/>let mut _261: isize;<br align="left"/>let mut _262: isize;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: isize;<br align="left"/>let mut _269: isize;<br align="left"/>let mut _270: isize;<br align="left"/>let mut _271: isize;<br align="left"/>let mut _272: isize;<br align="left"/>let mut _273: isize;<br align="left"/>let mut _274: isize;<br align="left"/>let mut _275: isize;<br align="left"/>let mut _276: isize;<br align="left"/>let mut _277: isize;<br align="left"/>let mut _278: isize;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _290: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _291: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _292: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _293: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _294: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _295: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_indexes =&gt; _2;<br align="left"/>debug mode =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug clock =&gt; _14;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug state =&gt; _22;<br align="left"/>debug user_key =&gt; _23;<br align="left"/>debug user =&gt; _25;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug perp_market_map =&gt; _37;<br align="left"/>debug spot_market_map =&gt; _38;<br align="left"/>debug oracle_map =&gt; _39;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug meets_margin_requirement =&gt; _68;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug iter =&gt; _91;<br align="left"/>debug market_index =&gt; _99;<br align="left"/>debug market_in_settlement =&gt; _100;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>debug residual =&gt; _172;<br align="left"/>debug val =&gt; _175;<br align="left"/>debug residual =&gt; _205;<br align="left"/>debug val =&gt; _208;<br align="left"/>debug spot_market =&gt; _209;<br align="left"/>debug residual =&gt; _214;<br align="left"/>debug val =&gt; _217;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>>;
    bb0__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_252 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_237 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_8 = &amp;((*_237).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_238 = deref_copy (*_8)<br/>_289 = (((_238.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_289)<br/></td></tr><tr><td align="left">_6 = constraints::settle_pnl_not_paused(move _7)</td></tr></table>>];
    bb1__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_253 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_279 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_255 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_239 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_22 = &amp;((*_239).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_240 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_24 = &amp;((*_240).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _24)</td></tr></table>>];
    bb10__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_277 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_241 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_30 = &amp;((*_241).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_29 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _30)</td></tr></table>>];
    bb13__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_28 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _29, move _31)</td></tr></table>>];
    bb14__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb15__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_32 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_27 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_26 = move _36<br/>StorageDead(_36)<br/>_25 = &amp;mut _26<br/>_259 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_242 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_47 = &amp;(*_242)<br/></td></tr><tr><td align="left">_46 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _47)</td></tr></table>>];
    bb17__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_257 = discriminant(_27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _46)</td></tr></table>>];
    bb20__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = &amp;mut _45<br/>_43 = &amp;mut (*_44)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_2<br/>_53 = &amp;(*_54)<br/></td></tr><tr><td align="left">_52 = &lt;Vec&lt;u16&gt; as Deref&gt;::deref(move _53)</td></tr></table>>];
    bb21__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_51 = &amp;(*_52)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_50 = get_writable_perp_market_set_from_vec(move _51)</td></tr></table>>];
    bb22__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_49 = &amp;_50<br/>_48 = &amp;(*_49)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/></td></tr><tr><td align="left">_57 = get_writable_spot_market_set(const _)</td></tr></table>>];
    bb23__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/>StorageLive(_58)<br/>_58 = (_14.0: u64)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_243 = deref_copy (*_22)<br/>_290 = (((_243.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_62 = &amp;(*_290)<br/></td></tr><tr><td align="left">_61 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb24__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = ((*_61).7: state::state::OracleGuardRails)<br/>_59 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _60)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_42 = load_maps(move _43, move _48, move _55, move _58, move _59)</td></tr></table>>];
    bb25__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_48)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb26__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_63 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb27__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_41 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_40 = move _67<br/>StorageDead(_67)<br/>StorageLive(_37)<br/>_37 = move (_40.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_38)<br/>_38 = move (_40.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_39)<br/>_39 = move (_40.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_263 = discriminant(_41)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb28__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb29__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>_261 = discriminant(_41)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb30__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb31__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;(*_25)<br/></td></tr><tr><td align="left">_72 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb32__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_71 = &amp;(*_72)<br/>StorageDead(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;_37<br/>_74 = &amp;(*_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;_38<br/>_76 = &amp;(*_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;mut _39<br/>_78 = &amp;mut (*_79)<br/></td></tr><tr><td align="left">_70 = meets_settle_pnl_maintenance_margin_requirement(move _71, move _74, move _76, move _78)</td></tr></table>>];
    bb33__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb34__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_80 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb35__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_69 as Continue).0: bool)<br/>_68 = _84<br/>StorageDead(_84)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_2<br/></td></tr><tr><td align="left">_89 = &lt;Vec&lt;u16&gt; as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb36__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb37__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_88 = &amp;(*_89)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_87 = core::slice::&lt;impl [u16]&gt;::iter(move _88)</td></tr></table>>];
    bb39__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::slice::Iter&lt;'_, u16&gt; as IntoIterator&gt;::into_iter(move _87)</td></tr></table>>];
    bb40__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_91)<br/>_91 = move _86<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;mut _91<br/>_95 = &amp;mut (*_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::slice::Iter&lt;'_, u16&gt; as Iterator&gt;::next(move _95)</td></tr></table>>];
    bb42__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_97 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb43__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_94 as Some).0: &amp;u16)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_37<br/>StorageLive(_108)<br/>_108 = &amp;(*_99)<br/></td></tr><tr><td align="left">_106 = PerpMarketMap::&lt;'_&gt;::get_ref(move _107, move _108)</td></tr></table>>];
    bb44__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_85 = const ()<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_38<br/></td></tr><tr><td align="left">_211 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _212)</td></tr></table>>];
    bb45__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb46__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_252 = const true<br/>StorageDead(_106)<br/>_109 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb47__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = move ((_105 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_104 = move _113<br/>StorageDead(_113)<br/>_103 = &amp;_104<br/></td></tr><tr><td align="left">_102 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _103)</td></tr></table>>];
    bb48__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb49__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>_265 = discriminant(_105)<br/>_252 = const false<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_101 = &amp;((*_102).22: state::perp_market::MarketStatus)<br/>StorageLive(_114)<br/>_236 = const _<br/>_114 = &amp;(*_236)<br/></td></tr><tr><td align="left">_100 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _101, move _114)</td></tr></table>>];
    bb51__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_104)</td></tr></table>>];
    bb52__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_244 = deref_copy (*_22)<br/>_291 = (((_244.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_120 = &amp;(*_291)<br/></td></tr><tr><td align="left">_119 = constraints::amm_not_paused(move _120)</td></tr></table>>];
    bb53__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb54__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_121 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb55__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_118 as Continue).0: ())<br/>_117 = _125<br/>StorageDead(_125)<br/>_269 = discriminant(_118)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = (*_99)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_131 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _132)</td></tr></table>>];
    bb56__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = move ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_124)<br/>_124 = move _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb57__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>_275 = discriminant(_118)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_130 = &amp;mut (*_131)<br/>StorageDead(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;_23<br/>_133 = &amp;(*_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_37<br/>_135 = &amp;(*_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;_38<br/>_137 = &amp;(*_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = &amp;mut _39<br/>_139 = &amp;mut (*_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;_14<br/>_141 = &amp;(*_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_245 = deref_copy (*_22)<br/>_292 = (((_245.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_145 = &amp;(*_292)<br/></td></tr><tr><td align="left">_144 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _145)</td></tr></table>>];
    bb59__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_143 = &amp;(*_144)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_128 = settle_expired_position(move _129, move _130, move _133, move _135, move _137, move _139, move _141, move _143)</td></tr></table>>];
    bb60__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb61__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_146 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb62__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_127 as Continue).0: ())<br/>_126 = _150<br/>StorageDead(_150)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_153 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _154)</td></tr></table>>];
    bb63__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb64__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_152 = &amp;mut (*_153)<br/>StorageDead(_154)<br/>StorageLive(_155)<br/>_155 = (_14.0: u64)<br/></td></tr><tr><td align="left">_151 = User::update_last_active_slot(move _152, move _155)</td></tr></table>>];
    bb66__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_152)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>_93 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = (*_99)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_37<br/>_161 = &amp;(*_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;mut _39<br/>_163 = &amp;mut (*_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_246 = deref_copy (*_22)<br/>_293 = (((_246.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_167 = &amp;(*_293)<br/></td></tr><tr><td align="left">_166 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _167)</td></tr></table>>];
    bb68__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_165 = &amp;(*_166)<br/>StorageDead(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;_14<br/>_168 = &amp;(*_169)<br/></td></tr><tr><td align="left">_159 = update_amm(move _160, move _161, move _163, move _165, move _168)</td></tr></table>>];
    bb69__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageLive(_170)<br/>_170 = {closure@programs/drift/src/instructions/keeper.rs:1026:18: 1026:21}<br/></td></tr><tr><td align="left">_158 = std::result::Result::&lt;i128, error::ErrorCode&gt;::map::&lt;error::ErrorCode, {closure@programs/drift/src/instructions/keeper.rs:1026:18: 1026:21}&gt;(move _159, move _170)</td></tr></table>>];
    bb70__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb71__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_171 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb72__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = ((_157 as Continue).0: error::ErrorCode)<br/>_156 = _175<br/>StorageDead(_175)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = (*_99)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_182 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _183)</td></tr></table>>];
    bb73__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_174)<br/>_174 = _172<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _174)</td></tr></table>>];
    bb74__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_181 = &amp;mut (*_182)<br/>StorageDead(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_247 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_186 = &amp;((*_247).2: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_185 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _186)</td></tr></table>>];
    bb76__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_248 = deref_copy ((*_185).0: &amp;anchor_lang::prelude::Pubkey)<br/>_184 = &amp;(*_248)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_23<br/>_187 = &amp;(*_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;_37<br/>_189 = &amp;(*_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;_38<br/>_191 = &amp;(*_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = &amp;mut _39<br/>_193 = &amp;mut (*_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;_14<br/>_195 = &amp;(*_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_249 = deref_copy (*_22)<br/>_294 = (((_249.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_199 = &amp;(*_294)<br/></td></tr><tr><td align="left">_198 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _199)</td></tr></table>>];
    bb77__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_197 = &amp;(*_198)<br/>StorageDead(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = _68<br/>_200 = Option::&lt;bool&gt;::Some(move _201)<br/>StorageDead(_201)<br/>StorageLive(_202)<br/>_202 = _3<br/></td></tr><tr><td align="left">_179 = controller::pnl::settle_pnl(move _180, move _181, move _184, move _187, move _189, move _191, move _193, move _195, move _197, move _200, move _202)</td></tr></table>>];
    bb78__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageLive(_203)<br/>_203 = {closure@programs/drift/src/instructions/keeper.rs:1041:18: 1041:21}<br/></td></tr><tr><td align="left">_178 = std::result::Result::&lt;(), error::ErrorCode&gt;::map::&lt;error::ErrorCode, {closure@programs/drift/src/instructions/keeper.rs:1041:18: 1041:21}&gt;(move _179, move _203)</td></tr></table>>];
    bb79__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb80__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_204 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _204)</td></tr></table>>];
    bb81__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_177 as Continue).0: error::ErrorCode)<br/>_176 = _208<br/>StorageDead(_208)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>_93 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_207)<br/>_207 = _205<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _207)</td></tr></table>>];
    bb83__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>_92 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/></td></tr><tr><td align="left">_210 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _211)</td></tr></table>>];
    bb86__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_213 = discriminant(_210)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb87__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = move ((_210 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_209 = move _217<br/>StorageDead(_217)<br/>_273 = discriminant(_210)<br/>StorageDead(_210)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;_209<br/>_223 = &amp;(*_224)<br/></td></tr><tr><td align="left">_222 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _223)</td></tr></table>>];
    bb88__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_210 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_216)<br/>_216 = _214<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _216)</td></tr></table>>];
    bb89__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_214)<br/>_271 = discriminant(_210)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_221 = &amp;(*_222)<br/>StorageDead(_223)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_250 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_251 = deref_copy ((*_250).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_295 = (((_251.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_229 = &amp;(*_295)<br/></td></tr><tr><td align="left">_228 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _229)</td></tr></table>>];
    bb91__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_226 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb92__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_227)<br/>_225 = ((*_226).2: u64)<br/></td></tr><tr><td align="left">_220 = validate_spot_market_vault_amount(move _221, move _225)</td></tr></table>>];
    bb93__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_219 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _220)</td></tr></table>>];
    bb94__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_230 = discriminant(_219)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb95__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_219 as Continue).0: i64)<br/>_218 = _234<br/>StorageDead(_234)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageLive(_235)<br/>_235 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _235)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb96__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_219 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_233)<br/>_233 = _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb97__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb98__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb99__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb100__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb101__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb102__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb103__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb107__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb108__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb109__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb111__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb113__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb116__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left">return</td></tr></table>>];
    bb117__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb118__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">118 (cleanup)</td></tr><tr><td align="left">drop(_104)</td></tr></table>>];
    bb119__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">119 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb120__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">120 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb121__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">121 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb122__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb123__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb124__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb125__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb126__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb127__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb128__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">_267 = discriminant(_105)<br/>_252 = const false<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageLive(_116)<br/>_116 = _100<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb129__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left" balign="left">_281 = discriminant(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left" balign="left">_282 = discriminant(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left" balign="left">_283 = discriminant(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left" balign="left">_285 = discriminant(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left" balign="left">_286 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left" balign="left">_287 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_9240 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">135 (cleanup)</td></tr><tr><td align="left" balign="left">_288 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9240 -> bb1__0_9240 [label="return"];
    bb0__0_9240 -> bb126__0_9240 [label="unwind"];
    bb1__0_9240 -> bb2__0_9240 [label="return"];
    bb1__0_9240 -> bb126__0_9240 [label="unwind"];
    bb2__0_9240 -> bb3__0_9240 [label="0"];
    bb2__0_9240 -> bb5__0_9240 [label="1"];
    bb2__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb3__0_9240 -> bb7__0_9240 [label="return"];
    bb3__0_9240 -> bb126__0_9240 [label="unwind"];
    bb5__0_9240 -> bb6__0_9240 [label="return"];
    bb5__0_9240 -> bb135__0_9240 [label="unwind"];
    bb6__0_9240 -> bb115__0_9240 [label=""];
    bb7__0_9240 -> bb8__0_9240 [label="return"];
    bb7__0_9240 -> bb126__0_9240 [label="unwind"];
    bb8__0_9240 -> bb9__0_9240 [label="0"];
    bb8__0_9240 -> bb10__0_9240 [label="1"];
    bb8__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb9__0_9240 -> bb12__0_9240 [label="return"];
    bb9__0_9240 -> bb126__0_9240 [label="unwind"];
    bb10__0_9240 -> bb11__0_9240 [label="return"];
    bb10__0_9240 -> bb134__0_9240 [label="unwind"];
    bb11__0_9240 -> bb114__0_9240 [label=""];
    bb12__0_9240 -> bb13__0_9240 [label="return"];
    bb12__0_9240 -> bb126__0_9240 [label="unwind"];
    bb13__0_9240 -> bb14__0_9240 [label="return"];
    bb13__0_9240 -> bb126__0_9240 [label="unwind"];
    bb14__0_9240 -> bb15__0_9240 [label="return"];
    bb14__0_9240 -> bb126__0_9240 [label="unwind"];
    bb15__0_9240 -> bb16__0_9240 [label="0"];
    bb15__0_9240 -> bb17__0_9240 [label="1"];
    bb15__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb16__0_9240 -> bb19__0_9240 [label="return"];
    bb16__0_9240 -> bb125__0_9240 [label="unwind"];
    bb17__0_9240 -> bb18__0_9240 [label="return"];
    bb17__0_9240 -> bb133__0_9240 [label="unwind"];
    bb18__0_9240 -> bb113__0_9240 [label=""];
    bb19__0_9240 -> bb20__0_9240 [label="return"];
    bb19__0_9240 -> bb125__0_9240 [label="unwind"];
    bb20__0_9240 -> bb21__0_9240 [label="return"];
    bb20__0_9240 -> bb125__0_9240 [label="unwind"];
    bb21__0_9240 -> bb22__0_9240 [label="return"];
    bb21__0_9240 -> bb125__0_9240 [label="unwind"];
    bb22__0_9240 -> bb23__0_9240 [label="return"];
    bb22__0_9240 -> bb124__0_9240 [label="unwind"];
    bb23__0_9240 -> bb24__0_9240 [label="return"];
    bb23__0_9240 -> bb123__0_9240 [label="unwind"];
    bb24__0_9240 -> bb25__0_9240 [label="return"];
    bb24__0_9240 -> bb123__0_9240 [label="unwind"];
    bb25__0_9240 -> bb26__0_9240 [label="return"];
    bb25__0_9240 -> bb123__0_9240 [label="unwind"];
    bb26__0_9240 -> bb27__0_9240 [label="0"];
    bb26__0_9240 -> bb28__0_9240 [label="1"];
    bb26__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb27__0_9240 -> bb30__0_9240 [label="return"];
    bb27__0_9240 -> bb119__0_9240 [label="unwind"];
    bb28__0_9240 -> bb29__0_9240 [label="return"];
    bb28__0_9240 -> bb132__0_9240 [label="unwind"];
    bb29__0_9240 -> bb110__0_9240 [label="return"];
    bb29__0_9240 -> bb124__0_9240 [label="unwind"];
    bb30__0_9240 -> bb31__0_9240 [label="return"];
    bb30__0_9240 -> bb120__0_9240 [label="unwind"];
    bb31__0_9240 -> bb32__0_9240 [label="return"];
    bb31__0_9240 -> bb120__0_9240 [label="unwind"];
    bb32__0_9240 -> bb33__0_9240 [label="return"];
    bb32__0_9240 -> bb120__0_9240 [label="unwind"];
    bb33__0_9240 -> bb34__0_9240 [label="return"];
    bb33__0_9240 -> bb120__0_9240 [label="unwind"];
    bb34__0_9240 -> bb35__0_9240 [label="0"];
    bb34__0_9240 -> bb36__0_9240 [label="1"];
    bb34__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb35__0_9240 -> bb38__0_9240 [label="return"];
    bb35__0_9240 -> bb120__0_9240 [label="unwind"];
    bb36__0_9240 -> bb37__0_9240 [label="return"];
    bb36__0_9240 -> bb120__0_9240 [label="unwind"];
    bb37__0_9240 -> bb106__0_9240 [label=""];
    bb38__0_9240 -> bb39__0_9240 [label="return"];
    bb38__0_9240 -> bb120__0_9240 [label="unwind"];
    bb39__0_9240 -> bb40__0_9240 [label="return"];
    bb39__0_9240 -> bb120__0_9240 [label="unwind"];
    bb40__0_9240 -> bb41__0_9240 [label=""];
    bb41__0_9240 -> bb42__0_9240 [label="return"];
    bb41__0_9240 -> bb120__0_9240 [label="unwind"];
    bb42__0_9240 -> bb44__0_9240 [label="0"];
    bb42__0_9240 -> bb43__0_9240 [label="1"];
    bb42__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb43__0_9240 -> bb45__0_9240 [label="return"];
    bb43__0_9240 -> bb120__0_9240 [label="unwind"];
    bb44__0_9240 -> bb85__0_9240 [label="return"];
    bb44__0_9240 -> bb120__0_9240 [label="unwind"];
    bb45__0_9240 -> bb46__0_9240 [label="return"];
    bb45__0_9240 -> bb120__0_9240 [label="unwind"];
    bb46__0_9240 -> bb47__0_9240 [label="0"];
    bb46__0_9240 -> bb48__0_9240 [label="1"];
    bb46__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb47__0_9240 -> bb50__0_9240 [label="return"];
    bb47__0_9240 -> bb118__0_9240 [label="unwind"];
    bb48__0_9240 -> bb49__0_9240 [label="return"];
    bb48__0_9240 -> bb131__0_9240 [label="unwind"];
    bb49__0_9240 -> bb105__0_9240 [label=""];
    bb50__0_9240 -> bb51__0_9240 [label="return"];
    bb50__0_9240 -> bb118__0_9240 [label="unwind"];
    bb51__0_9240 -> bb128__0_9240 [label="return"];
    bb51__0_9240 -> bb131__0_9240 [label="unwind"];
    bb52__0_9240 -> bb53__0_9240 [label="return"];
    bb52__0_9240 -> bb120__0_9240 [label="unwind"];
    bb53__0_9240 -> bb54__0_9240 [label="return"];
    bb53__0_9240 -> bb120__0_9240 [label="unwind"];
    bb54__0_9240 -> bb55__0_9240 [label="0"];
    bb54__0_9240 -> bb56__0_9240 [label="1"];
    bb54__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb55__0_9240 -> bb58__0_9240 [label="return"];
    bb55__0_9240 -> bb120__0_9240 [label="unwind"];
    bb56__0_9240 -> bb57__0_9240 [label="return"];
    bb56__0_9240 -> bb130__0_9240 [label="unwind"];
    bb57__0_9240 -> bb104__0_9240 [label=""];
    bb58__0_9240 -> bb59__0_9240 [label="return"];
    bb58__0_9240 -> bb120__0_9240 [label="unwind"];
    bb59__0_9240 -> bb60__0_9240 [label="return"];
    bb59__0_9240 -> bb120__0_9240 [label="unwind"];
    bb60__0_9240 -> bb61__0_9240 [label="return"];
    bb60__0_9240 -> bb120__0_9240 [label="unwind"];
    bb61__0_9240 -> bb62__0_9240 [label="0"];
    bb61__0_9240 -> bb63__0_9240 [label="1"];
    bb61__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb62__0_9240 -> bb65__0_9240 [label="return"];
    bb62__0_9240 -> bb120__0_9240 [label="unwind"];
    bb63__0_9240 -> bb64__0_9240 [label="return"];
    bb63__0_9240 -> bb120__0_9240 [label="unwind"];
    bb64__0_9240 -> bb104__0_9240 [label=""];
    bb65__0_9240 -> bb66__0_9240 [label="return"];
    bb65__0_9240 -> bb120__0_9240 [label="unwind"];
    bb66__0_9240 -> bb84__0_9240 [label=""];
    bb67__0_9240 -> bb68__0_9240 [label="return"];
    bb67__0_9240 -> bb120__0_9240 [label="unwind"];
    bb68__0_9240 -> bb69__0_9240 [label="return"];
    bb68__0_9240 -> bb120__0_9240 [label="unwind"];
    bb69__0_9240 -> bb70__0_9240 [label="return"];
    bb69__0_9240 -> bb120__0_9240 [label="unwind"];
    bb70__0_9240 -> bb71__0_9240 [label="return"];
    bb70__0_9240 -> bb120__0_9240 [label="unwind"];
    bb71__0_9240 -> bb72__0_9240 [label="0"];
    bb71__0_9240 -> bb73__0_9240 [label="1"];
    bb71__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb72__0_9240 -> bb75__0_9240 [label="return"];
    bb72__0_9240 -> bb120__0_9240 [label="unwind"];
    bb73__0_9240 -> bb74__0_9240 [label="return"];
    bb73__0_9240 -> bb120__0_9240 [label="unwind"];
    bb74__0_9240 -> bb104__0_9240 [label=""];
    bb75__0_9240 -> bb76__0_9240 [label="return"];
    bb75__0_9240 -> bb120__0_9240 [label="unwind"];
    bb76__0_9240 -> bb77__0_9240 [label="return"];
    bb76__0_9240 -> bb120__0_9240 [label="unwind"];
    bb77__0_9240 -> bb78__0_9240 [label="return"];
    bb77__0_9240 -> bb120__0_9240 [label="unwind"];
    bb78__0_9240 -> bb79__0_9240 [label="return"];
    bb78__0_9240 -> bb120__0_9240 [label="unwind"];
    bb79__0_9240 -> bb80__0_9240 [label="return"];
    bb79__0_9240 -> bb120__0_9240 [label="unwind"];
    bb80__0_9240 -> bb81__0_9240 [label="0"];
    bb80__0_9240 -> bb82__0_9240 [label="1"];
    bb80__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb81__0_9240 -> bb84__0_9240 [label=""];
    bb82__0_9240 -> bb83__0_9240 [label="return"];
    bb82__0_9240 -> bb120__0_9240 [label="unwind"];
    bb83__0_9240 -> bb104__0_9240 [label=""];
    bb84__0_9240 -> bb41__0_9240 [label=""];
    bb85__0_9240 -> bb86__0_9240 [label="return"];
    bb85__0_9240 -> bb120__0_9240 [label="unwind"];
    bb86__0_9240 -> bb87__0_9240 [label="0"];
    bb86__0_9240 -> bb88__0_9240 [label="1"];
    bb86__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb87__0_9240 -> bb90__0_9240 [label="return"];
    bb87__0_9240 -> bb117__0_9240 [label="unwind"];
    bb88__0_9240 -> bb89__0_9240 [label="return"];
    bb88__0_9240 -> bb129__0_9240 [label="unwind"];
    bb89__0_9240 -> bb103__0_9240 [label=""];
    bb90__0_9240 -> bb91__0_9240 [label="return"];
    bb90__0_9240 -> bb117__0_9240 [label="unwind"];
    bb91__0_9240 -> bb92__0_9240 [label="return"];
    bb91__0_9240 -> bb117__0_9240 [label="unwind"];
    bb92__0_9240 -> bb93__0_9240 [label="return"];
    bb92__0_9240 -> bb117__0_9240 [label="unwind"];
    bb93__0_9240 -> bb94__0_9240 [label="return"];
    bb93__0_9240 -> bb117__0_9240 [label="unwind"];
    bb94__0_9240 -> bb95__0_9240 [label="0"];
    bb94__0_9240 -> bb96__0_9240 [label="1"];
    bb94__0_9240 -> bb4__0_9240 [label="otherwise"];
    bb95__0_9240 -> bb98__0_9240 [label="return"];
    bb95__0_9240 -> bb120__0_9240 [label="unwind"];
    bb96__0_9240 -> bb97__0_9240 [label="return"];
    bb96__0_9240 -> bb117__0_9240 [label="unwind"];
    bb97__0_9240 -> bb103__0_9240 [label="return"];
    bb97__0_9240 -> bb120__0_9240 [label="unwind"];
    bb98__0_9240 -> bb99__0_9240 [label="return"];
    bb98__0_9240 -> bb121__0_9240 [label="unwind"];
    bb99__0_9240 -> bb100__0_9240 [label="return"];
    bb99__0_9240 -> bb122__0_9240 [label="unwind"];
    bb100__0_9240 -> bb101__0_9240 [label="return"];
    bb100__0_9240 -> bb125__0_9240 [label="unwind"];
    bb101__0_9240 -> bb102__0_9240 [label="return"];
    bb101__0_9240 -> bb126__0_9240 [label="unwind"];
    bb102__0_9240 -> bb116__0_9240 [label="return"];
    bb102__0_9240 -> bb127__0_9240 [label="unwind"];
    bb103__0_9240 -> bb106__0_9240 [label=""];
    bb104__0_9240 -> bb105__0_9240 [label=""];
    bb105__0_9240 -> bb106__0_9240 [label=""];
    bb106__0_9240 -> bb107__0_9240 [label="return"];
    bb106__0_9240 -> bb121__0_9240 [label="unwind"];
    bb107__0_9240 -> bb108__0_9240 [label="return"];
    bb107__0_9240 -> bb122__0_9240 [label="unwind"];
    bb108__0_9240 -> bb109__0_9240 [label="return"];
    bb108__0_9240 -> bb125__0_9240 [label="unwind"];
    bb109__0_9240 -> bb112__0_9240 [label=""];
    bb110__0_9240 -> bb111__0_9240 [label="return"];
    bb110__0_9240 -> bb125__0_9240 [label="unwind"];
    bb111__0_9240 -> bb112__0_9240 [label=""];
    bb112__0_9240 -> bb113__0_9240 [label="return"];
    bb112__0_9240 -> bb126__0_9240 [label="unwind"];
    bb113__0_9240 -> bb114__0_9240 [label=""];
    bb114__0_9240 -> bb115__0_9240 [label=""];
    bb115__0_9240 -> bb116__0_9240 [label="return"];
    bb115__0_9240 -> bb127__0_9240 [label="unwind"];
    bb117__0_9240 -> bb120__0_9240 [label="return"];
    bb118__0_9240 -> bb131__0_9240 [label="return"];
    bb119__0_9240 -> bb120__0_9240 [label="return"];
    bb120__0_9240 -> bb121__0_9240 [label="return"];
    bb121__0_9240 -> bb122__0_9240 [label="return"];
    bb122__0_9240 -> bb125__0_9240 [label="return"];
    bb123__0_9240 -> bb124__0_9240 [label="return"];
    bb124__0_9240 -> bb125__0_9240 [label="return"];
    bb125__0_9240 -> bb126__0_9240 [label="return"];
    bb126__0_9240 -> bb127__0_9240 [label="return"];
    bb128__0_9240 -> bb67__0_9240 [label="0"];
    bb128__0_9240 -> bb52__0_9240 [label="otherwise"];
    bb129__0_9240 -> bb120__0_9240 [label=""];
    bb130__0_9240 -> bb120__0_9240 [label=""];
    bb131__0_9240 -> bb120__0_9240 [label=""];
    bb132__0_9240 -> bb123__0_9240 [label=""];
    bb133__0_9240 -> bb126__0_9240 [label=""];
    bb134__0_9240 -> bb126__0_9240 [label=""];
    bb135__0_9240 -> bb126__0_9240 [label=""];
}
