digraph Mir_0_3841 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn AMM::get_pyth_twap(_1: &amp;ReErased state::perp_market::AMM, _2: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _3: &amp;ReErased state::oracle::OracleSource) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _8: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _9: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _10: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _12: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _13: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _16: error::ErrorCode;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _22: i64;<br align="left"/>let _23: i64;<br align="left"/>let _24: i32;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _28: pyth_solana_receiver_sdk::price_update::PriceUpdateV2;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, pyth_solana_receiver_sdk::price_update::PriceUpdateV2&gt;;<br align="left"/>let mut _30: std::result::Result&lt;pyth_solana_receiver_sdk::price_update::PriceUpdateV2, error::ErrorCode&gt;;<br align="left"/>let mut _31: std::result::Result&lt;pyth_solana_receiver_sdk::price_update::PriceUpdateV2, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _33: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _34: std::result::Result&lt;pyth_solana_receiver_sdk::price_update::PriceUpdateV2, error::ErrorCode&gt;;<br align="left"/>let mut _35: error::ErrorCode;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: pyth_solana_receiver_sdk::price_update::PriceUpdateV2;<br align="left"/>let mut _41: i64;<br align="left"/>let mut _42: i64;<br align="left"/>let mut _43: i32;<br align="left"/>let mut _44: bool;<br align="left"/>let mut _45: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _46: &amp;ReErased pyth_client::Price;<br align="left"/>let mut _47: &amp;ReErased [u8];<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: i32;<br align="left"/>let _51: state::pyth_lazer_oracle::PythLazerOracle;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::pyth_lazer_oracle::PythLazerOracle&gt;;<br align="left"/>let mut _53: std::result::Result&lt;state::pyth_lazer_oracle::PythLazerOracle, error::ErrorCode&gt;;<br align="left"/>let mut _54: std::result::Result&lt;state::pyth_lazer_oracle::PythLazerOracle, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _56: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _57: std::result::Result&lt;state::pyth_lazer_oracle::PythLazerOracle, error::ErrorCode&gt;;<br align="left"/>let mut _58: error::ErrorCode;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: state::pyth_lazer_oracle::PythLazerOracle;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: i32;<br align="left"/>let _67: ();<br align="left"/>let mut _68: bool;<br align="left"/>let mut _69: i64;<br align="left"/>let mut _70: i64;<br align="left"/>let mut _71: i64;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: bool;<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: !;<br align="left"/>let _77: u128;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _79: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _80: u128;<br align="left"/>let mut _81: u32;<br align="left"/>let mut _82: i32;<br align="left"/>let mut _83: u128;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: u128;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: u128;<br align="left"/>let _91: ();<br align="left"/>let mut _92: bool;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: u128;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _96: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _97: u128;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: u128;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _106: u128;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u128;<br align="left"/>let mut _112: i128;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _114: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _115: i128;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _117: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _118: i128;<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _120: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: i128;<br align="left"/>let mut _127: i128;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _129: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _130: u128;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _135: i128;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: i128;<br align="left"/>let mut _141: i128;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _143: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _144: u128;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: i128;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: i128;<br align="left"/>let mut _155: &amp;ReErased mut [u8];<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug price_oracle =&gt; _2;<br align="left"/>debug oracle_source =&gt; _3;<br align="left"/>debug multiple =&gt; _4;<br align="left"/>debug pyth_price_data =&gt; _6;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug oracle_price =&gt; _22;<br align="left"/>debug oracle_twap =&gt; _23;<br align="left"/>debug oracle_exponent =&gt; _24;<br align="left"/>debug price_message =&gt; _28;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug price_data =&gt; _46;<br align="left"/>debug price_data =&gt; _51;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug oracle_precision =&gt; _77;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug oracle_scale_mult =&gt; _89;<br align="left"/>debug oracle_scale_div =&gt; _90;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>>;
    bb0__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_3)<br/></td></tr><tr><td align="left">_4 = state::oracle::OracleSource::get_pyth_multiple(move _5)</td></tr></table>>];
    bb1__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_2)<br/></td></tr><tr><td align="left">_13 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _14)</td></tr></table>>];
    bb2__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = error::ErrorCode::UnableToLoadOracle<br/>_15 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt;::Err(move _16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_12 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::or::&lt;error::ErrorCode&gt;(move _13, move _15)</td></tr></table>>];
    bb3__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb4__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_17 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_11 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_10 = move _21<br/>StorageDead(_21)<br/>_9 = &amp;_10<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _8)</td></tr></table>>];
    bb6__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb8__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_8)<br/>_156 = discriminant(_11)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_155 = deref_copy (*_7)<br/>_6 = &amp;(*_155)<br/>StorageDead(_8)<br/>_158 = discriminant(_11)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/></td></tr><tr><td align="left">_26 = state::oracle::OracleSource::is_pyth_pull_oracle(move _27)</td></tr></table>>];
    bb10__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut _6<br/>_32 = &amp;mut (*_33)<br/></td></tr><tr><td align="left">_31 = &lt;PriceUpdateV2 as anchor_lang::AccountDeserialize&gt;::try_deserialize(move _32)</td></tr></table>>];
    bb12__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = error::ErrorCode::UnableToLoadOracle<br/>_34 = std::result::Result::&lt;PriceUpdateV2, error::ErrorCode&gt;::Err(move _35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_30 = std::result::Result::&lt;PriceUpdateV2, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _31, move _34)</td></tr></table>>];
    bb13__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;PriceUpdateV2, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb14__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_36 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb15__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_29 as Continue).0: pyth_solana_receiver_sdk::price_update::PriceUpdateV2)<br/>_28 = move _40<br/>StorageDead(_40)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageLive(_41)<br/>_41 = ((_28.2: pyth_solana_receiver_sdk::price_update::PriceFeedMessage).1: i64)<br/>_22 = move _41<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>_42 = ((_28.2: pyth_solana_receiver_sdk::price_update::PriceFeedMessage).6: i64)<br/>_23 = move _42<br/>StorageDead(_42)<br/>StorageLive(_43)<br/>_43 = ((_28.2: pyth_solana_receiver_sdk::price_update::PriceFeedMessage).3: i32)<br/>_24 = move _43<br/>StorageDead(_43)<br/>_25 = const ()<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb17__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_3)<br/></td></tr><tr><td align="left">_44 = state::oracle::OracleSource::is_pyth_push_oracle(move _45)</td></tr></table>>];
    bb19__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb20__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;(*_6)<br/></td></tr><tr><td align="left">_46 = pyth_client::cast::&lt;pyth_client::Price&gt;(move _47)</td></tr></table>>];
    bb21__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>_48 = (((*_46).20: pyth_client::PriceInfo).0: i64)<br/>_22 = move _48<br/>StorageDead(_48)<br/>StorageLive(_49)<br/>_49 = (((*_46).10: pyth_client::Ema).0: i64)<br/>_23 = move _49<br/>StorageDead(_49)<br/>StorageLive(_50)<br/>_50 = ((*_46).5: i32)<br/>_24 = move _50<br/>StorageDead(_50)<br/>_25 = const ()<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;mut _6<br/>_55 = &amp;mut (*_56)<br/></td></tr><tr><td align="left">_54 = &lt;PythLazerOracle as anchor_lang::AccountDeserialize&gt;::try_deserialize(move _55)</td></tr></table>>];
    bb23__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = error::ErrorCode::UnableToLoadOracle<br/>_57 = std::result::Result::&lt;PythLazerOracle, error::ErrorCode&gt;::Err(move _58)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_53 = std::result::Result::&lt;PythLazerOracle, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _54, move _57)</td></tr></table>>];
    bb24__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;PythLazerOracle, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb25__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_59 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb26__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_52 as Continue).0: state::pyth_lazer_oracle::PythLazerOracle)<br/>_51 = _63<br/>StorageDead(_63)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>StorageLive(_64)<br/>_64 = (_51.0: i64)<br/>_22 = move _64<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = (_51.0: i64)<br/>_23 = move _65<br/>StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = (_51.3: i32)<br/>_24 = move _66<br/>StorageDead(_66)<br/>_25 = const ()<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb28__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _23<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _22<br/>_72 = Eq(const 10_i64, const 0_i64)<br/></td></tr><tr><td align="left">assert(!move _72, &quot;attempt to divide `{}` by zero&quot;, _71)</td></tr></table>>];
    bb31__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_73 = Eq(const 10_i64, const -1_i64)<br/>_74 = Eq(_71, const i64::MIN)<br/>_75 = BitAnd(move _73, move _74)<br/></td></tr><tr><td align="left">assert(!move _75, &quot;attempt to compute `{} / {}`, which would overflow&quot;, _71, const 10_i64)</td></tr></table>>];
    bb32__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_70 = Div(move _71, const 10_i64)<br/>StorageDead(_71)<br/>_68 = Gt(move _69, move _70)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb33__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>_67 = const ()<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _24<br/></td></tr><tr><td align="left">_81 = core::num::&lt;impl i32&gt;::unsigned_abs(move _82)</td></tr></table>>];
    bb34__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_76)<br/></td></tr><tr><td align="left">_76 = panic(const &quot;assertion failed: oracle_twap &gt; oracle_price / 10&quot;)</td></tr></table>>];
    bb35__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _81)</td></tr></table>>];
    bb36__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_83)<br/>_83 = _4<br/></td></tr><tr><td align="left">_79 = &lt;u128 as SafeMath&gt;::safe_div(move _80, move _83)</td></tr></table>>];
    bb37__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb38__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_84 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb39__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_78 as Continue).0: u128)<br/>_77 = _88<br/>StorageDead(_88)<br/>StorageDead(_78)<br/>StorageLive(_89)<br/>_89 = const 1_u128<br/>StorageLive(_90)<br/>_90 = const 1_u128<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = _77<br/>_92 = Gt(move _93, const _)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb40__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb41__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _77<br/></td></tr><tr><td align="left">_96 = &lt;u128 as SafeMath&gt;::safe_div(move _97, const _)</td></tr></table>>];
    bb43__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _77<br/></td></tr><tr><td align="left">_105 = &lt;u128 as SafeMath&gt;::safe_div(const _, move _106)</td></tr></table>>];
    bb44__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb45__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_98 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb46__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_95 as Continue).0: u128)<br/>_94 = _102<br/>StorageDead(_102)<br/>_90 = move _94<br/>StorageDead(_94)<br/>StorageDead(_95)<br/>_91 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb48__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb50__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_107 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb51__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_104 as Continue).0: u128)<br/>_103 = _111<br/>StorageDead(_111)<br/>_89 = move _103<br/>StorageDead(_103)<br/>StorageDead(_104)<br/>_91 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb53__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_103)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = _23<br/></td></tr><tr><td align="left">_120 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _121)</td></tr></table>>];
    bb55__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb56__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_122 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb57__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_119 as Continue).0: i128)<br/>_118 = _126<br/>StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = _89<br/></td></tr><tr><td align="left">_129 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _130)</td></tr></table>>];
    bb58__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb59__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_77)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb60__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb61__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_131 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb62__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_128 as Continue).0: i128)<br/>_127 = _135<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_117 = &lt;i128 as SafeMath&gt;::safe_mul(move _118, move _127)</td></tr></table>>];
    bb63__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_134)<br/>_134 = _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb64__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_127)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb66__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_136 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb67__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_116 as Continue).0: i128)<br/>_115 = _140<br/>StorageDead(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = _90<br/></td></tr><tr><td align="left">_143 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _144)</td></tr></table>>];
    bb68__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb69__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb71__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_145 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb72__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_142 as Continue).0: i128)<br/>_141 = _149<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">_114 = &lt;i128 as SafeMath&gt;::safe_div(move _115, move _141)</td></tr></table>>];
    bb73__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb74__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_141)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb76__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_150 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb77__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_113 as Continue).0: i128)<br/>_112 = _154<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _112)</td></tr></table>>];
    bb78__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb79__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_77)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb81__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_142)<br/>StorageDead(_128)<br/>StorageDead(_119)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_77)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb83__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_77)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb85__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb93__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left">return</td></tr></table>>];
    bb95__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left" balign="left">_160 = discriminant(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb97__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb98__0_3841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left" balign="left">_161 = discriminant(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3841 -> bb1__0_3841 [label="return"];
    bb1__0_3841 -> bb2__0_3841 [label="return"];
    bb2__0_3841 -> bb3__0_3841 [label="return"];
    bb2__0_3841 -> bb97__0_3841 [label="unwind"];
    bb3__0_3841 -> bb4__0_3841 [label="return"];
    bb3__0_3841 -> bb97__0_3841 [label="unwind"];
    bb4__0_3841 -> bb5__0_3841 [label="0"];
    bb4__0_3841 -> bb7__0_3841 [label="1"];
    bb4__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb5__0_3841 -> bb9__0_3841 [label="return"];
    bb5__0_3841 -> bb95__0_3841 [label="unwind"];
    bb7__0_3841 -> bb8__0_3841 [label="return"];
    bb7__0_3841 -> bb98__0_3841 [label="unwind"];
    bb8__0_3841 -> bb93__0_3841 [label=""];
    bb9__0_3841 -> bb10__0_3841 [label="return"];
    bb9__0_3841 -> bb96__0_3841 [label="unwind"];
    bb10__0_3841 -> bb18__0_3841 [label="0"];
    bb10__0_3841 -> bb11__0_3841 [label="otherwise"];
    bb11__0_3841 -> bb12__0_3841 [label="return"];
    bb11__0_3841 -> bb96__0_3841 [label="unwind"];
    bb12__0_3841 -> bb13__0_3841 [label="return"];
    bb12__0_3841 -> bb96__0_3841 [label="unwind"];
    bb13__0_3841 -> bb14__0_3841 [label="return"];
    bb13__0_3841 -> bb96__0_3841 [label="unwind"];
    bb14__0_3841 -> bb15__0_3841 [label="0"];
    bb14__0_3841 -> bb16__0_3841 [label="1"];
    bb14__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb15__0_3841 -> bb30__0_3841 [label=""];
    bb16__0_3841 -> bb17__0_3841 [label="return"];
    bb16__0_3841 -> bb96__0_3841 [label="unwind"];
    bb17__0_3841 -> bb91__0_3841 [label=""];
    bb18__0_3841 -> bb19__0_3841 [label="return"];
    bb18__0_3841 -> bb96__0_3841 [label="unwind"];
    bb19__0_3841 -> bb22__0_3841 [label="0"];
    bb19__0_3841 -> bb20__0_3841 [label="otherwise"];
    bb20__0_3841 -> bb21__0_3841 [label="return"];
    bb20__0_3841 -> bb96__0_3841 [label="unwind"];
    bb21__0_3841 -> bb29__0_3841 [label=""];
    bb22__0_3841 -> bb23__0_3841 [label="return"];
    bb22__0_3841 -> bb96__0_3841 [label="unwind"];
    bb23__0_3841 -> bb24__0_3841 [label="return"];
    bb23__0_3841 -> bb96__0_3841 [label="unwind"];
    bb24__0_3841 -> bb25__0_3841 [label="return"];
    bb24__0_3841 -> bb96__0_3841 [label="unwind"];
    bb25__0_3841 -> bb26__0_3841 [label="0"];
    bb25__0_3841 -> bb27__0_3841 [label="1"];
    bb25__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb26__0_3841 -> bb29__0_3841 [label=""];
    bb27__0_3841 -> bb28__0_3841 [label="return"];
    bb27__0_3841 -> bb96__0_3841 [label="unwind"];
    bb28__0_3841 -> bb91__0_3841 [label=""];
    bb29__0_3841 -> bb30__0_3841 [label=""];
    bb30__0_3841 -> bb31__0_3841 [label="success"];
    bb30__0_3841 -> bb96__0_3841 [label="unwind"];
    bb31__0_3841 -> bb32__0_3841 [label="success"];
    bb31__0_3841 -> bb96__0_3841 [label="unwind"];
    bb32__0_3841 -> bb34__0_3841 [label="0"];
    bb32__0_3841 -> bb33__0_3841 [label="otherwise"];
    bb33__0_3841 -> bb35__0_3841 [label="return"];
    bb33__0_3841 -> bb96__0_3841 [label="unwind"];
    bb34__0_3841 -> bb96__0_3841 [label="unwind"];
    bb35__0_3841 -> bb36__0_3841 [label="return"];
    bb35__0_3841 -> bb96__0_3841 [label="unwind"];
    bb36__0_3841 -> bb37__0_3841 [label="return"];
    bb36__0_3841 -> bb96__0_3841 [label="unwind"];
    bb37__0_3841 -> bb38__0_3841 [label="return"];
    bb37__0_3841 -> bb96__0_3841 [label="unwind"];
    bb38__0_3841 -> bb39__0_3841 [label="0"];
    bb38__0_3841 -> bb40__0_3841 [label="1"];
    bb38__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb39__0_3841 -> bb43__0_3841 [label="0"];
    bb39__0_3841 -> bb42__0_3841 [label="otherwise"];
    bb40__0_3841 -> bb41__0_3841 [label="return"];
    bb40__0_3841 -> bb96__0_3841 [label="unwind"];
    bb41__0_3841 -> bb90__0_3841 [label=""];
    bb42__0_3841 -> bb44__0_3841 [label="return"];
    bb42__0_3841 -> bb96__0_3841 [label="unwind"];
    bb43__0_3841 -> bb49__0_3841 [label="return"];
    bb43__0_3841 -> bb96__0_3841 [label="unwind"];
    bb44__0_3841 -> bb45__0_3841 [label="return"];
    bb44__0_3841 -> bb96__0_3841 [label="unwind"];
    bb45__0_3841 -> bb46__0_3841 [label="0"];
    bb45__0_3841 -> bb47__0_3841 [label="1"];
    bb45__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb46__0_3841 -> bb54__0_3841 [label=""];
    bb47__0_3841 -> bb48__0_3841 [label="return"];
    bb47__0_3841 -> bb96__0_3841 [label="unwind"];
    bb48__0_3841 -> bb89__0_3841 [label=""];
    bb49__0_3841 -> bb50__0_3841 [label="return"];
    bb49__0_3841 -> bb96__0_3841 [label="unwind"];
    bb50__0_3841 -> bb51__0_3841 [label="0"];
    bb50__0_3841 -> bb52__0_3841 [label="1"];
    bb50__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb51__0_3841 -> bb54__0_3841 [label=""];
    bb52__0_3841 -> bb53__0_3841 [label="return"];
    bb52__0_3841 -> bb96__0_3841 [label="unwind"];
    bb53__0_3841 -> bb89__0_3841 [label=""];
    bb54__0_3841 -> bb55__0_3841 [label="return"];
    bb54__0_3841 -> bb96__0_3841 [label="unwind"];
    bb55__0_3841 -> bb56__0_3841 [label="return"];
    bb55__0_3841 -> bb96__0_3841 [label="unwind"];
    bb56__0_3841 -> bb57__0_3841 [label="0"];
    bb56__0_3841 -> bb58__0_3841 [label="1"];
    bb56__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb57__0_3841 -> bb60__0_3841 [label="return"];
    bb57__0_3841 -> bb96__0_3841 [label="unwind"];
    bb58__0_3841 -> bb59__0_3841 [label="return"];
    bb58__0_3841 -> bb96__0_3841 [label="unwind"];
    bb59__0_3841 -> bb87__0_3841 [label="return"];
    bb59__0_3841 -> bb97__0_3841 [label="unwind"];
    bb60__0_3841 -> bb61__0_3841 [label="return"];
    bb60__0_3841 -> bb96__0_3841 [label="unwind"];
    bb61__0_3841 -> bb62__0_3841 [label="0"];
    bb61__0_3841 -> bb63__0_3841 [label="1"];
    bb61__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb62__0_3841 -> bb65__0_3841 [label="return"];
    bb62__0_3841 -> bb96__0_3841 [label="unwind"];
    bb63__0_3841 -> bb64__0_3841 [label="return"];
    bb63__0_3841 -> bb96__0_3841 [label="unwind"];
    bb64__0_3841 -> bb84__0_3841 [label=""];
    bb65__0_3841 -> bb66__0_3841 [label="return"];
    bb65__0_3841 -> bb96__0_3841 [label="unwind"];
    bb66__0_3841 -> bb67__0_3841 [label="0"];
    bb66__0_3841 -> bb68__0_3841 [label="1"];
    bb66__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb67__0_3841 -> bb70__0_3841 [label="return"];
    bb67__0_3841 -> bb96__0_3841 [label="unwind"];
    bb68__0_3841 -> bb69__0_3841 [label="return"];
    bb68__0_3841 -> bb96__0_3841 [label="unwind"];
    bb69__0_3841 -> bb84__0_3841 [label=""];
    bb70__0_3841 -> bb71__0_3841 [label="return"];
    bb70__0_3841 -> bb96__0_3841 [label="unwind"];
    bb71__0_3841 -> bb72__0_3841 [label="0"];
    bb71__0_3841 -> bb73__0_3841 [label="1"];
    bb71__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb72__0_3841 -> bb75__0_3841 [label="return"];
    bb72__0_3841 -> bb96__0_3841 [label="unwind"];
    bb73__0_3841 -> bb74__0_3841 [label="return"];
    bb73__0_3841 -> bb96__0_3841 [label="unwind"];
    bb74__0_3841 -> bb82__0_3841 [label=""];
    bb75__0_3841 -> bb76__0_3841 [label="return"];
    bb75__0_3841 -> bb96__0_3841 [label="unwind"];
    bb76__0_3841 -> bb77__0_3841 [label="0"];
    bb76__0_3841 -> bb78__0_3841 [label="1"];
    bb76__0_3841 -> bb6__0_3841 [label="otherwise"];
    bb77__0_3841 -> bb80__0_3841 [label="return"];
    bb77__0_3841 -> bb96__0_3841 [label="unwind"];
    bb78__0_3841 -> bb79__0_3841 [label="return"];
    bb78__0_3841 -> bb96__0_3841 [label="unwind"];
    bb79__0_3841 -> bb82__0_3841 [label=""];
    bb80__0_3841 -> bb81__0_3841 [label="return"];
    bb80__0_3841 -> bb97__0_3841 [label="unwind"];
    bb81__0_3841 -> bb94__0_3841 [label=""];
    bb82__0_3841 -> bb83__0_3841 [label="return"];
    bb82__0_3841 -> bb97__0_3841 [label="unwind"];
    bb83__0_3841 -> bb86__0_3841 [label=""];
    bb84__0_3841 -> bb85__0_3841 [label="return"];
    bb84__0_3841 -> bb97__0_3841 [label="unwind"];
    bb85__0_3841 -> bb86__0_3841 [label=""];
    bb86__0_3841 -> bb88__0_3841 [label=""];
    bb87__0_3841 -> bb88__0_3841 [label=""];
    bb88__0_3841 -> bb94__0_3841 [label=""];
    bb89__0_3841 -> bb90__0_3841 [label=""];
    bb90__0_3841 -> bb92__0_3841 [label=""];
    bb91__0_3841 -> bb92__0_3841 [label=""];
    bb92__0_3841 -> bb93__0_3841 [label="return"];
    bb92__0_3841 -> bb97__0_3841 [label="unwind"];
    bb93__0_3841 -> bb94__0_3841 [label=""];
    bb95__0_3841 -> bb96__0_3841 [label=""];
    bb96__0_3841 -> bb97__0_3841 [label="return"];
    bb98__0_3841 -> bb97__0_3841 [label=""];
}
