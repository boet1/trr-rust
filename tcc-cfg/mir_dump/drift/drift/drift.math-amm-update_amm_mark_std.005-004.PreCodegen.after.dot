digraph Mir_0_1802 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_amm_mark_std(_1: &amp;ReErased mut state::perp_market::AMM, _2: i64, _3: u64, _4: u64, _5: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _6: i64;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: i64;<br align="left"/>let _17: u64;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _24: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _33: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: i64;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i64;<br align="left"/>let mut _45: u64;<br align="left"/>let mut _46: i64;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _48: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i64;<br align="left"/>let mut _58: i64;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _60: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: i64;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: i64;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: u64;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug now =&gt; _2;<br align="left"/>debug price =&gt; _3;<br align="left"/>debug ewma =&gt; _4;<br align="left"/>debug ewma_5min =&gt; _5;<br align="left"/>debug since_last =&gt; _6;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug price_change_abs =&gt; _17;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>>;
    bb0__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/>StorageLive(_11)<br/>_11 = ((*_1).62: i64)<br/></td></tr><tr><td align="left">_9 = &lt;i64 as SafeMath&gt;::safe_sub(move _10, move _11)</td></tr></table>>];
    bb1__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_12 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Continue).0: i64)<br/>_7 = _16<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_6 = std::cmp::max::&lt;i64&gt;(const 1_i64, move _7)</td></tr></table>>];
    bb4__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_8)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _3<br/></td></tr><tr><td align="left">_24 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _25)</td></tr></table>>];
    bb8__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb9__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_26 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_23 as Continue).0: i64)<br/>_22 = _30<br/>StorageDead(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _4<br/></td></tr><tr><td align="left">_33 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _34)</td></tr></table>>];
    bb11__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb12__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb14__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_35 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb15__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_32 as Continue).0: i64)<br/>_31 = _39<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_21 = &lt;i64 as SafeMath&gt;::safe_sub(move _22, move _31)</td></tr></table>>];
    bb16__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb17__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb19__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_40 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb20__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_20 as Continue).0: i64)<br/>_19 = _44<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_18 = core::num::&lt;impl i64&gt;::unsigned_abs(move _19)</td></tr></table>>];
    bb21__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb22__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _3<br/></td></tr><tr><td align="left">_51 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _52)</td></tr></table>>];
    bb24__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb25__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_53 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb26__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_50 as Continue).0: i64)<br/>_49 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = _5<br/></td></tr><tr><td align="left">_60 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _61)</td></tr></table>>];
    bb27__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb28__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb30__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_62 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb31__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_59 as Continue).0: i64)<br/>_58 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_48 = &lt;i64 as SafeMath&gt;::safe_sub(move _49, move _58)</td></tr></table>>];
    bb32__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb33__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_58)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb35__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_67 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb36__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_47 as Continue).0: i64)<br/>_46 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_45 = core::num::&lt;impl i64&gt;::unsigned_abs(move _46)</td></tr></table>>];
    bb37__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb38__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_17 = &lt;u64 as Ord&gt;::max(move _18, move _45)</td></tr></table>>];
    bb40__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_18)<br/>StorageDead(_59)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_32)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = ((*_1).60: u64)<br/>StorageLive(_76)<br/>_76 = _17<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _6<br/></td></tr><tr><td align="left">_77 = std::cmp::max::&lt;i64&gt;(const _, move _78)</td></tr></table>>];
    bb41__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_74 = calculate_rolling_sum(move _75, move _76, move _77, const _)</td></tr></table>>];
    bb42__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb43__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_79 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb44__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_73 as Continue).0: u64)<br/>_72 = _83<br/>StorageDead(_83)<br/>((*_1).60: u64) = move _72<br/>StorageDead(_72)<br/>StorageDead(_73)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const true)<br/>StorageDead(_17)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb46__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_72)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_18)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1802 -> bb1__0_1802 [label="return"];
    bb1__0_1802 -> bb2__0_1802 [label="return"];
    bb2__0_1802 -> bb3__0_1802 [label="0"];
    bb2__0_1802 -> bb5__0_1802 [label="1"];
    bb2__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb3__0_1802 -> bb7__0_1802 [label="return"];
    bb5__0_1802 -> bb6__0_1802 [label="return"];
    bb6__0_1802 -> bb53__0_1802 [label=""];
    bb7__0_1802 -> bb8__0_1802 [label="return"];
    bb8__0_1802 -> bb9__0_1802 [label="return"];
    bb9__0_1802 -> bb10__0_1802 [label="0"];
    bb9__0_1802 -> bb11__0_1802 [label="1"];
    bb9__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb10__0_1802 -> bb13__0_1802 [label="return"];
    bb11__0_1802 -> bb12__0_1802 [label="return"];
    bb12__0_1802 -> bb51__0_1802 [label=""];
    bb13__0_1802 -> bb14__0_1802 [label="return"];
    bb14__0_1802 -> bb15__0_1802 [label="0"];
    bb14__0_1802 -> bb16__0_1802 [label="1"];
    bb14__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb15__0_1802 -> bb18__0_1802 [label="return"];
    bb16__0_1802 -> bb17__0_1802 [label="return"];
    bb17__0_1802 -> bb49__0_1802 [label=""];
    bb18__0_1802 -> bb19__0_1802 [label="return"];
    bb19__0_1802 -> bb20__0_1802 [label="0"];
    bb19__0_1802 -> bb21__0_1802 [label="1"];
    bb19__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb20__0_1802 -> bb23__0_1802 [label="return"];
    bb21__0_1802 -> bb22__0_1802 [label="return"];
    bb22__0_1802 -> bb49__0_1802 [label=""];
    bb23__0_1802 -> bb24__0_1802 [label="return"];
    bb24__0_1802 -> bb25__0_1802 [label="return"];
    bb25__0_1802 -> bb26__0_1802 [label="0"];
    bb25__0_1802 -> bb27__0_1802 [label="1"];
    bb25__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb26__0_1802 -> bb29__0_1802 [label="return"];
    bb27__0_1802 -> bb28__0_1802 [label="return"];
    bb28__0_1802 -> bb48__0_1802 [label=""];
    bb29__0_1802 -> bb30__0_1802 [label="return"];
    bb30__0_1802 -> bb31__0_1802 [label="0"];
    bb30__0_1802 -> bb32__0_1802 [label="1"];
    bb30__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb31__0_1802 -> bb34__0_1802 [label="return"];
    bb32__0_1802 -> bb33__0_1802 [label="return"];
    bb33__0_1802 -> bb47__0_1802 [label=""];
    bb34__0_1802 -> bb35__0_1802 [label="return"];
    bb35__0_1802 -> bb36__0_1802 [label="0"];
    bb35__0_1802 -> bb37__0_1802 [label="1"];
    bb35__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb36__0_1802 -> bb39__0_1802 [label="return"];
    bb37__0_1802 -> bb38__0_1802 [label="return"];
    bb38__0_1802 -> bb47__0_1802 [label=""];
    bb39__0_1802 -> bb40__0_1802 [label="return"];
    bb40__0_1802 -> bb41__0_1802 [label="return"];
    bb41__0_1802 -> bb42__0_1802 [label="return"];
    bb42__0_1802 -> bb43__0_1802 [label="return"];
    bb43__0_1802 -> bb44__0_1802 [label="0"];
    bb43__0_1802 -> bb45__0_1802 [label="1"];
    bb43__0_1802 -> bb4__0_1802 [label="otherwise"];
    bb44__0_1802 -> bb54__0_1802 [label=""];
    bb45__0_1802 -> bb46__0_1802 [label="return"];
    bb46__0_1802 -> bb52__0_1802 [label=""];
    bb47__0_1802 -> bb48__0_1802 [label=""];
    bb48__0_1802 -> bb50__0_1802 [label=""];
    bb49__0_1802 -> bb50__0_1802 [label=""];
    bb50__0_1802 -> bb51__0_1802 [label=""];
    bb51__0_1802 -> bb52__0_1802 [label=""];
    bb52__0_1802 -> bb53__0_1802 [label=""];
    bb53__0_1802 -> bb54__0_1802 [label=""];
}
