digraph Mir_0_91 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_revenue_pool_transfer(_1: &amp;ReErased state::perp_market::PerpMarket, _2: &amp;ReErased state::spot_market::SpotMarket, _3: u128, _4: i128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _5: i128;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: i128;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: i128;<br align="left"/>let _17: i128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _25: u128;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _27: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _28: u128;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: u128;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i128;<br align="left"/>let _44: i128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: u128;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _54: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: i128;<br align="left"/>let _72: i64;<br align="left"/>let mut _73: i64;<br align="left"/>let mut _74: i64;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _76: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: i64;<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _80: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: i64;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: i64;<br align="left"/>let mut _92: i64;<br align="left"/>let _93: i128;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _95: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _96: u128;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _98: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _99: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: u128;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: i128;<br align="left"/>let _110: i128;<br align="left"/>let mut _111: i128;<br align="left"/>let mut _112: i128;<br align="left"/>let mut _113: i128;<br align="left"/>let mut _114: i128;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _116: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _117: i128;<br align="left"/>let mut _118: i128;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _123: i128;<br align="left"/>let mut _124: i128;<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _126: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _127: u128;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: i128;<br align="left"/>let mut _133: i128;<br align="left"/>let mut _134: i128;<br align="left"/>let mut _135: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _136: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _137: i64;<br align="left"/>let mut _138: isize;<br align="left"/>let _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _140: !;<br align="left"/>let mut _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _142: i128;<br align="left"/>let _143: ();<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _145: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _146: bool;<br align="left"/>let mut _147: i128;<br align="left"/>let mut _148: ();<br align="left"/>let _149: error::ErrorCode;<br align="left"/>let _150: ();<br align="left"/>let mut _151: &amp;ReErased str;<br align="left"/>let _152: &amp;ReErased str;<br align="left"/>let mut _153: &amp;ReErased std::string::String;<br align="left"/>let _154: &amp;ReErased std::string::String;<br align="left"/>let _155: std::string::String;<br align="left"/>let _156: std::string::String;<br align="left"/>let mut _157: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _160: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _161: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _165: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _166: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased error::ErrorCode;<br align="left"/>let _168: &amp;ReErased error::ErrorCode;<br align="left"/>let _169: ();<br align="left"/>let mut _170: &amp;ReErased str;<br align="left"/>let _171: &amp;ReErased str;<br align="left"/>let mut _172: &amp;ReErased std::string::String;<br align="left"/>let _173: &amp;ReErased std::string::String;<br align="left"/>let _174: std::string::String;<br align="left"/>let _175: std::string::String;<br align="left"/>let mut _176: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _178: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _179: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _180: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _181: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _182: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _183: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _184: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _185: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _186: &amp;ReErased i128;<br align="left"/>let _187: &amp;ReErased i128;<br align="left"/>let mut _188: error::ErrorCode;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _193: ();<br align="left"/>let mut _194: i128;<br align="left"/>let mut _195: bool;<br align="left"/>let mut _196: i128;<br align="left"/>let _197: u128;<br align="left"/>let mut _198: u128;<br align="left"/>let mut _199: u128;<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _201: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _202: i64;<br align="left"/>let mut _203: i64;<br align="left"/>let mut _204: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _205: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _206: u64;<br align="left"/>let mut _207: isize;<br align="left"/>let _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _209: !;<br align="left"/>let mut _210: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _211: i64;<br align="left"/>let mut _212: i64;<br align="left"/>let mut _213: isize;<br align="left"/>let _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _217: u128;<br align="left"/>let mut _218: u128;<br align="left"/>let mut _219: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _220: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _221: u128;<br align="left"/>let mut _222: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _223: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _224: u128;<br align="left"/>let mut _225: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _226: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _227: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _228: state::spot_market::SpotBalanceType;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: u128;<br align="left"/>let mut _234: isize;<br align="left"/>let _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _236: !;<br align="left"/>let mut _237: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _238: u128;<br align="left"/>let mut _239: u128;<br align="left"/>let mut _240: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _241: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _242: u64;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _247: u128;<br align="left"/>let mut _248: bool;<br align="left"/>let mut _249: u128;<br align="left"/>let _250: i128;<br align="left"/>let mut _251: i128;<br align="left"/>let mut _252: i128;<br align="left"/>let mut _253: i128;<br align="left"/>let mut _254: i128;<br align="left"/>let mut _255: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _256: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _257: u128;<br align="left"/>let mut _258: isize;<br align="left"/>let _259: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _260: !;<br align="left"/>let mut _261: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _262: i128;<br align="left"/>let mut _263: bool;<br align="left"/>let mut _264: i128;<br align="left"/>let mut _265: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _266: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _267: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug amm_fee_pool_token_amount_after =&gt; _3;<br align="left"/>debug terminal_state_surplus =&gt; _4;<br align="left"/>debug amm_budget_surplus =&gt; _5;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug fee_pool_threshold =&gt; _17;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug total_liq_fees_for_revenue_pool =&gt; _44;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug max_revenue_to_settle =&gt; _72;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug total_fee_for_if =&gt; _93;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug revenue_pool_transfer =&gt; _110;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>debug residual =&gt; _139;<br align="left"/>debug val =&gt; _142;<br align="left"/>debug error_code =&gt; _149;<br align="left"/>debug res =&gt; _156;<br align="left"/>debug res =&gt; _175;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug max_revenue_withdraw_allowed =&gt; _197;<br align="left"/>debug residual =&gt; _208;<br align="left"/>debug val =&gt; _211;<br align="left"/>debug residual =&gt; _214;<br align="left"/>debug val =&gt; _217;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug residual =&gt; _235;<br align="left"/>debug val =&gt; _238;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug revenue_pool_transfer =&gt; _250;<br align="left"/>debug residual =&gt; _259;<br align="left"/>debug val =&gt; _262;<br align="left"/>>;
    bb0__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _4<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/></td></tr><tr><td align="left">_9 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb1__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_10 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_8 as Continue).0: i128)<br/>_7 = _14<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_5 = core::num::&lt;impl i128&gt;::saturating_sub(move _6, move _7)</td></tr></table>>];
    bb4__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_8)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _5<br/>_15 = Gt(move _16, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb8__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _3<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = (((*_1).1: state::perp_market::AMM).36: u128)<br/></td></tr><tr><td align="left">_27 = &lt;u128 as SafeMath&gt;::safe_add(const _, move _28)</td></tr></table>>];
    bb9__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb10__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_29 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb11__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_26 as Continue).0: u128)<br/>_25 = _33<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_24 = &lt;u128 as Cast&gt;::cast::&lt;u128&gt;(move _25)</td></tr></table>>];
    bb12__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb13__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb15__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_34 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb16__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_23 as Continue).0: u128)<br/>_22 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_20 = core::num::&lt;impl u128&gt;::saturating_sub(move _21, move _22)</td></tr></table>>];
    bb17__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb18__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _20)</td></tr></table>>];
    bb20__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb21__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_39 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb22__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_18 as Continue).0: i128)<br/>_17 = _43<br/>StorageDead(_43)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = (((*_1).1: state::perp_market::AMM).33: u128)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = (((*_1).4: state::perp_market::InsuranceClaim).3: u64)<br/>StorageLive(_56)<br/>_56 = (((*_1).4: state::perp_market::InsuranceClaim).2: u64)<br/></td></tr><tr><td align="left">_54 = &lt;u64 as SafeMath&gt;::safe_add(move _55, move _56)</td></tr></table>>];
    bb23__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb24__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb26__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_57 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_53 as Continue).0: u64)<br/>_52 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_51 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _52)</td></tr></table>>];
    bb28__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb31__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_62 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb32__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_50 as Continue).0: u128)<br/>_49 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_47 = &lt;u128 as Ord&gt;::min(move _48, move _49)</td></tr></table>>];
    bb33__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb34__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _47)</td></tr></table>>];
    bb36__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb37__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_67 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb38__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_45 as Continue).0: i128)<br/>_44 = _71<br/>StorageDead(_71)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = (((*_1).4: state::perp_market::InsuranceClaim).0: i64)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = (((*_1).4: state::perp_market::InsuranceClaim).1: u64)<br/></td></tr><tr><td align="left">_80 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _81)</td></tr></table>>];
    bb39__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb40__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb42__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_82 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb43__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_79 as Continue).0: i64)<br/>_78 = _86<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_76 = &lt;i64 as SafeMath&gt;::safe_add(move _77, move _78)</td></tr></table>>];
    bb44__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb45__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb47__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_87 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb48__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_75 as Continue).0: i64)<br/>_74 = _91<br/>StorageDead(_91)<br/>StorageLive(_92)<br/>_92 = (((*_1).1: state::perp_market::AMM).49: i64)<br/></td></tr><tr><td align="left">_73 = &lt;i64 as Ord&gt;::min(move _74, move _92)</td></tr></table>>];
    bb49__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb50__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;i64 as Ord&gt;::max(move _73, const 0_i64)</td></tr></table>>];
    bb52__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_1)<br/></td></tr><tr><td align="left">_98 = get_total_fee_lower_bound(move _99)</td></tr></table>>];
    bb53__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb54__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_100 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb55__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_97 as Continue).0: u128)<br/>_96 = _104<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_95 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _96)</td></tr></table>>];
    bb56__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb57__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb59__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_105 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb60__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_94 as Continue).0: i128)<br/>_93 = _109<br/>StorageDead(_109)<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = _93<br/>StorageLive(_118)<br/>_118 = _44<br/></td></tr><tr><td align="left">_116 = &lt;i128 as SafeMath&gt;::safe_add(move _117, move _118)</td></tr></table>>];
    bb61__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb62__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb64__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_119 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb65__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_115 as Continue).0: i128)<br/>_114 = _123<br/>StorageDead(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = (((*_1).1: state::perp_market::AMM).32: u128)<br/></td></tr><tr><td align="left">_126 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _127)</td></tr></table>>];
    bb66__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_122)<br/>_122 = _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb67__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb69__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_128 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb70__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_125 as Continue).0: i128)<br/>_124 = _132<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_113 = core::num::&lt;impl i128&gt;::saturating_sub(move _114, move _124)</td></tr></table>>];
    bb71__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb72__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_124)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;i128 as Ord&gt;::max(move _113, const 0_i128)</td></tr></table>>];
    bb74__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageLive(_133)<br/>_133 = _17<br/></td></tr><tr><td align="left">_111 = &lt;i128 as Ord&gt;::min(move _112, move _133)</td></tr></table>>];
    bb75__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_112)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = _72<br/></td></tr><tr><td align="left">_136 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _137)</td></tr></table>>];
    bb76__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _136)</td></tr></table>>];
    bb77__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_138 = discriminant(_135)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb78__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_135 as Continue).0: i128)<br/>_134 = _142<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_110 = &lt;i128 as Ord&gt;::min(move _111, move _134)</td></tr></table>>];
    bb79__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_135 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_141)<br/>_141 = _139<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _141)</td></tr></table>>];
    bb80__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_134)<br/>StorageDead(_111)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_111)<br/>StorageDead(_135)<br/>StorageDead(_125)<br/>StorageDead(_115)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = _110<br/>_146 = Ge(move _147, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb82__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_148)<br/>_148 = ()<br/>_145 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _148)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_149)<br/>_149 = error::ErrorCode::InsufficientPerpPnlPool<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_266 = const _<br/>_160 = &amp;(*_266)<br/>_159 = &amp;(*_160)<br/>_158 = move _159 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;_149<br/>_167 = &amp;(*_168)<br/></td></tr><tr><td align="left">_166 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _167)</td></tr></table>>];
    bb84__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_165 = [move _166]<br/>StorageDead(_166)<br/>_164 = &amp;_165<br/>_163 = &amp;(*_164)<br/>_162 = move _163 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_157 = Arguments::&lt;'_&gt;::new_v1(move _158, move _162)</td></tr></table>>];
    bb85__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = format(move _157)</td></tr></table>>];
    bb86__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_160)<br/>_155 = move _156<br/>StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = &lt;String as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb87__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_151 = &amp;(*_152)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_150 = solana_program::log::sol_log(move _151)</td></tr></table>>];
    bb88__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb89__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_265 = const _<br/>_179 = &amp;(*_265)<br/>_178 = &amp;(*_179)<br/>_177 = move _178 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_178)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = &amp;_110<br/>_186 = &amp;(*_187)<br/></td></tr><tr><td align="left">_185 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _186)</td></tr></table>>];
    bb90__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_184 = [move _185]<br/>StorageDead(_185)<br/>_183 = &amp;_184<br/>_182 = &amp;(*_183)<br/>_181 = move _182 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_176 = Arguments::&lt;'_&gt;::new_v1(move _177, move _181)</td></tr></table>>];
    bb91__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_175 = format(move _176)</td></tr></table>>];
    bb92__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_179)<br/>_174 = move _175<br/>StorageDead(_175)<br/>_173 = &amp;_174<br/>_172 = &amp;(*_173)<br/></td></tr><tr><td align="left">_171 = &lt;String as Deref&gt;::deref(move _172)</td></tr></table>>];
    bb93__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_170 = &amp;(*_171)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">_169 = solana_program::log::sol_log(move _170)</td></tr></table>>];
    bb94__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">drop(_174)</td></tr></table>>];
    bb95__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>StorageLive(_188)<br/>_188 = _149<br/>_145 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _188)<br/>StorageDead(_188)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb97__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_189 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb98__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_144 as Continue).0: ())<br/>_143 = _193<br/>StorageDead(_193)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageLive(_194)<br/>_194 = _110<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _194)<br/>StorageDead(_194)<br/>StorageDead(_110)<br/>StorageDead(_93)<br/>StorageDead(_72)<br/>StorageDead(_44)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb100__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = _5<br/>_195 = Lt(move _196, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _195)</td></tr></table>>];
    bb102__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_206 = (((*_1).4: state::perp_market::InsuranceClaim).1: u64)<br/></td></tr><tr><td align="left">_205 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _206)</td></tr></table>>];
    bb103__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/></td></tr><tr><td align="left">_204 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _205)</td></tr></table>>];
    bb104__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>_207 = discriminant(_204)<br/></td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb105__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_204 as Continue).0: i64)<br/>_203 = _211<br/>StorageDead(_211)<br/>StorageLive(_212)<br/>_212 = (((*_1).4: state::perp_market::InsuranceClaim).0: i64)<br/></td></tr><tr><td align="left">_202 = core::num::&lt;impl i64&gt;::saturating_sub(move _203, move _212)</td></tr></table>>];
    bb106__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_204 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_210)<br/>_210 = _208<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _210)</td></tr></table>>];
    bb107__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_201 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _202)</td></tr></table>>];
    bb109__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb110__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_213 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb111__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_200 as Continue).0: u128)<br/>_199 = _217<br/>StorageDead(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = (((*_2).7: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_225)<br/>_225 = &amp;(*_2)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_267 = const _<br/>_227 = &amp;(*_267)<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_223 = get_token_amount(move _224, move _225, move _226)</td></tr></table>>];
    bb112__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_216)<br/>_216 = _214<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _216)</td></tr></table>>];
    bb113__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_222 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _223)</td></tr></table>>];
    bb115__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_229 = discriminant(_222)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb116__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_222 as Continue).0: u128)<br/>_221 = _233<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">_220 = &lt;u128 as Cast&gt;::cast::&lt;u128&gt;(move _221)</td></tr></table>>];
    bb117__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_222 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb118__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/></td></tr><tr><td align="left">_219 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _220)</td></tr></table>>];
    bb120__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_234 = discriminant(_219)<br/></td></tr><tr><td align="left">switchInt(move _234)</td></tr></table>>];
    bb121__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_238)<br/>_238 = ((_219 as Continue).0: u128)<br/>_218 = _238<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">_198 = &lt;u128 as Ord&gt;::min(move _199, move _218)</td></tr></table>>];
    bb122__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_235)<br/>_235 = ((_219 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_237)<br/>_237 = _235<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _237)</td></tr></table>>];
    bb123__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_199)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = (((*_1).4: state::perp_market::InsuranceClaim).1: u64)<br/></td></tr><tr><td align="left">_241 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _242)</td></tr></table>>];
    bb125__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/></td></tr><tr><td align="left">_240 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _241)</td></tr></table>>];
    bb126__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>_243 = discriminant(_240)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb127__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = ((_240 as Continue).0: u128)<br/>_239 = _247<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_197 = &lt;u128 as Ord&gt;::min(move _198, move _239)</td></tr></table>>];
    bb128__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_240 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_246)<br/>_246 = _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb129__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_239)<br/>StorageDead(_198)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_198)<br/>StorageDead(_240)<br/>StorageDead(_227)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = _197<br/>_248 = Gt(move _249, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _248)</td></tr></table>>];
    bb131__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = _5<br/></td></tr><tr><td align="left">_252 = core::num::&lt;impl i128&gt;::abs(move _253)</td></tr></table>>];
    bb132__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = _197<br/></td></tr><tr><td align="left">_256 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _257)</td></tr></table>>];
    bb133__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/></td></tr><tr><td align="left">_255 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _256)</td></tr></table>>];
    bb134__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_258 = discriminant(_255)<br/></td></tr><tr><td align="left">switchInt(move _258)</td></tr></table>>];
    bb135__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_262)<br/>_262 = ((_255 as Continue).0: i128)<br/>_254 = _262<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_251 = &lt;i128 as Ord&gt;::min(move _252, move _254)</td></tr></table>>];
    bb136__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_259)<br/>_259 = ((_255 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_261)<br/>_261 = _259<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _261)</td></tr></table>>];
    bb137__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_251)<br/>StorageDead(_255)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_252)<br/>_263 = Eq(_251, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _263, &quot;attempt to negate `{}`, which would overflow&quot;, _251)</td></tr></table>>];
    bb139__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_250 = Neg(move _251)<br/>StorageDead(_251)<br/>StorageDead(_255)<br/>StorageLive(_264)<br/>_264 = _250<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _264)<br/>StorageDead(_264)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(const 0_i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(const 0_i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left">return</td></tr></table>>];
    bb166__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">166 (cleanup)</td></tr><tr><td align="left">drop(_174)</td></tr></table>>];
    bb167__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">167 (cleanup)</td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb168__0_91 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">168 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_91 -> bb1__0_91 [label="return"];
    bb1__0_91 -> bb2__0_91 [label="return"];
    bb2__0_91 -> bb3__0_91 [label="0"];
    bb2__0_91 -> bb5__0_91 [label="1"];
    bb2__0_91 -> bb4__0_91 [label="otherwise"];
    bb3__0_91 -> bb7__0_91 [label="return"];
    bb5__0_91 -> bb6__0_91 [label="return"];
    bb6__0_91 -> bb164__0_91 [label=""];
    bb7__0_91 -> bb101__0_91 [label="0"];
    bb7__0_91 -> bb8__0_91 [label="otherwise"];
    bb8__0_91 -> bb9__0_91 [label="return"];
    bb9__0_91 -> bb10__0_91 [label="return"];
    bb10__0_91 -> bb11__0_91 [label="0"];
    bb10__0_91 -> bb12__0_91 [label="1"];
    bb10__0_91 -> bb4__0_91 [label="otherwise"];
    bb11__0_91 -> bb14__0_91 [label="return"];
    bb12__0_91 -> bb13__0_91 [label="return"];
    bb13__0_91 -> bb160__0_91 [label=""];
    bb14__0_91 -> bb15__0_91 [label="return"];
    bb15__0_91 -> bb16__0_91 [label="0"];
    bb15__0_91 -> bb17__0_91 [label="1"];
    bb15__0_91 -> bb4__0_91 [label="otherwise"];
    bb16__0_91 -> bb19__0_91 [label="return"];
    bb17__0_91 -> bb18__0_91 [label="return"];
    bb18__0_91 -> bb160__0_91 [label=""];
    bb19__0_91 -> bb20__0_91 [label="return"];
    bb20__0_91 -> bb21__0_91 [label="return"];
    bb21__0_91 -> bb22__0_91 [label="0"];
    bb21__0_91 -> bb23__0_91 [label="1"];
    bb21__0_91 -> bb4__0_91 [label="otherwise"];
    bb22__0_91 -> bb25__0_91 [label="return"];
    bb23__0_91 -> bb24__0_91 [label="return"];
    bb24__0_91 -> bb161__0_91 [label=""];
    bb25__0_91 -> bb26__0_91 [label="return"];
    bb26__0_91 -> bb27__0_91 [label="0"];
    bb26__0_91 -> bb28__0_91 [label="1"];
    bb26__0_91 -> bb4__0_91 [label="otherwise"];
    bb27__0_91 -> bb30__0_91 [label="return"];
    bb28__0_91 -> bb29__0_91 [label="return"];
    bb29__0_91 -> bb157__0_91 [label=""];
    bb30__0_91 -> bb31__0_91 [label="return"];
    bb31__0_91 -> bb32__0_91 [label="0"];
    bb31__0_91 -> bb33__0_91 [label="1"];
    bb31__0_91 -> bb4__0_91 [label="otherwise"];
    bb32__0_91 -> bb35__0_91 [label="return"];
    bb33__0_91 -> bb34__0_91 [label="return"];
    bb34__0_91 -> bb157__0_91 [label=""];
    bb35__0_91 -> bb36__0_91 [label="return"];
    bb36__0_91 -> bb37__0_91 [label="return"];
    bb37__0_91 -> bb38__0_91 [label="0"];
    bb37__0_91 -> bb39__0_91 [label="1"];
    bb37__0_91 -> bb4__0_91 [label="otherwise"];
    bb38__0_91 -> bb41__0_91 [label="return"];
    bb39__0_91 -> bb40__0_91 [label="return"];
    bb40__0_91 -> bb158__0_91 [label=""];
    bb41__0_91 -> bb42__0_91 [label="return"];
    bb42__0_91 -> bb43__0_91 [label="0"];
    bb42__0_91 -> bb44__0_91 [label="1"];
    bb42__0_91 -> bb4__0_91 [label="otherwise"];
    bb43__0_91 -> bb46__0_91 [label="return"];
    bb44__0_91 -> bb45__0_91 [label="return"];
    bb45__0_91 -> bb155__0_91 [label=""];
    bb46__0_91 -> bb47__0_91 [label="return"];
    bb47__0_91 -> bb48__0_91 [label="0"];
    bb47__0_91 -> bb49__0_91 [label="1"];
    bb47__0_91 -> bb4__0_91 [label="otherwise"];
    bb48__0_91 -> bb51__0_91 [label="return"];
    bb49__0_91 -> bb50__0_91 [label="return"];
    bb50__0_91 -> bb155__0_91 [label=""];
    bb51__0_91 -> bb52__0_91 [label="return"];
    bb52__0_91 -> bb53__0_91 [label="return"];
    bb53__0_91 -> bb54__0_91 [label="return"];
    bb54__0_91 -> bb55__0_91 [label="0"];
    bb54__0_91 -> bb56__0_91 [label="1"];
    bb54__0_91 -> bb4__0_91 [label="otherwise"];
    bb55__0_91 -> bb58__0_91 [label="return"];
    bb56__0_91 -> bb57__0_91 [label="return"];
    bb57__0_91 -> bb153__0_91 [label=""];
    bb58__0_91 -> bb59__0_91 [label="return"];
    bb59__0_91 -> bb60__0_91 [label="0"];
    bb59__0_91 -> bb61__0_91 [label="1"];
    bb59__0_91 -> bb4__0_91 [label="otherwise"];
    bb60__0_91 -> bb63__0_91 [label="return"];
    bb61__0_91 -> bb62__0_91 [label="return"];
    bb62__0_91 -> bb153__0_91 [label=""];
    bb63__0_91 -> bb64__0_91 [label="return"];
    bb64__0_91 -> bb65__0_91 [label="0"];
    bb64__0_91 -> bb66__0_91 [label="1"];
    bb64__0_91 -> bb4__0_91 [label="otherwise"];
    bb65__0_91 -> bb68__0_91 [label="return"];
    bb66__0_91 -> bb67__0_91 [label="return"];
    bb67__0_91 -> bb151__0_91 [label=""];
    bb68__0_91 -> bb69__0_91 [label="return"];
    bb69__0_91 -> bb70__0_91 [label="0"];
    bb69__0_91 -> bb71__0_91 [label="1"];
    bb69__0_91 -> bb4__0_91 [label="otherwise"];
    bb70__0_91 -> bb73__0_91 [label="return"];
    bb71__0_91 -> bb72__0_91 [label="return"];
    bb72__0_91 -> bb150__0_91 [label=""];
    bb73__0_91 -> bb74__0_91 [label="return"];
    bb74__0_91 -> bb75__0_91 [label="return"];
    bb75__0_91 -> bb76__0_91 [label="return"];
    bb76__0_91 -> bb77__0_91 [label="return"];
    bb77__0_91 -> bb78__0_91 [label="0"];
    bb77__0_91 -> bb79__0_91 [label="1"];
    bb77__0_91 -> bb4__0_91 [label="otherwise"];
    bb78__0_91 -> bb81__0_91 [label="return"];
    bb79__0_91 -> bb80__0_91 [label="return"];
    bb80__0_91 -> bb150__0_91 [label=""];
    bb81__0_91 -> bb83__0_91 [label="0"];
    bb81__0_91 -> bb82__0_91 [label="otherwise"];
    bb82__0_91 -> bb96__0_91 [label=""];
    bb83__0_91 -> bb84__0_91 [label="return"];
    bb84__0_91 -> bb85__0_91 [label="return"];
    bb85__0_91 -> bb86__0_91 [label="return"];
    bb86__0_91 -> bb87__0_91 [label="return"];
    bb86__0_91 -> bb167__0_91 [label="unwind"];
    bb87__0_91 -> bb88__0_91 [label="return"];
    bb87__0_91 -> bb167__0_91 [label="unwind"];
    bb88__0_91 -> bb89__0_91 [label="return"];
    bb88__0_91 -> bb168__0_91 [label="unwind"];
    bb89__0_91 -> bb90__0_91 [label="return"];
    bb90__0_91 -> bb91__0_91 [label="return"];
    bb91__0_91 -> bb92__0_91 [label="return"];
    bb92__0_91 -> bb93__0_91 [label="return"];
    bb92__0_91 -> bb166__0_91 [label="unwind"];
    bb93__0_91 -> bb94__0_91 [label="return"];
    bb93__0_91 -> bb166__0_91 [label="unwind"];
    bb94__0_91 -> bb95__0_91 [label="return"];
    bb94__0_91 -> bb168__0_91 [label="unwind"];
    bb95__0_91 -> bb96__0_91 [label=""];
    bb96__0_91 -> bb97__0_91 [label="return"];
    bb97__0_91 -> bb98__0_91 [label="0"];
    bb97__0_91 -> bb99__0_91 [label="1"];
    bb97__0_91 -> bb4__0_91 [label="otherwise"];
    bb98__0_91 -> bb144__0_91 [label=""];
    bb99__0_91 -> bb100__0_91 [label="return"];
    bb100__0_91 -> bb152__0_91 [label=""];
    bb101__0_91 -> bb142__0_91 [label="0"];
    bb101__0_91 -> bb102__0_91 [label="otherwise"];
    bb102__0_91 -> bb103__0_91 [label="return"];
    bb103__0_91 -> bb104__0_91 [label="return"];
    bb104__0_91 -> bb105__0_91 [label="0"];
    bb104__0_91 -> bb106__0_91 [label="1"];
    bb104__0_91 -> bb4__0_91 [label="otherwise"];
    bb105__0_91 -> bb108__0_91 [label="return"];
    bb106__0_91 -> bb107__0_91 [label="return"];
    bb107__0_91 -> bb147__0_91 [label=""];
    bb108__0_91 -> bb109__0_91 [label="return"];
    bb109__0_91 -> bb110__0_91 [label="return"];
    bb110__0_91 -> bb111__0_91 [label="0"];
    bb110__0_91 -> bb112__0_91 [label="1"];
    bb110__0_91 -> bb4__0_91 [label="otherwise"];
    bb111__0_91 -> bb114__0_91 [label="return"];
    bb112__0_91 -> bb113__0_91 [label="return"];
    bb113__0_91 -> bb147__0_91 [label=""];
    bb114__0_91 -> bb115__0_91 [label="return"];
    bb115__0_91 -> bb116__0_91 [label="0"];
    bb115__0_91 -> bb117__0_91 [label="1"];
    bb115__0_91 -> bb4__0_91 [label="otherwise"];
    bb116__0_91 -> bb119__0_91 [label="return"];
    bb117__0_91 -> bb118__0_91 [label="return"];
    bb118__0_91 -> bb145__0_91 [label=""];
    bb119__0_91 -> bb120__0_91 [label="return"];
    bb120__0_91 -> bb121__0_91 [label="0"];
    bb120__0_91 -> bb122__0_91 [label="1"];
    bb120__0_91 -> bb4__0_91 [label="otherwise"];
    bb121__0_91 -> bb124__0_91 [label="return"];
    bb122__0_91 -> bb123__0_91 [label="return"];
    bb123__0_91 -> bb145__0_91 [label=""];
    bb124__0_91 -> bb125__0_91 [label="return"];
    bb125__0_91 -> bb126__0_91 [label="return"];
    bb126__0_91 -> bb127__0_91 [label="0"];
    bb126__0_91 -> bb128__0_91 [label="1"];
    bb126__0_91 -> bb4__0_91 [label="otherwise"];
    bb127__0_91 -> bb130__0_91 [label="return"];
    bb128__0_91 -> bb129__0_91 [label="return"];
    bb129__0_91 -> bb146__0_91 [label=""];
    bb130__0_91 -> bb140__0_91 [label="0"];
    bb130__0_91 -> bb131__0_91 [label="otherwise"];
    bb131__0_91 -> bb132__0_91 [label="return"];
    bb132__0_91 -> bb133__0_91 [label="return"];
    bb133__0_91 -> bb134__0_91 [label="return"];
    bb134__0_91 -> bb135__0_91 [label="0"];
    bb134__0_91 -> bb136__0_91 [label="1"];
    bb134__0_91 -> bb4__0_91 [label="otherwise"];
    bb135__0_91 -> bb138__0_91 [label="return"];
    bb136__0_91 -> bb137__0_91 [label="return"];
    bb137__0_91 -> bb149__0_91 [label=""];
    bb138__0_91 -> bb139__0_91 [label="success"];
    bb139__0_91 -> bb141__0_91 [label=""];
    bb140__0_91 -> bb141__0_91 [label=""];
    bb141__0_91 -> bb143__0_91 [label=""];
    bb142__0_91 -> bb143__0_91 [label=""];
    bb143__0_91 -> bb144__0_91 [label=""];
    bb144__0_91 -> bb165__0_91 [label=""];
    bb145__0_91 -> bb146__0_91 [label=""];
    bb146__0_91 -> bb148__0_91 [label=""];
    bb147__0_91 -> bb148__0_91 [label=""];
    bb148__0_91 -> bb149__0_91 [label=""];
    bb149__0_91 -> bb163__0_91 [label=""];
    bb150__0_91 -> bb151__0_91 [label=""];
    bb151__0_91 -> bb152__0_91 [label=""];
    bb152__0_91 -> bb154__0_91 [label=""];
    bb153__0_91 -> bb154__0_91 [label=""];
    bb154__0_91 -> bb156__0_91 [label=""];
    bb155__0_91 -> bb156__0_91 [label=""];
    bb156__0_91 -> bb159__0_91 [label=""];
    bb157__0_91 -> bb158__0_91 [label=""];
    bb158__0_91 -> bb159__0_91 [label=""];
    bb159__0_91 -> bb162__0_91 [label=""];
    bb160__0_91 -> bb161__0_91 [label=""];
    bb161__0_91 -> bb162__0_91 [label=""];
    bb162__0_91 -> bb163__0_91 [label=""];
    bb163__0_91 -> bb164__0_91 [label=""];
    bb164__0_91 -> bb165__0_91 [label=""];
    bb166__0_91 -> bb168__0_91 [label="return"];
    bb167__0_91 -> bb168__0_91 [label="return"];
}
