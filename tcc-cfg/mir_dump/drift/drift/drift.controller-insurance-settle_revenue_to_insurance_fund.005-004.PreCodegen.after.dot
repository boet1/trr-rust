digraph Mir_0_204 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::insurance::settle_revenue_to_insurance_fund(_1: u64, _2: u64, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: i64, _5: bool) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _10: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: ();<br align="left"/>let _17: ();<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: !;<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _23: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: u32;<br align="left"/>let mut _26: u32;<br align="left"/>let mut _27: ();<br align="left"/>let _28: error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: &amp;ReErased std::string::String;<br align="left"/>let _33: &amp;ReErased std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let mut _36: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _39: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _40: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _44: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased error::ErrorCode;<br align="left"/>let _47: &amp;ReErased error::ErrorCode;<br align="left"/>let _48: ();<br align="left"/>let mut _49: &amp;ReErased str;<br align="left"/>let _50: &amp;ReErased str;<br align="left"/>let mut _51: error::ErrorCode;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: ();<br align="left"/>let _57: i64;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _59: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _60: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let mut _67: u128;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _70: u128;<br align="left"/>let mut _71: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _72: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _73: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _74: state::spot_market::SpotBalanceType;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _79: u128;<br align="left"/>let _80: ();<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: i64;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _85: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: i64;<br align="left"/>let mut _92: u128;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _94: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _95: u128;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _97: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _98: i64;<br align="left"/>let mut _99: i64;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: u128;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: u128;<br align="left"/>let _110: ();<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: u128;<br align="left"/>let _113: u128;<br align="left"/>let mut _114: bool;<br align="left"/>let mut _115: u16;<br align="left"/>let _116: u128;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _118: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _119: u128;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _121: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _124: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _125: u128;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _127: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _128: u64;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: u128;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: u128;<br align="left"/>let mut _140: isize;<br align="left"/>let _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _144: u128;<br align="left"/>let mut _145: u128;<br align="left"/>let mut _146: u128;<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _148: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _149: u128;<br align="left"/>let mut _150: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _151: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _152: i64;<br align="left"/>let mut _153: isize;<br align="left"/>let _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _155: !;<br align="left"/>let mut _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _157: u128;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _162: u128;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: u128;<br align="left"/>let _168: u128;<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _170: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _171: u128;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: u128;<br align="left"/>let mut _177: u128;<br align="left"/>let mut _178: u128;<br align="left"/>let mut _179: u128;<br align="left"/>let _180: u64;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _182: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _183: u128;<br align="left"/>let mut _184: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _185: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _186: u128;<br align="left"/>let mut _187: isize;<br align="left"/>let _188: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _189: !;<br align="left"/>let mut _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _191: u128;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: u64;<br align="left"/>let _197: ();<br align="left"/>let mut _198: bool;<br align="left"/>let _199: ();<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _201: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _202: bool;<br align="left"/>let mut _203: u64;<br align="left"/>let mut _204: ();<br align="left"/>let _205: error::ErrorCode;<br align="left"/>let _206: ();<br align="left"/>let mut _207: &amp;ReErased str;<br align="left"/>let _208: &amp;ReErased str;<br align="left"/>let mut _209: &amp;ReErased std::string::String;<br align="left"/>let _210: &amp;ReErased std::string::String;<br align="left"/>let _211: std::string::String;<br align="left"/>let _212: std::string::String;<br align="left"/>let mut _213: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _214: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _215: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _216: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _217: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _218: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _219: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _220: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _221: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _222: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _223: &amp;ReErased error::ErrorCode;<br align="left"/>let _224: &amp;ReErased error::ErrorCode;<br align="left"/>let _225: ();<br align="left"/>let mut _226: &amp;ReErased str;<br align="left"/>let _227: &amp;ReErased str;<br align="left"/>let mut _228: error::ErrorCode;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: ();<br align="left"/>let mut _234: i64;<br align="left"/>let _235: u32;<br align="left"/>let mut _236: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _237: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _238: u32;<br align="left"/>let mut _239: u32;<br align="left"/>let mut _240: isize;<br align="left"/>let _241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _242: !;<br align="left"/>let mut _243: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _244: u32;<br align="left"/>let _245: ();<br align="left"/>let mut _246: bool;<br align="left"/>let mut _247: u32;<br align="left"/>let _248: u128;<br align="left"/>let mut _249: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _250: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _251: u64;<br align="left"/>let mut _252: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _253: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _254: u64;<br align="left"/>let mut _255: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _256: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _257: u64;<br align="left"/>let mut _258: u64;<br align="left"/>let mut _259: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _260: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _261: u32;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: u64;<br align="left"/>let mut _267: isize;<br align="left"/>let _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _269: !;<br align="left"/>let mut _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _271: u64;<br align="left"/>let mut _272: u64;<br align="left"/>let mut _273: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _274: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _275: u32;<br align="left"/>let mut _276: isize;<br align="left"/>let _277: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _278: !;<br align="left"/>let mut _279: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _280: u64;<br align="left"/>let mut _281: isize;<br align="left"/>let _282: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _283: !;<br align="left"/>let mut _284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _285: u64;<br align="left"/>let mut _286: u128;<br align="left"/>let mut _287: u64;<br align="left"/>let mut _288: isize;<br align="left"/>let _289: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _290: !;<br align="left"/>let mut _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _292: u128;<br align="left"/>let mut _293: u128;<br align="left"/>let mut _294: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _295: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _296: u128;<br align="left"/>let mut _297: u128;<br align="left"/>let mut _298: isize;<br align="left"/>let _299: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _300: !;<br align="left"/>let mut _301: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _302: u128;<br align="left"/>let _303: u128;<br align="left"/>let _304: ();<br align="left"/>let mut _305: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _306: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _307: u128;<br align="left"/>let mut _308: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _309: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _310: u64;<br align="left"/>let mut _311: isize;<br align="left"/>let _312: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _313: !;<br align="left"/>let mut _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _315: u128;<br align="left"/>let mut _316: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _317: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _318: state::spot_market::SpotBalanceType;<br align="left"/>let mut _319: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _320: isize;<br align="left"/>let _321: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _322: !;<br align="left"/>let mut _323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _324: ();<br align="left"/>let _325: ();<br align="left"/>let _326: ();<br align="left"/>let mut _327: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _328: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _329: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _330: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _331: &amp;ReErased [u8];<br align="left"/>let _332: &amp;ReErased [u8];<br align="left"/>let mut _333: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _334: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _335: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _336: &amp;ReErased state::events::InsuranceFundRecord;<br align="left"/>let _337: &amp;ReErased state::events::InsuranceFundRecord;<br align="left"/>let _338: state::events::InsuranceFundRecord;<br align="left"/>let mut _339: i64;<br align="left"/>let mut _340: u16;<br align="left"/>let mut _341: i64;<br align="left"/>let mut _342: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _343: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _344: u64;<br align="left"/>let mut _345: isize;<br align="left"/>let _346: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _347: !;<br align="left"/>let mut _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _349: i64;<br align="left"/>let mut _350: u32;<br align="left"/>let mut _351: u32;<br align="left"/>let mut _352: u64;<br align="left"/>let mut _353: u64;<br align="left"/>let mut _354: u128;<br align="left"/>let mut _355: u128;<br align="left"/>let mut _356: u64;<br align="left"/>let mut _357: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _358: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _359: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _360: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug spot_market_vault_amount =&gt; _1;<br align="left"/>debug insurance_vault_amount =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug check_invariants =&gt; _5;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug error_code =&gt; _28;<br align="left"/>debug res =&gt; _35;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug depositors_claim =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug token_amount =&gt; _67;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug max_apr_per_revenue_settle =&gt; _113;<br align="left"/>debug capped_apr_amount =&gt; _116;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug residual =&gt; _141;<br align="left"/>debug val =&gt; _144;<br align="left"/>debug residual =&gt; _154;<br align="left"/>debug val =&gt; _157;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug capped_token_pct_amount =&gt; _168;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>debug insurance_fund_token_amount =&gt; _180;<br align="left"/>debug residual =&gt; _188;<br align="left"/>debug val =&gt; _191;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug error_code =&gt; _205;<br align="left"/>debug res =&gt; _212;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug protocol_if_factor =&gt; _235;<br align="left"/>debug residual =&gt; _241;<br align="left"/>debug val =&gt; _244;<br align="left"/>debug n_shares =&gt; _248;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>debug residual =&gt; _268;<br align="left"/>debug val =&gt; _271;<br align="left"/>debug residual =&gt; _277;<br align="left"/>debug val =&gt; _280;<br align="left"/>debug residual =&gt; _282;<br align="left"/>debug val =&gt; _285;<br align="left"/>debug residual =&gt; _289;<br align="left"/>debug val =&gt; _292;<br align="left"/>debug residual =&gt; _299;<br align="left"/>debug val =&gt; _302;<br align="left"/>debug total_if_shares_before =&gt; _303;<br align="left"/>debug residual =&gt; _312;<br align="left"/>debug val =&gt; _315;<br align="left"/>debug residual =&gt; _321;<br align="left"/>debug val =&gt; _324;<br align="left"/>debug residual =&gt; _346;<br align="left"/>debug val =&gt; _349;<br align="left"/>>;
    bb0__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_3)<br/>StorageLive(_10)<br/>_10 = Option::&lt;&amp;OraclePriceData&gt;::None<br/>StorageLive(_11)<br/>_11 = _4<br/></td></tr><tr><td align="left">_8 = controller::spot_balance::update_spot_market_cumulative_interest(move _9, move _10, move _11)</td></tr></table>>];
    bb1__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Continue).0: ())<br/>_6 = _16<br/>StorageDead(_16)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = (((*_3).9: state::spot_market::InsuranceFund).6: i64)<br/>_18 = Eq(move _19, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb4__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_17 = const ()<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = (((*_3).9: state::spot_market::InsuranceFund).8: u32)<br/>StorageLive(_26)<br/>_26 = (((*_3).9: state::spot_market::InsuranceFund).7: u32)<br/>_24 = Le(move _25, move _26)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb9__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_27)<br/>_27 = ()<br/>_23 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>_28 = error::ErrorCode::RevenueSettingsCannotSettleToIF<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_360 = const _<br/>_39 = &amp;(*_360)<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_28<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _46)</td></tr></table>>];
    bb11__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = [move _45]<br/>StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_36 = Arguments::&lt;'_&gt;::new_v1(move _37, move _41)</td></tr></table>>];
    bb12__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = format(move _36)</td></tr></table>>];
    bb13__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>_34 = move _35<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = &lt;String as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb14__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_30 = &amp;(*_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb15__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb16__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = const &quot;invalid if_factor settings on spot market&quot;<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = solana_program::log::sol_log(move _49)</td></tr></table>>];
    bb17__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>_51 = _28<br/>_23 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _51)<br/>StorageDead(_51)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb19__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_52 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb20__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_22 as Continue).0: ())<br/>_21 = _56<br/>StorageDead(_56)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;(*_3)<br/>StorageLive(_61)<br/>_61 = _1<br/></td></tr><tr><td align="left">_59 = validate_spot_market_vault_amount(move _60, move _61)</td></tr></table>>];
    bb21__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb22__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb24__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_62 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb25__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_58 as Continue).0: i64)<br/>_57 = _66<br/>StorageDead(_66)<br/>StorageDead(_58)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = (((*_3).7: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_71)<br/>_71 = &amp;(*_3)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_359 = const _<br/>_73 = &amp;(*_359)<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_69 = get_token_amount(move _70, move _71, move _72)</td></tr></table>>];
    bb26__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb27__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb29__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_75 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb30__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_68 as Continue).0: u128)<br/>_67 = _79<br/>StorageDead(_79)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _57<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _67<br/></td></tr><tr><td align="left">_85 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _86)</td></tr></table>>];
    bb31__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_78)<br/>_78 = _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb32__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb34__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_87 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb35__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_84 as Continue).0: i64)<br/>_83 = _91<br/>StorageDead(_91)<br/>_81 = Lt(move _82, move _83)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb36__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb37__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = _57<br/></td></tr><tr><td align="left">_98 = &lt;i64 as Ord&gt;::max(move _99, const 0_i64)</td></tr></table>>];
    bb39__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>_80 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _98)</td></tr></table>>];
    bb41__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb42__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_100 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb43__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_96 as Continue).0: u128)<br/>_95 = _104<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_94 = &lt;u128 as SafeMath&gt;::safe_div(move _95, const 2_u128)</td></tr></table>>];
    bb44__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb45__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb47__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_105 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb48__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_93 as Continue).0: u128)<br/>_92 = _109<br/>StorageDead(_109)<br/>_67 = move _92<br/>StorageDead(_92)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>_80 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb50__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = (((*_3).9: state::spot_market::InsuranceFund).2: u128)<br/>_111 = Gt(move _112, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb52__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = ((*_3).42: u16)<br/>_114 = Eq(move _115, const _)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb53__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_113 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_113 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _2<br/></td></tr><tr><td align="left">_127 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _128)</td></tr></table>>];
    bb56__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb57__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_129 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb58__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_126 as Continue).0: u128)<br/>_125 = _133<br/>StorageDead(_133)<br/>StorageLive(_134)<br/>_134 = _113<br/></td></tr><tr><td align="left">_124 = &lt;u128 as SafeMath&gt;::safe_mul(move _125, move _134)</td></tr></table>>];
    bb59__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb60__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb62__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_135 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb63__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_123 as Continue).0: u128)<br/>_122 = _139<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_121 = &lt;u128 as SafeMath&gt;::safe_div(move _122, const _)</td></tr></table>>];
    bb64__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb65__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb67__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_140 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb68__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_120 as Continue).0: u128)<br/>_119 = _144<br/>StorageDead(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = (((*_3).9: state::spot_market::InsuranceFund).6: i64)<br/></td></tr><tr><td align="left">_151 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _152)</td></tr></table>>];
    bb69__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_143)<br/>_143 = _141<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _143)</td></tr></table>>];
    bb70__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _151)</td></tr></table>>];
    bb72__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_153 = discriminant(_150)<br/></td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb73__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_150 as Continue).0: u128)<br/>_149 = _157<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_148 = &lt;u128 as SafeMath&gt;::safe_div(const _, move _149)</td></tr></table>>];
    bb74__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_150 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_156)<br/>_156 = _154<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _156)</td></tr></table>>];
    bb75__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb77__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_158 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb78__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_147 as Continue).0: u128)<br/>_146 = _162<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_145 = &lt;u128 as Ord&gt;::max(move _146, const 1_u128)</td></tr></table>>];
    bb79__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_161)<br/>_161 = _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb80__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/></td></tr><tr><td align="left">_118 = &lt;u128 as SafeMath&gt;::safe_div(move _119, move _145)</td></tr></table>>];
    bb82__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb83__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_163 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb84__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_117 as Continue).0: u128)<br/>_116 = _167<br/>StorageDead(_167)<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = _67<br/></td></tr><tr><td align="left">_170 = &lt;u128 as SafeMath&gt;::safe_div(move _171, const 10_u128)</td></tr></table>>];
    bb85__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb86__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb88__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_172 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb89__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_169 as Continue).0: u128)<br/>_168 = _176<br/>StorageDead(_176)<br/>StorageDead(_169)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = _168<br/>StorageLive(_179)<br/>_179 = _116<br/></td></tr><tr><td align="left">_177 = &lt;u128 as Ord&gt;::min(move _178, move _179)</td></tr></table>>];
    bb90__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb91__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/>_67 = move _177<br/>StorageDead(_177)<br/>_110 = const ()<br/>StorageDead(_168)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_110 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = _67<br/></td></tr><tr><td align="left">_185 = get_proportion_u128(move _186, const _, const _)</td></tr></table>>];
    bb95__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">_184 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _185)</td></tr></table>>];
    bb96__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_187 = discriminant(_184)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb97__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_184 as Continue).0: u128)<br/>_183 = _191<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_182 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _183)</td></tr></table>>];
    bb98__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_184 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_190)<br/>_190 = _188<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _190)</td></tr></table>>];
    bb99__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb101__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_192 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb102__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_181 as Continue).0: u64)<br/>_180 = _196<br/>StorageDead(_196)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = _5<br/></td></tr><tr><td align="left">switchInt(move _198)</td></tr></table>>];
    bb103__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb104__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = _180<br/>_202 = Ne(move _203, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb106__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_197 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageLive(_204)<br/>_204 = ()<br/>_201 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _204)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageLive(_205)<br/>_205 = error::ErrorCode::NoRevenueToSettleToIF<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_358 = const _<br/>_216 = &amp;(*_358)<br/>_215 = &amp;(*_216)<br/>_214 = move _215 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_215)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;_205<br/>_223 = &amp;(*_224)<br/></td></tr><tr><td align="left">_222 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _223)</td></tr></table>>];
    bb109__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_221 = [move _222]<br/>StorageDead(_222)<br/>_220 = &amp;_221<br/>_219 = &amp;(*_220)<br/>_218 = move _219 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_213 = Arguments::&lt;'_&gt;::new_v1(move _214, move _218)</td></tr></table>>];
    bb110__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = format(move _213)</td></tr></table>>];
    bb111__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_216)<br/>_211 = move _212<br/>StorageDead(_212)<br/>_210 = &amp;_211<br/>_209 = &amp;(*_210)<br/></td></tr><tr><td align="left">_208 = &lt;String as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb112__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_207 = &amp;(*_208)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_206 = solana_program::log::sol_log(move _207)</td></tr></table>>];
    bb113__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/></td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb114__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = const &quot;no amount to settle to insurance fund&quot;<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_225 = solana_program::log::sol_log(move _226)</td></tr></table>>];
    bb115__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>StorageLive(_228)<br/>_228 = _205<br/>_201 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _228)<br/>StorageDead(_228)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb117__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_229 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb118__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_200 as Continue).0: ())<br/>_199 = _233<br/>StorageDead(_233)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>_197 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb120__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/>StorageLive(_234)<br/>_234 = _4<br/>(((*_3).9: state::spot_market::InsuranceFund).5: i64) = move _234<br/>StorageDead(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = (((*_3).9: state::spot_market::InsuranceFund).7: u32)<br/>StorageLive(_239)<br/>_239 = (((*_3).9: state::spot_market::InsuranceFund).8: u32)<br/></td></tr><tr><td align="left">_237 = &lt;u32 as SafeMath&gt;::safe_sub(move _238, move _239)</td></tr></table>>];
    bb122__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">_236 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _237)</td></tr></table>>];
    bb123__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_240 = discriminant(_236)<br/></td></tr><tr><td align="left">switchInt(move _240)</td></tr></table>>];
    bb124__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_236 as Continue).0: u32)<br/>_235 = _244<br/>StorageDead(_244)<br/>StorageDead(_236)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = _235<br/>_246 = Gt(move _247, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _246)</td></tr></table>>];
    bb125__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_241 = ((_236 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_243)<br/>_243 = _241<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _243)</td></tr></table>>];
    bb126__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_241)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = _180<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_261 = _235<br/></td></tr><tr><td align="left">_260 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _261)</td></tr></table>>];
    bb128__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>_245 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/></td></tr><tr><td align="left">_259 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _260)</td></tr></table>>];
    bb130__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>_262 = discriminant(_259)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb131__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_259 as Continue).0: u64)<br/>_258 = _266<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_256 = &lt;u64 as SafeMath&gt;::safe_mul(move _257, move _258)</td></tr></table>>];
    bb132__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_259 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb133__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_258)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_255 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _256)</td></tr></table>>];
    bb135__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_267 = discriminant(_255)<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb136__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_255 as Continue).0: u64)<br/>_254 = _271<br/>StorageDead(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = (((*_3).9: state::spot_market::InsuranceFund).7: u32)<br/></td></tr><tr><td align="left">_274 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _275)</td></tr></table>>];
    bb137__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_255 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_270)<br/>_270 = _268<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _270)</td></tr></table>>];
    bb138__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/></td></tr><tr><td align="left">_273 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _274)</td></tr></table>>];
    bb140__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_276 = discriminant(_273)<br/></td></tr><tr><td align="left">switchInt(move _276)</td></tr></table>>];
    bb141__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_280)<br/>_280 = ((_273 as Continue).0: u64)<br/>_272 = _280<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">_253 = &lt;u64 as SafeMath&gt;::safe_div(move _254, move _272)</td></tr></table>>];
    bb142__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_277)<br/>_277 = ((_273 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_279)<br/>_279 = _277<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _279)</td></tr></table>>];
    bb143__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_277)<br/>StorageDead(_272)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">_252 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _253)</td></tr></table>>];
    bb145__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>_281 = discriminant(_252)<br/></td></tr><tr><td align="left">switchInt(move _281)</td></tr></table>>];
    bb146__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_285)<br/>_285 = ((_252 as Continue).0: u64)<br/>_251 = _285<br/>StorageDead(_285)<br/>StorageLive(_286)<br/>_286 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_287)<br/>_287 = _2<br/></td></tr><tr><td align="left">_250 = vault_amount_to_if_shares(move _251, move _286, move _287)</td></tr></table>>];
    bb147__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_282)<br/>_282 = ((_252 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_284)<br/>_284 = _282<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _284)</td></tr></table>>];
    bb148__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">_249 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _250)</td></tr></table>>];
    bb150__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>_288 = discriminant(_249)<br/></td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb151__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_249 as Continue).0: u128)<br/>_248 = _292<br/>StorageDead(_292)<br/>StorageDead(_273)<br/>StorageDead(_259)<br/>StorageDead(_255)<br/>StorageDead(_252)<br/>StorageDead(_249)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_297)<br/>_297 = _248<br/></td></tr><tr><td align="left">_295 = &lt;u128 as SafeMath&gt;::safe_add(move _296, move _297)</td></tr></table>>];
    bb152__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_249 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_291)<br/>_291 = _289<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _291)</td></tr></table>>];
    bb153__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">_294 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _295)</td></tr></table>>];
    bb155__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>_298 = discriminant(_294)<br/></td></tr><tr><td align="left">switchInt(move _298)</td></tr></table>>];
    bb156__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_302)<br/>_302 = ((_294 as Continue).0: u128)<br/>_293 = _302<br/>StorageDead(_302)<br/>(((*_3).9: state::spot_market::InsuranceFund).1: u128) = move _293<br/>StorageDead(_293)<br/>StorageDead(_294)<br/>_245 = const ()<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_294 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_301)<br/>_301 = _299<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _301)</td></tr></table>>];
    bb158__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_293)<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_245)<br/>StorageLive(_303)<br/>_303 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = _180<br/></td></tr><tr><td align="left">_309 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _310)</td></tr></table>>];
    bb160__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/></td></tr><tr><td align="left">_308 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _309)</td></tr></table>>];
    bb161__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>_311 = discriminant(_308)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb162__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_315)<br/>_315 = ((_308 as Continue).0: u128)<br/>_307 = _315<br/>StorageDead(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>_357 = const _<br/>_317 = &amp;(*_357)<br/>_316 = &amp;(*_317)<br/>StorageLive(_319)<br/>_319 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_306 = update_revenue_pool_balances(move _307, move _316, move _319)</td></tr></table>>];
    bb163__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_312)<br/>_312 = ((_308 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_314)<br/>_314 = _312<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _314)</td></tr></table>>];
    bb164__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_307)<br/></td></tr><tr><td align="left">_305 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _306)</td></tr></table>>];
    bb166__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>_320 = discriminant(_305)<br/></td></tr><tr><td align="left">switchInt(move _320)</td></tr></table>>];
    bb167__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = ((_305 as Continue).0: ())<br/>_304 = _324<br/>StorageDead(_324)<br/>StorageDead(_317)<br/>StorageDead(_308)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = _4<br/>StorageLive(_340)<br/>_340 = ((*_3).42: u16)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = _180<br/></td></tr><tr><td align="left">_343 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _344)</td></tr></table>>];
    bb168__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_321)<br/>_321 = ((_305 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_323)<br/>_323 = _321<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _323)</td></tr></table>>];
    bb169__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_321)<br/>StorageDead(_317)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/></td></tr><tr><td align="left">_342 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _343)</td></tr></table>>];
    bb171__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>_345 = discriminant(_342)<br/></td></tr><tr><td align="left">switchInt(move _345)</td></tr></table>>];
    bb172__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_349)<br/>_349 = ((_342 as Continue).0: i64)<br/>_341 = _349<br/>StorageDead(_349)<br/>StorageLive(_350)<br/>_350 = (((*_3).9: state::spot_market::InsuranceFund).8: u32)<br/>StorageLive(_351)<br/>_351 = (((*_3).9: state::spot_market::InsuranceFund).7: u32)<br/>StorageLive(_352)<br/>_352 = _1<br/>StorageLive(_353)<br/>_353 = _2<br/>StorageLive(_354)<br/>_354 = _303<br/>StorageLive(_355)<br/>_355 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>_338 = InsuranceFundRecord { ts: move _339, spot_market_index: move _340, perp_market_index: const 0_u16, user_if_factor: move _350, total_if_factor: move _351, vault_amount_before: move _352, insurance_vault_amount_before: move _353, total_if_shares_before: move _354, total_if_shares_after: move _355, amount: move _341 }<br/>StorageDead(_355)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/>_337 = &amp;_338<br/>_336 = &amp;(*_337)<br/></td></tr><tr><td align="left">_335 = &lt;InsuranceFundRecord as anchor_lang::Event&gt;::data(move _336)</td></tr></table>>];
    bb173__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_346)<br/>_346 = ((_342 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_348)<br/>_348 = _346<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _348)</td></tr></table>>];
    bb174__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/>StorageDead(_336)<br/>StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_328)<br/>StorageDead(_327)<br/>StorageDead(_342)<br/>StorageDead(_338)<br/>StorageDead(_337)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_329)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>_334 = &amp;_335<br/>_333 = &amp;(*_334)<br/></td></tr><tr><td align="left">_332 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _333)</td></tr></table>>];
    bb176__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">_331 = &amp;(*_332)<br/>StorageDead(_333)<br/>_330 = [move _331]<br/>StorageDead(_331)<br/>_329 = &amp;_330<br/>_328 = &amp;(*_329)<br/>_327 = move _328 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_326 = solana_program::log::sol_log_data(move _327)</td></tr></table>>];
    bb177__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/></td></tr><tr><td align="left">drop(_335)</td></tr></table>>];
    bb178__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_338)<br/>StorageDead(_337)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_329)<br/>StorageDead(_326)<br/>_325 = const ()<br/>StorageDead(_325)<br/>StorageLive(_356)<br/>_356 = _180<br/></td></tr><tr><td align="left">_0 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _356)</td></tr></table>>];
    bb179__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_303)<br/>StorageDead(_235)<br/>StorageDead(_180)<br/>StorageDead(_67)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_255)<br/>StorageDead(_252)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left">return</td></tr></table>>];
    bb201__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">201 (cleanup)</td></tr><tr><td align="left">drop(_335)</td></tr></table>>];
    bb202__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">202 (cleanup)</td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb203__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb204__0_204 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_204 -> bb1__0_204 [label="return"];
    bb1__0_204 -> bb2__0_204 [label="return"];
    bb2__0_204 -> bb3__0_204 [label="0"];
    bb2__0_204 -> bb5__0_204 [label="1"];
    bb2__0_204 -> bb4__0_204 [label="otherwise"];
    bb3__0_204 -> bb8__0_204 [label="0"];
    bb3__0_204 -> bb7__0_204 [label="otherwise"];
    bb5__0_204 -> bb6__0_204 [label="return"];
    bb6__0_204 -> bb200__0_204 [label=""];
    bb7__0_204 -> bb200__0_204 [label=""];
    bb8__0_204 -> bb10__0_204 [label="0"];
    bb8__0_204 -> bb9__0_204 [label="otherwise"];
    bb9__0_204 -> bb18__0_204 [label=""];
    bb10__0_204 -> bb11__0_204 [label="return"];
    bb11__0_204 -> bb12__0_204 [label="return"];
    bb12__0_204 -> bb13__0_204 [label="return"];
    bb13__0_204 -> bb14__0_204 [label="return"];
    bb13__0_204 -> bb203__0_204 [label="unwind"];
    bb14__0_204 -> bb15__0_204 [label="return"];
    bb14__0_204 -> bb203__0_204 [label="unwind"];
    bb15__0_204 -> bb16__0_204 [label="return"];
    bb15__0_204 -> bb204__0_204 [label="unwind"];
    bb16__0_204 -> bb17__0_204 [label="return"];
    bb17__0_204 -> bb18__0_204 [label=""];
    bb18__0_204 -> bb19__0_204 [label="return"];
    bb19__0_204 -> bb20__0_204 [label="0"];
    bb19__0_204 -> bb21__0_204 [label="1"];
    bb19__0_204 -> bb4__0_204 [label="otherwise"];
    bb20__0_204 -> bb23__0_204 [label="return"];
    bb21__0_204 -> bb22__0_204 [label="return"];
    bb22__0_204 -> bb200__0_204 [label=""];
    bb23__0_204 -> bb24__0_204 [label="return"];
    bb24__0_204 -> bb25__0_204 [label="0"];
    bb24__0_204 -> bb26__0_204 [label="1"];
    bb24__0_204 -> bb4__0_204 [label="otherwise"];
    bb25__0_204 -> bb28__0_204 [label="return"];
    bb26__0_204 -> bb27__0_204 [label="return"];
    bb27__0_204 -> bb199__0_204 [label=""];
    bb28__0_204 -> bb29__0_204 [label="return"];
    bb29__0_204 -> bb30__0_204 [label="0"];
    bb29__0_204 -> bb31__0_204 [label="1"];
    bb29__0_204 -> bb4__0_204 [label="otherwise"];
    bb30__0_204 -> bb33__0_204 [label="return"];
    bb31__0_204 -> bb32__0_204 [label="return"];
    bb32__0_204 -> bb198__0_204 [label=""];
    bb33__0_204 -> bb34__0_204 [label="return"];
    bb34__0_204 -> bb35__0_204 [label="0"];
    bb34__0_204 -> bb36__0_204 [label="1"];
    bb34__0_204 -> bb4__0_204 [label="otherwise"];
    bb35__0_204 -> bb39__0_204 [label="0"];
    bb35__0_204 -> bb38__0_204 [label="otherwise"];
    bb36__0_204 -> bb37__0_204 [label="return"];
    bb37__0_204 -> bb197__0_204 [label=""];
    bb38__0_204 -> bb40__0_204 [label="return"];
    bb39__0_204 -> bb51__0_204 [label=""];
    bb40__0_204 -> bb41__0_204 [label="return"];
    bb41__0_204 -> bb42__0_204 [label="return"];
    bb42__0_204 -> bb43__0_204 [label="0"];
    bb42__0_204 -> bb44__0_204 [label="1"];
    bb42__0_204 -> bb4__0_204 [label="otherwise"];
    bb43__0_204 -> bb46__0_204 [label="return"];
    bb44__0_204 -> bb45__0_204 [label="return"];
    bb45__0_204 -> bb196__0_204 [label=""];
    bb46__0_204 -> bb47__0_204 [label="return"];
    bb47__0_204 -> bb48__0_204 [label="0"];
    bb47__0_204 -> bb49__0_204 [label="1"];
    bb47__0_204 -> bb4__0_204 [label="otherwise"];
    bb48__0_204 -> bb51__0_204 [label=""];
    bb49__0_204 -> bb50__0_204 [label="return"];
    bb50__0_204 -> bb196__0_204 [label=""];
    bb51__0_204 -> bb93__0_204 [label="0"];
    bb51__0_204 -> bb52__0_204 [label="otherwise"];
    bb52__0_204 -> bb54__0_204 [label="0"];
    bb52__0_204 -> bb53__0_204 [label="otherwise"];
    bb53__0_204 -> bb55__0_204 [label=""];
    bb54__0_204 -> bb55__0_204 [label=""];
    bb55__0_204 -> bb56__0_204 [label="return"];
    bb56__0_204 -> bb57__0_204 [label="return"];
    bb57__0_204 -> bb58__0_204 [label="0"];
    bb57__0_204 -> bb59__0_204 [label="1"];
    bb57__0_204 -> bb4__0_204 [label="otherwise"];
    bb58__0_204 -> bb61__0_204 [label="return"];
    bb59__0_204 -> bb60__0_204 [label="return"];
    bb60__0_204 -> bb192__0_204 [label=""];
    bb61__0_204 -> bb62__0_204 [label="return"];
    bb62__0_204 -> bb63__0_204 [label="0"];
    bb62__0_204 -> bb64__0_204 [label="1"];
    bb62__0_204 -> bb4__0_204 [label="otherwise"];
    bb63__0_204 -> bb66__0_204 [label="return"];
    bb64__0_204 -> bb65__0_204 [label="return"];
    bb65__0_204 -> bb192__0_204 [label=""];
    bb66__0_204 -> bb67__0_204 [label="return"];
    bb67__0_204 -> bb68__0_204 [label="0"];
    bb67__0_204 -> bb69__0_204 [label="1"];
    bb67__0_204 -> bb4__0_204 [label="otherwise"];
    bb68__0_204 -> bb71__0_204 [label="return"];
    bb69__0_204 -> bb70__0_204 [label="return"];
    bb70__0_204 -> bb193__0_204 [label=""];
    bb71__0_204 -> bb72__0_204 [label="return"];
    bb72__0_204 -> bb73__0_204 [label="0"];
    bb72__0_204 -> bb74__0_204 [label="1"];
    bb72__0_204 -> bb4__0_204 [label="otherwise"];
    bb73__0_204 -> bb76__0_204 [label="return"];
    bb74__0_204 -> bb75__0_204 [label="return"];
    bb75__0_204 -> bb190__0_204 [label=""];
    bb76__0_204 -> bb77__0_204 [label="return"];
    bb77__0_204 -> bb78__0_204 [label="0"];
    bb77__0_204 -> bb79__0_204 [label="1"];
    bb77__0_204 -> bb4__0_204 [label="otherwise"];
    bb78__0_204 -> bb81__0_204 [label="return"];
    bb79__0_204 -> bb80__0_204 [label="return"];
    bb80__0_204 -> bb190__0_204 [label=""];
    bb81__0_204 -> bb82__0_204 [label="return"];
    bb82__0_204 -> bb83__0_204 [label="return"];
    bb83__0_204 -> bb84__0_204 [label="0"];
    bb83__0_204 -> bb85__0_204 [label="1"];
    bb83__0_204 -> bb4__0_204 [label="otherwise"];
    bb84__0_204 -> bb87__0_204 [label="return"];
    bb85__0_204 -> bb86__0_204 [label="return"];
    bb86__0_204 -> bb191__0_204 [label=""];
    bb87__0_204 -> bb88__0_204 [label="return"];
    bb88__0_204 -> bb89__0_204 [label="0"];
    bb88__0_204 -> bb90__0_204 [label="1"];
    bb88__0_204 -> bb4__0_204 [label="otherwise"];
    bb89__0_204 -> bb92__0_204 [label="return"];
    bb90__0_204 -> bb91__0_204 [label="return"];
    bb91__0_204 -> bb195__0_204 [label=""];
    bb92__0_204 -> bb94__0_204 [label=""];
    bb93__0_204 -> bb94__0_204 [label=""];
    bb94__0_204 -> bb95__0_204 [label="return"];
    bb95__0_204 -> bb96__0_204 [label="return"];
    bb96__0_204 -> bb97__0_204 [label="0"];
    bb96__0_204 -> bb98__0_204 [label="1"];
    bb96__0_204 -> bb4__0_204 [label="otherwise"];
    bb97__0_204 -> bb100__0_204 [label="return"];
    bb98__0_204 -> bb99__0_204 [label="return"];
    bb99__0_204 -> bb188__0_204 [label=""];
    bb100__0_204 -> bb101__0_204 [label="return"];
    bb101__0_204 -> bb102__0_204 [label="0"];
    bb101__0_204 -> bb103__0_204 [label="1"];
    bb101__0_204 -> bb4__0_204 [label="otherwise"];
    bb102__0_204 -> bb106__0_204 [label="0"];
    bb102__0_204 -> bb105__0_204 [label="otherwise"];
    bb103__0_204 -> bb104__0_204 [label="return"];
    bb104__0_204 -> bb188__0_204 [label=""];
    bb105__0_204 -> bb108__0_204 [label="0"];
    bb105__0_204 -> bb107__0_204 [label="otherwise"];
    bb106__0_204 -> bb121__0_204 [label=""];
    bb107__0_204 -> bb116__0_204 [label=""];
    bb108__0_204 -> bb109__0_204 [label="return"];
    bb109__0_204 -> bb110__0_204 [label="return"];
    bb110__0_204 -> bb111__0_204 [label="return"];
    bb111__0_204 -> bb112__0_204 [label="return"];
    bb111__0_204 -> bb202__0_204 [label="unwind"];
    bb112__0_204 -> bb113__0_204 [label="return"];
    bb112__0_204 -> bb202__0_204 [label="unwind"];
    bb113__0_204 -> bb114__0_204 [label="return"];
    bb113__0_204 -> bb204__0_204 [label="unwind"];
    bb114__0_204 -> bb115__0_204 [label="return"];
    bb115__0_204 -> bb116__0_204 [label=""];
    bb116__0_204 -> bb117__0_204 [label="return"];
    bb117__0_204 -> bb118__0_204 [label="0"];
    bb117__0_204 -> bb119__0_204 [label="1"];
    bb117__0_204 -> bb4__0_204 [label="otherwise"];
    bb118__0_204 -> bb121__0_204 [label=""];
    bb119__0_204 -> bb120__0_204 [label="return"];
    bb120__0_204 -> bb189__0_204 [label=""];
    bb121__0_204 -> bb122__0_204 [label="return"];
    bb122__0_204 -> bb123__0_204 [label="return"];
    bb123__0_204 -> bb124__0_204 [label="0"];
    bb123__0_204 -> bb125__0_204 [label="1"];
    bb123__0_204 -> bb4__0_204 [label="otherwise"];
    bb124__0_204 -> bb128__0_204 [label="0"];
    bb124__0_204 -> bb127__0_204 [label="otherwise"];
    bb125__0_204 -> bb126__0_204 [label="return"];
    bb126__0_204 -> bb187__0_204 [label=""];
    bb127__0_204 -> bb129__0_204 [label="return"];
    bb128__0_204 -> bb159__0_204 [label=""];
    bb129__0_204 -> bb130__0_204 [label="return"];
    bb130__0_204 -> bb131__0_204 [label="0"];
    bb130__0_204 -> bb132__0_204 [label="1"];
    bb130__0_204 -> bb4__0_204 [label="otherwise"];
    bb131__0_204 -> bb134__0_204 [label="return"];
    bb132__0_204 -> bb133__0_204 [label="return"];
    bb133__0_204 -> bb184__0_204 [label=""];
    bb134__0_204 -> bb135__0_204 [label="return"];
    bb135__0_204 -> bb136__0_204 [label="0"];
    bb135__0_204 -> bb137__0_204 [label="1"];
    bb135__0_204 -> bb4__0_204 [label="otherwise"];
    bb136__0_204 -> bb139__0_204 [label="return"];
    bb137__0_204 -> bb138__0_204 [label="return"];
    bb138__0_204 -> bb184__0_204 [label=""];
    bb139__0_204 -> bb140__0_204 [label="return"];
    bb140__0_204 -> bb141__0_204 [label="0"];
    bb140__0_204 -> bb142__0_204 [label="1"];
    bb140__0_204 -> bb4__0_204 [label="otherwise"];
    bb141__0_204 -> bb144__0_204 [label="return"];
    bb142__0_204 -> bb143__0_204 [label="return"];
    bb143__0_204 -> bb182__0_204 [label=""];
    bb144__0_204 -> bb145__0_204 [label="return"];
    bb145__0_204 -> bb146__0_204 [label="0"];
    bb145__0_204 -> bb147__0_204 [label="1"];
    bb145__0_204 -> bb4__0_204 [label="otherwise"];
    bb146__0_204 -> bb149__0_204 [label="return"];
    bb147__0_204 -> bb148__0_204 [label="return"];
    bb148__0_204 -> bb182__0_204 [label=""];
    bb149__0_204 -> bb150__0_204 [label="return"];
    bb150__0_204 -> bb151__0_204 [label="0"];
    bb150__0_204 -> bb152__0_204 [label="1"];
    bb150__0_204 -> bb4__0_204 [label="otherwise"];
    bb151__0_204 -> bb154__0_204 [label="return"];
    bb152__0_204 -> bb153__0_204 [label="return"];
    bb153__0_204 -> bb183__0_204 [label=""];
    bb154__0_204 -> bb155__0_204 [label="return"];
    bb155__0_204 -> bb156__0_204 [label="0"];
    bb155__0_204 -> bb157__0_204 [label="1"];
    bb155__0_204 -> bb4__0_204 [label="otherwise"];
    bb156__0_204 -> bb159__0_204 [label=""];
    bb157__0_204 -> bb158__0_204 [label="return"];
    bb158__0_204 -> bb186__0_204 [label=""];
    bb159__0_204 -> bb160__0_204 [label="return"];
    bb160__0_204 -> bb161__0_204 [label="return"];
    bb161__0_204 -> bb162__0_204 [label="0"];
    bb161__0_204 -> bb163__0_204 [label="1"];
    bb161__0_204 -> bb4__0_204 [label="otherwise"];
    bb162__0_204 -> bb165__0_204 [label="return"];
    bb163__0_204 -> bb164__0_204 [label="return"];
    bb164__0_204 -> bb180__0_204 [label=""];
    bb165__0_204 -> bb166__0_204 [label="return"];
    bb166__0_204 -> bb167__0_204 [label="0"];
    bb166__0_204 -> bb168__0_204 [label="1"];
    bb166__0_204 -> bb4__0_204 [label="otherwise"];
    bb167__0_204 -> bb170__0_204 [label="return"];
    bb168__0_204 -> bb169__0_204 [label="return"];
    bb169__0_204 -> bb180__0_204 [label=""];
    bb170__0_204 -> bb171__0_204 [label="return"];
    bb171__0_204 -> bb172__0_204 [label="0"];
    bb171__0_204 -> bb173__0_204 [label="1"];
    bb171__0_204 -> bb4__0_204 [label="otherwise"];
    bb172__0_204 -> bb175__0_204 [label="return"];
    bb173__0_204 -> bb174__0_204 [label="return"];
    bb174__0_204 -> bb181__0_204 [label=""];
    bb175__0_204 -> bb176__0_204 [label="return"];
    bb175__0_204 -> bb201__0_204 [label="unwind"];
    bb176__0_204 -> bb177__0_204 [label="return"];
    bb176__0_204 -> bb201__0_204 [label="unwind"];
    bb177__0_204 -> bb178__0_204 [label="return"];
    bb177__0_204 -> bb204__0_204 [label="unwind"];
    bb178__0_204 -> bb179__0_204 [label="return"];
    bb179__0_204 -> bb200__0_204 [label=""];
    bb180__0_204 -> bb181__0_204 [label=""];
    bb181__0_204 -> bb187__0_204 [label=""];
    bb182__0_204 -> bb183__0_204 [label=""];
    bb183__0_204 -> bb185__0_204 [label=""];
    bb184__0_204 -> bb185__0_204 [label=""];
    bb185__0_204 -> bb186__0_204 [label=""];
    bb186__0_204 -> bb187__0_204 [label=""];
    bb187__0_204 -> bb189__0_204 [label=""];
    bb188__0_204 -> bb189__0_204 [label=""];
    bb189__0_204 -> bb198__0_204 [label=""];
    bb190__0_204 -> bb191__0_204 [label=""];
    bb191__0_204 -> bb194__0_204 [label=""];
    bb192__0_204 -> bb193__0_204 [label=""];
    bb193__0_204 -> bb194__0_204 [label=""];
    bb194__0_204 -> bb195__0_204 [label=""];
    bb195__0_204 -> bb198__0_204 [label=""];
    bb196__0_204 -> bb197__0_204 [label=""];
    bb197__0_204 -> bb198__0_204 [label=""];
    bb198__0_204 -> bb199__0_204 [label=""];
    bb199__0_204 -> bb200__0_204 [label=""];
    bb201__0_204 -> bb204__0_204 [label="return"];
    bb202__0_204 -> bb204__0_204 [label="return"];
    bb203__0_204 -> bb204__0_204 [label="return"];
}
