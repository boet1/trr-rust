// MIR for `math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info::{closure#0}` after PreCodegen

fn math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info::{closure#0}(_1: &mut {closure@programs/drift/src/math/margin.rs:623:18: 623:21}, _2: &SpotPosition) -> bool {
    debug p => _2;
    debug market_index => (*((*_1).0: &&u16));
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: u16;
    let mut _5: u16;
    let mut _6: bool;
    let mut _7: &state::user::SpotPosition;
    let mut _8: &&u16;
    let mut _9: &u16;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_2).4: u16);
        StorageLive(_5);
        _8 = deref_copy ((*_1).0: &&u16);
        _9 = deref_copy (*_8);
        _5 = (*_9);
        _3 = Eq(move _4, move _5);
        switchInt(move _3) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_2);
        _6 = SpotPosition::is_available(move _7) -> [return: bb3, unwind continue];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        _0 = const false;
        goto -> bb4;
    }

    bb3: {
        StorageDead(_7);
        _0 = Not(move _6);
        StorageDead(_6);
        goto -> bb4;
    }

    bb4: {
        StorageDead(_3);
        return;
    }
}
