digraph Mir_0_15937 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;InsuranceFundStakeRecord as BorshDeserialize&gt;::deserialize_reader(_1: &amp;ReErased mut R/#0) -&gt; std::result::Result&lt;state::events::InsuranceFundStakeRecord, std::io::Error&gt;<br align="left"/>let mut _2: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _3: i64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, i64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i64, std::io::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased mut R/#0;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _11: i64;<br align="left"/>let mut _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _14: std::result::Result&lt;anchor_lang::prelude::Pubkey, std::io::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased mut R/#0;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _20: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _21: state::events::StakeAction;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, state::events::StakeAction&gt;;<br align="left"/>let mut _23: std::result::Result&lt;state::events::StakeAction, std::io::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased mut R/#0;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _29: state::events::StakeAction;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased mut R/#0;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _38: u64;<br align="left"/>let mut _39: u16;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u16&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u16, std::io::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased mut R/#0;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _47: u16;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u64&gt;;<br align="left"/>let mut _50: std::result::Result&lt;u64, std::io::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased mut R/#0;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _56: u64;<br align="left"/>let mut _57: u128;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u128&gt;;<br align="left"/>let mut _59: std::result::Result&lt;u128, std::io::Error&gt;;<br align="left"/>let mut _60: &amp;ReErased mut R/#0;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _65: u128;<br align="left"/>let mut _66: u128;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u128&gt;;<br align="left"/>let mut _68: std::result::Result&lt;u128, std::io::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased mut R/#0;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _74: u128;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u128&gt;;<br align="left"/>let mut _77: std::result::Result&lt;u128, std::io::Error&gt;;<br align="left"/>let mut _78: &amp;ReErased mut R/#0;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _83: u128;<br align="left"/>let mut _84: u128;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u128&gt;;<br align="left"/>let mut _86: std::result::Result&lt;u128, std::io::Error&gt;;<br align="left"/>let mut _87: &amp;ReErased mut R/#0;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _92: u128;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u128&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u128, std::io::Error&gt;;<br align="left"/>let mut _96: &amp;ReErased mut R/#0;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _101: u128;<br align="left"/>let mut _102: u128;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, u128&gt;;<br align="left"/>let mut _104: std::result::Result&lt;u128, std::io::Error&gt;;<br align="left"/>let mut _105: &amp;ReErased mut R/#0;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _110: u128;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: bool;<br align="left"/>let mut _113: bool;<br align="left"/>let mut _114: bool;<br align="left"/>let mut _115: bool;<br align="left"/>let mut _116: bool;<br align="left"/>let mut _117: bool;<br align="left"/>let mut _118: bool;<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: bool;<br align="left"/>let mut _121: bool;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>debug reader =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>>;
    bb0__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_121 = const false<br/>_120 = const false<br/>_119 = const false<br/>_118 = const false<br/>_117 = const false<br/>_116 = const false<br/>_115 = const false<br/>_114 = const false<br/>_113 = const false<br/>_112 = const false<br/>_111 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_5 = &lt;i64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _6)</td></tr></table>>];
    bb1__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i64, std::io::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_121 = const true<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Continue).0: i64)<br/>_3 = _11<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::Pubkey as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _15)</td></tr></table>>];
    bb4__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;anchor_lang::prelude::Pubkey, std::io::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_120 = const true<br/>StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: anchor_lang::prelude::Pubkey)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_23 = &lt;StakeAction as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _24)</td></tr></table>>];
    bb10__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;StakeAction, std::io::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb13__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_119 = const true<br/>StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb14__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: state::events::StakeAction)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_32 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _33)</td></tr></table>>];
    bb15__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_28)<br/>_28 = move _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb16__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb18__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_118 = const true<br/>StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb19__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: u64)<br/>_30 = _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_41 = &lt;u16 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _42)</td></tr></table>>];
    bb20__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb21__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u16, std::io::Error&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb23__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_117 = const true<br/>StorageDead(_41)<br/>_43 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb24__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_40 as Continue).0: u16)<br/>_39 = _47<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_50 = &lt;u64 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _51)</td></tr></table>>];
    bb25__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb26__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;u64, std::io::Error&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb28__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_116 = const true<br/>StorageDead(_50)<br/>_52 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb29__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_49 as Continue).0: u64)<br/>_48 = _56<br/>StorageDead(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_59 = &lt;u128 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _60)</td></tr></table>>];
    bb30__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_55)<br/>_55 = move _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb31__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;u128, std::io::Error&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb33__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_115 = const true<br/>StorageDead(_59)<br/>_61 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb34__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_58 as Continue).0: u128)<br/>_57 = _65<br/>StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_68 = &lt;u128 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _69)</td></tr></table>>];
    bb35__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb36__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;u128, std::io::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb38__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_114 = const true<br/>StorageDead(_68)<br/>_70 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb39__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_67 as Continue).0: u128)<br/>_66 = _74<br/>StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_77 = &lt;u128 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _78)</td></tr></table>>];
    bb40__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_73)<br/>_73 = move _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb41__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;u128, std::io::Error&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb43__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_113 = const true<br/>StorageDead(_77)<br/>_79 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb44__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_76 as Continue).0: u128)<br/>_75 = _83<br/>StorageDead(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_86 = &lt;u128 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _87)</td></tr></table>>];
    bb45__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_82)<br/>_82 = move _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb46__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::result::Result&lt;u128, std::io::Error&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb48__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_112 = const true<br/>StorageDead(_86)<br/>_88 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb49__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_85 as Continue).0: u128)<br/>_84 = _92<br/>StorageDead(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_95 = &lt;u128 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _96)</td></tr></table>>];
    bb50__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = move ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_91)<br/>_91 = move _89<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb51__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u128, std::io::Error&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb53__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_111 = const true<br/>StorageDead(_95)<br/>_97 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb54__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_94 as Continue).0: u128)<br/>_93 = _101<br/>StorageDead(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_104 = &lt;u128 as BorshDeserialize&gt;::deserialize_reader::&lt;R&gt;(move _105)</td></tr></table>>];
    bb55__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_100)<br/>_100 = move _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb56__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;u128, std::io::Error&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb58__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_106 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb59__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_103 as Continue).0: u128)<br/>_102 = _110<br/>StorageDead(_110)<br/>_2 = InsuranceFundStakeRecord { ts: move _3, user_authority: move _12, action: move _21, amount: move _30, market_index: move _39, insurance_vault_amount_before: move _48, if_shares_before: move _57, user_if_shares_before: move _66, total_if_shares_before: move _75, if_shares_after: move _84, user_if_shares_after: move _93, total_if_shares_after: move _102 }<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>_0 = std::result::Result::&lt;InsuranceFundStakeRecord, std::io::Error&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>_122 = discriminant(_103)<br/>StorageDead(_103)<br/>_124 = discriminant(_94)<br/>_111 = const false<br/>StorageDead(_94)<br/>_126 = discriminant(_85)<br/>_112 = const false<br/>StorageDead(_85)<br/>_128 = discriminant(_76)<br/>_113 = const false<br/>StorageDead(_76)<br/>_130 = discriminant(_67)<br/>_114 = const false<br/>StorageDead(_67)<br/>_132 = discriminant(_58)<br/>_115 = const false<br/>StorageDead(_58)<br/>_134 = discriminant(_49)<br/>_116 = const false<br/>StorageDead(_49)<br/>_136 = discriminant(_40)<br/>_117 = const false<br/>StorageDead(_40)<br/>_138 = discriminant(_31)<br/>_118 = const false<br/>StorageDead(_31)<br/>_140 = discriminant(_22)<br/>_119 = const false<br/>StorageDead(_22)<br/>_142 = discriminant(_13)<br/>_120 = const false<br/>StorageDead(_13)<br/>_144 = discriminant(_4)<br/>_121 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = move ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_109)<br/>_109 = move _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InsuranceFundStakeRecord, std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb61__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageDead(_75)<br/>StorageDead(_66)<br/>StorageDead(_57)<br/>StorageDead(_48)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>_146 = discriminant(_103)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">return</td></tr></table>>];
    bb63__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb64__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_148 = discriminant(_94)<br/>_111 = const false<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_150 = discriminant(_85)<br/>_112 = const false<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_152 = discriminant(_76)<br/>_113 = const false<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_154 = discriminant(_67)<br/>_114 = const false<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_156 = discriminant(_58)<br/>_115 = const false<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_158 = discriminant(_49)<br/>_116 = const false<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_160 = discriminant(_40)<br/>_117 = const false<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_162 = discriminant(_31)<br/>_118 = const false<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_164 = discriminant(_22)<br/>_119 = const false<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_166 = discriminant(_13)<br/>_120 = const false<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_168 = discriminant(_4)<br/>_121 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left" balign="left">_170 = discriminant(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left" balign="left">_171 = discriminant(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left" balign="left">_172 = discriminant(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_173 = discriminant(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_174 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_175 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_176 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left" balign="left">_177 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left" balign="left">_178 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left" balign="left">_179 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left" balign="left">_180 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_15937 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left" balign="left">_181 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_15937 -> bb1__0_15937 [label="return"];
    bb1__0_15937 -> bb2__0_15937 [label="return"];
    bb1__0_15937 -> bb63__0_15937 [label="unwind"];
    bb2__0_15937 -> bb3__0_15937 [label="0"];
    bb2__0_15937 -> bb5__0_15937 [label="1"];
    bb2__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb3__0_15937 -> bb7__0_15937 [label="return"];
    bb3__0_15937 -> bb86__0_15937 [label="unwind"];
    bb5__0_15937 -> bb6__0_15937 [label="return"];
    bb5__0_15937 -> bb86__0_15937 [label="unwind"];
    bb6__0_15937 -> bb74__0_15937 [label=""];
    bb7__0_15937 -> bb8__0_15937 [label="return"];
    bb7__0_15937 -> bb86__0_15937 [label="unwind"];
    bb8__0_15937 -> bb9__0_15937 [label="0"];
    bb8__0_15937 -> bb10__0_15937 [label="1"];
    bb8__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb9__0_15937 -> bb12__0_15937 [label="return"];
    bb9__0_15937 -> bb85__0_15937 [label="unwind"];
    bb10__0_15937 -> bb11__0_15937 [label="return"];
    bb10__0_15937 -> bb85__0_15937 [label="unwind"];
    bb11__0_15937 -> bb73__0_15937 [label=""];
    bb12__0_15937 -> bb13__0_15937 [label="return"];
    bb12__0_15937 -> bb85__0_15937 [label="unwind"];
    bb13__0_15937 -> bb14__0_15937 [label="0"];
    bb13__0_15937 -> bb15__0_15937 [label="1"];
    bb13__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb14__0_15937 -> bb17__0_15937 [label="return"];
    bb14__0_15937 -> bb84__0_15937 [label="unwind"];
    bb15__0_15937 -> bb16__0_15937 [label="return"];
    bb15__0_15937 -> bb84__0_15937 [label="unwind"];
    bb16__0_15937 -> bb72__0_15937 [label=""];
    bb17__0_15937 -> bb18__0_15937 [label="return"];
    bb17__0_15937 -> bb84__0_15937 [label="unwind"];
    bb18__0_15937 -> bb19__0_15937 [label="0"];
    bb18__0_15937 -> bb20__0_15937 [label="1"];
    bb18__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb19__0_15937 -> bb22__0_15937 [label="return"];
    bb19__0_15937 -> bb83__0_15937 [label="unwind"];
    bb20__0_15937 -> bb21__0_15937 [label="return"];
    bb20__0_15937 -> bb83__0_15937 [label="unwind"];
    bb21__0_15937 -> bb71__0_15937 [label=""];
    bb22__0_15937 -> bb23__0_15937 [label="return"];
    bb22__0_15937 -> bb83__0_15937 [label="unwind"];
    bb23__0_15937 -> bb24__0_15937 [label="0"];
    bb23__0_15937 -> bb25__0_15937 [label="1"];
    bb23__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb24__0_15937 -> bb27__0_15937 [label="return"];
    bb24__0_15937 -> bb82__0_15937 [label="unwind"];
    bb25__0_15937 -> bb26__0_15937 [label="return"];
    bb25__0_15937 -> bb82__0_15937 [label="unwind"];
    bb26__0_15937 -> bb70__0_15937 [label=""];
    bb27__0_15937 -> bb28__0_15937 [label="return"];
    bb27__0_15937 -> bb82__0_15937 [label="unwind"];
    bb28__0_15937 -> bb29__0_15937 [label="0"];
    bb28__0_15937 -> bb30__0_15937 [label="1"];
    bb28__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb29__0_15937 -> bb32__0_15937 [label="return"];
    bb29__0_15937 -> bb81__0_15937 [label="unwind"];
    bb30__0_15937 -> bb31__0_15937 [label="return"];
    bb30__0_15937 -> bb81__0_15937 [label="unwind"];
    bb31__0_15937 -> bb69__0_15937 [label=""];
    bb32__0_15937 -> bb33__0_15937 [label="return"];
    bb32__0_15937 -> bb81__0_15937 [label="unwind"];
    bb33__0_15937 -> bb34__0_15937 [label="0"];
    bb33__0_15937 -> bb35__0_15937 [label="1"];
    bb33__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb34__0_15937 -> bb37__0_15937 [label="return"];
    bb34__0_15937 -> bb80__0_15937 [label="unwind"];
    bb35__0_15937 -> bb36__0_15937 [label="return"];
    bb35__0_15937 -> bb80__0_15937 [label="unwind"];
    bb36__0_15937 -> bb68__0_15937 [label=""];
    bb37__0_15937 -> bb38__0_15937 [label="return"];
    bb37__0_15937 -> bb80__0_15937 [label="unwind"];
    bb38__0_15937 -> bb39__0_15937 [label="0"];
    bb38__0_15937 -> bb40__0_15937 [label="1"];
    bb38__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb39__0_15937 -> bb42__0_15937 [label="return"];
    bb39__0_15937 -> bb79__0_15937 [label="unwind"];
    bb40__0_15937 -> bb41__0_15937 [label="return"];
    bb40__0_15937 -> bb79__0_15937 [label="unwind"];
    bb41__0_15937 -> bb67__0_15937 [label=""];
    bb42__0_15937 -> bb43__0_15937 [label="return"];
    bb42__0_15937 -> bb79__0_15937 [label="unwind"];
    bb43__0_15937 -> bb44__0_15937 [label="0"];
    bb43__0_15937 -> bb45__0_15937 [label="1"];
    bb43__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb44__0_15937 -> bb47__0_15937 [label="return"];
    bb44__0_15937 -> bb78__0_15937 [label="unwind"];
    bb45__0_15937 -> bb46__0_15937 [label="return"];
    bb45__0_15937 -> bb78__0_15937 [label="unwind"];
    bb46__0_15937 -> bb66__0_15937 [label=""];
    bb47__0_15937 -> bb48__0_15937 [label="return"];
    bb47__0_15937 -> bb78__0_15937 [label="unwind"];
    bb48__0_15937 -> bb49__0_15937 [label="0"];
    bb48__0_15937 -> bb50__0_15937 [label="1"];
    bb48__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb49__0_15937 -> bb52__0_15937 [label="return"];
    bb49__0_15937 -> bb77__0_15937 [label="unwind"];
    bb50__0_15937 -> bb51__0_15937 [label="return"];
    bb50__0_15937 -> bb77__0_15937 [label="unwind"];
    bb51__0_15937 -> bb65__0_15937 [label=""];
    bb52__0_15937 -> bb53__0_15937 [label="return"];
    bb52__0_15937 -> bb77__0_15937 [label="unwind"];
    bb53__0_15937 -> bb54__0_15937 [label="0"];
    bb53__0_15937 -> bb55__0_15937 [label="1"];
    bb53__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb54__0_15937 -> bb57__0_15937 [label="return"];
    bb54__0_15937 -> bb76__0_15937 [label="unwind"];
    bb55__0_15937 -> bb56__0_15937 [label="return"];
    bb55__0_15937 -> bb76__0_15937 [label="unwind"];
    bb56__0_15937 -> bb64__0_15937 [label=""];
    bb57__0_15937 -> bb58__0_15937 [label="return"];
    bb57__0_15937 -> bb76__0_15937 [label="unwind"];
    bb58__0_15937 -> bb59__0_15937 [label="0"];
    bb58__0_15937 -> bb60__0_15937 [label="1"];
    bb58__0_15937 -> bb4__0_15937 [label="otherwise"];
    bb59__0_15937 -> bb62__0_15937 [label=""];
    bb60__0_15937 -> bb61__0_15937 [label="return"];
    bb60__0_15937 -> bb75__0_15937 [label="unwind"];
    bb61__0_15937 -> bb64__0_15937 [label=""];
    bb64__0_15937 -> bb65__0_15937 [label=""];
    bb65__0_15937 -> bb66__0_15937 [label=""];
    bb66__0_15937 -> bb67__0_15937 [label=""];
    bb67__0_15937 -> bb68__0_15937 [label=""];
    bb68__0_15937 -> bb69__0_15937 [label=""];
    bb69__0_15937 -> bb70__0_15937 [label=""];
    bb70__0_15937 -> bb71__0_15937 [label=""];
    bb71__0_15937 -> bb72__0_15937 [label=""];
    bb72__0_15937 -> bb73__0_15937 [label=""];
    bb73__0_15937 -> bb74__0_15937 [label=""];
    bb74__0_15937 -> bb62__0_15937 [label=""];
    bb75__0_15937 -> bb76__0_15937 [label=""];
    bb76__0_15937 -> bb77__0_15937 [label=""];
    bb77__0_15937 -> bb78__0_15937 [label=""];
    bb78__0_15937 -> bb79__0_15937 [label=""];
    bb79__0_15937 -> bb80__0_15937 [label=""];
    bb80__0_15937 -> bb81__0_15937 [label=""];
    bb81__0_15937 -> bb82__0_15937 [label=""];
    bb82__0_15937 -> bb83__0_15937 [label=""];
    bb83__0_15937 -> bb84__0_15937 [label=""];
    bb84__0_15937 -> bb85__0_15937 [label=""];
    bb85__0_15937 -> bb86__0_15937 [label=""];
    bb86__0_15937 -> bb63__0_15937 [label=""];
}
