digraph Mir_0_6318 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;admin::InitializePerpMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InitializePerpMarketBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::admin::InitializePerpMarketBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::admin::InitializePerpMarket&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut instructions::admin::InitializePerpMarketBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: Closure(DefId(0:6319 ~ drift[d311]::instructions::admin::{impl#65}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _21: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: &amp;ReErased mut instructions::admin::InitializePerpMarketBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: Closure(DefId(0:6320 ~ drift[d311]::instructions::admin::{impl#65}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _36: ();<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: anchor_lang::error::Error;<br align="left"/>let mut _41: anchor_lang::error::ErrorCode;<br align="left"/>let _42: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _43: usize;<br align="left"/>let mut _44: usize;<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _47: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _48: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _49: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _50: std::ops::RangeFrom&lt;usize&gt;;<br align="left"/>let _51: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _56: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [u8];<br align="left"/>let mut _58: &amp;ReErased mut instructions::admin::InitializePerpMarketBumps;<br align="left"/>let mut _59: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _60: Closure(DefId(0:6321 ~ drift[d311]::instructions::admin::{impl#65}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _65: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _66: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [u8];<br align="left"/>let mut _73: &amp;ReErased mut instructions::admin::InitializePerpMarketBumps;<br align="left"/>let mut _74: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _75: Closure(DefId(0:6322 ~ drift[d311]::instructions::admin::{impl#65}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let _81: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;&gt;;<br align="left"/>let mut _83: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _85: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _86: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _87: &amp;ReErased [u8];<br align="left"/>let mut _88: &amp;ReErased mut instructions::admin::InitializePerpMarketBumps;<br align="left"/>let mut _89: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _90: Closure(DefId(0:6323 ~ drift[d311]::instructions::admin::{impl#65}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _95: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let _96: anchor_lang::prelude::Rent;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _98: std::result::Result&lt;anchor_lang::prelude::Rent, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _103: anchor_lang::prelude::Rent;<br align="left"/>let _104: anchor_lang::prelude::Pubkey;<br align="left"/>let _105: u8;<br align="left"/>let mut _106: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _107: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _108: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _109: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _110: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _111: &amp;ReErased [u8];<br align="left"/>let mut _112: &amp;ReErased [u8; 11_usize];<br align="left"/>let _113: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _114: &amp;ReErased [u8];<br align="left"/>let _115: &amp;ReErased [u8];<br align="left"/>let mut _116: &amp;ReErased [u8; 2_usize];<br align="left"/>let _117: [u8; 2_usize];<br align="left"/>let mut _118: u16;<br align="left"/>let mut _119: &amp;ReErased state::state::State;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _121: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _122: u8;<br align="left"/>let _123: ();<br align="left"/>let mut _124: bool;<br align="left"/>let mut _125: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _126: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _127: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: anchor_lang::error::Error;<br align="left"/>let mut _131: anchor_lang::error::Error;<br align="left"/>let mut _132: anchor_lang::error::Error;<br align="left"/>let mut _133: anchor_lang::error::ErrorCode;<br align="left"/>let mut _134: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _135: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _136: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _137: anchor_lang::prelude::Pubkey;<br align="left"/>let _138: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _139: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _141: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _142: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _143: usize;<br align="left"/>let _144: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _145: bool;<br align="left"/>let mut _146: bool;<br align="left"/>let mut _147: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _148: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _149: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _150: anchor_lang::prelude::Pubkey;<br align="left"/>let _151: u64;<br align="left"/>let mut _152: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _153: ();<br align="left"/>let mut _154: bool;<br align="left"/>let mut _155: u64;<br align="left"/>let _156: usize;<br align="left"/>let _157: u64;<br align="left"/>let mut _158: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _159: usize;<br align="left"/>let _160: anchor_lang::system_program::CreateAccount&lt;ReErased&gt;;<br align="left"/>let mut _161: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _162: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _163: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _165: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::CreateAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _166: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _168: anchor_lang::system_program::CreateAccount&lt;ReErased&gt;;<br align="left"/>let _169: ();<br align="left"/>let mut _170: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _171: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _172: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::CreateAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _173: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::CreateAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _174: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _175: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _176: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _177: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _178: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _179: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _180: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _181: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _182: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _183: &amp;ReErased [u8];<br align="left"/>let mut _184: &amp;ReErased [u8; 11_usize];<br align="left"/>let _185: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _186: &amp;ReErased [u8];<br align="left"/>let mut _187: &amp;ReErased [u8; 2_usize];<br align="left"/>let _188: [u8; 2_usize];<br align="left"/>let mut _189: u16;<br align="left"/>let mut _190: &amp;ReErased state::state::State;<br align="left"/>let mut _191: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _192: &amp;ReErased [u8];<br align="left"/>let _193: &amp;ReErased [u8];<br align="left"/>let _194: &amp;ReErased [u8];<br align="left"/>let mut _195: &amp;ReErased [u8; 1_usize];<br align="left"/>let _196: [u8; 1_usize];<br align="left"/>let mut _197: u8;<br align="left"/>let mut _198: std::ops::RangeFull;<br align="left"/>let mut _199: std::ops::RangeFull;<br align="left"/>let mut _200: u64;<br align="left"/>let mut _201: u64;<br align="left"/>let mut _202: usize;<br align="left"/>let mut _203: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _204: isize;<br align="left"/>let _205: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _206: !;<br align="left"/>let mut _207: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _208: ();<br align="left"/>let _209: ();<br align="left"/>let mut _210: bool;<br align="left"/>let mut _211: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _212: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _213: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _215: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _216: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: anchor_lang::error::Error;<br align="left"/>let mut _219: anchor_lang::error::Error;<br align="left"/>let mut _220: anchor_lang::error::AnchorError;<br align="left"/>let mut _221: std::string::String;<br align="left"/>let mut _222: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _223: anchor_lang::error::ErrorCode;<br align="left"/>let mut _224: u32;<br align="left"/>let mut _225: anchor_lang::error::ErrorCode;<br align="left"/>let mut _226: std::string::String;<br align="left"/>let mut _227: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _228: anchor_lang::error::ErrorCode;<br align="left"/>let mut _229: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _230: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _231: anchor_lang::error::Source;<br align="left"/>let mut _232: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _233: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _234: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _235: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _236: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _237: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _238: u64;<br align="left"/>let mut _239: u64;<br align="left"/>let mut _240: u64;<br align="left"/>let mut _241: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _242: usize;<br align="left"/>let mut _243: u64;<br align="left"/>let _244: ();<br align="left"/>let mut _245: bool;<br align="left"/>let mut _246: u64;<br align="left"/>let _247: anchor_lang::system_program::Transfer&lt;ReErased&gt;;<br align="left"/>let mut _248: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _249: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _250: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _251: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _252: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Transfer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _253: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _254: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _255: anchor_lang::system_program::Transfer&lt;ReErased&gt;;<br align="left"/>let _256: ();<br align="left"/>let mut _257: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _258: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _259: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Transfer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _260: u64;<br align="left"/>let mut _261: isize;<br align="left"/>let _262: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _263: !;<br align="left"/>let mut _264: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _265: ();<br align="left"/>let _266: anchor_lang::system_program::Allocate&lt;ReErased&gt;;<br align="left"/>let mut _267: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _268: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _269: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Allocate&lt;ReErased&gt;&gt;;<br align="left"/>let mut _270: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _271: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _272: anchor_lang::system_program::Allocate&lt;ReErased&gt;;<br align="left"/>let _273: ();<br align="left"/>let mut _274: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _275: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _276: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Allocate&lt;ReErased&gt;&gt;;<br align="left"/>let mut _277: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Allocate&lt;ReErased&gt;&gt;;<br align="left"/>let mut _278: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _279: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _280: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _281: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _282: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _283: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _284: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _285: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _286: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _287: &amp;ReErased [u8];<br align="left"/>let mut _288: &amp;ReErased [u8; 11_usize];<br align="left"/>let _289: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _290: &amp;ReErased [u8];<br align="left"/>let mut _291: &amp;ReErased [u8; 2_usize];<br align="left"/>let _292: [u8; 2_usize];<br align="left"/>let mut _293: u16;<br align="left"/>let mut _294: &amp;ReErased state::state::State;<br align="left"/>let mut _295: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _296: &amp;ReErased [u8];<br align="left"/>let _297: &amp;ReErased [u8];<br align="left"/>let _298: &amp;ReErased [u8];<br align="left"/>let mut _299: &amp;ReErased [u8; 1_usize];<br align="left"/>let _300: [u8; 1_usize];<br align="left"/>let mut _301: u8;<br align="left"/>let mut _302: std::ops::RangeFull;<br align="left"/>let mut _303: std::ops::RangeFull;<br align="left"/>let mut _304: u64;<br align="left"/>let mut _305: usize;<br align="left"/>let mut _306: isize;<br align="left"/>let _307: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _308: !;<br align="left"/>let mut _309: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _310: ();<br align="left"/>let _311: anchor_lang::system_program::Assign&lt;ReErased&gt;;<br align="left"/>let mut _312: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _313: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _314: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Assign&lt;ReErased&gt;&gt;;<br align="left"/>let mut _315: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _316: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _317: anchor_lang::system_program::Assign&lt;ReErased&gt;;<br align="left"/>let _318: ();<br align="left"/>let mut _319: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _320: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _321: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Assign&lt;ReErased&gt;&gt;;<br align="left"/>let mut _322: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Assign&lt;ReErased&gt;&gt;;<br align="left"/>let mut _323: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _324: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _325: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _326: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _327: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _328: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _329: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _330: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _331: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _332: &amp;ReErased [u8];<br align="left"/>let mut _333: &amp;ReErased [u8; 11_usize];<br align="left"/>let _334: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _335: &amp;ReErased [u8];<br align="left"/>let mut _336: &amp;ReErased [u8; 2_usize];<br align="left"/>let _337: [u8; 2_usize];<br align="left"/>let mut _338: u16;<br align="left"/>let mut _339: &amp;ReErased state::state::State;<br align="left"/>let mut _340: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _341: &amp;ReErased [u8];<br align="left"/>let _342: &amp;ReErased [u8];<br align="left"/>let _343: &amp;ReErased [u8];<br align="left"/>let mut _344: &amp;ReErased [u8; 1_usize];<br align="left"/>let _345: [u8; 1_usize];<br align="left"/>let mut _346: u8;<br align="left"/>let mut _347: std::ops::RangeFull;<br align="left"/>let mut _348: std::ops::RangeFull;<br align="left"/>let mut _349: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _350: isize;<br align="left"/>let _351: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _352: !;<br align="left"/>let mut _353: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _354: ();<br align="left"/>let mut _355: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _356: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _357: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _358: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _359: isize;<br align="left"/>let _360: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _361: anchor_lang::error::Error;<br align="left"/>let mut _362: !;<br align="left"/>let mut _363: anchor_lang::error::Error;<br align="left"/>let mut _364: anchor_lang::error::Error;<br align="left"/>let mut _365: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _366: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _367: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _368: isize;<br align="left"/>let _369: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _370: anchor_lang::error::Error;<br align="left"/>let mut _371: !;<br align="left"/>let mut _372: anchor_lang::error::Error;<br align="left"/>let mut _373: anchor_lang::error::Error;<br align="left"/>let _374: ();<br align="left"/>let mut _375: bool;<br align="left"/>let _376: ();<br align="left"/>let mut _377: bool;<br align="left"/>let mut _378: usize;<br align="left"/>let mut _379: usize;<br align="left"/>let mut _380: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _381: !;<br align="left"/>let mut _382: anchor_lang::error::Error;<br align="left"/>let mut _383: anchor_lang::error::Error;<br align="left"/>let mut _384: anchor_lang::error::Error;<br align="left"/>let mut _385: anchor_lang::error::ErrorCode;<br align="left"/>let mut _386: (usize, usize);<br align="left"/>let mut _387: usize;<br align="left"/>let mut _388: usize;<br align="left"/>let mut _389: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _390: ();<br align="left"/>let mut _391: bool;<br align="left"/>let mut _392: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _393: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _394: !;<br align="left"/>let mut _395: anchor_lang::error::Error;<br align="left"/>let mut _396: anchor_lang::error::Error;<br align="left"/>let mut _397: anchor_lang::error::Error;<br align="left"/>let mut _398: anchor_lang::error::ErrorCode;<br align="left"/>let mut _399: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _400: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _401: anchor_lang::prelude::Pubkey;<br align="left"/>let _402: u64;<br align="left"/>let mut _403: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _404: usize;<br align="left"/>let mut _405: bool;<br align="left"/>let mut _406: u64;<br align="left"/>let mut _407: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _408: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _409: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _410: u64;<br align="left"/>let mut _411: !;<br align="left"/>let mut _412: anchor_lang::error::Error;<br align="left"/>let mut _413: anchor_lang::error::Error;<br align="left"/>let mut _414: anchor_lang::error::ErrorCode;<br align="left"/>let _415: ();<br align="left"/>let mut _416: bool;<br align="left"/>let mut _417: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _418: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _419: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _420: !;<br align="left"/>let mut _421: anchor_lang::error::Error;<br align="left"/>let mut _422: anchor_lang::error::Error;<br align="left"/>let mut _423: anchor_lang::error::ErrorCode;<br align="left"/>let _424: ();<br align="left"/>let mut _425: bool;<br align="left"/>let mut _426: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _427: u64;<br align="left"/>let mut _428: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _429: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _430: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _431: usize;<br align="left"/>let mut _432: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, usize&gt;;<br align="left"/>let mut _433: std::result::Result&lt;usize, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _434: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _435: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _436: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _437: isize;<br align="left"/>let _438: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _439: !;<br align="left"/>let mut _440: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _441: usize;<br align="left"/>let mut _442: !;<br align="left"/>let mut _443: anchor_lang::error::Error;<br align="left"/>let mut _444: anchor_lang::error::Error;<br align="left"/>let mut _445: anchor_lang::error::ErrorCode;<br align="left"/>let _446: ();<br align="left"/>let mut _447: bool;<br align="left"/>let mut _448: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _449: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _450: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _451: !;<br align="left"/>let mut _452: anchor_lang::error::Error;<br align="left"/>let mut _453: anchor_lang::error::Error;<br align="left"/>let mut _454: anchor_lang::error::ErrorCode;<br align="left"/>let _455: ();<br align="left"/>let mut _456: bool;<br align="left"/>let mut _457: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _458: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _459: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _460: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _461: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _462: bool;<br align="left"/>let mut _463: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _464: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _465: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _467: &amp;ReErased state::state::State;<br align="left"/>let mut _468: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _469: !;<br align="left"/>let mut _470: anchor_lang::error::Error;<br align="left"/>let mut _471: anchor_lang::error::Error;<br align="left"/>let mut _472: anchor_lang::error::ErrorCode;<br align="left"/>let _473: ();<br align="left"/>let mut _474: bool;<br align="left"/>let mut _475: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _476: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _477: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _478: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _479: !;<br align="left"/>let mut _480: anchor_lang::error::Error;<br align="left"/>let mut _481: anchor_lang::error::Error;<br align="left"/>let mut _482: anchor_lang::error::ErrorCode;<br align="left"/>let mut _483: instructions::admin::InitializePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _484: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _485: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _486: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _487: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _488: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _489: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _490: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _491: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _492: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _493: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _494: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _495: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _496: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _497: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _498: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _499: bool;<br align="left"/>let mut _500: bool;<br align="left"/>let mut _501: bool;<br align="left"/>let mut _502: bool;<br align="left"/>let mut _503: bool;<br align="left"/>let mut _504: bool;<br align="left"/>let mut _505: bool;<br align="left"/>let mut _506: bool;<br align="left"/>let mut _507: bool;<br align="left"/>let mut _508: bool;<br align="left"/>let mut _509: bool;<br align="left"/>let mut _510: isize;<br align="left"/>let mut _511: isize;<br align="left"/>let mut _512: isize;<br align="left"/>let mut _513: isize;<br align="left"/>let mut _514: isize;<br align="left"/>let mut _515: isize;<br align="left"/>let mut _516: isize;<br align="left"/>let mut _517: isize;<br align="left"/>let mut _518: isize;<br align="left"/>let mut _519: isize;<br align="left"/>let mut _520: isize;<br align="left"/>let mut _521: isize;<br align="left"/>let mut _522: isize;<br align="left"/>let mut _523: isize;<br align="left"/>let mut _524: isize;<br align="left"/>let mut _525: isize;<br align="left"/>let mut _526: isize;<br align="left"/>let mut _527: isize;<br align="left"/>let mut _528: isize;<br align="left"/>let mut _529: isize;<br align="left"/>let mut _530: isize;<br align="left"/>let mut _531: isize;<br align="left"/>let mut _532: isize;<br align="left"/>let mut _533: isize;<br align="left"/>let mut _534: isize;<br align="left"/>let mut _535: isize;<br align="left"/>let mut _536: isize;<br align="left"/>let mut _537: isize;<br align="left"/>let mut _538: isize;<br align="left"/>let mut _539: isize;<br align="left"/>let mut _540: isize;<br align="left"/>let mut _541: isize;<br align="left"/>let mut _542: isize;<br align="left"/>let mut _543: isize;<br align="left"/>let mut _544: isize;<br align="left"/>let mut _545: isize;<br align="left"/>let mut _546: isize;<br align="left"/>let mut _547: isize;<br align="left"/>let mut _548: isize;<br align="left"/>let mut _549: isize;<br align="left"/>let mut _550: isize;<br align="left"/>let mut _551: isize;<br align="left"/>let mut _552: isize;<br align="left"/>let mut _553: isize;<br align="left"/>let mut _554: isize;<br align="left"/>let mut _555: isize;<br align="left"/>let mut _556: isize;<br align="left"/>let mut _557: isize;<br align="left"/>let mut _558: isize;<br align="left"/>let mut _559: isize;<br align="left"/>let mut _560: isize;<br align="left"/>let mut _561: isize;<br align="left"/>let mut _562: isize;<br align="left"/>let mut _563: isize;<br align="left"/>let mut _564: isize;<br align="left"/>let mut _565: isize;<br align="left"/>let mut _566: isize;<br align="left"/>let mut _567: isize;<br align="left"/>let mut _568: isize;<br align="left"/>let mut _569: isize;<br align="left"/>let mut _570: isize;<br align="left"/>let mut _571: isize;<br align="left"/>let mut _572: isize;<br align="left"/>let mut _573: isize;<br align="left"/>let mut _574: isize;<br align="left"/>let mut _575: isize;<br align="left"/>let mut _576: isize;<br align="left"/>let mut _577: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _578: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _579: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _580: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _581: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug admin =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug state =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug perp_market =&gt; _42;<br align="left"/>debug oracle =&gt; _51;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug rent =&gt; _66;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug system_program =&gt; _81;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug __anchor_rent =&gt; _96;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug __pda_address =&gt; _104;<br align="left"/>debug __bump =&gt; _105;<br align="left"/>debug perp_market =&gt; _138;<br align="left"/>debug actual_field =&gt; _139;<br align="left"/>debug actual_owner =&gt; _142;<br align="left"/>debug space =&gt; _143;<br align="left"/>debug pa =&gt; _144;<br align="left"/>debug __current_lamports =&gt; _151;<br align="left"/>debug space =&gt; _156;<br align="left"/>debug lamports =&gt; _157;<br align="left"/>debug cpi_accounts =&gt; _160;<br align="left"/>debug cpi_context =&gt; _165;<br align="left"/>debug residual =&gt; _205;<br align="left"/>debug val =&gt; _208;<br align="left"/>debug required_lamports =&gt; _238;<br align="left"/>debug cpi_accounts =&gt; _247;<br align="left"/>debug cpi_context =&gt; _252;<br align="left"/>debug residual =&gt; _262;<br align="left"/>debug val =&gt; _265;<br align="left"/>debug cpi_accounts =&gt; _266;<br align="left"/>debug cpi_context =&gt; _269;<br align="left"/>debug residual =&gt; _307;<br align="left"/>debug val =&gt; _310;<br align="left"/>debug cpi_accounts =&gt; _311;<br align="left"/>debug cpi_context =&gt; _314;<br align="left"/>debug residual =&gt; _351;<br align="left"/>debug val =&gt; _354;<br align="left"/>debug val =&gt; _360;<br align="left"/>debug e =&gt; _361;<br align="left"/>debug val =&gt; _369;<br align="left"/>debug e =&gt; _370;<br align="left"/>debug required_lamports =&gt; _402;<br align="left"/>debug residual =&gt; _438;<br align="left"/>debug val =&gt; _441;<br align="left"/>>;
    bb0__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_509 = const false<br/>_508 = const false<br/>_507 = const false<br/>_506 = const false<br/>_505 = const false<br/>_504 = const false<br/>_503 = const false<br/>_502 = const false<br/>_501 = const false<br/>_500 = const false<br/>_499 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;mut (*_4)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InitializePerpMarketBumps&gt;&gt;::try_accounts(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>_15 = {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}&gt;(move _9, move _15)</td></tr></table>>];
    bb2__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_7 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_6 = move _20<br/>StorageDead(_20)<br/>_510 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_1)<br/>StorageLive(_26)<br/>_26 = &amp;mut (*_2)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_4)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_24 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, InitializePerpMarketBumps&gt;&gt;::try_accounts(move _25, move _26, move _27, move _28, move _29)</td></tr></table>>];
    bb5__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_562 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}&gt;(move _24, move _30)</td></tr></table>>];
    bb9__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_31 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_22 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_21 = move _35<br/>StorageDead(_35)<br/>_512 = discriminant(_22)<br/>StorageDead(_22)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_493 = deref_copy (*_2)<br/>_38 = &amp;(*_493)<br/></td></tr><tr><td align="left">_37 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::is_empty(move _38)</td></tr></table>>];
    bb12__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_560 = discriminant(_22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb15__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = AccountNotEnoughKeys<br/></td></tr><tr><td align="left">_40 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _41)</td></tr></table>>];
    bb16__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _40)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_36 = const ()<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = const 0_usize<br/>_494 = deref_copy (*_2)<br/>_44 = Len((*_494))<br/>_45 = Lt(_43, _44)<br/></td></tr><tr><td align="left">assert(move _45, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _44, _43)</td></tr></table>>];
    bb18__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_495 = deref_copy (*_2)<br/>_42 = &amp;(*_495)[_43]<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_496 = deref_copy (*_2)<br/>_49 = &amp;(*_496)<br/>StorageLive(_50)<br/>_50 = RangeFrom::&lt;usize&gt; { start: const 1_usize }<br/></td></tr><tr><td align="left">_48 = &lt;[anchor_lang::prelude::AccountInfo&lt;'_&gt;] as Index&lt;RangeFrom&lt;usize&gt;&gt;&gt;::index(move _49, move _50)</td></tr></table>>];
    bb19__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>_47 = &amp;(*_48)<br/>_46 = &amp;(*_47)<br/>(*_2) = move _46<br/>StorageDead(_46)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_1)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_2)<br/>StorageLive(_57)<br/>_57 = &amp;(*_3)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_4)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_54 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InitializePerpMarketBumps&gt;&gt;::try_accounts(move _55, move _56, move _57, move _58, move _59)</td></tr></table>>];
    bb20__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_60)<br/>_60 = {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}<br/></td></tr><tr><td align="left">_53 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}&gt;(move _54, move _60)</td></tr></table>>];
    bb21__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb22__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_61 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_52 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_51 = move _65<br/>StorageDead(_65)<br/>_514 = discriminant(_52)<br/>StorageDead(_52)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_1)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_2)<br/>StorageLive(_72)<br/>_72 = &amp;(*_3)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_4)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_69 = &lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt; as anchor_lang::Accounts&lt;'_, InitializePerpMarketBumps&gt;&gt;::try_accounts(move _70, move _71, move _72, move _73, move _74)</td></tr></table>>];
    bb24__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb25__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>_558 = discriminant(_52)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_75)<br/>_75 = {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}&gt;(move _69, move _75)</td></tr></table>>];
    bb27__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb28__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_76 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb29__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_67 as Continue).0: anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;)<br/>_66 = move _80<br/>StorageDead(_80)<br/>_516 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_1)<br/>StorageLive(_86)<br/>_86 = &amp;mut (*_2)<br/>StorageLive(_87)<br/>_87 = &amp;(*_3)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_4)<br/>StorageLive(_89)<br/>_89 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_84 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::Accounts&lt;'_, InitializePerpMarketBumps&gt;&gt;::try_accounts(move _85, move _86, move _87, move _88, move _89)</td></tr></table>>];
    bb30__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb31__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_556 = discriminant(_67)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_90)<br/>_90 = {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}<br/></td></tr><tr><td align="left">_83 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5140:10: 5140:18}&gt;(move _84, move _90)</td></tr></table>>];
    bb33__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb34__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_91 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb35__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_82 as Continue).0: anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;)<br/>_81 = move _95<br/>StorageDead(_95)<br/>_518 = discriminant(_82)<br/>StorageDead(_82)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::prelude::Rent as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb36__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_94)<br/>_94 = move _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb37__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>_554 = discriminant(_82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;anchor_lang::prelude::Rent, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb39__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_99 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb40__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_97 as Continue).0: anchor_lang::prelude::Rent)<br/>_96 = _103<br/>StorageDead(_103)<br/>_520 = discriminant(_97)<br/>StorageDead(_97)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = const b&quot;perp_market&quot;<br/>_112 = &amp;(*_113)<br/>_111 = move _112 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_112)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_577 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_120 = &amp;(*_577)<br/></td></tr><tr><td align="left">_119 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _120)</td></tr></table>>];
    bb41__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = move ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_102)<br/>_102 = move _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb42__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>_552 = discriminant(_97)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_118 = ((*_119).13: u16)<br/></td></tr><tr><td align="left">_117 = core::num::&lt;impl u16&gt;::to_le_bytes(move _118)</td></tr></table>>];
    bb44__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_116 = &amp;_117<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_115 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _116)</td></tr></table>>];
    bb45__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_114 = &amp;(*_115)<br/>StorageDead(_116)<br/>_110 = [move _111, move _114]<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/>_107 = move _108 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_108)<br/>StorageLive(_121)<br/>_121 = &amp;(*_1)<br/></td></tr><tr><td align="left">_106 = anchor_lang::prelude::Pubkey::find_program_address(move _107, move _121)</td></tr></table>>];
    bb46__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_107)<br/>StorageLive(_104)<br/>_104 = (_106.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_105)<br/>_105 = (_106.1: u8)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageLive(_122)<br/>_122 = _105<br/>((*_4).0: u8) = move _122<br/>StorageDead(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;(*_42)<br/></td></tr><tr><td align="left">_126 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _127)</td></tr></table>>];
    bb47__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_125 = &amp;_126<br/>StorageDead(_127)<br/>StorageLive(_128)<br/>_128 = &amp;_104<br/></td></tr><tr><td align="left">_124 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _125, move _128)</td></tr></table>>];
    bb48__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb49__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = ConstraintSeeds<br/></td></tr><tr><td align="left">_132 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _133)</td></tr></table>>];
    bb50__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _132, const &quot;perp_market&quot;)</td></tr></table>>];
    bb51__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_509 = const true<br/>StorageDead(_132)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;(*_42)<br/></td></tr><tr><td align="left">_135 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _136)</td></tr></table>>];
    bb52__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageLive(_137)<br/>_137 = _104<br/>_134 = (move _135, move _137)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>_509 = const false<br/></td></tr><tr><td align="left">_130 = anchor_lang::error::Error::with_pubkeys(move _131, move _134)</td></tr></table>>];
    bb53__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_509 = const false<br/>StorageDead(_131)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _130)<br/>StorageDead(_130)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>_123 = const ()<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;_42<br/>_140 = &amp;(*_141)<br/></td></tr><tr><td align="left">_139 = &lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _140)</td></tr></table>>];
    bb55__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_141)<br/>StorageLive(_142)<br/>_142 = ((*_139).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_143)<br/>_143 = const _<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = const false<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb56__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_142<br/>StorageLive(_148)<br/>_492 = const _<br/>_148 = &amp;(*_492)<br/></td></tr><tr><td align="left">_146 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _147, move _148)</td></tr></table>>];
    bb57__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb58__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = &amp;(*_42)<br/></td></tr><tr><td align="left">_151 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::lamports(move _152)</td></tr></table>>];
    bb59__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = _151<br/>_154 = Eq(move _155, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _154)</td></tr></table>>];
    bb60__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageLive(_156)<br/>_156 = _143<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;_96<br/>StorageLive(_159)<br/>_159 = _156<br/></td></tr><tr><td align="left">_157 = anchor_lang::prelude::Rent::minimum_balance(move _158, move _159)</td></tr></table>>];
    bb61__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_6<br/></td></tr><tr><td align="left">_161 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _162)</td></tr></table>>];
    bb62__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;(*_42)<br/></td></tr><tr><td align="left">_163 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _164)</td></tr></table>>];
    bb63__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_508 = const true<br/>_160 = anchor_lang::system_program::CreateAccount::&lt;'_&gt; { from: move _161, to: move _163 }<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;_81<br/></td></tr><tr><td align="left">_166 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _167)</td></tr></table>>];
    bb64__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageLive(_168)<br/>_508 = const false<br/>_168 = move _160<br/></td></tr><tr><td align="left">_165 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::CreateAccount&lt;'_&gt;&gt;::new(move _166, move _168)</td></tr></table>>];
    bb65__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_507 = const true<br/>_173 = move _165<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = const b&quot;perp_market&quot;<br/>_184 = &amp;(*_185)<br/>_183 = move _184 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_184)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_578 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_191 = &amp;(*_578)<br/></td></tr><tr><td align="left">_190 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _191)</td></tr></table>>];
    bb66__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_189 = ((*_190).13: u16)<br/></td></tr><tr><td align="left">_188 = core::num::&lt;impl u16&gt;::to_le_bytes(move _189)</td></tr></table>>];
    bb67__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_187 = &amp;_188<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_186 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _187)</td></tr></table>>];
    bb68__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = _105<br/>_196 = [move _197]<br/>_195 = &amp;_196<br/>StorageDead(_197)<br/>StorageLive(_198)<br/>_198 = RangeFull<br/></td></tr><tr><td align="left">_194 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _195, move _198)</td></tr></table>>];
    bb69__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_195)<br/>_193 = &amp;(*_194)<br/>_192 = &amp;(*_193)<br/>_182 = [move _183, move _186, move _192]<br/>_181 = &amp;_182<br/>StorageDead(_192)<br/>StorageDead(_186)<br/>StorageDead(_183)<br/>StorageLive(_199)<br/>_199 = RangeFull<br/></td></tr><tr><td align="left">_180 = &lt;[&amp;[u8]; 3] as Index&lt;RangeFull&gt;&gt;::index(move _181, move _199)</td></tr></table>>];
    bb70__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_181)<br/>_179 = &amp;(*_180)<br/>_178 = &amp;(*_179)<br/>_177 = [move _178]<br/>StorageDead(_178)<br/>_176 = &amp;_177<br/>_175 = &amp;(*_176)<br/>_174 = move _175 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_175)<br/>_507 = const false<br/></td></tr><tr><td align="left">_172 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::CreateAccount&lt;'_&gt;&gt;::with_signer(move _173, move _174)</td></tr></table>>];
    bb71__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>_507 = const false<br/>StorageDead(_173)<br/>StorageLive(_200)<br/>_200 = _157<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = _156<br/>_201 = move _202 as u64 (IntToInt)<br/>StorageDead(_202)<br/>StorageLive(_203)<br/>_203 = &amp;(*_1)<br/></td></tr><tr><td align="left">_171 = anchor_lang::system_program::create_account(move _172, move _200, move _201, move _203)</td></tr></table>>];
    bb72__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _171)</td></tr></table>>];
    bb73__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_204 = discriminant(_170)<br/></td></tr><tr><td align="left">switchInt(move _204)</td></tr></table>>];
    bb74__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_170 as Continue).0: ())<br/>_169 = _208<br/>StorageDead(_208)<br/>_522 = discriminant(_170)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>_153 = const ()<br/>StorageDead(_165)<br/>_508 = const false<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = move ((_170 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_207)<br/>_207 = move _205<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _207)</td></tr></table>>];
    bb76__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_205)<br/>_550 = discriminant(_170)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_165)<br/>_508 = const false<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;_6<br/></td></tr><tr><td align="left">_212 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _213)</td></tr></table>>];
    bb78__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_211 = &amp;_212<br/>StorageDead(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;(*_42)<br/></td></tr><tr><td align="left">_215 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _216)</td></tr></table>>];
    bb79__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_214 = &amp;_215<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">_210 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _211, move _214)</td></tr></table>>];
    bb80__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb81__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_491 = const _<br/>_222 = &amp;(*_491)<br/></td></tr><tr><td align="left">_221 = anchor_lang::error::ErrorCode::name(move _222)</td></tr></table>>];
    bb82__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = TryingToInitPayerAsProgramAccount<br/></td></tr><tr><td align="left">_224 = &lt;anchor_lang::error::ErrorCode as Into&lt;u32&gt;&gt;::into(move _225)</td></tr></table>>];
    bb83__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_490 = const _<br/>_227 = &amp;(*_490)<br/></td></tr><tr><td align="left">_226 = &lt;anchor_lang::error::ErrorCode as ToString&gt;::to_string(move _227)</td></tr></table>>];
    bb84__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = anchor_lang::error::Source { filename: const &quot;programs/drift/src/instructions/admin.rs&quot;, line: const 5140_u32 }<br/>_230 = anchor_lang::error::ErrorOrigin::Source(move _231)<br/>StorageDead(_231)<br/>_229 = Option::&lt;ErrorOrigin&gt;::Some(move _230)<br/>StorageDead(_230)<br/>StorageLive(_232)<br/>_232 = Option::&lt;ComparedValues&gt;::None<br/>_220 = anchor_lang::error::AnchorError { error_name: move _221, error_code_number: move _224, error_msg: move _226, error_origin: move _229, compared_values: move _232 }<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_219 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _220)</td></tr></table>>];
    bb85__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_506 = const true<br/>StorageDead(_220)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;_6<br/></td></tr><tr><td align="left">_234 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _235)</td></tr></table>>];
    bb86__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;(*_42)<br/></td></tr><tr><td align="left">_236 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _237)</td></tr></table>>];
    bb87__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_233 = (move _234, move _236)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>_506 = const false<br/></td></tr><tr><td align="left">_218 = anchor_lang::error::Error::with_pubkeys(move _219, move _233)</td></tr></table>>];
    bb88__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>_506 = const false<br/>StorageDead(_219)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _218)<br/>StorageDead(_218)<br/>StorageDead(_210)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>_209 = const ()<br/>StorageDead(_210)<br/>StorageDead(_209)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;_96<br/>StorageLive(_242)<br/>_242 = _143<br/></td></tr><tr><td align="left">_240 = anchor_lang::prelude::Rent::minimum_balance(move _241, move _242)</td></tr></table>>];
    bb90__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_239 = &lt;u64 as Ord&gt;::max(move _240, const 1_u64)</td></tr></table>>];
    bb91__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageLive(_243)<br/>_243 = _151<br/></td></tr><tr><td align="left">_238 = core::num::&lt;impl u64&gt;::saturating_sub(move _239, move _243)</td></tr></table>>];
    bb92__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_239)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = _238<br/>_245 = Gt(move _246, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb93__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = &amp;_6<br/></td></tr><tr><td align="left">_248 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _249)</td></tr></table>>];
    bb94__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = &amp;(*_42)<br/></td></tr><tr><td align="left">_250 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _251)</td></tr></table>>];
    bb95__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_505 = const true<br/>_247 = anchor_lang::system_program::Transfer::&lt;'_&gt; { from: move _248, to: move _250 }<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_254 = &amp;_81<br/></td></tr><tr><td align="left">_253 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _254)</td></tr></table>>];
    bb96__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageLive(_255)<br/>_505 = const false<br/>_255 = move _247<br/></td></tr><tr><td align="left">_252 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Transfer&lt;'_&gt;&gt;::new(move _253, move _255)</td></tr></table>>];
    bb97__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageDead(_253)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_259 = move _252<br/>StorageLive(_260)<br/>_260 = _238<br/></td></tr><tr><td align="left">_258 = anchor_lang::system_program::transfer(move _259, move _260)</td></tr></table>>];
    bb98__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _258)</td></tr></table>>];
    bb99__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_261 = discriminant(_257)<br/></td></tr><tr><td align="left">switchInt(move _261)</td></tr></table>>];
    bb100__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_265)<br/>_265 = ((_257 as Continue).0: ())<br/>_256 = _265<br/>StorageDead(_265)<br/>_524 = discriminant(_257)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>_244 = const ()<br/>StorageDead(_252)<br/>_505 = const false<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_262)<br/>_262 = move ((_257 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_264)<br/>_264 = move _262<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _264)</td></tr></table>>];
    bb102__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_262)<br/>_548 = discriminant(_257)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_252)<br/>_505 = const false<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_244 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_244)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;(*_42)<br/></td></tr><tr><td align="left">_267 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _268)</td></tr></table>>];
    bb105__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_504 = const true<br/>_266 = anchor_lang::system_program::Allocate::&lt;'_&gt; { account_to_allocate: move _267 }<br/>StorageDead(_267)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = &amp;_81<br/></td></tr><tr><td align="left">_270 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _271)</td></tr></table>>];
    bb106__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageLive(_272)<br/>_504 = const false<br/>_272 = move _266<br/></td></tr><tr><td align="left">_269 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Allocate&lt;'_&gt;&gt;::new(move _270, move _272)</td></tr></table>>];
    bb107__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageDead(_270)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>_503 = const true<br/>_277 = move _269<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = const b&quot;perp_market&quot;<br/>_288 = &amp;(*_289)<br/>_287 = move _288 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_288)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_579 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_295 = &amp;(*_579)<br/></td></tr><tr><td align="left">_294 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _295)</td></tr></table>>];
    bb108__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>_293 = ((*_294).13: u16)<br/></td></tr><tr><td align="left">_292 = core::num::&lt;impl u16&gt;::to_le_bytes(move _293)</td></tr></table>>];
    bb109__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_291 = &amp;_292<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">_290 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _291)</td></tr></table>>];
    bb110__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = _105<br/>_300 = [move _301]<br/>_299 = &amp;_300<br/>StorageDead(_301)<br/>StorageLive(_302)<br/>_302 = RangeFull<br/></td></tr><tr><td align="left">_298 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _299, move _302)</td></tr></table>>];
    bb111__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_299)<br/>_297 = &amp;(*_298)<br/>_296 = &amp;(*_297)<br/>_286 = [move _287, move _290, move _296]<br/>_285 = &amp;_286<br/>StorageDead(_296)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageLive(_303)<br/>_303 = RangeFull<br/></td></tr><tr><td align="left">_284 = &lt;[&amp;[u8]; 3] as Index&lt;RangeFull&gt;&gt;::index(move _285, move _303)</td></tr></table>>];
    bb112__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_285)<br/>_283 = &amp;(*_284)<br/>_282 = &amp;(*_283)<br/>_281 = [move _282]<br/>StorageDead(_282)<br/>_280 = &amp;_281<br/>_279 = &amp;(*_280)<br/>_278 = move _279 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_279)<br/>_503 = const false<br/></td></tr><tr><td align="left">_276 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Allocate&lt;'_&gt;&gt;::with_signer(move _277, move _278)</td></tr></table>>];
    bb113__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>_503 = const false<br/>StorageDead(_277)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = _143<br/>_304 = move _305 as u64 (IntToInt)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">_275 = anchor_lang::system_program::allocate(move _276, move _304)</td></tr></table>>];
    bb114__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_274 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _275)</td></tr></table>>];
    bb115__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>_306 = discriminant(_274)<br/></td></tr><tr><td align="left">switchInt(move _306)</td></tr></table>>];
    bb116__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_310)<br/>_310 = ((_274 as Continue).0: ())<br/>_273 = _310<br/>StorageDead(_310)<br/>_526 = discriminant(_274)<br/>StorageDead(_300)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = &amp;(*_42)<br/></td></tr><tr><td align="left">_312 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _313)</td></tr></table>>];
    bb117__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = move ((_274 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_309)<br/>_309 = move _307<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _309)</td></tr></table>>];
    bb118__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_307)<br/>_546 = discriminant(_274)<br/>StorageDead(_300)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>_502 = const true<br/>_311 = anchor_lang::system_program::Assign::&lt;'_&gt; { account_to_assign: move _312 }<br/>StorageDead(_312)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_316 = &amp;_81<br/></td></tr><tr><td align="left">_315 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _316)</td></tr></table>>];
    bb120__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageLive(_317)<br/>_502 = const false<br/>_317 = move _311<br/></td></tr><tr><td align="left">_314 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Assign&lt;'_&gt;&gt;::new(move _315, move _317)</td></tr></table>>];
    bb121__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_315)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_501 = const true<br/>_322 = move _314<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_334 = const b&quot;perp_market&quot;<br/>_333 = &amp;(*_334)<br/>_332 = move _333 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_333)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_580 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_340 = &amp;(*_580)<br/></td></tr><tr><td align="left">_339 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _340)</td></tr></table>>];
    bb122__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>_338 = ((*_339).13: u16)<br/></td></tr><tr><td align="left">_337 = core::num::&lt;impl u16&gt;::to_le_bytes(move _338)</td></tr></table>>];
    bb123__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_336 = &amp;_337<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_335 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _336)</td></tr></table>>];
    bb124__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = _105<br/>_345 = [move _346]<br/>_344 = &amp;_345<br/>StorageDead(_346)<br/>StorageLive(_347)<br/>_347 = RangeFull<br/></td></tr><tr><td align="left">_343 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _344, move _347)</td></tr></table>>];
    bb125__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_344)<br/>_342 = &amp;(*_343)<br/>_341 = &amp;(*_342)<br/>_331 = [move _332, move _335, move _341]<br/>_330 = &amp;_331<br/>StorageDead(_341)<br/>StorageDead(_335)<br/>StorageDead(_332)<br/>StorageLive(_348)<br/>_348 = RangeFull<br/></td></tr><tr><td align="left">_329 = &lt;[&amp;[u8]; 3] as Index&lt;RangeFull&gt;&gt;::index(move _330, move _348)</td></tr></table>>];
    bb126__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_330)<br/>_328 = &amp;(*_329)<br/>_327 = &amp;(*_328)<br/>_326 = [move _327]<br/>StorageDead(_327)<br/>_325 = &amp;_326<br/>_324 = &amp;(*_325)<br/>_323 = move _324 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_324)<br/>_501 = const false<br/></td></tr><tr><td align="left">_321 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Assign&lt;'_&gt;&gt;::with_signer(move _322, move _323)</td></tr></table>>];
    bb127__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>_501 = const false<br/>StorageDead(_322)<br/>StorageLive(_349)<br/>_349 = &amp;(*_1)<br/></td></tr><tr><td align="left">_320 = anchor_lang::system_program::assign(move _321, move _349)</td></tr></table>>];
    bb128__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_321)<br/></td></tr><tr><td align="left">_319 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _320)</td></tr></table>>];
    bb129__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>_350 = discriminant(_319)<br/></td></tr><tr><td align="left">switchInt(move _350)</td></tr></table>>];
    bb130__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_354)<br/>_354 = ((_319 as Continue).0: ())<br/>_318 = _354<br/>StorageDead(_354)<br/>_528 = discriminant(_319)<br/>StorageDead(_345)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_334)<br/>StorageDead(_331)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>_153 = const ()<br/>StorageDead(_314)<br/>_502 = const false<br/>StorageDead(_311)<br/>StorageDead(_269)<br/>_504 = const false<br/>StorageDead(_266)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = move ((_319 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_353)<br/>_353 = move _351<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _353)</td></tr></table>>];
    bb132__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageDead(_351)<br/>_544 = discriminant(_319)<br/>StorageDead(_345)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_334)<br/>StorageDead(_331)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageDead(_314)<br/>_502 = const false<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_153)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>_356 = &amp;(*_1)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = &amp;_42<br/>_497 = deref_copy (*_358)<br/>_357 = &amp;(*_497)<br/></td></tr><tr><td align="left">_355 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::try_from_unchecked(move _356, move _357)</td></tr></table>>];
    bb134__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_356)<br/>_359 = discriminant(_355)<br/></td></tr><tr><td align="left">switchInt(move _359)</td></tr></table>>];
    bb135__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = move ((_355 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = move _361<br/></td></tr><tr><td align="left">_363 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _364, const &quot;perp_market&quot;)</td></tr></table>>];
    bb136__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_360)<br/>_360 = move ((_355 as Ok).0: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_144 = move _360<br/>StorageDead(_360)<br/>StorageDead(_151)<br/>_530 = discriminant(_355)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _363)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_151)<br/>_542 = discriminant(_355)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>_367 = &amp;_42<br/>_498 = deref_copy (*_367)<br/>_366 = &amp;(*_498)<br/></td></tr><tr><td align="left">_365 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::try_from(move _366)</td></tr></table>>];
    bb139__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_368 = discriminant(_365)<br/></td></tr><tr><td align="left">switchInt(move _368)</td></tr></table>>];
    bb140__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_370)<br/>_370 = move ((_365 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>_373 = move _370<br/></td></tr><tr><td align="left">_372 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _373, const &quot;perp_market&quot;)</td></tr></table>>];
    bb141__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_369)<br/>_369 = move ((_365 as Ok).0: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_144 = move _369<br/>StorageDead(_369)<br/>_532 = discriminant(_365)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _372)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>_540 = discriminant(_365)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>_375 = const false<br/></td></tr><tr><td align="left">switchInt(move _375)</td></tr></table>>];
    bb144__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_378 = _143<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>_380 = &amp;(*_139)<br/></td></tr><tr><td align="left">_379 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::data_len(move _380)</td></tr></table>>];
    bb145__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>_377 = Ne(move _378, move _379)<br/></td></tr><tr><td align="left">switchInt(move _377)</td></tr></table>>];
    bb146__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_378)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>_385 = ConstraintSpace<br/></td></tr><tr><td align="left">_384 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _385)</td></tr></table>>];
    bb147__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/></td></tr><tr><td align="left">_383 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _384, const &quot;perp_market&quot;)</td></tr></table>>];
    bb148__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">_500 = const true<br/>StorageDead(_384)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = _143<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>_389 = &amp;(*_139)<br/></td></tr><tr><td align="left">_388 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::data_len(move _389)</td></tr></table>>];
    bb149__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>_386 = (move _387, move _388)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>_500 = const false<br/></td></tr><tr><td align="left">_382 = anchor_lang::error::Error::with_values::&lt;usize, usize&gt;(move _383, move _386)</td></tr></table>>];
    bb150__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>_500 = const false<br/>StorageDead(_383)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _382)<br/>StorageDead(_382)<br/>StorageDead(_377)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_378)<br/>_376 = const ()<br/>StorageDead(_377)<br/>StorageDead(_376)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>_392 = &amp;_142<br/>StorageLive(_393)<br/>_393 = &amp;_1<br/></td></tr><tr><td align="left">_391 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _392, move _393)</td></tr></table>>];
    bb152__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left">switchInt(move _391)</td></tr></table>>];
    bb153__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_392)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_398 = ConstraintOwner<br/></td></tr><tr><td align="left">_397 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _398)</td></tr></table>>];
    bb154__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/></td></tr><tr><td align="left">_396 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _397, const &quot;perp_market&quot;)</td></tr></table>>];
    bb155__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = (*_142)<br/>StorageLive(_401)<br/>_401 = (*_1)<br/>_399 = (move _400, move _401)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">_395 = anchor_lang::error::Error::with_pubkeys(move _396, move _399)</td></tr></table>>];
    bb156__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_396)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _395)<br/>StorageDead(_395)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_392)<br/>_390 = const ()<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>_403 = &amp;_96<br/>StorageLive(_404)<br/>_404 = _143<br/></td></tr><tr><td align="left">_402 = anchor_lang::prelude::Rent::minimum_balance(move _403, move _404)</td></tr></table>>];
    bb158__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>StorageDead(_403)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>_409 = &amp;_144<br/></td></tr><tr><td align="left">_408 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _409)</td></tr></table>>];
    bb159__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_407 = &amp;_408<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">_406 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::lamports(move _407)</td></tr></table>>];
    bb160__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageLive(_410)<br/>_410 = _402<br/>_405 = Lt(move _406, move _410)<br/></td></tr><tr><td align="left">switchInt(move _405)</td></tr></table>>];
    bb161__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/></td></tr><tr><td align="left">drop(_408)</td></tr></table>>];
    bb162__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_406)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = ConstraintRentExempt<br/></td></tr><tr><td align="left">_413 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _414)</td></tr></table>>];
    bb163__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/></td></tr><tr><td align="left">_412 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _413, const &quot;perp_market&quot;)</td></tr></table>>];
    bb164__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _412)<br/>StorageDead(_412)<br/>StorageDead(_405)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/></td></tr><tr><td align="left">drop(_408)</td></tr></table>>];
    bb166__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_406)<br/>_374 = const ()<br/>StorageDead(_405)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_374 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_374)<br/>_138 = move _144<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>_419 = &amp;_138<br/>_418 = &amp;(*_419)<br/></td></tr><tr><td align="left">_417 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _418)</td></tr></table>>];
    bb169__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>_416 = ((*_417).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _416)</td></tr></table>>];
    bb170__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_417)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = ConstraintMut<br/></td></tr><tr><td align="left">_422 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _423)</td></tr></table>>];
    bb171__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/></td></tr><tr><td align="left">_421 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _422, const &quot;perp_market&quot;)</td></tr></table>>];
    bb172__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _421)<br/>StorageDead(_421)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_417)<br/>_415 = const ()<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>_426 = &amp;_96<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>_430 = &amp;_138<br/></td></tr><tr><td align="left">_429 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _430)</td></tr></table>>];
    bb174__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_428 = &amp;_429<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">_427 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::lamports(move _428)</td></tr></table>>];
    bb175__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;_138<br/></td></tr><tr><td align="left">_435 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _436)</td></tr></table>>];
    bb176__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">_434 = &amp;_435<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_433 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_data_len(move _434)</td></tr></table>>];
    bb177__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/></td></tr><tr><td align="left">_432 = &lt;std::result::Result&lt;usize, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _433)</td></tr></table>>];
    bb178__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">_499 = const true<br/>StorageDead(_433)<br/>_437 = discriminant(_432)<br/></td></tr><tr><td align="left">switchInt(move _437)</td></tr></table>>];
    bb179__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_441)<br/>_441 = ((_432 as Continue).0: usize)<br/>_431 = _441<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">_425 = anchor_lang::prelude::Rent::is_exempt(move _426, move _427, move _431)</td></tr></table>>];
    bb180__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_438)<br/>_438 = move ((_432 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_440)<br/>_440 = move _438<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _440)</td></tr></table>>];
    bb181__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_438)<br/>StorageDead(_431)<br/>StorageDead(_427)<br/>StorageDead(_426)<br/>_538 = discriminant(_432)<br/></td></tr><tr><td align="left">drop(_435)</td></tr></table>>];
    bb182__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left">switchInt(move _425)</td></tr></table>>];
    bb183__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_427)<br/>StorageDead(_426)<br/>_534 = discriminant(_432)<br/></td></tr><tr><td align="left">drop(_435)</td></tr></table>>];
    bb184__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_427)<br/>StorageDead(_426)<br/>_536 = discriminant(_432)<br/></td></tr><tr><td align="left">drop(_435)</td></tr></table>>];
    bb185__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_499 = const false<br/>StorageDead(_432)<br/></td></tr><tr><td align="left">drop(_429)</td></tr></table>>];
    bb186__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>_445 = ConstraintRentExempt<br/></td></tr><tr><td align="left">_444 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _445)</td></tr></table>>];
    bb187__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/></td></tr><tr><td align="left">_443 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _444, const &quot;perp_market&quot;)</td></tr></table>>];
    bb188__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _443)<br/>StorageDead(_443)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_499 = const false<br/>StorageDead(_432)<br/></td></tr><tr><td align="left">drop(_429)</td></tr></table>>];
    bb190__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>_424 = const ()<br/>StorageDead(_425)<br/>StorageDead(_424)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>_450 = &amp;_6<br/>_449 = &amp;(*_450)<br/></td></tr><tr><td align="left">_448 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _449)</td></tr></table>>];
    bb191__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>_447 = ((*_448).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _447)</td></tr></table>>];
    bb192__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_448)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = ConstraintMut<br/></td></tr><tr><td align="left">_453 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _454)</td></tr></table>>];
    bb193__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/></td></tr><tr><td align="left">_452 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _453, const &quot;admin&quot;)</td></tr></table>>];
    bb194__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _452)<br/>StorageDead(_452)<br/>StorageDead(_447)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_448)<br/>_446 = const ()<br/>StorageDead(_447)<br/>StorageDead(_446)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>_459 = &amp;_6<br/></td></tr><tr><td align="left">_458 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _459)</td></tr></table>>];
    bb196__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">_457 = &amp;_458<br/>StorageDead(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/></td></tr><tr><td align="left">_461 = admin_hot_wallet::id()</td></tr></table>>];
    bb197__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">_460 = &amp;_461<br/></td></tr><tr><td align="left">_456 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _457, move _460)</td></tr></table>>];
    bb198__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left">switchInt(move _456)</td></tr></table>>];
    bb199__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>_465 = &amp;_6<br/></td></tr><tr><td align="left">_464 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _465)</td></tr></table>>];
    bb201__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">_463 = &amp;_464<br/>StorageDead(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>_581 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_468 = &amp;(*_581)<br/></td></tr><tr><td align="left">_467 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _468)</td></tr></table>>];
    bb202__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>_466 = &amp;((*_467).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_462 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _463, move _466)</td></tr></table>>];
    bb203__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left">switchInt(move _462)</td></tr></table>>];
    bb204__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>_455 = const ()<br/>StorageDead(_462)<br/>StorageDead(_456)<br/>StorageDead(_455)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_478 = &amp;_21<br/></td></tr><tr><td align="left">_477 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as AsRef&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;&gt;::as_ref(move _478)</td></tr></table>>];
    bb205__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_472 = ConstraintRaw<br/></td></tr><tr><td align="left">_471 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _472)</td></tr></table>>];
    bb206__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/></td></tr><tr><td align="left">_470 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _471, const &quot;admin&quot;)</td></tr></table>>];
    bb207__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _470)<br/>StorageDead(_470)<br/>StorageDead(_462)<br/>StorageDead(_456)<br/>StorageDead(_455)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_476 = &amp;(*_477)<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">_475 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _476)</td></tr></table>>];
    bb209__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>_474 = ((*_475).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _474)</td></tr></table>>];
    bb210__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>StorageDead(_475)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>_482 = ConstraintMut<br/></td></tr><tr><td align="left">_481 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _482)</td></tr></table>>];
    bb211__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/></td></tr><tr><td align="left">_480 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _481, const &quot;state&quot;)</td></tr></table>>];
    bb212__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _480)<br/>StorageDead(_480)<br/>StorageDead(_474)<br/>StorageDead(_473)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>StorageDead(_475)<br/>_473 = const ()<br/>StorageDead(_474)<br/>StorageDead(_473)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>_484 = move _6<br/>StorageLive(_485)<br/>_485 = move _21<br/>StorageLive(_486)<br/>_486 = move _138<br/>StorageLive(_487)<br/>_487 = move _51<br/>StorageLive(_488)<br/>_488 = move _66<br/>StorageLive(_489)<br/>_489 = move _81<br/>_483 = admin::InitializePerpMarket::&lt;'_&gt; { admin: move _484, state: move _485, perp_market: move _486, oracle: move _487, rent: move _488, system_program: move _489 }<br/>StorageDead(_489)<br/>StorageDead(_488)<br/>StorageDead(_487)<br/>StorageDead(_486)<br/>StorageDead(_485)<br/>StorageDead(_484)<br/>_0 = std::result::Result::&lt;admin::InitializePerpMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _483)<br/>StorageDead(_483)<br/>StorageDead(_138)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_96)<br/>StorageDead(_81)<br/>StorageDead(_66)<br/>StorageDead(_51)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_499 = const false<br/>StorageDead(_432)<br/></td></tr><tr><td align="left">drop(_429)</td></tr></table>>];
    bb215__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/>StorageDead(_424)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_504 = const false<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb228__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb230__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left">return</td></tr></table>>];
    bb233__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">233 (cleanup)</td></tr><tr><td align="left">drop(_435)</td></tr></table>>];
    bb234__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">234 (cleanup)</td></tr><tr><td align="left">drop(_429)</td></tr></table>>];
    bb235__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">235 (cleanup)</td></tr><tr><td align="left">drop(_408)</td></tr></table>>];
    bb236__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">236 (cleanup)</td></tr><tr><td align="left">drop(_248)</td></tr></table>>];
    bb237__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">237 (cleanup)</td></tr><tr><td align="left">drop(_221)</td></tr></table>>];
    bb238__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">238 (cleanup)</td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb239__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">239 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb240__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">240 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb241__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">241 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb242__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">242 (cleanup)</td></tr><tr><td align="left" balign="left">_564 = discriminant(_432)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">243 (cleanup)</td></tr><tr><td align="left">drop(_383)</td></tr></table>>];
    bb244__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">244 (cleanup)</td></tr><tr><td align="left">switchInt(_500)</td></tr></table>>];
    bb245__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">245 (cleanup)</td></tr><tr><td align="left" balign="left">_565 = discriminant(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">246 (cleanup)</td></tr><tr><td align="left" balign="left">_566 = discriminant(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">247 (cleanup)</td></tr><tr><td align="left" balign="left">_567 = discriminant(_319)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">248 (cleanup)</td></tr><tr><td align="left">drop(_322)</td></tr></table>>];
    bb249__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">249 (cleanup)</td></tr><tr><td align="left">switchInt(_501)</td></tr></table>>];
    bb250__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">250 (cleanup)</td></tr><tr><td align="left">drop(_311)</td></tr></table>>];
    bb251__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">251 (cleanup)</td></tr><tr><td align="left">switchInt(_502)</td></tr></table>>];
    bb252__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">252 (cleanup)</td></tr><tr><td align="left" balign="left">_568 = discriminant(_274)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">253 (cleanup)</td></tr><tr><td align="left">drop(_277)</td></tr></table>>];
    bb254__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">254 (cleanup)</td></tr><tr><td align="left">switchInt(_503)</td></tr></table>>];
    bb255__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">255 (cleanup)</td></tr><tr><td align="left">drop(_266)</td></tr></table>>];
    bb256__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">256 (cleanup)</td></tr><tr><td align="left">switchInt(_504)</td></tr></table>>];
    bb257__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">257 (cleanup)</td></tr><tr><td align="left" balign="left">_569 = discriminant(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">258 (cleanup)</td></tr><tr><td align="left">drop(_247)</td></tr></table>>];
    bb259__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">259 (cleanup)</td></tr><tr><td align="left">switchInt(_505)</td></tr></table>>];
    bb260__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">260 (cleanup)</td></tr><tr><td align="left">drop(_219)</td></tr></table>>];
    bb261__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">261 (cleanup)</td></tr><tr><td align="left">switchInt(_506)</td></tr></table>>];
    bb262__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">262 (cleanup)</td></tr><tr><td align="left" balign="left">_570 = discriminant(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb263__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">263 (cleanup)</td></tr><tr><td align="left">drop(_173)</td></tr></table>>];
    bb264__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">264 (cleanup)</td></tr><tr><td align="left">switchInt(_507)</td></tr></table>>];
    bb265__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">265 (cleanup)</td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb266__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">266 (cleanup)</td></tr><tr><td align="left">switchInt(_508)</td></tr></table>>];
    bb267__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">267 (cleanup)</td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb268__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">268 (cleanup)</td></tr><tr><td align="left">switchInt(_509)</td></tr></table>>];
    bb269__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">269 (cleanup)</td></tr><tr><td align="left" balign="left">_571 = discriminant(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">270 (cleanup)</td></tr><tr><td align="left" balign="left">_572 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">271 (cleanup)</td></tr><tr><td align="left" balign="left">_573 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">272 (cleanup)</td></tr><tr><td align="left" balign="left">_574 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">273 (cleanup)</td></tr><tr><td align="left" balign="left">_575 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_6318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">274 (cleanup)</td></tr><tr><td align="left" balign="left">_576 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_6318 -> bb1__0_6318 [label="return"];
    bb1__0_6318 -> bb2__0_6318 [label="return"];
    bb1__0_6318 -> bb241__0_6318 [label="unwind"];
    bb2__0_6318 -> bb3__0_6318 [label="return"];
    bb2__0_6318 -> bb241__0_6318 [label="unwind"];
    bb3__0_6318 -> bb4__0_6318 [label="0"];
    bb3__0_6318 -> bb6__0_6318 [label="1"];
    bb3__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb4__0_6318 -> bb8__0_6318 [label="return"];
    bb6__0_6318 -> bb7__0_6318 [label="return"];
    bb6__0_6318 -> bb274__0_6318 [label="unwind"];
    bb7__0_6318 -> bb231__0_6318 [label=""];
    bb8__0_6318 -> bb9__0_6318 [label="return"];
    bb8__0_6318 -> bb241__0_6318 [label="unwind"];
    bb9__0_6318 -> bb10__0_6318 [label="return"];
    bb9__0_6318 -> bb241__0_6318 [label="unwind"];
    bb10__0_6318 -> bb11__0_6318 [label="0"];
    bb10__0_6318 -> bb12__0_6318 [label="1"];
    bb10__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb11__0_6318 -> bb14__0_6318 [label="return"];
    bb11__0_6318 -> bb240__0_6318 [label="unwind"];
    bb12__0_6318 -> bb13__0_6318 [label="return"];
    bb12__0_6318 -> bb273__0_6318 [label="unwind"];
    bb13__0_6318 -> bb230__0_6318 [label=""];
    bb14__0_6318 -> bb17__0_6318 [label="0"];
    bb14__0_6318 -> bb15__0_6318 [label="otherwise"];
    bb15__0_6318 -> bb16__0_6318 [label="return"];
    bb15__0_6318 -> bb240__0_6318 [label="unwind"];
    bb16__0_6318 -> bb229__0_6318 [label=""];
    bb17__0_6318 -> bb18__0_6318 [label="success"];
    bb17__0_6318 -> bb240__0_6318 [label="unwind"];
    bb18__0_6318 -> bb19__0_6318 [label="return"];
    bb18__0_6318 -> bb240__0_6318 [label="unwind"];
    bb19__0_6318 -> bb20__0_6318 [label="return"];
    bb19__0_6318 -> bb240__0_6318 [label="unwind"];
    bb20__0_6318 -> bb21__0_6318 [label="return"];
    bb20__0_6318 -> bb240__0_6318 [label="unwind"];
    bb21__0_6318 -> bb22__0_6318 [label="return"];
    bb21__0_6318 -> bb240__0_6318 [label="unwind"];
    bb22__0_6318 -> bb23__0_6318 [label="0"];
    bb22__0_6318 -> bb24__0_6318 [label="1"];
    bb22__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb23__0_6318 -> bb26__0_6318 [label="return"];
    bb23__0_6318 -> bb239__0_6318 [label="unwind"];
    bb24__0_6318 -> bb25__0_6318 [label="return"];
    bb24__0_6318 -> bb272__0_6318 [label="unwind"];
    bb25__0_6318 -> bb228__0_6318 [label=""];
    bb26__0_6318 -> bb27__0_6318 [label="return"];
    bb26__0_6318 -> bb239__0_6318 [label="unwind"];
    bb27__0_6318 -> bb28__0_6318 [label="return"];
    bb27__0_6318 -> bb239__0_6318 [label="unwind"];
    bb28__0_6318 -> bb29__0_6318 [label="0"];
    bb28__0_6318 -> bb30__0_6318 [label="1"];
    bb28__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb29__0_6318 -> bb32__0_6318 [label="return"];
    bb29__0_6318 -> bb239__0_6318 [label="unwind"];
    bb30__0_6318 -> bb31__0_6318 [label="return"];
    bb30__0_6318 -> bb271__0_6318 [label="unwind"];
    bb31__0_6318 -> bb227__0_6318 [label=""];
    bb32__0_6318 -> bb33__0_6318 [label="return"];
    bb32__0_6318 -> bb239__0_6318 [label="unwind"];
    bb33__0_6318 -> bb34__0_6318 [label="return"];
    bb33__0_6318 -> bb239__0_6318 [label="unwind"];
    bb34__0_6318 -> bb35__0_6318 [label="0"];
    bb34__0_6318 -> bb36__0_6318 [label="1"];
    bb34__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb35__0_6318 -> bb38__0_6318 [label="return"];
    bb35__0_6318 -> bb239__0_6318 [label="unwind"];
    bb36__0_6318 -> bb37__0_6318 [label="return"];
    bb36__0_6318 -> bb270__0_6318 [label="unwind"];
    bb37__0_6318 -> bb226__0_6318 [label=""];
    bb38__0_6318 -> bb39__0_6318 [label="return"];
    bb38__0_6318 -> bb239__0_6318 [label="unwind"];
    bb39__0_6318 -> bb40__0_6318 [label="0"];
    bb39__0_6318 -> bb41__0_6318 [label="1"];
    bb39__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb40__0_6318 -> bb43__0_6318 [label="return"];
    bb40__0_6318 -> bb239__0_6318 [label="unwind"];
    bb41__0_6318 -> bb42__0_6318 [label="return"];
    bb41__0_6318 -> bb269__0_6318 [label="unwind"];
    bb42__0_6318 -> bb225__0_6318 [label=""];
    bb43__0_6318 -> bb44__0_6318 [label="return"];
    bb43__0_6318 -> bb239__0_6318 [label="unwind"];
    bb44__0_6318 -> bb45__0_6318 [label="return"];
    bb44__0_6318 -> bb239__0_6318 [label="unwind"];
    bb45__0_6318 -> bb46__0_6318 [label="return"];
    bb45__0_6318 -> bb239__0_6318 [label="unwind"];
    bb46__0_6318 -> bb47__0_6318 [label="return"];
    bb46__0_6318 -> bb239__0_6318 [label="unwind"];
    bb47__0_6318 -> bb48__0_6318 [label="return"];
    bb47__0_6318 -> bb239__0_6318 [label="unwind"];
    bb48__0_6318 -> bb54__0_6318 [label="0"];
    bb48__0_6318 -> bb49__0_6318 [label="otherwise"];
    bb49__0_6318 -> bb50__0_6318 [label="return"];
    bb49__0_6318 -> bb239__0_6318 [label="unwind"];
    bb50__0_6318 -> bb51__0_6318 [label="return"];
    bb50__0_6318 -> bb239__0_6318 [label="unwind"];
    bb51__0_6318 -> bb52__0_6318 [label="return"];
    bb51__0_6318 -> bb268__0_6318 [label="unwind"];
    bb52__0_6318 -> bb53__0_6318 [label="return"];
    bb52__0_6318 -> bb268__0_6318 [label="unwind"];
    bb53__0_6318 -> bb224__0_6318 [label=""];
    bb54__0_6318 -> bb55__0_6318 [label="return"];
    bb54__0_6318 -> bb239__0_6318 [label="unwind"];
    bb55__0_6318 -> bb58__0_6318 [label="0"];
    bb55__0_6318 -> bb56__0_6318 [label="otherwise"];
    bb56__0_6318 -> bb57__0_6318 [label="return"];
    bb56__0_6318 -> bb239__0_6318 [label="unwind"];
    bb57__0_6318 -> bb138__0_6318 [label="0"];
    bb57__0_6318 -> bb58__0_6318 [label="otherwise"];
    bb58__0_6318 -> bb59__0_6318 [label="return"];
    bb58__0_6318 -> bb239__0_6318 [label="unwind"];
    bb59__0_6318 -> bb77__0_6318 [label="0"];
    bb59__0_6318 -> bb60__0_6318 [label="otherwise"];
    bb60__0_6318 -> bb61__0_6318 [label="return"];
    bb60__0_6318 -> bb239__0_6318 [label="unwind"];
    bb61__0_6318 -> bb62__0_6318 [label="return"];
    bb61__0_6318 -> bb239__0_6318 [label="unwind"];
    bb62__0_6318 -> bb63__0_6318 [label="return"];
    bb62__0_6318 -> bb238__0_6318 [label="unwind"];
    bb63__0_6318 -> bb64__0_6318 [label="return"];
    bb63__0_6318 -> bb266__0_6318 [label="unwind"];
    bb64__0_6318 -> bb65__0_6318 [label="return"];
    bb64__0_6318 -> bb266__0_6318 [label="unwind"];
    bb65__0_6318 -> bb66__0_6318 [label="return"];
    bb65__0_6318 -> bb264__0_6318 [label="unwind"];
    bb66__0_6318 -> bb67__0_6318 [label="return"];
    bb66__0_6318 -> bb264__0_6318 [label="unwind"];
    bb67__0_6318 -> bb68__0_6318 [label="return"];
    bb67__0_6318 -> bb264__0_6318 [label="unwind"];
    bb68__0_6318 -> bb69__0_6318 [label="return"];
    bb68__0_6318 -> bb264__0_6318 [label="unwind"];
    bb69__0_6318 -> bb70__0_6318 [label="return"];
    bb69__0_6318 -> bb264__0_6318 [label="unwind"];
    bb70__0_6318 -> bb71__0_6318 [label="return"];
    bb70__0_6318 -> bb264__0_6318 [label="unwind"];
    bb71__0_6318 -> bb72__0_6318 [label="return"];
    bb71__0_6318 -> bb266__0_6318 [label="unwind"];
    bb72__0_6318 -> bb73__0_6318 [label="return"];
    bb72__0_6318 -> bb266__0_6318 [label="unwind"];
    bb73__0_6318 -> bb74__0_6318 [label="0"];
    bb73__0_6318 -> bb75__0_6318 [label="1"];
    bb73__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb74__0_6318 -> bb133__0_6318 [label=""];
    bb75__0_6318 -> bb76__0_6318 [label="return"];
    bb75__0_6318 -> bb262__0_6318 [label="unwind"];
    bb76__0_6318 -> bb220__0_6318 [label=""];
    bb77__0_6318 -> bb78__0_6318 [label="return"];
    bb77__0_6318 -> bb239__0_6318 [label="unwind"];
    bb78__0_6318 -> bb79__0_6318 [label="return"];
    bb78__0_6318 -> bb239__0_6318 [label="unwind"];
    bb79__0_6318 -> bb80__0_6318 [label="return"];
    bb79__0_6318 -> bb239__0_6318 [label="unwind"];
    bb80__0_6318 -> bb89__0_6318 [label="0"];
    bb80__0_6318 -> bb81__0_6318 [label="otherwise"];
    bb81__0_6318 -> bb82__0_6318 [label="return"];
    bb81__0_6318 -> bb239__0_6318 [label="unwind"];
    bb82__0_6318 -> bb83__0_6318 [label="return"];
    bb82__0_6318 -> bb237__0_6318 [label="unwind"];
    bb83__0_6318 -> bb84__0_6318 [label="return"];
    bb83__0_6318 -> bb237__0_6318 [label="unwind"];
    bb84__0_6318 -> bb85__0_6318 [label="return"];
    bb84__0_6318 -> bb239__0_6318 [label="unwind"];
    bb85__0_6318 -> bb86__0_6318 [label="return"];
    bb85__0_6318 -> bb261__0_6318 [label="unwind"];
    bb86__0_6318 -> bb87__0_6318 [label="return"];
    bb86__0_6318 -> bb261__0_6318 [label="unwind"];
    bb87__0_6318 -> bb88__0_6318 [label="return"];
    bb87__0_6318 -> bb261__0_6318 [label="unwind"];
    bb88__0_6318 -> bb220__0_6318 [label=""];
    bb89__0_6318 -> bb90__0_6318 [label="return"];
    bb89__0_6318 -> bb239__0_6318 [label="unwind"];
    bb90__0_6318 -> bb91__0_6318 [label="return"];
    bb90__0_6318 -> bb239__0_6318 [label="unwind"];
    bb91__0_6318 -> bb92__0_6318 [label="return"];
    bb91__0_6318 -> bb239__0_6318 [label="unwind"];
    bb92__0_6318 -> bb103__0_6318 [label="0"];
    bb92__0_6318 -> bb93__0_6318 [label="otherwise"];
    bb93__0_6318 -> bb94__0_6318 [label="return"];
    bb93__0_6318 -> bb239__0_6318 [label="unwind"];
    bb94__0_6318 -> bb95__0_6318 [label="return"];
    bb94__0_6318 -> bb236__0_6318 [label="unwind"];
    bb95__0_6318 -> bb96__0_6318 [label="return"];
    bb95__0_6318 -> bb259__0_6318 [label="unwind"];
    bb96__0_6318 -> bb97__0_6318 [label="return"];
    bb96__0_6318 -> bb259__0_6318 [label="unwind"];
    bb97__0_6318 -> bb98__0_6318 [label="return"];
    bb97__0_6318 -> bb259__0_6318 [label="unwind"];
    bb98__0_6318 -> bb99__0_6318 [label="return"];
    bb98__0_6318 -> bb259__0_6318 [label="unwind"];
    bb99__0_6318 -> bb100__0_6318 [label="0"];
    bb99__0_6318 -> bb101__0_6318 [label="1"];
    bb99__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb100__0_6318 -> bb104__0_6318 [label=""];
    bb101__0_6318 -> bb102__0_6318 [label="return"];
    bb101__0_6318 -> bb257__0_6318 [label="unwind"];
    bb102__0_6318 -> bb219__0_6318 [label=""];
    bb103__0_6318 -> bb104__0_6318 [label=""];
    bb104__0_6318 -> bb105__0_6318 [label="return"];
    bb104__0_6318 -> bb239__0_6318 [label="unwind"];
    bb105__0_6318 -> bb106__0_6318 [label="return"];
    bb105__0_6318 -> bb256__0_6318 [label="unwind"];
    bb106__0_6318 -> bb107__0_6318 [label="return"];
    bb106__0_6318 -> bb256__0_6318 [label="unwind"];
    bb107__0_6318 -> bb108__0_6318 [label="return"];
    bb107__0_6318 -> bb254__0_6318 [label="unwind"];
    bb108__0_6318 -> bb109__0_6318 [label="return"];
    bb108__0_6318 -> bb254__0_6318 [label="unwind"];
    bb109__0_6318 -> bb110__0_6318 [label="return"];
    bb109__0_6318 -> bb254__0_6318 [label="unwind"];
    bb110__0_6318 -> bb111__0_6318 [label="return"];
    bb110__0_6318 -> bb254__0_6318 [label="unwind"];
    bb111__0_6318 -> bb112__0_6318 [label="return"];
    bb111__0_6318 -> bb254__0_6318 [label="unwind"];
    bb112__0_6318 -> bb113__0_6318 [label="return"];
    bb112__0_6318 -> bb254__0_6318 [label="unwind"];
    bb113__0_6318 -> bb114__0_6318 [label="return"];
    bb113__0_6318 -> bb256__0_6318 [label="unwind"];
    bb114__0_6318 -> bb115__0_6318 [label="return"];
    bb114__0_6318 -> bb256__0_6318 [label="unwind"];
    bb115__0_6318 -> bb116__0_6318 [label="0"];
    bb115__0_6318 -> bb117__0_6318 [label="1"];
    bb115__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb116__0_6318 -> bb119__0_6318 [label="return"];
    bb116__0_6318 -> bb256__0_6318 [label="unwind"];
    bb117__0_6318 -> bb118__0_6318 [label="return"];
    bb117__0_6318 -> bb252__0_6318 [label="unwind"];
    bb118__0_6318 -> bb218__0_6318 [label=""];
    bb119__0_6318 -> bb120__0_6318 [label="return"];
    bb119__0_6318 -> bb251__0_6318 [label="unwind"];
    bb120__0_6318 -> bb121__0_6318 [label="return"];
    bb120__0_6318 -> bb251__0_6318 [label="unwind"];
    bb121__0_6318 -> bb122__0_6318 [label="return"];
    bb121__0_6318 -> bb249__0_6318 [label="unwind"];
    bb122__0_6318 -> bb123__0_6318 [label="return"];
    bb122__0_6318 -> bb249__0_6318 [label="unwind"];
    bb123__0_6318 -> bb124__0_6318 [label="return"];
    bb123__0_6318 -> bb249__0_6318 [label="unwind"];
    bb124__0_6318 -> bb125__0_6318 [label="return"];
    bb124__0_6318 -> bb249__0_6318 [label="unwind"];
    bb125__0_6318 -> bb126__0_6318 [label="return"];
    bb125__0_6318 -> bb249__0_6318 [label="unwind"];
    bb126__0_6318 -> bb127__0_6318 [label="return"];
    bb126__0_6318 -> bb249__0_6318 [label="unwind"];
    bb127__0_6318 -> bb128__0_6318 [label="return"];
    bb127__0_6318 -> bb251__0_6318 [label="unwind"];
    bb128__0_6318 -> bb129__0_6318 [label="return"];
    bb128__0_6318 -> bb251__0_6318 [label="unwind"];
    bb129__0_6318 -> bb130__0_6318 [label="0"];
    bb129__0_6318 -> bb131__0_6318 [label="1"];
    bb129__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb130__0_6318 -> bb133__0_6318 [label=""];
    bb131__0_6318 -> bb132__0_6318 [label="return"];
    bb131__0_6318 -> bb247__0_6318 [label="unwind"];
    bb132__0_6318 -> bb218__0_6318 [label=""];
    bb133__0_6318 -> bb134__0_6318 [label="return"];
    bb133__0_6318 -> bb239__0_6318 [label="unwind"];
    bb134__0_6318 -> bb136__0_6318 [label="0"];
    bb134__0_6318 -> bb135__0_6318 [label="1"];
    bb134__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb135__0_6318 -> bb137__0_6318 [label="return"];
    bb135__0_6318 -> bb246__0_6318 [label="unwind"];
    bb136__0_6318 -> bb143__0_6318 [label=""];
    bb137__0_6318 -> bb221__0_6318 [label=""];
    bb138__0_6318 -> bb139__0_6318 [label="return"];
    bb138__0_6318 -> bb239__0_6318 [label="unwind"];
    bb139__0_6318 -> bb141__0_6318 [label="0"];
    bb139__0_6318 -> bb140__0_6318 [label="1"];
    bb139__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb140__0_6318 -> bb142__0_6318 [label="return"];
    bb140__0_6318 -> bb245__0_6318 [label="unwind"];
    bb141__0_6318 -> bb143__0_6318 [label=""];
    bb142__0_6318 -> bb221__0_6318 [label=""];
    bb143__0_6318 -> bb167__0_6318 [label="0"];
    bb143__0_6318 -> bb144__0_6318 [label="otherwise"];
    bb144__0_6318 -> bb145__0_6318 [label="return"];
    bb144__0_6318 -> bb239__0_6318 [label="unwind"];
    bb145__0_6318 -> bb151__0_6318 [label="0"];
    bb145__0_6318 -> bb146__0_6318 [label="otherwise"];
    bb146__0_6318 -> bb147__0_6318 [label="return"];
    bb146__0_6318 -> bb239__0_6318 [label="unwind"];
    bb147__0_6318 -> bb148__0_6318 [label="return"];
    bb147__0_6318 -> bb239__0_6318 [label="unwind"];
    bb148__0_6318 -> bb149__0_6318 [label="return"];
    bb148__0_6318 -> bb244__0_6318 [label="unwind"];
    bb149__0_6318 -> bb150__0_6318 [label="return"];
    bb149__0_6318 -> bb244__0_6318 [label="unwind"];
    bb150__0_6318 -> bb217__0_6318 [label=""];
    bb151__0_6318 -> bb152__0_6318 [label="return"];
    bb151__0_6318 -> bb239__0_6318 [label="unwind"];
    bb152__0_6318 -> bb157__0_6318 [label="0"];
    bb152__0_6318 -> bb153__0_6318 [label="otherwise"];
    bb153__0_6318 -> bb154__0_6318 [label="return"];
    bb153__0_6318 -> bb239__0_6318 [label="unwind"];
    bb154__0_6318 -> bb155__0_6318 [label="return"];
    bb154__0_6318 -> bb239__0_6318 [label="unwind"];
    bb155__0_6318 -> bb156__0_6318 [label="return"];
    bb155__0_6318 -> bb239__0_6318 [label="unwind"];
    bb156__0_6318 -> bb217__0_6318 [label=""];
    bb157__0_6318 -> bb158__0_6318 [label="return"];
    bb157__0_6318 -> bb239__0_6318 [label="unwind"];
    bb158__0_6318 -> bb159__0_6318 [label="return"];
    bb158__0_6318 -> bb239__0_6318 [label="unwind"];
    bb159__0_6318 -> bb160__0_6318 [label="return"];
    bb159__0_6318 -> bb235__0_6318 [label="unwind"];
    bb160__0_6318 -> bb165__0_6318 [label="0"];
    bb160__0_6318 -> bb161__0_6318 [label="otherwise"];
    bb161__0_6318 -> bb162__0_6318 [label="return"];
    bb161__0_6318 -> bb239__0_6318 [label="unwind"];
    bb162__0_6318 -> bb163__0_6318 [label="return"];
    bb162__0_6318 -> bb239__0_6318 [label="unwind"];
    bb163__0_6318 -> bb164__0_6318 [label="return"];
    bb163__0_6318 -> bb239__0_6318 [label="unwind"];
    bb164__0_6318 -> bb217__0_6318 [label=""];
    bb165__0_6318 -> bb166__0_6318 [label="return"];
    bb165__0_6318 -> bb239__0_6318 [label="unwind"];
    bb166__0_6318 -> bb168__0_6318 [label=""];
    bb167__0_6318 -> bb168__0_6318 [label=""];
    bb168__0_6318 -> bb169__0_6318 [label="return"];
    bb168__0_6318 -> bb239__0_6318 [label="unwind"];
    bb169__0_6318 -> bb170__0_6318 [label="0"];
    bb169__0_6318 -> bb173__0_6318 [label="otherwise"];
    bb170__0_6318 -> bb171__0_6318 [label="return"];
    bb170__0_6318 -> bb239__0_6318 [label="unwind"];
    bb171__0_6318 -> bb172__0_6318 [label="return"];
    bb171__0_6318 -> bb239__0_6318 [label="unwind"];
    bb172__0_6318 -> bb223__0_6318 [label=""];
    bb173__0_6318 -> bb174__0_6318 [label="return"];
    bb173__0_6318 -> bb239__0_6318 [label="unwind"];
    bb174__0_6318 -> bb175__0_6318 [label="return"];
    bb174__0_6318 -> bb234__0_6318 [label="unwind"];
    bb175__0_6318 -> bb176__0_6318 [label="return"];
    bb175__0_6318 -> bb234__0_6318 [label="unwind"];
    bb176__0_6318 -> bb177__0_6318 [label="return"];
    bb176__0_6318 -> bb233__0_6318 [label="unwind"];
    bb177__0_6318 -> bb178__0_6318 [label="return"];
    bb177__0_6318 -> bb233__0_6318 [label="unwind"];
    bb178__0_6318 -> bb179__0_6318 [label="0"];
    bb178__0_6318 -> bb180__0_6318 [label="1"];
    bb178__0_6318 -> bb5__0_6318 [label="otherwise"];
    bb179__0_6318 -> bb182__0_6318 [label="return"];
    bb179__0_6318 -> bb242__0_6318 [label="unwind"];
    bb180__0_6318 -> bb181__0_6318 [label="return"];
    bb180__0_6318 -> bb242__0_6318 [label="unwind"];
    bb181__0_6318 -> bb214__0_6318 [label="return"];
    bb181__0_6318 -> bb234__0_6318 [label="unwind"];
    bb182__0_6318 -> bb184__0_6318 [label="0"];
    bb182__0_6318 -> bb183__0_6318 [label="otherwise"];
    bb183__0_6318 -> bb189__0_6318 [label="return"];
    bb183__0_6318 -> bb234__0_6318 [label="unwind"];
    bb184__0_6318 -> bb185__0_6318 [label="return"];
    bb184__0_6318 -> bb234__0_6318 [label="unwind"];
    bb185__0_6318 -> bb186__0_6318 [label="return"];
    bb185__0_6318 -> bb239__0_6318 [label="unwind"];
    bb186__0_6318 -> bb187__0_6318 [label="return"];
    bb186__0_6318 -> bb239__0_6318 [label="unwind"];
    bb187__0_6318 -> bb188__0_6318 [label="return"];
    bb187__0_6318 -> bb239__0_6318 [label="unwind"];
    bb188__0_6318 -> bb216__0_6318 [label=""];
    bb189__0_6318 -> bb190__0_6318 [label="return"];
    bb189__0_6318 -> bb239__0_6318 [label="unwind"];
    bb190__0_6318 -> bb191__0_6318 [label="return"];
    bb190__0_6318 -> bb239__0_6318 [label="unwind"];
    bb191__0_6318 -> bb192__0_6318 [label="0"];
    bb191__0_6318 -> bb195__0_6318 [label="otherwise"];
    bb192__0_6318 -> bb193__0_6318 [label="return"];
    bb192__0_6318 -> bb239__0_6318 [label="unwind"];
    bb193__0_6318 -> bb194__0_6318 [label="return"];
    bb193__0_6318 -> bb239__0_6318 [label="unwind"];
    bb194__0_6318 -> bb223__0_6318 [label=""];
    bb195__0_6318 -> bb196__0_6318 [label="return"];
    bb195__0_6318 -> bb239__0_6318 [label="unwind"];
    bb196__0_6318 -> bb197__0_6318 [label="return"];
    bb196__0_6318 -> bb239__0_6318 [label="unwind"];
    bb197__0_6318 -> bb198__0_6318 [label="return"];
    bb197__0_6318 -> bb239__0_6318 [label="unwind"];
    bb198__0_6318 -> bb200__0_6318 [label="0"];
    bb198__0_6318 -> bb199__0_6318 [label="otherwise"];
    bb199__0_6318 -> bb204__0_6318 [label=""];
    bb200__0_6318 -> bb201__0_6318 [label="return"];
    bb200__0_6318 -> bb239__0_6318 [label="unwind"];
    bb201__0_6318 -> bb202__0_6318 [label="return"];
    bb201__0_6318 -> bb239__0_6318 [label="unwind"];
    bb202__0_6318 -> bb203__0_6318 [label="return"];
    bb202__0_6318 -> bb239__0_6318 [label="unwind"];
    bb203__0_6318 -> bb205__0_6318 [label="0"];
    bb203__0_6318 -> bb204__0_6318 [label="otherwise"];
    bb204__0_6318 -> bb208__0_6318 [label="return"];
    bb204__0_6318 -> bb239__0_6318 [label="unwind"];
    bb205__0_6318 -> bb206__0_6318 [label="return"];
    bb205__0_6318 -> bb239__0_6318 [label="unwind"];
    bb206__0_6318 -> bb207__0_6318 [label="return"];
    bb206__0_6318 -> bb239__0_6318 [label="unwind"];
    bb207__0_6318 -> bb223__0_6318 [label=""];
    bb208__0_6318 -> bb209__0_6318 [label="return"];
    bb208__0_6318 -> bb239__0_6318 [label="unwind"];
    bb209__0_6318 -> bb210__0_6318 [label="0"];
    bb209__0_6318 -> bb213__0_6318 [label="otherwise"];
    bb210__0_6318 -> bb211__0_6318 [label="return"];
    bb210__0_6318 -> bb239__0_6318 [label="unwind"];
    bb211__0_6318 -> bb212__0_6318 [label="return"];
    bb211__0_6318 -> bb239__0_6318 [label="unwind"];
    bb212__0_6318 -> bb223__0_6318 [label=""];
    bb213__0_6318 -> bb232__0_6318 [label=""];
    bb214__0_6318 -> bb215__0_6318 [label="return"];
    bb214__0_6318 -> bb239__0_6318 [label="unwind"];
    bb215__0_6318 -> bb216__0_6318 [label=""];
    bb216__0_6318 -> bb223__0_6318 [label=""];
    bb217__0_6318 -> bb222__0_6318 [label=""];
    bb218__0_6318 -> bb219__0_6318 [label=""];
    bb219__0_6318 -> bb220__0_6318 [label=""];
    bb220__0_6318 -> bb221__0_6318 [label=""];
    bb221__0_6318 -> bb222__0_6318 [label=""];
    bb222__0_6318 -> bb223__0_6318 [label=""];
    bb223__0_6318 -> bb224__0_6318 [label=""];
    bb224__0_6318 -> bb225__0_6318 [label=""];
    bb225__0_6318 -> bb226__0_6318 [label=""];
    bb226__0_6318 -> bb227__0_6318 [label=""];
    bb227__0_6318 -> bb228__0_6318 [label="return"];
    bb227__0_6318 -> bb240__0_6318 [label="unwind"];
    bb228__0_6318 -> bb229__0_6318 [label=""];
    bb229__0_6318 -> bb230__0_6318 [label="return"];
    bb229__0_6318 -> bb241__0_6318 [label="unwind"];
    bb230__0_6318 -> bb231__0_6318 [label=""];
    bb231__0_6318 -> bb232__0_6318 [label=""];
    bb233__0_6318 -> bb234__0_6318 [label="return"];
    bb234__0_6318 -> bb239__0_6318 [label="return"];
    bb235__0_6318 -> bb239__0_6318 [label="return"];
    bb236__0_6318 -> bb239__0_6318 [label="return"];
    bb237__0_6318 -> bb239__0_6318 [label="return"];
    bb238__0_6318 -> bb239__0_6318 [label="return"];
    bb239__0_6318 -> bb240__0_6318 [label="return"];
    bb240__0_6318 -> bb241__0_6318 [label="return"];
    bb242__0_6318 -> bb233__0_6318 [label=""];
    bb243__0_6318 -> bb239__0_6318 [label="return"];
    bb244__0_6318 -> bb239__0_6318 [label="0"];
    bb244__0_6318 -> bb243__0_6318 [label="otherwise"];
    bb245__0_6318 -> bb239__0_6318 [label=""];
    bb246__0_6318 -> bb239__0_6318 [label=""];
    bb247__0_6318 -> bb251__0_6318 [label=""];
    bb248__0_6318 -> bb251__0_6318 [label="return"];
    bb249__0_6318 -> bb251__0_6318 [label="0"];
    bb249__0_6318 -> bb248__0_6318 [label="otherwise"];
    bb250__0_6318 -> bb256__0_6318 [label="return"];
    bb251__0_6318 -> bb256__0_6318 [label="0"];
    bb251__0_6318 -> bb250__0_6318 [label="otherwise"];
    bb252__0_6318 -> bb256__0_6318 [label=""];
    bb253__0_6318 -> bb256__0_6318 [label="return"];
    bb254__0_6318 -> bb256__0_6318 [label="0"];
    bb254__0_6318 -> bb253__0_6318 [label="otherwise"];
    bb255__0_6318 -> bb239__0_6318 [label="return"];
    bb256__0_6318 -> bb239__0_6318 [label="0"];
    bb256__0_6318 -> bb255__0_6318 [label="otherwise"];
    bb257__0_6318 -> bb259__0_6318 [label=""];
    bb258__0_6318 -> bb239__0_6318 [label="return"];
    bb259__0_6318 -> bb239__0_6318 [label="0"];
    bb259__0_6318 -> bb258__0_6318 [label="otherwise"];
    bb260__0_6318 -> bb239__0_6318 [label="return"];
    bb261__0_6318 -> bb239__0_6318 [label="0"];
    bb261__0_6318 -> bb260__0_6318 [label="otherwise"];
    bb262__0_6318 -> bb266__0_6318 [label=""];
    bb263__0_6318 -> bb266__0_6318 [label="return"];
    bb264__0_6318 -> bb266__0_6318 [label="0"];
    bb264__0_6318 -> bb263__0_6318 [label="otherwise"];
    bb265__0_6318 -> bb239__0_6318 [label="return"];
    bb266__0_6318 -> bb239__0_6318 [label="0"];
    bb266__0_6318 -> bb265__0_6318 [label="otherwise"];
    bb267__0_6318 -> bb239__0_6318 [label="return"];
    bb268__0_6318 -> bb239__0_6318 [label="0"];
    bb268__0_6318 -> bb267__0_6318 [label="otherwise"];
    bb269__0_6318 -> bb239__0_6318 [label=""];
    bb270__0_6318 -> bb239__0_6318 [label=""];
    bb271__0_6318 -> bb239__0_6318 [label=""];
    bb272__0_6318 -> bb240__0_6318 [label=""];
    bb273__0_6318 -> bb241__0_6318 [label=""];
    bb274__0_6318 -> bb241__0_6318 [label=""];
}
