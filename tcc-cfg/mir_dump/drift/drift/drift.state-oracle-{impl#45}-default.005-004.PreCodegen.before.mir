// MIR for `state::oracle::<impl at programs/drift/src/state/oracle.rs:305:10: 305:17>::default` before PreCodegen

fn state::oracle::<impl at programs/drift/src/state/oracle.rs:305:10: 305:17>::default() -> OraclePriceData {
    let mut _0: state::oracle::OraclePriceData;
    let mut _1: i64;
    let mut _2: u64;
    let mut _3: i64;
    let mut _4: bool;
    let mut _5: std::option::Option<u64>;

    bb0: {
        StorageLive(_1);
        _1 = <i64 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <i64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <bool as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <Option<u64> as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        _0 = OraclePriceData { price: move _1, confidence: move _2, delay: move _3, has_sufficient_number_of_data_points: move _4, sequence_id: move _5 };
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
