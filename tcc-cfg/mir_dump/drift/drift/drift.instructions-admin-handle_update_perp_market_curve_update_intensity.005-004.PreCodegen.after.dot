digraph Mir_0_5615 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_curve_update_intensity(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::HotAdminUpdatePerpMarket&lt;ReErased&gt;&gt;, _2: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u8;<br align="left"/>let mut _18: ();<br align="left"/>let _19: error::ErrorCode;<br align="left"/>let _20: ();<br align="left"/>let mut _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased str;<br align="left"/>let mut _23: &amp;ReErased std::string::String;<br align="left"/>let _24: &amp;ReErased std::string::String;<br align="left"/>let _25: std::string::String;<br align="left"/>let _26: std::string::String;<br align="left"/>let mut _27: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _30: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _31: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _35: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _36: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased error::ErrorCode;<br align="left"/>let _38: &amp;ReErased error::ErrorCode;<br align="left"/>let _39: ();<br align="left"/>let mut _40: &amp;ReErased str;<br align="left"/>let _41: &amp;ReErased str;<br align="left"/>let mut _42: &amp;ReErased std::string::String;<br align="left"/>let _43: &amp;ReErased std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let _45: std::string::String;<br align="left"/>let mut _46: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _48: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _49: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _50: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _51: error::ErrorCode;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: ();<br align="left"/>let _57: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _58: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _60: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _61: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _63: Closure(DefId(0:5616 ~ drift[d311]::instructions::admin::handle_update_perp_market_curve_update_intensity::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _69: ();<br align="left"/>let mut _70: &amp;ReErased str;<br align="left"/>let _71: &amp;ReErased str;<br align="left"/>let mut _72: &amp;ReErased std::string::String;<br align="left"/>let _73: &amp;ReErased std::string::String;<br align="left"/>let _74: std::string::String;<br align="left"/>let _75: std::string::String;<br align="left"/>let mut _76: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _78: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _79: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _80: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _83: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _84: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _85: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased u16;<br align="left"/>let _87: &amp;ReErased u16;<br align="left"/>let _88: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _89: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _90: ();<br align="left"/>let mut _91: &amp;ReErased str;<br align="left"/>let _92: &amp;ReErased str;<br align="left"/>let mut _93: &amp;ReErased std::string::String;<br align="left"/>let _94: &amp;ReErased std::string::String;<br align="left"/>let _95: std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let mut _97: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _101: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _105: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased u8;<br align="left"/>let _108: &amp;ReErased u8;<br align="left"/>let _109: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _110: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased u8;<br align="left"/>let _113: &amp;ReErased u8;<br align="left"/>let mut _114: u8;<br align="left"/>let mut _115: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _116: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _117: ();<br align="left"/>let mut _118: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _120: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _122: &amp;ReErased mut instructions::admin::HotAdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased mut instructions::admin::HotAdminUpdatePerpMarket&lt;ReErased&gt;;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug curve_update_intensity =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug error_code =&gt; _19;<br align="left"/>debug res =&gt; _26;<br align="left"/>debug res =&gt; _45;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug perp_market =&gt; _57;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug res =&gt; _75;<br align="left"/>debug res =&gt; _96;<br align="left"/>>;
    bb0__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_122 = deref_copy (_1.1: &amp;mut instructions::admin::HotAdminUpdatePerpMarket&lt;'_&gt;)<br/>_7 = &amp;((*_122).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_124 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/>_16 = Le(move _17, const 200_u8)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_130 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = ()<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>_19 = error::ErrorCode::DefaultError<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_121 = const _<br/>_30 = &amp;(*_121)<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;_19<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _37)</td></tr></table>>];
    bb9__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = [move _36]<br/>StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_27 = Arguments::&lt;'_&gt;::new_v1(move _28, move _32)</td></tr></table>>];
    bb10__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = format(move _27)</td></tr></table>>];
    bb11__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>_25 = move _26<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_22 = &lt;String as Deref&gt;::deref(move _23)</td></tr></table>>];
    bb12__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_21 = &amp;(*_22)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_20 = solana_program::log::sol_log(move _21)</td></tr></table>>];
    bb13__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb14__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_120 = const _<br/>_49 = &amp;(*_120)<br/>_48 = &amp;(*_49)<br/>_47 = move _48 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = Arguments::&lt;'_&gt;::new_const(move _47)</td></tr></table>>];
    bb15__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = format(move _46)</td></tr></table>>];
    bb16__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_49)<br/>_44 = move _45<br/>StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = &lt;String as Deref&gt;::deref(move _42)</td></tr></table>>];
    bb17__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_40 = &amp;(*_41)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_39 = solana_program::log::sol_log(move _40)</td></tr></table>>];
    bb18__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb19__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageLive(_51)<br/>_51 = _19<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _51)<br/>StorageDead(_51)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb21__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_52 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb22__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_14 as Continue).0: ())<br/>_13 = _56<br/>StorageDead(_56)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_123 = deref_copy (_1.1: &amp;mut instructions::admin::HotAdminUpdatePerpMarket&lt;'_&gt;)<br/>_62 = &amp;((*_123).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_61 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _62)</td></tr></table>>];
    bb23__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb24__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageLive(_63)<br/>_63 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_60 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _61, move _63)</td></tr></table>>];
    bb26__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb27__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_64 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb28__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = move ((_59 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_58 = move _68<br/>StorageDead(_68)<br/>_57 = &amp;mut _58<br/>_128 = discriminant(_59)<br/>StorageDead(_59)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_119 = const _<br/>_79 = &amp;(*_119)<br/>_78 = &amp;(*_79)<br/>_77 = move _78 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_78)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;(*_57)<br/></td></tr><tr><td align="left">_88 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _89)</td></tr></table>>];
    bb29__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb30__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>_126 = discriminant(_59)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = &amp;((*_88).21: u16)<br/>_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _86)</td></tr></table>>];
    bb32__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_84 = [move _85]<br/>StorageDead(_85)<br/>_83 = &amp;_84<br/>_82 = &amp;(*_83)<br/>_81 = move _82 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_76 = Arguments::&lt;'_&gt;::new_v1(move _77, move _81)</td></tr></table>>];
    bb33__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = format(move _76)</td></tr></table>>];
    bb34__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_79)<br/>_74 = move _75<br/>StorageDead(_75)<br/>_73 = &amp;_74<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = &lt;String as Deref&gt;::deref(move _72)</td></tr></table>>];
    bb35__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_70 = &amp;(*_71)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_69 = solana_program::log::sol_log(move _70)</td></tr></table>>];
    bb36__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb37__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_118 = const _<br/>_100 = &amp;(*_118)<br/>_99 = &amp;(*_100)<br/>_98 = move _99 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;(*_57)<br/></td></tr><tr><td align="left">_109 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb38__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_108 = &amp;(((*_109).1: state::perp_market::AMM).70: u8)<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _107)</td></tr></table>>];
    bb39__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_2<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _112)</td></tr></table>>];
    bb40__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_105 = [move _106, move _111]<br/>StorageDead(_111)<br/>StorageDead(_106)<br/>_104 = &amp;_105<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_97 = Arguments::&lt;'_&gt;::new_v1(move _98, move _102)</td></tr></table>>];
    bb41__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = format(move _97)</td></tr></table>>];
    bb42__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>_95 = move _96<br/>StorageDead(_96)<br/>_94 = &amp;_95<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = &lt;String as Deref&gt;::deref(move _93)</td></tr></table>>];
    bb43__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_91 = &amp;(*_92)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_90 = solana_program::log::sol_log(move _91)</td></tr></table>>];
    bb44__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb45__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageLive(_114)<br/>_114 = _2<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;mut (*_57)<br/></td></tr><tr><td align="left">_115 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _116)</td></tr></table>>];
    bb46__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>(((*_115).1: state::perp_market::AMM).70: u8) = move _114<br/>StorageDead(_114)<br/>StorageDead(_115)<br/>StorageLive(_117)<br/>_117 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _117)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb47__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb49__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb50__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb51__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_58)</td></tr></table>>];
    bb52__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb53__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb54__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb55__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left" balign="left">_132 = discriminant(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_5615 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left" balign="left">_133 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5615 -> bb1__0_5615 [label="return"];
    bb1__0_5615 -> bb2__0_5615 [label="return"];
    bb1__0_5615 -> bb54__0_5615 [label="unwind"];
    bb2__0_5615 -> bb3__0_5615 [label="0"];
    bb2__0_5615 -> bb5__0_5615 [label="1"];
    bb2__0_5615 -> bb4__0_5615 [label="otherwise"];
    bb3__0_5615 -> bb8__0_5615 [label="0"];
    bb3__0_5615 -> bb7__0_5615 [label="otherwise"];
    bb5__0_5615 -> bb6__0_5615 [label="return"];
    bb5__0_5615 -> bb56__0_5615 [label="unwind"];
    bb6__0_5615 -> bb48__0_5615 [label=""];
    bb7__0_5615 -> bb20__0_5615 [label=""];
    bb8__0_5615 -> bb9__0_5615 [label="return"];
    bb9__0_5615 -> bb10__0_5615 [label="return"];
    bb10__0_5615 -> bb11__0_5615 [label="return"];
    bb11__0_5615 -> bb12__0_5615 [label="return"];
    bb11__0_5615 -> bb53__0_5615 [label="unwind"];
    bb12__0_5615 -> bb13__0_5615 [label="return"];
    bb12__0_5615 -> bb53__0_5615 [label="unwind"];
    bb13__0_5615 -> bb14__0_5615 [label="return"];
    bb13__0_5615 -> bb54__0_5615 [label="unwind"];
    bb14__0_5615 -> bb15__0_5615 [label="return"];
    bb15__0_5615 -> bb16__0_5615 [label="return"];
    bb16__0_5615 -> bb17__0_5615 [label="return"];
    bb16__0_5615 -> bb52__0_5615 [label="unwind"];
    bb17__0_5615 -> bb18__0_5615 [label="return"];
    bb17__0_5615 -> bb52__0_5615 [label="unwind"];
    bb18__0_5615 -> bb19__0_5615 [label="return"];
    bb18__0_5615 -> bb54__0_5615 [label="unwind"];
    bb19__0_5615 -> bb20__0_5615 [label=""];
    bb20__0_5615 -> bb21__0_5615 [label="return"];
    bb21__0_5615 -> bb22__0_5615 [label="0"];
    bb21__0_5615 -> bb23__0_5615 [label="1"];
    bb21__0_5615 -> bb4__0_5615 [label="otherwise"];
    bb22__0_5615 -> bb25__0_5615 [label="return"];
    bb23__0_5615 -> bb24__0_5615 [label="return"];
    bb24__0_5615 -> bb48__0_5615 [label=""];
    bb25__0_5615 -> bb26__0_5615 [label="return"];
    bb25__0_5615 -> bb54__0_5615 [label="unwind"];
    bb26__0_5615 -> bb27__0_5615 [label="return"];
    bb26__0_5615 -> bb54__0_5615 [label="unwind"];
    bb27__0_5615 -> bb28__0_5615 [label="0"];
    bb27__0_5615 -> bb29__0_5615 [label="1"];
    bb27__0_5615 -> bb4__0_5615 [label="otherwise"];
    bb28__0_5615 -> bb31__0_5615 [label="return"];
    bb28__0_5615 -> bb51__0_5615 [label="unwind"];
    bb29__0_5615 -> bb30__0_5615 [label="return"];
    bb29__0_5615 -> bb55__0_5615 [label="unwind"];
    bb30__0_5615 -> bb48__0_5615 [label=""];
    bb31__0_5615 -> bb32__0_5615 [label="return"];
    bb31__0_5615 -> bb51__0_5615 [label="unwind"];
    bb32__0_5615 -> bb33__0_5615 [label="return"];
    bb32__0_5615 -> bb51__0_5615 [label="unwind"];
    bb33__0_5615 -> bb34__0_5615 [label="return"];
    bb33__0_5615 -> bb51__0_5615 [label="unwind"];
    bb34__0_5615 -> bb35__0_5615 [label="return"];
    bb34__0_5615 -> bb50__0_5615 [label="unwind"];
    bb35__0_5615 -> bb36__0_5615 [label="return"];
    bb35__0_5615 -> bb50__0_5615 [label="unwind"];
    bb36__0_5615 -> bb37__0_5615 [label="return"];
    bb36__0_5615 -> bb51__0_5615 [label="unwind"];
    bb37__0_5615 -> bb38__0_5615 [label="return"];
    bb37__0_5615 -> bb51__0_5615 [label="unwind"];
    bb38__0_5615 -> bb39__0_5615 [label="return"];
    bb38__0_5615 -> bb51__0_5615 [label="unwind"];
    bb39__0_5615 -> bb40__0_5615 [label="return"];
    bb39__0_5615 -> bb51__0_5615 [label="unwind"];
    bb40__0_5615 -> bb41__0_5615 [label="return"];
    bb40__0_5615 -> bb51__0_5615 [label="unwind"];
    bb41__0_5615 -> bb42__0_5615 [label="return"];
    bb41__0_5615 -> bb51__0_5615 [label="unwind"];
    bb42__0_5615 -> bb43__0_5615 [label="return"];
    bb42__0_5615 -> bb49__0_5615 [label="unwind"];
    bb43__0_5615 -> bb44__0_5615 [label="return"];
    bb43__0_5615 -> bb49__0_5615 [label="unwind"];
    bb44__0_5615 -> bb45__0_5615 [label="return"];
    bb44__0_5615 -> bb51__0_5615 [label="unwind"];
    bb45__0_5615 -> bb46__0_5615 [label="return"];
    bb45__0_5615 -> bb51__0_5615 [label="unwind"];
    bb46__0_5615 -> bb47__0_5615 [label="return"];
    bb46__0_5615 -> bb54__0_5615 [label="unwind"];
    bb47__0_5615 -> bb48__0_5615 [label=""];
    bb49__0_5615 -> bb51__0_5615 [label="return"];
    bb50__0_5615 -> bb51__0_5615 [label="return"];
    bb51__0_5615 -> bb54__0_5615 [label="return"];
    bb52__0_5615 -> bb54__0_5615 [label="return"];
    bb53__0_5615 -> bb54__0_5615 [label="return"];
    bb55__0_5615 -> bb54__0_5615 [label=""];
    bb56__0_5615 -> bb54__0_5615 [label=""];
}
