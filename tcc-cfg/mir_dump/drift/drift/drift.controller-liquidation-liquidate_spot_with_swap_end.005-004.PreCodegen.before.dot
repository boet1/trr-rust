digraph Mir_0_341 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::liquidate_spot_with_swap_end(_1: u16, _2: u16, _3: &amp;ReErased mut state::user::User, _4: &amp;ReErased anchor_lang::prelude::Pubkey, _5: &amp;ReErased mut state::user::UserStats, _6: &amp;ReErased mut state::user::User, _7: &amp;ReErased anchor_lang::prelude::Pubkey, _8: &amp;ReErased mut state::user::UserStats, _9: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _10: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _11: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _12: i64, _13: u64, _14: &amp;ReErased state::state::State, _15: u128, _16: u128) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _17: u32;<br align="left"/>let _18: i64;<br align="left"/>let _19: u32;<br align="left"/>let _20: u32;<br align="left"/>let mut _21: (i64, u32, u32);<br align="left"/>let _22: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _25: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _26: &amp;ReErased u16;<br align="left"/>let _27: &amp;ReErased u16;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _33: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _34: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _35: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _37: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _38: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _40: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _41: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _42: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _43: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _44: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _50: i64;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: u32;<br align="left"/>let mut _53: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _55: u32;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _58: u32;<br align="left"/>let mut _59: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _60: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _61: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u32;<br align="left"/>let _67: i64;<br align="left"/>let _68: u32;<br align="left"/>let _69: u32;<br align="left"/>let _70: u32;<br align="left"/>let mut _71: (i64, u32, u32, u32);<br align="left"/>let _72: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _74: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _75: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased u16;<br align="left"/>let _77: &amp;ReErased u16;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _83: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _84: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _85: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _87: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _88: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _90: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _91: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _92: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _93: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _94: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _100: i64;<br align="left"/>let _101: u32;<br align="left"/>let mut _102: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _103: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _104: i64;<br align="left"/>let mut _105: u32;<br align="left"/>let mut _106: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _107: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _108: u32;<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _110: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _111: u32;<br align="left"/>let mut _112: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _113: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _114: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: u32;<br align="left"/>let mut _120: u32;<br align="left"/>let _121: ();<br align="left"/>let mut _122: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _123: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _124: u128;<br align="left"/>let mut _125: u128;<br align="left"/>let mut _126: u32;<br align="left"/>let mut _127: u32;<br align="left"/>let mut _128: i64;<br align="left"/>let mut _129: i64;<br align="left"/>let mut _130: u32;<br align="left"/>let mut _131: u32;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: ();<br align="left"/>let _137: state::margin_calculation::MarginContext;<br align="left"/>let mut _138: state::margin_calculation::MarginContext;<br align="left"/>let mut _139: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _140: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _141: state::margin_calculation::MarginContext;<br align="left"/>let mut _142: u32;<br align="left"/>let mut _143: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _144: u16;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: state::margin_calculation::MarginContext;<br align="left"/>let mut _150: &amp;ReErased state::user::User;<br align="left"/>let mut _151: i64;<br align="left"/>let _152: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _153: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _154: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _155: &amp;ReErased mut state::user::User;<br align="left"/>let mut _156: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _159: state::margin_calculation::MarginContext;<br align="left"/>let mut _160: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _161: i64;<br align="left"/>let mut _162: isize;<br align="left"/>let _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _166: state::margin_calculation::MarginCalculation;<br align="left"/>let _167: u16;<br align="left"/>let mut _168: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _169: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _170: &amp;ReErased mut state::user::User;<br align="left"/>let mut _171: u64;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: u16;<br align="left"/>let mut _177: u64;<br align="left"/>let _178: u128;<br align="left"/>let mut _179: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _180: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _181: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _182: isize;<br align="left"/>let _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _184: !;<br align="left"/>let mut _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _186: u128;<br align="left"/>let _187: u128;<br align="left"/>let mut _188: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _189: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _190: u128;<br align="left"/>let mut _191: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _192: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _193: u128;<br align="left"/>let mut _194: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _195: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _196: u128;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _201: u128;<br align="left"/>let mut _202: u128;<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _204: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _205: u32;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: u128;<br align="left"/>let mut _211: isize;<br align="left"/>let _212: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _213: !;<br align="left"/>let mut _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _215: u128;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: u128;<br align="left"/>let _221: ();<br align="left"/>let mut _222: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _224: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _225: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _226: &amp;ReErased u16;<br align="left"/>let _227: &amp;ReErased u16;<br align="left"/>let mut _228: isize;<br align="left"/>let _229: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _230: !;<br align="left"/>let mut _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _232: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _233: ();<br align="left"/>let mut _234: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _235: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _236: u128;<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _238: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _239: u128;<br align="left"/>let mut _240: u128;<br align="left"/>let mut _241: isize;<br align="left"/>let _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _243: !;<br align="left"/>let mut _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _245: u128;<br align="left"/>let mut _246: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _247: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _248: state::spot_market::SpotBalanceType;<br align="left"/>let mut _249: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _250: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _251: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _252: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _253: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _254: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _255: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _256: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _257: &amp;ReErased mut state::user::User;<br align="left"/>let mut _258: u16;<br align="left"/>let mut _259: isize;<br align="left"/>let _260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _261: !;<br align="left"/>let mut _262: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _263: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _264: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _265: u128;<br align="left"/>let mut _266: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _267: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _268: u128;<br align="left"/>let mut _269: u128;<br align="left"/>let mut _270: isize;<br align="left"/>let _271: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _272: !;<br align="left"/>let mut _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _274: u128;<br align="left"/>let mut _275: isize;<br align="left"/>let _276: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _277: !;<br align="left"/>let mut _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _279: ();<br align="left"/>let _280: ();<br align="left"/>let mut _281: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _282: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _283: u128;<br align="left"/>let mut _284: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _285: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _286: state::spot_market::SpotBalanceType;<br align="left"/>let mut _287: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _288: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _289: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _290: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _291: isize;<br align="left"/>let _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _293: !;<br align="left"/>let mut _294: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _295: ();<br align="left"/>let _296: ();<br align="left"/>let mut _297: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _298: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _299: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _300: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _301: &amp;ReErased u16;<br align="left"/>let _302: &amp;ReErased u16;<br align="left"/>let mut _303: isize;<br align="left"/>let _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _307: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _308: ();<br align="left"/>let mut _309: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _310: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _311: u128;<br align="left"/>let mut _312: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _313: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _314: state::spot_market::SpotBalanceType;<br align="left"/>let mut _315: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _316: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _317: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _318: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _319: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _320: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _321: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _322: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _323: &amp;ReErased mut state::user::User;<br align="left"/>let mut _324: u16;<br align="left"/>let mut _325: isize;<br align="left"/>let _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _327: !;<br align="left"/>let mut _328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _329: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _330: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _331: u128;<br align="left"/>let mut _332: isize;<br align="left"/>let _333: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _334: !;<br align="left"/>let mut _335: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _336: ();<br align="left"/>let _337: u64;<br align="left"/>let _338: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _339: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _340: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, state::margin_calculation::MarginCalculation)&gt;;<br align="left"/>let mut _341: std::result::Result&lt;(u64, state::margin_calculation::MarginCalculation), error::ErrorCode&gt;;<br align="left"/>let mut _342: &amp;ReErased state::user::User;<br align="left"/>let mut _343: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _344: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _345: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _346: u32;<br align="left"/>let mut _347: u128;<br align="left"/>let mut _348: isize;<br align="left"/>let _349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _350: !;<br align="left"/>let mut _351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _352: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _353: u64;<br align="left"/>let mut _354: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _355: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _356: u64;<br align="left"/>let mut _357: u64;<br align="left"/>let mut _358: isize;<br align="left"/>let _359: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _360: !;<br align="left"/>let mut _361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _362: u64;<br align="left"/>let _363: ();<br align="left"/>let mut _364: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _365: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _366: &amp;ReErased mut state::user::User;<br align="left"/>let mut _367: u64;<br align="left"/>let mut _368: isize;<br align="left"/>let _369: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _370: !;<br align="left"/>let mut _371: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _372: ();<br align="left"/>let _373: ();<br align="left"/>let mut _374: bool;<br align="left"/>let mut _375: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _376: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _377: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _378: isize;<br align="left"/>let _379: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _380: !;<br align="left"/>let mut _381: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _382: bool;<br align="left"/>let _383: ();<br align="left"/>let mut _384: &amp;ReErased mut state::user::User;<br align="left"/>let mut _385: bool;<br align="left"/>let mut _386: &amp;ReErased state::user::User;<br align="left"/>let _387: ();<br align="left"/>let mut _388: &amp;ReErased mut state::user::User;<br align="left"/>let _389: ();<br align="left"/>let _390: ();<br align="left"/>let mut _391: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _392: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _393: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _394: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _395: &amp;ReErased [u8];<br align="left"/>let _396: &amp;ReErased [u8];<br align="left"/>let mut _397: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _398: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _399: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _400: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _401: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _402: state::events::LiquidationRecord;<br align="left"/>let mut _403: i64;<br align="left"/>let mut _404: u16;<br align="left"/>let mut _405: state::events::LiquidationType;<br align="left"/>let mut _406: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _407: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _408: u128;<br align="left"/>let mut _409: i128;<br align="left"/>let mut _410: bool;<br align="left"/>let mut _411: &amp;ReErased state::user::User;<br align="left"/>let mut _412: u64;<br align="left"/>let mut _413: state::events::LiquidateSpotRecord;<br align="left"/>let mut _414: u16;<br align="left"/>let mut _415: i64;<br align="left"/>let mut _416: u128;<br align="left"/>let mut _417: u16;<br align="left"/>let mut _418: i64;<br align="left"/>let mut _419: u128;<br align="left"/>let mut _420: u64;<br align="left"/>let mut _421: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _422: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _423: u128;<br align="left"/>let mut _424: isize;<br align="left"/>let _425: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _426: !;<br align="left"/>let mut _427: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _428: u64;<br align="left"/>let mut _429: state::events::LiquidationRecord;<br align="left"/>let mut _430: ();<br align="left"/>let mut _431: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _432: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _433: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _434: isize;<br align="left"/>let mut _435: isize;<br align="left"/>let mut _436: isize;<br align="left"/>let mut _437: isize;<br align="left"/>let mut _438: isize;<br align="left"/>let mut _439: isize;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: isize;<br align="left"/>let mut _445: isize;<br align="left"/>let mut _446: isize;<br align="left"/>let mut _447: isize;<br align="left"/>let mut _448: isize;<br align="left"/>let mut _449: isize;<br align="left"/>let mut _450: isize;<br align="left"/>let mut _451: isize;<br align="left"/>let mut _452: isize;<br align="left"/>let mut _453: isize;<br align="left"/>debug asset_market_index =&gt; _1;<br align="left"/>debug liability_market_index =&gt; _2;<br align="left"/>debug user =&gt; _3;<br align="left"/>debug user_key =&gt; _4;<br align="left"/>debug user_stats =&gt; _5;<br align="left"/>debug _liquidator =&gt; _6;<br align="left"/>debug liquidator_key =&gt; _7;<br align="left"/>debug _liquidator_stats =&gt; _8;<br align="left"/>debug perp_market_map =&gt; _9;<br align="left"/>debug spot_market_map =&gt; _10;<br align="left"/>debug oracle_map =&gt; _11;<br align="left"/>debug now =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug state =&gt; _14;<br align="left"/>debug asset_transfer =&gt; _15;<br align="left"/>debug liability_transfer =&gt; _16;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _17;<br align="left"/>debug asset_price =&gt; _18;<br align="left"/>debug asset_decimals =&gt; _19;<br align="left"/>debug asset_liquidation_multiplier =&gt; _20;<br align="left"/>debug asset_market =&gt; _22;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug asset_price_data =&gt; _33;<br align="left"/>debug _validity_guard_rails =&gt; _34;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug asset_price =&gt; _50;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug liability_price =&gt; _67;<br align="left"/>debug liability_decimals =&gt; _68;<br align="left"/>debug liability_liquidation_multiplier =&gt; _69;<br align="left"/>debug liquidation_if_fee =&gt; _70;<br align="left"/>debug liability_market =&gt; _72;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug liability_price_data =&gt; _83;<br align="left"/>debug _validity_guard_rails =&gt; _84;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug liability_price =&gt; _100;<br align="left"/>debug liquidation_if_fee =&gt; _101;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug margin_context =&gt; _137;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug margin_calculation =&gt; _152;<br align="left"/>debug residual =&gt; _163;<br align="left"/>debug val =&gt; _166;<br align="left"/>debug liquidation_id =&gt; _167;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>debug margin_freed =&gt; _177;<br align="left"/>debug margin_shortage =&gt; _178;<br align="left"/>debug residual =&gt; _183;<br align="left"/>debug val =&gt; _186;<br align="left"/>debug if_fee =&gt; _187;<br align="left"/>debug residual =&gt; _198;<br align="left"/>debug val =&gt; _201;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug residual =&gt; _212;<br align="left"/>debug val =&gt; _215;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug liability_market =&gt; _222;<br align="left"/>debug residual =&gt; _229;<br align="left"/>debug val =&gt; _232;<br align="left"/>debug residual =&gt; _242;<br align="left"/>debug val =&gt; _245;<br align="left"/>debug residual =&gt; _260;<br align="left"/>debug val =&gt; _263;<br align="left"/>debug residual =&gt; _271;<br align="left"/>debug val =&gt; _274;<br align="left"/>debug residual =&gt; _276;<br align="left"/>debug val =&gt; _279;<br align="left"/>debug residual =&gt; _292;<br align="left"/>debug val =&gt; _295;<br align="left"/>debug asset_market =&gt; _297;<br align="left"/>debug residual =&gt; _304;<br align="left"/>debug val =&gt; _307;<br align="left"/>debug residual =&gt; _326;<br align="left"/>debug val =&gt; _329;<br align="left"/>debug residual =&gt; _333;<br align="left"/>debug val =&gt; _336;<br align="left"/>debug margin_freed_from_liability =&gt; _337;<br align="left"/>debug margin_calulcation_after =&gt; _338;<br align="left"/>debug residual =&gt; _349;<br align="left"/>debug val =&gt; _352;<br align="left"/>debug residual =&gt; _359;<br align="left"/>debug val =&gt; _362;<br align="left"/>debug residual =&gt; _369;<br align="left"/>debug val =&gt; _372;<br align="left"/>debug residual =&gt; _379;<br align="left"/>debug val =&gt; _382;<br align="left"/>debug residual =&gt; _425;<br align="left"/>debug val =&gt; _428;<br align="left"/>>;
    bb0__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((*_14).11: u32)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_10)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;_1<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_24 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _25, move _26)</td></tr></table>>];
    bb1__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb2__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_28 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb3__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_23 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_22 = move _32<br/>StorageDead(_32)<br/>_436 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;mut (*_11)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_22<br/></td></tr><tr><td align="left">_43 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb4__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb6__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>_434 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_42 = &amp;(*_43)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_41 = SpotMarket::oracle_id(move _42)</td></tr></table>>];
    bb8__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_37 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _38, move _39)</td></tr></table>>];
    bb9__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb10__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_45 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb11__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_36 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_35 = _49<br/>StorageDead(_49)<br/>StorageLive(_33)<br/>_33 = (_35.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_34)<br/>_34 = (_35.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_50)<br/>_50 = ((*_33).0: i64)<br/>StorageLive(_51)<br/>_51 = _50<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_22<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb12__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb13__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb14__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = ((*_53).41: u32)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;_22<br/></td></tr><tr><td align="left">_59 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb15__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_58 = ((*_59).36: u32)<br/>StorageLive(_61)<br/>_61 = LiquidationMultiplierType::Premium<br/></td></tr><tr><td align="left">_57 = calculate_liquidation_multiplier(move _58, move _61)</td></tr></table>>];
    bb16__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb17__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_62 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb18__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_56 as Continue).0: u32)<br/>_55 = _66<br/>StorageDead(_66)<br/>_21 = (move _51, move _52, move _55)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb19__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb20__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb21__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_18)<br/>_18 = (_21.0: i64)<br/>StorageLive(_19)<br/>_19 = (_21.1: u32)<br/>StorageLive(_20)<br/>_20 = (_21.2: u32)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_21)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_10)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;_2<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_74 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _75, move _76)</td></tr></table>>];
    bb22__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb23__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_78 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb24__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = move ((_73 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_72 = move _82<br/>StorageDead(_82)<br/>_440 = discriminant(_73)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_11)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_72<br/></td></tr><tr><td align="left">_93 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb25__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb26__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>_438 = discriminant(_73)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = SpotMarket::oracle_id(move _92)</td></tr></table>>];
    bb28__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = &amp;_91<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_87 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _88, move _89)</td></tr></table>>];
    bb29__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb30__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_95 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb31__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_86 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_85 = _99<br/>StorageDead(_99)<br/>StorageLive(_83)<br/>_83 = (_85.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_84)<br/>_84 = (_85.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_100)<br/>_100 = ((*_83).0: i64)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;_72<br/></td></tr><tr><td align="left">_102 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _103)</td></tr></table>>];
    bb32__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb33__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb34__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_101 = ((*_102).37: u32)<br/>StorageDead(_102)<br/>StorageLive(_104)<br/>_104 = _100<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_72<br/></td></tr><tr><td align="left">_106 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _107)</td></tr></table>>];
    bb35__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_105 = ((*_106).41: u32)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_72<br/></td></tr><tr><td align="left">_112 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _113)</td></tr></table>>];
    bb36__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_111 = ((*_112).36: u32)<br/>StorageLive(_114)<br/>_114 = LiquidationMultiplierType::Discount<br/></td></tr><tr><td align="left">_110 = calculate_liquidation_multiplier(move _111, move _114)</td></tr></table>>];
    bb37__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb38__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_115 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb39__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_109 as Continue).0: u32)<br/>_108 = _119<br/>StorageDead(_119)<br/>StorageLive(_120)<br/>_120 = _101<br/>_71 = (move _104, move _105, move _108, move _120)<br/>StorageDead(_120)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb40__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb41__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb42__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_67)<br/>_67 = (_71.0: i64)<br/>StorageLive(_68)<br/>_68 = (_71.1: u32)<br/>StorageLive(_69)<br/>_69 = (_71.2: u32)<br/>StorageLive(_70)<br/>_70 = (_71.3: u32)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_71)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _15<br/>StorageLive(_125)<br/>_125 = _16<br/>StorageLive(_126)<br/>_126 = _19<br/>StorageLive(_127)<br/>_127 = _68<br/>StorageLive(_128)<br/>_128 = _18<br/>StorageLive(_129)<br/>_129 = _67<br/>StorageLive(_130)<br/>_130 = _20<br/>StorageLive(_131)<br/>_131 = _69<br/></td></tr><tr><td align="left">_123 = validate_swap_within_liquidation_boundaries(move _124, move _125, move _126, move _127, move _128, move _129, move _130, move _131)</td></tr></table>>];
    bb43__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _123)</td></tr></table>>];
    bb44__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_132 = discriminant(_122)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb45__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_122 as Continue).0: ())<br/>_121 = _136<br/>StorageDead(_136)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = _17<br/></td></tr><tr><td align="left">_141 = MarginContext::liquidation(move _142)</td></tr></table>>];
    bb46__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_122 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb47__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = _2<br/></td></tr><tr><td align="left">_143 = MarketIdentifier::spot(move _144)</td></tr></table>>];
    bb49__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">_140 = MarginContext::track_market_margin_requirement(move _141, move _143)</td></tr></table>>];
    bb50__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _140)</td></tr></table>>];
    bb51__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_145 = discriminant(_139)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb52__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_139 as Continue).0: state::margin_calculation::MarginContext)<br/>_138 = _149<br/>StorageDead(_149)<br/>StorageLive(_150)<br/>_150 = &amp;(*_3)<br/>StorageLive(_151)<br/>_151 = _12<br/></td></tr><tr><td align="left">_137 = MarginContext::fuel_numerator(move _138, move _150, move _151)</td></tr></table>>];
    bb53__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_139 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb54__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_138)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_150)<br/>StorageDead(_138)<br/>StorageDead(_139)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;mut (*_3)<br/>StorageLive(_156)<br/>_156 = &amp;(*_9)<br/>StorageLive(_157)<br/>_157 = &amp;(*_10)<br/>StorageLive(_158)<br/>_158 = &amp;mut (*_11)<br/>StorageLive(_159)<br/>_159 = _137<br/>StorageLive(_160)<br/>_160 = &amp;mut (*_5)<br/>StorageLive(_161)<br/>_161 = _12<br/></td></tr><tr><td align="left">_154 = User::calculate_margin_and_increment_fuel_bonus(move _155, move _156, move _157, move _158, move _159, move _160, move _161)</td></tr></table>>];
    bb56__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_153 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _154)</td></tr></table>>];
    bb57__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_162 = discriminant(_153)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb58__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_153 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_152 = _166<br/>StorageDead(_166)<br/>StorageDead(_153)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;mut (*_3)<br/>StorageLive(_171)<br/>_171 = _13<br/></td></tr><tr><td align="left">_169 = User::enter_liquidation(move _170, move _171)</td></tr></table>>];
    bb59__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_153 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_165)<br/>_165 = _163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _165)</td></tr></table>>];
    bb60__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_168 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _169)</td></tr></table>>];
    bb62__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_172 = discriminant(_168)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb63__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_168 as Continue).0: u16)<br/>_167 = _176<br/>StorageDead(_176)<br/>StorageDead(_168)<br/>StorageLive(_177)<br/>_177 = const 0_u64<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;_152<br/></td></tr><tr><td align="left">_180 = MarginCalculation::margin_shortage(move _181)</td></tr></table>>];
    bb64__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_168 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb65__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _180)</td></tr></table>>];
    bb67__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_182 = discriminant(_179)<br/></td></tr><tr><td align="left">switchInt(move _182)</td></tr></table>>];
    bb68__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_186)<br/>_186 = ((_179 as Continue).0: u128)<br/>_178 = _186<br/>StorageDead(_186)<br/>StorageDead(_179)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = _16<br/></td></tr><tr><td align="left">_195 = &lt;u128 as Cast&gt;::cast::&lt;u128&gt;(move _196)</td></tr></table>>];
    bb69__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_179 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_185)<br/>_185 = _183<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _185)</td></tr></table>>];
    bb70__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/></td></tr><tr><td align="left">_194 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _195)</td></tr></table>>];
    bb72__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>_197 = discriminant(_194)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb73__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_194 as Continue).0: u128)<br/>_193 = _201<br/>StorageDead(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = _70<br/></td></tr><tr><td align="left">_204 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _205)</td></tr></table>>];
    bb74__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_194 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_200)<br/>_200 = _198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _200)</td></tr></table>>];
    bb75__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb77__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_206 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb78__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_203 as Continue).0: u128)<br/>_202 = _210<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_192 = &lt;u128 as SafeMath&gt;::safe_mul(move _193, move _202)</td></tr></table>>];
    bb79__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb80__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_202)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_191 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _192)</td></tr></table>>];
    bb82__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>_211 = discriminant(_191)<br/></td></tr><tr><td align="left">switchInt(move _211)</td></tr></table>>];
    bb83__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_191 as Continue).0: u128)<br/>_190 = _215<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">_189 = &lt;u128 as SafeMath&gt;::safe_div(move _190, const _)</td></tr></table>>];
    bb84__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = ((_191 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_214)<br/>_214 = _212<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _214)</td></tr></table>>];
    bb85__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">_188 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _189)</td></tr></table>>];
    bb87__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_216 = discriminant(_188)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb88__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_188 as Continue).0: u128)<br/>_187 = _220<br/>StorageDead(_220)<br/>StorageDead(_203)<br/>StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;(*_10)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;_2<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_224 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _225, move _226)</td></tr></table>>];
    bb89__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_188 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb90__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _224)</td></tr></table>>];
    bb92__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_228 = discriminant(_223)<br/></td></tr><tr><td align="left">switchInt(move _228)</td></tr></table>>];
    bb93__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = move ((_223 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_222 = move _232<br/>StorageDead(_232)<br/>_444 = discriminant(_223)<br/>StorageDead(_227)<br/>StorageDead(_223)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = _16<br/>StorageLive(_240)<br/>_240 = _187<br/></td></tr><tr><td align="left">_238 = &lt;u128 as SafeMath&gt;::safe_sub(move _239, move _240)</td></tr></table>>];
    bb94__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_231)<br/>_231 = _229<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _231)</td></tr></table>>];
    bb95__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/>_442 = discriminant(_223)<br/>StorageDead(_227)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb97__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_241 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _241)</td></tr></table>>];
    bb98__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = ((_237 as Continue).0: u128)<br/>_236 = _245<br/>StorageDead(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_433 = const _<br/>_247 = &amp;(*_433)<br/>_246 = &amp;(*_247)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = &amp;mut _222<br/>_251 = &amp;mut (*_252)<br/></td></tr><tr><td align="left">_250 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _251)</td></tr></table>>];
    bb99__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_244)<br/>_244 = _242<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _244)</td></tr></table>>];
    bb100__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_242)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_249 = &amp;mut (*_250)<br/>StorageDead(_251)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;mut (*_3)<br/>StorageLive(_258)<br/>_258 = _2<br/></td></tr><tr><td align="left">_256 = User::get_spot_position_mut(move _257, move _258)</td></tr></table>>];
    bb102__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_255 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _256)</td></tr></table>>];
    bb103__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_259 = discriminant(_255)<br/></td></tr><tr><td align="left">switchInt(move _259)</td></tr></table>>];
    bb104__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = move ((_255 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_254 = &amp;mut (*_263)<br/>StorageDead(_263)<br/>_253 = &amp;mut (*_254)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = _16<br/>StorageLive(_269)<br/>_269 = _187<br/></td></tr><tr><td align="left">_267 = &lt;u128 as SafeMath&gt;::safe_sub(move _268, move _269)</td></tr></table>>];
    bb105__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_260)<br/>_260 = ((_255 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_262)<br/>_262 = _260<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _262)</td></tr></table>>];
    bb106__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">_266 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _267)</td></tr></table>>];
    bb108__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>_270 = discriminant(_266)<br/></td></tr><tr><td align="left">switchInt(move _270)</td></tr></table>>];
    bb109__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_274)<br/>_274 = ((_266 as Continue).0: u128)<br/>_265 = _274<br/>StorageDead(_274)<br/>_264 = Option::&lt;u128&gt;::Some(move _265)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_235 = update_spot_balances_and_cumulative_deposits(move _236, move _246, move _249, move _253, const false, move _264)</td></tr></table>>];
    bb110__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_266 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_273)<br/>_273 = _271<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _273)</td></tr></table>>];
    bb111__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_265)<br/>StorageDead(_264)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_234 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _235)</td></tr></table>>];
    bb113__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_275 = discriminant(_234)<br/></td></tr><tr><td align="left">switchInt(move _275)</td></tr></table>>];
    bb114__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_279)<br/>_279 = ((_234 as Continue).0: ())<br/>_233 = _279<br/>StorageDead(_279)<br/>StorageDead(_266)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_247)<br/>StorageDead(_237)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = _187<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>_432 = const _<br/>_285 = &amp;(*_432)<br/>_284 = &amp;(*_285)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = &amp;mut _222<br/>_289 = &amp;mut (*_290)<br/></td></tr><tr><td align="left">_288 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _289)</td></tr></table>>];
    bb115__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_234 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_278)<br/>_278 = _276<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _278)</td></tr></table>>];
    bb116__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_287 = &amp;mut (*_288)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">_282 = update_revenue_pool_balances(move _283, move _284, move _287)</td></tr></table>>];
    bb118__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">_281 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _282)</td></tr></table>>];
    bb119__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>_291 = discriminant(_281)<br/></td></tr><tr><td align="left">switchInt(move _291)</td></tr></table>>];
    bb120__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = ((_281 as Continue).0: ())<br/>_280 = _295<br/>StorageDead(_295)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>_221 = const ()<br/></td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb121__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_281 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_294)<br/>_294 = _292<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _294)</td></tr></table>>];
    bb122__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_300 = &amp;(*_10)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = &amp;_1<br/>_301 = &amp;(*_302)<br/></td></tr><tr><td align="left">_299 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _300, move _301)</td></tr></table>>];
    bb124__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">_298 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _299)</td></tr></table>>];
    bb125__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_303 = discriminant(_298)<br/></td></tr><tr><td align="left">switchInt(move _303)</td></tr></table>>];
    bb126__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = move ((_298 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_297 = move _307<br/>StorageDead(_307)<br/>_448 = discriminant(_298)<br/>StorageDead(_302)<br/>StorageDead(_298)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = _15<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_431 = const _<br/>_313 = &amp;(*_431)<br/>_312 = &amp;(*_313)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;mut _297<br/>_317 = &amp;mut (*_318)<br/></td></tr><tr><td align="left">_316 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _317)</td></tr></table>>];
    bb127__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_298 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_306)<br/>_306 = _304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _306)</td></tr></table>>];
    bb128__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>_446 = discriminant(_298)<br/>StorageDead(_302)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_315 = &amp;mut (*_316)<br/>StorageDead(_317)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>_323 = &amp;mut (*_3)<br/>StorageLive(_324)<br/>_324 = _1<br/></td></tr><tr><td align="left">_322 = User::force_get_spot_position_mut(move _323, move _324)</td></tr></table>>];
    bb130__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">_321 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _322)</td></tr></table>>];
    bb131__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>_325 = discriminant(_321)<br/></td></tr><tr><td align="left">switchInt(move _325)</td></tr></table>>];
    bb132__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_329)<br/>_329 = move ((_321 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_320 = &amp;mut (*_329)<br/>StorageDead(_329)<br/>_319 = &amp;mut (*_320)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>_331 = _15<br/>_330 = Option::&lt;u128&gt;::Some(move _331)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_310 = update_spot_balances_and_cumulative_deposits(move _311, move _312, move _315, move _319, const false, move _330)</td></tr></table>>];
    bb133__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/>_326 = ((_321 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_328)<br/>_328 = _326<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _328)</td></tr></table>>];
    bb134__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_326)<br/>StorageDead(_319)<br/>StorageDead(_315)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_319)<br/>StorageDead(_315)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">_309 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _310)</td></tr></table>>];
    bb136__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>_332 = discriminant(_309)<br/></td></tr><tr><td align="left">switchInt(move _332)</td></tr></table>>];
    bb137__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>_336 = ((_309 as Continue).0: ())<br/>_308 = _336<br/>StorageDead(_336)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_318)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>_296 = const ()<br/></td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb138__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_333)<br/>_333 = ((_309 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_335)<br/>_335 = _333<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _335)</td></tr></table>>];
    bb139__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_333)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_342 = &amp;(*_3)<br/>StorageLive(_343)<br/>_343 = &amp;(*_9)<br/>StorageLive(_344)<br/>_344 = &amp;(*_10)<br/>StorageLive(_345)<br/>_345 = &amp;mut (*_11)<br/>StorageLive(_346)<br/>_346 = _17<br/>StorageLive(_347)<br/>_347 = _178<br/></td></tr><tr><td align="left">_341 = calculate_margin_freed(move _342, move _343, move _344, move _345, move _346, move _347)</td></tr></table>>];
    bb141__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_346)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">_340 = &lt;std::result::Result&lt;(u64, MarginCalculation), error::ErrorCode&gt; as Try&gt;::branch(move _341)</td></tr></table>>];
    bb142__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>_348 = discriminant(_340)<br/></td></tr><tr><td align="left">switchInt(move _348)</td></tr></table>>];
    bb143__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_352)<br/>_352 = ((_340 as Continue).0: (u64, state::margin_calculation::MarginCalculation))<br/>_339 = _352<br/>StorageDead(_352)<br/>StorageLive(_337)<br/>_337 = (_339.0: u64)<br/>StorageLive(_338)<br/>_338 = (_339.1: state::margin_calculation::MarginCalculation)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>_356 = _177<br/>StorageLive(_357)<br/>_357 = _337<br/></td></tr><tr><td align="left">_355 = &lt;u64 as SafeMath&gt;::safe_add(move _356, move _357)</td></tr></table>>];
    bb144__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_349)<br/>_349 = ((_340 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_351)<br/>_351 = _349<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _351)</td></tr></table>>];
    bb145__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_340)<br/>StorageDead(_339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_356)<br/></td></tr><tr><td align="left">_354 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _355)</td></tr></table>>];
    bb147__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>_358 = discriminant(_354)<br/></td></tr><tr><td align="left">switchInt(move _358)</td></tr></table>>];
    bb148__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_362)<br/>_362 = ((_354 as Continue).0: u64)<br/>_353 = _362<br/>StorageDead(_362)<br/>_177 = move _353<br/>StorageDead(_353)<br/>StorageDead(_354)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;mut (*_3)<br/>StorageLive(_367)<br/>_367 = _337<br/></td></tr><tr><td align="left">_365 = User::increment_margin_freed(move _366, move _367)</td></tr></table>>];
    bb149__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_359)<br/>_359 = ((_354 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_361)<br/>_361 = _359<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _361)</td></tr></table>>];
    bb150__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>StorageDead(_359)<br/>StorageDead(_353)<br/>StorageDead(_354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">_364 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _365)</td></tr></table>>];
    bb152__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>_368 = discriminant(_364)<br/></td></tr><tr><td align="left">switchInt(move _368)</td></tr></table>>];
    bb153__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_372)<br/>_372 = ((_364 as Continue).0: ())<br/>_363 = _372<br/>StorageDead(_372)<br/>StorageDead(_364)<br/>StorageDead(_363)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_377 = &amp;_338<br/></td></tr><tr><td align="left">_376 = MarginCalculation::can_exit_liquidation(move _377)</td></tr></table>>];
    bb154__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_369)<br/>_369 = ((_364 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_371)<br/>_371 = _369<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _371)</td></tr></table>>];
    bb155__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>StorageDead(_369)<br/>StorageDead(_364)<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/></td></tr><tr><td align="left">_375 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _376)</td></tr></table>>];
    bb157__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>_378 = discriminant(_375)<br/></td></tr><tr><td align="left">switchInt(move _378)</td></tr></table>>];
    bb158__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_382)<br/>_382 = ((_375 as Continue).0: bool)<br/>_374 = _382<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">switchInt(move _374)</td></tr></table>>];
    bb159__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_379)<br/>_379 = ((_375 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_381)<br/>_381 = _379<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _381)</td></tr></table>>];
    bb160__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>_384 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_383 = User::exit_liquidation(move _384)</td></tr></table>>];
    bb162__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>_386 = &amp;(*_3)<br/></td></tr><tr><td align="left">_385 = is_user_bankrupt(move _386)</td></tr></table>>];
    bb163__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_383)<br/>_373 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb165__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>_388 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_387 = User::enter_bankruptcy(move _388)</td></tr></table>>];
    bb166__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_387)<br/>_373 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>_373 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_373)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>_403 = _12<br/>StorageLive(_404)<br/>_404 = _167<br/>StorageLive(_405)<br/>_405 = LiquidationType::LiquidateSpot<br/>StorageLive(_406)<br/>_406 = (*_4)<br/>StorageLive(_407)<br/>_407 = (*_7)<br/>StorageLive(_408)<br/>_408 = (_152.3: u128)<br/>StorageLive(_409)<br/>_409 = (_152.1: i128)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>_411 = &amp;(*_3)<br/></td></tr><tr><td align="left">_410 = User::is_bankrupt(move _411)</td></tr></table>>];
    bb170__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageLive(_412)<br/>_412 = _177<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = _1<br/>StorageLive(_415)<br/>_415 = _18<br/>StorageLive(_416)<br/>_416 = _15<br/>StorageLive(_417)<br/>_417 = _2<br/>StorageLive(_418)<br/>_418 = _67<br/>StorageLive(_419)<br/>_419 = _16<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = _187<br/></td></tr><tr><td align="left">_422 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _423)</td></tr></table>>];
    bb171__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/></td></tr><tr><td align="left">_421 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _422)</td></tr></table>>];
    bb172__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>_424 = discriminant(_421)<br/></td></tr><tr><td align="left">switchInt(move _424)</td></tr></table>>];
    bb173__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_428)<br/>_428 = ((_421 as Continue).0: u64)<br/>_420 = _428<br/>StorageDead(_428)<br/>_413 = LiquidateSpotRecord { asset_market_index: move _414, asset_price: move _415, asset_transfer: move _416, liability_market_index: move _417, liability_price: move _418, liability_transfer: move _419, if_fee: move _420 }<br/>StorageDead(_420)<br/>StorageDead(_419)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageLive(_429)<br/></td></tr><tr><td align="left">_429 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb174__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_425)<br/>_425 = ((_421 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_427)<br/>_427 = _425<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _427)</td></tr></table>>];
    bb175__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>StorageDead(_425)<br/>StorageDead(_420)<br/>StorageDead(_419)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/>StorageDead(_407)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/>StorageDead(_404)<br/>StorageDead(_403)<br/>StorageDead(_400)<br/>StorageDead(_397)<br/>StorageDead(_395)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_421)<br/>StorageDead(_402)<br/>StorageDead(_401)<br/>StorageDead(_399)<br/>StorageDead(_398)<br/>StorageDead(_396)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">_402 = LiquidationRecord { ts: move _403, liquidation_type: move _405, user: move _406, liquidator: move _407, margin_requirement: move _408, total_collateral: move _409, margin_freed: move _412, liquidation_id: move _404, bankrupt: move _410, canceled_order_ids: move (_429.9: std::vec::Vec&lt;u32&gt;), liquidate_perp: move (_429.10: state::events::LiquidatePerpRecord), liquidate_spot: move _413, liquidate_borrow_for_perp_pnl: move (_429.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_429.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_429.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_429.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_413)<br/>StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/>StorageDead(_407)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/>StorageDead(_404)<br/>StorageDead(_403)<br/>_401 = &amp;_402<br/>_400 = &amp;(*_401)<br/></td></tr><tr><td align="left">_399 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _400)</td></tr></table>>];
    bb177__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>_398 = &amp;_399<br/>_397 = &amp;(*_398)<br/></td></tr><tr><td align="left">_396 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _397)</td></tr></table>>];
    bb178__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">_395 = &amp;(*_396)<br/>StorageDead(_397)<br/>_394 = [move _395]<br/>StorageDead(_395)<br/>_393 = &amp;_394<br/>_392 = &amp;(*_393)<br/>_391 = move _392 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_392)<br/></td></tr><tr><td align="left">_390 = solana_program::log::sol_log_data(move _391)</td></tr></table>>];
    bb179__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/></td></tr><tr><td align="left">drop(_399)</td></tr></table>>];
    bb180__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left">drop(_402)</td></tr></table>>];
    bb181__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageDead(_421)<br/>StorageDead(_402)<br/>StorageDead(_401)<br/>StorageDead(_399)<br/>StorageDead(_398)<br/>StorageDead(_396)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>_389 = const ()<br/>StorageDead(_389)<br/>StorageLive(_430)<br/>_430 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _430)<br/>StorageDead(_430)<br/>StorageDead(_338)<br/>StorageDead(_337)<br/>StorageDead(_187)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_167)<br/>StorageDead(_152)<br/>StorageDead(_137)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_318)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb184__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb189__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left">return</td></tr></table>>];
    bb208__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">208 (cleanup)</td></tr><tr><td align="left">drop(_399)</td></tr></table>>];
    bb209__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">209 (cleanup)</td></tr><tr><td align="left">drop(_402)</td></tr></table>>];
    bb210__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">210 (cleanup)</td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb211__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">211 (cleanup)</td></tr><tr><td align="left">drop(_222)</td></tr></table>>];
    bb212__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">212 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb213__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">213 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb214__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">214 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb215__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">215 (cleanup)</td></tr><tr><td align="left" balign="left">_450 = discriminant(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">216 (cleanup)</td></tr><tr><td align="left" balign="left">_451 = discriminant(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">217 (cleanup)</td></tr><tr><td align="left" balign="left">_452 = discriminant(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_341 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">218 (cleanup)</td></tr><tr><td align="left" balign="left">_453 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_341 -> bb1__0_341 [label="return"];
    bb1__0_341 -> bb2__0_341 [label="return"];
    bb1__0_341 -> bb214__0_341 [label="unwind"];
    bb2__0_341 -> bb3__0_341 [label="0"];
    bb2__0_341 -> bb5__0_341 [label="1"];
    bb2__0_341 -> bb4__0_341 [label="otherwise"];
    bb3__0_341 -> bb7__0_341 [label="return"];
    bb3__0_341 -> bb213__0_341 [label="unwind"];
    bb5__0_341 -> bb6__0_341 [label="return"];
    bb5__0_341 -> bb218__0_341 [label="unwind"];
    bb6__0_341 -> bb204__0_341 [label=""];
    bb7__0_341 -> bb8__0_341 [label="return"];
    bb7__0_341 -> bb213__0_341 [label="unwind"];
    bb8__0_341 -> bb9__0_341 [label="return"];
    bb8__0_341 -> bb213__0_341 [label="unwind"];
    bb9__0_341 -> bb10__0_341 [label="return"];
    bb9__0_341 -> bb213__0_341 [label="unwind"];
    bb10__0_341 -> bb11__0_341 [label="0"];
    bb10__0_341 -> bb12__0_341 [label="1"];
    bb10__0_341 -> bb4__0_341 [label="otherwise"];
    bb11__0_341 -> bb14__0_341 [label="return"];
    bb11__0_341 -> bb213__0_341 [label="unwind"];
    bb12__0_341 -> bb13__0_341 [label="return"];
    bb12__0_341 -> bb213__0_341 [label="unwind"];
    bb13__0_341 -> bb204__0_341 [label="return"];
    bb13__0_341 -> bb214__0_341 [label="unwind"];
    bb14__0_341 -> bb15__0_341 [label="return"];
    bb14__0_341 -> bb213__0_341 [label="unwind"];
    bb15__0_341 -> bb16__0_341 [label="return"];
    bb15__0_341 -> bb213__0_341 [label="unwind"];
    bb16__0_341 -> bb17__0_341 [label="return"];
    bb16__0_341 -> bb213__0_341 [label="unwind"];
    bb17__0_341 -> bb18__0_341 [label="0"];
    bb17__0_341 -> bb19__0_341 [label="1"];
    bb17__0_341 -> bb4__0_341 [label="otherwise"];
    bb18__0_341 -> bb21__0_341 [label="return"];
    bb18__0_341 -> bb214__0_341 [label="unwind"];
    bb19__0_341 -> bb20__0_341 [label="return"];
    bb19__0_341 -> bb213__0_341 [label="unwind"];
    bb20__0_341 -> bb203__0_341 [label="return"];
    bb20__0_341 -> bb214__0_341 [label="unwind"];
    bb21__0_341 -> bb22__0_341 [label="return"];
    bb22__0_341 -> bb23__0_341 [label="return"];
    bb22__0_341 -> bb214__0_341 [label="unwind"];
    bb23__0_341 -> bb24__0_341 [label="0"];
    bb23__0_341 -> bb25__0_341 [label="1"];
    bb23__0_341 -> bb4__0_341 [label="otherwise"];
    bb24__0_341 -> bb27__0_341 [label="return"];
    bb24__0_341 -> bb212__0_341 [label="unwind"];
    bb25__0_341 -> bb26__0_341 [label="return"];
    bb25__0_341 -> bb217__0_341 [label="unwind"];
    bb26__0_341 -> bb200__0_341 [label=""];
    bb27__0_341 -> bb28__0_341 [label="return"];
    bb27__0_341 -> bb212__0_341 [label="unwind"];
    bb28__0_341 -> bb29__0_341 [label="return"];
    bb28__0_341 -> bb212__0_341 [label="unwind"];
    bb29__0_341 -> bb30__0_341 [label="return"];
    bb29__0_341 -> bb212__0_341 [label="unwind"];
    bb30__0_341 -> bb31__0_341 [label="0"];
    bb30__0_341 -> bb32__0_341 [label="1"];
    bb30__0_341 -> bb4__0_341 [label="otherwise"];
    bb31__0_341 -> bb34__0_341 [label="return"];
    bb31__0_341 -> bb212__0_341 [label="unwind"];
    bb32__0_341 -> bb33__0_341 [label="return"];
    bb32__0_341 -> bb212__0_341 [label="unwind"];
    bb33__0_341 -> bb200__0_341 [label="return"];
    bb33__0_341 -> bb214__0_341 [label="unwind"];
    bb34__0_341 -> bb35__0_341 [label="return"];
    bb34__0_341 -> bb212__0_341 [label="unwind"];
    bb35__0_341 -> bb36__0_341 [label="return"];
    bb35__0_341 -> bb212__0_341 [label="unwind"];
    bb36__0_341 -> bb37__0_341 [label="return"];
    bb36__0_341 -> bb212__0_341 [label="unwind"];
    bb37__0_341 -> bb38__0_341 [label="return"];
    bb37__0_341 -> bb212__0_341 [label="unwind"];
    bb38__0_341 -> bb39__0_341 [label="0"];
    bb38__0_341 -> bb40__0_341 [label="1"];
    bb38__0_341 -> bb4__0_341 [label="otherwise"];
    bb39__0_341 -> bb42__0_341 [label="return"];
    bb39__0_341 -> bb214__0_341 [label="unwind"];
    bb40__0_341 -> bb41__0_341 [label="return"];
    bb40__0_341 -> bb212__0_341 [label="unwind"];
    bb41__0_341 -> bb199__0_341 [label="return"];
    bb41__0_341 -> bb214__0_341 [label="unwind"];
    bb42__0_341 -> bb43__0_341 [label="return"];
    bb43__0_341 -> bb44__0_341 [label="return"];
    bb44__0_341 -> bb45__0_341 [label="0"];
    bb44__0_341 -> bb46__0_341 [label="1"];
    bb44__0_341 -> bb4__0_341 [label="otherwise"];
    bb45__0_341 -> bb48__0_341 [label="return"];
    bb46__0_341 -> bb47__0_341 [label="return"];
    bb47__0_341 -> bb198__0_341 [label=""];
    bb48__0_341 -> bb49__0_341 [label="return"];
    bb49__0_341 -> bb50__0_341 [label="return"];
    bb50__0_341 -> bb51__0_341 [label="return"];
    bb51__0_341 -> bb52__0_341 [label="0"];
    bb51__0_341 -> bb53__0_341 [label="1"];
    bb51__0_341 -> bb4__0_341 [label="otherwise"];
    bb52__0_341 -> bb55__0_341 [label="return"];
    bb53__0_341 -> bb54__0_341 [label="return"];
    bb54__0_341 -> bb197__0_341 [label=""];
    bb55__0_341 -> bb56__0_341 [label="return"];
    bb56__0_341 -> bb57__0_341 [label="return"];
    bb57__0_341 -> bb58__0_341 [label="0"];
    bb57__0_341 -> bb59__0_341 [label="1"];
    bb57__0_341 -> bb4__0_341 [label="otherwise"];
    bb58__0_341 -> bb61__0_341 [label="return"];
    bb59__0_341 -> bb60__0_341 [label="return"];
    bb60__0_341 -> bb196__0_341 [label=""];
    bb61__0_341 -> bb62__0_341 [label="return"];
    bb62__0_341 -> bb63__0_341 [label="0"];
    bb62__0_341 -> bb64__0_341 [label="1"];
    bb62__0_341 -> bb4__0_341 [label="otherwise"];
    bb63__0_341 -> bb66__0_341 [label="return"];
    bb64__0_341 -> bb65__0_341 [label="return"];
    bb65__0_341 -> bb195__0_341 [label=""];
    bb66__0_341 -> bb67__0_341 [label="return"];
    bb67__0_341 -> bb68__0_341 [label="0"];
    bb67__0_341 -> bb69__0_341 [label="1"];
    bb67__0_341 -> bb4__0_341 [label="otherwise"];
    bb68__0_341 -> bb71__0_341 [label="return"];
    bb69__0_341 -> bb70__0_341 [label="return"];
    bb70__0_341 -> bb194__0_341 [label=""];
    bb71__0_341 -> bb72__0_341 [label="return"];
    bb72__0_341 -> bb73__0_341 [label="0"];
    bb72__0_341 -> bb74__0_341 [label="1"];
    bb72__0_341 -> bb4__0_341 [label="otherwise"];
    bb73__0_341 -> bb76__0_341 [label="return"];
    bb74__0_341 -> bb75__0_341 [label="return"];
    bb75__0_341 -> bb192__0_341 [label=""];
    bb76__0_341 -> bb77__0_341 [label="return"];
    bb77__0_341 -> bb78__0_341 [label="0"];
    bb77__0_341 -> bb79__0_341 [label="1"];
    bb77__0_341 -> bb4__0_341 [label="otherwise"];
    bb78__0_341 -> bb81__0_341 [label="return"];
    bb79__0_341 -> bb80__0_341 [label="return"];
    bb80__0_341 -> bb190__0_341 [label=""];
    bb81__0_341 -> bb82__0_341 [label="return"];
    bb82__0_341 -> bb83__0_341 [label="0"];
    bb82__0_341 -> bb84__0_341 [label="1"];
    bb82__0_341 -> bb4__0_341 [label="otherwise"];
    bb83__0_341 -> bb86__0_341 [label="return"];
    bb84__0_341 -> bb85__0_341 [label="return"];
    bb85__0_341 -> bb190__0_341 [label=""];
    bb86__0_341 -> bb87__0_341 [label="return"];
    bb87__0_341 -> bb88__0_341 [label="0"];
    bb87__0_341 -> bb89__0_341 [label="1"];
    bb87__0_341 -> bb4__0_341 [label="otherwise"];
    bb88__0_341 -> bb91__0_341 [label="return"];
    bb89__0_341 -> bb90__0_341 [label="return"];
    bb90__0_341 -> bb191__0_341 [label=""];
    bb91__0_341 -> bb92__0_341 [label="return"];
    bb91__0_341 -> bb214__0_341 [label="unwind"];
    bb92__0_341 -> bb93__0_341 [label="0"];
    bb92__0_341 -> bb94__0_341 [label="1"];
    bb92__0_341 -> bb4__0_341 [label="otherwise"];
    bb93__0_341 -> bb96__0_341 [label="return"];
    bb93__0_341 -> bb211__0_341 [label="unwind"];
    bb94__0_341 -> bb95__0_341 [label="return"];
    bb94__0_341 -> bb216__0_341 [label="unwind"];
    bb95__0_341 -> bb189__0_341 [label=""];
    bb96__0_341 -> bb97__0_341 [label="return"];
    bb96__0_341 -> bb211__0_341 [label="unwind"];
    bb97__0_341 -> bb98__0_341 [label="0"];
    bb97__0_341 -> bb99__0_341 [label="1"];
    bb97__0_341 -> bb4__0_341 [label="otherwise"];
    bb98__0_341 -> bb101__0_341 [label="return"];
    bb98__0_341 -> bb211__0_341 [label="unwind"];
    bb99__0_341 -> bb100__0_341 [label="return"];
    bb99__0_341 -> bb211__0_341 [label="unwind"];
    bb100__0_341 -> bb187__0_341 [label=""];
    bb101__0_341 -> bb102__0_341 [label="return"];
    bb101__0_341 -> bb211__0_341 [label="unwind"];
    bb102__0_341 -> bb103__0_341 [label="return"];
    bb102__0_341 -> bb211__0_341 [label="unwind"];
    bb103__0_341 -> bb104__0_341 [label="0"];
    bb103__0_341 -> bb105__0_341 [label="1"];
    bb103__0_341 -> bb4__0_341 [label="otherwise"];
    bb104__0_341 -> bb107__0_341 [label="return"];
    bb104__0_341 -> bb211__0_341 [label="unwind"];
    bb105__0_341 -> bb106__0_341 [label="return"];
    bb105__0_341 -> bb211__0_341 [label="unwind"];
    bb106__0_341 -> bb186__0_341 [label=""];
    bb107__0_341 -> bb108__0_341 [label="return"];
    bb107__0_341 -> bb211__0_341 [label="unwind"];
    bb108__0_341 -> bb109__0_341 [label="0"];
    bb108__0_341 -> bb110__0_341 [label="1"];
    bb108__0_341 -> bb4__0_341 [label="otherwise"];
    bb109__0_341 -> bb112__0_341 [label="return"];
    bb109__0_341 -> bb211__0_341 [label="unwind"];
    bb110__0_341 -> bb111__0_341 [label="return"];
    bb110__0_341 -> bb211__0_341 [label="unwind"];
    bb111__0_341 -> bb185__0_341 [label=""];
    bb112__0_341 -> bb113__0_341 [label="return"];
    bb112__0_341 -> bb211__0_341 [label="unwind"];
    bb113__0_341 -> bb114__0_341 [label="0"];
    bb113__0_341 -> bb115__0_341 [label="1"];
    bb113__0_341 -> bb4__0_341 [label="otherwise"];
    bb114__0_341 -> bb117__0_341 [label="return"];
    bb114__0_341 -> bb211__0_341 [label="unwind"];
    bb115__0_341 -> bb116__0_341 [label="return"];
    bb115__0_341 -> bb211__0_341 [label="unwind"];
    bb116__0_341 -> bb185__0_341 [label=""];
    bb117__0_341 -> bb118__0_341 [label="return"];
    bb117__0_341 -> bb211__0_341 [label="unwind"];
    bb118__0_341 -> bb119__0_341 [label="return"];
    bb118__0_341 -> bb211__0_341 [label="unwind"];
    bb119__0_341 -> bb120__0_341 [label="0"];
    bb119__0_341 -> bb121__0_341 [label="1"];
    bb119__0_341 -> bb4__0_341 [label="otherwise"];
    bb120__0_341 -> bb123__0_341 [label="return"];
    bb120__0_341 -> bb214__0_341 [label="unwind"];
    bb121__0_341 -> bb122__0_341 [label="return"];
    bb121__0_341 -> bb211__0_341 [label="unwind"];
    bb122__0_341 -> bb188__0_341 [label=""];
    bb123__0_341 -> bb124__0_341 [label="return"];
    bb124__0_341 -> bb125__0_341 [label="return"];
    bb124__0_341 -> bb214__0_341 [label="unwind"];
    bb125__0_341 -> bb126__0_341 [label="0"];
    bb125__0_341 -> bb127__0_341 [label="1"];
    bb125__0_341 -> bb4__0_341 [label="otherwise"];
    bb126__0_341 -> bb129__0_341 [label="return"];
    bb126__0_341 -> bb210__0_341 [label="unwind"];
    bb127__0_341 -> bb128__0_341 [label="return"];
    bb127__0_341 -> bb215__0_341 [label="unwind"];
    bb128__0_341 -> bb184__0_341 [label=""];
    bb129__0_341 -> bb130__0_341 [label="return"];
    bb129__0_341 -> bb210__0_341 [label="unwind"];
    bb130__0_341 -> bb131__0_341 [label="return"];
    bb130__0_341 -> bb210__0_341 [label="unwind"];
    bb131__0_341 -> bb132__0_341 [label="0"];
    bb131__0_341 -> bb133__0_341 [label="1"];
    bb131__0_341 -> bb4__0_341 [label="otherwise"];
    bb132__0_341 -> bb135__0_341 [label="return"];
    bb132__0_341 -> bb210__0_341 [label="unwind"];
    bb133__0_341 -> bb134__0_341 [label="return"];
    bb133__0_341 -> bb210__0_341 [label="unwind"];
    bb134__0_341 -> bb183__0_341 [label=""];
    bb135__0_341 -> bb136__0_341 [label="return"];
    bb135__0_341 -> bb210__0_341 [label="unwind"];
    bb136__0_341 -> bb137__0_341 [label="0"];
    bb136__0_341 -> bb138__0_341 [label="1"];
    bb136__0_341 -> bb4__0_341 [label="otherwise"];
    bb137__0_341 -> bb140__0_341 [label="return"];
    bb137__0_341 -> bb214__0_341 [label="unwind"];
    bb138__0_341 -> bb139__0_341 [label="return"];
    bb138__0_341 -> bb210__0_341 [label="unwind"];
    bb139__0_341 -> bb183__0_341 [label=""];
    bb140__0_341 -> bb141__0_341 [label="return"];
    bb141__0_341 -> bb142__0_341 [label="return"];
    bb142__0_341 -> bb143__0_341 [label="0"];
    bb142__0_341 -> bb144__0_341 [label="1"];
    bb142__0_341 -> bb4__0_341 [label="otherwise"];
    bb143__0_341 -> bb146__0_341 [label="return"];
    bb144__0_341 -> bb145__0_341 [label="return"];
    bb145__0_341 -> bb193__0_341 [label=""];
    bb146__0_341 -> bb147__0_341 [label="return"];
    bb147__0_341 -> bb148__0_341 [label="0"];
    bb147__0_341 -> bb149__0_341 [label="1"];
    bb147__0_341 -> bb4__0_341 [label="otherwise"];
    bb148__0_341 -> bb151__0_341 [label="return"];
    bb149__0_341 -> bb150__0_341 [label="return"];
    bb150__0_341 -> bb182__0_341 [label=""];
    bb151__0_341 -> bb152__0_341 [label="return"];
    bb152__0_341 -> bb153__0_341 [label="0"];
    bb152__0_341 -> bb154__0_341 [label="1"];
    bb152__0_341 -> bb4__0_341 [label="otherwise"];
    bb153__0_341 -> bb156__0_341 [label="return"];
    bb154__0_341 -> bb155__0_341 [label="return"];
    bb155__0_341 -> bb182__0_341 [label=""];
    bb156__0_341 -> bb157__0_341 [label="return"];
    bb157__0_341 -> bb158__0_341 [label="0"];
    bb157__0_341 -> bb159__0_341 [label="1"];
    bb157__0_341 -> bb4__0_341 [label="otherwise"];
    bb158__0_341 -> bb162__0_341 [label="0"];
    bb158__0_341 -> bb161__0_341 [label="otherwise"];
    bb159__0_341 -> bb160__0_341 [label="return"];
    bb160__0_341 -> bb182__0_341 [label=""];
    bb161__0_341 -> bb163__0_341 [label="return"];
    bb162__0_341 -> bb164__0_341 [label="return"];
    bb163__0_341 -> bb169__0_341 [label=""];
    bb164__0_341 -> bb167__0_341 [label="0"];
    bb164__0_341 -> bb165__0_341 [label="otherwise"];
    bb165__0_341 -> bb166__0_341 [label="return"];
    bb166__0_341 -> bb168__0_341 [label=""];
    bb167__0_341 -> bb168__0_341 [label=""];
    bb168__0_341 -> bb169__0_341 [label=""];
    bb169__0_341 -> bb170__0_341 [label="return"];
    bb170__0_341 -> bb171__0_341 [label="return"];
    bb171__0_341 -> bb172__0_341 [label="return"];
    bb172__0_341 -> bb173__0_341 [label="0"];
    bb172__0_341 -> bb174__0_341 [label="1"];
    bb172__0_341 -> bb4__0_341 [label="otherwise"];
    bb173__0_341 -> bb176__0_341 [label="return"];
    bb174__0_341 -> bb175__0_341 [label="return"];
    bb175__0_341 -> bb182__0_341 [label=""];
    bb176__0_341 -> bb177__0_341 [label="return"];
    bb176__0_341 -> bb209__0_341 [label="unwind"];
    bb177__0_341 -> bb178__0_341 [label="return"];
    bb177__0_341 -> bb208__0_341 [label="unwind"];
    bb178__0_341 -> bb179__0_341 [label="return"];
    bb178__0_341 -> bb208__0_341 [label="unwind"];
    bb179__0_341 -> bb180__0_341 [label="return"];
    bb179__0_341 -> bb209__0_341 [label="unwind"];
    bb180__0_341 -> bb181__0_341 [label="return"];
    bb180__0_341 -> bb214__0_341 [label="unwind"];
    bb181__0_341 -> bb207__0_341 [label=""];
    bb182__0_341 -> bb193__0_341 [label=""];
    bb183__0_341 -> bb184__0_341 [label="return"];
    bb183__0_341 -> bb214__0_341 [label="unwind"];
    bb184__0_341 -> bb193__0_341 [label=""];
    bb185__0_341 -> bb186__0_341 [label=""];
    bb186__0_341 -> bb187__0_341 [label=""];
    bb187__0_341 -> bb188__0_341 [label=""];
    bb188__0_341 -> bb189__0_341 [label="return"];
    bb188__0_341 -> bb214__0_341 [label="unwind"];
    bb189__0_341 -> bb193__0_341 [label=""];
    bb190__0_341 -> bb191__0_341 [label=""];
    bb191__0_341 -> bb192__0_341 [label=""];
    bb192__0_341 -> bb193__0_341 [label=""];
    bb193__0_341 -> bb194__0_341 [label=""];
    bb194__0_341 -> bb195__0_341 [label=""];
    bb195__0_341 -> bb196__0_341 [label=""];
    bb196__0_341 -> bb197__0_341 [label=""];
    bb197__0_341 -> bb198__0_341 [label=""];
    bb198__0_341 -> bb202__0_341 [label=""];
    bb199__0_341 -> bb201__0_341 [label=""];
    bb200__0_341 -> bb201__0_341 [label=""];
    bb201__0_341 -> bb202__0_341 [label=""];
    bb202__0_341 -> bb206__0_341 [label=""];
    bb203__0_341 -> bb205__0_341 [label=""];
    bb204__0_341 -> bb205__0_341 [label=""];
    bb205__0_341 -> bb206__0_341 [label=""];
    bb206__0_341 -> bb207__0_341 [label=""];
    bb208__0_341 -> bb209__0_341 [label="return"];
    bb209__0_341 -> bb214__0_341 [label="return"];
    bb210__0_341 -> bb214__0_341 [label="return"];
    bb211__0_341 -> bb214__0_341 [label="return"];
    bb212__0_341 -> bb214__0_341 [label="return"];
    bb213__0_341 -> bb214__0_341 [label="return"];
    bb215__0_341 -> bb214__0_341 [label=""];
    bb216__0_341 -> bb214__0_341 [label=""];
    bb217__0_341 -> bb214__0_341 [label=""];
    bb218__0_341 -> bb214__0_341 [label=""];
}
