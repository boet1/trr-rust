digraph Mir_0_1905 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_auction_price_for_oracle_offset_auction(_1: &amp;ReErased state::user::Order, _2: u64, _3: u64, _4: std::option::Option&lt;i64&gt;, _5: bool) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _10: Closure(DefId(0:1906 ~ drift[d311]::math::auction::calculate_auction_price_for_oracle_offset_auction::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i64;<br align="left"/>let _16: u64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: u64;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: u64;<br align="left"/>let _26: u64;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: u64;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _31: u8;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u64;<br align="left"/>let _37: u8;<br align="left"/>let _38: i64;<br align="left"/>let _39: i64;<br align="left"/>let _40: ();<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: u8;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _50: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: i64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i64;<br align="left"/>let mut _58: i64;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _60: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: u64;<br align="left"/>let _72: ();<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: u64;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: controller::position::PositionDirection;<br align="left"/>let _79: i64;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _82: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _83: i64;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _85: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _86: i64;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _88: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _89: i64;<br align="left"/>let mut _90: i64;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _95: i64;<br align="left"/>let mut _96: i64;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _98: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _99: u64;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: i64;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: i64;<br align="left"/>let mut _110: i64;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _112: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _113: u8;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: i64;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _123: i64;<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _125: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _126: i64;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _128: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _129: i64;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _131: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _132: i64;<br align="left"/>let mut _133: i64;<br align="left"/>let mut _134: isize;<br align="left"/>let _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _136: !;<br align="left"/>let mut _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _138: i64;<br align="left"/>let mut _139: i64;<br align="left"/>let mut _140: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _141: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _142: u64;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _147: i64;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: i64;<br align="left"/>let mut _153: i64;<br align="left"/>let mut _154: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _155: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _156: u8;<br align="left"/>let mut _157: isize;<br align="left"/>let _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _159: !;<br align="left"/>let mut _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _161: i64;<br align="left"/>let mut _162: isize;<br align="left"/>let _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _166: i64;<br align="left"/>let _167: i64;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _170: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _171: i64;<br align="left"/>let mut _172: i64;<br align="left"/>let mut _173: isize;<br align="left"/>let _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _175: !;<br align="left"/>let mut _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _177: i64;<br align="left"/>let mut _178: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _179: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _180: i64;<br align="left"/>let mut _181: i64;<br align="left"/>let mut _182: isize;<br align="left"/>let _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _184: !;<br align="left"/>let mut _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _186: i64;<br align="left"/>let mut _187: u64;<br align="left"/>let mut _188: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _189: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _190: i64;<br align="left"/>let mut _191: i64;<br align="left"/>let mut _192: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _193: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _194: i64;<br align="left"/>let mut _195: i64;<br align="left"/>let mut _196: isize;<br align="left"/>let _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _198: !;<br align="left"/>let mut _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _200: i64;<br align="left"/>let mut _201: i64;<br align="left"/>let mut _202: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _203: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _204: u64;<br align="left"/>let mut _205: isize;<br align="left"/>let _206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _207: !;<br align="left"/>let mut _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _209: i64;<br align="left"/>let mut _210: isize;<br align="left"/>let _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _212: !;<br align="left"/>let mut _213: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _214: u64;<br align="left"/>let _215: ();<br align="left"/>let mut _216: bool;<br align="left"/>let mut _217: u64;<br align="left"/>let mut _218: u64;<br align="left"/>let mut _219: u64;<br align="left"/>let mut _220: u64;<br align="left"/>let mut _221: controller::position::PositionDirection;<br align="left"/>debug order =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug tick_size =&gt; _3;<br align="left"/>debug valid_oracle_price =&gt; _4;<br align="left"/>debug is_prediction_market =&gt; _5;<br align="left"/>debug oracle_price =&gt; _6;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug slots_elapsed =&gt; _16;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug delta_numerator =&gt; _26;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug delta_denominator =&gt; _37;<br align="left"/>debug auction_start_price_offset =&gt; _38;<br align="left"/>debug auction_end_price_offset =&gt; _39;<br align="left"/>debug price =&gt; _44;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug price_offset_delta =&gt; _79;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug residual =&gt; _135;<br align="left"/>debug val =&gt; _138;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug residual =&gt; _158;<br align="left"/>debug val =&gt; _161;<br align="left"/>debug residual =&gt; _163;<br align="left"/>debug val =&gt; _166;<br align="left"/>debug price_offset =&gt; _167;<br align="left"/>debug residual =&gt; _174;<br align="left"/>debug val =&gt; _177;<br align="left"/>debug residual =&gt; _183;<br align="left"/>debug val =&gt; _186;<br align="left"/>debug price =&gt; _187;<br align="left"/>debug residual =&gt; _197;<br align="left"/>debug val =&gt; _200;<br align="left"/>debug residual =&gt; _206;<br align="left"/>debug val =&gt; _209;<br align="left"/>debug residual =&gt; _211;<br align="left"/>debug val =&gt; _214;<br align="left"/>>;
    bb0__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _4<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/math/auction.rs:173:54: 173:56}<br/></td></tr><tr><td align="left">_8 = Option::&lt;i64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/math/auction.rs:173:54: 173:56}&gt;(move _9, move _10)</td></tr></table>>];
    bb1__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: i64)<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _2<br/>StorageLive(_20)<br/>_20 = ((*_1).0: u64)<br/></td></tr><tr><td align="left">_18 = &lt;u64 as SafeMath&gt;::safe_sub(move _19, move _20)</td></tr></table>>];
    bb4__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_21 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_17 as Continue).0: u64)<br/>_16 = _25<br/>StorageDead(_25)<br/>StorageDead(_17)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _16<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = ((*_1).22: u8)<br/></td></tr><tr><td align="left">_30 = &lt;u8 as Cast&gt;::cast::&lt;u64&gt;(move _31)</td></tr></table>>];
    bb10__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb11__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb13__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_32 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb14__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_29 as Continue).0: u64)<br/>_28 = _36<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_26 = std::cmp::min::&lt;u64&gt;(move _27, move _28)</td></tr></table>>];
    bb15__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb16__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_29)<br/>StorageLive(_37)<br/>_37 = ((*_1).22: u8)<br/>StorageLive(_38)<br/>_38 = ((*_1).6: i64)<br/>StorageLive(_39)<br/>_39 = ((*_1).7: i64)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _37<br/>_41 = Eq(move _42, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _6<br/>StorageLive(_52)<br/>_52 = _39<br/></td></tr><tr><td align="left">_50 = &lt;i64 as SafeMath&gt;::safe_add(move _51, move _52)</td></tr></table>>];
    bb19__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb20__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_53 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb21__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_49 as Continue).0: i64)<br/>_48 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = _3<br/></td></tr><tr><td align="left">_60 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _61)</td></tr></table>>];
    bb22__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb23__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb25__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_62 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb26__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_59 as Continue).0: i64)<br/>_58 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_47 = &lt;i64 as Ord&gt;::max(move _48, move _58)</td></tr></table>>];
    bb27__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb28__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_58)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _47)</td></tr></table>>];
    bb30__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb31__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_67 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb32__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_45 as Continue).0: u64)<br/>_44 = _71<br/>StorageDead(_71)<br/>StorageDead(_59)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = _5<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb33__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb34__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _44<br/></td></tr><tr><td align="left">_74 = &lt;u64 as Ord&gt;::min(move _75, const _)</td></tr></table>>];
    bb36__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_72 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_44 = move _74<br/>StorageDead(_74)<br/>_72 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_76)<br/>_76 = _44<br/>StorageLive(_77)<br/>_77 = _3<br/>StorageLive(_78)<br/>_78 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_price(move _76, move _77, move _78)</td></tr></table>>];
    bb39__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = const ()<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_79)<br/>_80 = discriminant(((*_1).17: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb41__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = _38<br/>StorageLive(_133)<br/>_133 = _39<br/></td></tr><tr><td align="left">_131 = &lt;i64 as SafeMath&gt;::safe_sub(move _132, move _133)</td></tr></table>>];
    bb42__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _39<br/>StorageLive(_90)<br/>_90 = _38<br/></td></tr><tr><td align="left">_88 = &lt;i64 as SafeMath&gt;::safe_sub(move _89, move _90)</td></tr></table>>];
    bb43__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb44__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_91 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb45__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_87 as Continue).0: i64)<br/>_86 = _95<br/>StorageDead(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = _26<br/></td></tr><tr><td align="left">_98 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _99)</td></tr></table>>];
    bb46__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb47__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb49__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_100 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb50__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_97 as Continue).0: i64)<br/>_96 = _104<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_85 = &lt;i64 as SafeMath&gt;::safe_mul(move _86, move _96)</td></tr></table>>];
    bb51__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb52__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_96)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb54__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_105 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb55__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_84 as Continue).0: i64)<br/>_83 = _109<br/>StorageDead(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = _37<br/></td></tr><tr><td align="left">_112 = &lt;u8 as Cast&gt;::cast::&lt;i64&gt;(move _113)</td></tr></table>>];
    bb56__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb57__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb59__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_114 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb60__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_111 as Continue).0: i64)<br/>_110 = _118<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_82 = &lt;i64 as SafeMath&gt;::safe_div(move _83, move _110)</td></tr></table>>];
    bb61__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb62__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_110)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb64__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_119 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb65__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_81 as Continue).0: i64)<br/>_79 = _123<br/>StorageDead(_123)<br/>StorageDead(_111)<br/>StorageDead(_97)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_122)<br/>_122 = _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb67__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb69__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_134 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb70__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_130 as Continue).0: i64)<br/>_129 = _138<br/>StorageDead(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = _26<br/></td></tr><tr><td align="left">_141 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _142)</td></tr></table>>];
    bb71__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_137)<br/>_137 = _135<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _137)</td></tr></table>>];
    bb72__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _141)</td></tr></table>>];
    bb74__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_143 = discriminant(_140)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb75__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_140 as Continue).0: i64)<br/>_139 = _147<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_128 = &lt;i64 as SafeMath&gt;::safe_mul(move _129, move _139)</td></tr></table>>];
    bb76__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_140 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_146)<br/>_146 = _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb77__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_139)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb79__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_148 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb80__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_127 as Continue).0: i64)<br/>_126 = _152<br/>StorageDead(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = _37<br/></td></tr><tr><td align="left">_155 = &lt;u8 as Cast&gt;::cast::&lt;i64&gt;(move _156)</td></tr></table>>];
    bb81__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb82__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">_154 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _155)</td></tr></table>>];
    bb84__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_157 = discriminant(_154)<br/></td></tr><tr><td align="left">switchInt(move _157)</td></tr></table>>];
    bb85__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = ((_154 as Continue).0: i64)<br/>_153 = _161<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_125 = &lt;i64 as SafeMath&gt;::safe_div(move _126, move _153)</td></tr></table>>];
    bb86__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_154 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_160)<br/>_160 = _158<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _160)</td></tr></table>>];
    bb87__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_158)<br/>StorageDead(_153)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb89__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_162 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb90__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_124 as Continue).0: i64)<br/>_79 = _166<br/>StorageDead(_166)<br/>StorageDead(_154)<br/>StorageDead(_140)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_165)<br/>_165 = _163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _165)</td></tr></table>>];
    bb92__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_168 = discriminant(((*_1).17: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _168)</td></tr></table>>];
    bb94__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = _38<br/>StorageLive(_181)<br/>_181 = _79<br/></td></tr><tr><td align="left">_179 = &lt;i64 as SafeMath&gt;::safe_sub(move _180, move _181)</td></tr></table>>];
    bb95__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = _38<br/>StorageLive(_172)<br/>_172 = _79<br/></td></tr><tr><td align="left">_170 = &lt;i64 as SafeMath&gt;::safe_add(move _171, move _172)</td></tr></table>>];
    bb96__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb97__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_173 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb98__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_169 as Continue).0: i64)<br/>_167 = _177<br/>StorageDead(_177)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_176)<br/>_176 = _174<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _176)</td></tr></table>>];
    bb100__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _179)</td></tr></table>>];
    bb102__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>_182 = discriminant(_178)<br/></td></tr><tr><td align="left">switchInt(move _182)</td></tr></table>>];
    bb103__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_186)<br/>_186 = ((_178 as Continue).0: i64)<br/>_167 = _186<br/>StorageDead(_186)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_178 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_185)<br/>_185 = _183<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _185)</td></tr></table>>];
    bb105__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = _6<br/>StorageLive(_195)<br/>_195 = _167<br/></td></tr><tr><td align="left">_193 = &lt;i64 as SafeMath&gt;::safe_add(move _194, move _195)</td></tr></table>>];
    bb107__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_192 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _193)</td></tr></table>>];
    bb108__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>_196 = discriminant(_192)<br/></td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb109__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_192 as Continue).0: i64)<br/>_191 = _200<br/>StorageDead(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = _3<br/></td></tr><tr><td align="left">_203 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _204)</td></tr></table>>];
    bb110__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_192 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_199)<br/>_199 = _197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _199)</td></tr></table>>];
    bb111__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _203)</td></tr></table>>];
    bb113__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>_205 = discriminant(_202)<br/></td></tr><tr><td align="left">switchInt(move _205)</td></tr></table>>];
    bb114__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_202 as Continue).0: i64)<br/>_201 = _209<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_190 = &lt;i64 as Ord&gt;::max(move _191, move _201)</td></tr></table>>];
    bb115__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_202 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_208)<br/>_208 = _206<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _208)</td></tr></table>>];
    bb116__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_201)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_189 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _190)</td></tr></table>>];
    bb118__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">_188 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _189)</td></tr></table>>];
    bb119__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_210 = discriminant(_188)<br/></td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb120__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_188 as Continue).0: u64)<br/>_187 = _214<br/>StorageDead(_214)<br/>StorageDead(_202)<br/>StorageDead(_192)<br/>StorageDead(_188)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = _5<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb121__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_188 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_213)<br/>_213 = _211<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _213)</td></tr></table>>];
    bb122__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = _187<br/></td></tr><tr><td align="left">_217 = &lt;u64 as Ord&gt;::min(move _218, const _)</td></tr></table>>];
    bb124__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_215 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_187 = move _217<br/>StorageDead(_217)<br/>_215 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_219)<br/>_219 = _187<br/>StorageLive(_220)<br/>_220 = _3<br/>StorageLive(_221)<br/>_221 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_price(move _219, move _220, move _221)</td></tr></table>>];
    bb127__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_187)<br/>StorageDead(_167)<br/>StorageDead(_79)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_26)<br/>StorageDead(_16)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_1905 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1905 -> bb1__0_1905 [label="return"];
    bb1__0_1905 -> bb2__0_1905 [label="return"];
    bb2__0_1905 -> bb3__0_1905 [label="0"];
    bb2__0_1905 -> bb5__0_1905 [label="1"];
    bb2__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb3__0_1905 -> bb7__0_1905 [label="return"];
    bb5__0_1905 -> bb6__0_1905 [label="return"];
    bb6__0_1905 -> bb146__0_1905 [label=""];
    bb7__0_1905 -> bb8__0_1905 [label="return"];
    bb8__0_1905 -> bb9__0_1905 [label="0"];
    bb8__0_1905 -> bb10__0_1905 [label="1"];
    bb8__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb9__0_1905 -> bb12__0_1905 [label="return"];
    bb10__0_1905 -> bb11__0_1905 [label="return"];
    bb11__0_1905 -> bb145__0_1905 [label=""];
    bb12__0_1905 -> bb13__0_1905 [label="return"];
    bb13__0_1905 -> bb14__0_1905 [label="0"];
    bb13__0_1905 -> bb15__0_1905 [label="1"];
    bb13__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb14__0_1905 -> bb17__0_1905 [label="return"];
    bb15__0_1905 -> bb16__0_1905 [label="return"];
    bb16__0_1905 -> bb144__0_1905 [label=""];
    bb17__0_1905 -> bb40__0_1905 [label="0"];
    bb17__0_1905 -> bb18__0_1905 [label="otherwise"];
    bb18__0_1905 -> bb19__0_1905 [label="return"];
    bb19__0_1905 -> bb20__0_1905 [label="return"];
    bb20__0_1905 -> bb21__0_1905 [label="0"];
    bb20__0_1905 -> bb22__0_1905 [label="1"];
    bb20__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb21__0_1905 -> bb24__0_1905 [label="return"];
    bb22__0_1905 -> bb23__0_1905 [label="return"];
    bb23__0_1905 -> bb141__0_1905 [label=""];
    bb24__0_1905 -> bb25__0_1905 [label="return"];
    bb25__0_1905 -> bb26__0_1905 [label="0"];
    bb25__0_1905 -> bb27__0_1905 [label="1"];
    bb25__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb26__0_1905 -> bb29__0_1905 [label="return"];
    bb27__0_1905 -> bb28__0_1905 [label="return"];
    bb28__0_1905 -> bb140__0_1905 [label=""];
    bb29__0_1905 -> bb30__0_1905 [label="return"];
    bb30__0_1905 -> bb31__0_1905 [label="return"];
    bb31__0_1905 -> bb32__0_1905 [label="0"];
    bb31__0_1905 -> bb33__0_1905 [label="1"];
    bb31__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb32__0_1905 -> bb36__0_1905 [label="0"];
    bb32__0_1905 -> bb35__0_1905 [label="otherwise"];
    bb33__0_1905 -> bb34__0_1905 [label="return"];
    bb34__0_1905 -> bb140__0_1905 [label=""];
    bb35__0_1905 -> bb37__0_1905 [label="return"];
    bb36__0_1905 -> bb38__0_1905 [label=""];
    bb37__0_1905 -> bb38__0_1905 [label=""];
    bb38__0_1905 -> bb39__0_1905 [label="return"];
    bb39__0_1905 -> bb142__0_1905 [label=""];
    bb40__0_1905 -> bb42__0_1905 [label="0"];
    bb40__0_1905 -> bb41__0_1905 [label="1"];
    bb40__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb41__0_1905 -> bb68__0_1905 [label="return"];
    bb42__0_1905 -> bb43__0_1905 [label="return"];
    bb43__0_1905 -> bb44__0_1905 [label="return"];
    bb44__0_1905 -> bb45__0_1905 [label="0"];
    bb44__0_1905 -> bb46__0_1905 [label="1"];
    bb44__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb45__0_1905 -> bb48__0_1905 [label="return"];
    bb46__0_1905 -> bb47__0_1905 [label="return"];
    bb47__0_1905 -> bb138__0_1905 [label=""];
    bb48__0_1905 -> bb49__0_1905 [label="return"];
    bb49__0_1905 -> bb50__0_1905 [label="0"];
    bb49__0_1905 -> bb51__0_1905 [label="1"];
    bb49__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb50__0_1905 -> bb53__0_1905 [label="return"];
    bb51__0_1905 -> bb52__0_1905 [label="return"];
    bb52__0_1905 -> bb136__0_1905 [label=""];
    bb53__0_1905 -> bb54__0_1905 [label="return"];
    bb54__0_1905 -> bb55__0_1905 [label="0"];
    bb54__0_1905 -> bb56__0_1905 [label="1"];
    bb54__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb55__0_1905 -> bb58__0_1905 [label="return"];
    bb56__0_1905 -> bb57__0_1905 [label="return"];
    bb57__0_1905 -> bb136__0_1905 [label=""];
    bb58__0_1905 -> bb59__0_1905 [label="return"];
    bb59__0_1905 -> bb60__0_1905 [label="0"];
    bb59__0_1905 -> bb61__0_1905 [label="1"];
    bb59__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb60__0_1905 -> bb63__0_1905 [label="return"];
    bb61__0_1905 -> bb62__0_1905 [label="return"];
    bb62__0_1905 -> bb135__0_1905 [label=""];
    bb63__0_1905 -> bb64__0_1905 [label="return"];
    bb64__0_1905 -> bb65__0_1905 [label="0"];
    bb64__0_1905 -> bb66__0_1905 [label="1"];
    bb64__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb65__0_1905 -> bb93__0_1905 [label=""];
    bb66__0_1905 -> bb67__0_1905 [label="return"];
    bb67__0_1905 -> bb135__0_1905 [label=""];
    bb68__0_1905 -> bb69__0_1905 [label="return"];
    bb69__0_1905 -> bb70__0_1905 [label="0"];
    bb69__0_1905 -> bb71__0_1905 [label="1"];
    bb69__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb70__0_1905 -> bb73__0_1905 [label="return"];
    bb71__0_1905 -> bb72__0_1905 [label="return"];
    bb72__0_1905 -> bb134__0_1905 [label=""];
    bb73__0_1905 -> bb74__0_1905 [label="return"];
    bb74__0_1905 -> bb75__0_1905 [label="0"];
    bb74__0_1905 -> bb76__0_1905 [label="1"];
    bb74__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb75__0_1905 -> bb78__0_1905 [label="return"];
    bb76__0_1905 -> bb77__0_1905 [label="return"];
    bb77__0_1905 -> bb132__0_1905 [label=""];
    bb78__0_1905 -> bb79__0_1905 [label="return"];
    bb79__0_1905 -> bb80__0_1905 [label="0"];
    bb79__0_1905 -> bb81__0_1905 [label="1"];
    bb79__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb80__0_1905 -> bb83__0_1905 [label="return"];
    bb81__0_1905 -> bb82__0_1905 [label="return"];
    bb82__0_1905 -> bb132__0_1905 [label=""];
    bb83__0_1905 -> bb84__0_1905 [label="return"];
    bb84__0_1905 -> bb85__0_1905 [label="0"];
    bb84__0_1905 -> bb86__0_1905 [label="1"];
    bb84__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb85__0_1905 -> bb88__0_1905 [label="return"];
    bb86__0_1905 -> bb87__0_1905 [label="return"];
    bb87__0_1905 -> bb131__0_1905 [label=""];
    bb88__0_1905 -> bb89__0_1905 [label="return"];
    bb89__0_1905 -> bb90__0_1905 [label="0"];
    bb89__0_1905 -> bb91__0_1905 [label="1"];
    bb89__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb90__0_1905 -> bb93__0_1905 [label=""];
    bb91__0_1905 -> bb92__0_1905 [label="return"];
    bb92__0_1905 -> bb131__0_1905 [label=""];
    bb93__0_1905 -> bb95__0_1905 [label="0"];
    bb93__0_1905 -> bb94__0_1905 [label="1"];
    bb93__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb94__0_1905 -> bb101__0_1905 [label="return"];
    bb95__0_1905 -> bb96__0_1905 [label="return"];
    bb96__0_1905 -> bb97__0_1905 [label="return"];
    bb97__0_1905 -> bb98__0_1905 [label="0"];
    bb97__0_1905 -> bb99__0_1905 [label="1"];
    bb97__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb98__0_1905 -> bb106__0_1905 [label=""];
    bb99__0_1905 -> bb100__0_1905 [label="return"];
    bb100__0_1905 -> bb130__0_1905 [label=""];
    bb101__0_1905 -> bb102__0_1905 [label="return"];
    bb102__0_1905 -> bb103__0_1905 [label="0"];
    bb102__0_1905 -> bb104__0_1905 [label="1"];
    bb102__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb103__0_1905 -> bb106__0_1905 [label=""];
    bb104__0_1905 -> bb105__0_1905 [label="return"];
    bb105__0_1905 -> bb130__0_1905 [label=""];
    bb106__0_1905 -> bb107__0_1905 [label="return"];
    bb107__0_1905 -> bb108__0_1905 [label="return"];
    bb108__0_1905 -> bb109__0_1905 [label="0"];
    bb108__0_1905 -> bb110__0_1905 [label="1"];
    bb108__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb109__0_1905 -> bb112__0_1905 [label="return"];
    bb110__0_1905 -> bb111__0_1905 [label="return"];
    bb111__0_1905 -> bb129__0_1905 [label=""];
    bb112__0_1905 -> bb113__0_1905 [label="return"];
    bb113__0_1905 -> bb114__0_1905 [label="0"];
    bb113__0_1905 -> bb115__0_1905 [label="1"];
    bb113__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb114__0_1905 -> bb117__0_1905 [label="return"];
    bb115__0_1905 -> bb116__0_1905 [label="return"];
    bb116__0_1905 -> bb128__0_1905 [label=""];
    bb117__0_1905 -> bb118__0_1905 [label="return"];
    bb118__0_1905 -> bb119__0_1905 [label="return"];
    bb119__0_1905 -> bb120__0_1905 [label="0"];
    bb119__0_1905 -> bb121__0_1905 [label="1"];
    bb119__0_1905 -> bb4__0_1905 [label="otherwise"];
    bb120__0_1905 -> bb124__0_1905 [label="0"];
    bb120__0_1905 -> bb123__0_1905 [label="otherwise"];
    bb121__0_1905 -> bb122__0_1905 [label="return"];
    bb122__0_1905 -> bb128__0_1905 [label=""];
    bb123__0_1905 -> bb125__0_1905 [label="return"];
    bb124__0_1905 -> bb126__0_1905 [label=""];
    bb125__0_1905 -> bb126__0_1905 [label=""];
    bb126__0_1905 -> bb127__0_1905 [label="return"];
    bb127__0_1905 -> bb147__0_1905 [label=""];
    bb128__0_1905 -> bb129__0_1905 [label=""];
    bb129__0_1905 -> bb130__0_1905 [label=""];
    bb130__0_1905 -> bb139__0_1905 [label=""];
    bb131__0_1905 -> bb133__0_1905 [label=""];
    bb132__0_1905 -> bb133__0_1905 [label=""];
    bb133__0_1905 -> bb134__0_1905 [label=""];
    bb134__0_1905 -> bb139__0_1905 [label=""];
    bb135__0_1905 -> bb137__0_1905 [label=""];
    bb136__0_1905 -> bb137__0_1905 [label=""];
    bb137__0_1905 -> bb138__0_1905 [label=""];
    bb138__0_1905 -> bb139__0_1905 [label=""];
    bb139__0_1905 -> bb143__0_1905 [label=""];
    bb140__0_1905 -> bb141__0_1905 [label=""];
    bb141__0_1905 -> bb142__0_1905 [label=""];
    bb142__0_1905 -> bb143__0_1905 [label=""];
    bb143__0_1905 -> bb144__0_1905 [label=""];
    bb144__0_1905 -> bb145__0_1905 [label=""];
    bb145__0_1905 -> bb146__0_1905 [label=""];
    bb146__0_1905 -> bb147__0_1905 [label=""];
}
