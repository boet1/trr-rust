digraph Mir_0_2318 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn on_the_hour_update(_1: i64, _2: i64, _3: i64) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: i64;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: i64;<br align="left"/>let mut _14: i64;<br align="left"/>let _15: ();<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: i64;<br align="left"/>let _18: i64;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: i64;<br align="left"/>let _23: i64;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _25: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: i64;<br align="left"/>let _32: i64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: i64;<br align="left"/>let _41: ();<br align="left"/>let mut _42: bool;<br align="left"/>let mut _43: i64;<br align="left"/>let mut _44: i64;<br align="left"/>let mut _45: i64;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _47: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: i64;<br align="left"/>let mut _55: i64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _58: i64;<br align="left"/>let mut _59: i64;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: i64;<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: i64;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _70: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _71: i64;<br align="left"/>let mut _72: i64;<br align="left"/>let mut _73: isize;<br align="left"/>let _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _75: !;<br align="left"/>let mut _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _77: i64;<br align="left"/>let _78: i64;<br align="left"/>let mut _79: i64;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _81: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: i64;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: i64;<br align="left"/>let mut _89: i64;<br align="left"/>debug now =&gt; _1;<br align="left"/>debug last_update_ts =&gt; _2;<br align="left"/>debug update_period =&gt; _3;<br align="left"/>debug time_since_last_update =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug next_update_wait =&gt; _14;<br align="left"/>debug last_update_delay =&gt; _18;<br align="left"/>debug max_delay_for_next_period =&gt; _23;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug two_funding_periods =&gt; _32;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _74;<br align="left"/>debug val =&gt; _77;<br align="left"/>debug time_remaining_until_update =&gt; _78;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>>;
    bb0__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = &lt;i64 as SafeMath&gt;::safe_sub(move _7, move _8)</td></tr></table>>];
    bb1__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: i64)<br/>_4 = _13<br/>StorageDead(_13)<br/>StorageDead(_5)<br/>StorageLive(_14)<br/>_14 = _3<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _3<br/>_16 = Gt(move _17, const 1_i64)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _2<br/>StorageLive(_20)<br/>_20 = _3<br/></td></tr><tr><td align="left">_18 = core::num::&lt;impl i64&gt;::rem_euclid(move _19, move _20)</td></tr></table>>];
    bb8__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _18<br/>_21 = Ne(move _22, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _3<br/></td></tr><tr><td align="left">_25 = &lt;i64 as SafeMath&gt;::safe_div(move _26, const 3_i64)</td></tr></table>>];
    bb11__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb12__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb13__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_24 as Continue).0: i64)<br/>_23 = _31<br/>StorageDead(_31)<br/>StorageDead(_24)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _3<br/></td></tr><tr><td align="left">_34 = &lt;i64 as SafeMath&gt;::safe_mul(move _35, const 2_i64)</td></tr></table>>];
    bb14__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb15__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb17__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb18__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_33 as Continue).0: i64)<br/>_32 = _40<br/>StorageDead(_40)<br/>StorageDead(_33)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _18<br/>StorageLive(_44)<br/>_44 = _23<br/>_42 = Gt(move _43, move _44)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb19__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb20__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _32<br/>StorageLive(_49)<br/>_49 = _18<br/></td></tr><tr><td align="left">_47 = &lt;i64 as SafeMath&gt;::safe_sub(move _48, move _49)</td></tr></table>>];
    bb22__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _3<br/>StorageLive(_59)<br/>_59 = _18<br/></td></tr><tr><td align="left">_57 = &lt;i64 as SafeMath&gt;::safe_sub(move _58, move _59)</td></tr></table>>];
    bb23__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb24__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_50 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_46 as Continue).0: i64)<br/>_45 = _54<br/>StorageDead(_54)<br/>_14 = move _45<br/>StorageDead(_45)<br/>StorageDead(_46)<br/>_41 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_45)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb29__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_60 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb30__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_56 as Continue).0: i64)<br/>_55 = _64<br/>StorageDead(_64)<br/>_14 = move _55<br/>StorageDead(_55)<br/>StorageDead(_56)<br/>_41 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb32__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_55)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _14<br/>StorageLive(_67)<br/>_67 = _32<br/>_65 = Gt(move _66, move _67)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb34__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _14<br/>StorageLive(_72)<br/>_72 = _3<br/></td></tr><tr><td align="left">_70 = &lt;i64 as SafeMath&gt;::safe_sub(move _71, move _72)</td></tr></table>>];
    bb35__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb36__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_73 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb37__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_69 as Continue).0: i64)<br/>_68 = _77<br/>StorageDead(_77)<br/>_14 = move _68<br/>StorageDead(_68)<br/>StorageDead(_69)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_76)<br/>_76 = _74<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _76)</td></tr></table>>];
    bb39__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_68)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_32)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _14<br/>StorageLive(_83)<br/>_83 = _4<br/></td></tr><tr><td align="left">_81 = &lt;i64 as SafeMath&gt;::safe_sub(move _82, move _83)</td></tr></table>>];
    bb45__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb46__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_84 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb47__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_80 as Continue).0: i64)<br/>_79 = _88<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_78 = &lt;i64 as Ord&gt;::max(move _79, const 0_i64)</td></tr></table>>];
    bb48__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb49__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_79)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_80)<br/>StorageLive(_89)<br/>_89 = _78<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _89)<br/>StorageDead(_89)<br/>StorageDead(_78)<br/>StorageDead(_14)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2318 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2318 -> bb1__0_2318 [label="return"];
    bb1__0_2318 -> bb2__0_2318 [label="return"];
    bb2__0_2318 -> bb3__0_2318 [label="0"];
    bb2__0_2318 -> bb5__0_2318 [label="1"];
    bb2__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb3__0_2318 -> bb8__0_2318 [label="0"];
    bb3__0_2318 -> bb7__0_2318 [label="otherwise"];
    bb5__0_2318 -> bb6__0_2318 [label="return"];
    bb6__0_2318 -> bb55__0_2318 [label=""];
    bb7__0_2318 -> bb9__0_2318 [label="return"];
    bb8__0_2318 -> bb44__0_2318 [label=""];
    bb9__0_2318 -> bb42__0_2318 [label="0"];
    bb9__0_2318 -> bb10__0_2318 [label="otherwise"];
    bb10__0_2318 -> bb11__0_2318 [label="return"];
    bb11__0_2318 -> bb12__0_2318 [label="return"];
    bb12__0_2318 -> bb13__0_2318 [label="0"];
    bb12__0_2318 -> bb14__0_2318 [label="1"];
    bb12__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb13__0_2318 -> bb16__0_2318 [label="return"];
    bb14__0_2318 -> bb15__0_2318 [label="return"];
    bb15__0_2318 -> bb53__0_2318 [label=""];
    bb16__0_2318 -> bb17__0_2318 [label="return"];
    bb17__0_2318 -> bb18__0_2318 [label="0"];
    bb17__0_2318 -> bb19__0_2318 [label="1"];
    bb17__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb18__0_2318 -> bb22__0_2318 [label="0"];
    bb18__0_2318 -> bb21__0_2318 [label="otherwise"];
    bb19__0_2318 -> bb20__0_2318 [label="return"];
    bb20__0_2318 -> bb52__0_2318 [label=""];
    bb21__0_2318 -> bb23__0_2318 [label="return"];
    bb22__0_2318 -> bb28__0_2318 [label="return"];
    bb23__0_2318 -> bb24__0_2318 [label="return"];
    bb24__0_2318 -> bb25__0_2318 [label="0"];
    bb24__0_2318 -> bb26__0_2318 [label="1"];
    bb24__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb25__0_2318 -> bb33__0_2318 [label=""];
    bb26__0_2318 -> bb27__0_2318 [label="return"];
    bb27__0_2318 -> bb51__0_2318 [label=""];
    bb28__0_2318 -> bb29__0_2318 [label="return"];
    bb29__0_2318 -> bb30__0_2318 [label="0"];
    bb29__0_2318 -> bb31__0_2318 [label="1"];
    bb29__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb30__0_2318 -> bb33__0_2318 [label=""];
    bb31__0_2318 -> bb32__0_2318 [label="return"];
    bb32__0_2318 -> bb51__0_2318 [label=""];
    bb33__0_2318 -> bb40__0_2318 [label="0"];
    bb33__0_2318 -> bb34__0_2318 [label="otherwise"];
    bb34__0_2318 -> bb35__0_2318 [label="return"];
    bb35__0_2318 -> bb36__0_2318 [label="return"];
    bb36__0_2318 -> bb37__0_2318 [label="0"];
    bb36__0_2318 -> bb38__0_2318 [label="1"];
    bb36__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb37__0_2318 -> bb41__0_2318 [label=""];
    bb38__0_2318 -> bb39__0_2318 [label="return"];
    bb39__0_2318 -> bb52__0_2318 [label=""];
    bb40__0_2318 -> bb41__0_2318 [label=""];
    bb41__0_2318 -> bb43__0_2318 [label=""];
    bb42__0_2318 -> bb43__0_2318 [label=""];
    bb43__0_2318 -> bb44__0_2318 [label=""];
    bb44__0_2318 -> bb45__0_2318 [label="return"];
    bb45__0_2318 -> bb46__0_2318 [label="return"];
    bb46__0_2318 -> bb47__0_2318 [label="0"];
    bb46__0_2318 -> bb48__0_2318 [label="1"];
    bb46__0_2318 -> bb4__0_2318 [label="otherwise"];
    bb47__0_2318 -> bb50__0_2318 [label="return"];
    bb48__0_2318 -> bb49__0_2318 [label="return"];
    bb49__0_2318 -> bb54__0_2318 [label=""];
    bb50__0_2318 -> bb56__0_2318 [label=""];
    bb51__0_2318 -> bb52__0_2318 [label=""];
    bb52__0_2318 -> bb53__0_2318 [label=""];
    bb53__0_2318 -> bb54__0_2318 [label=""];
    bb54__0_2318 -> bb55__0_2318 [label=""];
    bb55__0_2318 -> bb56__0_2318 [label=""];
}
