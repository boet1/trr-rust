digraph Mir_0_4383 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Order::has_auction_price(_1: &amp;ReErased state::user::Order, _2: u64, _3: u8, _4: u64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _5: bool;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _7: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u8;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: bool;<br align="left"/>let _16: bool;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: bool;<br align="left"/>let mut _21: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug order_slot =&gt; _2;<br align="left"/>debug auction_duration =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug auction_complete =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug has_auction_prices =&gt; _16;<br align="left"/>>;
    bb0__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _2<br/>StorageLive(_9)<br/>_9 = _3<br/>StorageLive(_10)<br/>_10 = _4<br/></td></tr><tr><td align="left">_7 = is_auction_complete(move _8, move _9, move _10)</td></tr></table>>];
    bb1__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_6 as Continue).0: bool)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_1).6: i64)<br/>_17 = Ne(move _18, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb4__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_16 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = ((*_1).7: i64)<br/>_16 = Ne(move _19, const 0_i64)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _5<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_20 = _16<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_20 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _20)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4383 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4383 -> bb1__0_4383 [label="return"];
    bb1__0_4383 -> bb2__0_4383 [label="return"];
    bb2__0_4383 -> bb3__0_4383 [label="0"];
    bb2__0_4383 -> bb5__0_4383 [label="1"];
    bb2__0_4383 -> bb4__0_4383 [label="otherwise"];
    bb3__0_4383 -> bb8__0_4383 [label="0"];
    bb3__0_4383 -> bb7__0_4383 [label="otherwise"];
    bb5__0_4383 -> bb6__0_4383 [label="return"];
    bb6__0_4383 -> bb13__0_4383 [label=""];
    bb7__0_4383 -> bb9__0_4383 [label=""];
    bb8__0_4383 -> bb9__0_4383 [label=""];
    bb9__0_4383 -> bb10__0_4383 [label="0"];
    bb9__0_4383 -> bb11__0_4383 [label="otherwise"];
    bb10__0_4383 -> bb12__0_4383 [label=""];
    bb11__0_4383 -> bb12__0_4383 [label=""];
    bb12__0_4383 -> bb13__0_4383 [label=""];
}
