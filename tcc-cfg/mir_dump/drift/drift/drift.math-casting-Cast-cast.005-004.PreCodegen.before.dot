digraph Mir_0_1961 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Cast::cast(_1: Self/#0) -&gt; std::result::Result&lt;T/#1, error::ErrorCode&gt;<br align="left"/>let mut _2: std::result::Result&lt;T/#1, Alias(Projection, AliasTy { args: [T/#1, Self/#0], def_id: DefId(2:2592 ~ core[9adc]::convert::TryFrom::Error) })&gt;;<br align="left"/>let mut _3: Self/#0;<br align="left"/>let mut _4: isize;<br align="left"/>let _5: T/#1;<br align="left"/>let mut _6: T/#1;<br align="left"/>let _7: &amp;ReErased std::panic::Location&lt;ReErased&gt;;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: &amp;ReErased std::string::String;<br align="left"/>let _12: &amp;ReErased std::string::String;<br align="left"/>let _13: std::string::String;<br align="left"/>let _14: std::string::String;<br align="left"/>let mut _15: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _17: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _18: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _19: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _20: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _21: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _23: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _24: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::panic::Location&lt;ReErased&gt;;<br align="left"/>let mut _29: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _30: &amp;ReErased u32;<br align="left"/>let _31: &amp;ReErased u32;<br align="left"/>let _32: u32;<br align="left"/>let mut _33: &amp;ReErased std::panic::Location&lt;ReErased&gt;;<br align="left"/>let mut _34: error::ErrorCode;<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug result =&gt; _5;<br align="left"/>debug caller =&gt; _7;<br align="left"/>debug res =&gt; _14;<br align="left"/>>;
    bb0__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_36 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = move _1<br/></td></tr><tr><td align="left">_2 = &lt;Self as TryInto&lt;T&gt;&gt;::try_into(move _3)</td></tr></table>>];
    bb1__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_36 = const true<br/>StorageDead(_3)<br/>_4 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = Location::&lt;'_&gt;::caller()</td></tr></table>>];
    bb3__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = move ((_2 as Ok).0: T)<br/>StorageLive(_6)<br/>_6 = move _5<br/>_0 = std::result::Result::&lt;T, error::ErrorCode&gt;::Ok(move _6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_35 = const _<br/>_18 = &amp;(*_35)<br/>_17 = &amp;(*_18)<br/>_16 = move _17 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_7)<br/></td></tr><tr><td align="left">_27 = Location::&lt;'_&gt;::file(move _28)</td></tr></table>>];
    bb6__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_24 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _25)</td></tr></table>>];
    bb7__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;(*_7)<br/></td></tr><tr><td align="left">_32 = Location::&lt;'_&gt;::line(move _33)</td></tr></table>>];
    bb8__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _30)</td></tr></table>>];
    bb9__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_23 = [move _24, move _29]<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>_22 = &amp;_23<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_15 = Arguments::&lt;'_&gt;::new_v1(move _16, move _20)</td></tr></table>>];
    bb10__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = format(move _15)</td></tr></table>>];
    bb11__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>_13 = move _14<br/>StorageDead(_14)<br/>_12 = &amp;_13<br/>_11 = &amp;(*_12)<br/></td></tr><tr><td align="left">_10 = &lt;String as Deref&gt;::deref(move _11)</td></tr></table>>];
    bb12__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_9 = &amp;(*_10)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log(move _9)</td></tr></table>>];
    bb13__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb14__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_34)<br/>_34 = error::ErrorCode::CastingFailure<br/>_0 = std::result::Result::&lt;T, error::ErrorCode&gt;::Err(move _34)<br/>StorageDead(_34)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb16__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb17__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_36 = const false<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb18__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb19__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_37 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb20__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb21__0_1961 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left" balign="left">_39 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb0__0_1961 -> bb1__0_1961 [label="return"];
    bb0__0_1961 -> bb16__0_1961 [label="unwind"];
    bb1__0_1961 -> bb4__0_1961 [label="0"];
    bb1__0_1961 -> bb2__0_1961 [label="1"];
    bb1__0_1961 -> bb3__0_1961 [label="otherwise"];
    bb2__0_1961 -> bb5__0_1961 [label="return"];
    bb2__0_1961 -> bb21__0_1961 [label="unwind"];
    bb4__0_1961 -> bb19__0_1961 [label=""];
    bb5__0_1961 -> bb6__0_1961 [label="return"];
    bb5__0_1961 -> bb21__0_1961 [label="unwind"];
    bb6__0_1961 -> bb7__0_1961 [label="return"];
    bb6__0_1961 -> bb21__0_1961 [label="unwind"];
    bb7__0_1961 -> bb8__0_1961 [label="return"];
    bb7__0_1961 -> bb21__0_1961 [label="unwind"];
    bb8__0_1961 -> bb9__0_1961 [label="return"];
    bb8__0_1961 -> bb21__0_1961 [label="unwind"];
    bb9__0_1961 -> bb10__0_1961 [label="return"];
    bb9__0_1961 -> bb21__0_1961 [label="unwind"];
    bb10__0_1961 -> bb11__0_1961 [label="return"];
    bb10__0_1961 -> bb21__0_1961 [label="unwind"];
    bb11__0_1961 -> bb12__0_1961 [label="return"];
    bb11__0_1961 -> bb15__0_1961 [label="unwind"];
    bb12__0_1961 -> bb13__0_1961 [label="return"];
    bb12__0_1961 -> bb15__0_1961 [label="unwind"];
    bb13__0_1961 -> bb14__0_1961 [label="return"];
    bb13__0_1961 -> bb21__0_1961 [label="unwind"];
    bb14__0_1961 -> bb19__0_1961 [label=""];
    bb15__0_1961 -> bb21__0_1961 [label="return"];
    bb18__0_1961 -> bb17__0_1961 [label="return"];
    bb18__0_1961 -> bb16__0_1961 [label="unwind"];
    bb19__0_1961 -> bb17__0_1961 [label="0"];
    bb19__0_1961 -> bb18__0_1961 [label="otherwise"];
    bb20__0_1961 -> bb16__0_1961 [label="return"];
    bb21__0_1961 -> bb16__0_1961 [label="0"];
    bb21__0_1961 -> bb20__0_1961 [label="otherwise"];
}
