digraph Mir_0_3802 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpMarket::get_unrealized_asset_weight(_1: &amp;ReErased state::perp_market::PerpMarket, _2: i128, _3: math::margin::MarginRequirementType) -&gt; std::result::Result&lt;u32, error::ErrorCode&gt;<br align="left"/>let mut _4: u32;<br align="left"/>let mut _5: isize;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: u32;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: isize;<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: u64;<br align="left"/>let _13: i128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _16: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _17: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: i128;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: i128;<br align="left"/>let mut _26: i128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: i128;<br align="left"/>let mut _35: u32;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _37: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u32;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u128;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: u128;<br align="left"/>let mut _68: i128;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u128;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: u32;<br align="left"/>let _79: u32;<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: i128;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: u32;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _86: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _87: u128;<br align="left"/>let mut _88: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _89: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: i128;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: u128;<br align="left"/>let mut _97: u32;<br align="left"/>let mut _98: u32;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: u32;<br align="left"/>let mut _104: u32;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug unrealized_pnl =&gt; _2;<br align="left"/>debug margin_type =&gt; _3;<br align="left"/>debug margin_asset_weight =&gt; _4;<br align="left"/>debug net_unsettled_pnl =&gt; _13;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug unrealized_asset_weight =&gt; _79;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>>;
    bb0__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_5 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = ((*_1).18: u32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_4 = ((*_1).17: u32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _4<br/>_7 = Gt(move _8, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb5__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>_10 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb6__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_9 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_9 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb9__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = ((*_1).5: u64)<br/>_11 = Gt(move _12, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb10__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;((*_1).1: state::perp_market::AMM)<br/>_16 = &amp;(*_17)<br/>StorageLive(_18)<br/>_18 = ((((*_1).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).0: i64)<br/></td></tr><tr><td align="left">_15 = calculate_net_user_pnl(move _16, move _18)</td></tr></table>>];
    bb11__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb12__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_19 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb13__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_14 as Continue).0: i128)<br/>_13 = _23<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _13<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).5: u64)<br/></td></tr><tr><td align="left">_28 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _29)</td></tr></table>>];
    bb14__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb15__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb17__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_30 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb18__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Continue).0: i128)<br/>_26 = _34<br/>StorageDead(_34)<br/>_24 = Gt(move _25, move _26)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb19__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb20__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _4<br/></td></tr><tr><td align="left">_46 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _47)</td></tr></table>>];
    bb22__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb24__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb25__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: u128)<br/>_44 = _52<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = ((*_1).5: u64)<br/></td></tr><tr><td align="left">_55 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _56)</td></tr></table>>];
    bb26__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb27__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb29__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb30__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: u128)<br/>_53 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_43 = &lt;u128 as SafeMath&gt;::safe_mul(move _44, move _53)</td></tr></table>>];
    bb31__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb32__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb34__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_62 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb35__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_42 as Continue).0: u128)<br/>_41 = _66<br/>StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _13<br/></td></tr><tr><td align="left">_67 = core::num::&lt;impl i128&gt;::unsigned_abs(move _68)</td></tr></table>>];
    bb36__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb37__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_40 = &lt;u128 as SafeMath&gt;::safe_div(move _41, move _67)</td></tr></table>>];
    bb39__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb40__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_69 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb41__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_39 as Continue).0: u128)<br/>_38 = _73<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_37 = &lt;u128 as Cast&gt;::cast::&lt;u32&gt;(move _38)</td></tr></table>>];
    bb42__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb43__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb45__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_74 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb46__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_36 as Continue).0: u32)<br/>_35 = _78<br/>StorageDead(_78)<br/>_4 = move _35<br/>StorageDead(_35)<br/>StorageDead(_54)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb48__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _2<br/>_80 = Gt(move _81, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb54__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_82 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb55__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_79 = ((*_1).18: u32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = _4<br/>_83 = Gt(move _84, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb57__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _2<br/></td></tr><tr><td align="left">_90 = core::num::&lt;impl i128&gt;::unsigned_abs(move _91)</td></tr></table>>];
    bb58__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;u128 as SafeMath&gt;::safe_mul(move _90, const _)</td></tr></table>>];
    bb59__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _89)</td></tr></table>>];
    bb60__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_92 = discriminant(_88)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb61__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_88 as Continue).0: u128)<br/>_87 = _96<br/>StorageDead(_96)<br/>StorageLive(_97)<br/>_97 = ((*_1).12: u32)<br/>StorageLive(_98)<br/>_98 = _4<br/></td></tr><tr><td align="left">_86 = calculate_size_discount_asset_weight(move _87, move _97, move _98)</td></tr></table>>];
    bb62__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_88 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb63__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb65__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_99 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb66__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_85 as Continue).0: u32)<br/>_79 = _103<br/>StorageDead(_103)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb68__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_79 = const 0_u32<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageLive(_104)<br/>_104 = _79<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(move _104)<br/>StorageDead(_104)<br/>StorageDead(_79)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_3802 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3802 -> bb3__0_3802 [label="0"];
    bb0__0_3802 -> bb3__0_3802 [label="1"];
    bb0__0_3802 -> bb1__0_3802 [label="2"];
    bb0__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb1__0_3802 -> bb4__0_3802 [label=""];
    bb3__0_3802 -> bb4__0_3802 [label=""];
    bb4__0_3802 -> bb51__0_3802 [label="0"];
    bb4__0_3802 -> bb5__0_3802 [label="otherwise"];
    bb5__0_3802 -> bb7__0_3802 [label="0"];
    bb5__0_3802 -> bb7__0_3802 [label="1"];
    bb5__0_3802 -> bb6__0_3802 [label="otherwise"];
    bb6__0_3802 -> bb8__0_3802 [label=""];
    bb7__0_3802 -> bb8__0_3802 [label=""];
    bb8__0_3802 -> bb52__0_3802 [label="0"];
    bb8__0_3802 -> bb9__0_3802 [label="otherwise"];
    bb9__0_3802 -> bb50__0_3802 [label="0"];
    bb9__0_3802 -> bb10__0_3802 [label="otherwise"];
    bb10__0_3802 -> bb11__0_3802 [label="return"];
    bb11__0_3802 -> bb12__0_3802 [label="return"];
    bb12__0_3802 -> bb13__0_3802 [label="0"];
    bb12__0_3802 -> bb14__0_3802 [label="1"];
    bb12__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb13__0_3802 -> bb16__0_3802 [label="return"];
    bb14__0_3802 -> bb15__0_3802 [label="return"];
    bb15__0_3802 -> bb79__0_3802 [label=""];
    bb16__0_3802 -> bb17__0_3802 [label="return"];
    bb17__0_3802 -> bb18__0_3802 [label="0"];
    bb17__0_3802 -> bb19__0_3802 [label="1"];
    bb17__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb18__0_3802 -> bb22__0_3802 [label="0"];
    bb18__0_3802 -> bb21__0_3802 [label="otherwise"];
    bb19__0_3802 -> bb20__0_3802 [label="return"];
    bb20__0_3802 -> bb78__0_3802 [label=""];
    bb21__0_3802 -> bb23__0_3802 [label="return"];
    bb22__0_3802 -> bb49__0_3802 [label=""];
    bb23__0_3802 -> bb24__0_3802 [label="return"];
    bb24__0_3802 -> bb25__0_3802 [label="0"];
    bb24__0_3802 -> bb26__0_3802 [label="1"];
    bb24__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb25__0_3802 -> bb28__0_3802 [label="return"];
    bb26__0_3802 -> bb27__0_3802 [label="return"];
    bb27__0_3802 -> bb77__0_3802 [label=""];
    bb28__0_3802 -> bb29__0_3802 [label="return"];
    bb29__0_3802 -> bb30__0_3802 [label="0"];
    bb29__0_3802 -> bb31__0_3802 [label="1"];
    bb29__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb30__0_3802 -> bb33__0_3802 [label="return"];
    bb31__0_3802 -> bb32__0_3802 [label="return"];
    bb32__0_3802 -> bb74__0_3802 [label=""];
    bb33__0_3802 -> bb34__0_3802 [label="return"];
    bb34__0_3802 -> bb35__0_3802 [label="0"];
    bb34__0_3802 -> bb36__0_3802 [label="1"];
    bb34__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb35__0_3802 -> bb38__0_3802 [label="return"];
    bb36__0_3802 -> bb37__0_3802 [label="return"];
    bb37__0_3802 -> bb74__0_3802 [label=""];
    bb38__0_3802 -> bb39__0_3802 [label="return"];
    bb39__0_3802 -> bb40__0_3802 [label="return"];
    bb40__0_3802 -> bb41__0_3802 [label="0"];
    bb40__0_3802 -> bb42__0_3802 [label="1"];
    bb40__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb41__0_3802 -> bb44__0_3802 [label="return"];
    bb42__0_3802 -> bb43__0_3802 [label="return"];
    bb43__0_3802 -> bb75__0_3802 [label=""];
    bb44__0_3802 -> bb45__0_3802 [label="return"];
    bb45__0_3802 -> bb46__0_3802 [label="0"];
    bb45__0_3802 -> bb47__0_3802 [label="1"];
    bb45__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb46__0_3802 -> bb49__0_3802 [label=""];
    bb47__0_3802 -> bb48__0_3802 [label="return"];
    bb48__0_3802 -> bb76__0_3802 [label=""];
    bb49__0_3802 -> bb53__0_3802 [label=""];
    bb50__0_3802 -> bb52__0_3802 [label=""];
    bb51__0_3802 -> bb52__0_3802 [label=""];
    bb52__0_3802 -> bb53__0_3802 [label=""];
    bb53__0_3802 -> bb71__0_3802 [label="0"];
    bb53__0_3802 -> bb54__0_3802 [label="otherwise"];
    bb54__0_3802 -> bb56__0_3802 [label="0"];
    bb54__0_3802 -> bb56__0_3802 [label="1"];
    bb54__0_3802 -> bb55__0_3802 [label="2"];
    bb54__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb55__0_3802 -> bb72__0_3802 [label=""];
    bb56__0_3802 -> bb69__0_3802 [label="0"];
    bb56__0_3802 -> bb57__0_3802 [label="otherwise"];
    bb57__0_3802 -> bb58__0_3802 [label="return"];
    bb58__0_3802 -> bb59__0_3802 [label="return"];
    bb59__0_3802 -> bb60__0_3802 [label="return"];
    bb60__0_3802 -> bb61__0_3802 [label="0"];
    bb60__0_3802 -> bb62__0_3802 [label="1"];
    bb60__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb61__0_3802 -> bb64__0_3802 [label="return"];
    bb62__0_3802 -> bb63__0_3802 [label="return"];
    bb63__0_3802 -> bb73__0_3802 [label=""];
    bb64__0_3802 -> bb65__0_3802 [label="return"];
    bb65__0_3802 -> bb66__0_3802 [label="0"];
    bb65__0_3802 -> bb67__0_3802 [label="1"];
    bb65__0_3802 -> bb2__0_3802 [label="otherwise"];
    bb66__0_3802 -> bb70__0_3802 [label=""];
    bb67__0_3802 -> bb68__0_3802 [label="return"];
    bb68__0_3802 -> bb73__0_3802 [label=""];
    bb69__0_3802 -> bb70__0_3802 [label=""];
    bb70__0_3802 -> bb72__0_3802 [label=""];
    bb71__0_3802 -> bb72__0_3802 [label=""];
    bb72__0_3802 -> bb81__0_3802 [label=""];
    bb73__0_3802 -> bb80__0_3802 [label=""];
    bb74__0_3802 -> bb75__0_3802 [label=""];
    bb75__0_3802 -> bb76__0_3802 [label=""];
    bb76__0_3802 -> bb77__0_3802 [label=""];
    bb77__0_3802 -> bb78__0_3802 [label=""];
    bb78__0_3802 -> bb79__0_3802 [label=""];
    bb79__0_3802 -> bb80__0_3802 [label=""];
    bb80__0_3802 -> bb81__0_3802 [label=""];
}
