digraph Mir_0_201 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn transfer_protocol_insurance_fund_stake(_1: u64, _2: u128, _3: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake, _4: &amp;ReErased mut state::user::UserStats, _5: &amp;ReErased mut state::spot_market::SpotMarket, _6: i64, _7: anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _10: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: ();<br align="left"/>let _18: u128;<br align="left"/>let _19: u128;<br align="left"/>let _20: u128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u128;<br align="left"/>let _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _34: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: u128;<br align="left"/>let _40: ();<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _42: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _43: bool;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: ();<br align="left"/>let _47: error::ErrorCode;<br align="left"/>let _48: ();<br align="left"/>let mut _49: &amp;ReErased str;<br align="left"/>let _50: &amp;ReErased str;<br align="left"/>let mut _51: &amp;ReErased std::string::String;<br align="left"/>let _52: &amp;ReErased std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let _54: std::string::String;<br align="left"/>let mut _55: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _57: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _58: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _59: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _62: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _63: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _64: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased error::ErrorCode;<br align="left"/>let _66: &amp;ReErased error::ErrorCode;<br align="left"/>let _67: ();<br align="left"/>let mut _68: &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased std::string::String;<br align="left"/>let _71: &amp;ReErased std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let mut _74: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _82: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased u128;<br align="left"/>let _85: &amp;ReErased u128;<br align="left"/>let mut _86: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased u128;<br align="left"/>let _88: &amp;ReErased u128;<br align="left"/>let mut _89: error::ErrorCode;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: ();<br align="left"/>let mut _95: u128;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _97: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _98: u128;<br align="left"/>let mut _99: u128;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: u128;<br align="left"/>let _105: ();<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _107: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _108: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _109: u128;<br align="left"/>let mut _110: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: ();<br align="left"/>let _116: u128;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _118: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _119: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _120: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: u128;<br align="left"/>let _126: ();<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: u16;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _131: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _132: u128;<br align="left"/>let mut _133: u128;<br align="left"/>let mut _134: u64;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: u64;<br align="left"/>let mut _140: bool;<br align="left"/>let mut _141: u16;<br align="left"/>let mut _142: u64;<br align="left"/>let mut _143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _144: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _145: u128;<br align="left"/>let mut _146: u128;<br align="left"/>let mut _147: u64;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: u64;<br align="left"/>let _153: u64;<br align="left"/>let mut _154: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _155: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _156: u128;<br align="left"/>let mut _157: u128;<br align="left"/>let mut _158: u64;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _163: u64;<br align="left"/>let _164: u128;<br align="left"/>let _165: u128;<br align="left"/>let mut _166: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _167: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _168: u128;<br align="left"/>let mut _169: u128;<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: u128;<br align="left"/>let _175: ();<br align="left"/>let _176: ();<br align="left"/>let mut _177: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _178: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _179: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _180: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _181: &amp;ReErased [u8];<br align="left"/>let _182: &amp;ReErased [u8];<br align="left"/>let mut _183: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _184: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _185: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _186: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _187: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _188: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _189: i64;<br align="left"/>let mut _190: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _191: state::events::StakeAction;<br align="left"/>let mut _192: u64;<br align="left"/>let mut _193: u16;<br align="left"/>let mut _194: u64;<br align="left"/>let mut _195: u128;<br align="left"/>let mut _196: u128;<br align="left"/>let mut _197: u128;<br align="left"/>let mut _198: u128;<br align="left"/>let mut _199: u128;<br align="left"/>let mut _200: u128;<br align="left"/>let _201: ();<br align="left"/>let _202: ();<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _204: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _205: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _206: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _207: &amp;ReErased [u8];<br align="left"/>let _208: &amp;ReErased [u8];<br align="left"/>let mut _209: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _210: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _211: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _212: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _213: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _214: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _215: i64;<br align="left"/>let mut _216: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _217: state::events::StakeAction;<br align="left"/>let mut _218: u64;<br align="left"/>let mut _219: u16;<br align="left"/>let mut _220: u64;<br align="left"/>let mut _221: u128;<br align="left"/>let mut _222: u128;<br align="left"/>let mut _223: u128;<br align="left"/>let mut _224: u128;<br align="left"/>let mut _225: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _226: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _227: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _228: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: u128;<br align="left"/>let mut _234: u128;<br align="left"/>let mut _235: u128;<br align="left"/>let mut _236: u64;<br align="left"/>let mut _237: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _238: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug insurance_vault_amount =&gt; _1;<br align="left"/>debug n_shares =&gt; _2;<br align="left"/>debug target_insurance_fund_stake =&gt; _3;<br align="left"/>debug user_stats =&gt; _4;<br align="left"/>debug spot_market =&gt; _5;<br align="left"/>debug now =&gt; _6;<br align="left"/>debug signer_pubkey =&gt; _7;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug total_if_shares_before =&gt; _18;<br align="left"/>debug user_if_shares_before =&gt; _19;<br align="left"/>debug if_shares_before =&gt; _20;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug target_if_shares_before =&gt; _30;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug error_code =&gt; _47;<br align="left"/>debug res =&gt; _54;<br align="left"/>debug res =&gt; _73;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug target_if_shares_after =&gt; _116;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug withdraw_amount =&gt; _153;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>debug user_if_shares_after =&gt; _164;<br align="left"/>debug protocol_if_shares_after =&gt; _165;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>>;
    bb0__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _1<br/>StorageLive(_12)<br/>_12 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_10 = apply_rebase_to_insurance_fund(move _11, move _12)</td></tr></table>>];
    bb1__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb2__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: ())<br/>_8 = _17<br/>StorageDead(_17)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_18)<br/>_18 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_19)<br/>_19 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _18<br/>StorageLive(_24)<br/>_24 = _19<br/></td></tr><tr><td align="left">_22 = &lt;u128 as SafeMath&gt;::safe_sub(move _23, move _24)</td></tr></table>>];
    bb4__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb8__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_25 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb9__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_21 as Continue).0: u128)<br/>_20 = _29<br/>StorageDead(_29)<br/>StorageDead(_21)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;(*_3)<br/>StorageLive(_34)<br/>_34 = &amp;(*_5)<br/></td></tr><tr><td align="left">_32 = InsuranceFundStake::checked_if_shares(move _33, move _34)</td></tr></table>>];
    bb10__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb11__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb13__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_35 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb14__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_31 as Continue).0: u128)<br/>_30 = _39<br/>StorageDead(_39)<br/>StorageDead(_31)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _20<br/>StorageLive(_45)<br/>_45 = _2<br/>_43 = Ge(move _44, move _45)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb15__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb16__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_46)<br/>_46 = ()<br/>_42 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _46)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_47)<br/>_47 = error::ErrorCode::InsufficientIFShares<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_238 = const _<br/>_58 = &amp;(*_238)<br/>_57 = &amp;(*_58)<br/>_56 = move _57 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_57)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;_47<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _65)</td></tr></table>>];
    bb19__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_63 = [move _64]<br/>StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/>_60 = move _61 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_55 = Arguments::&lt;'_&gt;::new_v1(move _56, move _60)</td></tr></table>>];
    bb20__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = format(move _55)</td></tr></table>>];
    bb21__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/>_53 = move _54<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = &lt;String as Deref&gt;::deref(move _51)</td></tr></table>>];
    bb22__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_49 = &amp;(*_50)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_48 = solana_program::log::sol_log(move _49)</td></tr></table>>];
    bb23__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb24__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_237 = const _<br/>_77 = &amp;(*_237)<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_20<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _84)</td></tr></table>>];
    bb25__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_2<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _87)</td></tr></table>>];
    bb26__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_82 = [move _83, move _86]<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_74 = Arguments::&lt;'_&gt;::new_v1(move _75, move _79)</td></tr></table>>];
    bb27__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = format(move _74)</td></tr></table>>];
    bb28__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_88)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>_72 = move _73<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_69 = &lt;String as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb29__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = solana_program::log::sol_log(move _68)</td></tr></table>>];
    bb30__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb31__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_89)<br/>_89 = _47<br/>_42 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _89)<br/>StorageDead(_89)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb33__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_90 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb34__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_41 as Continue).0: ())<br/>_40 = _94<br/>StorageDead(_94)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_99)<br/>_99 = _2<br/></td></tr><tr><td align="left">_97 = &lt;u128 as SafeMath&gt;::safe_add(move _98, move _99)</td></tr></table>>];
    bb35__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb36__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb38__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_100 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb39__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_96 as Continue).0: u128)<br/>_95 = _104<br/>StorageDead(_104)<br/>(((*_5).9: state::spot_market::InsuranceFund).2: u128) = move _95<br/>StorageDead(_95)<br/>StorageDead(_96)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;mut (*_3)<br/>StorageLive(_109)<br/>_109 = _2<br/>StorageLive(_110)<br/>_110 = &amp;(*_5)<br/></td></tr><tr><td align="left">_107 = InsuranceFundStake::increase_if_shares(move _108, move _109, move _110)</td></tr></table>>];
    bb40__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb41__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_95)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb43__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_111 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb44__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_106 as Continue).0: ())<br/>_105 = _115<br/>StorageDead(_115)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;(*_3)<br/>StorageLive(_120)<br/>_120 = &amp;(*_5)<br/></td></tr><tr><td align="left">_118 = InsuranceFundStake::checked_if_shares(move _119, move _120)</td></tr></table>>];
    bb45__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb46__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb48__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_121 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb49__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_117 as Continue).0: u128)<br/>_116 = _125<br/>StorageDead(_125)<br/>StorageDead(_117)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = ((*_5).42: u16)<br/>_127 = Eq(move _128, const _)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb50__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb51__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = _116<br/>StorageLive(_133)<br/>_133 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_134)<br/>_134 = _1<br/></td></tr><tr><td align="left">_131 = if_shares_to_vault_amount(move _132, move _133, move _134)</td></tr></table>>];
    bb53__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = ((*_5).42: u16)<br/>_140 = Eq(move _141, const _)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb54__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb55__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_135 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb56__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_130 as Continue).0: u64)<br/>_129 = _139<br/>StorageDead(_139)<br/>((*_4).10: u64) = move _129<br/>StorageDead(_129)<br/>StorageDead(_130)<br/>_126 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb58__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_129)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = _116<br/>StorageLive(_146)<br/>_146 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_147)<br/>_147 = _1<br/></td></tr><tr><td align="left">_144 = if_shares_to_vault_amount(move _145, move _146, move _147)</td></tr></table>>];
    bb60__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_126 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _144)</td></tr></table>>];
    bb62__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_148 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb63__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_143 as Continue).0: u64)<br/>_142 = _152<br/>StorageDead(_152)<br/>((*_4).23: u64) = move _142<br/>StorageDead(_142)<br/>StorageDead(_143)<br/>_126 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_143 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb65__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_142)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = _2<br/>StorageLive(_157)<br/>_157 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_158)<br/>_158 = _1<br/></td></tr><tr><td align="left">_155 = if_shares_to_vault_amount(move _156, move _157, move _158)</td></tr></table>>];
    bb68__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">_154 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _155)</td></tr></table>>];
    bb69__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_159 = discriminant(_154)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb70__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_154 as Continue).0: u64)<br/>_153 = _163<br/>StorageDead(_163)<br/>StorageDead(_154)<br/>StorageLive(_164)<br/>_164 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_169)<br/>_169 = _164<br/></td></tr><tr><td align="left">_167 = &lt;u128 as SafeMath&gt;::safe_sub(move _168, move _169)</td></tr></table>>];
    bb71__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_154 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_162)<br/>_162 = _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb72__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _167)</td></tr></table>>];
    bb74__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_170 = discriminant(_166)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb75__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_166 as Continue).0: u128)<br/>_165 = _174<br/>StorageDead(_174)<br/>StorageDead(_166)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = _6<br/>StorageLive(_190)<br/>_190 = _7<br/>StorageLive(_191)<br/>_191 = StakeAction::UnstakeTransfer<br/>StorageLive(_192)<br/>_192 = _153<br/>StorageLive(_193)<br/>_193 = ((*_5).42: u16)<br/>StorageLive(_194)<br/>_194 = _1<br/>StorageLive(_195)<br/>_195 = _20<br/>StorageLive(_196)<br/>_196 = _19<br/>StorageLive(_197)<br/>_197 = _18<br/>StorageLive(_198)<br/>_198 = _165<br/>StorageLive(_199)<br/>_199 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_200)<br/>_200 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>_188 = InsuranceFundStakeRecord { ts: move _189, user_authority: move _190, action: move _191, amount: move _192, market_index: move _193, insurance_vault_amount_before: move _194, if_shares_before: move _195, user_if_shares_before: move _196, total_if_shares_before: move _197, if_shares_after: move _198, user_if_shares_after: move _200, total_if_shares_after: move _199 }<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/></td></tr><tr><td align="left">_185 = &lt;InsuranceFundStakeRecord as anchor_lang::Event&gt;::data(move _186)</td></tr></table>>];
    bb76__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_166 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb77__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_184 = &amp;_185<br/>_183 = &amp;(*_184)<br/></td></tr><tr><td align="left">_182 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _183)</td></tr></table>>];
    bb79__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_181 = &amp;(*_182)<br/>StorageDead(_183)<br/>_180 = [move _181]<br/>StorageDead(_181)<br/>_179 = &amp;_180<br/>_178 = &amp;(*_179)<br/>_177 = move _178 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = solana_program::log::sol_log_data(move _177)</td></tr></table>>];
    bb80__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/></td></tr><tr><td align="left">drop(_185)</td></tr></table>>];
    bb81__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>_175 = const ()<br/>StorageDead(_175)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = _6<br/>StorageLive(_216)<br/>_216 = ((*_3).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_217)<br/>_217 = StakeAction::StakeTransfer<br/>StorageLive(_218)<br/>_218 = _153<br/>StorageLive(_219)<br/>_219 = ((*_5).42: u16)<br/>StorageLive(_220)<br/>_220 = _1<br/>StorageLive(_221)<br/>_221 = _30<br/>StorageLive(_222)<br/>_222 = _19<br/>StorageLive(_223)<br/>_223 = _18<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;(*_3)<br/>StorageLive(_228)<br/>_228 = &amp;(*_5)<br/></td></tr><tr><td align="left">_226 = InsuranceFundStake::checked_if_shares(move _227, move _228)</td></tr></table>>];
    bb82__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_225 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _226)</td></tr></table>>];
    bb83__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_229 = discriminant(_225)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb84__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_225 as Continue).0: u128)<br/>_224 = _233<br/>StorageDead(_233)<br/>StorageLive(_234)<br/>_234 = (((*_5).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_235)<br/>_235 = (((*_5).9: state::spot_market::InsuranceFund).2: u128)<br/>_214 = InsuranceFundStakeRecord { ts: move _215, user_authority: move _216, action: move _217, amount: move _218, market_index: move _219, insurance_vault_amount_before: move _220, if_shares_before: move _221, user_if_shares_before: move _222, total_if_shares_before: move _223, if_shares_after: move _224, user_if_shares_after: move _235, total_if_shares_after: move _234 }<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>_213 = &amp;_214<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_211 = &lt;InsuranceFundStakeRecord as anchor_lang::Event&gt;::data(move _212)</td></tr></table>>];
    bb85__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_225 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb86__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_225)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_210 = &amp;_211<br/>_209 = &amp;(*_210)<br/></td></tr><tr><td align="left">_208 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb88__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_207 = &amp;(*_208)<br/>StorageDead(_209)<br/>_206 = [move _207]<br/>StorageDead(_207)<br/>_205 = &amp;_206<br/>_204 = &amp;(*_205)<br/>_203 = move _204 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = solana_program::log::sol_log_data(move _203)</td></tr></table>>];
    bb89__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/></td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb90__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>_201 = const ()<br/>StorageDead(_201)<br/>StorageLive(_236)<br/>_236 = _153<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _236)<br/>StorageDead(_236)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_153)<br/>StorageDead(_116)<br/>StorageDead(_30)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left">return</td></tr></table>>];
    bb98__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb99__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_185)</td></tr></table>>];
    bb100__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb101__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb102__0_201 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_201 -> bb1__0_201 [label="return"];
    bb1__0_201 -> bb2__0_201 [label="return"];
    bb2__0_201 -> bb3__0_201 [label="0"];
    bb2__0_201 -> bb5__0_201 [label="1"];
    bb2__0_201 -> bb4__0_201 [label="otherwise"];
    bb3__0_201 -> bb7__0_201 [label="return"];
    bb5__0_201 -> bb6__0_201 [label="return"];
    bb6__0_201 -> bb97__0_201 [label=""];
    bb7__0_201 -> bb8__0_201 [label="return"];
    bb8__0_201 -> bb9__0_201 [label="0"];
    bb8__0_201 -> bb10__0_201 [label="1"];
    bb8__0_201 -> bb4__0_201 [label="otherwise"];
    bb9__0_201 -> bb12__0_201 [label="return"];
    bb10__0_201 -> bb11__0_201 [label="return"];
    bb11__0_201 -> bb96__0_201 [label=""];
    bb12__0_201 -> bb13__0_201 [label="return"];
    bb13__0_201 -> bb14__0_201 [label="0"];
    bb13__0_201 -> bb15__0_201 [label="1"];
    bb13__0_201 -> bb4__0_201 [label="otherwise"];
    bb14__0_201 -> bb18__0_201 [label="0"];
    bb14__0_201 -> bb17__0_201 [label="otherwise"];
    bb15__0_201 -> bb16__0_201 [label="return"];
    bb16__0_201 -> bb95__0_201 [label=""];
    bb17__0_201 -> bb32__0_201 [label=""];
    bb18__0_201 -> bb19__0_201 [label="return"];
    bb19__0_201 -> bb20__0_201 [label="return"];
    bb20__0_201 -> bb21__0_201 [label="return"];
    bb21__0_201 -> bb22__0_201 [label="return"];
    bb21__0_201 -> bb101__0_201 [label="unwind"];
    bb22__0_201 -> bb23__0_201 [label="return"];
    bb22__0_201 -> bb101__0_201 [label="unwind"];
    bb23__0_201 -> bb24__0_201 [label="return"];
    bb23__0_201 -> bb102__0_201 [label="unwind"];
    bb24__0_201 -> bb25__0_201 [label="return"];
    bb25__0_201 -> bb26__0_201 [label="return"];
    bb26__0_201 -> bb27__0_201 [label="return"];
    bb27__0_201 -> bb28__0_201 [label="return"];
    bb28__0_201 -> bb29__0_201 [label="return"];
    bb28__0_201 -> bb100__0_201 [label="unwind"];
    bb29__0_201 -> bb30__0_201 [label="return"];
    bb29__0_201 -> bb100__0_201 [label="unwind"];
    bb30__0_201 -> bb31__0_201 [label="return"];
    bb30__0_201 -> bb102__0_201 [label="unwind"];
    bb31__0_201 -> bb32__0_201 [label=""];
    bb32__0_201 -> bb33__0_201 [label="return"];
    bb33__0_201 -> bb34__0_201 [label="0"];
    bb33__0_201 -> bb35__0_201 [label="1"];
    bb33__0_201 -> bb4__0_201 [label="otherwise"];
    bb34__0_201 -> bb37__0_201 [label="return"];
    bb35__0_201 -> bb36__0_201 [label="return"];
    bb36__0_201 -> bb95__0_201 [label=""];
    bb37__0_201 -> bb38__0_201 [label="return"];
    bb38__0_201 -> bb39__0_201 [label="0"];
    bb38__0_201 -> bb40__0_201 [label="1"];
    bb38__0_201 -> bb4__0_201 [label="otherwise"];
    bb39__0_201 -> bb42__0_201 [label="return"];
    bb40__0_201 -> bb41__0_201 [label="return"];
    bb41__0_201 -> bb95__0_201 [label=""];
    bb42__0_201 -> bb43__0_201 [label="return"];
    bb43__0_201 -> bb44__0_201 [label="0"];
    bb43__0_201 -> bb45__0_201 [label="1"];
    bb43__0_201 -> bb4__0_201 [label="otherwise"];
    bb44__0_201 -> bb47__0_201 [label="return"];
    bb45__0_201 -> bb46__0_201 [label="return"];
    bb46__0_201 -> bb95__0_201 [label=""];
    bb47__0_201 -> bb48__0_201 [label="return"];
    bb48__0_201 -> bb49__0_201 [label="0"];
    bb48__0_201 -> bb50__0_201 [label="1"];
    bb48__0_201 -> bb4__0_201 [label="otherwise"];
    bb49__0_201 -> bb53__0_201 [label="0"];
    bb49__0_201 -> bb52__0_201 [label="otherwise"];
    bb50__0_201 -> bb51__0_201 [label="return"];
    bb51__0_201 -> bb94__0_201 [label=""];
    bb52__0_201 -> bb54__0_201 [label="return"];
    bb53__0_201 -> bb60__0_201 [label="0"];
    bb53__0_201 -> bb59__0_201 [label="otherwise"];
    bb54__0_201 -> bb55__0_201 [label="return"];
    bb55__0_201 -> bb56__0_201 [label="0"];
    bb55__0_201 -> bb57__0_201 [label="1"];
    bb55__0_201 -> bb4__0_201 [label="otherwise"];
    bb56__0_201 -> bb67__0_201 [label=""];
    bb57__0_201 -> bb58__0_201 [label="return"];
    bb58__0_201 -> bb93__0_201 [label=""];
    bb59__0_201 -> bb61__0_201 [label="return"];
    bb60__0_201 -> bb66__0_201 [label=""];
    bb61__0_201 -> bb62__0_201 [label="return"];
    bb62__0_201 -> bb63__0_201 [label="0"];
    bb62__0_201 -> bb64__0_201 [label="1"];
    bb62__0_201 -> bb4__0_201 [label="otherwise"];
    bb63__0_201 -> bb66__0_201 [label=""];
    bb64__0_201 -> bb65__0_201 [label="return"];
    bb65__0_201 -> bb93__0_201 [label=""];
    bb66__0_201 -> bb67__0_201 [label=""];
    bb67__0_201 -> bb68__0_201 [label="return"];
    bb68__0_201 -> bb69__0_201 [label="return"];
    bb69__0_201 -> bb70__0_201 [label="0"];
    bb69__0_201 -> bb71__0_201 [label="1"];
    bb69__0_201 -> bb4__0_201 [label="otherwise"];
    bb70__0_201 -> bb73__0_201 [label="return"];
    bb71__0_201 -> bb72__0_201 [label="return"];
    bb72__0_201 -> bb92__0_201 [label=""];
    bb73__0_201 -> bb74__0_201 [label="return"];
    bb74__0_201 -> bb75__0_201 [label="0"];
    bb74__0_201 -> bb76__0_201 [label="1"];
    bb74__0_201 -> bb4__0_201 [label="otherwise"];
    bb75__0_201 -> bb78__0_201 [label="return"];
    bb76__0_201 -> bb77__0_201 [label="return"];
    bb77__0_201 -> bb91__0_201 [label=""];
    bb78__0_201 -> bb79__0_201 [label="return"];
    bb78__0_201 -> bb99__0_201 [label="unwind"];
    bb79__0_201 -> bb80__0_201 [label="return"];
    bb79__0_201 -> bb99__0_201 [label="unwind"];
    bb80__0_201 -> bb81__0_201 [label="return"];
    bb80__0_201 -> bb102__0_201 [label="unwind"];
    bb81__0_201 -> bb82__0_201 [label="return"];
    bb82__0_201 -> bb83__0_201 [label="return"];
    bb83__0_201 -> bb84__0_201 [label="0"];
    bb83__0_201 -> bb85__0_201 [label="1"];
    bb83__0_201 -> bb4__0_201 [label="otherwise"];
    bb84__0_201 -> bb87__0_201 [label="return"];
    bb85__0_201 -> bb86__0_201 [label="return"];
    bb86__0_201 -> bb91__0_201 [label=""];
    bb87__0_201 -> bb88__0_201 [label="return"];
    bb87__0_201 -> bb98__0_201 [label="unwind"];
    bb88__0_201 -> bb89__0_201 [label="return"];
    bb88__0_201 -> bb98__0_201 [label="unwind"];
    bb89__0_201 -> bb90__0_201 [label="return"];
    bb89__0_201 -> bb102__0_201 [label="unwind"];
    bb90__0_201 -> bb97__0_201 [label=""];
    bb91__0_201 -> bb92__0_201 [label=""];
    bb92__0_201 -> bb94__0_201 [label=""];
    bb93__0_201 -> bb94__0_201 [label=""];
    bb94__0_201 -> bb95__0_201 [label=""];
    bb95__0_201 -> bb96__0_201 [label=""];
    bb96__0_201 -> bb97__0_201 [label=""];
    bb98__0_201 -> bb102__0_201 [label="return"];
    bb99__0_201 -> bb102__0_201 [label="return"];
    bb100__0_201 -> bb102__0_201 [label="return"];
    bb101__0_201 -> bb102__0_201 [label="return"];
}
