digraph Mir_0_2461 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_perp_position_value_and_pnl(_1: &amp;ReErased state::user::PerpPosition, _2: &amp;ReErased state::perp_market::PerpMarket, _3: &amp;ReErased state::oracle::OraclePriceData, _4: &amp;ReErased state::oracle::StrictOraclePrice, _5: math::margin::MarginRequirementType, _6: u32, _7: bool, _8: bool) -&gt; std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt;<br align="left"/>let _9: i64;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _12: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _13: state::perp_market::MarketStatus;<br align="left"/>let _14: i64;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _16: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _17: i128;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: i64;<br align="left"/>let _26: u128;<br align="left"/>let _27: i128;<br align="left"/>let mut _28: (u128, i128);<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, i128)&gt;;<br align="left"/>let mut _30: std::result::Result&lt;(u128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _31: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _32: &amp;ReErased &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _33: i64;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: (u128, i128);<br align="left"/>let _39: i128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _42: i128;<br align="left"/>let mut _43: i128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _46: i64;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: i128;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: i128;<br align="left"/>let _57: i128;<br align="left"/>let _58: u128;<br align="left"/>let mut _59: (i128, u128);<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, u128)&gt;;<br align="left"/>let mut _61: std::result::Result&lt;(i128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _62: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _63: i64;<br align="left"/>let mut _64: state::perp_market::ContractType;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: (i128, u128);<br align="left"/>let _70: u128;<br align="left"/>let mut _71: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _72: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _73: u128;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _75: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: u128;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _79: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _80: i64;<br align="left"/>let mut _81: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: u128;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: u128;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: u128;<br align="left"/>let mut _97: u128;<br align="left"/>let mut _98: bool;<br align="left"/>let mut _99: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _100: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _101: state::perp_market::MarketStatus;<br align="left"/>let _102: u32;<br align="left"/>let mut _103: u32;<br align="left"/>let mut _104: u32;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _106: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _107: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _108: u128;<br align="left"/>let mut _109: i128;<br align="left"/>let mut _110: math::margin::MarginRequirementType;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u32;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _118: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _119: u128;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _121: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: u128;<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _125: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _126: u32;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _131: u128;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: u128;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: u128;<br align="left"/>let mut _142: u128;<br align="left"/>let mut _143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _144: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _145: u128;<br align="left"/>let mut _146: u128;<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _148: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _149: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: u128;<br align="left"/>let mut _155: isize;<br align="left"/>let _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _157: !;<br align="left"/>let mut _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _159: u128;<br align="left"/>let _160: u32;<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _162: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _163: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _164: i128;<br align="left"/>let mut _165: math::margin::MarginRequirementType;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: u32;<br align="left"/>let _171: i64;<br align="left"/>let mut _172: bool;<br align="left"/>let mut _173: i128;<br align="left"/>let mut _174: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _175: bool;<br align="left"/>let mut _176: i128;<br align="left"/>let mut _177: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _178: i128;<br align="left"/>let _179: ();<br align="left"/>let mut _180: bool;<br align="left"/>let mut _181: u32;<br align="left"/>let mut _182: i128;<br align="left"/>let mut _183: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _184: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _185: i128;<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _187: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _188: i128;<br align="left"/>let mut _189: i128;<br align="left"/>let mut _190: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _191: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _192: u32;<br align="left"/>let mut _193: isize;<br align="left"/>let _194: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _195: !;<br align="left"/>let mut _196: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _197: i128;<br align="left"/>let mut _198: isize;<br align="left"/>let _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _200: !;<br align="left"/>let mut _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _202: i128;<br align="left"/>let mut _203: i128;<br align="left"/>let mut _204: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _205: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: i128;<br align="left"/>let mut _211: isize;<br align="left"/>let _212: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _213: !;<br align="left"/>let mut _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _215: i128;<br align="left"/>let _216: ();<br align="left"/>let mut _217: bool;<br align="left"/>let mut _218: i64;<br align="left"/>let mut _219: i128;<br align="left"/>let mut _220: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _221: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _222: i128;<br align="left"/>let mut _223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _224: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _225: i128;<br align="left"/>let mut _226: i128;<br align="left"/>let mut _227: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _228: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _229: i64;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _234: i128;<br align="left"/>let mut _235: isize;<br align="left"/>let _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _237: !;<br align="left"/>let mut _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _239: i128;<br align="left"/>let mut _240: isize;<br align="left"/>let _241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _242: !;<br align="left"/>let mut _243: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _244: i128;<br align="left"/>let _245: ();<br align="left"/>let mut _246: bool;<br align="left"/>let mut _247: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _248: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _249: math::margin::MarginRequirementType;<br align="left"/>let mut _250: i128;<br align="left"/>let mut _251: i128;<br align="left"/>let _252: u128;<br align="left"/>let mut _253: bool;<br align="left"/>let mut _254: bool;<br align="left"/>let mut _255: i128;<br align="left"/>let _256: u128;<br align="left"/>let mut _257: i128;<br align="left"/>let mut _258: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _259: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _260: u128;<br align="left"/>let mut _261: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _262: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _263: u128;<br align="left"/>let mut _264: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _265: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _266: u128;<br align="left"/>let mut _267: u128;<br align="left"/>let mut _268: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _269: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _270: u64;<br align="left"/>let mut _271: i64;<br align="left"/>let mut _272: isize;<br align="left"/>let _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _274: !;<br align="left"/>let mut _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _276: u128;<br align="left"/>let mut _277: isize;<br align="left"/>let _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _279: !;<br align="left"/>let mut _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _281: u128;<br align="left"/>let mut _282: u128;<br align="left"/>let mut _283: isize;<br align="left"/>let _284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _285: !;<br align="left"/>let mut _286: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _287: u128;<br align="left"/>let mut _288: u128;<br align="left"/>let mut _289: isize;<br align="left"/>let _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _291: !;<br align="left"/>let mut _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _293: u128;<br align="left"/>let mut _294: (u128, i128, u128, u128, u128);<br align="left"/>let mut _295: u128;<br align="left"/>let mut _296: i128;<br align="left"/>let mut _297: u128;<br align="left"/>let mut _298: u128;<br align="left"/>let mut _299: u128;<br align="left"/>let mut _300: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _301: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _302: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _303: &amp;ReErased state::user::PerpPosition;<br align="left"/>debug market_position =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug oracle_price_data =&gt; _3;<br align="left"/>debug strict_quote_price =&gt; _4;<br align="left"/>debug margin_requirement_type =&gt; _5;<br align="left"/>debug user_custom_margin_ratio =&gt; _6;<br align="left"/>debug user_high_leverage_mode =&gt; _7;<br align="left"/>debug track_open_order_fraction =&gt; _8;<br align="left"/>debug valuation_price =&gt; _9;<br align="left"/>debug unrealized_funding =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug base_asset_value =&gt; _26;<br align="left"/>debug unrealized_pnl =&gt; _27;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug total_unrealized_pnl =&gt; _39;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug worst_case_base_asset_amount =&gt; _57;<br align="left"/>debug worse_case_liability_value =&gt; _58;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug worse_case_liability_value =&gt; _70;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug margin_requirement =&gt; _97;<br align="left"/>debug margin_ratio =&gt; _102;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug residual =&gt; _156;<br align="left"/>debug val =&gt; _159;<br align="left"/>debug unrealized_asset_weight =&gt; _160;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug quote_price =&gt; _171;<br align="left"/>debug weighted_unrealized_pnl =&gt; _178;<br align="left"/>debug residual =&gt; _194;<br align="left"/>debug val =&gt; _197;<br align="left"/>debug residual =&gt; _199;<br align="left"/>debug val =&gt; _202;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug residual =&gt; _212;<br align="left"/>debug val =&gt; _215;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>debug residual =&gt; _236;<br align="left"/>debug val =&gt; _239;<br align="left"/>debug residual =&gt; _241;<br align="left"/>debug val =&gt; _244;<br align="left"/>debug open_order_margin_requirement =&gt; _252;<br align="left"/>debug worst_case_base_asset_amount =&gt; _256;<br align="left"/>debug residual =&gt; _273;<br align="left"/>debug val =&gt; _276;<br align="left"/>debug residual =&gt; _278;<br align="left"/>debug val =&gt; _281;<br align="left"/>debug residual =&gt; _284;<br align="left"/>debug val =&gt; _287;<br align="left"/>debug residual =&gt; _290;<br align="left"/>debug val =&gt; _293;<br align="left"/>>;
    bb0__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_2).22: state::perp_market::MarketStatus)<br/>StorageLive(_12)<br/>_302 = const _<br/>_12 = &amp;(*_302)<br/></td></tr><tr><td align="left">_10 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _11, move _12)</td></tr></table>>];
    bb1__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb2__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_9 = ((*_2).7: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_9 = ((*_3).0: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_1).1: i64)<br/>_18 = Gt(move _19, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb5__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_17 = (((*_2).1: state::perp_market::AMM).34: i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_17 = (((*_2).1: state::perp_market::AMM).35: i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>_20 = &amp;(*_1)<br/></td></tr><tr><td align="left">_16 = calculate_funding_payment(move _17, move _20)</td></tr></table>>];
    bb8__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_21 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_15 as Continue).0: i64)<br/>_14 = _25<br/>StorageDead(_25)<br/>StorageDead(_15)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_1<br/>_303 = deref_copy (*_32)<br/>_31 = &amp;(*_303)<br/>StorageLive(_33)<br/>_33 = _9<br/></td></tr><tr><td align="left">_30 = calculate_base_asset_value_and_pnl_with_oracle_price(move _31, move _33)</td></tr></table>>];
    bb11__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb13__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb15__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb16__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_29 as Continue).0: (u128, i128))<br/>_28 = _38<br/>StorageDead(_38)<br/>StorageLive(_26)<br/>_26 = (_28.0: u128)<br/>StorageLive(_27)<br/>_27 = (_28.1: i128)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _27<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _14<br/></td></tr><tr><td align="left">_45 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _46)</td></tr></table>>];
    bb17__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb18__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb20__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_47 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb21__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_44 as Continue).0: i128)<br/>_43 = _51<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_41 = &lt;i128 as SafeMath&gt;::safe_add(move _42, move _43)</td></tr></table>>];
    bb22__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb23__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb25__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_52 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb26__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_40 as Continue).0: i128)<br/>_39 = _56<br/>StorageDead(_56)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;(*_1)<br/>StorageLive(_63)<br/>_63 = ((*_3).0: i64)<br/>StorageLive(_64)<br/>_64 = ((*_2).23: state::perp_market::ContractType)<br/></td></tr><tr><td align="left">_61 = PerpPosition::worst_case_liability_value(move _62, move _63, move _64)</td></tr></table>>];
    bb27__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb28__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb30__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_65 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb31__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_60 as Continue).0: (i128, u128))<br/>_59 = _69<br/>StorageDead(_69)<br/>StorageLive(_57)<br/>_57 = (_59.0: i128)<br/>StorageLive(_58)<br/>_58 = (_59.1: u128)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = _58<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;(*_4)<br/></td></tr><tr><td align="left">_80 = StrictOraclePrice::max(move _81)</td></tr></table>>];
    bb32__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb33__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _80)</td></tr></table>>];
    bb35__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb36__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_82 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb37__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_78 as Continue).0: u128)<br/>_77 = _86<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_75 = &lt;u128 as SafeMath&gt;::safe_mul(move _76, move _77)</td></tr></table>>];
    bb38__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb39__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb41__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_87 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb42__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_74 as Continue).0: u128)<br/>_73 = _91<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_72 = &lt;u128 as SafeMath&gt;::safe_div(move _73, const _)</td></tr></table>>];
    bb43__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb44__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _72)</td></tr></table>>];
    bb46__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_92 = discriminant(_71)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb47__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_71 as Continue).0: u128)<br/>_70 = _96<br/>StorageDead(_96)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;((*_2).22: state::perp_market::MarketStatus)<br/>StorageLive(_100)<br/>_301 = const _<br/>_100 = &amp;(*_301)<br/></td></tr><tr><td align="left">_98 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _99, move _100)</td></tr></table>>];
    bb48__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_71 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb49__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb51__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>_97 = const 0_u128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = _6<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;(*_2)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = _57<br/></td></tr><tr><td align="left">_108 = core::num::&lt;impl i128&gt;::unsigned_abs(move _109)</td></tr></table>>];
    bb53__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_110)<br/>_110 = _5<br/>StorageLive(_111)<br/>_111 = _7<br/></td></tr><tr><td align="left">_106 = PerpMarket::get_margin_ratio(move _107, move _108, move _110, move _111)</td></tr></table>>];
    bb54__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb55__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_112 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb56__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_105 as Continue).0: u32)<br/>_104 = _116<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_102 = &lt;u32 as Ord&gt;::max(move _103, move _104)</td></tr></table>>];
    bb57__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb58__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_105)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = _70<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = _102<br/></td></tr><tr><td align="left">_125 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _126)</td></tr></table>>];
    bb60__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb61__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_127 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb62__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_124 as Continue).0: u128)<br/>_123 = _131<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_121 = &lt;u128 as SafeMath&gt;::safe_mul(move _122, move _123)</td></tr></table>>];
    bb63__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_130)<br/>_130 = _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb64__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb66__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_132 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb67__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_120 as Continue).0: u128)<br/>_119 = _136<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_118 = &lt;u128 as SafeMath&gt;::safe_div(move _119, const _)</td></tr></table>>];
    bb68__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb69__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb71__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_137 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb72__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_117 as Continue).0: u128)<br/>_97 = _141<br/>StorageDead(_141)<br/>StorageDead(_102)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb74__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = _97<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;(*_1)<br/></td></tr><tr><td align="left">_148 = PerpPosition::margin_requirement_for_open_orders(move _149)</td></tr></table>>];
    bb76__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb77__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_150 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb78__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_147 as Continue).0: u128)<br/>_146 = _154<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_144 = &lt;u128 as SafeMath&gt;::safe_add(move _145, move _146)</td></tr></table>>];
    bb79__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb80__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _144)</td></tr></table>>];
    bb82__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_155 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb83__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_143 as Continue).0: u128)<br/>_142 = _159<br/>StorageDead(_159)<br/>_97 = move _142<br/>StorageDead(_142)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;(*_2)<br/>StorageLive(_164)<br/>_164 = _39<br/>StorageLive(_165)<br/>_165 = _5<br/></td></tr><tr><td align="left">_162 = PerpMarket::get_unrealized_asset_weight(move _163, move _164, move _165)</td></tr></table>>];
    bb84__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_143 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_158)<br/>_158 = _156<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _158)</td></tr></table>>];
    bb85__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb87__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_166 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb88__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_161 as Continue).0: u32)<br/>_160 = _170<br/>StorageDead(_170)<br/>StorageDead(_161)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _39<br/>_172 = Gt(move _173, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb89__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb90__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_174)<br/>_174 = &amp;(*_4)<br/></td></tr><tr><td align="left">_171 = StrictOraclePrice::min(move _174)</td></tr></table>>];
    bb92__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = _39<br/>_175 = Lt(move _176, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb93__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageLive(_177)<br/>_177 = &amp;(*_4)<br/></td></tr><tr><td align="left">_171 = StrictOraclePrice::max(move _177)</td></tr></table>>];
    bb95__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>_171 = ((*_4).0: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageLive(_178)<br/>_178 = _39<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = _160<br/>_180 = Ne(move _181, const _)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb99__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = _178<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = _160<br/></td></tr><tr><td align="left">_191 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _192)</td></tr></table>>];
    bb100__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/></td></tr><tr><td align="left">_190 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _191)</td></tr></table>>];
    bb101__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_193 = discriminant(_190)<br/></td></tr><tr><td align="left">switchInt(move _193)</td></tr></table>>];
    bb102__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_190 as Continue).0: i128)<br/>_189 = _197<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_187 = &lt;i128 as SafeMath&gt;::safe_mul(move _188, move _189)</td></tr></table>>];
    bb103__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = ((_190 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_196)<br/>_196 = _194<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _196)</td></tr></table>>];
    bb104__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb106__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_198 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _198)</td></tr></table>>];
    bb107__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = ((_186 as Continue).0: i128)<br/>_185 = _202<br/>StorageDead(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/></td></tr><tr><td align="left">_205 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb108__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_199)<br/>_199 = ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_201)<br/>_201 = _199<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _201)</td></tr></table>>];
    bb109__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left">_204 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _205)</td></tr></table>>];
    bb111__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>_206 = discriminant(_204)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb112__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_204 as Continue).0: i128)<br/>_203 = _210<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_184 = &lt;i128 as SafeMath&gt;::safe_div(move _185, move _203)</td></tr></table>>];
    bb113__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_204 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb114__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_183 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _184)</td></tr></table>>];
    bb116__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>_211 = discriminant(_183)<br/></td></tr><tr><td align="left">switchInt(move _211)</td></tr></table>>];
    bb117__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_183 as Continue).0: i128)<br/>_182 = _215<br/>StorageDead(_215)<br/>_178 = move _182<br/>StorageDead(_182)<br/>StorageDead(_204)<br/>StorageDead(_190)<br/>StorageDead(_186)<br/>StorageDead(_183)<br/>_179 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = ((_183 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_214)<br/>_214 = _212<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _214)</td></tr></table>>];
    bb119__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_179 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_179)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = _171<br/>_217 = Ne(move _218, const _)<br/></td></tr><tr><td align="left">switchInt(move _217)</td></tr></table>>];
    bb122__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = _178<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_229 = _171<br/></td></tr><tr><td align="left">_228 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _229)</td></tr></table>>];
    bb123__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">_227 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _228)</td></tr></table>>];
    bb124__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>_230 = discriminant(_227)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb125__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_227 as Continue).0: i128)<br/>_226 = _234<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">_224 = &lt;i128 as SafeMath&gt;::safe_mul(move _225, move _226)</td></tr></table>>];
    bb126__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_227 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_233)<br/>_233 = _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb127__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _224)</td></tr></table>>];
    bb129__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_235 = discriminant(_223)<br/></td></tr><tr><td align="left">switchInt(move _235)</td></tr></table>>];
    bb130__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = ((_223 as Continue).0: i128)<br/>_222 = _239<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_221 = &lt;i128 as SafeMath&gt;::safe_div(move _222, const _)</td></tr></table>>];
    bb131__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_238)<br/>_238 = _236<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _238)</td></tr></table>>];
    bb132__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _221)</td></tr></table>>];
    bb134__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_240 = discriminant(_220)<br/></td></tr><tr><td align="left">switchInt(move _240)</td></tr></table>>];
    bb135__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_220 as Continue).0: i128)<br/>_219 = _244<br/>StorageDead(_244)<br/>_178 = move _219<br/>StorageDead(_219)<br/>StorageDead(_227)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>_216 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_241 = ((_220 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_243)<br/>_243 = _241<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _243)</td></tr></table>>];
    bb137__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_216 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_216)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_5<br/>StorageLive(_248)<br/>_300 = const _<br/>_248 = &amp;(*_300)<br/></td></tr><tr><td align="left">_246 = &lt;math::margin::MarginRequirementType as PartialEq&gt;::eq(move _247, move _248)</td></tr></table>>];
    bb140__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left">switchInt(move _246)</td></tr></table>>];
    bb141__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_247)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = _178<br/></td></tr><tr><td align="left">_250 = &lt;i128 as Ord&gt;::min(move _251, const _)</td></tr></table>>];
    bb142__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_178 = move _250<br/>StorageDead(_250)<br/>_245 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_247)<br/>_245 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_245)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = _8<br/></td></tr><tr><td align="left">switchInt(move _253)</td></tr></table>>];
    bb145__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = _57<br/>_254 = Ne(move _255, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb146__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = _57<br/></td></tr><tr><td align="left">_256 = core::num::&lt;impl i128&gt;::unsigned_abs(move _257)</td></tr></table>>];
    bb147__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = _256<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = ((*_1).1: i64)<br/></td></tr><tr><td align="left">_270 = core::num::&lt;impl i64&gt;::unsigned_abs(move _271)</td></tr></table>>];
    bb148__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _270)</td></tr></table>>];
    bb149__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/></td></tr><tr><td align="left">_268 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _269)</td></tr></table>>];
    bb150__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_272 = discriminant(_268)<br/></td></tr><tr><td align="left">switchInt(move _272)</td></tr></table>>];
    bb151__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_268 as Continue).0: u128)<br/>_267 = _276<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_265 = &lt;u128 as SafeMath&gt;::safe_sub(move _266, move _267)</td></tr></table>>];
    bb152__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_268 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_275)<br/>_275 = _273<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _275)</td></tr></table>>];
    bb153__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_273)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_264 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _265)</td></tr></table>>];
    bb155__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_277 = discriminant(_264)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb156__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_264 as Continue).0: u128)<br/>_263 = _281<br/>StorageDead(_281)<br/>StorageLive(_282)<br/>_282 = _97<br/></td></tr><tr><td align="left">_262 = &lt;u128 as SafeMath&gt;::safe_mul(move _263, move _282)</td></tr></table>>];
    bb157__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_264 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_280)<br/>_280 = _278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _280)</td></tr></table>>];
    bb158__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_263)<br/></td></tr><tr><td align="left">_261 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _262)</td></tr></table>>];
    bb160__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>_283 = discriminant(_261)<br/></td></tr><tr><td align="left">switchInt(move _283)</td></tr></table>>];
    bb161__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = ((_261 as Continue).0: u128)<br/>_260 = _287<br/>StorageDead(_287)<br/>StorageLive(_288)<br/>_288 = _256<br/></td></tr><tr><td align="left">_259 = &lt;u128 as SafeMath&gt;::safe_div(move _260, move _288)</td></tr></table>>];
    bb162__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = ((_261 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_286)<br/>_286 = _284<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _286)</td></tr></table>>];
    bb163__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_258 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _259)</td></tr></table>>];
    bb165__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>_289 = discriminant(_258)<br/></td></tr><tr><td align="left">switchInt(move _289)</td></tr></table>>];
    bb166__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = ((_258 as Continue).0: u128)<br/>_252 = _293<br/>StorageDead(_293)<br/>StorageDead(_256)<br/>StorageDead(_268)<br/>StorageDead(_264)<br/>StorageDead(_261)<br/>StorageDead(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_290)<br/>_290 = ((_258 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_292)<br/>_292 = _290<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _292)</td></tr></table>>];
    bb168__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">_252 = const 0_u128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = _97<br/>StorageLive(_296)<br/>_296 = _178<br/>StorageLive(_297)<br/>_297 = _70<br/>StorageLive(_298)<br/>_298 = _252<br/>StorageLive(_299)<br/>_299 = _26<br/>_294 = (move _295, move _296, move _297, move _298, move _299)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageDead(_295)<br/>_0 = std::result::Result::&lt;(u128, i128, u128, u128, u128), error::ErrorCode&gt;::Ok(move _294)<br/>StorageDead(_294)<br/>StorageDead(_252)<br/>StorageDead(_178)<br/>StorageDead(_171)<br/>StorageDead(_160)<br/>StorageDead(_97)<br/>StorageDead(_70)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_39)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_268)<br/>StorageDead(_264)<br/>StorageDead(_261)<br/>StorageDead(_258)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_227)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_186)<br/>StorageDead(_183)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_2461 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2461 -> bb1__0_2461 [label="return"];
    bb1__0_2461 -> bb3__0_2461 [label="0"];
    bb1__0_2461 -> bb2__0_2461 [label="otherwise"];
    bb2__0_2461 -> bb4__0_2461 [label=""];
    bb3__0_2461 -> bb4__0_2461 [label=""];
    bb4__0_2461 -> bb6__0_2461 [label="0"];
    bb4__0_2461 -> bb5__0_2461 [label="otherwise"];
    bb5__0_2461 -> bb7__0_2461 [label=""];
    bb6__0_2461 -> bb7__0_2461 [label=""];
    bb7__0_2461 -> bb8__0_2461 [label="return"];
    bb8__0_2461 -> bb9__0_2461 [label="return"];
    bb9__0_2461 -> bb10__0_2461 [label="0"];
    bb9__0_2461 -> bb12__0_2461 [label="1"];
    bb9__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb10__0_2461 -> bb14__0_2461 [label="return"];
    bb12__0_2461 -> bb13__0_2461 [label="return"];
    bb13__0_2461 -> bb192__0_2461 [label=""];
    bb14__0_2461 -> bb15__0_2461 [label="return"];
    bb15__0_2461 -> bb16__0_2461 [label="0"];
    bb15__0_2461 -> bb17__0_2461 [label="1"];
    bb15__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb16__0_2461 -> bb19__0_2461 [label="return"];
    bb17__0_2461 -> bb18__0_2461 [label="return"];
    bb18__0_2461 -> bb192__0_2461 [label=""];
    bb19__0_2461 -> bb20__0_2461 [label="return"];
    bb20__0_2461 -> bb21__0_2461 [label="0"];
    bb20__0_2461 -> bb22__0_2461 [label="1"];
    bb20__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb21__0_2461 -> bb24__0_2461 [label="return"];
    bb22__0_2461 -> bb23__0_2461 [label="return"];
    bb23__0_2461 -> bb190__0_2461 [label=""];
    bb24__0_2461 -> bb25__0_2461 [label="return"];
    bb25__0_2461 -> bb26__0_2461 [label="0"];
    bb25__0_2461 -> bb27__0_2461 [label="1"];
    bb25__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb26__0_2461 -> bb29__0_2461 [label="return"];
    bb27__0_2461 -> bb28__0_2461 [label="return"];
    bb28__0_2461 -> bb190__0_2461 [label=""];
    bb29__0_2461 -> bb30__0_2461 [label="return"];
    bb30__0_2461 -> bb31__0_2461 [label="0"];
    bb30__0_2461 -> bb32__0_2461 [label="1"];
    bb30__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb31__0_2461 -> bb34__0_2461 [label="return"];
    bb32__0_2461 -> bb33__0_2461 [label="return"];
    bb33__0_2461 -> bb191__0_2461 [label=""];
    bb34__0_2461 -> bb35__0_2461 [label="return"];
    bb35__0_2461 -> bb36__0_2461 [label="return"];
    bb36__0_2461 -> bb37__0_2461 [label="0"];
    bb36__0_2461 -> bb38__0_2461 [label="1"];
    bb36__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb37__0_2461 -> bb40__0_2461 [label="return"];
    bb38__0_2461 -> bb39__0_2461 [label="return"];
    bb39__0_2461 -> bb187__0_2461 [label=""];
    bb40__0_2461 -> bb41__0_2461 [label="return"];
    bb41__0_2461 -> bb42__0_2461 [label="0"];
    bb41__0_2461 -> bb43__0_2461 [label="1"];
    bb41__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb42__0_2461 -> bb45__0_2461 [label="return"];
    bb43__0_2461 -> bb44__0_2461 [label="return"];
    bb44__0_2461 -> bb187__0_2461 [label=""];
    bb45__0_2461 -> bb46__0_2461 [label="return"];
    bb46__0_2461 -> bb47__0_2461 [label="0"];
    bb46__0_2461 -> bb48__0_2461 [label="1"];
    bb46__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb47__0_2461 -> bb50__0_2461 [label="return"];
    bb48__0_2461 -> bb49__0_2461 [label="return"];
    bb49__0_2461 -> bb188__0_2461 [label=""];
    bb50__0_2461 -> bb52__0_2461 [label="0"];
    bb50__0_2461 -> bb51__0_2461 [label="otherwise"];
    bb51__0_2461 -> bb75__0_2461 [label=""];
    bb52__0_2461 -> bb53__0_2461 [label="return"];
    bb53__0_2461 -> bb54__0_2461 [label="return"];
    bb54__0_2461 -> bb55__0_2461 [label="return"];
    bb55__0_2461 -> bb56__0_2461 [label="0"];
    bb55__0_2461 -> bb57__0_2461 [label="1"];
    bb55__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb56__0_2461 -> bb59__0_2461 [label="return"];
    bb57__0_2461 -> bb58__0_2461 [label="return"];
    bb58__0_2461 -> bb185__0_2461 [label=""];
    bb59__0_2461 -> bb60__0_2461 [label="return"];
    bb60__0_2461 -> bb61__0_2461 [label="return"];
    bb61__0_2461 -> bb62__0_2461 [label="0"];
    bb61__0_2461 -> bb63__0_2461 [label="1"];
    bb61__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb62__0_2461 -> bb65__0_2461 [label="return"];
    bb63__0_2461 -> bb64__0_2461 [label="return"];
    bb64__0_2461 -> bb183__0_2461 [label=""];
    bb65__0_2461 -> bb66__0_2461 [label="return"];
    bb66__0_2461 -> bb67__0_2461 [label="0"];
    bb66__0_2461 -> bb68__0_2461 [label="1"];
    bb66__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb67__0_2461 -> bb70__0_2461 [label="return"];
    bb68__0_2461 -> bb69__0_2461 [label="return"];
    bb69__0_2461 -> bb183__0_2461 [label=""];
    bb70__0_2461 -> bb71__0_2461 [label="return"];
    bb71__0_2461 -> bb72__0_2461 [label="0"];
    bb71__0_2461 -> bb73__0_2461 [label="1"];
    bb71__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb72__0_2461 -> bb75__0_2461 [label=""];
    bb73__0_2461 -> bb74__0_2461 [label="return"];
    bb74__0_2461 -> bb184__0_2461 [label=""];
    bb75__0_2461 -> bb76__0_2461 [label="return"];
    bb76__0_2461 -> bb77__0_2461 [label="return"];
    bb77__0_2461 -> bb78__0_2461 [label="0"];
    bb77__0_2461 -> bb79__0_2461 [label="1"];
    bb77__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb78__0_2461 -> bb81__0_2461 [label="return"];
    bb79__0_2461 -> bb80__0_2461 [label="return"];
    bb80__0_2461 -> bb182__0_2461 [label=""];
    bb81__0_2461 -> bb82__0_2461 [label="return"];
    bb82__0_2461 -> bb83__0_2461 [label="0"];
    bb82__0_2461 -> bb84__0_2461 [label="1"];
    bb82__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb83__0_2461 -> bb86__0_2461 [label="return"];
    bb84__0_2461 -> bb85__0_2461 [label="return"];
    bb85__0_2461 -> bb182__0_2461 [label=""];
    bb86__0_2461 -> bb87__0_2461 [label="return"];
    bb87__0_2461 -> bb88__0_2461 [label="0"];
    bb87__0_2461 -> bb89__0_2461 [label="1"];
    bb87__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb88__0_2461 -> bb92__0_2461 [label="0"];
    bb88__0_2461 -> bb91__0_2461 [label="otherwise"];
    bb89__0_2461 -> bb90__0_2461 [label="return"];
    bb90__0_2461 -> bb181__0_2461 [label=""];
    bb91__0_2461 -> bb93__0_2461 [label="return"];
    bb92__0_2461 -> bb95__0_2461 [label="0"];
    bb92__0_2461 -> bb94__0_2461 [label="otherwise"];
    bb93__0_2461 -> bb98__0_2461 [label=""];
    bb94__0_2461 -> bb96__0_2461 [label="return"];
    bb95__0_2461 -> bb97__0_2461 [label=""];
    bb96__0_2461 -> bb97__0_2461 [label=""];
    bb97__0_2461 -> bb98__0_2461 [label=""];
    bb98__0_2461 -> bb120__0_2461 [label="0"];
    bb98__0_2461 -> bb99__0_2461 [label="otherwise"];
    bb99__0_2461 -> bb100__0_2461 [label="return"];
    bb100__0_2461 -> bb101__0_2461 [label="return"];
    bb101__0_2461 -> bb102__0_2461 [label="0"];
    bb101__0_2461 -> bb103__0_2461 [label="1"];
    bb101__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb102__0_2461 -> bb105__0_2461 [label="return"];
    bb103__0_2461 -> bb104__0_2461 [label="return"];
    bb104__0_2461 -> bb178__0_2461 [label=""];
    bb105__0_2461 -> bb106__0_2461 [label="return"];
    bb106__0_2461 -> bb107__0_2461 [label="0"];
    bb106__0_2461 -> bb108__0_2461 [label="1"];
    bb106__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb107__0_2461 -> bb110__0_2461 [label="return"];
    bb108__0_2461 -> bb109__0_2461 [label="return"];
    bb109__0_2461 -> bb178__0_2461 [label=""];
    bb110__0_2461 -> bb111__0_2461 [label="return"];
    bb111__0_2461 -> bb112__0_2461 [label="0"];
    bb111__0_2461 -> bb113__0_2461 [label="1"];
    bb111__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb112__0_2461 -> bb115__0_2461 [label="return"];
    bb113__0_2461 -> bb114__0_2461 [label="return"];
    bb114__0_2461 -> bb177__0_2461 [label=""];
    bb115__0_2461 -> bb116__0_2461 [label="return"];
    bb116__0_2461 -> bb117__0_2461 [label="0"];
    bb116__0_2461 -> bb118__0_2461 [label="1"];
    bb116__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb117__0_2461 -> bb121__0_2461 [label=""];
    bb118__0_2461 -> bb119__0_2461 [label="return"];
    bb119__0_2461 -> bb177__0_2461 [label=""];
    bb120__0_2461 -> bb121__0_2461 [label=""];
    bb121__0_2461 -> bb138__0_2461 [label="0"];
    bb121__0_2461 -> bb122__0_2461 [label="otherwise"];
    bb122__0_2461 -> bb123__0_2461 [label="return"];
    bb123__0_2461 -> bb124__0_2461 [label="return"];
    bb124__0_2461 -> bb125__0_2461 [label="0"];
    bb124__0_2461 -> bb126__0_2461 [label="1"];
    bb124__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb125__0_2461 -> bb128__0_2461 [label="return"];
    bb126__0_2461 -> bb127__0_2461 [label="return"];
    bb127__0_2461 -> bb175__0_2461 [label=""];
    bb128__0_2461 -> bb129__0_2461 [label="return"];
    bb129__0_2461 -> bb130__0_2461 [label="0"];
    bb129__0_2461 -> bb131__0_2461 [label="1"];
    bb129__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb130__0_2461 -> bb133__0_2461 [label="return"];
    bb131__0_2461 -> bb132__0_2461 [label="return"];
    bb132__0_2461 -> bb175__0_2461 [label=""];
    bb133__0_2461 -> bb134__0_2461 [label="return"];
    bb134__0_2461 -> bb135__0_2461 [label="0"];
    bb134__0_2461 -> bb136__0_2461 [label="1"];
    bb134__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb135__0_2461 -> bb139__0_2461 [label=""];
    bb136__0_2461 -> bb137__0_2461 [label="return"];
    bb137__0_2461 -> bb176__0_2461 [label=""];
    bb138__0_2461 -> bb139__0_2461 [label=""];
    bb139__0_2461 -> bb140__0_2461 [label="return"];
    bb140__0_2461 -> bb143__0_2461 [label="0"];
    bb140__0_2461 -> bb141__0_2461 [label="otherwise"];
    bb141__0_2461 -> bb142__0_2461 [label="return"];
    bb142__0_2461 -> bb144__0_2461 [label=""];
    bb143__0_2461 -> bb144__0_2461 [label=""];
    bb144__0_2461 -> bb170__0_2461 [label="0"];
    bb144__0_2461 -> bb145__0_2461 [label="otherwise"];
    bb145__0_2461 -> bb169__0_2461 [label="0"];
    bb145__0_2461 -> bb146__0_2461 [label="otherwise"];
    bb146__0_2461 -> bb147__0_2461 [label="return"];
    bb147__0_2461 -> bb148__0_2461 [label="return"];
    bb148__0_2461 -> bb149__0_2461 [label="return"];
    bb149__0_2461 -> bb150__0_2461 [label="return"];
    bb150__0_2461 -> bb151__0_2461 [label="0"];
    bb150__0_2461 -> bb152__0_2461 [label="1"];
    bb150__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb151__0_2461 -> bb154__0_2461 [label="return"];
    bb152__0_2461 -> bb153__0_2461 [label="return"];
    bb153__0_2461 -> bb172__0_2461 [label=""];
    bb154__0_2461 -> bb155__0_2461 [label="return"];
    bb155__0_2461 -> bb156__0_2461 [label="0"];
    bb155__0_2461 -> bb157__0_2461 [label="1"];
    bb155__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb156__0_2461 -> bb159__0_2461 [label="return"];
    bb157__0_2461 -> bb158__0_2461 [label="return"];
    bb158__0_2461 -> bb172__0_2461 [label=""];
    bb159__0_2461 -> bb160__0_2461 [label="return"];
    bb160__0_2461 -> bb161__0_2461 [label="0"];
    bb160__0_2461 -> bb162__0_2461 [label="1"];
    bb160__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb161__0_2461 -> bb164__0_2461 [label="return"];
    bb162__0_2461 -> bb163__0_2461 [label="return"];
    bb163__0_2461 -> bb173__0_2461 [label=""];
    bb164__0_2461 -> bb165__0_2461 [label="return"];
    bb165__0_2461 -> bb166__0_2461 [label="0"];
    bb165__0_2461 -> bb167__0_2461 [label="1"];
    bb165__0_2461 -> bb11__0_2461 [label="otherwise"];
    bb166__0_2461 -> bb171__0_2461 [label=""];
    bb167__0_2461 -> bb168__0_2461 [label="return"];
    bb168__0_2461 -> bb174__0_2461 [label=""];
    bb169__0_2461 -> bb170__0_2461 [label=""];
    bb170__0_2461 -> bb171__0_2461 [label=""];
    bb171__0_2461 -> bb193__0_2461 [label=""];
    bb172__0_2461 -> bb173__0_2461 [label=""];
    bb173__0_2461 -> bb174__0_2461 [label=""];
    bb174__0_2461 -> bb180__0_2461 [label=""];
    bb175__0_2461 -> bb176__0_2461 [label=""];
    bb176__0_2461 -> bb180__0_2461 [label=""];
    bb177__0_2461 -> bb179__0_2461 [label=""];
    bb178__0_2461 -> bb179__0_2461 [label=""];
    bb179__0_2461 -> bb180__0_2461 [label=""];
    bb180__0_2461 -> bb181__0_2461 [label=""];
    bb181__0_2461 -> bb186__0_2461 [label=""];
    bb182__0_2461 -> bb186__0_2461 [label=""];
    bb183__0_2461 -> bb184__0_2461 [label=""];
    bb184__0_2461 -> bb185__0_2461 [label=""];
    bb185__0_2461 -> bb186__0_2461 [label=""];
    bb186__0_2461 -> bb189__0_2461 [label=""];
    bb187__0_2461 -> bb188__0_2461 [label=""];
    bb188__0_2461 -> bb189__0_2461 [label=""];
    bb189__0_2461 -> bb191__0_2461 [label=""];
    bb190__0_2461 -> bb191__0_2461 [label=""];
    bb191__0_2461 -> bb192__0_2461 [label=""];
    bb192__0_2461 -> bb193__0_2461 [label=""];
}
