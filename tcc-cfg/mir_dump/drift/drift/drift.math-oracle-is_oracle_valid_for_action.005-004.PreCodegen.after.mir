// MIR for `is_oracle_valid_for_action` after PreCodegen

fn is_oracle_valid_for_action(_1: OracleValidity, _2: Option<DriftAction>) -> std::result::Result<bool, error::ErrorCode> {
    debug oracle_validity => _1;
    debug action => _2;
    let mut _0: std::result::Result<bool, error::ErrorCode>;
    let _3: bool;
    let mut _4: isize;
    let _5: math::oracle::DriftAction;
    let mut _6: isize;
    let mut _7: isize;
    let mut _8: isize;
    let mut _9: isize;
    let mut _10: bool;
    let mut _11: isize;
    let mut _12: bool;
    let mut _13: isize;
    let mut _14: isize;
    let mut _15: bool;
    let mut _16: isize;
    let mut _17: bool;
    let mut _18: isize;
    let mut _19: bool;
    let mut _20: isize;
    let mut _21: bool;
    let mut _22: isize;
    let mut _23: bool;
    let mut _24: isize;
    let mut _25: isize;
    let mut _26: bool;
    scope 1 {
        debug is_ok => _3;
    }
    scope 2 {
        debug action => _5;
    }

    bb0: {
        StorageLive(_3);
        _4 = discriminant(_2);
        switchInt(move _4) -> [0: bb1, 1: bb3, otherwise: bb2];
    }

    bb1: {
        _25 = discriminant(_1);
        switchInt(move _25) -> [6: bb46, otherwise: bb45];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_5);
        _5 = ((_2 as Some).0: math::oracle::DriftAction);
        _6 = discriminant(_5);
        switchInt(move _6) -> [0: bb8, 1: bb22, 2: bb18, 3: bb25, 4: bb5, 5: bb29, 6: bb14, 7: bb33, 8: bb37, 9: bb11, 10: bb4, otherwise: bb2];
    }

    bb4: {
        StorageLive(_23);
        _24 = discriminant(_1);
        switchInt(move _24) -> [0: bb42, 1: bb42, otherwise: bb41];
    }

    bb5: {
        _7 = discriminant(_1);
        switchInt(move _7) -> [6: bb7, otherwise: bb6];
    }

    bb6: {
        _3 = const false;
        goto -> bb44;
    }

    bb7: {
        _3 = const true;
        goto -> bb44;
    }

    bb8: {
        _8 = discriminant(_1);
        switchInt(move _8) -> [3: bb10, 4: bb10, 5: bb10, 6: bb10, otherwise: bb9];
    }

    bb9: {
        _3 = const false;
        goto -> bb44;
    }

    bb10: {
        _3 = const true;
        goto -> bb44;
    }

    bb11: {
        _9 = discriminant(_1);
        switchInt(move _9) -> [4: bb13, 5: bb13, 6: bb13, otherwise: bb12];
    }

    bb12: {
        _3 = const false;
        goto -> bb44;
    }

    bb13: {
        _3 = const true;
        goto -> bb44;
    }

    bb14: {
        StorageLive(_10);
        _11 = discriminant(_1);
        switchInt(move _11) -> [0: bb16, 1: bb16, 2: bb16, 3: bb16, otherwise: bb15];
    }

    bb15: {
        _10 = const false;
        goto -> bb17;
    }

    bb16: {
        _10 = const true;
        goto -> bb17;
    }

    bb17: {
        _3 = Not(move _10);
        StorageDead(_10);
        goto -> bb44;
    }

    bb18: {
        StorageLive(_12);
        _13 = discriminant(_1);
        switchInt(move _13) -> [0: bb20, 1: bb20, otherwise: bb19];
    }

    bb19: {
        _12 = const false;
        goto -> bb21;
    }

    bb20: {
        _12 = const true;
        goto -> bb21;
    }

    bb21: {
        _3 = Not(move _12);
        StorageDead(_12);
        goto -> bb44;
    }

    bb22: {
        _14 = discriminant(_1);
        switchInt(move _14) -> [3: bb24, 4: bb24, 5: bb24, 6: bb24, otherwise: bb23];
    }

    bb23: {
        _3 = const false;
        goto -> bb44;
    }

    bb24: {
        _3 = const true;
        goto -> bb44;
    }

    bb25: {
        StorageLive(_15);
        _16 = discriminant(_1);
        switchInt(move _16) -> [0: bb27, 1: bb27, 2: bb27, otherwise: bb26];
    }

    bb26: {
        _15 = const false;
        goto -> bb28;
    }

    bb27: {
        _15 = const true;
        goto -> bb28;
    }

    bb28: {
        _3 = Not(move _15);
        StorageDead(_15);
        goto -> bb44;
    }

    bb29: {
        StorageLive(_17);
        _18 = discriminant(_1);
        switchInt(move _18) -> [0: bb31, 1: bb31, otherwise: bb30];
    }

    bb30: {
        _17 = const false;
        goto -> bb32;
    }

    bb31: {
        _17 = const true;
        goto -> bb32;
    }

    bb32: {
        _3 = Not(move _17);
        StorageDead(_17);
        goto -> bb44;
    }

    bb33: {
        StorageLive(_19);
        _20 = discriminant(_1);
        switchInt(move _20) -> [0: bb35, otherwise: bb34];
    }

    bb34: {
        _19 = const false;
        goto -> bb36;
    }

    bb35: {
        _19 = const true;
        goto -> bb36;
    }

    bb36: {
        _3 = Not(move _19);
        StorageDead(_19);
        goto -> bb44;
    }

    bb37: {
        StorageLive(_21);
        _22 = discriminant(_1);
        switchInt(move _22) -> [0: bb39, otherwise: bb38];
    }

    bb38: {
        _21 = const false;
        goto -> bb40;
    }

    bb39: {
        _21 = const true;
        goto -> bb40;
    }

    bb40: {
        _3 = Not(move _21);
        StorageDead(_21);
        goto -> bb44;
    }

    bb41: {
        _23 = const false;
        goto -> bb43;
    }

    bb42: {
        _23 = const true;
        goto -> bb43;
    }

    bb43: {
        _3 = Not(move _23);
        StorageDead(_23);
        goto -> bb44;
    }

    bb44: {
        StorageDead(_5);
        goto -> bb47;
    }

    bb45: {
        _3 = const false;
        goto -> bb47;
    }

    bb46: {
        _3 = const true;
        goto -> bb47;
    }

    bb47: {
        StorageLive(_26);
        _26 = _3;
        _0 = std::result::Result::<bool, error::ErrorCode>::Ok(move _26);
        StorageDead(_26);
        StorageDead(_3);
        return;
    }
}
