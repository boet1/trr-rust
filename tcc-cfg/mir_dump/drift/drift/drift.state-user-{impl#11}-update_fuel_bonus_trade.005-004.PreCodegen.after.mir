// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1703:1: 1703:15>::update_fuel_bonus_trade` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1703:1: 1703:15>::update_fuel_bonus_trade(_1: &mut UserStats, _2: u32, _3: u32) -> std::result::Result<(), error::ErrorCode> {
    debug self => _1;
    debug fuel_taker => _2;
    debug fuel_maker => _3;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let mut _4: u32;
    let mut _5: u32;
    let mut _6: u32;
    let mut _7: u32;
    let mut _8: u32;
    let mut _9: u32;
    let mut _10: ();

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = ((*_1).21: u32);
        StorageLive(_6);
        _6 = _2;
        _4 = core::num::<impl u32>::saturating_add(move _5, move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        ((*_1).21: u32) = move _4;
        StorageDead(_4);
        StorageLive(_7);
        StorageLive(_8);
        _8 = ((*_1).22: u32);
        StorageLive(_9);
        _9 = _3;
        _7 = core::num::<impl u32>::saturating_add(move _8, move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_8);
        ((*_1).22: u32) = move _7;
        StorageDead(_7);
        StorageLive(_10);
        _10 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _10);
        StorageDead(_10);
        return;
    }
}
