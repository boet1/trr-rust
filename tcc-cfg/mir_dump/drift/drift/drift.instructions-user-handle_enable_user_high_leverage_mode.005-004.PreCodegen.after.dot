digraph Mir_0_1731 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_enable_user_high_leverage_mode(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::EnableUserHighLeverageMode&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _4: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _9: Closure(DefId(0:11808 ~ drift[d311]::instructions::user::handle_enable_user_high_leverage_mode::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _15: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _16: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _17: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _18: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _20: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _21: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _22: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _23: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _24: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _25: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _27: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _28: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _29: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _30: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _31: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: anchor_lang::prelude::Clock;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _35: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _40: anchor_lang::prelude::Clock;<br align="left"/>let mut _41: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _42: state::state::OracleGuardRails;<br align="left"/>let mut _43: &amp;ReErased state::state::State;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _52: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _53: bool;<br align="left"/>let mut _54: &amp;ReErased state::user::MarginMode;<br align="left"/>let _55: &amp;ReErased state::user::User;<br align="left"/>let mut _56: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _57: &amp;ReErased state::user::MarginMode;<br align="left"/>let _58: state::user::MarginMode;<br align="left"/>let mut _59: ();<br align="left"/>let _60: error::ErrorCode;<br align="left"/>let _61: ();<br align="left"/>let mut _62: &amp;ReErased str;<br align="left"/>let _63: &amp;ReErased str;<br align="left"/>let mut _64: &amp;ReErased std::string::String;<br align="left"/>let _65: &amp;ReErased std::string::String;<br align="left"/>let _66: std::string::String;<br align="left"/>let _67: std::string::String;<br align="left"/>let mut _68: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _71: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _72: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _73: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _74: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _76: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _77: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased error::ErrorCode;<br align="left"/>let _79: &amp;ReErased error::ErrorCode;<br align="left"/>let _80: ();<br align="left"/>let mut _81: &amp;ReErased str;<br align="left"/>let _82: &amp;ReErased str;<br align="left"/>let mut _83: error::ErrorCode;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: ();<br align="left"/>let _89: bool;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _91: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _92: &amp;ReErased state::user::User;<br align="left"/>let _93: &amp;ReErased state::user::User;<br align="left"/>let mut _94: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _95: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _96: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _97: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _99: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: bool;<br align="left"/>let mut _107: std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _109: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _110: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _111: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _112: Closure(DefId(0:11809 ~ drift[d311]::instructions::user::handle_enable_user_high_leverage_mode::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _117: std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let _118: ();<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _120: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _121: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _122: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _123: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _124: &amp;ReErased mut state::user::User;<br align="left"/>let mut _125: &amp;ReErased mut state::user::User;<br align="left"/>let mut _126: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _127: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: ();<br align="left"/>let mut _133: ();<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _135: &amp;ReErased state::user::MarginMode;<br align="left"/>let mut _136: &amp;ReErased mut instructions::user::EnableUserHighLeverageMode&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased mut instructions::user::EnableUserHighLeverageMode&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _139: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _140: &amp;ReErased mut instructions::user::EnableUserHighLeverageMode&lt;ReErased&gt;;<br align="left"/>let mut _141: bool;<br align="left"/>let mut _142: bool;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug _sub_account_id =&gt; _2;<br align="left"/>debug state =&gt; _3;<br align="left"/>debug user =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug perp_market_map =&gt; _15;<br align="left"/>debug spot_market_map =&gt; _16;<br align="left"/>debug oracle_map =&gt; _17;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug error_code =&gt; _60;<br align="left"/>debug res =&gt; _67;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug config =&gt; _107;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>>;
    bb0__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_142 = const false<br/>_141 = const false<br/>StorageLive(_3)<br/>_136 = deref_copy (_1.1: &amp;mut instructions::user::EnableUserHighLeverageMode&lt;'_&gt;)<br/>_3 = &amp;((*_136).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_137 = deref_copy (_1.1: &amp;mut instructions::user::EnableUserHighLeverageMode&lt;'_&gt;)<br/>_8 = &amp;((*_137).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_7 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _8)</td></tr></table>>];
    bb1__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>_9 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_6 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _7, move _9)</td></tr></table>>];
    bb2__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb3__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_10 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_5 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_4 = move _14<br/>StorageDead(_14)<br/>_145 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_138 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_25 = &amp;(*_138)<br/></td></tr><tr><td align="left">_24 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _25)</td></tr></table>>];
    bb5__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_143 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _24)</td></tr></table>>];
    bb9__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_22 = &amp;mut _23<br/>_21 = &amp;mut (*_22)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/></td></tr><tr><td align="left">_28 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb10__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/></td></tr><tr><td align="left">_31 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb11__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/></td></tr><tr><td align="left">_35 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb12__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb13__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_141 = const true<br/>_142 = const true<br/>StorageDead(_35)<br/>_36 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb14__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_34 as Continue).0: anchor_lang::prelude::Clock)<br/>_33 = move _40<br/>StorageDead(_40)<br/>_32 = (_33.0: u64)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_139 = deref_copy (*_3)<br/>_165 = (((_139.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_44 = &amp;(*_165)<br/></td></tr><tr><td align="left">_43 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb15__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_39)<br/>_39 = move _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb16__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = ((*_43).7: state::state::OracleGuardRails)<br/>_41 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_20 = load_maps(move _21, move _26, move _29, move _32, move _41)</td></tr></table>>];
    bb18__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb19__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_45 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb20__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_19 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_18 = move _49<br/>StorageDead(_49)<br/>StorageLive(_15)<br/>_15 = move (_18.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_16)<br/>_16 = move (_18.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_17)<br/>_17 = move (_18.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_149 = discriminant(_19)<br/>StorageDead(_43)<br/>_151 = discriminant(_34)<br/>_141 = const false<br/>_142 = const false<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb21__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb22__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_147 = discriminant(_19)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb24__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_4<br/></td></tr><tr><td align="left">_55 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _56)</td></tr></table>>];
    bb25__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_54 = &amp;((*_55).26: state::user::MarginMode)<br/>StorageLive(_57)<br/>_135 = const _<br/>_57 = &amp;(*_135)<br/></td></tr><tr><td align="left">_53 = &lt;MarginMode as PartialEq&gt;::ne(move _54, move _57)</td></tr></table>>];
    bb26__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb27__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = ()<br/>_52 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _59)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_60)<br/>_60 = error::ErrorCode::DefaultError<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_134 = const _<br/>_71 = &amp;(*_134)<br/>_70 = &amp;(*_71)<br/>_69 = move _70 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;_60<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _78)</td></tr></table>>];
    bb29__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_76 = [move _77]<br/>StorageDead(_77)<br/>_75 = &amp;_76<br/>_74 = &amp;(*_75)<br/>_73 = move _74 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_68 = Arguments::&lt;'_&gt;::new_v1(move _69, move _73)</td></tr></table>>];
    bb30__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = format(move _68)</td></tr></table>>];
    bb31__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/>_66 = move _67<br/>StorageDead(_67)<br/>_65 = &amp;_66<br/>_64 = &amp;(*_65)<br/></td></tr><tr><td align="left">_63 = &lt;String as Deref&gt;::deref(move _64)</td></tr></table>>];
    bb32__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_62 = &amp;(*_63)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_61 = solana_program::log::sol_log(move _62)</td></tr></table>>];
    bb33__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb34__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = const &quot;user already in high leverage mode&quot;<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = solana_program::log::sol_log(move _81)</td></tr></table>>];
    bb35__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageLive(_83)<br/>_83 = _60<br/>_52 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _83)<br/>StorageDead(_83)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb37__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_84 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb38__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_51 as Continue).0: ())<br/>_50 = _88<br/>StorageDead(_88)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;_4<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb39__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb40__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;_15<br/>_96 = &amp;(*_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_16<br/>_98 = &amp;(*_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;mut _17<br/>_100 = &amp;mut (*_101)<br/></td></tr><tr><td align="left">_91 = meets_maintenance_margin_requirement(move _92, move _96, move _98, move _100)</td></tr></table>>];
    bb42__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb43__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_102 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb44__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_90 as Continue).0: bool)<br/>_89 = _106<br/>StorageDead(_106)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_140 = deref_copy (_1.1: &amp;mut instructions::user::EnableUserHighLeverageMode&lt;'_&gt;)<br/>_111 = &amp;((*_140).3: anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/></td></tr><tr><td align="left">_110 = anchor_lang::prelude::AccountLoader::&lt;'_, HighLeverageModeConfig&gt;::load_mut(move _111)</td></tr></table>>];
    bb45__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb46__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageLive(_112)<br/>_112 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_109 = std::result::Result::&lt;RefMut&lt;'_, HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _110, move _112)</td></tr></table>>];
    bb48__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;std::result::Result&lt;RefMut&lt;'_, HighLeverageModeConfig&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _109)</td></tr></table>>];
    bb49__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_113 = discriminant(_108)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb50__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = move ((_108 as Continue).0: std::cell::RefMut&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/>_107 = move _117<br/>StorageDead(_117)<br/>_155 = discriminant(_108)<br/>StorageDead(_108)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut _107<br/></td></tr><tr><td align="left">_122 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as DerefMut&gt;::deref_mut(move _123)</td></tr></table>>];
    bb51__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_108 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_116)<br/>_116 = _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb52__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/>_153 = discriminant(_108)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_121 = &amp;mut (*_122)<br/>StorageDead(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;mut _4<br/>_126 = &amp;mut (*_127)<br/></td></tr><tr><td align="left">_125 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _126)</td></tr></table>>];
    bb54__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_124 = &amp;mut (*_125)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_120 = HighLeverageModeConfig::enable_high_leverage(move _121, move _124)</td></tr></table>>];
    bb55__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb56__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_128 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb57__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_119 as Continue).0: ())<br/>_118 = _132<br/>StorageDead(_132)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageLive(_133)<br/>_133 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _133)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb58__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb59__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb60__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb61__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb62__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb63__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb64__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb67__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb68__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb69__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb71__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb73__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">return</td></tr></table>>];
    bb75__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb76__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb77__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb78__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb79__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb80__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb81__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb82__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb83__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb84__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb85__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_157 = discriminant(_34)<br/>_141 = const false<br/>_142 = const false<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb86__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left" balign="left">_159 = discriminant(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left" balign="left">_162 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left" balign="left">_163 = discriminant(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1731 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left" balign="left">_164 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1731 -> bb1__0_1731 [label="return"];
    bb1__0_1731 -> bb2__0_1731 [label="return"];
    bb1__0_1731 -> bb84__0_1731 [label="unwind"];
    bb2__0_1731 -> bb3__0_1731 [label="return"];
    bb2__0_1731 -> bb84__0_1731 [label="unwind"];
    bb3__0_1731 -> bb4__0_1731 [label="0"];
    bb3__0_1731 -> bb6__0_1731 [label="1"];
    bb3__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb4__0_1731 -> bb8__0_1731 [label="return"];
    bb4__0_1731 -> bb83__0_1731 [label="unwind"];
    bb6__0_1731 -> bb7__0_1731 [label="return"];
    bb6__0_1731 -> bb89__0_1731 [label="unwind"];
    bb7__0_1731 -> bb73__0_1731 [label=""];
    bb8__0_1731 -> bb9__0_1731 [label="return"];
    bb8__0_1731 -> bb83__0_1731 [label="unwind"];
    bb9__0_1731 -> bb10__0_1731 [label="return"];
    bb9__0_1731 -> bb83__0_1731 [label="unwind"];
    bb10__0_1731 -> bb11__0_1731 [label="return"];
    bb10__0_1731 -> bb82__0_1731 [label="unwind"];
    bb11__0_1731 -> bb12__0_1731 [label="return"];
    bb11__0_1731 -> bb81__0_1731 [label="unwind"];
    bb12__0_1731 -> bb13__0_1731 [label="return"];
    bb12__0_1731 -> bb81__0_1731 [label="unwind"];
    bb13__0_1731 -> bb14__0_1731 [label="0"];
    bb13__0_1731 -> bb15__0_1731 [label="1"];
    bb13__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb14__0_1731 -> bb17__0_1731 [label="return"];
    bb14__0_1731 -> bb88__0_1731 [label="unwind"];
    bb15__0_1731 -> bb16__0_1731 [label="return"];
    bb15__0_1731 -> bb88__0_1731 [label="unwind"];
    bb16__0_1731 -> bb85__0_1731 [label=""];
    bb17__0_1731 -> bb18__0_1731 [label="return"];
    bb17__0_1731 -> bb88__0_1731 [label="unwind"];
    bb18__0_1731 -> bb19__0_1731 [label="return"];
    bb18__0_1731 -> bb88__0_1731 [label="unwind"];
    bb19__0_1731 -> bb20__0_1731 [label="0"];
    bb19__0_1731 -> bb21__0_1731 [label="1"];
    bb19__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb20__0_1731 -> bb23__0_1731 [label="return"];
    bb20__0_1731 -> bb77__0_1731 [label="unwind"];
    bb21__0_1731 -> bb22__0_1731 [label="return"];
    bb21__0_1731 -> bb87__0_1731 [label="unwind"];
    bb22__0_1731 -> bb85__0_1731 [label=""];
    bb23__0_1731 -> bb24__0_1731 [label="return"];
    bb23__0_1731 -> bb78__0_1731 [label="unwind"];
    bb24__0_1731 -> bb25__0_1731 [label="return"];
    bb24__0_1731 -> bb78__0_1731 [label="unwind"];
    bb25__0_1731 -> bb26__0_1731 [label="return"];
    bb25__0_1731 -> bb78__0_1731 [label="unwind"];
    bb26__0_1731 -> bb28__0_1731 [label="0"];
    bb26__0_1731 -> bb27__0_1731 [label="otherwise"];
    bb27__0_1731 -> bb36__0_1731 [label=""];
    bb28__0_1731 -> bb29__0_1731 [label="return"];
    bb28__0_1731 -> bb78__0_1731 [label="unwind"];
    bb29__0_1731 -> bb30__0_1731 [label="return"];
    bb29__0_1731 -> bb78__0_1731 [label="unwind"];
    bb30__0_1731 -> bb31__0_1731 [label="return"];
    bb30__0_1731 -> bb78__0_1731 [label="unwind"];
    bb31__0_1731 -> bb32__0_1731 [label="return"];
    bb31__0_1731 -> bb76__0_1731 [label="unwind"];
    bb32__0_1731 -> bb33__0_1731 [label="return"];
    bb32__0_1731 -> bb76__0_1731 [label="unwind"];
    bb33__0_1731 -> bb34__0_1731 [label="return"];
    bb33__0_1731 -> bb78__0_1731 [label="unwind"];
    bb34__0_1731 -> bb35__0_1731 [label="return"];
    bb34__0_1731 -> bb78__0_1731 [label="unwind"];
    bb35__0_1731 -> bb36__0_1731 [label=""];
    bb36__0_1731 -> bb37__0_1731 [label="return"];
    bb36__0_1731 -> bb78__0_1731 [label="unwind"];
    bb37__0_1731 -> bb38__0_1731 [label="0"];
    bb37__0_1731 -> bb39__0_1731 [label="1"];
    bb37__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb38__0_1731 -> bb41__0_1731 [label="return"];
    bb38__0_1731 -> bb78__0_1731 [label="unwind"];
    bb39__0_1731 -> bb40__0_1731 [label="return"];
    bb39__0_1731 -> bb78__0_1731 [label="unwind"];
    bb40__0_1731 -> bb66__0_1731 [label=""];
    bb41__0_1731 -> bb42__0_1731 [label="return"];
    bb41__0_1731 -> bb78__0_1731 [label="unwind"];
    bb42__0_1731 -> bb43__0_1731 [label="return"];
    bb42__0_1731 -> bb78__0_1731 [label="unwind"];
    bb43__0_1731 -> bb44__0_1731 [label="0"];
    bb43__0_1731 -> bb45__0_1731 [label="1"];
    bb43__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb44__0_1731 -> bb47__0_1731 [label="return"];
    bb44__0_1731 -> bb78__0_1731 [label="unwind"];
    bb45__0_1731 -> bb46__0_1731 [label="return"];
    bb45__0_1731 -> bb78__0_1731 [label="unwind"];
    bb46__0_1731 -> bb66__0_1731 [label=""];
    bb47__0_1731 -> bb48__0_1731 [label="return"];
    bb47__0_1731 -> bb78__0_1731 [label="unwind"];
    bb48__0_1731 -> bb49__0_1731 [label="return"];
    bb48__0_1731 -> bb78__0_1731 [label="unwind"];
    bb49__0_1731 -> bb50__0_1731 [label="0"];
    bb49__0_1731 -> bb51__0_1731 [label="1"];
    bb49__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb50__0_1731 -> bb53__0_1731 [label="return"];
    bb50__0_1731 -> bb75__0_1731 [label="unwind"];
    bb51__0_1731 -> bb52__0_1731 [label="return"];
    bb51__0_1731 -> bb86__0_1731 [label="unwind"];
    bb52__0_1731 -> bb65__0_1731 [label=""];
    bb53__0_1731 -> bb54__0_1731 [label="return"];
    bb53__0_1731 -> bb75__0_1731 [label="unwind"];
    bb54__0_1731 -> bb55__0_1731 [label="return"];
    bb54__0_1731 -> bb75__0_1731 [label="unwind"];
    bb55__0_1731 -> bb56__0_1731 [label="return"];
    bb55__0_1731 -> bb75__0_1731 [label="unwind"];
    bb56__0_1731 -> bb57__0_1731 [label="0"];
    bb56__0_1731 -> bb58__0_1731 [label="1"];
    bb56__0_1731 -> bb5__0_1731 [label="otherwise"];
    bb57__0_1731 -> bb60__0_1731 [label="return"];
    bb57__0_1731 -> bb78__0_1731 [label="unwind"];
    bb58__0_1731 -> bb59__0_1731 [label="return"];
    bb58__0_1731 -> bb75__0_1731 [label="unwind"];
    bb59__0_1731 -> bb65__0_1731 [label="return"];
    bb59__0_1731 -> bb78__0_1731 [label="unwind"];
    bb60__0_1731 -> bb61__0_1731 [label="return"];
    bb60__0_1731 -> bb79__0_1731 [label="unwind"];
    bb61__0_1731 -> bb62__0_1731 [label="return"];
    bb61__0_1731 -> bb80__0_1731 [label="unwind"];
    bb62__0_1731 -> bb63__0_1731 [label="return"];
    bb62__0_1731 -> bb83__0_1731 [label="unwind"];
    bb63__0_1731 -> bb64__0_1731 [label="return"];
    bb63__0_1731 -> bb84__0_1731 [label="unwind"];
    bb64__0_1731 -> bb74__0_1731 [label=""];
    bb65__0_1731 -> bb66__0_1731 [label=""];
    bb66__0_1731 -> bb67__0_1731 [label="return"];
    bb66__0_1731 -> bb79__0_1731 [label="unwind"];
    bb67__0_1731 -> bb68__0_1731 [label="return"];
    bb67__0_1731 -> bb80__0_1731 [label="unwind"];
    bb68__0_1731 -> bb69__0_1731 [label="return"];
    bb68__0_1731 -> bb83__0_1731 [label="unwind"];
    bb69__0_1731 -> bb72__0_1731 [label=""];
    bb70__0_1731 -> bb71__0_1731 [label="return"];
    bb70__0_1731 -> bb83__0_1731 [label="unwind"];
    bb71__0_1731 -> bb72__0_1731 [label=""];
    bb72__0_1731 -> bb73__0_1731 [label="return"];
    bb72__0_1731 -> bb84__0_1731 [label="unwind"];
    bb73__0_1731 -> bb74__0_1731 [label=""];
    bb75__0_1731 -> bb78__0_1731 [label="return"];
    bb76__0_1731 -> bb78__0_1731 [label="return"];
    bb77__0_1731 -> bb78__0_1731 [label="return"];
    bb78__0_1731 -> bb79__0_1731 [label="return"];
    bb79__0_1731 -> bb80__0_1731 [label="return"];
    bb80__0_1731 -> bb83__0_1731 [label="return"];
    bb81__0_1731 -> bb82__0_1731 [label="return"];
    bb82__0_1731 -> bb83__0_1731 [label="return"];
    bb83__0_1731 -> bb84__0_1731 [label="return"];
    bb85__0_1731 -> bb70__0_1731 [label="return"];
    bb85__0_1731 -> bb82__0_1731 [label="unwind"];
    bb86__0_1731 -> bb78__0_1731 [label=""];
    bb87__0_1731 -> bb88__0_1731 [label=""];
    bb88__0_1731 -> bb81__0_1731 [label=""];
    bb89__0_1731 -> bb84__0_1731 [label=""];
}
