digraph Mir_0_13959 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U256::low_u32(_1: &amp;ReErased math::bn::U256) -&gt; u32<br align="left"/>let _2: &amp;ReErased [u64; 4_usize];<br align="left"/>let mut _3: u64;<br align="left"/>let _4: usize;<br align="left"/>let mut _5: usize;<br align="left"/>let mut _6: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug arr =&gt; _2;<br align="left"/>>;
    bb0__0_13959 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = &amp;((*_1).0: [u64; 4])<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = const 0_usize<br/>_5 = Len((*_2))<br/>_6 = Lt(_4, _5)<br/></td></tr><tr><td align="left">assert(move _6, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _5, _4)</td></tr></table>>];
    bb1__0_13959 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = (*_2)[_4]<br/>_0 = move _3 as u32 (IntToInt)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_13959 -> bb1__0_13959 [label="success"];
}
