digraph Mir_0_5884 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::AccountsExit&lt;'info&gt;&gt;::exit(_1: &amp;ReErased instructions::admin::DeleteInitializedSpotMarket&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: Closure(DefId(0:5885 ~ drift[d311]::instructions::admin::{impl#26}::exit::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _21: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: Closure(DefId(0:5886 ~ drift[d311]::instructions::admin::{impl#26}::exit::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _28: ();<br align="left"/>let _29: ();<br align="left"/>let _30: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _31: ();<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _33: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _34: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _36: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _37: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _39: Closure(DefId(0:5887 ~ drift[d311]::instructions::admin::{impl#26}::exit::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _44: ();<br align="left"/>let _45: ();<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _47: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _49: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _50: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _51: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _52: Closure(DefId(0:5888 ~ drift[d311]::instructions::admin::{impl#26}::exit::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _57: ();<br align="left"/>let _58: ();<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _60: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _61: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _63: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _64: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _65: Closure(DefId(0:5889 ~ drift[d311]::instructions::admin::{impl#26}::exit::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _70: ();<br align="left"/>let mut _71: ();<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug program_id =&gt; _2;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug admin =&gt; _30;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>>;
    bb0__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_7 = &amp;(*_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _7, move _9)</td></tr></table>>];
    bb1__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _6, move _10)</td></tr></table>>];
    bb2__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_11 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_4 as Continue).0: ())<br/>_3 = _15<br/>StorageDead(_15)<br/>_72 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).1: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_20 = &amp;(*_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/></td></tr><tr><td align="left">_19 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _20, move _22)</td></tr></table>>];
    bb5__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_90 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>_23 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_18 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _19, move _23)</td></tr></table>>];
    bb9__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb10__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Continue).0: ())<br/>_16 = _28<br/>StorageDead(_28)<br/>_74 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;((*_1).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_35 = &amp;(*_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_30)<br/></td></tr><tr><td align="left">_37 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _38)</td></tr></table>>];
    bb12__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_88 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_34 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as AccountsClose&lt;'_&gt;&gt;::close(move _35, move _37)</td></tr></table>>];
    bb15__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_39)<br/>_39 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_33 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _34, move _39)</td></tr></table>>];
    bb16__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb17__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_40 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb18__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_32 as Continue).0: ())<br/>_31 = _44<br/>StorageDead(_44)<br/>_76 = discriminant(_32)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>_29 = const ()<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;((*_1).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_49 = &amp;(*_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_2)<br/></td></tr><tr><td align="left">_48 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _49, move _51)</td></tr></table>>];
    bb19__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = move ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_43)<br/>_43 = move _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb20__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_86 = discriminant(_32)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageLive(_52)<br/>_52 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_47 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _48, move _52)</td></tr></table>>];
    bb22__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb23__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_53 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb24__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_46 as Continue).0: ())<br/>_45 = _57<br/>StorageDead(_57)<br/>_78 = discriminant(_46)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;((*_1).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_62 = &amp;(*_63)<br/>StorageLive(_64)<br/>_64 = &amp;(*_2)<br/></td></tr><tr><td align="left">_61 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _62, move _64)</td></tr></table>>];
    bb25__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_56)<br/>_56 = move _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb26__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_84 = discriminant(_46)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_65)<br/>_65 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_60 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _61, move _65)</td></tr></table>>];
    bb28__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb29__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_66 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb30__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_59 as Continue).0: ())<br/>_58 = _70<br/>StorageDead(_70)<br/>_80 = discriminant(_59)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_71)<br/>_71 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = move ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_69)<br/>_69 = move _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb32__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>_82 = discriminant(_59)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">return</td></tr></table>>];
    bb34__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb35__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left" balign="left">_92 = discriminant(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_93 = discriminant(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_94 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_95 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5884 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left" balign="left">_96 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5884 -> bb1__0_5884 [label="return"];
    bb1__0_5884 -> bb2__0_5884 [label="return"];
    bb1__0_5884 -> bb34__0_5884 [label="unwind"];
    bb2__0_5884 -> bb3__0_5884 [label="return"];
    bb2__0_5884 -> bb34__0_5884 [label="unwind"];
    bb3__0_5884 -> bb4__0_5884 [label="0"];
    bb3__0_5884 -> bb6__0_5884 [label="1"];
    bb3__0_5884 -> bb5__0_5884 [label="otherwise"];
    bb4__0_5884 -> bb8__0_5884 [label="return"];
    bb6__0_5884 -> bb7__0_5884 [label="return"];
    bb6__0_5884 -> bb39__0_5884 [label="unwind"];
    bb7__0_5884 -> bb33__0_5884 [label=""];
    bb8__0_5884 -> bb9__0_5884 [label="return"];
    bb8__0_5884 -> bb34__0_5884 [label="unwind"];
    bb9__0_5884 -> bb10__0_5884 [label="return"];
    bb9__0_5884 -> bb34__0_5884 [label="unwind"];
    bb10__0_5884 -> bb11__0_5884 [label="0"];
    bb10__0_5884 -> bb12__0_5884 [label="1"];
    bb10__0_5884 -> bb5__0_5884 [label="otherwise"];
    bb11__0_5884 -> bb14__0_5884 [label="return"];
    bb12__0_5884 -> bb13__0_5884 [label="return"];
    bb12__0_5884 -> bb38__0_5884 [label="unwind"];
    bb13__0_5884 -> bb33__0_5884 [label=""];
    bb14__0_5884 -> bb15__0_5884 [label="return"];
    bb14__0_5884 -> bb34__0_5884 [label="unwind"];
    bb15__0_5884 -> bb16__0_5884 [label="return"];
    bb15__0_5884 -> bb34__0_5884 [label="unwind"];
    bb16__0_5884 -> bb17__0_5884 [label="return"];
    bb16__0_5884 -> bb34__0_5884 [label="unwind"];
    bb17__0_5884 -> bb18__0_5884 [label="0"];
    bb17__0_5884 -> bb19__0_5884 [label="1"];
    bb17__0_5884 -> bb5__0_5884 [label="otherwise"];
    bb18__0_5884 -> bb21__0_5884 [label="return"];
    bb19__0_5884 -> bb20__0_5884 [label="return"];
    bb19__0_5884 -> bb37__0_5884 [label="unwind"];
    bb20__0_5884 -> bb33__0_5884 [label=""];
    bb21__0_5884 -> bb22__0_5884 [label="return"];
    bb21__0_5884 -> bb34__0_5884 [label="unwind"];
    bb22__0_5884 -> bb23__0_5884 [label="return"];
    bb22__0_5884 -> bb34__0_5884 [label="unwind"];
    bb23__0_5884 -> bb24__0_5884 [label="0"];
    bb23__0_5884 -> bb25__0_5884 [label="1"];
    bb23__0_5884 -> bb5__0_5884 [label="otherwise"];
    bb24__0_5884 -> bb27__0_5884 [label="return"];
    bb25__0_5884 -> bb26__0_5884 [label="return"];
    bb25__0_5884 -> bb36__0_5884 [label="unwind"];
    bb26__0_5884 -> bb33__0_5884 [label=""];
    bb27__0_5884 -> bb28__0_5884 [label="return"];
    bb27__0_5884 -> bb34__0_5884 [label="unwind"];
    bb28__0_5884 -> bb29__0_5884 [label="return"];
    bb28__0_5884 -> bb34__0_5884 [label="unwind"];
    bb29__0_5884 -> bb30__0_5884 [label="0"];
    bb29__0_5884 -> bb31__0_5884 [label="1"];
    bb29__0_5884 -> bb5__0_5884 [label="otherwise"];
    bb30__0_5884 -> bb33__0_5884 [label=""];
    bb31__0_5884 -> bb32__0_5884 [label="return"];
    bb31__0_5884 -> bb35__0_5884 [label="unwind"];
    bb32__0_5884 -> bb33__0_5884 [label=""];
    bb35__0_5884 -> bb34__0_5884 [label=""];
    bb36__0_5884 -> bb34__0_5884 [label=""];
    bb37__0_5884 -> bb34__0_5884 [label=""];
    bb38__0_5884 -> bb34__0_5884 [label=""];
    bb39__0_5884 -> bb34__0_5884 [label=""];
}
