// MIR for `verify_and_decode_ed25519_msg::{closure#2}` before PreCodegen

fn verify_and_decode_ed25519_msg::{closure#2}(_1: {closure@programs/drift/src/validation/sig_verification.rs:129:14: 129:17}, _2: anchor_lang::prelude::ProgramError) -> SignatureVerificationError {
    let mut _0: validation::sig_verification::SignatureVerificationError;

    bb0: {
        _0 = SignatureVerificationError::LoadInstructionAtFailed;
        drop(_2) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
