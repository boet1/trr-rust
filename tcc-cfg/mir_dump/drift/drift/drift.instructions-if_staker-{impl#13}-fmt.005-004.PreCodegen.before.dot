digraph Mir_0_8689 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;AddInsuranceFundStakeBumps as Debug&gt;::fmt(_1: &amp;ReErased instructions::if_staker::AddInsuranceFundStakeBumps, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _4: &amp;ReErased str;<br align="left"/>let _5: &amp;ReErased str;<br align="left"/>let mut _6: &amp;ReErased str;<br align="left"/>let _7: &amp;ReErased str;<br align="left"/>let mut _8: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _9: &amp;ReErased u8;<br align="left"/>let _10: &amp;ReErased u8;<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _14: &amp;ReErased u8;<br align="left"/>let _15: &amp;ReErased u8;<br align="left"/>let mut _16: &amp;ReErased str;<br align="left"/>let _17: &amp;ReErased str;<br align="left"/>let mut _18: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _19: &amp;ReErased &amp;ReErased u8;<br align="left"/>let _20: &amp;ReErased &amp;ReErased u8;<br align="left"/>let _21: &amp;ReErased u8;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>>;
    bb0__0_8689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;mut (*_2)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = const &quot;AddInsuranceFundStakeBumps&quot;<br/>_4 = &amp;(*_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = const &quot;spot_market&quot;<br/>_6 = &amp;(*_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).0: u8)<br/>_9 = &amp;(*_10)<br/>_8 = move _9 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_9)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = const &quot;spot_market_vault&quot;<br/>_11 = &amp;(*_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;((*_1).1: u8)<br/>_14 = &amp;(*_15)<br/>_13 = move _14 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = const &quot;insurance_fund_vault&quot;<br/>_16 = &amp;(*_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).2: u8)<br/>_20 = &amp;_21<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_struct_field3_finish(move _3, move _4, move _6, move _8, move _11, move _13, move _16, move _18)</td></tr></table>>];
    bb1__0_8689 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_8689 -> bb1__0_8689 [label="return"];
}
