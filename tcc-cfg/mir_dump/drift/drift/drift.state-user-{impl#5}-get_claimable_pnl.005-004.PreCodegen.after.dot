digraph Mir_0_4368 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpPosition::get_claimable_pnl(_1: &amp;ReErased state::user::PerpPosition, _2: i64, _3: i128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _4: i128;<br align="left"/>let mut _5: (u128, i128);<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, i128)&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(u128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _8: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: (u128, i128);<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: i128;<br align="left"/>let _17: i128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _20: i128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i128;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _36: i64;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: i128;<br align="left"/>let mut _42: Closure(DefId(0:4369 ~ drift[d311]::state::user::{impl#5}::get_claimable_pnl::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((i128,)) -&gt; i128, []), ()]);<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: i128;<br align="left"/>let mut _48: i128;<br align="left"/>let mut _49: i128;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: i128;<br align="left"/>let _55: ();<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: i128;<br align="left"/>let mut _58: i128;<br align="left"/>let _59: ();<br align="left"/>let mut _60: &amp;ReErased str;<br align="left"/>let _61: &amp;ReErased str;<br align="left"/>let mut _62: &amp;ReErased std::string::String;<br align="left"/>let _63: &amp;ReErased std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let _65: std::string::String;<br align="left"/>let mut _66: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _69: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _70: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _73: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _74: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _75: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased i128;<br align="left"/>let _77: &amp;ReErased i128;<br align="left"/>let mut _78: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased i128;<br align="left"/>let _80: &amp;ReErased i128;<br align="left"/>let mut _81: i128;<br align="left"/>let mut _82: i128;<br align="left"/>let mut _83: i128;<br align="left"/>let mut _84: i128;<br align="left"/>let mut _85: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug pnl_pool_excess =&gt; _3;<br align="left"/>debug unrealized_pnl =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug max_positive_pnl =&gt; _17;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug res =&gt; _65;<br align="left"/>>;
    bb0__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/>StorageLive(_9)<br/>_9 = _2<br/></td></tr><tr><td align="left">_7 = calculate_base_asset_value_and_pnl_with_oracle_price(move _8, move _9)</td></tr></table>>];
    bb1__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: (u128, i128))<br/>_5 = _14<br/>StorageDead(_14)<br/>StorageLive(_4)<br/>_4 = (_5.1: i128)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _4<br/>_15 = Gt(move _16, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = ((*_1).2: i64)<br/></td></tr><tr><td align="left">_26 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _27)</td></tr></table>>];
    bb8__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_84)<br/>_84 = _4<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _84)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb10__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_28 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb11__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Continue).0: i128)<br/>_24 = _32<br/>StorageDead(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = ((*_1).4: i64)<br/></td></tr><tr><td align="left">_35 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _36)</td></tr></table>>];
    bb12__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb13__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb15__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb16__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: i128)<br/>_33 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_23 = &lt;i128 as SafeMath&gt;::safe_sub(move _24, move _33)</td></tr></table>>];
    bb17__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb18__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_24)<br/>StorageLive(_42)<br/>_42 = {closure@programs/drift/src/state/user.rs:1108:22: 1108:29}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;i128, error::ErrorCode&gt;::map::&lt;i128, {closure@programs/drift/src/state/user.rs:1108:22: 1108:29}&gt;(move _23, move _42)</td></tr></table>>];
    bb20__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb21__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_43 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_21 as Continue).0: i128)<br/>_20 = _47<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _3<br/></td></tr><tr><td align="left">_48 = &lt;i128 as Ord&gt;::max(move _49, const 0_i128)</td></tr></table>>];
    bb23__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_19 = &lt;i128 as SafeMath&gt;::safe_add(move _20, move _48)</td></tr></table>>];
    bb26__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb27__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_50 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb28__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_18 as Continue).0: i128)<br/>_17 = _54<br/>StorageDead(_54)<br/>StorageDead(_34)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _17<br/>StorageLive(_58)<br/>_58 = _4<br/>_56 = Lt(move _57, move _58)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb29__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb30__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_85 = const _<br/>_69 = &amp;(*_85)<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;_17<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _76)</td></tr></table>>];
    bb32__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_4<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _79)</td></tr></table>>];
    bb34__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_74 = [move _75, move _78]<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>_73 = &amp;_74<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_66 = Arguments::&lt;'_&gt;::new_v1(move _67, move _71)</td></tr></table>>];
    bb35__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = format(move _66)</td></tr></table>>];
    bb36__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>_64 = move _65<br/>StorageDead(_65)<br/>_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/></td></tr><tr><td align="left">_61 = &lt;String as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb37__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_60 = &amp;(*_61)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_59 = solana_program::log::sol_log(move _60)</td></tr></table>>];
    bb38__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb39__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _4<br/>StorageLive(_83)<br/>_83 = _17<br/></td></tr><tr><td align="left">_81 = &lt;i128 as Ord&gt;::min(move _82, move _83)</td></tr></table>>];
    bb41__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _81)<br/>StorageDead(_81)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">return</td></tr></table>>];
    bb47__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb48__0_4368 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4368 -> bb1__0_4368 [label="return"];
    bb1__0_4368 -> bb2__0_4368 [label="return"];
    bb2__0_4368 -> bb3__0_4368 [label="0"];
    bb2__0_4368 -> bb5__0_4368 [label="1"];
    bb2__0_4368 -> bb4__0_4368 [label="otherwise"];
    bb3__0_4368 -> bb8__0_4368 [label="0"];
    bb3__0_4368 -> bb7__0_4368 [label="otherwise"];
    bb5__0_4368 -> bb6__0_4368 [label="return"];
    bb6__0_4368 -> bb46__0_4368 [label=""];
    bb7__0_4368 -> bb9__0_4368 [label="return"];
    bb8__0_4368 -> bb42__0_4368 [label=""];
    bb9__0_4368 -> bb10__0_4368 [label="return"];
    bb10__0_4368 -> bb11__0_4368 [label="0"];
    bb10__0_4368 -> bb12__0_4368 [label="1"];
    bb10__0_4368 -> bb4__0_4368 [label="otherwise"];
    bb11__0_4368 -> bb14__0_4368 [label="return"];
    bb12__0_4368 -> bb13__0_4368 [label="return"];
    bb13__0_4368 -> bb45__0_4368 [label=""];
    bb14__0_4368 -> bb15__0_4368 [label="return"];
    bb15__0_4368 -> bb16__0_4368 [label="0"];
    bb15__0_4368 -> bb17__0_4368 [label="1"];
    bb15__0_4368 -> bb4__0_4368 [label="otherwise"];
    bb16__0_4368 -> bb19__0_4368 [label="return"];
    bb17__0_4368 -> bb18__0_4368 [label="return"];
    bb18__0_4368 -> bb43__0_4368 [label=""];
    bb19__0_4368 -> bb20__0_4368 [label="return"];
    bb20__0_4368 -> bb21__0_4368 [label="return"];
    bb21__0_4368 -> bb22__0_4368 [label="0"];
    bb21__0_4368 -> bb23__0_4368 [label="1"];
    bb21__0_4368 -> bb4__0_4368 [label="otherwise"];
    bb22__0_4368 -> bb25__0_4368 [label="return"];
    bb23__0_4368 -> bb24__0_4368 [label="return"];
    bb24__0_4368 -> bb43__0_4368 [label=""];
    bb25__0_4368 -> bb26__0_4368 [label="return"];
    bb26__0_4368 -> bb27__0_4368 [label="return"];
    bb27__0_4368 -> bb28__0_4368 [label="0"];
    bb27__0_4368 -> bb29__0_4368 [label="1"];
    bb27__0_4368 -> bb4__0_4368 [label="otherwise"];
    bb28__0_4368 -> bb32__0_4368 [label="0"];
    bb28__0_4368 -> bb31__0_4368 [label="otherwise"];
    bb29__0_4368 -> bb30__0_4368 [label="return"];
    bb30__0_4368 -> bb44__0_4368 [label=""];
    bb31__0_4368 -> bb33__0_4368 [label="return"];
    bb32__0_4368 -> bb40__0_4368 [label=""];
    bb33__0_4368 -> bb34__0_4368 [label="return"];
    bb34__0_4368 -> bb35__0_4368 [label="return"];
    bb35__0_4368 -> bb36__0_4368 [label="return"];
    bb36__0_4368 -> bb37__0_4368 [label="return"];
    bb36__0_4368 -> bb47__0_4368 [label="unwind"];
    bb37__0_4368 -> bb38__0_4368 [label="return"];
    bb37__0_4368 -> bb47__0_4368 [label="unwind"];
    bb38__0_4368 -> bb39__0_4368 [label="return"];
    bb38__0_4368 -> bb48__0_4368 [label="unwind"];
    bb39__0_4368 -> bb40__0_4368 [label=""];
    bb40__0_4368 -> bb41__0_4368 [label="return"];
    bb41__0_4368 -> bb42__0_4368 [label=""];
    bb42__0_4368 -> bb46__0_4368 [label=""];
    bb43__0_4368 -> bb44__0_4368 [label=""];
    bb44__0_4368 -> bb45__0_4368 [label=""];
    bb45__0_4368 -> bb46__0_4368 [label=""];
    bb47__0_4368 -> bb48__0_4368 [label="return"];
}
