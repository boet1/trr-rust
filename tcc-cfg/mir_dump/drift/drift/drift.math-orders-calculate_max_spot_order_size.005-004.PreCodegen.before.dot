digraph Mir_0_2616 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::calculate_max_spot_order_size(_1: &amp;ReErased state::user::User, _2: u16, _3: controller::position::PositionDirection, _4: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _5: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _6: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _7: u128;<br align="left"/>let _8: i128;<br align="left"/>let mut _9: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _11: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _12: &amp;ReErased state::user::User;<br align="left"/>let mut _13: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _16: state::margin_calculation::MarginContext;<br align="left"/>let mut _17: state::margin_calculation::MarginContext;<br align="left"/>let mut _18: math::margin::MarginRequirementType;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: state::margin_calculation::MarginCalculation;<br align="left"/>let _24: u32;<br align="left"/>let _25: u32;<br align="left"/>let mut _26: u32;<br align="left"/>let _27: u32;<br align="left"/>let mut _28: u32;<br align="left"/>let mut _29: u64;<br align="left"/>let _30: i128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: i128;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _36: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i128;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: i128;<br align="left"/>let _48: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _50: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _51: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased u16;<br align="left"/>let _53: &amp;ReErased u16;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _59: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _61: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _62: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _64: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _65: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _66: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _67: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _68: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _74: i64;<br align="left"/>let mut _75: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _76: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _77: state::oracle::StrictOraclePrice;<br align="left"/>let mut _78: i64;<br align="left"/>let mut _79: i64;<br align="left"/>let _80: i64;<br align="left"/>let mut _81: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _82: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _84: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _85: &amp;ReErased state::user::User;<br align="left"/>let mut _86: u16;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _92: i128;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _94: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _95: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _96: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _97: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _98: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _99: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: i128;<br align="left"/>let _105: state::user::OrderFillSimulation;<br align="left"/>let _106: state::user::OrderFillSimulation;<br align="left"/>let mut _107: [state::user::OrderFillSimulation; 2_usize];<br align="left"/>let mut _108: [state::user::OrderFillSimulation; 2_usize];<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, [state::user::OrderFillSimulation; 2_usize]&gt;;<br align="left"/>let mut _110: std::result::Result&lt;[state::user::OrderFillSimulation; 2_usize], error::ErrorCode&gt;;<br align="left"/>let mut _111: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _112: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _113: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _114: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _115: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _116: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _117: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _118: std::option::Option&lt;i128&gt;;<br align="left"/>let mut _119: i128;<br align="left"/>let mut _120: math::margin::MarginRequirementType;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: [state::user::OrderFillSimulation; 2_usize];<br align="left"/>let mut _126: Closure(DefId(0:2617 ~ drift[d311]::math::orders::calculate_max_spot_order_size::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((state::user::OrderFillSimulation,)) -&gt; state::user::OrderFillSimulation, []), (&amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, &amp;ReErased state::oracle::StrictOraclePrice, &amp;ReErased u32)]);<br align="left"/>let mut _127: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _128: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _129: &amp;ReErased u32;<br align="left"/>let mut _130: i128;<br align="left"/>let mut _131: state::user::OrderFillSimulation;<br align="left"/>let mut _132: state::user::OrderFillSimulation;<br align="left"/>let mut _133: state::user::OrderFillSimulation;<br align="left"/>let _134: ();<br align="left"/>let mut _135: bool;<br align="left"/>let mut _136: i128;<br align="left"/>let mut _137: bool;<br align="left"/>let mut _138: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _139: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _140: controller::position::PositionDirection;<br align="left"/>let mut _141: i128;<br align="left"/>let mut _142: i128;<br align="left"/>let mut _143: i128;<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _145: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _146: i128;<br align="left"/>let mut _147: i128;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: i128;<br align="left"/>let mut _153: i128;<br align="left"/>let _154: ();<br align="left"/>let mut _155: bool;<br align="left"/>let mut _156: i128;<br align="left"/>let _157: i128;<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _159: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _160: i128;<br align="left"/>let mut _161: u32;<br align="left"/>let mut _162: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _163: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _164: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _165: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: i128;<br align="left"/>let _171: u32;<br align="left"/>let mut _172: u32;<br align="left"/>let mut _173: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _174: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _175: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _176: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _177: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _178: u128;<br align="left"/>let mut _179: i128;<br align="left"/>let mut _180: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _181: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _182: math::margin::MarginRequirementType;<br align="left"/>let mut _183: isize;<br align="left"/>let _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _185: !;<br align="left"/>let mut _186: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _187: u32;<br align="left"/>let mut _188: u32;<br align="left"/>let _189: i128;<br align="left"/>let mut _190: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _191: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _192: i128;<br align="left"/>let mut _193: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _194: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _195: i128;<br align="left"/>let mut _196: i128;<br align="left"/>let mut _197: i128;<br align="left"/>let mut _198: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _199: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _200: u32;<br align="left"/>let mut _201: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _202: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _203: u32;<br align="left"/>let mut _204: isize;<br align="left"/>let _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _206: !;<br align="left"/>let mut _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _208: u32;<br align="left"/>let mut _209: isize;<br align="left"/>let _210: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _211: !;<br align="left"/>let mut _212: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _213: i128;<br align="left"/>let mut _214: isize;<br align="left"/>let _215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _216: !;<br align="left"/>let mut _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _218: i128;<br align="left"/>let mut _219: isize;<br align="left"/>let _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _221: !;<br align="left"/>let mut _222: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _223: i128;<br align="left"/>let mut _224: i128;<br align="left"/>let mut _225: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _226: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _227: i128;<br align="left"/>let mut _228: i128;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: i128;<br align="left"/>let mut _234: u64;<br align="left"/>let mut _235: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _236: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _237: i128;<br align="left"/>let mut _238: i128;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: u64;<br align="left"/>let _244: u32;<br align="left"/>let mut _245: u32;<br align="left"/>let mut _246: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _247: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _248: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _249: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _250: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _251: u128;<br align="left"/>let mut _252: i128;<br align="left"/>let mut _253: i64;<br align="left"/>let mut _254: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _255: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _256: math::margin::MarginRequirementType;<br align="left"/>let mut _257: isize;<br align="left"/>let _258: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _259: !;<br align="left"/>let mut _260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _261: u32;<br align="left"/>let mut _262: u32;<br align="left"/>let _263: i128;<br align="left"/>let mut _264: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _265: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _266: i128;<br align="left"/>let mut _267: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _268: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _269: i128;<br align="left"/>let mut _270: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _271: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _272: i128;<br align="left"/>let mut _273: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _274: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _275: i128;<br align="left"/>let mut _276: i128;<br align="left"/>let mut _277: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _278: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _279: i128;<br align="left"/>let mut _280: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _281: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _282: u32;<br align="left"/>let mut _283: isize;<br align="left"/>let _284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _285: !;<br align="left"/>let mut _286: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _287: i128;<br align="left"/>let mut _288: isize;<br align="left"/>let _289: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _290: !;<br align="left"/>let mut _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _292: i128;<br align="left"/>let mut _293: i128;<br align="left"/>let mut _294: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _295: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _296: i64;<br align="left"/>let mut _297: isize;<br align="left"/>let _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _299: !;<br align="left"/>let mut _300: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _301: i128;<br align="left"/>let mut _302: isize;<br align="left"/>let _303: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _304: !;<br align="left"/>let mut _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _306: i128;<br align="left"/>let mut _307: isize;<br align="left"/>let _308: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _309: !;<br align="left"/>let mut _310: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _311: i128;<br align="left"/>let mut _312: isize;<br align="left"/>let _313: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _314: !;<br align="left"/>let mut _315: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _316: i128;<br align="left"/>let mut _317: isize;<br align="left"/>let _318: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _319: !;<br align="left"/>let mut _320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _321: i128;<br align="left"/>let mut _322: u64;<br align="left"/>let mut _323: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _324: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _325: u64;<br align="left"/>let mut _326: u64;<br align="left"/>let mut _327: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _328: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _329: i128;<br align="left"/>let mut _330: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _331: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _332: i128;<br align="left"/>let mut _333: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _334: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _335: i128;<br align="left"/>let mut _336: i128;<br align="left"/>let mut _337: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _338: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _339: u64;<br align="left"/>let mut _340: state::spot_market::SpotMarket;<br align="left"/>let mut _341: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _342: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _343: isize;<br align="left"/>let _344: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _345: !;<br align="left"/>let mut _346: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _347: i128;<br align="left"/>let mut _348: isize;<br align="left"/>let _349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _350: !;<br align="left"/>let mut _351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _352: i128;<br align="left"/>let mut _353: i128;<br align="left"/>let mut _354: isize;<br align="left"/>let _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _358: i128;<br align="left"/>let mut _359: isize;<br align="left"/>let _360: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _361: !;<br align="left"/>let mut _362: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _363: u64;<br align="left"/>let mut _364: isize;<br align="left"/>let _365: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _366: !;<br align="left"/>let mut _367: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _368: u64;<br align="left"/>let mut _369: i128;<br align="left"/>let mut _370: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _371: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _372: i128;<br align="left"/>let mut _373: i128;<br align="left"/>let mut _374: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _375: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _376: u64;<br align="left"/>let mut _377: isize;<br align="left"/>let _378: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _379: !;<br align="left"/>let mut _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _381: i128;<br align="left"/>let mut _382: isize;<br align="left"/>let _383: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _384: !;<br align="left"/>let mut _385: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _386: i128;<br align="left"/>let mut _387: bool;<br align="left"/>let mut _388: i128;<br align="left"/>let mut _389: bool;<br align="left"/>let mut _390: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _391: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _392: controller::position::PositionDirection;<br align="left"/>let mut _393: i128;<br align="left"/>let mut _394: i128;<br align="left"/>let mut _395: i128;<br align="left"/>let mut _396: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _397: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _398: i128;<br align="left"/>let mut _399: i128;<br align="left"/>let mut _400: isize;<br align="left"/>let _401: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _402: !;<br align="left"/>let mut _403: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _404: i128;<br align="left"/>let mut _405: i128;<br align="left"/>let _406: ();<br align="left"/>let mut _407: bool;<br align="left"/>let mut _408: i128;<br align="left"/>let _409: i128;<br align="left"/>let mut _410: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _411: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _412: i128;<br align="left"/>let mut _413: u32;<br align="left"/>let mut _414: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _415: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _416: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _417: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _418: isize;<br align="left"/>let _419: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _420: !;<br align="left"/>let mut _421: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _422: i128;<br align="left"/>let _423: u32;<br align="left"/>let mut _424: u32;<br align="left"/>let mut _425: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _426: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _427: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _428: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _429: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _430: u128;<br align="left"/>let mut _431: i128;<br align="left"/>let mut _432: i64;<br align="left"/>let mut _433: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _434: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _435: math::margin::MarginRequirementType;<br align="left"/>let mut _436: isize;<br align="left"/>let _437: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _438: !;<br align="left"/>let mut _439: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _440: u32;<br align="left"/>let mut _441: u32;<br align="left"/>let _442: i128;<br align="left"/>let mut _443: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _444: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _445: i128;<br align="left"/>let mut _446: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _447: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _448: i128;<br align="left"/>let mut _449: i128;<br align="left"/>let mut _450: i128;<br align="left"/>let mut _451: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _452: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _453: u32;<br align="left"/>let mut _454: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _455: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _456: u32;<br align="left"/>let mut _457: isize;<br align="left"/>let _458: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _459: !;<br align="left"/>let mut _460: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _461: u32;<br align="left"/>let mut _462: isize;<br align="left"/>let _463: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _464: !;<br align="left"/>let mut _465: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _466: i128;<br align="left"/>let mut _467: isize;<br align="left"/>let _468: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _469: !;<br align="left"/>let mut _470: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _471: i128;<br align="left"/>let mut _472: isize;<br align="left"/>let _473: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _474: !;<br align="left"/>let mut _475: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _476: i128;<br align="left"/>let mut _477: i128;<br align="left"/>let mut _478: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _479: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _480: i128;<br align="left"/>let mut _481: i128;<br align="left"/>let mut _482: isize;<br align="left"/>let _483: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _484: !;<br align="left"/>let mut _485: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _486: i128;<br align="left"/>let mut _487: u64;<br align="left"/>let mut _488: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _489: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _490: i128;<br align="left"/>let mut _491: i128;<br align="left"/>let mut _492: isize;<br align="left"/>let _493: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _494: !;<br align="left"/>let mut _495: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _496: u64;<br align="left"/>let _497: u32;<br align="left"/>let mut _498: u32;<br align="left"/>let mut _499: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _500: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _501: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _502: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _503: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _504: u128;<br align="left"/>let mut _505: i128;<br align="left"/>let mut _506: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _507: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _508: math::margin::MarginRequirementType;<br align="left"/>let mut _509: isize;<br align="left"/>let _510: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _511: !;<br align="left"/>let mut _512: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _513: u32;<br align="left"/>let mut _514: u32;<br align="left"/>let _515: i128;<br align="left"/>let mut _516: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _517: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _518: i128;<br align="left"/>let mut _519: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _520: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _521: i128;<br align="left"/>let mut _522: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _523: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _524: i128;<br align="left"/>let mut _525: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _526: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _527: i128;<br align="left"/>let mut _528: i128;<br align="left"/>let mut _529: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _530: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _531: i128;<br align="left"/>let mut _532: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _533: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _534: u32;<br align="left"/>let mut _535: isize;<br align="left"/>let _536: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _537: !;<br align="left"/>let mut _538: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _539: i128;<br align="left"/>let mut _540: isize;<br align="left"/>let _541: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _542: !;<br align="left"/>let mut _543: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _544: i128;<br align="left"/>let mut _545: i128;<br align="left"/>let mut _546: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _547: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _548: i64;<br align="left"/>let mut _549: isize;<br align="left"/>let _550: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _551: !;<br align="left"/>let mut _552: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _553: i128;<br align="left"/>let mut _554: isize;<br align="left"/>let _555: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _556: !;<br align="left"/>let mut _557: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _558: i128;<br align="left"/>let mut _559: isize;<br align="left"/>let _560: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _561: !;<br align="left"/>let mut _562: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _563: i128;<br align="left"/>let mut _564: isize;<br align="left"/>let _565: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _566: !;<br align="left"/>let mut _567: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _568: i128;<br align="left"/>let mut _569: isize;<br align="left"/>let _570: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _571: !;<br align="left"/>let mut _572: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _573: i128;<br align="left"/>let mut _574: u64;<br align="left"/>let mut _575: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _576: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _577: u64;<br align="left"/>let mut _578: u64;<br align="left"/>let mut _579: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _580: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _581: i128;<br align="left"/>let mut _582: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _583: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _584: i128;<br align="left"/>let mut _585: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _586: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _587: i128;<br align="left"/>let mut _588: i128;<br align="left"/>let mut _589: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _590: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _591: u64;<br align="left"/>let mut _592: state::spot_market::SpotMarket;<br align="left"/>let mut _593: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _594: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _595: isize;<br align="left"/>let _596: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _597: !;<br align="left"/>let mut _598: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _599: i128;<br align="left"/>let mut _600: isize;<br align="left"/>let _601: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _602: !;<br align="left"/>let mut _603: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _604: i128;<br align="left"/>let mut _605: i128;<br align="left"/>let mut _606: isize;<br align="left"/>let _607: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _608: !;<br align="left"/>let mut _609: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _610: i128;<br align="left"/>let mut _611: isize;<br align="left"/>let _612: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _613: !;<br align="left"/>let mut _614: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _615: u64;<br align="left"/>let mut _616: isize;<br align="left"/>let _617: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _618: !;<br align="left"/>let mut _619: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _620: u64;<br align="left"/>let mut _621: i128;<br align="left"/>let mut _622: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _623: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _624: i128;<br align="left"/>let mut _625: i128;<br align="left"/>let mut _626: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _627: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _628: u64;<br align="left"/>let mut _629: isize;<br align="left"/>let _630: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _631: !;<br align="left"/>let mut _632: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _633: i128;<br align="left"/>let mut _634: isize;<br align="left"/>let _635: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _636: !;<br align="left"/>let mut _637: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _638: i128;<br align="left"/>let _639: ();<br align="left"/>let mut _640: bool;<br align="left"/>let mut _641: i128;<br align="left"/>let mut _642: !;<br align="left"/>let mut _643: u64;<br align="left"/>let mut _644: u64;<br align="left"/>let mut _645: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _646: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _647: u32;<br align="left"/>let mut _648: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _649: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _650: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _651: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _652: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _653: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _654: u128;<br align="left"/>let mut _655: i128;<br align="left"/>let mut _656: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _657: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _658: controller::position::PositionDirection;<br align="left"/>let mut _659: u32;<br align="left"/>let mut _660: u32;<br align="left"/>let mut _661: isize;<br align="left"/>let _662: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _663: !;<br align="left"/>let mut _664: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _665: u32;<br align="left"/>let _666: i128;<br align="left"/>let _667: i128;<br align="left"/>let mut _668: (i128, i128);<br align="left"/>let mut _669: bool;<br align="left"/>let mut _670: u32;<br align="left"/>let mut _671: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _672: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _673: i128;<br align="left"/>let mut _674: u32;<br align="left"/>let mut _675: u32;<br align="left"/>let mut _676: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _677: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _678: (u32, bool);<br align="left"/>let mut _679: i128;<br align="left"/>let mut _680: u32;<br align="left"/>let mut _681: u32;<br align="left"/>let mut _682: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _683: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _684: (u32, bool);<br align="left"/>let _685: Closure(DefId(0:2618 ~ drift[d311]::math::orders::calculate_max_spot_order_size::{closure#1}), [i8, Binder(extern &quot;RustCall&quot; fn((u32,)) -&gt; std::result::Result&lt;(u64, u32), error::ErrorCode&gt;, []), (&amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i64, &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, &amp;ReErased i128, &amp;ReErased state::oracle::StrictOraclePrice, &amp;ReErased controller::position::PositionDirection, &amp;ReErased u32, &amp;ReErased u32)]);<br align="left"/>let mut _686: &amp;ReErased i128;<br align="left"/>let mut _687: &amp;ReErased i128;<br align="left"/>let mut _688: &amp;ReErased i128;<br align="left"/>let mut _689: &amp;ReErased i64;<br align="left"/>let mut _690: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _691: &amp;ReErased i128;<br align="left"/>let mut _692: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _693: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _694: &amp;ReErased u32;<br align="left"/>let mut _695: &amp;ReErased u32;<br align="left"/>let mut _696: u64;<br align="left"/>let mut _697: u32;<br align="left"/>let _698: ();<br align="left"/>let mut _699: std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _700: std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _701: std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _702: ();<br align="left"/>let _703: ();<br align="left"/>let mut _704: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _705: &amp;ReErased mut std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _706: &amp;ReErased mut std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _707: isize;<br align="left"/>let mut _708: !;<br align="left"/>let _709: u64;<br align="left"/>let _710: u32;<br align="left"/>let mut _711: (u64, u32);<br align="left"/>let mut _712: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u32)&gt;;<br align="left"/>let mut _713: std::result::Result&lt;(u64, u32), error::ErrorCode&gt;;<br align="left"/>let mut _714: &amp;ReErased Closure(DefId(0:2618 ~ drift[d311]::math::orders::calculate_max_spot_order_size::{closure#1}), [i8, Binder(extern &quot;RustCall&quot; fn((u32,)) -&gt; std::result::Result&lt;(u64, u32), error::ErrorCode&gt;, []), (&amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i64, &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, &amp;ReErased i128, &amp;ReErased state::oracle::StrictOraclePrice, &amp;ReErased controller::position::PositionDirection, &amp;ReErased u32, &amp;ReErased u32)]);<br align="left"/>let mut _715: (u32,);<br align="left"/>let mut _716: u32;<br align="left"/>let mut _717: isize;<br align="left"/>let _718: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _719: !;<br align="left"/>let mut _720: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _721: (u64, u32);<br align="left"/>let mut _722: u64;<br align="left"/>let mut _723: u32;<br align="left"/>let mut _724: bool;<br align="left"/>let mut _725: u32;<br align="left"/>let mut _726: u32;<br align="left"/>let mut _727: !;<br align="left"/>let mut _728: u64;<br align="left"/>let mut _729: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _730: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _731: u64;<br align="left"/>let mut _732: u64;<br align="left"/>let mut _733: isize;<br align="left"/>let _734: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _735: !;<br align="left"/>let mut _736: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _737: u64;<br align="left"/>let mut _738: u64;<br align="left"/>let mut _739: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _740: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _741: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _742: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _743: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _744: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _745: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _746: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _747: isize;<br align="left"/>let mut _748: isize;<br align="left"/>let mut _749: isize;<br align="left"/>let mut _750: isize;<br align="left"/>let mut _751: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug direction =&gt; _3;<br align="left"/>debug perp_market_map =&gt; _4;<br align="left"/>debug spot_market_map =&gt; _5;<br align="left"/>debug oracle_map =&gt; _6;<br align="left"/>debug margin_requirement =&gt; _7;<br align="left"/>debug total_collateral =&gt; _8;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug user_custom_margin_ratio =&gt; _24;<br align="left"/>debug user_custom_liability_weight =&gt; _25;<br align="left"/>debug user_custom_asset_weight =&gt; _27;<br align="left"/>debug order_size_to_flip =&gt; _29;<br align="left"/>debug free_collateral =&gt; _30;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug spot_market =&gt; _48;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug oracle_price_data =&gt; _59;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug twap =&gt; _74;<br align="left"/>debug strict_oracle_price =&gt; _77;<br align="left"/>debug max_oracle_price =&gt; _80;<br align="left"/>debug spot_position =&gt; _82;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug signed_token_amount =&gt; _92;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug bid_simulation =&gt; _105;<br align="left"/>debug ask_simulation =&gt; _106;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug worst_case_token_amount =&gt; _130;<br align="left"/>debug free_collateral_difference =&gt; _141;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug token_amount =&gt; _153;<br align="left"/>debug token_value =&gt; _157;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug liability_weight =&gt; _171;<br align="left"/>debug residual =&gt; _184;<br align="left"/>debug val =&gt; _187;<br align="left"/>debug free_collateral_regained =&gt; _189;<br align="left"/>debug residual =&gt; _205;<br align="left"/>debug val =&gt; _208;<br align="left"/>debug residual =&gt; _210;<br align="left"/>debug val =&gt; _213;<br align="left"/>debug residual =&gt; _215;<br align="left"/>debug val =&gt; _218;<br align="left"/>debug residual =&gt; _220;<br align="left"/>debug val =&gt; _223;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug weight =&gt; _244;<br align="left"/>debug residual =&gt; _258;<br align="left"/>debug val =&gt; _261;<br align="left"/>debug free_collateral_delta_per_order =&gt; _263;<br align="left"/>debug residual =&gt; _284;<br align="left"/>debug val =&gt; _287;<br align="left"/>debug residual =&gt; _289;<br align="left"/>debug val =&gt; _292;<br align="left"/>debug residual =&gt; _298;<br align="left"/>debug val =&gt; _301;<br align="left"/>debug residual =&gt; _303;<br align="left"/>debug val =&gt; _306;<br align="left"/>debug residual =&gt; _308;<br align="left"/>debug val =&gt; _311;<br align="left"/>debug residual =&gt; _313;<br align="left"/>debug val =&gt; _316;<br align="left"/>debug residual =&gt; _318;<br align="left"/>debug val =&gt; _321;<br align="left"/>debug residual =&gt; _344;<br align="left"/>debug val =&gt; _347;<br align="left"/>debug residual =&gt; _349;<br align="left"/>debug val =&gt; _352;<br align="left"/>debug residual =&gt; _355;<br align="left"/>debug val =&gt; _358;<br align="left"/>debug residual =&gt; _360;<br align="left"/>debug val =&gt; _363;<br align="left"/>debug residual =&gt; _365;<br align="left"/>debug val =&gt; _368;<br align="left"/>debug residual =&gt; _378;<br align="left"/>debug val =&gt; _381;<br align="left"/>debug residual =&gt; _383;<br align="left"/>debug val =&gt; _386;<br align="left"/>debug free_collateral_difference =&gt; _393;<br align="left"/>debug residual =&gt; _401;<br align="left"/>debug val =&gt; _404;<br align="left"/>debug token_amount =&gt; _405;<br align="left"/>debug token_value =&gt; _409;<br align="left"/>debug residual =&gt; _419;<br align="left"/>debug val =&gt; _422;<br align="left"/>debug asset_weight =&gt; _423;<br align="left"/>debug residual =&gt; _437;<br align="left"/>debug val =&gt; _440;<br align="left"/>debug free_collateral_regained =&gt; _442;<br align="left"/>debug residual =&gt; _458;<br align="left"/>debug val =&gt; _461;<br align="left"/>debug residual =&gt; _463;<br align="left"/>debug val =&gt; _466;<br align="left"/>debug residual =&gt; _468;<br align="left"/>debug val =&gt; _471;<br align="left"/>debug residual =&gt; _473;<br align="left"/>debug val =&gt; _476;<br align="left"/>debug residual =&gt; _483;<br align="left"/>debug val =&gt; _486;<br align="left"/>debug residual =&gt; _493;<br align="left"/>debug val =&gt; _496;<br align="left"/>debug weight =&gt; _497;<br align="left"/>debug residual =&gt; _510;<br align="left"/>debug val =&gt; _513;<br align="left"/>debug free_collateral_delta_per_order =&gt; _515;<br align="left"/>debug residual =&gt; _536;<br align="left"/>debug val =&gt; _539;<br align="left"/>debug residual =&gt; _541;<br align="left"/>debug val =&gt; _544;<br align="left"/>debug residual =&gt; _550;<br align="left"/>debug val =&gt; _553;<br align="left"/>debug residual =&gt; _555;<br align="left"/>debug val =&gt; _558;<br align="left"/>debug residual =&gt; _560;<br align="left"/>debug val =&gt; _563;<br align="left"/>debug residual =&gt; _565;<br align="left"/>debug val =&gt; _568;<br align="left"/>debug residual =&gt; _570;<br align="left"/>debug val =&gt; _573;<br align="left"/>debug residual =&gt; _596;<br align="left"/>debug val =&gt; _599;<br align="left"/>debug residual =&gt; _601;<br align="left"/>debug val =&gt; _604;<br align="left"/>debug residual =&gt; _607;<br align="left"/>debug val =&gt; _610;<br align="left"/>debug residual =&gt; _612;<br align="left"/>debug val =&gt; _615;<br align="left"/>debug residual =&gt; _617;<br align="left"/>debug val =&gt; _620;<br align="left"/>debug residual =&gt; _630;<br align="left"/>debug val =&gt; _633;<br align="left"/>debug residual =&gt; _635;<br align="left"/>debug val =&gt; _638;<br align="left"/>debug free_collateral_delta =&gt; _647;<br align="left"/>debug residual =&gt; _662;<br align="left"/>debug val =&gt; _665;<br align="left"/>debug numerator_scale =&gt; _666;<br align="left"/>debug denominator_scale =&gt; _667;<br align="left"/>debug calculate_order_size_and_free_collateral_delta =&gt; _685;<br align="left"/>debug order_size =&gt; _696;<br align="left"/>debug updated_free_collateral_delta =&gt; _697;<br align="left"/>debug iter =&gt; _701;<br align="left"/>debug new_order_size =&gt; _709;<br align="left"/>debug new_free_collateral_delta =&gt; _710;<br align="left"/>debug residual =&gt; _718;<br align="left"/>debug val =&gt; _721;<br align="left"/>debug residual =&gt; _734;<br align="left"/>debug val =&gt; _737;<br align="left"/>>;
    bb0__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_1)<br/>StorageLive(_13)<br/>_13 = &amp;(*_4)<br/>StorageLive(_14)<br/>_14 = &amp;(*_5)<br/>StorageLive(_15)<br/>_15 = &amp;mut (*_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_17 = MarginContext::standard(move _18)</td></tr></table>>];
    bb1__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = MarginContext::strict(move _17, const true)</td></tr></table>>];
    bb2__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_11 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _12, move _13, move _14, move _15, move _16)</td></tr></table>>];
    bb3__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_19 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb5__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_10 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_9 = _23<br/>StorageDead(_23)<br/>StorageLive(_7)<br/>_7 = (_9.3: u128)<br/>StorageLive(_8)<br/>_8 = (_9.1: i128)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_24)<br/>_24 = ((*_1).16: u32)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = ((*_1).16: u32)<br/></td></tr><tr><td align="left">_25 = core::num::&lt;impl u32&gt;::saturating_add(move _26, const _)</td></tr></table>>];
    bb6__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb8__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _24<br/></td></tr><tr><td align="left">_27 = core::num::&lt;impl u32&gt;::saturating_sub(const _, move _28)</td></tr></table>>];
    bb10__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_29)<br/>_29 = const 0_u64<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _8<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _7<br/></td></tr><tr><td align="left">_36 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _37)</td></tr></table>>];
    bb11__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb12__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_38 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb13__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_35 as Continue).0: i128)<br/>_34 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_32 = &lt;i128 as SafeMath&gt;::safe_sub(move _33, move _34)</td></tr></table>>];
    bb14__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb15__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb17__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_43 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb18__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_31 as Continue).0: i128)<br/>_30 = _47<br/>StorageDead(_47)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_5)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_2<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_50 = SpotMarketMap::&lt;'_&gt;::get_ref(move _51, move _52)</td></tr></table>>];
    bb19__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb20__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb22__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_54 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb23__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_49 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_48 = move _58<br/>StorageDead(_58)<br/>_749 = discriminant(_49)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut (*_6)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_48<br/></td></tr><tr><td align="left">_67 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _68)</td></tr></table>>];
    bb24__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb25__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>_747 = discriminant(_49)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_66 = &amp;(*_67)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_65 = SpotMarket::oracle_id(move _66)</td></tr></table>>];
    bb27__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_61 = OracleMap::&lt;'_&gt;::get_price_data(move _62, move _63)</td></tr></table>>];
    bb28__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb29__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_69 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb30__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_60 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_59 = _73<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_48<br/></td></tr><tr><td align="left">_75 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb31__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb32__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_74 = (((*_75).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageDead(_75)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = ((*_59).0: i64)<br/>StorageLive(_79)<br/>_79 = _74<br/></td></tr><tr><td align="left">_77 = StrictOraclePrice::new(move _78, move _79, const true)</td></tr></table>>];
    bb34__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_77<br/></td></tr><tr><td align="left">_80 = StrictOraclePrice::max(move _81)</td></tr></table>>];
    bb35__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_1)<br/>StorageLive(_86)<br/>_86 = _2<br/></td></tr><tr><td align="left">_84 = User::get_spot_position(move _85, move _86)</td></tr></table>>];
    bb36__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb37__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_87 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb38__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_83 as Continue).0: &amp;state::user::SpotPosition)<br/>_82 = _91<br/>StorageDead(_91)<br/>StorageDead(_83)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;(*_82)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_48<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb39__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb40__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_94 = SpotPosition::get_signed_token_amount(move _95, move _96)</td></tr></table>>];
    bb42__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb43__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_100 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb44__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_93 as Continue).0: i128)<br/>_92 = _104<br/>StorageDead(_104)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_82)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_48<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _114)</td></tr></table>>];
    bb45__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb46__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_112 = &amp;(*_113)<br/>StorageDead(_114)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_77<br/>_116 = &amp;(*_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = _92<br/>_118 = Option::&lt;i128&gt;::Some(move _119)<br/>StorageDead(_119)<br/>StorageLive(_120)<br/>_120 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_110 = SpotPosition::simulate_fills_both_sides(move _111, move _112, move _116, move _118, move _120)</td></tr></table>>];
    bb48__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;std::result::Result&lt;[OrderFillSimulation; 2], error::ErrorCode&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb49__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_121 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb50__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_109 as Continue).0: [state::user::OrderFillSimulation; 2])<br/>_108 = _125<br/>StorageDead(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;_48<br/>StorageLive(_128)<br/>_128 = &amp;_77<br/>StorageLive(_129)<br/>_129 = &amp;_24<br/>_126 = {closure@programs/drift/src/math/orders.rs:996:14: 996:26} { spot_market: move _127, strict_oracle_price: move _128, user_custom_margin_ratio: move _129 }<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">_107 = std::array::&lt;impl [OrderFillSimulation; 2]&gt;::map::&lt;{closure@programs/drift/src/math/orders.rs:996:14: 996:26}, OrderFillSimulation&gt;(move _108, move _126)</td></tr></table>>];
    bb51__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb52__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_108)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_108)<br/>StorageLive(_105)<br/>_105 = _107[0 of 2]<br/>StorageLive(_106)<br/>_106 = _107[1 of 2]<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = _106<br/>StorageLive(_133)<br/>_133 = _105<br/></td></tr><tr><td align="left">_131 = OrderFillSimulation::riskier_side(move _132, move _133)</td></tr></table>>];
    bb54__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_130)<br/>_130 = (_131.0: i128)<br/>StorageDead(_131)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = _130<br/>_135 = Lt(move _136, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb55__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;_3<br/>StorageLive(_139)<br/>_746 = const _<br/>_139 = &amp;(*_746)<br/></td></tr><tr><td align="left">_137 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _138, move _139)</td></tr></table>>];
    bb56__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb57__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = (_105.4: i128)<br/>StorageLive(_147)<br/>_147 = (_106.4: i128)<br/></td></tr><tr><td align="left">_145 = &lt;i128 as SafeMath&gt;::safe_sub(move _146, move _147)</td></tr></table>>];
    bb58__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb59__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_148 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb60__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_144 as Continue).0: i128)<br/>_143 = _152<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">_142 = &lt;i128 as Ord&gt;::max(move _143, const 0_i128)</td></tr></table>>];
    bb61__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb62__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = core::num::&lt;impl i128&gt;::abs(move _142)</td></tr></table>>];
    bb64__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_144)<br/>StorageLive(_153)<br/>_153 = (_105.0: i128)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = _153<br/>_155 = Lt(move _156, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb65__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = _153<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;_48<br/></td></tr><tr><td align="left">_162 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _163)</td></tr></table>>];
    bb66__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_161 = ((*_162).41: u32)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_77<br/>_164 = &amp;(*_165)<br/></td></tr><tr><td align="left">_159 = get_strict_token_value(move _160, move _161, move _164)</td></tr></table>>];
    bb67__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb68__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_166 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb69__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_158 as Continue).0: i128)<br/>_157 = _170<br/>StorageDead(_170)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;_48<br/></td></tr><tr><td align="left">_176 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb70__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb71__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = _153<br/></td></tr><tr><td align="left">_178 = core::num::&lt;impl i128&gt;::unsigned_abs(move _179)</td></tr></table>>];
    bb73__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_742 = const _<br/>_181 = &amp;(*_742)<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_174 = SpotMarket::get_liability_weight(move _175, move _178, move _180)</td></tr></table>>];
    bb74__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">_173 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _174)</td></tr></table>>];
    bb75__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>_183 = discriminant(_173)<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb76__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_187)<br/>_187 = ((_173 as Continue).0: u32)<br/>_172 = _187<br/>StorageDead(_187)<br/>StorageLive(_188)<br/>_188 = _25<br/></td></tr><tr><td align="left">_171 = &lt;u32 as Ord&gt;::max(move _172, move _188)</td></tr></table>>];
    bb77__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = ((_173 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_186)<br/>_186 = _184<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _186)</td></tr></table>>];
    bb78__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_172)<br/>StorageDead(_181)<br/>StorageDead(_176)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_172)<br/>StorageDead(_181)<br/>StorageDead(_176)<br/>StorageDead(_173)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = _157<br/></td></tr><tr><td align="left">_195 = core::num::&lt;impl i128&gt;::abs(move _196)</td></tr></table>>];
    bb80__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = _171<br/></td></tr><tr><td align="left">_202 = &lt;u32 as SafeMath&gt;::safe_sub(move _203, const _)</td></tr></table>>];
    bb81__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/></td></tr><tr><td align="left">_201 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _202)</td></tr></table>>];
    bb82__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>_204 = discriminant(_201)<br/></td></tr><tr><td align="left">switchInt(move _204)</td></tr></table>>];
    bb83__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_201 as Continue).0: u32)<br/>_200 = _208<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">_199 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _200)</td></tr></table>>];
    bb84__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_201 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_207)<br/>_207 = _205<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _207)</td></tr></table>>];
    bb85__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/></td></tr><tr><td align="left">_198 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _199)</td></tr></table>>];
    bb87__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_209 = discriminant(_198)<br/></td></tr><tr><td align="left">switchInt(move _209)</td></tr></table>>];
    bb88__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_213)<br/>_213 = ((_198 as Continue).0: i128)<br/>_197 = _213<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_194 = &lt;i128 as SafeMath&gt;::safe_mul(move _195, move _197)</td></tr></table>>];
    bb89__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_198 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_212)<br/>_212 = _210<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _212)</td></tr></table>>];
    bb90__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">_193 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _194)</td></tr></table>>];
    bb92__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_214 = discriminant(_193)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb93__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = ((_193 as Continue).0: i128)<br/>_192 = _218<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_191 = &lt;i128 as SafeMath&gt;::safe_div(move _192, const _)</td></tr></table>>];
    bb94__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_193 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_217)<br/>_217 = _215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _217)</td></tr></table>>];
    bb95__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/></td></tr><tr><td align="left">_190 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _191)</td></tr></table>>];
    bb97__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_219 = discriminant(_190)<br/></td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb98__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = ((_190 as Continue).0: i128)<br/>_189 = _223<br/>StorageDead(_223)<br/>StorageDead(_201)<br/>StorageDead(_198)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = _141<br/>StorageLive(_228)<br/>_228 = _189<br/></td></tr><tr><td align="left">_226 = &lt;i128 as SafeMath&gt;::safe_add(move _227, move _228)</td></tr></table>>];
    bb99__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_190 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_222)<br/>_222 = _220<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _222)</td></tr></table>>];
    bb100__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_225 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _226)</td></tr></table>>];
    bb102__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_229 = discriminant(_225)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb103__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_225 as Continue).0: i128)<br/>_224 = _233<br/>StorageDead(_233)<br/>_141 = move _224<br/>StorageDead(_224)<br/>StorageDead(_225)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = _153<br/></td></tr><tr><td align="left">_237 = core::num::&lt;impl i128&gt;::abs(move _238)</td></tr></table>>];
    bb104__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_225 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb105__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_224)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/></td></tr><tr><td align="left">_236 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(move _237)</td></tr></table>>];
    bb107__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/></td></tr><tr><td align="left">_235 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _236)</td></tr></table>>];
    bb108__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_239 = discriminant(_235)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb109__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_235 as Continue).0: u64)<br/>_234 = _243<br/>StorageDead(_243)<br/>_29 = move _234<br/>StorageDead(_234)<br/>StorageDead(_235)<br/>_153 = const 0_i128<br/>_154 = const ()<br/>StorageDead(_189)<br/>StorageDead(_171)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_235 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb111__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>StorageDead(_234)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_154 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = &amp;_48<br/></td></tr><tr><td align="left">_249 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _250)</td></tr></table>>];
    bb114__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_248 = &amp;(*_249)<br/>StorageDead(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = _153<br/></td></tr><tr><td align="left">_251 = core::num::&lt;impl i128&gt;::unsigned_abs(move _252)</td></tr></table>>];
    bb115__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageLive(_253)<br/>_253 = (_77.0: i64)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_741 = const _<br/>_255 = &amp;(*_741)<br/>_254 = &amp;(*_255)<br/></td></tr><tr><td align="left">_247 = SpotMarket::get_asset_weight(move _248, move _251, move _253, move _254)</td></tr></table>>];
    bb116__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">_246 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _247)</td></tr></table>>];
    bb117__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>_257 = discriminant(_246)<br/></td></tr><tr><td align="left">switchInt(move _257)</td></tr></table>>];
    bb118__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_261)<br/>_261 = ((_246 as Continue).0: u32)<br/>_245 = _261<br/>StorageDead(_261)<br/>StorageLive(_262)<br/>_262 = _27<br/></td></tr><tr><td align="left">_244 = &lt;u32 as Ord&gt;::min(move _245, move _262)</td></tr></table>>];
    bb119__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_246 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_260)<br/>_260 = _258<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _260)</td></tr></table>>];
    bb120__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_245)<br/>StorageDead(_255)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_245)<br/>StorageDead(_255)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = _244<br/></td></tr><tr><td align="left">_281 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _282)</td></tr></table>>];
    bb122__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/></td></tr><tr><td align="left">_280 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _281)</td></tr></table>>];
    bb123__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>_283 = discriminant(_280)<br/></td></tr><tr><td align="left">switchInt(move _283)</td></tr></table>>];
    bb124__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = ((_280 as Continue).0: i128)<br/>_279 = _287<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">_278 = &lt;i128 as SafeMath&gt;::safe_sub(move _279, const _)</td></tr></table>>];
    bb125__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = ((_280 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_286)<br/>_286 = _284<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _286)</td></tr></table>>];
    bb126__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_279)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/></td></tr><tr><td align="left">_277 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _278)</td></tr></table>>];
    bb128__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>_288 = discriminant(_277)<br/></td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb129__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_277 as Continue).0: i128)<br/>_276 = _292<br/>StorageDead(_292)<br/></td></tr><tr><td align="left">_275 = core::num::&lt;impl i128&gt;::abs(move _276)</td></tr></table>>];
    bb130__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_277 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_291)<br/>_291 = _289<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _291)</td></tr></table>>];
    bb131__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = _80<br/></td></tr><tr><td align="left">_295 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _296)</td></tr></table>>];
    bb133__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/></td></tr><tr><td align="left">_294 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _295)</td></tr></table>>];
    bb134__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>_297 = discriminant(_294)<br/></td></tr><tr><td align="left">switchInt(move _297)</td></tr></table>>];
    bb135__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_301)<br/>_301 = ((_294 as Continue).0: i128)<br/>_293 = _301<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">_274 = &lt;i128 as SafeMath&gt;::safe_mul(move _275, move _293)</td></tr></table>>];
    bb136__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = ((_294 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_300)<br/>_300 = _298<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _300)</td></tr></table>>];
    bb137__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_298)<br/>StorageDead(_293)<br/>StorageDead(_275)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">_273 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _274)</td></tr></table>>];
    bb139__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_302 = discriminant(_273)<br/></td></tr><tr><td align="left">switchInt(move _302)</td></tr></table>>];
    bb140__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_306)<br/>_306 = ((_273 as Continue).0: i128)<br/>_272 = _306<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_271 = &lt;i128 as SafeMath&gt;::safe_div(move _272, const _)</td></tr></table>>];
    bb141__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_303)<br/>_303 = ((_273 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_305)<br/>_305 = _303<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _305)</td></tr></table>>];
    bb142__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/></td></tr><tr><td align="left">_270 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _271)</td></tr></table>>];
    bb144__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>_307 = discriminant(_270)<br/></td></tr><tr><td align="left">switchInt(move _307)</td></tr></table>>];
    bb145__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_311)<br/>_311 = ((_270 as Continue).0: i128)<br/>_269 = _311<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">_268 = &lt;i128 as SafeMath&gt;::safe_mul(move _269, const _)</td></tr></table>>];
    bb146__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_270 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_310)<br/>_310 = _308<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _310)</td></tr></table>>];
    bb147__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/></td></tr><tr><td align="left">_267 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _268)</td></tr></table>>];
    bb149__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_312 = discriminant(_267)<br/></td></tr><tr><td align="left">switchInt(move _312)</td></tr></table>>];
    bb150__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_316)<br/>_316 = ((_267 as Continue).0: i128)<br/>_266 = _316<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_265 = &lt;i128 as SafeMath&gt;::safe_div(move _266, const _)</td></tr></table>>];
    bb151__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_313)<br/>_313 = ((_267 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_315)<br/>_315 = _313<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _315)</td></tr></table>>];
    bb152__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/></td></tr><tr><td align="left">_264 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _265)</td></tr></table>>];
    bb154__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_317 = discriminant(_264)<br/></td></tr><tr><td align="left">switchInt(move _317)</td></tr></table>>];
    bb155__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_321)<br/>_321 = ((_264 as Continue).0: i128)<br/>_263 = _321<br/>StorageDead(_321)<br/>StorageDead(_294)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = _29<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = _141<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_342 = &amp;_48<br/></td></tr><tr><td align="left">_341 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _342)</td></tr></table>>];
    bb156__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_318)<br/>_318 = ((_264 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_320)<br/>_320 = _318<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _320)</td></tr></table>>];
    bb157__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">_340 = (*_341)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">_339 = SpotMarket::get_precision(move _340)</td></tr></table>>];
    bb159__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/></td></tr><tr><td align="left">_338 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _339)</td></tr></table>>];
    bb160__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/></td></tr><tr><td align="left">_337 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _338)</td></tr></table>>];
    bb161__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>_343 = discriminant(_337)<br/></td></tr><tr><td align="left">switchInt(move _343)</td></tr></table>>];
    bb162__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_347)<br/>_347 = ((_337 as Continue).0: i128)<br/>_336 = _347<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_334 = &lt;i128 as SafeMath&gt;::safe_mul(move _335, move _336)</td></tr></table>>];
    bb163__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = ((_337 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_346)<br/>_346 = _344<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _346)</td></tr></table>>];
    bb164__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_344)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_333 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _334)</td></tr></table>>];
    bb166__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>_348 = discriminant(_333)<br/></td></tr><tr><td align="left">switchInt(move _348)</td></tr></table>>];
    bb167__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_352)<br/>_352 = ((_333 as Continue).0: i128)<br/>_332 = _352<br/>StorageDead(_352)<br/>StorageLive(_353)<br/>_353 = _263<br/></td></tr><tr><td align="left">_331 = &lt;i128 as SafeMath&gt;::safe_div(move _332, move _353)</td></tr></table>>];
    bb168__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_349)<br/>_349 = ((_333 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_351)<br/>_351 = _349<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _351)</td></tr></table>>];
    bb169__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageDead(_332)<br/></td></tr><tr><td align="left">_330 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _331)</td></tr></table>>];
    bb171__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>_354 = discriminant(_330)<br/></td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb172__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = ((_330 as Continue).0: i128)<br/>_329 = _358<br/>StorageDead(_358)<br/></td></tr><tr><td align="left">_328 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(move _329)</td></tr></table>>];
    bb173__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_330 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_357)<br/>_357 = _355<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _357)</td></tr></table>>];
    bb174__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">_327 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _328)</td></tr></table>>];
    bb176__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_359 = discriminant(_327)<br/></td></tr><tr><td align="left">switchInt(move _359)</td></tr></table>>];
    bb177__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_363)<br/>_363 = ((_327 as Continue).0: u64)<br/>_326 = _363<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">_324 = &lt;u64 as SafeMath&gt;::safe_add(move _325, move _326)</td></tr></table>>];
    bb178__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_360)<br/>_360 = ((_327 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_362)<br/>_362 = _360<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _362)</td></tr></table>>];
    bb179__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_360)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_323 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _324)</td></tr></table>>];
    bb181__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_364 = discriminant(_323)<br/></td></tr><tr><td align="left">switchInt(move _364)</td></tr></table>>];
    bb182__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageLive(_368)<br/>_368 = ((_323 as Continue).0: u64)<br/>_322 = _368<br/>StorageDead(_368)<br/>_29 = move _322<br/>StorageDead(_322)<br/>StorageDead(_341)<br/>StorageDead(_337)<br/>StorageDead(_333)<br/>StorageDead(_330)<br/>StorageDead(_327)<br/>StorageDead(_323)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = _153<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_376 = _29<br/></td></tr><tr><td align="left">_375 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _376)</td></tr></table>>];
    bb183__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_365)<br/>_365 = ((_323 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_367)<br/>_367 = _365<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _367)</td></tr></table>>];
    bb184__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _375)</td></tr></table>>];
    bb186__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>_377 = discriminant(_374)<br/></td></tr><tr><td align="left">switchInt(move _377)</td></tr></table>>];
    bb187__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageLive(_381)<br/>_381 = ((_374 as Continue).0: i128)<br/>_373 = _381<br/>StorageDead(_381)<br/></td></tr><tr><td align="left">_371 = &lt;i128 as SafeMath&gt;::safe_sub(move _372, move _373)</td></tr></table>>];
    bb188__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_378)<br/>_378 = ((_374 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_380)<br/>_380 = _378<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _380)</td></tr></table>>];
    bb189__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageDead(_371)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageDead(_372)<br/></td></tr><tr><td align="left">_370 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _371)</td></tr></table>>];
    bb191__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>_382 = discriminant(_370)<br/></td></tr><tr><td align="left">switchInt(move _382)</td></tr></table>>];
    bb192__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = ((_370 as Continue).0: i128)<br/>_369 = _386<br/>StorageDead(_386)<br/>_130 = move _369<br/>StorageDead(_369)<br/>StorageDead(_374)<br/>StorageDead(_370)<br/>_134 = const ()<br/>StorageDead(_263)<br/>StorageDead(_244)<br/>StorageDead(_153)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageLive(_383)<br/>_383 = ((_370 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_385)<br/>_385 = _383<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _385)</td></tr></table>>];
    bb194__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>StorageDead(_383)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_387)<br/>StorageLive(_388)<br/>_388 = _130<br/>_387 = Gt(move _388, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _387)</td></tr></table>>];
    bb198__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>_390 = &amp;_3<br/>StorageLive(_391)<br/>_745 = const _<br/>_391 = &amp;(*_745)<br/></td></tr><tr><td align="left">_389 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _390, move _391)</td></tr></table>>];
    bb199__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left">switchInt(move _389)</td></tr></table>>];
    bb200__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_390)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_398 = (_106.4: i128)<br/>StorageLive(_399)<br/>_399 = (_105.4: i128)<br/></td></tr><tr><td align="left">_397 = &lt;i128 as SafeMath&gt;::safe_sub(move _398, move _399)</td></tr></table>>];
    bb201__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_398)<br/></td></tr><tr><td align="left">_396 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _397)</td></tr></table>>];
    bb202__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>_400 = discriminant(_396)<br/></td></tr><tr><td align="left">switchInt(move _400)</td></tr></table>>];
    bb203__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageLive(_404)<br/>_404 = ((_396 as Continue).0: i128)<br/>_395 = _404<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_394 = &lt;i128 as Ord&gt;::max(move _395, const 0_i128)</td></tr></table>>];
    bb204__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_401)<br/>_401 = ((_396 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_403)<br/>_403 = _401<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _403)</td></tr></table>>];
    bb205__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_401)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_396)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/></td></tr><tr><td align="left">_393 = core::num::&lt;impl i128&gt;::abs(move _394)</td></tr></table>>];
    bb207__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_396)<br/>StorageLive(_405)<br/>_405 = (_106.0: i128)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = _405<br/>_407 = Gt(move _408, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _407)</td></tr></table>>];
    bb208__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>_412 = _405<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>_415 = &amp;_48<br/></td></tr><tr><td align="left">_414 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _415)</td></tr></table>>];
    bb209__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/>_413 = ((*_414).41: u32)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>_417 = &amp;_77<br/>_416 = &amp;(*_417)<br/></td></tr><tr><td align="left">_411 = get_strict_token_value(move _412, move _413, move _416)</td></tr></table>>];
    bb210__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_413)<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">_410 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _411)</td></tr></table>>];
    bb211__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>_418 = discriminant(_410)<br/></td></tr><tr><td align="left">switchInt(move _418)</td></tr></table>>];
    bb212__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_422)<br/>_422 = ((_410 as Continue).0: i128)<br/>_409 = _422<br/>StorageDead(_422)<br/>StorageDead(_417)<br/>StorageDead(_414)<br/>StorageDead(_410)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>_429 = &amp;_48<br/></td></tr><tr><td align="left">_428 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _429)</td></tr></table>>];
    bb213__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageLive(_419)<br/>_419 = ((_410 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_421)<br/>_421 = _419<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _421)</td></tr></table>>];
    bb214__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_414)<br/>StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">_427 = &amp;(*_428)<br/>StorageDead(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_431 = _405<br/></td></tr><tr><td align="left">_430 = core::num::&lt;impl i128&gt;::unsigned_abs(move _431)</td></tr></table>>];
    bb216__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageLive(_432)<br/>_432 = (_77.0: i64)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>_744 = const _<br/>_434 = &amp;(*_744)<br/>_433 = &amp;(*_434)<br/></td></tr><tr><td align="left">_426 = SpotMarket::get_asset_weight(move _427, move _430, move _432, move _433)</td></tr></table>>];
    bb217__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_432)<br/>StorageDead(_430)<br/>StorageDead(_427)<br/></td></tr><tr><td align="left">_425 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _426)</td></tr></table>>];
    bb218__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>_436 = discriminant(_425)<br/></td></tr><tr><td align="left">switchInt(move _436)</td></tr></table>>];
    bb219__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageLive(_440)<br/>_440 = ((_425 as Continue).0: u32)<br/>_424 = _440<br/>StorageDead(_440)<br/>StorageLive(_441)<br/>_441 = _27<br/></td></tr><tr><td align="left">_423 = &lt;u32 as Ord&gt;::min(move _424, move _441)</td></tr></table>>];
    bb220__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_437)<br/>_437 = ((_425 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_439)<br/>_439 = _437<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _439)</td></tr></table>>];
    bb221__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_437)<br/>StorageDead(_424)<br/>StorageDead(_434)<br/>StorageDead(_428)<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/>StorageDead(_424)<br/>StorageDead(_434)<br/>StorageDead(_428)<br/>StorageDead(_425)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>_449 = _409<br/></td></tr><tr><td align="left">_448 = core::num::&lt;impl i128&gt;::abs(move _449)</td></tr></table>>];
    bb223__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = _423<br/></td></tr><tr><td align="left">_455 = &lt;u32 as SafeMath&gt;::safe_sub(const _, move _456)</td></tr></table>>];
    bb224__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/></td></tr><tr><td align="left">_454 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _455)</td></tr></table>>];
    bb225__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>_457 = discriminant(_454)<br/></td></tr><tr><td align="left">switchInt(move _457)</td></tr></table>>];
    bb226__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageLive(_461)<br/>_461 = ((_454 as Continue).0: u32)<br/>_453 = _461<br/>StorageDead(_461)<br/></td></tr><tr><td align="left">_452 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _453)</td></tr></table>>];
    bb227__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageLive(_458)<br/>_458 = ((_454 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_460)<br/>_460 = _458<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _460)</td></tr></table>>];
    bb228__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_453)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/></td></tr><tr><td align="left">_451 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _452)</td></tr></table>>];
    bb230__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/>_462 = discriminant(_451)<br/></td></tr><tr><td align="left">switchInt(move _462)</td></tr></table>>];
    bb231__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_466)<br/>_466 = ((_451 as Continue).0: i128)<br/>_450 = _466<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">_447 = &lt;i128 as SafeMath&gt;::safe_mul(move _448, move _450)</td></tr></table>>];
    bb232__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageLive(_463)<br/>_463 = ((_451 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_465)<br/>_465 = _463<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _465)</td></tr></table>>];
    bb233__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_463)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">_446 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _447)</td></tr></table>>];
    bb235__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>_467 = discriminant(_446)<br/></td></tr><tr><td align="left">switchInt(move _467)</td></tr></table>>];
    bb236__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_471)<br/>_471 = ((_446 as Continue).0: i128)<br/>_445 = _471<br/>StorageDead(_471)<br/></td></tr><tr><td align="left">_444 = &lt;i128 as SafeMath&gt;::safe_div(move _445, const _)</td></tr></table>>];
    bb237__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_468)<br/>_468 = ((_446 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_470)<br/>_470 = _468<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _470)</td></tr></table>>];
    bb238__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/>StorageDead(_468)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/></td></tr><tr><td align="left">_443 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _444)</td></tr></table>>];
    bb240__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>_472 = discriminant(_443)<br/></td></tr><tr><td align="left">switchInt(move _472)</td></tr></table>>];
    bb241__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageLive(_476)<br/>_476 = ((_443 as Continue).0: i128)<br/>_442 = _476<br/>StorageDead(_476)<br/>StorageDead(_454)<br/>StorageDead(_451)<br/>StorageDead(_446)<br/>StorageDead(_443)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_480 = _393<br/>StorageLive(_481)<br/>_481 = _442<br/></td></tr><tr><td align="left">_479 = &lt;i128 as SafeMath&gt;::safe_add(move _480, move _481)</td></tr></table>>];
    bb242__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_473)<br/>_473 = ((_443 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_475)<br/>_475 = _473<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _475)</td></tr></table>>];
    bb243__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_473)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>StorageDead(_480)<br/></td></tr><tr><td align="left">_478 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _479)</td></tr></table>>];
    bb245__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>_482 = discriminant(_478)<br/></td></tr><tr><td align="left">switchInt(move _482)</td></tr></table>>];
    bb246__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_486)<br/>_486 = ((_478 as Continue).0: i128)<br/>_477 = _486<br/>StorageDead(_486)<br/>_393 = move _477<br/>StorageDead(_477)<br/>StorageDead(_478)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>_491 = _405<br/></td></tr><tr><td align="left">_490 = core::num::&lt;impl i128&gt;::abs(move _491)</td></tr></table>>];
    bb247__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageLive(_483)<br/>_483 = ((_478 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_485)<br/>_485 = _483<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _485)</td></tr></table>>];
    bb248__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>StorageDead(_483)<br/>StorageDead(_477)<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/></td></tr><tr><td align="left">_489 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(move _490)</td></tr></table>>];
    bb250__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/></td></tr><tr><td align="left">_488 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _489)</td></tr></table>>];
    bb251__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>_492 = discriminant(_488)<br/></td></tr><tr><td align="left">switchInt(move _492)</td></tr></table>>];
    bb252__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageLive(_496)<br/>_496 = ((_488 as Continue).0: u64)<br/>_487 = _496<br/>StorageDead(_496)<br/>_29 = move _487<br/>StorageDead(_487)<br/>StorageDead(_488)<br/>_405 = const 0_i128<br/>_406 = const ()<br/>StorageDead(_442)<br/>StorageDead(_423)<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageLive(_493)<br/>_493 = ((_488 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_495)<br/>_495 = _493<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _495)</td></tr></table>>];
    bb254__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>StorageDead(_493)<br/>StorageDead(_487)<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb255__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>_406 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_406)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>_503 = &amp;_48<br/></td></tr><tr><td align="left">_502 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _503)</td></tr></table>>];
    bb257__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">_501 = &amp;(*_502)<br/>StorageDead(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = _405<br/></td></tr><tr><td align="left">_504 = core::num::&lt;impl i128&gt;::unsigned_abs(move _505)</td></tr></table>>];
    bb258__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>_743 = const _<br/>_507 = &amp;(*_743)<br/>_506 = &amp;(*_507)<br/></td></tr><tr><td align="left">_500 = SpotMarket::get_liability_weight(move _501, move _504, move _506)</td></tr></table>>];
    bb259__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>StorageDead(_504)<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">_499 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _500)</td></tr></table>>];
    bb260__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_500)<br/>_509 = discriminant(_499)<br/></td></tr><tr><td align="left">switchInt(move _509)</td></tr></table>>];
    bb261__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageLive(_513)<br/>_513 = ((_499 as Continue).0: u32)<br/>_498 = _513<br/>StorageDead(_513)<br/>StorageLive(_514)<br/>_514 = _25<br/></td></tr><tr><td align="left">_497 = &lt;u32 as Ord&gt;::max(move _498, move _514)</td></tr></table>>];
    bb262__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageLive(_510)<br/>_510 = ((_499 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_512)<br/>_512 = _510<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _512)</td></tr></table>>];
    bb263__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/>StorageDead(_510)<br/>StorageDead(_498)<br/>StorageDead(_507)<br/>StorageDead(_502)<br/>StorageDead(_499)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_514)<br/>StorageDead(_498)<br/>StorageDead(_507)<br/>StorageDead(_502)<br/>StorageDead(_499)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>_534 = _497<br/></td></tr><tr><td align="left">_533 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _534)</td></tr></table>>];
    bb265__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/></td></tr><tr><td align="left">_532 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _533)</td></tr></table>>];
    bb266__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>_535 = discriminant(_532)<br/></td></tr><tr><td align="left">switchInt(move _535)</td></tr></table>>];
    bb267__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageLive(_539)<br/>_539 = ((_532 as Continue).0: i128)<br/>_531 = _539<br/>StorageDead(_539)<br/></td></tr><tr><td align="left">_530 = &lt;i128 as SafeMath&gt;::safe_sub(move _531, const _)</td></tr></table>>];
    bb268__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageLive(_536)<br/>_536 = ((_532 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_538)<br/>_538 = _536<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _538)</td></tr></table>>];
    bb269__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>StorageDead(_536)<br/>StorageDead(_531)<br/>StorageDead(_530)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_531)<br/></td></tr><tr><td align="left">_529 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _530)</td></tr></table>>];
    bb271__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>_540 = discriminant(_529)<br/></td></tr><tr><td align="left">switchInt(move _540)</td></tr></table>>];
    bb272__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageLive(_544)<br/>_544 = ((_529 as Continue).0: i128)<br/>_528 = _544<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">_527 = core::num::&lt;impl i128&gt;::abs(move _528)</td></tr></table>>];
    bb273__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageLive(_541)<br/>_541 = ((_529 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_543)<br/>_543 = _541<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _543)</td></tr></table>>];
    bb274__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>StorageDead(_541)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>_548 = _80<br/></td></tr><tr><td align="left">_547 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _548)</td></tr></table>>];
    bb276__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/></td></tr><tr><td align="left">_546 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _547)</td></tr></table>>];
    bb277__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_547)<br/>_549 = discriminant(_546)<br/></td></tr><tr><td align="left">switchInt(move _549)</td></tr></table>>];
    bb278__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageLive(_553)<br/>_553 = ((_546 as Continue).0: i128)<br/>_545 = _553<br/>StorageDead(_553)<br/></td></tr><tr><td align="left">_526 = &lt;i128 as SafeMath&gt;::safe_mul(move _527, move _545)</td></tr></table>>];
    bb279__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageLive(_550)<br/>_550 = ((_546 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_552)<br/>_552 = _550<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _552)</td></tr></table>>];
    bb280__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/>StorageDead(_550)<br/>StorageDead(_545)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_527)<br/></td></tr><tr><td align="left">_525 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _526)</td></tr></table>>];
    bb282__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>_554 = discriminant(_525)<br/></td></tr><tr><td align="left">switchInt(move _554)</td></tr></table>>];
    bb283__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageLive(_558)<br/>_558 = ((_525 as Continue).0: i128)<br/>_524 = _558<br/>StorageDead(_558)<br/></td></tr><tr><td align="left">_523 = &lt;i128 as SafeMath&gt;::safe_div(move _524, const _)</td></tr></table>>];
    bb284__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageLive(_555)<br/>_555 = ((_525 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_557)<br/>_557 = _555<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _557)</td></tr></table>>];
    bb285__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>StorageDead(_555)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/></td></tr><tr><td align="left">_522 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _523)</td></tr></table>>];
    bb287__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>_559 = discriminant(_522)<br/></td></tr><tr><td align="left">switchInt(move _559)</td></tr></table>>];
    bb288__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageLive(_563)<br/>_563 = ((_522 as Continue).0: i128)<br/>_521 = _563<br/>StorageDead(_563)<br/></td></tr><tr><td align="left">_520 = &lt;i128 as SafeMath&gt;::safe_mul(move _521, const _)</td></tr></table>>];
    bb289__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageLive(_560)<br/>_560 = ((_522 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_562)<br/>_562 = _560<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _562)</td></tr></table>>];
    bb290__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageDead(_560)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb291__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/></td></tr><tr><td align="left">_519 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _520)</td></tr></table>>];
    bb292__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>_564 = discriminant(_519)<br/></td></tr><tr><td align="left">switchInt(move _564)</td></tr></table>>];
    bb293__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageLive(_568)<br/>_568 = ((_519 as Continue).0: i128)<br/>_518 = _568<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">_517 = &lt;i128 as SafeMath&gt;::safe_div(move _518, const _)</td></tr></table>>];
    bb294__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageLive(_565)<br/>_565 = ((_519 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_567)<br/>_567 = _565<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _567)</td></tr></table>>];
    bb295__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>StorageDead(_565)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb296__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/></td></tr><tr><td align="left">_516 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _517)</td></tr></table>>];
    bb297__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>_569 = discriminant(_516)<br/></td></tr><tr><td align="left">switchInt(move _569)</td></tr></table>>];
    bb298__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageLive(_573)<br/>_573 = ((_516 as Continue).0: i128)<br/>_515 = _573<br/>StorageDead(_573)<br/>StorageDead(_546)<br/>StorageDead(_532)<br/>StorageDead(_529)<br/>StorageDead(_525)<br/>StorageDead(_522)<br/>StorageDead(_519)<br/>StorageDead(_516)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>_577 = _29<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>_587 = _393<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>_594 = &amp;_48<br/></td></tr><tr><td align="left">_593 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _594)</td></tr></table>>];
    bb299__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageLive(_570)<br/>_570 = ((_516 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_572)<br/>_572 = _570<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _572)</td></tr></table>>];
    bb300__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_572)<br/>StorageDead(_570)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb301__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">_592 = (*_593)<br/>StorageDead(_594)<br/></td></tr><tr><td align="left">_591 = SpotMarket::get_precision(move _592)</td></tr></table>>];
    bb302__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/></td></tr><tr><td align="left">_590 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _591)</td></tr></table>>];
    bb303__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/></td></tr><tr><td align="left">_589 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _590)</td></tr></table>>];
    bb304__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_590)<br/>_595 = discriminant(_589)<br/></td></tr><tr><td align="left">switchInt(move _595)</td></tr></table>>];
    bb305__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageLive(_599)<br/>_599 = ((_589 as Continue).0: i128)<br/>_588 = _599<br/>StorageDead(_599)<br/></td></tr><tr><td align="left">_586 = &lt;i128 as SafeMath&gt;::safe_mul(move _587, move _588)</td></tr></table>>];
    bb306__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageLive(_596)<br/>_596 = ((_589 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_598)<br/>_598 = _596<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _598)</td></tr></table>>];
    bb307__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>StorageDead(_596)<br/>StorageDead(_588)<br/>StorageDead(_587)<br/>StorageDead(_586)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>StorageDead(_587)<br/></td></tr><tr><td align="left">_585 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _586)</td></tr></table>>];
    bb309__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/>_600 = discriminant(_585)<br/></td></tr><tr><td align="left">switchInt(move _600)</td></tr></table>>];
    bb310__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageLive(_604)<br/>_604 = ((_585 as Continue).0: i128)<br/>_584 = _604<br/>StorageDead(_604)<br/>StorageLive(_605)<br/>_605 = _515<br/></td></tr><tr><td align="left">_583 = &lt;i128 as SafeMath&gt;::safe_div(move _584, move _605)</td></tr></table>>];
    bb311__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageLive(_601)<br/>_601 = ((_585 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_603)<br/>_603 = _601<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _603)</td></tr></table>>];
    bb312__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/>StorageDead(_601)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_605)<br/>StorageDead(_584)<br/></td></tr><tr><td align="left">_582 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _583)</td></tr></table>>];
    bb314__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>_606 = discriminant(_582)<br/></td></tr><tr><td align="left">switchInt(move _606)</td></tr></table>>];
    bb315__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageLive(_610)<br/>_610 = ((_582 as Continue).0: i128)<br/>_581 = _610<br/>StorageDead(_610)<br/></td></tr><tr><td align="left">_580 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(move _581)</td></tr></table>>];
    bb316__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageLive(_607)<br/>_607 = ((_582 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_609)<br/>_609 = _607<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _609)</td></tr></table>>];
    bb317__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/>StorageDead(_607)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/></td></tr><tr><td align="left">_579 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _580)</td></tr></table>>];
    bb319__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_580)<br/>_611 = discriminant(_579)<br/></td></tr><tr><td align="left">switchInt(move _611)</td></tr></table>>];
    bb320__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageLive(_615)<br/>_615 = ((_579 as Continue).0: u64)<br/>_578 = _615<br/>StorageDead(_615)<br/></td></tr><tr><td align="left">_576 = &lt;u64 as SafeMath&gt;::safe_add(move _577, move _578)</td></tr></table>>];
    bb321__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageLive(_612)<br/>_612 = ((_579 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_614)<br/>_614 = _612<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _614)</td></tr></table>>];
    bb322__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>StorageDead(_612)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb323__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_577)<br/></td></tr><tr><td align="left">_575 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _576)</td></tr></table>>];
    bb324__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_576)<br/>_616 = discriminant(_575)<br/></td></tr><tr><td align="left">switchInt(move _616)</td></tr></table>>];
    bb325__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageLive(_620)<br/>_620 = ((_575 as Continue).0: u64)<br/>_574 = _620<br/>StorageDead(_620)<br/>_29 = move _574<br/>StorageDead(_574)<br/>StorageDead(_593)<br/>StorageDead(_589)<br/>StorageDead(_585)<br/>StorageDead(_582)<br/>StorageDead(_579)<br/>StorageDead(_575)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>_624 = _405<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>_628 = _29<br/></td></tr><tr><td align="left">_627 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _628)</td></tr></table>>];
    bb326__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageLive(_617)<br/>_617 = ((_575 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_619)<br/>_619 = _617<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _619)</td></tr></table>>];
    bb327__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>StorageDead(_617)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb328__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_628)<br/></td></tr><tr><td align="left">_626 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _627)</td></tr></table>>];
    bb329__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_627)<br/>_629 = discriminant(_626)<br/></td></tr><tr><td align="left">switchInt(move _629)</td></tr></table>>];
    bb330__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageLive(_633)<br/>_633 = ((_626 as Continue).0: i128)<br/>_625 = _633<br/>StorageDead(_633)<br/></td></tr><tr><td align="left">_623 = &lt;i128 as SafeMath&gt;::safe_sub(move _624, move _625)</td></tr></table>>];
    bb331__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageLive(_630)<br/>_630 = ((_626 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_632)<br/>_632 = _630<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _632)</td></tr></table>>];
    bb332__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_630)<br/>StorageDead(_625)<br/>StorageDead(_624)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb333__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_625)<br/>StorageDead(_624)<br/></td></tr><tr><td align="left">_622 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _623)</td></tr></table>>];
    bb334__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_623)<br/>_634 = discriminant(_622)<br/></td></tr><tr><td align="left">switchInt(move _634)</td></tr></table>>];
    bb335__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageLive(_638)<br/>_638 = ((_622 as Continue).0: i128)<br/>_621 = _638<br/>StorageDead(_638)<br/>_130 = move _621<br/>StorageDead(_621)<br/>StorageDead(_626)<br/>StorageDead(_622)<br/>_134 = const ()<br/>StorageDead(_515)<br/>StorageDead(_497)<br/>StorageDead(_405)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb336__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageLive(_635)<br/>_635 = ((_622 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_637)<br/>_637 = _635<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _637)</td></tr></table>>];
    bb337__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>StorageDead(_635)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb338__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb340__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">_134 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb341__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_387)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb342__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>_641 = _30<br/>_640 = Le(move _641, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _640)</td></tr></table>>];
    bb343__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>StorageLive(_643)<br/>_643 = _29<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>_646 = &amp;_48<br/></td></tr><tr><td align="left">_645 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _646)</td></tr></table>>];
    bb344__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/>_644 = ((*_645).25: u64)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_base_asset_amount(move _643, move _644)</td></tr></table>>];
    bb345__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageDead(_643)<br/>StorageDead(_645)<br/>StorageDead(_640)<br/>StorageDead(_639)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb346__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>_639 = const ()<br/>StorageDead(_640)<br/>StorageDead(_639)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>_653 = &amp;_48<br/>_652 = &amp;(*_653)<br/></td></tr><tr><td align="left">_651 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _652)</td></tr></table>>];
    bb347__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">_650 = &amp;(*_651)<br/>StorageDead(_652)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_655 = _130<br/></td></tr><tr><td align="left">_654 = core::num::&lt;impl i128&gt;::unsigned_abs(move _655)</td></tr></table>>];
    bb348__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>_657 = &amp;_77<br/>_656 = &amp;(*_657)<br/>StorageLive(_658)<br/>_658 = _3<br/>StorageLive(_659)<br/>_659 = _25<br/>StorageLive(_660)<br/>_660 = _27<br/></td></tr><tr><td align="left">_649 = calculate_free_collateral_delta_for_spot(move _650, move _654, move _656, move _658, move _659, move _660)</td></tr></table>>];
    bb349__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_660)<br/>StorageDead(_659)<br/>StorageDead(_658)<br/>StorageDead(_656)<br/>StorageDead(_654)<br/>StorageDead(_650)<br/></td></tr><tr><td align="left">_648 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _649)</td></tr></table>>];
    bb350__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_649)<br/>_661 = discriminant(_648)<br/></td></tr><tr><td align="left">switchInt(move _661)</td></tr></table>>];
    bb351__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageLive(_665)<br/>_665 = ((_648 as Continue).0: u32)<br/>_647 = _665<br/>StorageDead(_665)<br/>StorageDead(_657)<br/>StorageDead(_653)<br/>StorageDead(_651)<br/>StorageDead(_648)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>_672 = &amp;_48<br/></td></tr><tr><td align="left">_671 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _672)</td></tr></table>>];
    bb352__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageLive(_662)<br/>_662 = ((_648 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_664)<br/>_664 = _662<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _664)</td></tr></table>>];
    bb353__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>StorageDead(_662)<br/>StorageDead(_657)<br/>StorageDead(_653)<br/>StorageDead(_651)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb354__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>_670 = ((*_671).41: u32)<br/>_669 = Gt(move _670, const 6_u32)<br/></td></tr><tr><td align="left">switchInt(move _669)</td></tr></table>>];
    bb355__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/>StorageDead(_670)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>_677 = &amp;_48<br/></td></tr><tr><td align="left">_676 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _677)</td></tr></table>>];
    bb356__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_677)<br/>_675 = ((*_676).41: u32)<br/>_678 = CheckedSub(_675, const 6_u32)<br/></td></tr><tr><td align="left">assert(!move (_678.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _675, const 6_u32)</td></tr></table>>];
    bb357__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">_674 = move (_678.0: u32)<br/>StorageDead(_675)<br/></td></tr><tr><td align="left">_673 = core::num::&lt;impl i128&gt;::pow(const 10_i128, move _674)</td></tr></table>>];
    bb358__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/>_668 = (move _673, const 1_i128)<br/>StorageDead(_673)<br/>StorageDead(_676)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb359__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/>StorageDead(_670)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>_683 = &amp;_48<br/></td></tr><tr><td align="left">_682 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _683)</td></tr></table>>];
    bb360__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_683)<br/>_681 = ((*_682).41: u32)<br/>_684 = CheckedSub(const 6_u32, _681)<br/></td></tr><tr><td align="left">assert(!move (_684.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const 6_u32, move _681)</td></tr></table>>];
    bb361__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">_680 = move (_684.0: u32)<br/>StorageDead(_681)<br/></td></tr><tr><td align="left">_679 = core::num::&lt;impl i128&gt;::pow(const 10_i128, move _680)</td></tr></table>>];
    bb362__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>_668 = (const 1_i128, move _679)<br/>StorageDead(_679)<br/>StorageDead(_682)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb363__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>StorageLive(_666)<br/>_666 = (_668.0: i128)<br/>StorageLive(_667)<br/>_667 = (_668.1: i128)<br/>StorageDead(_668)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>_686 = &amp;_30<br/>StorageLive(_687)<br/>_687 = &amp;_666<br/>StorageLive(_688)<br/>_688 = &amp;_667<br/>StorageLive(_689)<br/>_689 = &amp;_80<br/>StorageLive(_690)<br/>_690 = &amp;_48<br/>StorageLive(_691)<br/>_691 = &amp;_130<br/>StorageLive(_692)<br/>_692 = &amp;_77<br/>StorageLive(_693)<br/>_693 = &amp;_3<br/>StorageLive(_694)<br/>_694 = &amp;_25<br/>StorageLive(_695)<br/>_695 = &amp;_27<br/>_685 = {closure@programs/drift/src/math/orders.rs:1144:58: 1144:86} { free_collateral: move _686, numerator_scale: move _687, denominator_scale: move _688, max_oracle_price: move _689, spot_market: move _690, worst_case_token_amount: move _691, strict_oracle_price: move _692, direction: move _693, user_custom_liability_weight: move _694, user_custom_asset_weight: move _695 }<br/>StorageDead(_695)<br/>StorageDead(_694)<br/>StorageDead(_693)<br/>StorageDead(_692)<br/>StorageDead(_691)<br/>StorageDead(_690)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageDead(_687)<br/>StorageDead(_686)<br/>StorageLive(_696)<br/>_696 = const 0_u64<br/>StorageLive(_697)<br/>_697 = _647<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>StorageLive(_700)<br/>_700 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 6_i32 }<br/></td></tr><tr><td align="left">_699 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _700)</td></tr></table>>];
    bb364__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_700)<br/>StorageLive(_701)<br/>_701 = move _699<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb365__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>_706 = &amp;mut _701<br/>_705 = &amp;mut (*_706)<br/></td></tr><tr><td align="left">_704 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _705)</td></tr></table>>];
    bb366__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>_707 = discriminant(_704)<br/></td></tr><tr><td align="left">switchInt(move _707)</td></tr></table>>];
    bb367__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageLive(_711)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>_714 = &amp;_685<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>_716 = _697<br/>_715 = (move _716,)<br/></td></tr><tr><td align="left">_713 = &lt;{closure@programs/drift/src/math/orders.rs:1144:58: 1144:86} as Fn&lt;(u32,)&gt;&gt;::call(move _714, move _715)</td></tr></table>>];
    bb368__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">_698 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb369__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_716)<br/>StorageDead(_715)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">_712 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as Try&gt;::branch(move _713)</td></tr></table>>];
    bb370__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_713)<br/>_717 = discriminant(_712)<br/></td></tr><tr><td align="left">switchInt(move _717)</td></tr></table>>];
    bb371__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageLive(_721)<br/>_721 = ((_712 as Continue).0: (u64, u32))<br/>_711 = _721<br/>StorageDead(_721)<br/>StorageLive(_709)<br/>_709 = (_711.0: u64)<br/>StorageLive(_710)<br/>_710 = (_711.1: u32)<br/>StorageDead(_712)<br/>StorageDead(_711)<br/>StorageLive(_722)<br/>_722 = _709<br/>_696 = move _722<br/>StorageDead(_722)<br/>StorageLive(_723)<br/>_723 = _710<br/>_697 = move _723<br/>StorageDead(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>_725 = _697<br/>StorageLive(_726)<br/>_726 = _647<br/>_724 = Eq(move _725, move _726)<br/></td></tr><tr><td align="left">switchInt(move _724)</td></tr></table>>];
    bb372__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_718)<br/>_718 = ((_712 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_720)<br/>_720 = _718<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _720)</td></tr></table>>];
    bb373__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_720)<br/>StorageDead(_718)<br/>StorageDead(_712)<br/>StorageDead(_711)<br/>StorageDead(_706)<br/>StorageDead(_704)<br/>StorageDead(_703)<br/>StorageDead(_701)<br/>StorageDead(_699)<br/>StorageDead(_698)<br/>StorageDead(_697)<br/>StorageDead(_696)<br/>StorageDead(_685)<br/>StorageDead(_667)<br/>StorageDead(_666)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb374__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_726)<br/>StorageDead(_725)<br/>_698 = const ()<br/>StorageDead(_724)<br/>StorageDead(_710)<br/>StorageDead(_709)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb375__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_726)<br/>StorageDead(_725)<br/>_703 = const ()<br/>StorageDead(_724)<br/>StorageDead(_710)<br/>StorageDead(_709)<br/>StorageDead(_706)<br/>StorageDead(_704)<br/>StorageDead(_703)<br/>_702 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb376__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_706)<br/>StorageDead(_704)<br/>StorageDead(_703)<br/>StorageDead(_701)<br/>StorageDead(_699)<br/>StorageDead(_698)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>_731 = _696<br/>StorageLive(_732)<br/>_732 = _29<br/></td></tr><tr><td align="left">_730 = &lt;u64 as SafeMath&gt;::safe_add(move _731, move _732)</td></tr></table>>];
    bb377__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>StorageDead(_731)<br/></td></tr><tr><td align="left">_729 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _730)</td></tr></table>>];
    bb378__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>_733 = discriminant(_729)<br/></td></tr><tr><td align="left">switchInt(move _733)</td></tr></table>>];
    bb379__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageLive(_737)<br/>_737 = ((_729 as Continue).0: u64)<br/>_728 = _737<br/>StorageDead(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>_740 = &amp;_48<br/></td></tr><tr><td align="left">_739 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _740)</td></tr></table>>];
    bb380__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageLive(_734)<br/>_734 = ((_729 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_736)<br/>_736 = _734<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _736)</td></tr></table>>];
    bb381__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/>StorageDead(_734)<br/>StorageDead(_728)<br/>StorageDead(_697)<br/>StorageDead(_696)<br/>StorageDead(_685)<br/>StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_647)<br/>StorageDead(_130)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_92)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb382__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>_738 = ((*_739).25: u64)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_base_asset_amount(move _728, move _738)</td></tr></table>>];
    bb383__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>StorageDead(_728)<br/>StorageDead(_697)<br/>StorageDead(_696)<br/>StorageDead(_685)<br/>StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_647)<br/>StorageDead(_130)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_92)<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb384__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_739)<br/>StorageDead(_729)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_729)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb386__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/>StorageDead(_626)<br/>StorageDead(_622)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb388__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_584)<br/>StorageDead(_583)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb389__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb390__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_577)<br/>StorageDead(_576)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb391__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>StorageDead(_593)<br/>StorageDead(_589)<br/>StorageDead(_585)<br/>StorageDead(_582)<br/>StorageDead(_579)<br/>StorageDead(_575)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb392__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb393__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/>StorageDead(_520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb394__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb395__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb396__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/>StorageDead(_524)<br/>StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_520)<br/>StorageDead(_518)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb397__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_529)<br/>StorageDead(_525)<br/>StorageDead(_522)<br/>StorageDead(_519)<br/>StorageDead(_516)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb398__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb399__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb400__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_448)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb401__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_444)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb402__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>StorageDead(_451)<br/>StorageDead(_446)<br/>StorageDead(_443)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb404__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb405__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_407)<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb406__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb407__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_389)<br/>StorageDead(_387)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb408__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>StorageDead(_374)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb409__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb411__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_325)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb412__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_341)<br/>StorageDead(_337)<br/>StorageDead(_333)<br/>StorageDead(_330)<br/>StorageDead(_327)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb413__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb414__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb415__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb416__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageDead(_275)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb418__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb419__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb420__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb421__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb423__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_198)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb424__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb425__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb426__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb427__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb428__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb429__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb430__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb431__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb432__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb434__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb435__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb436__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb437__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left">return</td></tr></table>>];
    bb438__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">438 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb439__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">439 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb440__0_2616 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">440 (cleanup)</td></tr><tr><td align="left" balign="left">_751 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2616 -> bb1__0_2616 [label="return"];
    bb1__0_2616 -> bb2__0_2616 [label="return"];
    bb2__0_2616 -> bb3__0_2616 [label="return"];
    bb3__0_2616 -> bb4__0_2616 [label="return"];
    bb4__0_2616 -> bb5__0_2616 [label="0"];
    bb4__0_2616 -> bb7__0_2616 [label="1"];
    bb4__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb5__0_2616 -> bb9__0_2616 [label="return"];
    bb7__0_2616 -> bb8__0_2616 [label="return"];
    bb8__0_2616 -> bb437__0_2616 [label=""];
    bb9__0_2616 -> bb10__0_2616 [label="return"];
    bb10__0_2616 -> bb11__0_2616 [label="return"];
    bb11__0_2616 -> bb12__0_2616 [label="return"];
    bb12__0_2616 -> bb13__0_2616 [label="0"];
    bb12__0_2616 -> bb14__0_2616 [label="1"];
    bb12__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb13__0_2616 -> bb16__0_2616 [label="return"];
    bb14__0_2616 -> bb15__0_2616 [label="return"];
    bb15__0_2616 -> bb435__0_2616 [label=""];
    bb16__0_2616 -> bb17__0_2616 [label="return"];
    bb17__0_2616 -> bb18__0_2616 [label="0"];
    bb17__0_2616 -> bb19__0_2616 [label="1"];
    bb17__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb18__0_2616 -> bb21__0_2616 [label="return"];
    bb19__0_2616 -> bb20__0_2616 [label="return"];
    bb20__0_2616 -> bb435__0_2616 [label=""];
    bb21__0_2616 -> bb22__0_2616 [label="return"];
    bb21__0_2616 -> bb439__0_2616 [label="unwind"];
    bb22__0_2616 -> bb23__0_2616 [label="0"];
    bb22__0_2616 -> bb24__0_2616 [label="1"];
    bb22__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb23__0_2616 -> bb26__0_2616 [label="return"];
    bb23__0_2616 -> bb438__0_2616 [label="unwind"];
    bb24__0_2616 -> bb25__0_2616 [label="return"];
    bb24__0_2616 -> bb440__0_2616 [label="unwind"];
    bb25__0_2616 -> bb434__0_2616 [label=""];
    bb26__0_2616 -> bb27__0_2616 [label="return"];
    bb26__0_2616 -> bb438__0_2616 [label="unwind"];
    bb27__0_2616 -> bb28__0_2616 [label="return"];
    bb27__0_2616 -> bb438__0_2616 [label="unwind"];
    bb28__0_2616 -> bb29__0_2616 [label="return"];
    bb28__0_2616 -> bb438__0_2616 [label="unwind"];
    bb29__0_2616 -> bb30__0_2616 [label="0"];
    bb29__0_2616 -> bb31__0_2616 [label="1"];
    bb29__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb30__0_2616 -> bb33__0_2616 [label="return"];
    bb30__0_2616 -> bb438__0_2616 [label="unwind"];
    bb31__0_2616 -> bb32__0_2616 [label="return"];
    bb31__0_2616 -> bb438__0_2616 [label="unwind"];
    bb32__0_2616 -> bb433__0_2616 [label=""];
    bb33__0_2616 -> bb34__0_2616 [label="return"];
    bb33__0_2616 -> bb438__0_2616 [label="unwind"];
    bb34__0_2616 -> bb35__0_2616 [label="return"];
    bb34__0_2616 -> bb438__0_2616 [label="unwind"];
    bb35__0_2616 -> bb36__0_2616 [label="return"];
    bb35__0_2616 -> bb438__0_2616 [label="unwind"];
    bb36__0_2616 -> bb37__0_2616 [label="return"];
    bb36__0_2616 -> bb438__0_2616 [label="unwind"];
    bb37__0_2616 -> bb38__0_2616 [label="0"];
    bb37__0_2616 -> bb39__0_2616 [label="1"];
    bb37__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb38__0_2616 -> bb41__0_2616 [label="return"];
    bb38__0_2616 -> bb438__0_2616 [label="unwind"];
    bb39__0_2616 -> bb40__0_2616 [label="return"];
    bb39__0_2616 -> bb438__0_2616 [label="unwind"];
    bb40__0_2616 -> bb432__0_2616 [label=""];
    bb41__0_2616 -> bb42__0_2616 [label="return"];
    bb41__0_2616 -> bb438__0_2616 [label="unwind"];
    bb42__0_2616 -> bb43__0_2616 [label="return"];
    bb42__0_2616 -> bb438__0_2616 [label="unwind"];
    bb43__0_2616 -> bb44__0_2616 [label="0"];
    bb43__0_2616 -> bb45__0_2616 [label="1"];
    bb43__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb44__0_2616 -> bb47__0_2616 [label="return"];
    bb44__0_2616 -> bb438__0_2616 [label="unwind"];
    bb45__0_2616 -> bb46__0_2616 [label="return"];
    bb45__0_2616 -> bb438__0_2616 [label="unwind"];
    bb46__0_2616 -> bb431__0_2616 [label=""];
    bb47__0_2616 -> bb48__0_2616 [label="return"];
    bb47__0_2616 -> bb438__0_2616 [label="unwind"];
    bb48__0_2616 -> bb49__0_2616 [label="return"];
    bb48__0_2616 -> bb438__0_2616 [label="unwind"];
    bb49__0_2616 -> bb50__0_2616 [label="0"];
    bb49__0_2616 -> bb51__0_2616 [label="1"];
    bb49__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb50__0_2616 -> bb53__0_2616 [label="return"];
    bb50__0_2616 -> bb438__0_2616 [label="unwind"];
    bb51__0_2616 -> bb52__0_2616 [label="return"];
    bb51__0_2616 -> bb438__0_2616 [label="unwind"];
    bb52__0_2616 -> bb431__0_2616 [label=""];
    bb53__0_2616 -> bb54__0_2616 [label="return"];
    bb53__0_2616 -> bb438__0_2616 [label="unwind"];
    bb54__0_2616 -> bb196__0_2616 [label="0"];
    bb54__0_2616 -> bb55__0_2616 [label="otherwise"];
    bb55__0_2616 -> bb56__0_2616 [label="return"];
    bb55__0_2616 -> bb438__0_2616 [label="unwind"];
    bb56__0_2616 -> bb195__0_2616 [label="0"];
    bb56__0_2616 -> bb57__0_2616 [label="otherwise"];
    bb57__0_2616 -> bb58__0_2616 [label="return"];
    bb57__0_2616 -> bb438__0_2616 [label="unwind"];
    bb58__0_2616 -> bb59__0_2616 [label="return"];
    bb58__0_2616 -> bb438__0_2616 [label="unwind"];
    bb59__0_2616 -> bb60__0_2616 [label="0"];
    bb59__0_2616 -> bb61__0_2616 [label="1"];
    bb59__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb60__0_2616 -> bb63__0_2616 [label="return"];
    bb60__0_2616 -> bb438__0_2616 [label="unwind"];
    bb61__0_2616 -> bb62__0_2616 [label="return"];
    bb61__0_2616 -> bb438__0_2616 [label="unwind"];
    bb62__0_2616 -> bb428__0_2616 [label=""];
    bb63__0_2616 -> bb64__0_2616 [label="return"];
    bb63__0_2616 -> bb438__0_2616 [label="unwind"];
    bb64__0_2616 -> bb112__0_2616 [label="0"];
    bb64__0_2616 -> bb65__0_2616 [label="otherwise"];
    bb65__0_2616 -> bb66__0_2616 [label="return"];
    bb65__0_2616 -> bb438__0_2616 [label="unwind"];
    bb66__0_2616 -> bb67__0_2616 [label="return"];
    bb66__0_2616 -> bb438__0_2616 [label="unwind"];
    bb67__0_2616 -> bb68__0_2616 [label="return"];
    bb67__0_2616 -> bb438__0_2616 [label="unwind"];
    bb68__0_2616 -> bb69__0_2616 [label="0"];
    bb68__0_2616 -> bb70__0_2616 [label="1"];
    bb68__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb69__0_2616 -> bb72__0_2616 [label="return"];
    bb69__0_2616 -> bb438__0_2616 [label="unwind"];
    bb70__0_2616 -> bb71__0_2616 [label="return"];
    bb70__0_2616 -> bb438__0_2616 [label="unwind"];
    bb71__0_2616 -> bb426__0_2616 [label=""];
    bb72__0_2616 -> bb73__0_2616 [label="return"];
    bb72__0_2616 -> bb438__0_2616 [label="unwind"];
    bb73__0_2616 -> bb74__0_2616 [label="return"];
    bb73__0_2616 -> bb438__0_2616 [label="unwind"];
    bb74__0_2616 -> bb75__0_2616 [label="return"];
    bb74__0_2616 -> bb438__0_2616 [label="unwind"];
    bb75__0_2616 -> bb76__0_2616 [label="0"];
    bb75__0_2616 -> bb77__0_2616 [label="1"];
    bb75__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb76__0_2616 -> bb79__0_2616 [label="return"];
    bb76__0_2616 -> bb438__0_2616 [label="unwind"];
    bb77__0_2616 -> bb78__0_2616 [label="return"];
    bb77__0_2616 -> bb438__0_2616 [label="unwind"];
    bb78__0_2616 -> bb425__0_2616 [label=""];
    bb79__0_2616 -> bb80__0_2616 [label="return"];
    bb79__0_2616 -> bb438__0_2616 [label="unwind"];
    bb80__0_2616 -> bb81__0_2616 [label="return"];
    bb80__0_2616 -> bb438__0_2616 [label="unwind"];
    bb81__0_2616 -> bb82__0_2616 [label="return"];
    bb81__0_2616 -> bb438__0_2616 [label="unwind"];
    bb82__0_2616 -> bb83__0_2616 [label="0"];
    bb82__0_2616 -> bb84__0_2616 [label="1"];
    bb82__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb83__0_2616 -> bb86__0_2616 [label="return"];
    bb83__0_2616 -> bb438__0_2616 [label="unwind"];
    bb84__0_2616 -> bb85__0_2616 [label="return"];
    bb84__0_2616 -> bb438__0_2616 [label="unwind"];
    bb85__0_2616 -> bb421__0_2616 [label=""];
    bb86__0_2616 -> bb87__0_2616 [label="return"];
    bb86__0_2616 -> bb438__0_2616 [label="unwind"];
    bb87__0_2616 -> bb88__0_2616 [label="0"];
    bb87__0_2616 -> bb89__0_2616 [label="1"];
    bb87__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb88__0_2616 -> bb91__0_2616 [label="return"];
    bb88__0_2616 -> bb438__0_2616 [label="unwind"];
    bb89__0_2616 -> bb90__0_2616 [label="return"];
    bb89__0_2616 -> bb438__0_2616 [label="unwind"];
    bb90__0_2616 -> bb421__0_2616 [label=""];
    bb91__0_2616 -> bb92__0_2616 [label="return"];
    bb91__0_2616 -> bb438__0_2616 [label="unwind"];
    bb92__0_2616 -> bb93__0_2616 [label="0"];
    bb92__0_2616 -> bb94__0_2616 [label="1"];
    bb92__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb93__0_2616 -> bb96__0_2616 [label="return"];
    bb93__0_2616 -> bb438__0_2616 [label="unwind"];
    bb94__0_2616 -> bb95__0_2616 [label="return"];
    bb94__0_2616 -> bb438__0_2616 [label="unwind"];
    bb95__0_2616 -> bb422__0_2616 [label=""];
    bb96__0_2616 -> bb97__0_2616 [label="return"];
    bb96__0_2616 -> bb438__0_2616 [label="unwind"];
    bb97__0_2616 -> bb98__0_2616 [label="0"];
    bb97__0_2616 -> bb99__0_2616 [label="1"];
    bb97__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb98__0_2616 -> bb101__0_2616 [label="return"];
    bb98__0_2616 -> bb438__0_2616 [label="unwind"];
    bb99__0_2616 -> bb100__0_2616 [label="return"];
    bb99__0_2616 -> bb438__0_2616 [label="unwind"];
    bb100__0_2616 -> bb423__0_2616 [label=""];
    bb101__0_2616 -> bb102__0_2616 [label="return"];
    bb101__0_2616 -> bb438__0_2616 [label="unwind"];
    bb102__0_2616 -> bb103__0_2616 [label="0"];
    bb102__0_2616 -> bb104__0_2616 [label="1"];
    bb102__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb103__0_2616 -> bb106__0_2616 [label="return"];
    bb103__0_2616 -> bb438__0_2616 [label="unwind"];
    bb104__0_2616 -> bb105__0_2616 [label="return"];
    bb104__0_2616 -> bb438__0_2616 [label="unwind"];
    bb105__0_2616 -> bb424__0_2616 [label=""];
    bb106__0_2616 -> bb107__0_2616 [label="return"];
    bb106__0_2616 -> bb438__0_2616 [label="unwind"];
    bb107__0_2616 -> bb108__0_2616 [label="return"];
    bb107__0_2616 -> bb438__0_2616 [label="unwind"];
    bb108__0_2616 -> bb109__0_2616 [label="0"];
    bb108__0_2616 -> bb110__0_2616 [label="1"];
    bb108__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb109__0_2616 -> bb113__0_2616 [label=""];
    bb110__0_2616 -> bb111__0_2616 [label="return"];
    bb110__0_2616 -> bb438__0_2616 [label="unwind"];
    bb111__0_2616 -> bb424__0_2616 [label=""];
    bb112__0_2616 -> bb113__0_2616 [label=""];
    bb113__0_2616 -> bb114__0_2616 [label="return"];
    bb113__0_2616 -> bb438__0_2616 [label="unwind"];
    bb114__0_2616 -> bb115__0_2616 [label="return"];
    bb114__0_2616 -> bb438__0_2616 [label="unwind"];
    bb115__0_2616 -> bb116__0_2616 [label="return"];
    bb115__0_2616 -> bb438__0_2616 [label="unwind"];
    bb116__0_2616 -> bb117__0_2616 [label="return"];
    bb116__0_2616 -> bb438__0_2616 [label="unwind"];
    bb117__0_2616 -> bb118__0_2616 [label="0"];
    bb117__0_2616 -> bb119__0_2616 [label="1"];
    bb117__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb118__0_2616 -> bb121__0_2616 [label="return"];
    bb118__0_2616 -> bb438__0_2616 [label="unwind"];
    bb119__0_2616 -> bb120__0_2616 [label="return"];
    bb119__0_2616 -> bb438__0_2616 [label="unwind"];
    bb120__0_2616 -> bb420__0_2616 [label=""];
    bb121__0_2616 -> bb122__0_2616 [label="return"];
    bb121__0_2616 -> bb438__0_2616 [label="unwind"];
    bb122__0_2616 -> bb123__0_2616 [label="return"];
    bb122__0_2616 -> bb438__0_2616 [label="unwind"];
    bb123__0_2616 -> bb124__0_2616 [label="0"];
    bb123__0_2616 -> bb125__0_2616 [label="1"];
    bb123__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb124__0_2616 -> bb127__0_2616 [label="return"];
    bb124__0_2616 -> bb438__0_2616 [label="unwind"];
    bb125__0_2616 -> bb126__0_2616 [label="return"];
    bb125__0_2616 -> bb438__0_2616 [label="unwind"];
    bb126__0_2616 -> bb417__0_2616 [label=""];
    bb127__0_2616 -> bb128__0_2616 [label="return"];
    bb127__0_2616 -> bb438__0_2616 [label="unwind"];
    bb128__0_2616 -> bb129__0_2616 [label="0"];
    bb128__0_2616 -> bb130__0_2616 [label="1"];
    bb128__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb129__0_2616 -> bb132__0_2616 [label="return"];
    bb129__0_2616 -> bb438__0_2616 [label="unwind"];
    bb130__0_2616 -> bb131__0_2616 [label="return"];
    bb130__0_2616 -> bb438__0_2616 [label="unwind"];
    bb131__0_2616 -> bb417__0_2616 [label=""];
    bb132__0_2616 -> bb133__0_2616 [label="return"];
    bb132__0_2616 -> bb438__0_2616 [label="unwind"];
    bb133__0_2616 -> bb134__0_2616 [label="return"];
    bb133__0_2616 -> bb438__0_2616 [label="unwind"];
    bb134__0_2616 -> bb135__0_2616 [label="0"];
    bb134__0_2616 -> bb136__0_2616 [label="1"];
    bb134__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb135__0_2616 -> bb138__0_2616 [label="return"];
    bb135__0_2616 -> bb438__0_2616 [label="unwind"];
    bb136__0_2616 -> bb137__0_2616 [label="return"];
    bb136__0_2616 -> bb438__0_2616 [label="unwind"];
    bb137__0_2616 -> bb413__0_2616 [label=""];
    bb138__0_2616 -> bb139__0_2616 [label="return"];
    bb138__0_2616 -> bb438__0_2616 [label="unwind"];
    bb139__0_2616 -> bb140__0_2616 [label="0"];
    bb139__0_2616 -> bb141__0_2616 [label="1"];
    bb139__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb140__0_2616 -> bb143__0_2616 [label="return"];
    bb140__0_2616 -> bb438__0_2616 [label="unwind"];
    bb141__0_2616 -> bb142__0_2616 [label="return"];
    bb141__0_2616 -> bb438__0_2616 [label="unwind"];
    bb142__0_2616 -> bb413__0_2616 [label=""];
    bb143__0_2616 -> bb144__0_2616 [label="return"];
    bb143__0_2616 -> bb438__0_2616 [label="unwind"];
    bb144__0_2616 -> bb145__0_2616 [label="0"];
    bb144__0_2616 -> bb146__0_2616 [label="1"];
    bb144__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb145__0_2616 -> bb148__0_2616 [label="return"];
    bb145__0_2616 -> bb438__0_2616 [label="unwind"];
    bb146__0_2616 -> bb147__0_2616 [label="return"];
    bb146__0_2616 -> bb438__0_2616 [label="unwind"];
    bb147__0_2616 -> bb414__0_2616 [label=""];
    bb148__0_2616 -> bb149__0_2616 [label="return"];
    bb148__0_2616 -> bb438__0_2616 [label="unwind"];
    bb149__0_2616 -> bb150__0_2616 [label="0"];
    bb149__0_2616 -> bb151__0_2616 [label="1"];
    bb149__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb150__0_2616 -> bb153__0_2616 [label="return"];
    bb150__0_2616 -> bb438__0_2616 [label="unwind"];
    bb151__0_2616 -> bb152__0_2616 [label="return"];
    bb151__0_2616 -> bb438__0_2616 [label="unwind"];
    bb152__0_2616 -> bb415__0_2616 [label=""];
    bb153__0_2616 -> bb154__0_2616 [label="return"];
    bb153__0_2616 -> bb438__0_2616 [label="unwind"];
    bb154__0_2616 -> bb155__0_2616 [label="0"];
    bb154__0_2616 -> bb156__0_2616 [label="1"];
    bb154__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb155__0_2616 -> bb158__0_2616 [label="return"];
    bb155__0_2616 -> bb438__0_2616 [label="unwind"];
    bb156__0_2616 -> bb157__0_2616 [label="return"];
    bb156__0_2616 -> bb438__0_2616 [label="unwind"];
    bb157__0_2616 -> bb416__0_2616 [label=""];
    bb158__0_2616 -> bb159__0_2616 [label="return"];
    bb158__0_2616 -> bb438__0_2616 [label="unwind"];
    bb159__0_2616 -> bb160__0_2616 [label="return"];
    bb159__0_2616 -> bb438__0_2616 [label="unwind"];
    bb160__0_2616 -> bb161__0_2616 [label="return"];
    bb160__0_2616 -> bb438__0_2616 [label="unwind"];
    bb161__0_2616 -> bb162__0_2616 [label="0"];
    bb161__0_2616 -> bb163__0_2616 [label="1"];
    bb161__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb162__0_2616 -> bb165__0_2616 [label="return"];
    bb162__0_2616 -> bb438__0_2616 [label="unwind"];
    bb163__0_2616 -> bb164__0_2616 [label="return"];
    bb163__0_2616 -> bb438__0_2616 [label="unwind"];
    bb164__0_2616 -> bb409__0_2616 [label=""];
    bb165__0_2616 -> bb166__0_2616 [label="return"];
    bb165__0_2616 -> bb438__0_2616 [label="unwind"];
    bb166__0_2616 -> bb167__0_2616 [label="0"];
    bb166__0_2616 -> bb168__0_2616 [label="1"];
    bb166__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb167__0_2616 -> bb170__0_2616 [label="return"];
    bb167__0_2616 -> bb438__0_2616 [label="unwind"];
    bb168__0_2616 -> bb169__0_2616 [label="return"];
    bb168__0_2616 -> bb438__0_2616 [label="unwind"];
    bb169__0_2616 -> bb409__0_2616 [label=""];
    bb170__0_2616 -> bb171__0_2616 [label="return"];
    bb170__0_2616 -> bb438__0_2616 [label="unwind"];
    bb171__0_2616 -> bb172__0_2616 [label="0"];
    bb171__0_2616 -> bb173__0_2616 [label="1"];
    bb171__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb172__0_2616 -> bb175__0_2616 [label="return"];
    bb172__0_2616 -> bb438__0_2616 [label="unwind"];
    bb173__0_2616 -> bb174__0_2616 [label="return"];
    bb173__0_2616 -> bb438__0_2616 [label="unwind"];
    bb174__0_2616 -> bb410__0_2616 [label=""];
    bb175__0_2616 -> bb176__0_2616 [label="return"];
    bb175__0_2616 -> bb438__0_2616 [label="unwind"];
    bb176__0_2616 -> bb177__0_2616 [label="0"];
    bb176__0_2616 -> bb178__0_2616 [label="1"];
    bb176__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb177__0_2616 -> bb180__0_2616 [label="return"];
    bb177__0_2616 -> bb438__0_2616 [label="unwind"];
    bb178__0_2616 -> bb179__0_2616 [label="return"];
    bb178__0_2616 -> bb438__0_2616 [label="unwind"];
    bb179__0_2616 -> bb411__0_2616 [label=""];
    bb180__0_2616 -> bb181__0_2616 [label="return"];
    bb180__0_2616 -> bb438__0_2616 [label="unwind"];
    bb181__0_2616 -> bb182__0_2616 [label="0"];
    bb181__0_2616 -> bb183__0_2616 [label="1"];
    bb181__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb182__0_2616 -> bb185__0_2616 [label="return"];
    bb182__0_2616 -> bb438__0_2616 [label="unwind"];
    bb183__0_2616 -> bb184__0_2616 [label="return"];
    bb183__0_2616 -> bb438__0_2616 [label="unwind"];
    bb184__0_2616 -> bb412__0_2616 [label=""];
    bb185__0_2616 -> bb186__0_2616 [label="return"];
    bb185__0_2616 -> bb438__0_2616 [label="unwind"];
    bb186__0_2616 -> bb187__0_2616 [label="0"];
    bb186__0_2616 -> bb188__0_2616 [label="1"];
    bb186__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb187__0_2616 -> bb190__0_2616 [label="return"];
    bb187__0_2616 -> bb438__0_2616 [label="unwind"];
    bb188__0_2616 -> bb189__0_2616 [label="return"];
    bb188__0_2616 -> bb438__0_2616 [label="unwind"];
    bb189__0_2616 -> bb408__0_2616 [label=""];
    bb190__0_2616 -> bb191__0_2616 [label="return"];
    bb190__0_2616 -> bb438__0_2616 [label="unwind"];
    bb191__0_2616 -> bb192__0_2616 [label="0"];
    bb191__0_2616 -> bb193__0_2616 [label="1"];
    bb191__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb192__0_2616 -> bb342__0_2616 [label=""];
    bb193__0_2616 -> bb194__0_2616 [label="return"];
    bb193__0_2616 -> bb438__0_2616 [label="unwind"];
    bb194__0_2616 -> bb408__0_2616 [label=""];
    bb195__0_2616 -> bb197__0_2616 [label=""];
    bb196__0_2616 -> bb197__0_2616 [label=""];
    bb197__0_2616 -> bb339__0_2616 [label="0"];
    bb197__0_2616 -> bb198__0_2616 [label="otherwise"];
    bb198__0_2616 -> bb199__0_2616 [label="return"];
    bb198__0_2616 -> bb438__0_2616 [label="unwind"];
    bb199__0_2616 -> bb338__0_2616 [label="0"];
    bb199__0_2616 -> bb200__0_2616 [label="otherwise"];
    bb200__0_2616 -> bb201__0_2616 [label="return"];
    bb200__0_2616 -> bb438__0_2616 [label="unwind"];
    bb201__0_2616 -> bb202__0_2616 [label="return"];
    bb201__0_2616 -> bb438__0_2616 [label="unwind"];
    bb202__0_2616 -> bb203__0_2616 [label="0"];
    bb202__0_2616 -> bb204__0_2616 [label="1"];
    bb202__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb203__0_2616 -> bb206__0_2616 [label="return"];
    bb203__0_2616 -> bb438__0_2616 [label="unwind"];
    bb204__0_2616 -> bb205__0_2616 [label="return"];
    bb204__0_2616 -> bb438__0_2616 [label="unwind"];
    bb205__0_2616 -> bb407__0_2616 [label=""];
    bb206__0_2616 -> bb207__0_2616 [label="return"];
    bb206__0_2616 -> bb438__0_2616 [label="unwind"];
    bb207__0_2616 -> bb255__0_2616 [label="0"];
    bb207__0_2616 -> bb208__0_2616 [label="otherwise"];
    bb208__0_2616 -> bb209__0_2616 [label="return"];
    bb208__0_2616 -> bb438__0_2616 [label="unwind"];
    bb209__0_2616 -> bb210__0_2616 [label="return"];
    bb209__0_2616 -> bb438__0_2616 [label="unwind"];
    bb210__0_2616 -> bb211__0_2616 [label="return"];
    bb210__0_2616 -> bb438__0_2616 [label="unwind"];
    bb211__0_2616 -> bb212__0_2616 [label="0"];
    bb211__0_2616 -> bb213__0_2616 [label="1"];
    bb211__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb212__0_2616 -> bb215__0_2616 [label="return"];
    bb212__0_2616 -> bb438__0_2616 [label="unwind"];
    bb213__0_2616 -> bb214__0_2616 [label="return"];
    bb213__0_2616 -> bb438__0_2616 [label="unwind"];
    bb214__0_2616 -> bb405__0_2616 [label=""];
    bb215__0_2616 -> bb216__0_2616 [label="return"];
    bb215__0_2616 -> bb438__0_2616 [label="unwind"];
    bb216__0_2616 -> bb217__0_2616 [label="return"];
    bb216__0_2616 -> bb438__0_2616 [label="unwind"];
    bb217__0_2616 -> bb218__0_2616 [label="return"];
    bb217__0_2616 -> bb438__0_2616 [label="unwind"];
    bb218__0_2616 -> bb219__0_2616 [label="0"];
    bb218__0_2616 -> bb220__0_2616 [label="1"];
    bb218__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb219__0_2616 -> bb222__0_2616 [label="return"];
    bb219__0_2616 -> bb438__0_2616 [label="unwind"];
    bb220__0_2616 -> bb221__0_2616 [label="return"];
    bb220__0_2616 -> bb438__0_2616 [label="unwind"];
    bb221__0_2616 -> bb404__0_2616 [label=""];
    bb222__0_2616 -> bb223__0_2616 [label="return"];
    bb222__0_2616 -> bb438__0_2616 [label="unwind"];
    bb223__0_2616 -> bb224__0_2616 [label="return"];
    bb223__0_2616 -> bb438__0_2616 [label="unwind"];
    bb224__0_2616 -> bb225__0_2616 [label="return"];
    bb224__0_2616 -> bb438__0_2616 [label="unwind"];
    bb225__0_2616 -> bb226__0_2616 [label="0"];
    bb225__0_2616 -> bb227__0_2616 [label="1"];
    bb225__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb226__0_2616 -> bb229__0_2616 [label="return"];
    bb226__0_2616 -> bb438__0_2616 [label="unwind"];
    bb227__0_2616 -> bb228__0_2616 [label="return"];
    bb227__0_2616 -> bb438__0_2616 [label="unwind"];
    bb228__0_2616 -> bb400__0_2616 [label=""];
    bb229__0_2616 -> bb230__0_2616 [label="return"];
    bb229__0_2616 -> bb438__0_2616 [label="unwind"];
    bb230__0_2616 -> bb231__0_2616 [label="0"];
    bb230__0_2616 -> bb232__0_2616 [label="1"];
    bb230__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb231__0_2616 -> bb234__0_2616 [label="return"];
    bb231__0_2616 -> bb438__0_2616 [label="unwind"];
    bb232__0_2616 -> bb233__0_2616 [label="return"];
    bb232__0_2616 -> bb438__0_2616 [label="unwind"];
    bb233__0_2616 -> bb400__0_2616 [label=""];
    bb234__0_2616 -> bb235__0_2616 [label="return"];
    bb234__0_2616 -> bb438__0_2616 [label="unwind"];
    bb235__0_2616 -> bb236__0_2616 [label="0"];
    bb235__0_2616 -> bb237__0_2616 [label="1"];
    bb235__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb236__0_2616 -> bb239__0_2616 [label="return"];
    bb236__0_2616 -> bb438__0_2616 [label="unwind"];
    bb237__0_2616 -> bb238__0_2616 [label="return"];
    bb237__0_2616 -> bb438__0_2616 [label="unwind"];
    bb238__0_2616 -> bb401__0_2616 [label=""];
    bb239__0_2616 -> bb240__0_2616 [label="return"];
    bb239__0_2616 -> bb438__0_2616 [label="unwind"];
    bb240__0_2616 -> bb241__0_2616 [label="0"];
    bb240__0_2616 -> bb242__0_2616 [label="1"];
    bb240__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb241__0_2616 -> bb244__0_2616 [label="return"];
    bb241__0_2616 -> bb438__0_2616 [label="unwind"];
    bb242__0_2616 -> bb243__0_2616 [label="return"];
    bb242__0_2616 -> bb438__0_2616 [label="unwind"];
    bb243__0_2616 -> bb402__0_2616 [label=""];
    bb244__0_2616 -> bb245__0_2616 [label="return"];
    bb244__0_2616 -> bb438__0_2616 [label="unwind"];
    bb245__0_2616 -> bb246__0_2616 [label="0"];
    bb245__0_2616 -> bb247__0_2616 [label="1"];
    bb245__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb246__0_2616 -> bb249__0_2616 [label="return"];
    bb246__0_2616 -> bb438__0_2616 [label="unwind"];
    bb247__0_2616 -> bb248__0_2616 [label="return"];
    bb247__0_2616 -> bb438__0_2616 [label="unwind"];
    bb248__0_2616 -> bb403__0_2616 [label=""];
    bb249__0_2616 -> bb250__0_2616 [label="return"];
    bb249__0_2616 -> bb438__0_2616 [label="unwind"];
    bb250__0_2616 -> bb251__0_2616 [label="return"];
    bb250__0_2616 -> bb438__0_2616 [label="unwind"];
    bb251__0_2616 -> bb252__0_2616 [label="0"];
    bb251__0_2616 -> bb253__0_2616 [label="1"];
    bb251__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb252__0_2616 -> bb256__0_2616 [label=""];
    bb253__0_2616 -> bb254__0_2616 [label="return"];
    bb253__0_2616 -> bb438__0_2616 [label="unwind"];
    bb254__0_2616 -> bb403__0_2616 [label=""];
    bb255__0_2616 -> bb256__0_2616 [label=""];
    bb256__0_2616 -> bb257__0_2616 [label="return"];
    bb256__0_2616 -> bb438__0_2616 [label="unwind"];
    bb257__0_2616 -> bb258__0_2616 [label="return"];
    bb257__0_2616 -> bb438__0_2616 [label="unwind"];
    bb258__0_2616 -> bb259__0_2616 [label="return"];
    bb258__0_2616 -> bb438__0_2616 [label="unwind"];
    bb259__0_2616 -> bb260__0_2616 [label="return"];
    bb259__0_2616 -> bb438__0_2616 [label="unwind"];
    bb260__0_2616 -> bb261__0_2616 [label="0"];
    bb260__0_2616 -> bb262__0_2616 [label="1"];
    bb260__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb261__0_2616 -> bb264__0_2616 [label="return"];
    bb261__0_2616 -> bb438__0_2616 [label="unwind"];
    bb262__0_2616 -> bb263__0_2616 [label="return"];
    bb262__0_2616 -> bb438__0_2616 [label="unwind"];
    bb263__0_2616 -> bb399__0_2616 [label=""];
    bb264__0_2616 -> bb265__0_2616 [label="return"];
    bb264__0_2616 -> bb438__0_2616 [label="unwind"];
    bb265__0_2616 -> bb266__0_2616 [label="return"];
    bb265__0_2616 -> bb438__0_2616 [label="unwind"];
    bb266__0_2616 -> bb267__0_2616 [label="0"];
    bb266__0_2616 -> bb268__0_2616 [label="1"];
    bb266__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb267__0_2616 -> bb270__0_2616 [label="return"];
    bb267__0_2616 -> bb438__0_2616 [label="unwind"];
    bb268__0_2616 -> bb269__0_2616 [label="return"];
    bb268__0_2616 -> bb438__0_2616 [label="unwind"];
    bb269__0_2616 -> bb396__0_2616 [label=""];
    bb270__0_2616 -> bb271__0_2616 [label="return"];
    bb270__0_2616 -> bb438__0_2616 [label="unwind"];
    bb271__0_2616 -> bb272__0_2616 [label="0"];
    bb271__0_2616 -> bb273__0_2616 [label="1"];
    bb271__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb272__0_2616 -> bb275__0_2616 [label="return"];
    bb272__0_2616 -> bb438__0_2616 [label="unwind"];
    bb273__0_2616 -> bb274__0_2616 [label="return"];
    bb273__0_2616 -> bb438__0_2616 [label="unwind"];
    bb274__0_2616 -> bb396__0_2616 [label=""];
    bb275__0_2616 -> bb276__0_2616 [label="return"];
    bb275__0_2616 -> bb438__0_2616 [label="unwind"];
    bb276__0_2616 -> bb277__0_2616 [label="return"];
    bb276__0_2616 -> bb438__0_2616 [label="unwind"];
    bb277__0_2616 -> bb278__0_2616 [label="0"];
    bb277__0_2616 -> bb279__0_2616 [label="1"];
    bb277__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb278__0_2616 -> bb281__0_2616 [label="return"];
    bb278__0_2616 -> bb438__0_2616 [label="unwind"];
    bb279__0_2616 -> bb280__0_2616 [label="return"];
    bb279__0_2616 -> bb438__0_2616 [label="unwind"];
    bb280__0_2616 -> bb392__0_2616 [label=""];
    bb281__0_2616 -> bb282__0_2616 [label="return"];
    bb281__0_2616 -> bb438__0_2616 [label="unwind"];
    bb282__0_2616 -> bb283__0_2616 [label="0"];
    bb282__0_2616 -> bb284__0_2616 [label="1"];
    bb282__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb283__0_2616 -> bb286__0_2616 [label="return"];
    bb283__0_2616 -> bb438__0_2616 [label="unwind"];
    bb284__0_2616 -> bb285__0_2616 [label="return"];
    bb284__0_2616 -> bb438__0_2616 [label="unwind"];
    bb285__0_2616 -> bb392__0_2616 [label=""];
    bb286__0_2616 -> bb287__0_2616 [label="return"];
    bb286__0_2616 -> bb438__0_2616 [label="unwind"];
    bb287__0_2616 -> bb288__0_2616 [label="0"];
    bb287__0_2616 -> bb289__0_2616 [label="1"];
    bb287__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb288__0_2616 -> bb291__0_2616 [label="return"];
    bb288__0_2616 -> bb438__0_2616 [label="unwind"];
    bb289__0_2616 -> bb290__0_2616 [label="return"];
    bb289__0_2616 -> bb438__0_2616 [label="unwind"];
    bb290__0_2616 -> bb393__0_2616 [label=""];
    bb291__0_2616 -> bb292__0_2616 [label="return"];
    bb291__0_2616 -> bb438__0_2616 [label="unwind"];
    bb292__0_2616 -> bb293__0_2616 [label="0"];
    bb292__0_2616 -> bb294__0_2616 [label="1"];
    bb292__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb293__0_2616 -> bb296__0_2616 [label="return"];
    bb293__0_2616 -> bb438__0_2616 [label="unwind"];
    bb294__0_2616 -> bb295__0_2616 [label="return"];
    bb294__0_2616 -> bb438__0_2616 [label="unwind"];
    bb295__0_2616 -> bb394__0_2616 [label=""];
    bb296__0_2616 -> bb297__0_2616 [label="return"];
    bb296__0_2616 -> bb438__0_2616 [label="unwind"];
    bb297__0_2616 -> bb298__0_2616 [label="0"];
    bb297__0_2616 -> bb299__0_2616 [label="1"];
    bb297__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb298__0_2616 -> bb301__0_2616 [label="return"];
    bb298__0_2616 -> bb438__0_2616 [label="unwind"];
    bb299__0_2616 -> bb300__0_2616 [label="return"];
    bb299__0_2616 -> bb438__0_2616 [label="unwind"];
    bb300__0_2616 -> bb395__0_2616 [label=""];
    bb301__0_2616 -> bb302__0_2616 [label="return"];
    bb301__0_2616 -> bb438__0_2616 [label="unwind"];
    bb302__0_2616 -> bb303__0_2616 [label="return"];
    bb302__0_2616 -> bb438__0_2616 [label="unwind"];
    bb303__0_2616 -> bb304__0_2616 [label="return"];
    bb303__0_2616 -> bb438__0_2616 [label="unwind"];
    bb304__0_2616 -> bb305__0_2616 [label="0"];
    bb304__0_2616 -> bb306__0_2616 [label="1"];
    bb304__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb305__0_2616 -> bb308__0_2616 [label="return"];
    bb305__0_2616 -> bb438__0_2616 [label="unwind"];
    bb306__0_2616 -> bb307__0_2616 [label="return"];
    bb306__0_2616 -> bb438__0_2616 [label="unwind"];
    bb307__0_2616 -> bb388__0_2616 [label=""];
    bb308__0_2616 -> bb309__0_2616 [label="return"];
    bb308__0_2616 -> bb438__0_2616 [label="unwind"];
    bb309__0_2616 -> bb310__0_2616 [label="0"];
    bb309__0_2616 -> bb311__0_2616 [label="1"];
    bb309__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb310__0_2616 -> bb313__0_2616 [label="return"];
    bb310__0_2616 -> bb438__0_2616 [label="unwind"];
    bb311__0_2616 -> bb312__0_2616 [label="return"];
    bb311__0_2616 -> bb438__0_2616 [label="unwind"];
    bb312__0_2616 -> bb388__0_2616 [label=""];
    bb313__0_2616 -> bb314__0_2616 [label="return"];
    bb313__0_2616 -> bb438__0_2616 [label="unwind"];
    bb314__0_2616 -> bb315__0_2616 [label="0"];
    bb314__0_2616 -> bb316__0_2616 [label="1"];
    bb314__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb315__0_2616 -> bb318__0_2616 [label="return"];
    bb315__0_2616 -> bb438__0_2616 [label="unwind"];
    bb316__0_2616 -> bb317__0_2616 [label="return"];
    bb316__0_2616 -> bb438__0_2616 [label="unwind"];
    bb317__0_2616 -> bb389__0_2616 [label=""];
    bb318__0_2616 -> bb319__0_2616 [label="return"];
    bb318__0_2616 -> bb438__0_2616 [label="unwind"];
    bb319__0_2616 -> bb320__0_2616 [label="0"];
    bb319__0_2616 -> bb321__0_2616 [label="1"];
    bb319__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb320__0_2616 -> bb323__0_2616 [label="return"];
    bb320__0_2616 -> bb438__0_2616 [label="unwind"];
    bb321__0_2616 -> bb322__0_2616 [label="return"];
    bb321__0_2616 -> bb438__0_2616 [label="unwind"];
    bb322__0_2616 -> bb390__0_2616 [label=""];
    bb323__0_2616 -> bb324__0_2616 [label="return"];
    bb323__0_2616 -> bb438__0_2616 [label="unwind"];
    bb324__0_2616 -> bb325__0_2616 [label="0"];
    bb324__0_2616 -> bb326__0_2616 [label="1"];
    bb324__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb325__0_2616 -> bb328__0_2616 [label="return"];
    bb325__0_2616 -> bb438__0_2616 [label="unwind"];
    bb326__0_2616 -> bb327__0_2616 [label="return"];
    bb326__0_2616 -> bb438__0_2616 [label="unwind"];
    bb327__0_2616 -> bb391__0_2616 [label=""];
    bb328__0_2616 -> bb329__0_2616 [label="return"];
    bb328__0_2616 -> bb438__0_2616 [label="unwind"];
    bb329__0_2616 -> bb330__0_2616 [label="0"];
    bb329__0_2616 -> bb331__0_2616 [label="1"];
    bb329__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb330__0_2616 -> bb333__0_2616 [label="return"];
    bb330__0_2616 -> bb438__0_2616 [label="unwind"];
    bb331__0_2616 -> bb332__0_2616 [label="return"];
    bb331__0_2616 -> bb438__0_2616 [label="unwind"];
    bb332__0_2616 -> bb387__0_2616 [label=""];
    bb333__0_2616 -> bb334__0_2616 [label="return"];
    bb333__0_2616 -> bb438__0_2616 [label="unwind"];
    bb334__0_2616 -> bb335__0_2616 [label="0"];
    bb334__0_2616 -> bb336__0_2616 [label="1"];
    bb334__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb335__0_2616 -> bb341__0_2616 [label=""];
    bb336__0_2616 -> bb337__0_2616 [label="return"];
    bb336__0_2616 -> bb438__0_2616 [label="unwind"];
    bb337__0_2616 -> bb387__0_2616 [label=""];
    bb338__0_2616 -> bb340__0_2616 [label=""];
    bb339__0_2616 -> bb340__0_2616 [label=""];
    bb340__0_2616 -> bb341__0_2616 [label=""];
    bb341__0_2616 -> bb342__0_2616 [label=""];
    bb342__0_2616 -> bb346__0_2616 [label="0"];
    bb342__0_2616 -> bb343__0_2616 [label="otherwise"];
    bb343__0_2616 -> bb344__0_2616 [label="return"];
    bb343__0_2616 -> bb438__0_2616 [label="unwind"];
    bb344__0_2616 -> bb345__0_2616 [label="return"];
    bb344__0_2616 -> bb438__0_2616 [label="unwind"];
    bb345__0_2616 -> bb430__0_2616 [label=""];
    bb346__0_2616 -> bb347__0_2616 [label="return"];
    bb346__0_2616 -> bb438__0_2616 [label="unwind"];
    bb347__0_2616 -> bb348__0_2616 [label="return"];
    bb347__0_2616 -> bb438__0_2616 [label="unwind"];
    bb348__0_2616 -> bb349__0_2616 [label="return"];
    bb348__0_2616 -> bb438__0_2616 [label="unwind"];
    bb349__0_2616 -> bb350__0_2616 [label="return"];
    bb349__0_2616 -> bb438__0_2616 [label="unwind"];
    bb350__0_2616 -> bb351__0_2616 [label="0"];
    bb350__0_2616 -> bb352__0_2616 [label="1"];
    bb350__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb351__0_2616 -> bb354__0_2616 [label="return"];
    bb351__0_2616 -> bb438__0_2616 [label="unwind"];
    bb352__0_2616 -> bb353__0_2616 [label="return"];
    bb352__0_2616 -> bb438__0_2616 [label="unwind"];
    bb353__0_2616 -> bb386__0_2616 [label=""];
    bb354__0_2616 -> bb359__0_2616 [label="0"];
    bb354__0_2616 -> bb355__0_2616 [label="otherwise"];
    bb355__0_2616 -> bb356__0_2616 [label="return"];
    bb355__0_2616 -> bb438__0_2616 [label="unwind"];
    bb356__0_2616 -> bb357__0_2616 [label="success"];
    bb356__0_2616 -> bb438__0_2616 [label="unwind"];
    bb357__0_2616 -> bb358__0_2616 [label="return"];
    bb357__0_2616 -> bb438__0_2616 [label="unwind"];
    bb358__0_2616 -> bb363__0_2616 [label=""];
    bb359__0_2616 -> bb360__0_2616 [label="return"];
    bb359__0_2616 -> bb438__0_2616 [label="unwind"];
    bb360__0_2616 -> bb361__0_2616 [label="success"];
    bb360__0_2616 -> bb438__0_2616 [label="unwind"];
    bb361__0_2616 -> bb362__0_2616 [label="return"];
    bb361__0_2616 -> bb438__0_2616 [label="unwind"];
    bb362__0_2616 -> bb363__0_2616 [label=""];
    bb363__0_2616 -> bb364__0_2616 [label="return"];
    bb363__0_2616 -> bb438__0_2616 [label="unwind"];
    bb364__0_2616 -> bb365__0_2616 [label=""];
    bb365__0_2616 -> bb366__0_2616 [label="return"];
    bb365__0_2616 -> bb438__0_2616 [label="unwind"];
    bb366__0_2616 -> bb368__0_2616 [label="0"];
    bb366__0_2616 -> bb367__0_2616 [label="1"];
    bb366__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb367__0_2616 -> bb369__0_2616 [label="return"];
    bb367__0_2616 -> bb438__0_2616 [label="unwind"];
    bb368__0_2616 -> bb376__0_2616 [label=""];
    bb369__0_2616 -> bb370__0_2616 [label="return"];
    bb369__0_2616 -> bb438__0_2616 [label="unwind"];
    bb370__0_2616 -> bb371__0_2616 [label="0"];
    bb370__0_2616 -> bb372__0_2616 [label="1"];
    bb370__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb371__0_2616 -> bb375__0_2616 [label="0"];
    bb371__0_2616 -> bb374__0_2616 [label="otherwise"];
    bb372__0_2616 -> bb373__0_2616 [label="return"];
    bb372__0_2616 -> bb438__0_2616 [label="unwind"];
    bb373__0_2616 -> bb386__0_2616 [label=""];
    bb374__0_2616 -> bb376__0_2616 [label=""];
    bb375__0_2616 -> bb365__0_2616 [label=""];
    bb376__0_2616 -> bb377__0_2616 [label="return"];
    bb376__0_2616 -> bb438__0_2616 [label="unwind"];
    bb377__0_2616 -> bb378__0_2616 [label="return"];
    bb377__0_2616 -> bb438__0_2616 [label="unwind"];
    bb378__0_2616 -> bb379__0_2616 [label="0"];
    bb378__0_2616 -> bb380__0_2616 [label="1"];
    bb378__0_2616 -> bb6__0_2616 [label="otherwise"];
    bb379__0_2616 -> bb382__0_2616 [label="return"];
    bb379__0_2616 -> bb438__0_2616 [label="unwind"];
    bb380__0_2616 -> bb381__0_2616 [label="return"];
    bb380__0_2616 -> bb438__0_2616 [label="unwind"];
    bb381__0_2616 -> bb385__0_2616 [label="return"];
    bb381__0_2616 -> bb439__0_2616 [label="unwind"];
    bb382__0_2616 -> bb383__0_2616 [label="return"];
    bb382__0_2616 -> bb438__0_2616 [label="unwind"];
    bb383__0_2616 -> bb384__0_2616 [label="return"];
    bb383__0_2616 -> bb439__0_2616 [label="unwind"];
    bb384__0_2616 -> bb437__0_2616 [label=""];
    bb385__0_2616 -> bb437__0_2616 [label=""];
    bb386__0_2616 -> bb430__0_2616 [label=""];
    bb387__0_2616 -> bb398__0_2616 [label=""];
    bb388__0_2616 -> bb389__0_2616 [label=""];
    bb389__0_2616 -> bb390__0_2616 [label=""];
    bb390__0_2616 -> bb391__0_2616 [label=""];
    bb391__0_2616 -> bb398__0_2616 [label=""];
    bb392__0_2616 -> bb393__0_2616 [label=""];
    bb393__0_2616 -> bb394__0_2616 [label=""];
    bb394__0_2616 -> bb395__0_2616 [label=""];
    bb395__0_2616 -> bb397__0_2616 [label=""];
    bb396__0_2616 -> bb397__0_2616 [label=""];
    bb397__0_2616 -> bb398__0_2616 [label=""];
    bb398__0_2616 -> bb399__0_2616 [label=""];
    bb399__0_2616 -> bb406__0_2616 [label=""];
    bb400__0_2616 -> bb401__0_2616 [label=""];
    bb401__0_2616 -> bb402__0_2616 [label=""];
    bb402__0_2616 -> bb403__0_2616 [label=""];
    bb403__0_2616 -> bb404__0_2616 [label=""];
    bb404__0_2616 -> bb405__0_2616 [label=""];
    bb405__0_2616 -> bb406__0_2616 [label=""];
    bb406__0_2616 -> bb407__0_2616 [label=""];
    bb407__0_2616 -> bb429__0_2616 [label=""];
    bb408__0_2616 -> bb419__0_2616 [label=""];
    bb409__0_2616 -> bb410__0_2616 [label=""];
    bb410__0_2616 -> bb411__0_2616 [label=""];
    bb411__0_2616 -> bb412__0_2616 [label=""];
    bb412__0_2616 -> bb419__0_2616 [label=""];
    bb413__0_2616 -> bb414__0_2616 [label=""];
    bb414__0_2616 -> bb415__0_2616 [label=""];
    bb415__0_2616 -> bb416__0_2616 [label=""];
    bb416__0_2616 -> bb418__0_2616 [label=""];
    bb417__0_2616 -> bb418__0_2616 [label=""];
    bb418__0_2616 -> bb419__0_2616 [label=""];
    bb419__0_2616 -> bb420__0_2616 [label=""];
    bb420__0_2616 -> bb427__0_2616 [label=""];
    bb421__0_2616 -> bb422__0_2616 [label=""];
    bb422__0_2616 -> bb423__0_2616 [label=""];
    bb423__0_2616 -> bb424__0_2616 [label=""];
    bb424__0_2616 -> bb425__0_2616 [label=""];
    bb425__0_2616 -> bb426__0_2616 [label=""];
    bb426__0_2616 -> bb427__0_2616 [label=""];
    bb427__0_2616 -> bb428__0_2616 [label=""];
    bb428__0_2616 -> bb429__0_2616 [label=""];
    bb429__0_2616 -> bb430__0_2616 [label=""];
    bb430__0_2616 -> bb431__0_2616 [label=""];
    bb431__0_2616 -> bb432__0_2616 [label=""];
    bb432__0_2616 -> bb433__0_2616 [label=""];
    bb433__0_2616 -> bb434__0_2616 [label="return"];
    bb433__0_2616 -> bb439__0_2616 [label="unwind"];
    bb434__0_2616 -> bb436__0_2616 [label=""];
    bb435__0_2616 -> bb436__0_2616 [label=""];
    bb436__0_2616 -> bb437__0_2616 [label=""];
    bb438__0_2616 -> bb439__0_2616 [label="return"];
    bb440__0_2616 -> bb439__0_2616 [label=""];
}
