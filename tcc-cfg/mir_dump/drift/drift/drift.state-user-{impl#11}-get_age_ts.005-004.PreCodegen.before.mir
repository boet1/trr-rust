// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1703:1: 1703:15>::get_age_ts` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1703:1: 1703:15>::get_age_ts(_1: &UserStats, _2: i64) -> i64 {
    debug self => _1;
    debug now => _2;
    let mut _0: i64;
    let _3: i64;
    let mut _4: i64;
    let mut _5: i64;
    let mut _6: i64;
    let mut _7: i64;
    let mut _8: i64;
    let mut _9: i64;
    let mut _10: i64;
    scope 1 {
        debug min_action_ts => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = ((*_1).9: i64);
        StorageLive(_6);
        _6 = ((*_1).7: i64);
        _4 = <i64 as Ord>::min(move _5, move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_7);
        _7 = ((*_1).8: i64);
        _3 = <i64 as Ord>::min(move _4, move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_4);
        StorageLive(_8);
        StorageLive(_9);
        _9 = _2;
        StorageLive(_10);
        _10 = _3;
        _8 = core::num::<impl i64>::saturating_sub(move _9, move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        StorageDead(_9);
        _0 = <i64 as Ord>::max(move _8, const 0_i64) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_8);
        StorageDead(_3);
        return;
    }
}
