digraph Mir_0_562 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn fulfill_spot_order(_1: &amp;ReErased mut state::user::User, _2: usize, _3: &amp;ReErased anchor_lang::prelude::Pubkey, _4: &amp;ReErased mut state::user::UserStats, _5: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _6: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;, _7: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)], _8: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;, _9: &amp;ReErased anchor_lang::prelude::Pubkey, _10: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;, _11: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _12: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _13: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _14: i64, _15: u64, _16: &amp;ReErased state::state::FeeStructure, _17: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, _18: bool) -&gt; std::result::Result&lt;(u64, u64), error::ErrorCode&gt;<br align="left"/>let _19: u16;<br align="left"/>let _20: usize;<br align="left"/>let mut _21: usize;<br align="left"/>let mut _22: bool;<br align="left"/>let _23: controller::position::PositionDirection;<br align="left"/>let _24: usize;<br align="left"/>let mut _25: usize;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _30: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _36: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased u16;<br align="left"/>let _41: &amp;ReErased u16;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: bool;<br align="left"/>let mut _49: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _52: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _53: controller::position::PositionDirection;<br align="left"/>let _54: ();<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _56: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _59: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _60: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _61: state::paused_operations::SpotOperation;<br align="left"/>let mut _62: ();<br align="left"/>let _63: error::ErrorCode;<br align="left"/>let _64: ();<br align="left"/>let mut _65: &amp;ReErased str;<br align="left"/>let _66: &amp;ReErased str;<br align="left"/>let mut _67: &amp;ReErased std::string::String;<br align="left"/>let _68: &amp;ReErased std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let _70: std::string::String;<br align="left"/>let mut _71: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _75: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _79: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _80: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: &amp;ReErased error::ErrorCode;<br align="left"/>let _83: ();<br align="left"/>let mut _84: &amp;ReErased str;<br align="left"/>let _85: &amp;ReErased str;<br align="left"/>let mut _86: error::ErrorCode;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: ();<br align="left"/>let _92: ();<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _94: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _97: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _98: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _99: state::paused_operations::SpotOperation;<br align="left"/>let mut _100: ();<br align="left"/>let _101: error::ErrorCode;<br align="left"/>let _102: ();<br align="left"/>let mut _103: &amp;ReErased str;<br align="left"/>let _104: &amp;ReErased str;<br align="left"/>let mut _105: &amp;ReErased std::string::String;<br align="left"/>let _106: &amp;ReErased std::string::String;<br align="left"/>let _107: std::string::String;<br align="left"/>let _108: std::string::String;<br align="left"/>let mut _109: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _111: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _112: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _113: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _114: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _115: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _116: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _117: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _118: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _119: &amp;ReErased error::ErrorCode;<br align="left"/>let _120: &amp;ReErased error::ErrorCode;<br align="left"/>let _121: ();<br align="left"/>let mut _122: &amp;ReErased str;<br align="left"/>let _123: &amp;ReErased str;<br align="left"/>let mut _124: error::ErrorCode;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: ();<br align="left"/>let _130: ();<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _132: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _133: bool;<br align="left"/>let mut _134: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _135: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _136: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _137: state::paused_operations::SpotOperation;<br align="left"/>let mut _138: ();<br align="left"/>let _139: error::ErrorCode;<br align="left"/>let _140: ();<br align="left"/>let mut _141: &amp;ReErased str;<br align="left"/>let _142: &amp;ReErased str;<br align="left"/>let mut _143: &amp;ReErased std::string::String;<br align="left"/>let _144: &amp;ReErased std::string::String;<br align="left"/>let _145: std::string::String;<br align="left"/>let _146: std::string::String;<br align="left"/>let mut _147: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _149: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _150: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _151: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _152: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _153: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _154: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _155: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _156: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased error::ErrorCode;<br align="left"/>let _158: &amp;ReErased error::ErrorCode;<br align="left"/>let _159: ();<br align="left"/>let mut _160: &amp;ReErased str;<br align="left"/>let _161: &amp;ReErased str;<br align="left"/>let mut _162: error::ErrorCode;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: ();<br align="left"/>let _168: ();<br align="left"/>let mut _169: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _170: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _173: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _174: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _175: state::paused_operations::SpotOperation;<br align="left"/>let mut _176: ();<br align="left"/>let _177: error::ErrorCode;<br align="left"/>let _178: ();<br align="left"/>let mut _179: &amp;ReErased str;<br align="left"/>let _180: &amp;ReErased str;<br align="left"/>let mut _181: &amp;ReErased std::string::String;<br align="left"/>let _182: &amp;ReErased std::string::String;<br align="left"/>let _183: std::string::String;<br align="left"/>let _184: std::string::String;<br align="left"/>let mut _185: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _186: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _187: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _188: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _189: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _190: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _191: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _192: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _193: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _194: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _195: &amp;ReErased error::ErrorCode;<br align="left"/>let _196: &amp;ReErased error::ErrorCode;<br align="left"/>let _197: ();<br align="left"/>let mut _198: &amp;ReErased str;<br align="left"/>let _199: &amp;ReErased str;<br align="left"/>let mut _200: error::ErrorCode;<br align="left"/>let mut _201: isize;<br align="left"/>let _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _203: !;<br align="left"/>let mut _204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _205: ();<br align="left"/>let _206: i128;<br align="left"/>let mut _207: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _208: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _209: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _210: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _211: &amp;ReErased state::user::User;<br align="left"/>let mut _212: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _213: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _214: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _215: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: i128;<br align="left"/>let _221: i128;<br align="left"/>let mut _222: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _223: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _224: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _225: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _226: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _227: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _228: &amp;ReErased mut state::user::User;<br align="left"/>let mut _229: u16;<br align="left"/>let mut _230: isize;<br align="left"/>let _231: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _232: !;<br align="left"/>let mut _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _234: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _235: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _236: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _237: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _238: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: i128;<br align="left"/>let mut _244: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, (i128, i128), std::alloc::Global&gt;;<br align="left"/>let _245: ();<br align="left"/>let mut _246: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _247: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)];<br align="left"/>let mut _248: std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _249: ();<br align="left"/>let _250: ();<br align="left"/>let mut _251: std::option::Option&lt;&amp;ReErased (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _252: &amp;ReErased mut std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _253: &amp;ReErased mut std::slice::Iter&lt;ReErased, (anchor_lang::prelude::Pubkey, usize, u64)&gt;;<br align="left"/>let mut _254: isize;<br align="left"/>let mut _255: !;<br align="left"/>let _256: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _257: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _258: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _259: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _260: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _267: i128;<br align="left"/>let mut _268: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _269: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _270: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _271: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _272: &amp;ReErased state::user::User;<br align="left"/>let _273: &amp;ReErased state::user::User;<br align="left"/>let mut _274: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _275: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _276: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _277: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _278: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _279: isize;<br align="left"/>let _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _281: !;<br align="left"/>let mut _282: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _283: i128;<br align="left"/>let _284: i128;<br align="left"/>let mut _285: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _286: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _287: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _288: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _289: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _290: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _291: &amp;ReErased state::user::User;<br align="left"/>let _292: &amp;ReErased state::user::User;<br align="left"/>let mut _293: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _294: u16;<br align="left"/>let mut _295: isize;<br align="left"/>let _296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _297: !;<br align="left"/>let mut _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _299: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _300: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _301: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _302: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _303: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _304: isize;<br align="left"/>let _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _306: !;<br align="left"/>let mut _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _308: i128;<br align="left"/>let _309: std::option::Option&lt;(i128, i128)&gt;;<br align="left"/>let mut _310: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, (i128, i128), std::alloc::Global&gt;;<br align="left"/>let mut _311: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _312: (i128, i128);<br align="left"/>let mut _313: i128;<br align="left"/>let mut _314: i128;<br align="left"/>let _315: i64;<br align="left"/>let mut _316: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _317: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _318: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _319: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _320: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _321: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _322: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _323: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _324: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _325: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _326: isize;<br align="left"/>let _327: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _328: !;<br align="left"/>let mut _329: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _330: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _331: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _332: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;u64&gt;&gt;;<br align="left"/>let mut _333: std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _334: &amp;ReErased state::user::Order;<br align="left"/>let _335: usize;<br align="left"/>let mut _336: usize;<br align="left"/>let mut _337: bool;<br align="left"/>let mut _338: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _339: i64;<br align="left"/>let mut _340: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _341: u64;<br align="left"/>let mut _342: u64;<br align="left"/>let mut _343: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _344: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _345: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let mut _346: isize;<br align="left"/>let _347: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _348: !;<br align="left"/>let mut _349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _350: std::option::Option&lt;u64&gt;;<br align="left"/>let _351: std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _352: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _353: std::result::Result&lt;std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _354: &amp;ReErased state::user::Order;<br align="left"/>let _355: &amp;ReErased state::user::Order;<br align="left"/>let _356: usize;<br align="left"/>let mut _357: usize;<br align="left"/>let mut _358: bool;<br align="left"/>let mut _359: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)];<br align="left"/>let mut _360: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _361: bool;<br align="left"/>let mut _362: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _363: isize;<br align="left"/>let _364: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _365: !;<br align="left"/>let mut _366: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _367: std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _368: u64;<br align="left"/>let mut _369: u64;<br align="left"/>let mut _370: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let _371: controller::position::PositionDirection;<br align="left"/>let mut _372: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _373: usize;<br align="left"/>let mut _374: usize;<br align="left"/>let mut _375: bool;<br align="left"/>let _376: ();<br align="left"/>let mut _377: std::slice::Iter&lt;ReErased, state::fulfillment::SpotFulfillmentMethod&gt;;<br align="left"/>let mut _378: std::slice::Iter&lt;ReErased, state::fulfillment::SpotFulfillmentMethod&gt;;<br align="left"/>let mut _379: &amp;ReErased [state::fulfillment::SpotFulfillmentMethod];<br align="left"/>let _380: &amp;ReErased [state::fulfillment::SpotFulfillmentMethod];<br align="left"/>let mut _381: &amp;ReErased std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _382: std::slice::Iter&lt;ReErased, state::fulfillment::SpotFulfillmentMethod&gt;;<br align="left"/>let _383: ();<br align="left"/>let mut _384: std::option::Option&lt;&amp;ReErased state::fulfillment::SpotFulfillmentMethod&gt;;<br align="left"/>let mut _385: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::fulfillment::SpotFulfillmentMethod&gt;;<br align="left"/>let mut _386: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::fulfillment::SpotFulfillmentMethod&gt;;<br align="left"/>let mut _387: isize;<br align="left"/>let mut _388: !;<br align="left"/>let _389: &amp;ReErased state::fulfillment::SpotFulfillmentMethod;<br align="left"/>let _390: ();<br align="left"/>let mut _391: bool;<br align="left"/>let mut _392: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _393: usize;<br align="left"/>let mut _394: usize;<br align="left"/>let mut _395: bool;<br align="left"/>let mut _396: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _397: state::user::OrderStatus;<br align="left"/>let mut _398: !;<br align="left"/>let _399: u64;<br align="left"/>let _400: u64;<br align="left"/>let mut _401: (u64, u64);<br align="left"/>let mut _402: isize;<br align="left"/>let _403: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _404: &amp;ReErased u16;<br align="left"/>let mut _405: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _406: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _407: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _408: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _409: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _410: isize;<br align="left"/>let _411: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _412: !;<br align="left"/>let mut _413: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _414: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _415: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _416: bool;<br align="left"/>let mut _417: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _418: &amp;ReErased state::user::User;<br align="left"/>let mut _419: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _420: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _421: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _422: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _423: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _424: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _425: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _426: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _427: &amp;ReErased state::user::User;<br align="left"/>let mut _428: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _429: isize;<br align="left"/>let _430: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _431: !;<br align="left"/>let mut _432: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _433: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _434: u64;<br align="left"/>let _435: u64;<br align="left"/>let mut _436: (u64, u64);<br align="left"/>let mut _437: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64)&gt;;<br align="left"/>let mut _438: std::result::Result&lt;(u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _439: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _440: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _441: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _442: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _443: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _444: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _445: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _446: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _447: &amp;ReErased mut state::user::User;<br align="left"/>let mut _448: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _449: usize;<br align="left"/>let mut _450: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _451: &amp;ReErased mut state::user::User;<br align="left"/>let mut _452: &amp;ReErased mut state::user::User;<br align="left"/>let mut _453: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _454: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _455: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _456: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _457: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _458: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _459: usize;<br align="left"/>let mut _460: u16;<br align="left"/>let mut _461: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _462: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _463: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _464: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _465: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _466: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _467: i64;<br align="left"/>let mut _468: u64;<br align="left"/>let mut _469: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _470: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _471: isize;<br align="left"/>let _472: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _473: !;<br align="left"/>let mut _474: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _475: (u64, u64);<br align="left"/>let _476: ();<br align="left"/>let mut _477: bool;<br align="left"/>let mut _478: u64;<br align="left"/>let _479: ();<br align="left"/>let mut _480: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _481: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _482: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _483: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _484: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _485: controller::position::PositionDirection;<br align="left"/>let mut _486: u64;<br align="left"/>let mut _487: isize;<br align="left"/>let _488: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _489: !;<br align="left"/>let mut _490: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _491: ();<br align="left"/>let mut _492: u64;<br align="left"/>let mut _493: u64;<br align="left"/>let mut _494: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64)&gt;;<br align="left"/>let mut _495: std::result::Result&lt;(u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _496: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _497: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _498: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _499: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _500: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _501: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _502: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _503: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _504: &amp;ReErased mut state::user::User;<br align="left"/>let mut _505: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _506: usize;<br align="left"/>let mut _507: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _508: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _509: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _510: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _511: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _512: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _513: i64;<br align="left"/>let mut _514: u64;<br align="left"/>let mut _515: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _516: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _517: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _518: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _519: isize;<br align="left"/>let _520: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _521: !;<br align="left"/>let mut _522: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _523: (u64, u64);<br align="left"/>let mut _524: u64;<br align="left"/>let mut _525: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _526: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _527: u64;<br align="left"/>let mut _528: u64;<br align="left"/>let mut _529: isize;<br align="left"/>let _530: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _531: !;<br align="left"/>let mut _532: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _533: u64;<br align="left"/>let mut _534: u64;<br align="left"/>let mut _535: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _536: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _537: u64;<br align="left"/>let mut _538: u64;<br align="left"/>let mut _539: isize;<br align="left"/>let _540: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _541: !;<br align="left"/>let mut _542: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _543: u64;<br align="left"/>let _544: ();<br align="left"/>let mut _545: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _546: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _547: bool;<br align="left"/>let mut _548: bool;<br align="left"/>let mut _549: u64;<br align="left"/>let mut _550: bool;<br align="left"/>let mut _551: u64;<br align="left"/>let mut _552: ();<br align="left"/>let _553: error::ErrorCode;<br align="left"/>let _554: ();<br align="left"/>let mut _555: &amp;ReErased str;<br align="left"/>let _556: &amp;ReErased str;<br align="left"/>let mut _557: &amp;ReErased std::string::String;<br align="left"/>let _558: &amp;ReErased std::string::String;<br align="left"/>let _559: std::string::String;<br align="left"/>let _560: std::string::String;<br align="left"/>let mut _561: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _562: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _563: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _564: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _565: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _566: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _567: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _568: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _569: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _570: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _571: &amp;ReErased error::ErrorCode;<br align="left"/>let _572: &amp;ReErased error::ErrorCode;<br align="left"/>let _573: ();<br align="left"/>let mut _574: &amp;ReErased str;<br align="left"/>let _575: &amp;ReErased str;<br align="left"/>let mut _576: &amp;ReErased std::string::String;<br align="left"/>let _577: &amp;ReErased std::string::String;<br align="left"/>let _578: std::string::String;<br align="left"/>let _579: std::string::String;<br align="left"/>let mut _580: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _581: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _582: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _583: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _584: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _585: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _586: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _587: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _588: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _589: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _590: &amp;ReErased u64;<br align="left"/>let _591: &amp;ReErased u64;<br align="left"/>let mut _592: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _593: &amp;ReErased u64;<br align="left"/>let _594: &amp;ReErased u64;<br align="left"/>let mut _595: error::ErrorCode;<br align="left"/>let mut _596: isize;<br align="left"/>let _597: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _598: !;<br align="left"/>let mut _599: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _600: ();<br align="left"/>let _601: i128;<br align="left"/>let mut _602: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _603: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _604: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _605: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _606: &amp;ReErased state::user::User;<br align="left"/>let mut _607: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _608: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _609: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _610: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _611: isize;<br align="left"/>let _612: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _613: !;<br align="left"/>let mut _614: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _615: i128;<br align="left"/>let _616: i128;<br align="left"/>let mut _617: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _618: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _619: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _620: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _621: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _622: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _623: &amp;ReErased mut state::user::User;<br align="left"/>let mut _624: u16;<br align="left"/>let mut _625: isize;<br align="left"/>let _626: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _627: !;<br align="left"/>let mut _628: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _629: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _630: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _631: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _632: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _633: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _634: isize;<br align="left"/>let _635: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _636: !;<br align="left"/>let mut _637: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _638: i128;<br align="left"/>let _639: i64;<br align="left"/>let mut _640: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _641: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _642: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _643: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _644: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _645: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _646: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _647: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _648: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _649: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _650: isize;<br align="left"/>let _651: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _652: !;<br align="left"/>let mut _653: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _654: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _655: i64;<br align="left"/>let mut _656: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _657: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _658: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _659: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _660: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _661: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _662: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _663: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _664: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _665: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _666: isize;<br align="left"/>let _667: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _668: !;<br align="left"/>let mut _669: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _670: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _671: state::oracle::StrictOraclePrice;<br align="left"/>let mut _672: i64;<br align="left"/>let mut _673: i64;<br align="left"/>let mut _674: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _675: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _676: state::oracle::StrictOraclePrice;<br align="left"/>let mut _677: i64;<br align="left"/>let mut _678: i64;<br align="left"/>let mut _679: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _680: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _681: math::margin::MarginRequirementType;<br align="left"/>let _682: bool;<br align="left"/>let mut _683: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _684: bool;<br align="left"/>let mut _685: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _686: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _687: controller::position::PositionDirection;<br align="left"/>let mut _688: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (math::margin::MarginRequirementType, bool)&gt;;<br align="left"/>let mut _689: std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;;<br align="left"/>let mut _690: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _691: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _692: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _693: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _694: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _695: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _696: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _697: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _698: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _699: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _700: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _701: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _702: i128;<br align="left"/>let mut _703: i128;<br align="left"/>let mut _704: i128;<br align="left"/>let mut _705: i128;<br align="left"/>let mut _706: math::margin::MarginRequirementType;<br align="left"/>let mut _707: isize;<br align="left"/>let _708: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _709: !;<br align="left"/>let mut _710: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _711: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _712: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (math::margin::MarginRequirementType, bool)&gt;;<br align="left"/>let mut _713: std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;;<br align="left"/>let mut _714: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _715: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _716: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _717: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _718: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _719: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _720: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _721: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _722: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _723: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _724: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _725: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _726: i128;<br align="left"/>let mut _727: i128;<br align="left"/>let mut _728: i128;<br align="left"/>let mut _729: i128;<br align="left"/>let mut _730: math::margin::MarginRequirementType;<br align="left"/>let mut _731: isize;<br align="left"/>let _732: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _733: !;<br align="left"/>let mut _734: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _735: (math::margin::MarginRequirementType, bool);<br align="left"/>let _736: ();<br align="left"/>let mut _737: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _738: ();<br align="left"/>let mut _739: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _740: state::margin_calculation::MarginContext;<br align="left"/>let mut _741: state::margin_calculation::MarginContext;<br align="left"/>let mut _742: state::margin_calculation::MarginContext;<br align="left"/>let mut _743: math::margin::MarginRequirementType;<br align="left"/>let mut _744: [(u16, i128); 2_usize];<br align="left"/>let mut _745: (u16, i128);<br align="left"/>let mut _746: u16;<br align="left"/>let mut _747: i128;<br align="left"/>let mut _748: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _749: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _750: i128;<br align="left"/>let mut _751: i128;<br align="left"/>let mut _752: isize;<br align="left"/>let _753: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _754: !;<br align="left"/>let mut _755: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _756: i128;<br align="left"/>let mut _757: (u16, i128);<br align="left"/>let mut _758: i128;<br align="left"/>let mut _759: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _760: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _761: i128;<br align="left"/>let mut _762: i128;<br align="left"/>let mut _763: isize;<br align="left"/>let _764: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _765: !;<br align="left"/>let mut _766: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _767: i128;<br align="left"/>let mut _768: &amp;ReErased state::user::User;<br align="left"/>let mut _769: i64;<br align="left"/>let _770: ();<br align="left"/>let mut _771: bool;<br align="left"/>let mut _772: bool;<br align="left"/>let mut _773: state::margin_calculation::MarginContext;<br align="left"/>let mut _774: state::margin_calculation::MarginContext;<br align="left"/>let _775: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _776: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _777: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _778: &amp;ReErased state::user::User;<br align="left"/>let mut _779: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _780: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _781: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _782: state::margin_calculation::MarginContext;<br align="left"/>let mut _783: isize;<br align="left"/>let _784: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _785: !;<br align="left"/>let mut _786: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _787: state::margin_calculation::MarginCalculation;<br align="left"/>let _788: ();<br align="left"/>let mut _789: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _790: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _791: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _792: &amp;ReErased mut state::user::User;<br align="left"/>let mut _793: u32;<br align="left"/>let mut _794: u32;<br align="left"/>let mut _795: u32;<br align="left"/>let mut _796: i64;<br align="left"/>let mut _797: isize;<br align="left"/>let _798: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _799: !;<br align="left"/>let mut _800: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _801: ();<br align="left"/>let _802: ();<br align="left"/>let mut _803: bool;<br align="left"/>let mut _804: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _805: !;<br align="left"/>let _806: ();<br align="left"/>let mut _807: &amp;ReErased str;<br align="left"/>let _808: &amp;ReErased str;<br align="left"/>let mut _809: &amp;ReErased std::string::String;<br align="left"/>let _810: &amp;ReErased std::string::String;<br align="left"/>let _811: std::string::String;<br align="left"/>let _812: std::string::String;<br align="left"/>let mut _813: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _814: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _815: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _816: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _817: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _818: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _819: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _820: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _821: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _822: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _823: &amp;ReErased u128;<br align="left"/>let _824: &amp;ReErased u128;<br align="left"/>let mut _825: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _826: &amp;ReErased i128;<br align="left"/>let _827: &amp;ReErased i128;<br align="left"/>let mut _828: error::ErrorCode;<br align="left"/>let _829: ();<br align="left"/>let mut _830: std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _831: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _832: std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let _833: ();<br align="left"/>let mut _834: std::option::Option&lt;(anchor_lang::prelude::Pubkey, i64)&gt;;<br align="left"/>let mut _835: &amp;ReErased mut std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _836: &amp;ReErased mut std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _837: isize;<br align="left"/>let mut _838: !;<br align="left"/>let _839: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _840: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _841: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _842: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _843: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _844: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _845: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _846: isize;<br align="left"/>let _847: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _848: !;<br align="left"/>let mut _849: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _850: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _851: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _852: bool;<br align="left"/>let mut _853: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _854: &amp;ReErased state::user::User;<br align="left"/>let mut _855: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _856: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _857: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _858: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _859: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _860: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _861: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _862: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _863: &amp;ReErased state::user::User;<br align="left"/>let mut _864: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _865: isize;<br align="left"/>let _866: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _867: !;<br align="left"/>let mut _868: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _869: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _870: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _871: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _872: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _873: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _874: isize;<br align="left"/>let _875: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _876: !;<br align="left"/>let mut _877: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _878: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _879: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _880: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _881: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _882: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _883: &amp;ReErased u16;<br align="left"/>let _884: &amp;ReErased u16;<br align="left"/>let mut _885: isize;<br align="left"/>let _886: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _887: !;<br align="left"/>let mut _888: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _889: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _890: &amp;ReErased i128;<br align="left"/>let _891: &amp;ReErased i128;<br align="left"/>let mut _892: &amp;ReErased (i128, i128);<br align="left"/>let mut _893: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased (i128, i128)&gt;;<br align="left"/>let mut _894: std::result::Result&lt;&amp;ReErased (i128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _895: std::option::Option&lt;&amp;ReErased (i128, i128)&gt;;<br align="left"/>let mut _896: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, (i128, i128), std::alloc::Global&gt;;<br align="left"/>let mut _897: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _898: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _899: isize;<br align="left"/>let _900: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _901: !;<br align="left"/>let mut _902: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _903: &amp;ReErased (i128, i128);<br align="left"/>let _904: i128;<br align="left"/>let mut _905: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _906: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _907: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _908: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _909: &amp;ReErased state::user::User;<br align="left"/>let _910: &amp;ReErased state::user::User;<br align="left"/>let mut _911: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _912: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _913: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _914: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _915: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _916: isize;<br align="left"/>let _917: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _918: !;<br align="left"/>let mut _919: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _920: i128;<br align="left"/>let _921: i128;<br align="left"/>let mut _922: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _923: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _924: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _925: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _926: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _927: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _928: &amp;ReErased state::user::User;<br align="left"/>let _929: &amp;ReErased state::user::User;<br align="left"/>let mut _930: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _931: u16;<br align="left"/>let mut _932: isize;<br align="left"/>let _933: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _934: !;<br align="left"/>let mut _935: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _936: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _937: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _938: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _939: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _940: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _941: isize;<br align="left"/>let _942: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _943: !;<br align="left"/>let mut _944: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _945: i128;<br align="left"/>let _946: math::margin::MarginRequirementType;<br align="left"/>let _947: bool;<br align="left"/>let mut _948: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _949: bool;<br align="left"/>let mut _950: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _951: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _952: controller::position::PositionDirection;<br align="left"/>let mut _953: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (math::margin::MarginRequirementType, bool)&gt;;<br align="left"/>let mut _954: std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;;<br align="left"/>let mut _955: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _956: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _957: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _958: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _959: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _960: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _961: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _962: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _963: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _964: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _965: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _966: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _967: i128;<br align="left"/>let mut _968: i128;<br align="left"/>let mut _969: i128;<br align="left"/>let mut _970: i128;<br align="left"/>let mut _971: math::margin::MarginRequirementType;<br align="left"/>let mut _972: isize;<br align="left"/>let _973: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _974: !;<br align="left"/>let mut _975: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _976: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _977: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (math::margin::MarginRequirementType, bool)&gt;;<br align="left"/>let mut _978: std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;;<br align="left"/>let mut _979: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _980: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _981: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _982: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _983: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _984: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _985: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _986: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _987: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _988: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _989: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _990: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _991: i128;<br align="left"/>let mut _992: i128;<br align="left"/>let mut _993: i128;<br align="left"/>let mut _994: i128;<br align="left"/>let mut _995: math::margin::MarginRequirementType;<br align="left"/>let mut _996: isize;<br align="left"/>let _997: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _998: !;<br align="left"/>let mut _999: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1000: (math::margin::MarginRequirementType, bool);<br align="left"/>let _1001: ();<br align="left"/>let mut _1002: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1003: ();<br align="left"/>let mut _1004: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1005: state::margin_calculation::MarginContext;<br align="left"/>let mut _1006: state::margin_calculation::MarginContext;<br align="left"/>let mut _1007: state::margin_calculation::MarginContext;<br align="left"/>let mut _1008: math::margin::MarginRequirementType;<br align="left"/>let mut _1009: [(u16, i128); 2_usize];<br align="left"/>let mut _1010: (u16, i128);<br align="left"/>let mut _1011: u16;<br align="left"/>let mut _1012: i128;<br align="left"/>let mut _1013: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1014: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1015: i128;<br align="left"/>let mut _1016: i128;<br align="left"/>let mut _1017: isize;<br align="left"/>let _1018: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1019: !;<br align="left"/>let mut _1020: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1021: i128;<br align="left"/>let mut _1022: (u16, i128);<br align="left"/>let mut _1023: i128;<br align="left"/>let mut _1024: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1025: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1026: i128;<br align="left"/>let mut _1027: i128;<br align="left"/>let mut _1028: isize;<br align="left"/>let _1029: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1030: !;<br align="left"/>let mut _1031: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1032: i128;<br align="left"/>let mut _1033: &amp;ReErased state::user::User;<br align="left"/>let _1034: &amp;ReErased state::user::User;<br align="left"/>let mut _1035: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _1036: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1037: i64;<br align="left"/>let _1038: ();<br align="left"/>let mut _1039: bool;<br align="left"/>let _1040: ();<br align="left"/>let mut _1041: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1042: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1043: bool;<br align="left"/>let mut _1044: bool;<br align="left"/>let mut _1045: ();<br align="left"/>let _1046: error::ErrorCode;<br align="left"/>let _1047: ();<br align="left"/>let mut _1048: &amp;ReErased str;<br align="left"/>let _1049: &amp;ReErased str;<br align="left"/>let mut _1050: &amp;ReErased std::string::String;<br align="left"/>let _1051: &amp;ReErased std::string::String;<br align="left"/>let _1052: std::string::String;<br align="left"/>let _1053: std::string::String;<br align="left"/>let mut _1054: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1055: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1056: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1057: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1058: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1059: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1060: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1061: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1062: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1063: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1064: &amp;ReErased error::ErrorCode;<br align="left"/>let _1065: &amp;ReErased error::ErrorCode;<br align="left"/>let _1066: ();<br align="left"/>let mut _1067: &amp;ReErased str;<br align="left"/>let _1068: &amp;ReErased str;<br align="left"/>let mut _1069: error::ErrorCode;<br align="left"/>let mut _1070: isize;<br align="left"/>let _1071: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1072: !;<br align="left"/>let mut _1073: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1074: ();<br align="left"/>let mut _1075: bool;<br align="left"/>let mut _1076: state::margin_calculation::MarginContext;<br align="left"/>let mut _1077: state::margin_calculation::MarginContext;<br align="left"/>let _1078: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1079: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _1080: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _1081: &amp;ReErased state::user::User;<br align="left"/>let _1082: &amp;ReErased state::user::User;<br align="left"/>let mut _1083: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _1084: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1085: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1086: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1087: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1088: state::margin_calculation::MarginContext;<br align="left"/>let mut _1089: isize;<br align="left"/>let _1090: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1091: !;<br align="left"/>let mut _1092: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1093: state::margin_calculation::MarginCalculation;<br align="left"/>let _1094: ();<br align="left"/>let mut _1095: isize;<br align="left"/>let mut _1096: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _1097: ();<br align="left"/>let mut _1098: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1099: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1100: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _1101: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _1102: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _1103: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1104: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1105: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1106: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1107: u32;<br align="left"/>let mut _1108: u32;<br align="left"/>let mut _1109: u32;<br align="left"/>let mut _1110: i64;<br align="left"/>let mut _1111: isize;<br align="left"/>let _1112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1113: !;<br align="left"/>let mut _1114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1115: ();<br align="left"/>let mut _1116: bool;<br align="left"/>let mut _1117: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1118: !;<br align="left"/>let _1119: ();<br align="left"/>let mut _1120: &amp;ReErased str;<br align="left"/>let _1121: &amp;ReErased str;<br align="left"/>let mut _1122: &amp;ReErased std::string::String;<br align="left"/>let _1123: &amp;ReErased std::string::String;<br align="left"/>let _1124: std::string::String;<br align="left"/>let _1125: std::string::String;<br align="left"/>let mut _1126: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1127: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1128: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _1129: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _1130: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _1131: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1132: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1133: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1134: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1135: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1136: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _1137: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1138: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1139: &amp;ReErased u128;<br align="left"/>let _1140: &amp;ReErased u128;<br align="left"/>let mut _1141: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1142: &amp;ReErased i128;<br align="left"/>let _1143: &amp;ReErased i128;<br align="left"/>let mut _1144: error::ErrorCode;<br align="left"/>let mut _1145: (u64, u64);<br align="left"/>let mut _1146: u64;<br align="left"/>let mut _1147: u64;<br align="left"/>let mut _1148: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _1149: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1150: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _1151: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1152: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _1153: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1154: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1155: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _1156: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1157: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1158: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1159: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1160: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _1161: &amp;ReErased (anchor_lang::prelude::Pubkey, usize, u64);<br align="left"/>let mut _1162: bool;<br align="left"/>let mut _1163: bool;<br align="left"/>let mut _1164: bool;<br align="left"/>let mut _1165: bool;<br align="left"/>let mut _1166: bool;<br align="left"/>let mut _1167: bool;<br align="left"/>let mut _1168: isize;<br align="left"/>let mut _1169: isize;<br align="left"/>let mut _1170: isize;<br align="left"/>let mut _1171: isize;<br align="left"/>let mut _1172: isize;<br align="left"/>let mut _1173: isize;<br align="left"/>let mut _1174: isize;<br align="left"/>let mut _1175: isize;<br align="left"/>let mut _1176: isize;<br align="left"/>let mut _1177: isize;<br align="left"/>let mut _1178: isize;<br align="left"/>let mut _1179: isize;<br align="left"/>let mut _1180: isize;<br align="left"/>let mut _1181: isize;<br align="left"/>let mut _1182: isize;<br align="left"/>let mut _1183: isize;<br align="left"/>let mut _1184: isize;<br align="left"/>let mut _1185: isize;<br align="left"/>let mut _1186: isize;<br align="left"/>let mut _1187: isize;<br align="left"/>let mut _1188: isize;<br align="left"/>let mut _1189: isize;<br align="left"/>let mut _1190: isize;<br align="left"/>let mut _1191: isize;<br align="left"/>let mut _1192: isize;<br align="left"/>let mut _1193: isize;<br align="left"/>let mut _1194: isize;<br align="left"/>let mut _1195: isize;<br align="left"/>let mut _1196: isize;<br align="left"/>let mut _1197: isize;<br align="left"/>let mut _1198: isize;<br align="left"/>let mut _1199: isize;<br align="left"/>let mut _1200: isize;<br align="left"/>let mut _1201: isize;<br align="left"/>let mut _1202: isize;<br align="left"/>let mut _1203: isize;<br align="left"/>let mut _1204: isize;<br align="left"/>let mut _1205: isize;<br align="left"/>let mut _1206: isize;<br align="left"/>let mut _1207: isize;<br align="left"/>let mut _1208: isize;<br align="left"/>let mut _1209: isize;<br align="left"/>let mut _1210: isize;<br align="left"/>let mut _1211: isize;<br align="left"/>let mut _1212: isize;<br align="left"/>let mut _1213: isize;<br align="left"/>let mut _1214: isize;<br align="left"/>let mut _1215: isize;<br align="left"/>let mut _1216: isize;<br align="left"/>let mut _1217: isize;<br align="left"/>let mut _1218: isize;<br align="left"/>let mut _1219: isize;<br align="left"/>let mut _1220: isize;<br align="left"/>let mut _1221: isize;<br align="left"/>let mut _1222: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug user_order_index =&gt; _2;<br align="left"/>debug user_key =&gt; _3;<br align="left"/>debug user_stats =&gt; _4;<br align="left"/>debug makers_and_referrer =&gt; _5;<br align="left"/>debug makers_and_referrer_stats =&gt; _6;<br align="left"/>debug maker_orders_info =&gt; _7;<br align="left"/>debug filler =&gt; _8;<br align="left"/>debug filler_key =&gt; _9;<br align="left"/>debug filler_stats =&gt; _10;<br align="left"/>debug spot_market_map =&gt; _11;<br align="left"/>debug perp_market_map =&gt; _12;<br align="left"/>debug oracle_map =&gt; _13;<br align="left"/>debug now =&gt; _14;<br align="left"/>debug slot =&gt; _15;<br align="left"/>debug fee_structure =&gt; _16;<br align="left"/>debug fulfillment_params =&gt; _17;<br align="left"/>debug oracle_stale_for_margin =&gt; _18;<br align="left"/>debug base_market_index =&gt; _19;<br align="left"/>debug order_direction =&gt; _23;<br align="left"/>debug quote_market =&gt; _27;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug base_market =&gt; _36;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug error_code =&gt; _63;<br align="left"/>debug res =&gt; _70;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug error_code =&gt; _101;<br align="left"/>debug res =&gt; _108;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug error_code =&gt; _139;<br align="left"/>debug res =&gt; _146;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug error_code =&gt; _177;<br align="left"/>debug res =&gt; _184;<br align="left"/>debug residual =&gt; _202;<br align="left"/>debug val =&gt; _205;<br align="left"/>debug quote_token_amount_before =&gt; _206;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug base_token_amount_before =&gt; _221;<br align="left"/>debug residual =&gt; _231;<br align="left"/>debug val =&gt; _234;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug maker_token_amounts_before =&gt; _244;<br align="left"/>debug iter =&gt; _248;<br align="left"/>debug maker_key =&gt; _256;<br align="left"/>debug maker =&gt; _257;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>debug maker_quote_token_amount_before =&gt; _267;<br align="left"/>debug residual =&gt; _280;<br align="left"/>debug val =&gt; _283;<br align="left"/>debug maker_base_token_amount_before =&gt; _284;<br align="left"/>debug residual =&gt; _296;<br align="left"/>debug val =&gt; _299;<br align="left"/>debug residual =&gt; _305;<br align="left"/>debug val =&gt; _308;<br align="left"/>debug oracle_price =&gt; _315;<br align="left"/>debug residual =&gt; _327;<br align="left"/>debug val =&gt; _330;<br align="left"/>debug limit_price =&gt; _331;<br align="left"/>debug residual =&gt; _347;<br align="left"/>debug val =&gt; _350;<br align="left"/>debug fulfillment_methods =&gt; _351;<br align="left"/>debug residual =&gt; _364;<br align="left"/>debug val =&gt; _367;<br align="left"/>debug base_asset_amount =&gt; _368;<br align="left"/>debug quote_asset_amount =&gt; _369;<br align="left"/>debug maker_fills =&gt; _370;<br align="left"/>debug maker_direction =&gt; _371;<br align="left"/>debug iter =&gt; _382;<br align="left"/>debug fulfillment_method =&gt; _389;<br align="left"/>debug base_filled =&gt; _399;<br align="left"/>debug quote_filled =&gt; _400;<br align="left"/>debug maker_key =&gt; _403;<br align="left"/>debug maker_order_index =&gt; _404;<br align="left"/>debug maker =&gt; _405;<br align="left"/>debug residual =&gt; _411;<br align="left"/>debug val =&gt; _414;<br align="left"/>debug maker_stats =&gt; _415;<br align="left"/>debug residual =&gt; _430;<br align="left"/>debug val =&gt; _433;<br align="left"/>debug base_filled =&gt; _434;<br align="left"/>debug quote_filled =&gt; _435;<br align="left"/>debug residual =&gt; _472;<br align="left"/>debug val =&gt; _475;<br align="left"/>debug residual =&gt; _488;<br align="left"/>debug val =&gt; _491;<br align="left"/>debug residual =&gt; _520;<br align="left"/>debug val =&gt; _523;<br align="left"/>debug residual =&gt; _530;<br align="left"/>debug val =&gt; _533;<br align="left"/>debug residual =&gt; _540;<br align="left"/>debug val =&gt; _543;<br align="left"/>debug error_code =&gt; _553;<br align="left"/>debug res =&gt; _560;<br align="left"/>debug res =&gt; _579;<br align="left"/>debug residual =&gt; _597;<br align="left"/>debug val =&gt; _600;<br align="left"/>debug quote_token_amount_after =&gt; _601;<br align="left"/>debug residual =&gt; _612;<br align="left"/>debug val =&gt; _615;<br align="left"/>debug base_token_amount_after =&gt; _616;<br align="left"/>debug residual =&gt; _626;<br align="left"/>debug val =&gt; _629;<br align="left"/>debug residual =&gt; _635;<br align="left"/>debug val =&gt; _638;<br align="left"/>debug quote_price =&gt; _639;<br align="left"/>debug residual =&gt; _651;<br align="left"/>debug val =&gt; _654;<br align="left"/>debug base_price =&gt; _655;<br align="left"/>debug residual =&gt; _667;<br align="left"/>debug val =&gt; _670;<br align="left"/>debug strict_quote_price =&gt; _671;<br align="left"/>debug strict_base_price =&gt; _676;<br align="left"/>debug margin_type =&gt; _681;<br align="left"/>debug taker_risk_increasing =&gt; _682;<br align="left"/>debug residual =&gt; _708;<br align="left"/>debug val =&gt; _711;<br align="left"/>debug residual =&gt; _732;<br align="left"/>debug val =&gt; _735;<br align="left"/>debug context =&gt; _740;<br align="left"/>debug residual =&gt; _753;<br align="left"/>debug val =&gt; _756;<br align="left"/>debug residual =&gt; _764;<br align="left"/>debug val =&gt; _767;<br align="left"/>debug taker_margin_calculation =&gt; _775;<br align="left"/>debug residual =&gt; _784;<br align="left"/>debug val =&gt; _787;<br align="left"/>debug residual =&gt; _798;<br align="left"/>debug val =&gt; _801;<br align="left"/>debug res =&gt; _812;<br align="left"/>debug iter =&gt; _832;<br align="left"/>debug maker_key =&gt; _839;<br align="left"/>debug maker =&gt; _840;<br align="left"/>debug residual =&gt; _847;<br align="left"/>debug val =&gt; _850;<br align="left"/>debug maker_stats =&gt; _851;<br align="left"/>debug residual =&gt; _866;<br align="left"/>debug val =&gt; _869;<br align="left"/>debug quote_market =&gt; _870;<br align="left"/>debug residual =&gt; _875;<br align="left"/>debug val =&gt; _878;<br align="left"/>debug base_market =&gt; _879;<br align="left"/>debug residual =&gt; _886;<br align="left"/>debug val =&gt; _889;<br align="left"/>debug maker_base_token_amount_before =&gt; _890;<br align="left"/>debug maker_quote_token_amount_before =&gt; _891;<br align="left"/>debug residual =&gt; _900;<br align="left"/>debug val =&gt; _903;<br align="left"/>debug maker_quote_token_amount_after =&gt; _904;<br align="left"/>debug residual =&gt; _917;<br align="left"/>debug val =&gt; _920;<br align="left"/>debug maker_base_token_amount_after =&gt; _921;<br align="left"/>debug residual =&gt; _933;<br align="left"/>debug val =&gt; _936;<br align="left"/>debug residual =&gt; _942;<br align="left"/>debug val =&gt; _945;<br align="left"/>debug margin_type =&gt; _946;<br align="left"/>debug maker_risk_increasing =&gt; _947;<br align="left"/>debug residual =&gt; _973;<br align="left"/>debug val =&gt; _976;<br align="left"/>debug residual =&gt; _997;<br align="left"/>debug val =&gt; _1000;<br align="left"/>debug context =&gt; _1005;<br align="left"/>debug residual =&gt; _1018;<br align="left"/>debug val =&gt; _1021;<br align="left"/>debug residual =&gt; _1029;<br align="left"/>debug val =&gt; _1032;<br align="left"/>debug error_code =&gt; _1046;<br align="left"/>debug res =&gt; _1053;<br align="left"/>debug residual =&gt; _1071;<br align="left"/>debug val =&gt; _1074;<br align="left"/>debug maker_margin_calculation =&gt; _1078;<br align="left"/>debug residual =&gt; _1090;<br align="left"/>debug val =&gt; _1093;<br align="left"/>debug maker_stats =&gt; _1096;<br align="left"/>debug residual =&gt; _1112;<br align="left"/>debug val =&gt; _1115;<br align="left"/>debug res =&gt; _1125;<br align="left"/>>;
    bb0__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1167 = const false<br/>_1166 = const false<br/>_1165 = const false<br/>_1164 = const false<br/>_1163 = const false<br/>_1162 = const false<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _2<br/>_21 = Len(((*_1).5: [state::user::Order; 32]))<br/>_22 = Lt(_20, _21)<br/></td></tr><tr><td align="left">assert(move _22, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _21, _20)</td></tr></table>>];
    bb1__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_19 = (((*_1).5: [state::user::Order; 32])[_20].11: u16)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _2<br/>_25 = Len(((*_1).5: [state::user::Order; 32]))<br/>_26 = Lt(_24, _25)<br/></td></tr><tr><td align="left">assert(move _26, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _25, _24)</td></tr></table>>];
    bb2__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_23 = (((*_1).5: [state::user::Order; 32])[_24].17: controller::position::PositionDirection)<br/>StorageDead(_24)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;(*_11)<br/></td></tr><tr><td align="left">_29 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _30)</td></tr></table>>];
    bb3__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb4__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb5__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_28 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1167 = const true<br/>_27 = move _35<br/>StorageDead(_35)<br/>_1170 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_11)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_19<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_38 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _39, move _40)</td></tr></table>>];
    bb6__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb8__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_1168 = discriminant(_28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb10__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb11__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_37 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1166 = const true<br/>_36 = move _46<br/>StorageDead(_46)<br/>_1174 = discriminant(_37)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;(*_17)<br/></td></tr><tr><td align="left">_48 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::is_external(move _49)</td></tr></table>>];
    bb12__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb13__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_1172 = discriminant(_37)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb15__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_23<br/>StorageLive(_52)<br/>_1160 = const _<br/>_52 = &amp;(*_1160)<br/></td></tr><tr><td align="left">_50 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _51, move _52)</td></tr></table>>];
    bb16__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb17__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;_27<br/></td></tr><tr><td align="left">_59 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb18__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/>StorageLive(_61)<br/>_61 = SpotOperation::Withdraw<br/></td></tr><tr><td align="left">_57 = SpotMarket::is_operation_paused(move _58, move _61)</td></tr></table>>];
    bb19__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb20__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_59)<br/>StorageLive(_63)<br/>_63 = error::ErrorCode::MarketFillOrderPaused<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_1157 = const _<br/>_74 = &amp;(*_1157)<br/>_73 = &amp;(*_74)<br/>_72 = move _73 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_73)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;_63<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _81)</td></tr></table>>];
    bb21__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_59)<br/>StorageLive(_62)<br/>_62 = ()<br/>_56 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _62)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = [move _80]<br/>StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_71 = Arguments::&lt;'_&gt;::new_v1(move _72, move _76)</td></tr></table>>];
    bb23__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = format(move _71)</td></tr></table>>];
    bb24__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>_69 = move _70<br/>StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = &lt;String as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb25__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_65 = &amp;(*_66)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = solana_program::log::sol_log(move _65)</td></tr></table>>];
    bb26__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb27__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = const &quot;withdraw from quote market paused&quot;<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = solana_program::log::sol_log(move _84)</td></tr></table>>];
    bb28__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageLive(_86)<br/>_86 = _63<br/>_56 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _86)<br/>StorageDead(_86)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb30__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_87 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb31__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_55 as Continue).0: ())<br/>_54 = _91<br/>StorageDead(_91)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;_36<br/></td></tr><tr><td align="left">_97 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb32__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb33__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/>StorageLive(_99)<br/>_99 = SpotOperation::Deposit<br/></td></tr><tr><td align="left">_95 = SpotMarket::is_operation_paused(move _96, move _99)</td></tr></table>>];
    bb35__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb36__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_97)<br/>StorageLive(_101)<br/>_101 = error::ErrorCode::MarketFillOrderPaused<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_1156 = const _<br/>_112 = &amp;(*_1156)<br/>_111 = &amp;(*_112)<br/>_110 = move _111 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_111)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;_101<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_118 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _119)</td></tr></table>>];
    bb37__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_97)<br/>StorageLive(_100)<br/>_100 = ()<br/>_94 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _100)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_117 = [move _118]<br/>StorageDead(_118)<br/>_116 = &amp;_117<br/>_115 = &amp;(*_116)<br/>_114 = move _115 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_109 = Arguments::&lt;'_&gt;::new_v1(move _110, move _114)</td></tr></table>>];
    bb39__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = format(move _109)</td></tr></table>>];
    bb40__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_120)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_112)<br/>_107 = move _108<br/>StorageDead(_108)<br/>_106 = &amp;_107<br/>_105 = &amp;(*_106)<br/></td></tr><tr><td align="left">_104 = &lt;String as Deref&gt;::deref(move _105)</td></tr></table>>];
    bb41__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_103 = &amp;(*_104)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_102 = solana_program::log::sol_log(move _103)</td></tr></table>>];
    bb42__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/></td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb43__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = const &quot;deposit to base market paused&quot;<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = solana_program::log::sol_log(move _122)</td></tr></table>>];
    bb44__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageLive(_124)<br/>_124 = _101<br/>_94 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _124)<br/>StorageDead(_124)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb46__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_125 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb47__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_93 as Continue).0: ())<br/>_92 = _129<br/>StorageDead(_129)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>_47 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb49__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_27<br/></td></tr><tr><td align="left">_135 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb51__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_134 = &amp;(*_135)<br/>StorageDead(_136)<br/>StorageLive(_137)<br/>_137 = SpotOperation::Deposit<br/></td></tr><tr><td align="left">_133 = SpotMarket::is_operation_paused(move _134, move _137)</td></tr></table>>];
    bb52__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb53__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_135)<br/>StorageLive(_139)<br/>_139 = error::ErrorCode::MarketFillOrderPaused<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_1159 = const _<br/>_150 = &amp;(*_1159)<br/>_149 = &amp;(*_150)<br/>_148 = move _149 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_149)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;_139<br/>_157 = &amp;(*_158)<br/></td></tr><tr><td align="left">_156 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _157)</td></tr></table>>];
    bb54__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_135)<br/>StorageLive(_138)<br/>_138 = ()<br/>_132 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _138)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_155 = [move _156]<br/>StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/>_152 = move _153 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_147 = Arguments::&lt;'_&gt;::new_v1(move _148, move _152)</td></tr></table>>];
    bb56__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = format(move _147)</td></tr></table>>];
    bb57__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/>_145 = move _146<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/></td></tr><tr><td align="left">_142 = &lt;String as Deref&gt;::deref(move _143)</td></tr></table>>];
    bb58__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_141 = &amp;(*_142)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_140 = solana_program::log::sol_log(move _141)</td></tr></table>>];
    bb59__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb60__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = const &quot;deposit to quote market paused&quot;<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_159 = solana_program::log::sol_log(move _160)</td></tr></table>>];
    bb61__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>_162 = _139<br/>_132 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _162)<br/>StorageDead(_162)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb63__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_163 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb64__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_131 as Continue).0: ())<br/>_130 = _167<br/>StorageDead(_167)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_36<br/></td></tr><tr><td align="left">_173 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _174)</td></tr></table>>];
    bb65__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb66__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_172 = &amp;(*_173)<br/>StorageDead(_174)<br/>StorageLive(_175)<br/>_175 = SpotOperation::Withdraw<br/></td></tr><tr><td align="left">_171 = SpotMarket::is_operation_paused(move _172, move _175)</td></tr></table>>];
    bb68__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb69__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_172)<br/>StorageDead(_173)<br/>StorageLive(_177)<br/>_177 = error::ErrorCode::MarketFillOrderPaused<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_1158 = const _<br/>_188 = &amp;(*_1158)<br/>_187 = &amp;(*_188)<br/>_186 = move _187 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_187)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;_177<br/>_195 = &amp;(*_196)<br/></td></tr><tr><td align="left">_194 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _195)</td></tr></table>>];
    bb70__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_172)<br/>StorageDead(_173)<br/>StorageLive(_176)<br/>_176 = ()<br/>_170 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _176)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>_193 = [move _194]<br/>StorageDead(_194)<br/>_192 = &amp;_193<br/>_191 = &amp;(*_192)<br/>_190 = move _191 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_185 = Arguments::&lt;'_&gt;::new_v1(move _186, move _190)</td></tr></table>>];
    bb72__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">_184 = format(move _185)</td></tr></table>>];
    bb73__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_196)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_188)<br/>_183 = move _184<br/>StorageDead(_184)<br/>_182 = &amp;_183<br/>_181 = &amp;(*_182)<br/></td></tr><tr><td align="left">_180 = &lt;String as Deref&gt;::deref(move _181)</td></tr></table>>];
    bb74__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_179 = &amp;(*_180)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_178 = solana_program::log::sol_log(move _179)</td></tr></table>>];
    bb75__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/></td></tr><tr><td align="left">drop(_183)</td></tr></table>>];
    bb76__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = const &quot;withdraw from base market paused&quot;<br/>_198 = &amp;(*_199)<br/></td></tr><tr><td align="left">_197 = solana_program::log::sol_log(move _198)</td></tr></table>>];
    bb77__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageLive(_200)<br/>_200 = _177<br/>_170 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _200)<br/>StorageDead(_200)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/></td></tr><tr><td align="left">_169 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _170)</td></tr></table>>];
    bb79__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_201 = discriminant(_169)<br/></td></tr><tr><td align="left">switchInt(move _201)</td></tr></table>>];
    bb80__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_169 as Continue).0: ())<br/>_168 = _205<br/>StorageDead(_205)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>_47 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = ((_169 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_204)<br/>_204 = _202<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _204)</td></tr></table>>];
    bb82__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_202)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;(*_1)<br/></td></tr><tr><td align="left">_210 = User::get_quote_spot_position(move _211)</td></tr></table>>];
    bb86__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_209 = &amp;(*_210)<br/>StorageDead(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;_27<br/>_214 = &amp;(*_215)<br/></td></tr><tr><td align="left">_213 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _214)</td></tr></table>>];
    bb87__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_212 = &amp;(*_213)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">_208 = SpotPosition::get_signed_token_amount(move _209, move _212)</td></tr></table>>];
    bb88__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_207 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _208)</td></tr></table>>];
    bb89__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>_216 = discriminant(_207)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb90__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_207 as Continue).0: i128)<br/>_206 = _220<br/>StorageDead(_220)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;mut (*_1)<br/>StorageLive(_229)<br/>_229 = _19<br/></td></tr><tr><td align="left">_227 = User::force_get_spot_position_mut(move _228, move _229)</td></tr></table>>];
    bb91__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_207 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb92__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">_226 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _227)</td></tr></table>>];
    bb94__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>_230 = discriminant(_226)<br/></td></tr><tr><td align="left">switchInt(move _230)</td></tr></table>>];
    bb95__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = move ((_226 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_225 = move _234<br/>StorageDead(_234)<br/>_224 = &amp;(*_225)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = &amp;_36<br/>_237 = &amp;(*_238)<br/></td></tr><tr><td align="left">_236 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _237)</td></tr></table>>];
    bb96__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_226 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_233)<br/>_233 = _231<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _233)</td></tr></table>>];
    bb97__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_231)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_235 = &amp;(*_236)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_223 = SpotPosition::get_signed_token_amount(move _224, move _235)</td></tr></table>>];
    bb99__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_222 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _223)</td></tr></table>>];
    bb100__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_239 = discriminant(_222)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb101__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_222 as Continue).0: i128)<br/>_221 = _243<br/>StorageDead(_243)<br/>StorageDead(_238)<br/>StorageDead(_236)<br/>StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/>StorageLive(_244)<br/></td></tr><tr><td align="left">_244 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, (i128, i128)&gt;::new()</td></tr></table>>];
    bb102__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_222 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb103__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = _7<br/></td></tr><tr><td align="left">_246 = &lt;&amp;[(anchor_lang::prelude::Pubkey, usize, u64)] as IntoIterator&gt;::into_iter(move _247)</td></tr></table>>];
    bb105__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageLive(_248)<br/>_248 = move _246<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;mut _248<br/>_252 = &amp;mut (*_253)<br/></td></tr><tr><td align="left">_251 = &lt;std::slice::Iter&lt;'_, (anchor_lang::prelude::Pubkey, usize, u64)&gt; as Iterator&gt;::next(move _252)</td></tr></table>>];
    bb107__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>_254 = discriminant(_251)<br/></td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb108__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_256)<br/>_1161 = deref_copy ((_251 as Some).0: &amp;(anchor_lang::prelude::Pubkey, usize, u64))<br/>_256 = &amp;((*_1161).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_260 = &amp;(*_5)<br/>StorageLive(_261)<br/>_261 = &amp;(*_256)<br/></td></tr><tr><td align="left">_259 = UserMap::&lt;'_&gt;::get_ref(move _260, move _261)</td></tr></table>>];
    bb109__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_245 = const ()<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = &amp;mut (*_13)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;_36<br/></td></tr><tr><td align="left">_324 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _325)</td></tr></table>>];
    bb110__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_258 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _259)</td></tr></table>>];
    bb111__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>_262 = discriminant(_258)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb112__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = move ((_258 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_257 = move _266<br/>StorageDead(_266)<br/>_1178 = discriminant(_258)<br/>StorageDead(_258)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;_257<br/></td></tr><tr><td align="left">_273 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _274)</td></tr></table>>];
    bb113__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_258 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb114__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/>_1176 = discriminant(_258)<br/>StorageDead(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_272 = &amp;(*_273)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">_271 = User::get_quote_spot_position(move _272)</td></tr></table>>];
    bb116__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_270 = &amp;(*_271)<br/>StorageDead(_272)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = &amp;_27<br/>_277 = &amp;(*_278)<br/></td></tr><tr><td align="left">_276 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _277)</td></tr></table>>];
    bb117__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_275 = &amp;(*_276)<br/>StorageDead(_277)<br/></td></tr><tr><td align="left">_269 = SpotPosition::get_signed_token_amount(move _270, move _275)</td></tr></table>>];
    bb118__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">_268 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _269)</td></tr></table>>];
    bb119__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_279 = discriminant(_268)<br/></td></tr><tr><td align="left">switchInt(move _279)</td></tr></table>>];
    bb120__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_283)<br/>_283 = ((_268 as Continue).0: i128)<br/>_267 = _283<br/>StorageDead(_283)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_268)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_293 = &amp;_257<br/></td></tr><tr><td align="left">_292 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _293)</td></tr></table>>];
    bb121__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_280)<br/>_280 = ((_268 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_282)<br/>_282 = _280<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _282)</td></tr></table>>];
    bb122__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_291 = &amp;(*_292)<br/>StorageDead(_293)<br/>StorageLive(_294)<br/>_294 = _19<br/></td></tr><tr><td align="left">_290 = User::get_spot_position(move _291, move _294)</td></tr></table>>];
    bb124__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_289 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _290)</td></tr></table>>];
    bb125__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>_295 = discriminant(_289)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb126__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_289 as Continue).0: &amp;state::user::SpotPosition)<br/>_288 = _299<br/>StorageDead(_299)<br/>_287 = &amp;(*_288)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = &amp;_36<br/>_302 = &amp;(*_303)<br/></td></tr><tr><td align="left">_301 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _302)</td></tr></table>>];
    bb127__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_289 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_298)<br/>_298 = _296<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _298)</td></tr></table>>];
    bb128__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_300 = &amp;(*_301)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_286 = SpotPosition::get_signed_token_amount(move _287, move _300)</td></tr></table>>];
    bb130__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">_285 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _286)</td></tr></table>>];
    bb131__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>_304 = discriminant(_285)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb132__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_285 as Continue).0: i128)<br/>_284 = _308<br/>StorageDead(_308)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;mut _244<br/>StorageLive(_311)<br/>_311 = (*_256)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = _284<br/>StorageLive(_314)<br/>_314 = _267<br/>_312 = (move _313, move _314)<br/>StorageDead(_314)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">_309 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, (i128, i128)&gt;::insert(move _310, move _311, move _312)</td></tr></table>>];
    bb133__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_285 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_307)<br/>_307 = _305<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _307)</td></tr></table>>];
    bb134__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>_250 = const ()<br/>StorageDead(_284)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb136__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>_249 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_323 = &amp;(*_324)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_322 = SpotMarket::oracle_id(move _323)</td></tr></table>>];
    bb138__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>_321 = &amp;_322<br/>_320 = &amp;(*_321)<br/></td></tr><tr><td align="left">_318 = OracleMap::&lt;'_&gt;::get_price_data(move _319, move _320)</td></tr></table>>];
    bb139__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">_317 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _318)</td></tr></table>>];
    bb140__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_326 = discriminant(_317)<br/></td></tr><tr><td align="left">switchInt(move _326)</td></tr></table>>];
    bb141__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_330)<br/>_330 = ((_317 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_316 = _330<br/>StorageDead(_330)<br/>_315 = ((*_316).0: i64)<br/>StorageDead(_324)<br/>StorageDead(_322)<br/>StorageDead(_321)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = _2<br/>_336 = Len(((*_1).5: [state::user::Order; 32]))<br/>_337 = Lt(_335, _336)<br/></td></tr><tr><td align="left">assert(move _337, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _336, _335)</td></tr></table>>];
    bb142__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>_327 = ((_317 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_329)<br/>_329 = _327<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _329)</td></tr></table>>];
    bb143__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_327)<br/>StorageDead(_324)<br/>StorageDead(_322)<br/>StorageDead(_321)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_334 = &amp;((*_1).5: [state::user::Order; 32])[_335]<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = _315<br/>_338 = Option::&lt;i64&gt;::Some(move _339)<br/>StorageDead(_339)<br/>StorageLive(_340)<br/>_340 = Option::&lt;u64&gt;::None<br/>StorageLive(_341)<br/>_341 = _15<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = &amp;_36<br/></td></tr><tr><td align="left">_343 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _344)</td></tr></table>>];
    bb145__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/>_342 = ((*_343).26: u64)<br/>StorageLive(_345)<br/>_345 = Option::&lt;ProtectedMakerParams&gt;::None<br/></td></tr><tr><td align="left">_333 = Order::get_limit_price(move _334, move _338, move _340, move _341, move _342, const false, move _345)</td></tr></table>>];
    bb146__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageDead(_338)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">_332 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _333)</td></tr></table>>];
    bb147__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_346 = discriminant(_332)<br/></td></tr><tr><td align="left">switchInt(move _346)</td></tr></table>>];
    bb148__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_350)<br/>_350 = ((_332 as Continue).0: std::option::Option&lt;u64&gt;)<br/>_331 = _350<br/>StorageDead(_350)<br/>StorageDead(_343)<br/>StorageDead(_335)<br/>StorageDead(_332)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>_356 = _2<br/>_357 = Len(((*_1).5: [state::user::Order; 32]))<br/>_358 = Lt(_356, _357)<br/></td></tr><tr><td align="left">assert(move _358, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _357, _356)</td></tr></table>>];
    bb149__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_347)<br/>_347 = ((_332 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_349)<br/>_349 = _347<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _349)</td></tr></table>>];
    bb150__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_347)<br/>StorageDead(_343)<br/>StorageDead(_335)<br/>StorageDead(_332)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">_355 = &amp;((*_1).5: [state::user::Order; 32])[_356]<br/>_354 = &amp;(*_355)<br/>StorageLive(_359)<br/>_359 = &amp;(*_7)<br/>StorageLive(_360)<br/>_360 = _331<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;(*_17)<br/></td></tr><tr><td align="left">_361 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::is_external(move _362)</td></tr></table>>];
    bb152__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/></td></tr><tr><td align="left">_353 = determine_spot_fulfillment_methods(move _354, move _359, move _360, move _361)</td></tr></table>>];
    bb153__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>StorageDead(_354)<br/></td></tr><tr><td align="left">_352 = &lt;std::result::Result&lt;Vec&lt;SpotFulfillmentMethod&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _353)</td></tr></table>>];
    bb154__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>_363 = discriminant(_352)<br/></td></tr><tr><td align="left">switchInt(move _363)</td></tr></table>>];
    bb155__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_367)<br/>_367 = move ((_352 as Continue).0: std::vec::Vec&lt;state::fulfillment::SpotFulfillmentMethod&gt;)<br/>_351 = move _367<br/>StorageDead(_367)<br/>_1182 = discriminant(_352)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageDead(_352)<br/>StorageLive(_368)<br/>_368 = const 0_u64<br/>StorageLive(_369)<br/>_369 = const 0_u64<br/>StorageLive(_370)<br/></td></tr><tr><td align="left">_370 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, i64&gt;::new()</td></tr></table>>];
    bb156__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_352 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_366)<br/>_366 = _364<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _366)</td></tr></table>>];
    bb157__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>StorageDead(_364)<br/>_1180 = discriminant(_352)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">_1165 = const true<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>_373 = _2<br/>_374 = Len(((*_1).5: [state::user::Order; 32]))<br/>_375 = Lt(_373, _374)<br/></td></tr><tr><td align="left">assert(move _375, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _374, _373)</td></tr></table>>];
    bb159__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_372 = &amp;(((*_1).5: [state::user::Order; 32])[_373].17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_371 = controller::position::PositionDirection::opposite(move _372)</td></tr></table>>];
    bb160__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_373)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = &amp;_351<br/></td></tr><tr><td align="left">_380 = &lt;Vec&lt;SpotFulfillmentMethod&gt; as Deref&gt;::deref(move _381)</td></tr></table>>];
    bb161__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_379 = &amp;(*_380)<br/>StorageDead(_381)<br/></td></tr><tr><td align="left">_378 = core::slice::&lt;impl [SpotFulfillmentMethod]&gt;::iter(move _379)</td></tr></table>>];
    bb162__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/></td></tr><tr><td align="left">_377 = &lt;std::slice::Iter&lt;'_, SpotFulfillmentMethod&gt; as IntoIterator&gt;::into_iter(move _378)</td></tr></table>>];
    bb163__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageLive(_382)<br/>_382 = move _377<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>_386 = &amp;mut _382<br/>_385 = &amp;mut (*_386)<br/></td></tr><tr><td align="left">_384 = &lt;std::slice::Iter&lt;'_, SpotFulfillmentMethod&gt; as Iterator&gt;::next(move _385)</td></tr></table>>];
    bb165__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>_387 = discriminant(_384)<br/></td></tr><tr><td align="left">switchInt(move _387)</td></tr></table>>];
    bb166__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_384 as Some).0: &amp;state::fulfillment::SpotFulfillmentMethod)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = _2<br/>_394 = Len(((*_1).5: [state::user::Order; 32]))<br/>_395 = Lt(_393, _394)<br/></td></tr><tr><td align="left">assert(move _395, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _394, _393)</td></tr></table>>];
    bb167__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_376 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">_392 = &amp;(((*_1).5: [state::user::Order; 32])[_393].12: state::user::OrderStatus)<br/>StorageLive(_396)<br/>_1155 = const _<br/>_396 = &amp;(*_1155)<br/></td></tr><tr><td align="left">_391 = &lt;OrderStatus as PartialEq&gt;::ne(move _392, move _396)</td></tr></table>>];
    bb169__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left">switchInt(move _391)</td></tr></table>>];
    bb170__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_396)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>_376 = const ()<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_396)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>_390 = const ()<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>StorageLive(_401)<br/>_402 = discriminant((*_389))<br/></td></tr><tr><td align="left">switchInt(move _402)</td></tr></table>>];
    bb172__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>_499 = &amp;mut _36<br/>_498 = &amp;mut (*_499)<br/></td></tr><tr><td align="left">_497 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _498)</td></tr></table>>];
    bb173__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_403)<br/>_403 = &amp;(((*_389) as Match).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_404)<br/>_404 = &amp;(((*_389) as Match).1: u16)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = &amp;(*_5)<br/>StorageLive(_409)<br/>_409 = &amp;(*_403)<br/></td></tr><tr><td align="left">_407 = UserMap::&lt;'_&gt;::get_ref_mut(move _408, move _409)</td></tr></table>>];
    bb174__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">_406 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _407)</td></tr></table>>];
    bb175__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>_410 = discriminant(_406)<br/></td></tr><tr><td align="left">switchInt(move _410)</td></tr></table>>];
    bb176__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageLive(_414)<br/>_414 = move ((_406 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_405 = move _414<br/>StorageDead(_414)<br/>_1186 = discriminant(_406)<br/>StorageDead(_406)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>_419 = &amp;_405<br/></td></tr><tr><td align="left">_418 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _419)</td></tr></table>>];
    bb177__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_411)<br/>_411 = ((_406 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_413)<br/>_413 = _411<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _413)</td></tr></table>>];
    bb178__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>StorageDead(_411)<br/>_1184 = discriminant(_406)<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>_417 = &amp;((*_418).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_420)<br/>_420 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_416 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _417, move _420)</td></tr></table>>];
    bb180__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left">switchInt(move _416)</td></tr></table>>];
    bb181__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>_415 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>_424 = &amp;(*_6)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>_428 = &amp;_405<br/></td></tr><tr><td align="left">_427 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _428)</td></tr></table>>];
    bb183__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>_426 = &amp;((*_427).0: anchor_lang::prelude::Pubkey)<br/>_425 = &amp;(*_426)<br/></td></tr><tr><td align="left">_423 = UserStatsMap::&lt;'_&gt;::get_ref_mut(move _424, move _425)</td></tr></table>>];
    bb184__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/>StorageDead(_424)<br/></td></tr><tr><td align="left">_422 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _423)</td></tr></table>>];
    bb185__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>_429 = discriminant(_422)<br/></td></tr><tr><td align="left">switchInt(move _429)</td></tr></table>>];
    bb186__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageLive(_433)<br/>_433 = move ((_422 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_421 = move _433<br/>StorageDead(_433)<br/>_415 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _421)<br/>StorageDead(_421)<br/>_1190 = discriminant(_422)<br/>StorageDead(_427)<br/>StorageDead(_426)<br/>StorageDead(_422)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageLive(_430)<br/>_430 = ((_422 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_432)<br/>_432 = _430<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _432)</td></tr></table>>];
    bb188__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_430)<br/>StorageDead(_421)<br/>_1188 = discriminant(_422)<br/>StorageDead(_427)<br/>StorageDead(_426)<br/>StorageDead(_422)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>_442 = &amp;mut _36<br/>_441 = &amp;mut (*_442)<br/></td></tr><tr><td align="left">_440 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _441)</td></tr></table>>];
    bb190__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">_439 = &amp;mut (*_440)<br/>StorageDead(_441)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>_446 = &amp;mut _27<br/>_445 = &amp;mut (*_446)<br/></td></tr><tr><td align="left">_444 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _445)</td></tr></table>>];
    bb191__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_443 = &amp;mut (*_444)<br/>StorageDead(_445)<br/>StorageLive(_447)<br/>_447 = &amp;mut (*_1)<br/>StorageLive(_448)<br/>_448 = &amp;mut (*_4)<br/>StorageLive(_449)<br/>_449 = _2<br/>StorageLive(_450)<br/>_450 = &amp;(*_3)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = &amp;mut _405<br/>_453 = &amp;mut (*_454)<br/></td></tr><tr><td align="left">_452 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _453)</td></tr></table>>];
    bb192__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">_451 = &amp;mut (*_452)<br/>StorageDead(_453)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>_458 = &amp;mut _415<br/></td></tr><tr><td align="left">_457 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::as_deref_mut(move _458)</td></tr></table>>];
    bb193__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>_456 = &amp;mut _457<br/>_455 = &amp;mut (*_456)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>_460 = (*_404)<br/>_459 = move _460 as usize (IntToInt)<br/>StorageDead(_460)<br/>StorageLive(_461)<br/>_461 = &amp;(*_403)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>_463 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_462 = Option::&lt;&amp;mut User&gt;::as_deref_mut(move _463)</td></tr></table>>];
    bb194__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>_465 = &amp;mut (*_10)<br/></td></tr><tr><td align="left">_464 = Option::&lt;&amp;mut UserStats&gt;::as_deref_mut(move _465)</td></tr></table>>];
    bb195__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageLive(_466)<br/>_466 = &amp;(*_9)<br/>StorageLive(_467)<br/>_467 = _14<br/>StorageLive(_468)<br/>_468 = _15<br/>StorageLive(_469)<br/>_469 = &amp;mut (*_13)<br/>StorageLive(_470)<br/>_470 = &amp;(*_16)<br/></td></tr><tr><td align="left">_438 = fulfill_spot_order_with_match(move _439, move _443, move _447, move _448, move _449, move _450, move _451, move _455, move _459, move _461, move _462, move _464, move _466, move _467, move _468, move _469, move _470)</td></tr></table>>];
    bb196__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/>StorageDead(_469)<br/>StorageDead(_468)<br/>StorageDead(_467)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_462)<br/>StorageDead(_461)<br/>StorageDead(_459)<br/>StorageDead(_455)<br/>StorageDead(_451)<br/>StorageDead(_450)<br/>StorageDead(_449)<br/>StorageDead(_448)<br/>StorageDead(_447)<br/>StorageDead(_443)<br/>StorageDead(_439)<br/></td></tr><tr><td align="left">_437 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _438)</td></tr></table>>];
    bb197__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_438)<br/>_471 = discriminant(_437)<br/></td></tr><tr><td align="left">switchInt(move _471)</td></tr></table>>];
    bb198__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_475)<br/>_475 = ((_437 as Continue).0: (u64, u64))<br/>_436 = _475<br/>StorageDead(_475)<br/>StorageLive(_434)<br/>_434 = (_436.0: u64)<br/>StorageLive(_435)<br/>_435 = (_436.1: u64)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/>StorageDead(_454)<br/>StorageDead(_452)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_442)<br/>StorageDead(_440)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_478 = _434<br/>_477 = Ne(move _478, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _477)</td></tr></table>>];
    bb199__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_472)<br/>_472 = ((_437 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_474)<br/>_474 = _472<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _474)</td></tr></table>>];
    bb200__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>StorageDead(_472)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/>StorageDead(_454)<br/>StorageDead(_452)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_442)<br/>StorageDead(_440)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>_483 = &amp;mut _370<br/>_482 = &amp;mut (*_483)<br/>StorageLive(_484)<br/>_484 = &amp;(*_403)<br/>StorageLive(_485)<br/>_485 = _371<br/>StorageLive(_486)<br/>_486 = _434<br/></td></tr><tr><td align="left">_481 = update_maker_fills_map(move _482, move _484, move _485, move _486)</td></tr></table>>];
    bb202__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>_476 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>StorageDead(_485)<br/>StorageDead(_484)<br/>StorageDead(_482)<br/></td></tr><tr><td align="left">_480 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _481)</td></tr></table>>];
    bb204__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>_487 = discriminant(_480)<br/></td></tr><tr><td align="left">switchInt(move _487)</td></tr></table>>];
    bb205__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_491)<br/>_491 = ((_480 as Continue).0: ())<br/>_479 = _491<br/>StorageDead(_491)<br/>StorageDead(_483)<br/>StorageDead(_480)<br/>StorageDead(_479)<br/>_476 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_488)<br/>_488 = ((_480 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_490)<br/>_490 = _488<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _490)</td></tr></table>>];
    bb207__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_488)<br/>StorageDead(_483)<br/>StorageDead(_480)<br/>StorageDead(_479)<br/>StorageDead(_477)<br/>StorageDead(_476)<br/>StorageDead(_435)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>StorageDead(_476)<br/>StorageLive(_492)<br/>_492 = _434<br/>StorageLive(_493)<br/>_493 = _435<br/>_401 = (move _492, move _493)<br/>StorageDead(_493)<br/>StorageDead(_492)<br/>StorageDead(_435)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">drop(_415)</td></tr></table>>];
    bb209__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/></td></tr><tr><td align="left">drop(_405)</td></tr></table>>];
    bb210__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_404)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">_496 = &amp;mut (*_497)<br/>StorageDead(_498)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>_503 = &amp;mut _27<br/>_502 = &amp;mut (*_503)<br/></td></tr><tr><td align="left">_501 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _502)</td></tr></table>>];
    bb212__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">_500 = &amp;mut (*_501)<br/>StorageDead(_502)<br/>StorageLive(_504)<br/>_504 = &amp;mut (*_1)<br/>StorageLive(_505)<br/>_505 = &amp;mut (*_4)<br/>StorageLive(_506)<br/>_506 = _2<br/>StorageLive(_507)<br/>_507 = &amp;(*_3)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>_509 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_508 = Option::&lt;&amp;mut User&gt;::as_deref_mut(move _509)</td></tr></table>>];
    bb213__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = &amp;mut (*_10)<br/></td></tr><tr><td align="left">_510 = Option::&lt;&amp;mut UserStats&gt;::as_deref_mut(move _511)</td></tr></table>>];
    bb214__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>StorageLive(_512)<br/>_512 = &amp;(*_9)<br/>StorageLive(_513)<br/>_513 = _14<br/>StorageLive(_514)<br/>_514 = _15<br/>StorageLive(_515)<br/>_515 = &amp;mut (*_13)<br/>StorageLive(_516)<br/>_516 = &amp;(*_16)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>_518 = &amp;mut (*_17)<br/>_517 = move _518 as &amp;mut dyn state::spot_fulfillment_params::SpotFulfillmentParams (PointerCoercion(Unsize))<br/>StorageDead(_518)<br/></td></tr><tr><td align="left">_495 = fulfill_spot_order_with_external_market(move _496, move _500, move _504, move _505, move _506, move _507, move _508, move _510, move _512, move _513, move _514, move _515, move _516, move _517)</td></tr></table>>];
    bb215__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_516)<br/>StorageDead(_515)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/>StorageDead(_512)<br/>StorageDead(_510)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/>StorageDead(_506)<br/>StorageDead(_505)<br/>StorageDead(_504)<br/>StorageDead(_500)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">_494 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _495)</td></tr></table>>];
    bb216__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>_519 = discriminant(_494)<br/></td></tr><tr><td align="left">switchInt(move _519)</td></tr></table>>];
    bb217__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_523)<br/>_523 = ((_494 as Continue).0: (u64, u64))<br/>_401 = _523<br/>StorageDead(_523)<br/>StorageDead(_503)<br/>StorageDead(_501)<br/>StorageDead(_499)<br/>StorageDead(_497)<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageLive(_520)<br/>_520 = ((_494 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_522)<br/>_522 = _520<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _522)</td></tr></table>>];
    bb219__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/>StorageDead(_520)<br/>StorageDead(_503)<br/>StorageDead(_501)<br/>StorageDead(_499)<br/>StorageDead(_497)<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_399)<br/>_399 = (_401.0: u64)<br/>StorageLive(_400)<br/>_400 = (_401.1: u64)<br/>StorageDead(_401)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>_527 = _368<br/>StorageLive(_528)<br/>_528 = _399<br/></td></tr><tr><td align="left">_526 = &lt;u64 as SafeMath&gt;::safe_add(move _527, move _528)</td></tr></table>>];
    bb221__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageDead(_527)<br/></td></tr><tr><td align="left">_525 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _526)</td></tr></table>>];
    bb222__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>_529 = discriminant(_525)<br/></td></tr><tr><td align="left">switchInt(move _529)</td></tr></table>>];
    bb223__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_533)<br/>_533 = ((_525 as Continue).0: u64)<br/>_524 = _533<br/>StorageDead(_533)<br/>_368 = move _524<br/>StorageDead(_524)<br/>StorageDead(_525)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>_537 = _369<br/>StorageLive(_538)<br/>_538 = _400<br/></td></tr><tr><td align="left">_536 = &lt;u64 as SafeMath&gt;::safe_add(move _537, move _538)</td></tr></table>>];
    bb224__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageLive(_530)<br/>_530 = ((_525 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_532)<br/>_532 = _530<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _532)</td></tr></table>>];
    bb225__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_530)<br/>StorageDead(_524)<br/>StorageDead(_525)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>StorageDead(_537)<br/></td></tr><tr><td align="left">_535 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _536)</td></tr></table>>];
    bb227__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>_539 = discriminant(_535)<br/></td></tr><tr><td align="left">switchInt(move _539)</td></tr></table>>];
    bb228__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageLive(_543)<br/>_543 = ((_535 as Continue).0: u64)<br/>_534 = _543<br/>StorageDead(_543)<br/>_369 = move _534<br/>StorageDead(_534)<br/>StorageDead(_535)<br/>_383 = const ()<br/>StorageDead(_400)<br/>StorageDead(_399)<br/>StorageDead(_389)<br/>StorageDead(_386)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/>_249 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_540)<br/>_540 = ((_535 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_542)<br/>_542 = _540<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _542)</td></tr></table>>];
    bb230__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_534)<br/>StorageDead(_535)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_377)<br/>StorageDead(_376)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>_549 = _368<br/>_548 = Gt(move _549, const 0_u64)<br/>StorageDead(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = _369<br/>_550 = Gt(move _551, const 0_u64)<br/>StorageDead(_551)<br/>_547 = Eq(move _548, move _550)<br/></td></tr><tr><td align="left">switchInt(move _547)</td></tr></table>>];
    bb232__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>StorageDead(_548)<br/>StorageLive(_552)<br/>_552 = ()<br/>_546 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _552)<br/>StorageDead(_552)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>StorageDead(_548)<br/>StorageLive(_553)<br/>_553 = error::ErrorCode::DefaultError<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>_1154 = const _<br/>_564 = &amp;(*_1154)<br/>_563 = &amp;(*_564)<br/>_562 = move _563 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_563)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>_572 = &amp;_553<br/>_571 = &amp;(*_572)<br/></td></tr><tr><td align="left">_570 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _571)</td></tr></table>>];
    bb234__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>_569 = [move _570]<br/>StorageDead(_570)<br/>_568 = &amp;_569<br/>_567 = &amp;(*_568)<br/>_566 = move _567 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_567)<br/></td></tr><tr><td align="left">_561 = Arguments::&lt;'_&gt;::new_v1(move _562, move _566)</td></tr></table>>];
    bb235__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/>StorageDead(_562)<br/></td></tr><tr><td align="left">_560 = format(move _561)</td></tr></table>>];
    bb236__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>StorageDead(_572)<br/>StorageDead(_569)<br/>StorageDead(_568)<br/>StorageDead(_564)<br/>_559 = move _560<br/>StorageDead(_560)<br/>_558 = &amp;_559<br/>_557 = &amp;(*_558)<br/></td></tr><tr><td align="left">_556 = &lt;String as Deref&gt;::deref(move _557)</td></tr></table>>];
    bb237__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">_555 = &amp;(*_556)<br/>StorageDead(_557)<br/></td></tr><tr><td align="left">_554 = solana_program::log::sol_log(move _555)</td></tr></table>>];
    bb238__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/></td></tr><tr><td align="left">drop(_559)</td></tr></table>>];
    bb239__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_559)<br/>StorageDead(_558)<br/>StorageDead(_556)<br/>StorageDead(_554)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>_1153 = const _<br/>_583 = &amp;(*_1153)<br/>_582 = &amp;(*_583)<br/>_581 = move _582 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_582)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>_591 = &amp;_368<br/>_590 = &amp;(*_591)<br/></td></tr><tr><td align="left">_589 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _590)</td></tr></table>>];
    bb240__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_590)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>_594 = &amp;_369<br/>_593 = &amp;(*_594)<br/></td></tr><tr><td align="left">_592 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _593)</td></tr></table>>];
    bb241__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>_588 = [move _589, move _592]<br/>StorageDead(_592)<br/>StorageDead(_589)<br/>_587 = &amp;_588<br/>_586 = &amp;(*_587)<br/>_585 = move _586 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_586)<br/></td></tr><tr><td align="left">_580 = Arguments::&lt;'_&gt;::new_v1(move _581, move _585)</td></tr></table>>];
    bb242__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_581)<br/></td></tr><tr><td align="left">_579 = format(move _580)</td></tr></table>>];
    bb243__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_580)<br/>StorageDead(_594)<br/>StorageDead(_591)<br/>StorageDead(_588)<br/>StorageDead(_587)<br/>StorageDead(_583)<br/>_578 = move _579<br/>StorageDead(_579)<br/>_577 = &amp;_578<br/>_576 = &amp;(*_577)<br/></td></tr><tr><td align="left">_575 = &lt;String as Deref&gt;::deref(move _576)</td></tr></table>>];
    bb244__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">_574 = &amp;(*_575)<br/>StorageDead(_576)<br/></td></tr><tr><td align="left">_573 = solana_program::log::sol_log(move _574)</td></tr></table>>];
    bb245__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/></td></tr><tr><td align="left">drop(_578)</td></tr></table>>];
    bb246__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_577)<br/>StorageDead(_575)<br/>StorageDead(_573)<br/>StorageLive(_595)<br/>_595 = _553<br/>_546 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _595)<br/>StorageDead(_595)<br/>StorageDead(_553)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_547)<br/></td></tr><tr><td align="left">_545 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _546)</td></tr></table>>];
    bb248__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>_596 = discriminant(_545)<br/></td></tr><tr><td align="left">switchInt(move _596)</td></tr></table>>];
    bb249__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_600)<br/>_600 = ((_545 as Continue).0: ())<br/>_544 = _600<br/>StorageDead(_600)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>_606 = &amp;(*_1)<br/></td></tr><tr><td align="left">_605 = User::get_quote_spot_position(move _606)</td></tr></table>>];
    bb250__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_597)<br/>_597 = ((_545 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_599)<br/>_599 = _597<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _599)</td></tr></table>>];
    bb251__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageDead(_597)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">_604 = &amp;(*_605)<br/>StorageDead(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>_610 = &amp;_27<br/>_609 = &amp;(*_610)<br/></td></tr><tr><td align="left">_608 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _609)</td></tr></table>>];
    bb253__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">_607 = &amp;(*_608)<br/>StorageDead(_609)<br/></td></tr><tr><td align="left">_603 = SpotPosition::get_signed_token_amount(move _604, move _607)</td></tr></table>>];
    bb254__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>StorageDead(_604)<br/></td></tr><tr><td align="left">_602 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _603)</td></tr></table>>];
    bb255__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/>_611 = discriminant(_602)<br/></td></tr><tr><td align="left">switchInt(move _611)</td></tr></table>>];
    bb256__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_615)<br/>_615 = ((_602 as Continue).0: i128)<br/>_601 = _615<br/>StorageDead(_615)<br/>StorageDead(_610)<br/>StorageDead(_608)<br/>StorageDead(_605)<br/>StorageDead(_602)<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>_623 = &amp;mut (*_1)<br/>StorageLive(_624)<br/>_624 = _19<br/></td></tr><tr><td align="left">_622 = User::force_get_spot_position_mut(move _623, move _624)</td></tr></table>>];
    bb257__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageLive(_612)<br/>_612 = ((_602 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_614)<br/>_614 = _612<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _614)</td></tr></table>>];
    bb258__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>StorageDead(_612)<br/>StorageDead(_610)<br/>StorageDead(_608)<br/>StorageDead(_605)<br/>StorageDead(_602)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">_621 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _622)</td></tr></table>>];
    bb260__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/>_625 = discriminant(_621)<br/></td></tr><tr><td align="left">switchInt(move _625)</td></tr></table>>];
    bb261__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageLive(_629)<br/>_629 = move ((_621 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_620 = move _629<br/>StorageDead(_629)<br/>_619 = &amp;(*_620)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>_633 = &amp;_36<br/>_632 = &amp;(*_633)<br/></td></tr><tr><td align="left">_631 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _632)</td></tr></table>>];
    bb262__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageLive(_626)<br/>_626 = ((_621 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_628)<br/>_628 = _626<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _628)</td></tr></table>>];
    bb263__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_628)<br/>StorageDead(_626)<br/>StorageDead(_619)<br/>StorageDead(_618)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">_630 = &amp;(*_631)<br/>StorageDead(_632)<br/></td></tr><tr><td align="left">_618 = SpotPosition::get_signed_token_amount(move _619, move _630)</td></tr></table>>];
    bb265__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_630)<br/>StorageDead(_619)<br/></td></tr><tr><td align="left">_617 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _618)</td></tr></table>>];
    bb266__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_618)<br/>_634 = discriminant(_617)<br/></td></tr><tr><td align="left">switchInt(move _634)</td></tr></table>>];
    bb267__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageLive(_638)<br/>_638 = ((_617 as Continue).0: i128)<br/>_616 = _638<br/>StorageDead(_638)<br/>StorageDead(_633)<br/>StorageDead(_631)<br/>StorageDead(_621)<br/>StorageDead(_620)<br/>StorageDead(_617)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>_643 = &amp;mut (*_13)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>_649 = &amp;_27<br/></td></tr><tr><td align="left">_648 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _649)</td></tr></table>>];
    bb268__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageLive(_635)<br/>_635 = ((_617 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_637)<br/>_637 = _635<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _637)</td></tr></table>>];
    bb269__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>StorageDead(_635)<br/>StorageDead(_633)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">_647 = &amp;(*_648)<br/>StorageDead(_649)<br/></td></tr><tr><td align="left">_646 = SpotMarket::oracle_id(move _647)</td></tr></table>>];
    bb271__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>_645 = &amp;_646<br/>_644 = &amp;(*_645)<br/></td></tr><tr><td align="left">_642 = OracleMap::&lt;'_&gt;::get_price_data(move _643, move _644)</td></tr></table>>];
    bb272__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageDead(_643)<br/></td></tr><tr><td align="left">_641 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _642)</td></tr></table>>];
    bb273__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_642)<br/>_650 = discriminant(_641)<br/></td></tr><tr><td align="left">switchInt(move _650)</td></tr></table>>];
    bb274__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageLive(_654)<br/>_654 = ((_641 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_640 = _654<br/>StorageDead(_654)<br/>_639 = ((*_640).0: i64)<br/>StorageDead(_648)<br/>StorageDead(_646)<br/>StorageDead(_645)<br/>StorageDead(_641)<br/>StorageDead(_640)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = &amp;mut (*_13)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>_665 = &amp;_36<br/></td></tr><tr><td align="left">_664 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _665)</td></tr></table>>];
    bb275__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageLive(_651)<br/>_651 = ((_641 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_653)<br/>_653 = _651<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _653)</td></tr></table>>];
    bb276__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>StorageDead(_651)<br/>StorageDead(_648)<br/>StorageDead(_646)<br/>StorageDead(_645)<br/>StorageDead(_641)<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">_663 = &amp;(*_664)<br/>StorageDead(_665)<br/></td></tr><tr><td align="left">_662 = SpotMarket::oracle_id(move _663)</td></tr></table>>];
    bb278__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/>_661 = &amp;_662<br/>_660 = &amp;(*_661)<br/></td></tr><tr><td align="left">_658 = OracleMap::&lt;'_&gt;::get_price_data(move _659, move _660)</td></tr></table>>];
    bb279__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_660)<br/>StorageDead(_659)<br/></td></tr><tr><td align="left">_657 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _658)</td></tr></table>>];
    bb280__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>_666 = discriminant(_657)<br/></td></tr><tr><td align="left">switchInt(move _666)</td></tr></table>>];
    bb281__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageLive(_670)<br/>_670 = ((_657 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_656 = _670<br/>StorageDead(_670)<br/>_655 = ((*_656).0: i64)<br/>StorageDead(_664)<br/>StorageDead(_662)<br/>StorageDead(_661)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>_672 = _639<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>_675 = &amp;_27<br/></td></tr><tr><td align="left">_674 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _675)</td></tr></table>>];
    bb282__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageLive(_667)<br/>_667 = ((_657 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_669)<br/>_669 = _667<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _669)</td></tr></table>>];
    bb283__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>StorageDead(_667)<br/>StorageDead(_664)<br/>StorageDead(_662)<br/>StorageDead(_661)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>_673 = (((*_674).5: state::oracle::HistoricalOracleData).4: i64)<br/></td></tr><tr><td align="left">_671 = StrictOraclePrice::new(move _672, move _673, const true)</td></tr></table>>];
    bb285__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_673)<br/>StorageDead(_672)<br/>StorageDead(_674)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>_677 = _655<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>_680 = &amp;_36<br/></td></tr><tr><td align="left">_679 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _680)</td></tr></table>>];
    bb286__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>_678 = (((*_679).5: state::oracle::HistoricalOracleData).4: i64)<br/></td></tr><tr><td align="left">_676 = StrictOraclePrice::new(move _677, move _678, const true)</td></tr></table>>];
    bb287__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_679)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>_685 = &amp;_23<br/>StorageLive(_686)<br/>_1152 = const _<br/>_686 = &amp;(*_1152)<br/></td></tr><tr><td align="left">_684 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _685, move _686)</td></tr></table>>];
    bb288__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left">switchInt(move _684)</td></tr></table>>];
    bb289__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageDead(_685)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>_693 = &amp;_27<br/>_692 = &amp;(*_693)<br/></td></tr><tr><td align="left">_691 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _692)</td></tr></table>>];
    bb290__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">_690 = &amp;(*_691)<br/>StorageDead(_692)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>_697 = &amp;_36<br/>_696 = &amp;(*_697)<br/></td></tr><tr><td align="left">_695 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _696)</td></tr></table>>];
    bb291__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">_694 = &amp;(*_695)<br/>StorageDead(_696)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_699 = &amp;_671<br/>_698 = &amp;(*_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>_701 = &amp;_676<br/>_700 = &amp;(*_701)<br/>StorageLive(_702)<br/>_702 = _206<br/>StorageLive(_703)<br/>_703 = _221<br/>StorageLive(_704)<br/>_704 = _601<br/>StorageLive(_705)<br/>_705 = _616<br/>StorageLive(_706)<br/>_706 = math::margin::MarginRequirementType::Fill<br/></td></tr><tr><td align="left">_689 = select_margin_type_for_swap(move _690, move _694, move _698, move _700, move _702, move _703, move _704, move _705, move _706)</td></tr></table>>];
    bb292__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_706)<br/>StorageDead(_705)<br/>StorageDead(_704)<br/>StorageDead(_703)<br/>StorageDead(_702)<br/>StorageDead(_700)<br/>StorageDead(_698)<br/>StorageDead(_694)<br/>StorageDead(_690)<br/></td></tr><tr><td align="left">_688 = &lt;std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt; as Try&gt;::branch(move _689)</td></tr></table>>];
    bb293__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_689)<br/>_707 = discriminant(_688)<br/></td></tr><tr><td align="left">switchInt(move _707)</td></tr></table>>];
    bb294__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageLive(_711)<br/>_711 = ((_688 as Continue).0: (math::margin::MarginRequirementType, bool))<br/>_683 = _711<br/>StorageDead(_711)<br/>StorageDead(_701)<br/>StorageDead(_699)<br/>StorageDead(_697)<br/>StorageDead(_695)<br/>StorageDead(_693)<br/>StorageDead(_691)<br/>StorageDead(_688)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageLive(_708)<br/>_708 = ((_688 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_710)<br/>_710 = _708<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _710)</td></tr></table>>];
    bb296__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_710)<br/>StorageDead(_708)<br/>StorageDead(_701)<br/>StorageDead(_699)<br/>StorageDead(_697)<br/>StorageDead(_695)<br/>StorageDead(_693)<br/>StorageDead(_691)<br/>StorageDead(_688)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageDead(_685)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>_717 = &amp;_36<br/>_716 = &amp;(*_717)<br/></td></tr><tr><td align="left">_715 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _716)</td></tr></table>>];
    bb298__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">_714 = &amp;(*_715)<br/>StorageDead(_716)<br/>StorageLive(_718)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>_721 = &amp;_27<br/>_720 = &amp;(*_721)<br/></td></tr><tr><td align="left">_719 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _720)</td></tr></table>>];
    bb299__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">_718 = &amp;(*_719)<br/>StorageDead(_720)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>_723 = &amp;_676<br/>_722 = &amp;(*_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>_725 = &amp;_671<br/>_724 = &amp;(*_725)<br/>StorageLive(_726)<br/>_726 = _221<br/>StorageLive(_727)<br/>_727 = _206<br/>StorageLive(_728)<br/>_728 = _616<br/>StorageLive(_729)<br/>_729 = _601<br/>StorageLive(_730)<br/>_730 = math::margin::MarginRequirementType::Fill<br/></td></tr><tr><td align="left">_713 = select_margin_type_for_swap(move _714, move _718, move _722, move _724, move _726, move _727, move _728, move _729, move _730)</td></tr></table>>];
    bb300__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_729)<br/>StorageDead(_728)<br/>StorageDead(_727)<br/>StorageDead(_726)<br/>StorageDead(_724)<br/>StorageDead(_722)<br/>StorageDead(_718)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">_712 = &lt;std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt; as Try&gt;::branch(move _713)</td></tr></table>>];
    bb301__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_713)<br/>_731 = discriminant(_712)<br/></td></tr><tr><td align="left">switchInt(move _731)</td></tr></table>>];
    bb302__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageLive(_735)<br/>_735 = ((_712 as Continue).0: (math::margin::MarginRequirementType, bool))<br/>_683 = _735<br/>StorageDead(_735)<br/>StorageDead(_725)<br/>StorageDead(_723)<br/>StorageDead(_721)<br/>StorageDead(_719)<br/>StorageDead(_717)<br/>StorageDead(_715)<br/>StorageDead(_712)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageLive(_732)<br/>_732 = ((_712 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_734)<br/>_734 = _732<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _734)</td></tr></table>>];
    bb304__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_734)<br/>StorageDead(_732)<br/>StorageDead(_725)<br/>StorageDead(_723)<br/>StorageDead(_721)<br/>StorageDead(_719)<br/>StorageDead(_717)<br/>StorageDead(_715)<br/>StorageDead(_712)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>StorageLive(_681)<br/>_681 = (_683.0: math::margin::MarginRequirementType)<br/>StorageLive(_682)<br/>_682 = (_683.1: bool)<br/>StorageDead(_683)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>_1166 = const false<br/>_737 = move _36<br/></td></tr><tr><td align="left">_736 = std::mem::drop::&lt;RefMut&lt;'_, SpotMarket&gt;&gt;(move _737)</td></tr></table>>];
    bb306__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_737)<br/>StorageDead(_736)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>_1167 = const false<br/>_739 = move _27<br/></td></tr><tr><td align="left">_738 = std::mem::drop::&lt;RefMut&lt;'_, SpotMarket&gt;&gt;(move _739)</td></tr></table>>];
    bb307__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_739)<br/>StorageDead(_738)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>_743 = _681<br/></td></tr><tr><td align="left">_742 = MarginContext::standard(move _743)</td></tr></table>>];
    bb308__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>_746 = _19<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>_750 = _221<br/>StorageLive(_751)<br/>_751 = _616<br/></td></tr><tr><td align="left">_749 = &lt;i128 as SafeMath&gt;::safe_sub(move _750, move _751)</td></tr></table>>];
    bb309__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_751)<br/>StorageDead(_750)<br/></td></tr><tr><td align="left">_748 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _749)</td></tr></table>>];
    bb310__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_749)<br/>_752 = discriminant(_748)<br/></td></tr><tr><td align="left">switchInt(move _752)</td></tr></table>>];
    bb311__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageLive(_756)<br/>_756 = ((_748 as Continue).0: i128)<br/>_747 = _756<br/>StorageDead(_756)<br/>_745 = (move _746, move _747)<br/>StorageDead(_747)<br/>StorageDead(_746)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>_761 = _206<br/>StorageLive(_762)<br/>_762 = _601<br/></td></tr><tr><td align="left">_760 = &lt;i128 as SafeMath&gt;::safe_sub(move _761, move _762)</td></tr></table>>];
    bb312__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageLive(_753)<br/>_753 = ((_748 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_755)<br/>_755 = _753<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _755)</td></tr></table>>];
    bb313__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/>StorageDead(_753)<br/>StorageDead(_747)<br/>StorageDead(_746)<br/>StorageDead(_745)<br/>StorageDead(_744)<br/>StorageDead(_742)<br/>StorageDead(_741)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>StorageDead(_761)<br/></td></tr><tr><td align="left">_759 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _760)</td></tr></table>>];
    bb315__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_760)<br/>_763 = discriminant(_759)<br/></td></tr><tr><td align="left">switchInt(move _763)</td></tr></table>>];
    bb316__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageLive(_767)<br/>_767 = ((_759 as Continue).0: i128)<br/>_758 = _767<br/>StorageDead(_767)<br/>_757 = (const _, move _758)<br/>StorageDead(_758)<br/>_744 = [move _745, move _757]<br/>StorageDead(_757)<br/>StorageDead(_745)<br/></td></tr><tr><td align="left">_741 = MarginContext::fuel_spot_deltas(move _742, move _744)</td></tr></table>>];
    bb317__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageLive(_764)<br/>_764 = ((_759 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_766)<br/>_766 = _764<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _766)</td></tr></table>>];
    bb318__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/>StorageDead(_764)<br/>StorageDead(_758)<br/>StorageDead(_757)<br/>StorageDead(_745)<br/>StorageDead(_744)<br/>StorageDead(_742)<br/>StorageDead(_741)<br/>StorageDead(_759)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb319__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_744)<br/>StorageDead(_742)<br/>StorageLive(_768)<br/>_768 = &amp;(*_1)<br/>StorageLive(_769)<br/>_769 = _14<br/></td></tr><tr><td align="left">_740 = MarginContext::fuel_numerator(move _741, move _768, move _769)</td></tr></table>>];
    bb320__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/>StorageDead(_768)<br/>StorageDead(_741)<br/>StorageDead(_759)<br/>StorageDead(_748)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>_771 = _18<br/></td></tr><tr><td align="left">switchInt(move _771)</td></tr></table>>];
    bb321__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageLive(_772)<br/>_772 = _682<br/></td></tr><tr><td align="left">switchInt(move _772)</td></tr></table>>];
    bb322__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageLive(_773)<br/>StorageLive(_774)<br/>_774 = _740<br/></td></tr><tr><td align="left">_773 = MarginContext::margin_ratio_override(move _774, const _)</td></tr></table>>];
    bb323__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_774)<br/>_740 = move _773<br/>StorageDead(_773)<br/>_770 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb324__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">_770 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb325__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/>StorageDead(_771)<br/>StorageDead(_770)<br/>StorageLive(_775)<br/>StorageLive(_776)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>_778 = &amp;(*_1)<br/>StorageLive(_779)<br/>_779 = &amp;(*_12)<br/>StorageLive(_780)<br/>_780 = &amp;(*_11)<br/>StorageLive(_781)<br/>_781 = &amp;mut (*_13)<br/>StorageLive(_782)<br/>_782 = _740<br/></td></tr><tr><td align="left">_777 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _778, move _779, move _780, move _781, move _782)</td></tr></table>>];
    bb326__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_782)<br/>StorageDead(_781)<br/>StorageDead(_780)<br/>StorageDead(_779)<br/>StorageDead(_778)<br/></td></tr><tr><td align="left">_776 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _777)</td></tr></table>>];
    bb327__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_777)<br/>_783 = discriminant(_776)<br/></td></tr><tr><td align="left">switchInt(move _783)</td></tr></table>>];
    bb328__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_787)<br/>_787 = ((_776 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_775 = _787<br/>StorageDead(_787)<br/>StorageDead(_776)<br/>StorageLive(_788)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>StorageLive(_791)<br/>_791 = &amp;mut (*_4)<br/>StorageLive(_792)<br/>_792 = &amp;mut (*_1)<br/>StorageLive(_793)<br/>_793 = (_775.17: u32)<br/>StorageLive(_794)<br/>_794 = (_775.18: u32)<br/>StorageLive(_795)<br/>_795 = (_775.19: u32)<br/>StorageLive(_796)<br/>_796 = _14<br/></td></tr><tr><td align="left">_790 = UserStats::update_fuel_bonus(move _791, move _792, move _793, move _794, move _795, move _796)</td></tr></table>>];
    bb329__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageLive(_784)<br/>_784 = ((_776 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_786)<br/>_786 = _784<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _786)</td></tr></table>>];
    bb330__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_786)<br/>StorageDead(_784)<br/>StorageDead(_776)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_796)<br/>StorageDead(_795)<br/>StorageDead(_794)<br/>StorageDead(_793)<br/>StorageDead(_792)<br/>StorageDead(_791)<br/></td></tr><tr><td align="left">_789 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _790)</td></tr></table>>];
    bb332__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/>_797 = discriminant(_789)<br/></td></tr><tr><td align="left">switchInt(move _797)</td></tr></table>>];
    bb333__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageLive(_801)<br/>_801 = ((_789 as Continue).0: ())<br/>_788 = _801<br/>StorageDead(_801)<br/>StorageDead(_789)<br/>StorageDead(_788)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>_804 = &amp;_775<br/></td></tr><tr><td align="left">_803 = MarginCalculation::meets_margin_requirement(move _804)</td></tr></table>>];
    bb334__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageLive(_798)<br/>_798 = ((_789 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_800)<br/>_800 = _798<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _800)</td></tr></table>>];
    bb335__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_800)<br/>StorageDead(_798)<br/>StorageDead(_789)<br/>StorageDead(_788)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb336__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left">switchInt(move _803)</td></tr></table>>];
    bb337__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_804)<br/>_802 = const ()<br/>StorageDead(_803)<br/>StorageDead(_802)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>StorageLive(_831)<br/>_1165 = const false<br/>_831 = move _370<br/></td></tr><tr><td align="left">_830 = &lt;BTreeMap&lt;anchor_lang::prelude::Pubkey, i64&gt; as IntoIterator&gt;::into_iter(move _831)</td></tr></table>>];
    bb338__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_804)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>_1151 = const _<br/>_816 = &amp;(*_1151)<br/>_815 = &amp;(*_816)<br/>_814 = move _815 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_815)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>StorageLive(_823)<br/>StorageLive(_824)<br/>_824 = &amp;(_775.3: u128)<br/>_823 = &amp;(*_824)<br/></td></tr><tr><td align="left">_822 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _823)</td></tr></table>>];
    bb339__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>_827 = &amp;(_775.1: i128)<br/>_826 = &amp;(*_827)<br/></td></tr><tr><td align="left">_825 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _826)</td></tr></table>>];
    bb340__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_826)<br/>_821 = [move _822, move _825]<br/>StorageDead(_825)<br/>StorageDead(_822)<br/>_820 = &amp;_821<br/>_819 = &amp;(*_820)<br/>_818 = move _819 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_819)<br/></td></tr><tr><td align="left">_813 = Arguments::&lt;'_&gt;::new_v1(move _814, move _818)</td></tr></table>>];
    bb341__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageDead(_818)<br/>StorageDead(_814)<br/></td></tr><tr><td align="left">_812 = format(move _813)</td></tr></table>>];
    bb342__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_813)<br/>StorageDead(_827)<br/>StorageDead(_824)<br/>StorageDead(_821)<br/>StorageDead(_820)<br/>StorageDead(_816)<br/>_811 = move _812<br/>StorageDead(_812)<br/>_810 = &amp;_811<br/>_809 = &amp;(*_810)<br/></td></tr><tr><td align="left">_808 = &lt;String as Deref&gt;::deref(move _809)</td></tr></table>>];
    bb343__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">_807 = &amp;(*_808)<br/>StorageDead(_809)<br/></td></tr><tr><td align="left">_806 = solana_program::log::sol_log(move _807)</td></tr></table>>];
    bb344__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_807)<br/></td></tr><tr><td align="left">drop(_811)</td></tr></table>>];
    bb345__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>StorageDead(_810)<br/>StorageDead(_808)<br/>StorageDead(_806)<br/>StorageLive(_828)<br/>_828 = error::ErrorCode::InsufficientCollateral<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Err(move _828)<br/>StorageDead(_828)<br/>StorageDead(_803)<br/>StorageDead(_802)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb346__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_831)<br/>StorageLive(_832)<br/>_832 = move _830<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb347__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageLive(_833)<br/>StorageLive(_834)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>_836 = &amp;mut _832<br/>_835 = &amp;mut (*_836)<br/></td></tr><tr><td align="left">_834 = &lt;std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64&gt; as Iterator&gt;::next(move _835)</td></tr></table>>];
    bb348__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_835)<br/>_837 = discriminant(_834)<br/></td></tr><tr><td align="left">switchInt(move _837)</td></tr></table>>];
    bb349__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageLive(_839)<br/>_839 = (((_834 as Some).0: (anchor_lang::prelude::Pubkey, i64)).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>StorageLive(_843)<br/>_843 = &amp;(*_5)<br/>StorageLive(_844)<br/>StorageLive(_845)<br/>_845 = &amp;_839<br/>_844 = &amp;(*_845)<br/></td></tr><tr><td align="left">_842 = UserMap::&lt;'_&gt;::get_ref_mut(move _843, move _844)</td></tr></table>>];
    bb350__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">_829 = const ()<br/>StorageDead(_836)<br/>StorageDead(_834)<br/>StorageDead(_833)<br/></td></tr><tr><td align="left">drop(_832)</td></tr></table>>];
    bb351__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_844)<br/>StorageDead(_843)<br/></td></tr><tr><td align="left">_841 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _842)</td></tr></table>>];
    bb352__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>_846 = discriminant(_841)<br/></td></tr><tr><td align="left">switchInt(move _846)</td></tr></table>>];
    bb353__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageLive(_850)<br/>_850 = move ((_841 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_840 = move _850<br/>StorageDead(_850)<br/>_1194 = discriminant(_841)<br/>StorageDead(_845)<br/>StorageDead(_841)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>_855 = &amp;_840<br/></td></tr><tr><td align="left">_854 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _855)</td></tr></table>>];
    bb354__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageLive(_847)<br/>_847 = ((_841 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_849)<br/>_849 = _847<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _849)</td></tr></table>>];
    bb355__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_849)<br/>StorageDead(_847)<br/>_1192 = discriminant(_841)<br/>StorageDead(_845)<br/>StorageDead(_841)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb356__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_855)<br/>_853 = &amp;((*_854).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_856)<br/>_856 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_852 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _853, move _856)</td></tr></table>>];
    bb357__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left">switchInt(move _852)</td></tr></table>>];
    bb358__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>StorageDead(_854)<br/>StorageDead(_853)<br/>_1162 = const true<br/>_851 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb359__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>StorageDead(_854)<br/>StorageDead(_853)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>_860 = &amp;(*_6)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>StorageLive(_864)<br/>_864 = &amp;_840<br/></td></tr><tr><td align="left">_863 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _864)</td></tr></table>>];
    bb360__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/>_862 = &amp;((*_863).0: anchor_lang::prelude::Pubkey)<br/>_861 = &amp;(*_862)<br/></td></tr><tr><td align="left">_859 = UserStatsMap::&lt;'_&gt;::get_ref_mut(move _860, move _861)</td></tr></table>>];
    bb361__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_861)<br/>StorageDead(_860)<br/></td></tr><tr><td align="left">_858 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _859)</td></tr></table>>];
    bb362__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>_865 = discriminant(_858)<br/></td></tr><tr><td align="left">switchInt(move _865)</td></tr></table>>];
    bb363__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageLive(_869)<br/>_869 = move ((_858 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_857 = move _869<br/>StorageDead(_869)<br/>_1162 = const true<br/>_851 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _857)<br/>StorageDead(_857)<br/>_1198 = discriminant(_858)<br/>StorageDead(_863)<br/>StorageDead(_862)<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb364__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageLive(_866)<br/>_866 = ((_858 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_868)<br/>_868 = _866<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _868)</td></tr></table>>];
    bb365__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/>StorageDead(_866)<br/>StorageDead(_857)<br/>_1196 = discriminant(_858)<br/>StorageDead(_863)<br/>StorageDead(_862)<br/>StorageDead(_858)<br/>StorageDead(_852)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb366__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>_873 = &amp;(*_11)<br/></td></tr><tr><td align="left">_872 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _873)</td></tr></table>>];
    bb367__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/></td></tr><tr><td align="left">_871 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _872)</td></tr></table>>];
    bb368__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_872)<br/>_874 = discriminant(_871)<br/></td></tr><tr><td align="left">switchInt(move _874)</td></tr></table>>];
    bb369__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageLive(_878)<br/>_878 = move ((_871 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1164 = const true<br/>_870 = move _878<br/>StorageDead(_878)<br/>_1202 = discriminant(_871)<br/>StorageDead(_871)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>_882 = &amp;(*_11)<br/>StorageLive(_883)<br/>StorageLive(_884)<br/>_884 = &amp;_19<br/>_883 = &amp;(*_884)<br/></td></tr><tr><td align="left">_881 = SpotMarketMap::&lt;'_&gt;::get_ref(move _882, move _883)</td></tr></table>>];
    bb370__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageLive(_875)<br/>_875 = ((_871 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_877)<br/>_877 = _875<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _877)</td></tr></table>>];
    bb371__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/>StorageDead(_875)<br/>_1200 = discriminant(_871)<br/>StorageDead(_871)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb372__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/>StorageDead(_882)<br/></td></tr><tr><td align="left">_880 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _881)</td></tr></table>>];
    bb373__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_881)<br/>_885 = discriminant(_880)<br/></td></tr><tr><td align="left">switchInt(move _885)</td></tr></table>>];
    bb374__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageLive(_889)<br/>_889 = move ((_880 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1163 = const true<br/>_879 = move _889<br/>StorageDead(_889)<br/>_1206 = discriminant(_880)<br/>StorageDead(_884)<br/>StorageDead(_880)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>_896 = &amp;_244<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>_898 = &amp;_839<br/>_897 = &amp;(*_898)<br/></td></tr><tr><td align="left">_895 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, (i128, i128)&gt;::get::&lt;anchor_lang::prelude::Pubkey&gt;(move _896, move _897)</td></tr></table>>];
    bb375__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageLive(_886)<br/>_886 = ((_880 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_888)<br/>_888 = _886<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _888)</td></tr></table>>];
    bb376__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/>StorageDead(_886)<br/>_1204 = discriminant(_880)<br/>StorageDead(_884)<br/>StorageDead(_880)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb377__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/>StorageDead(_896)<br/></td></tr><tr><td align="left">_894 = &lt;Option&lt;&amp;(i128, i128)&gt; as SafeUnwrap&gt;::safe_unwrap(move _895)</td></tr></table>>];
    bb378__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_895)<br/></td></tr><tr><td align="left">_893 = &lt;std::result::Result&lt;&amp;(i128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _894)</td></tr></table>>];
    bb379__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_894)<br/>_899 = discriminant(_893)<br/></td></tr><tr><td align="left">switchInt(move _899)</td></tr></table>>];
    bb380__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageLive(_903)<br/>_903 = ((_893 as Continue).0: &amp;(i128, i128))<br/>_892 = _903<br/>StorageDead(_903)<br/>StorageLive(_890)<br/>_890 = &amp;((*_892).0: i128)<br/>StorageLive(_891)<br/>_891 = &amp;((*_892).1: i128)<br/>StorageDead(_898)<br/>StorageDead(_893)<br/>StorageDead(_892)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>StorageLive(_906)<br/>StorageLive(_907)<br/>StorageLive(_908)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>_911 = &amp;_840<br/></td></tr><tr><td align="left">_910 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _911)</td></tr></table>>];
    bb381__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageLive(_900)<br/>_900 = ((_893 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_902)<br/>_902 = _900<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _902)</td></tr></table>>];
    bb382__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_902)<br/>StorageDead(_900)<br/>StorageDead(_898)<br/>StorageDead(_893)<br/>StorageDead(_892)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb383__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">_909 = &amp;(*_910)<br/>StorageDead(_911)<br/></td></tr><tr><td align="left">_908 = User::get_quote_spot_position(move _909)</td></tr></table>>];
    bb384__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">_907 = &amp;(*_908)<br/>StorageDead(_909)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>_915 = &amp;_870<br/>_914 = &amp;(*_915)<br/></td></tr><tr><td align="left">_913 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _914)</td></tr></table>>];
    bb385__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">_912 = &amp;(*_913)<br/>StorageDead(_914)<br/></td></tr><tr><td align="left">_906 = SpotPosition::get_signed_token_amount(move _907, move _912)</td></tr></table>>];
    bb386__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/>StorageDead(_907)<br/></td></tr><tr><td align="left">_905 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _906)</td></tr></table>>];
    bb387__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_906)<br/>_916 = discriminant(_905)<br/></td></tr><tr><td align="left">switchInt(move _916)</td></tr></table>>];
    bb388__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageLive(_920)<br/>_920 = ((_905 as Continue).0: i128)<br/>_904 = _920<br/>StorageDead(_920)<br/>StorageDead(_915)<br/>StorageDead(_913)<br/>StorageDead(_910)<br/>StorageDead(_908)<br/>StorageDead(_905)<br/>StorageLive(_921)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>StorageLive(_930)<br/>_930 = &amp;_840<br/></td></tr><tr><td align="left">_929 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _930)</td></tr></table>>];
    bb389__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageLive(_917)<br/>_917 = ((_905 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_919)<br/>_919 = _917<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _919)</td></tr></table>>];
    bb390__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_919)<br/>StorageDead(_917)<br/>StorageDead(_915)<br/>StorageDead(_913)<br/>StorageDead(_910)<br/>StorageDead(_908)<br/>StorageDead(_905)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb391__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">_928 = &amp;(*_929)<br/>StorageDead(_930)<br/>StorageLive(_931)<br/>_931 = _19<br/></td></tr><tr><td align="left">_927 = User::get_spot_position(move _928, move _931)</td></tr></table>>];
    bb392__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_931)<br/>StorageDead(_928)<br/></td></tr><tr><td align="left">_926 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _927)</td></tr></table>>];
    bb393__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_927)<br/>_932 = discriminant(_926)<br/></td></tr><tr><td align="left">switchInt(move _932)</td></tr></table>>];
    bb394__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageLive(_936)<br/>_936 = ((_926 as Continue).0: &amp;state::user::SpotPosition)<br/>_925 = _936<br/>StorageDead(_936)<br/>_924 = &amp;(*_925)<br/>StorageLive(_937)<br/>StorageLive(_938)<br/>StorageLive(_939)<br/>StorageLive(_940)<br/>_940 = &amp;_879<br/>_939 = &amp;(*_940)<br/></td></tr><tr><td align="left">_938 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _939)</td></tr></table>>];
    bb395__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageLive(_933)<br/>_933 = ((_926 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_935)<br/>_935 = _933<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _935)</td></tr></table>>];
    bb396__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_935)<br/>StorageDead(_933)<br/>StorageDead(_924)<br/>StorageDead(_923)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb397__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">_937 = &amp;(*_938)<br/>StorageDead(_939)<br/></td></tr><tr><td align="left">_923 = SpotPosition::get_signed_token_amount(move _924, move _937)</td></tr></table>>];
    bb398__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_937)<br/>StorageDead(_924)<br/></td></tr><tr><td align="left">_922 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _923)</td></tr></table>>];
    bb399__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_923)<br/>_941 = discriminant(_922)<br/></td></tr><tr><td align="left">switchInt(move _941)</td></tr></table>>];
    bb400__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageLive(_945)<br/>_945 = ((_922 as Continue).0: i128)<br/>_921 = _945<br/>StorageDead(_945)<br/>StorageDead(_940)<br/>StorageDead(_938)<br/>StorageDead(_929)<br/>StorageDead(_926)<br/>StorageDead(_925)<br/>StorageDead(_922)<br/>StorageLive(_948)<br/>StorageLive(_949)<br/>StorageLive(_950)<br/>_950 = &amp;_371<br/>StorageLive(_951)<br/>_1150 = const _<br/>_951 = &amp;(*_1150)<br/></td></tr><tr><td align="left">_949 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _950, move _951)</td></tr></table>>];
    bb401__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageLive(_942)<br/>_942 = ((_922 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_944)<br/>_944 = _942<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _944)</td></tr></table>>];
    bb402__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_944)<br/>StorageDead(_942)<br/>StorageDead(_940)<br/>StorageDead(_938)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left">switchInt(move _949)</td></tr></table>>];
    bb404__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_951)<br/>StorageDead(_950)<br/>StorageLive(_953)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>StorageLive(_957)<br/>StorageLive(_958)<br/>_958 = &amp;_870<br/>_957 = &amp;(*_958)<br/></td></tr><tr><td align="left">_956 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _957)</td></tr></table>>];
    bb405__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">_955 = &amp;(*_956)<br/>StorageDead(_957)<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>StorageLive(_961)<br/>StorageLive(_962)<br/>_962 = &amp;_879<br/>_961 = &amp;(*_962)<br/></td></tr><tr><td align="left">_960 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _961)</td></tr></table>>];
    bb406__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">_959 = &amp;(*_960)<br/>StorageDead(_961)<br/>StorageLive(_963)<br/>StorageLive(_964)<br/>_964 = &amp;_671<br/>_963 = &amp;(*_964)<br/>StorageLive(_965)<br/>StorageLive(_966)<br/>_966 = &amp;_676<br/>_965 = &amp;(*_966)<br/>StorageLive(_967)<br/>_967 = (*_891)<br/>StorageLive(_968)<br/>_968 = (*_890)<br/>StorageLive(_969)<br/>_969 = _904<br/>StorageLive(_970)<br/>_970 = _921<br/>StorageLive(_971)<br/>_971 = math::margin::MarginRequirementType::Fill<br/></td></tr><tr><td align="left">_954 = select_margin_type_for_swap(move _955, move _959, move _963, move _965, move _967, move _968, move _969, move _970, move _971)</td></tr></table>>];
    bb407__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/>StorageDead(_970)<br/>StorageDead(_969)<br/>StorageDead(_968)<br/>StorageDead(_967)<br/>StorageDead(_965)<br/>StorageDead(_963)<br/>StorageDead(_959)<br/>StorageDead(_955)<br/></td></tr><tr><td align="left">_953 = &lt;std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt; as Try&gt;::branch(move _954)</td></tr></table>>];
    bb408__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_954)<br/>_972 = discriminant(_953)<br/></td></tr><tr><td align="left">switchInt(move _972)</td></tr></table>>];
    bb409__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageLive(_976)<br/>_976 = ((_953 as Continue).0: (math::margin::MarginRequirementType, bool))<br/>_948 = _976<br/>StorageDead(_976)<br/>StorageDead(_966)<br/>StorageDead(_964)<br/>StorageDead(_962)<br/>StorageDead(_960)<br/>StorageDead(_958)<br/>StorageDead(_956)<br/>StorageDead(_953)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageLive(_973)<br/>_973 = ((_953 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_975)<br/>_975 = _973<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _975)</td></tr></table>>];
    bb411__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_975)<br/>StorageDead(_973)<br/>StorageDead(_966)<br/>StorageDead(_964)<br/>StorageDead(_962)<br/>StorageDead(_960)<br/>StorageDead(_958)<br/>StorageDead(_956)<br/>StorageDead(_953)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb412__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_951)<br/>StorageDead(_950)<br/>StorageLive(_977)<br/>StorageLive(_978)<br/>StorageLive(_979)<br/>StorageLive(_980)<br/>StorageLive(_981)<br/>StorageLive(_982)<br/>_982 = &amp;_879<br/>_981 = &amp;(*_982)<br/></td></tr><tr><td align="left">_980 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _981)</td></tr></table>>];
    bb413__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">_979 = &amp;(*_980)<br/>StorageDead(_981)<br/>StorageLive(_983)<br/>StorageLive(_984)<br/>StorageLive(_985)<br/>StorageLive(_986)<br/>_986 = &amp;_870<br/>_985 = &amp;(*_986)<br/></td></tr><tr><td align="left">_984 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _985)</td></tr></table>>];
    bb414__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">_983 = &amp;(*_984)<br/>StorageDead(_985)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>_988 = &amp;_676<br/>_987 = &amp;(*_988)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>_990 = &amp;_671<br/>_989 = &amp;(*_990)<br/>StorageLive(_991)<br/>_991 = (*_890)<br/>StorageLive(_992)<br/>_992 = (*_891)<br/>StorageLive(_993)<br/>_993 = _921<br/>StorageLive(_994)<br/>_994 = _904<br/>StorageLive(_995)<br/>_995 = math::margin::MarginRequirementType::Fill<br/></td></tr><tr><td align="left">_978 = select_margin_type_for_swap(move _979, move _983, move _987, move _989, move _991, move _992, move _993, move _994, move _995)</td></tr></table>>];
    bb415__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_995)<br/>StorageDead(_994)<br/>StorageDead(_993)<br/>StorageDead(_992)<br/>StorageDead(_991)<br/>StorageDead(_989)<br/>StorageDead(_987)<br/>StorageDead(_983)<br/>StorageDead(_979)<br/></td></tr><tr><td align="left">_977 = &lt;std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt; as Try&gt;::branch(move _978)</td></tr></table>>];
    bb416__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_978)<br/>_996 = discriminant(_977)<br/></td></tr><tr><td align="left">switchInt(move _996)</td></tr></table>>];
    bb417__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageLive(_1000)<br/>_1000 = ((_977 as Continue).0: (math::margin::MarginRequirementType, bool))<br/>_948 = _1000<br/>StorageDead(_1000)<br/>StorageDead(_990)<br/>StorageDead(_988)<br/>StorageDead(_986)<br/>StorageDead(_984)<br/>StorageDead(_982)<br/>StorageDead(_980)<br/>StorageDead(_977)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb418__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageLive(_997)<br/>_997 = ((_977 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_999)<br/>_999 = _997<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _999)</td></tr></table>>];
    bb419__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_999)<br/>StorageDead(_997)<br/>StorageDead(_990)<br/>StorageDead(_988)<br/>StorageDead(_986)<br/>StorageDead(_984)<br/>StorageDead(_982)<br/>StorageDead(_980)<br/>StorageDead(_977)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb420__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_949)<br/>StorageLive(_946)<br/>_946 = (_948.0: math::margin::MarginRequirementType)<br/>StorageLive(_947)<br/>_947 = (_948.1: bool)<br/>StorageDead(_948)<br/>StorageLive(_1001)<br/>StorageLive(_1002)<br/>_1163 = const false<br/>_1002 = move _879<br/></td></tr><tr><td align="left">_1001 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _1002)</td></tr></table>>];
    bb421__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_1002)<br/>StorageDead(_1001)<br/>StorageLive(_1003)<br/>StorageLive(_1004)<br/>_1164 = const false<br/>_1004 = move _870<br/></td></tr><tr><td align="left">_1003 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _1004)</td></tr></table>>];
    bb422__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>StorageDead(_1003)<br/>StorageLive(_1005)<br/>StorageLive(_1006)<br/>StorageLive(_1007)<br/>StorageLive(_1008)<br/>_1008 = _946<br/></td></tr><tr><td align="left">_1007 = MarginContext::standard(move _1008)</td></tr></table>>];
    bb423__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_1008)<br/>StorageLive(_1009)<br/>StorageLive(_1010)<br/>StorageLive(_1011)<br/>_1011 = _19<br/>StorageLive(_1012)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>_1015 = (*_890)<br/>StorageLive(_1016)<br/>_1016 = _921<br/></td></tr><tr><td align="left">_1014 = &lt;i128 as SafeMath&gt;::safe_sub(move _1015, move _1016)</td></tr></table>>];
    bb424__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_1016)<br/>StorageDead(_1015)<br/></td></tr><tr><td align="left">_1013 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1014)</td></tr></table>>];
    bb425__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_1014)<br/>_1017 = discriminant(_1013)<br/></td></tr><tr><td align="left">switchInt(move _1017)</td></tr></table>>];
    bb426__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageLive(_1021)<br/>_1021 = ((_1013 as Continue).0: i128)<br/>_1012 = _1021<br/>StorageDead(_1021)<br/>_1010 = (move _1011, move _1012)<br/>StorageDead(_1012)<br/>StorageDead(_1011)<br/>StorageLive(_1022)<br/>StorageLive(_1023)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>StorageLive(_1026)<br/>_1026 = (*_891)<br/>StorageLive(_1027)<br/>_1027 = _904<br/></td></tr><tr><td align="left">_1025 = &lt;i128 as SafeMath&gt;::safe_sub(move _1026, move _1027)</td></tr></table>>];
    bb427__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageLive(_1018)<br/>_1018 = ((_1013 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1020)<br/>_1020 = _1018<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1020)</td></tr></table>>];
    bb428__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_1020)<br/>StorageDead(_1018)<br/>StorageDead(_1012)<br/>StorageDead(_1011)<br/>StorageDead(_1010)<br/>StorageDead(_1009)<br/>StorageDead(_1007)<br/>StorageDead(_1006)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb429__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_1027)<br/>StorageDead(_1026)<br/></td></tr><tr><td align="left">_1024 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1025)</td></tr></table>>];
    bb430__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_1025)<br/>_1028 = discriminant(_1024)<br/></td></tr><tr><td align="left">switchInt(move _1028)</td></tr></table>>];
    bb431__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageLive(_1032)<br/>_1032 = ((_1024 as Continue).0: i128)<br/>_1023 = _1032<br/>StorageDead(_1032)<br/>_1022 = (const _, move _1023)<br/>StorageDead(_1023)<br/>_1009 = [move _1010, move _1022]<br/>StorageDead(_1022)<br/>StorageDead(_1010)<br/></td></tr><tr><td align="left">_1006 = MarginContext::fuel_spot_deltas(move _1007, move _1009)</td></tr></table>>];
    bb432__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageLive(_1029)<br/>_1029 = ((_1024 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1031)<br/>_1031 = _1029<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1031)</td></tr></table>>];
    bb433__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/>StorageDead(_1029)<br/>StorageDead(_1023)<br/>StorageDead(_1022)<br/>StorageDead(_1010)<br/>StorageDead(_1009)<br/>StorageDead(_1007)<br/>StorageDead(_1006)<br/>StorageDead(_1024)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb434__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_1009)<br/>StorageDead(_1007)<br/>StorageLive(_1033)<br/>StorageLive(_1034)<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>_1036 = &amp;_840<br/>_1035 = &amp;(*_1036)<br/></td></tr><tr><td align="left">_1034 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _1035)</td></tr></table>>];
    bb435__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">_1033 = &amp;(*_1034)<br/>StorageDead(_1035)<br/>StorageLive(_1037)<br/>_1037 = _14<br/></td></tr><tr><td align="left">_1005 = MarginContext::fuel_numerator(move _1006, move _1033, move _1037)</td></tr></table>>];
    bb436__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_1037)<br/>StorageDead(_1033)<br/>StorageDead(_1006)<br/>StorageDead(_1036)<br/>StorageDead(_1034)<br/>StorageDead(_1024)<br/>StorageDead(_1013)<br/>StorageLive(_1038)<br/>StorageLive(_1039)<br/>_1039 = _18<br/></td></tr><tr><td align="left">switchInt(move _1039)</td></tr></table>>];
    bb437__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageLive(_1040)<br/>StorageLive(_1041)<br/>StorageLive(_1042)<br/>StorageLive(_1043)<br/>_1043 = _947<br/></td></tr><tr><td align="left">switchInt(move _1043)</td></tr></table>>];
    bb438__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageLive(_1044)<br/>_1044 = _682<br/></td></tr><tr><td align="left">switchInt(move _1044)</td></tr></table>>];
    bb439__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageLive(_1045)<br/>_1045 = ()<br/>_1042 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1045)<br/>StorageDead(_1045)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb440__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageLive(_1046)<br/>_1046 = error::ErrorCode::InvalidOracle<br/>StorageLive(_1047)<br/>StorageLive(_1048)<br/>StorageLive(_1049)<br/>StorageLive(_1050)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>StorageLive(_1053)<br/>StorageLive(_1054)<br/>StorageLive(_1055)<br/>StorageLive(_1056)<br/>StorageLive(_1057)<br/>_1149 = const _<br/>_1057 = &amp;(*_1149)<br/>_1056 = &amp;(*_1057)<br/>_1055 = move _1056 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1056)<br/>StorageLive(_1059)<br/>StorageLive(_1060)<br/>StorageLive(_1061)<br/>StorageLive(_1062)<br/>StorageLive(_1063)<br/>StorageLive(_1064)<br/>StorageLive(_1065)<br/>_1065 = &amp;_1046<br/>_1064 = &amp;(*_1065)<br/></td></tr><tr><td align="left">_1063 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1064)</td></tr></table>>];
    bb441__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_1064)<br/>_1062 = [move _1063]<br/>StorageDead(_1063)<br/>_1061 = &amp;_1062<br/>_1060 = &amp;(*_1061)<br/>_1059 = move _1060 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1060)<br/></td></tr><tr><td align="left">_1054 = Arguments::&lt;'_&gt;::new_v1(move _1055, move _1059)</td></tr></table>>];
    bb442__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_1059)<br/>StorageDead(_1055)<br/></td></tr><tr><td align="left">_1053 = format(move _1054)</td></tr></table>>];
    bb443__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_1054)<br/>StorageDead(_1065)<br/>StorageDead(_1062)<br/>StorageDead(_1061)<br/>StorageDead(_1057)<br/>_1052 = move _1053<br/>StorageDead(_1053)<br/>_1051 = &amp;_1052<br/>_1050 = &amp;(*_1051)<br/></td></tr><tr><td align="left">_1049 = &lt;String as Deref&gt;::deref(move _1050)</td></tr></table>>];
    bb444__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">_1048 = &amp;(*_1049)<br/>StorageDead(_1050)<br/></td></tr><tr><td align="left">_1047 = solana_program::log::sol_log(move _1048)</td></tr></table>>];
    bb445__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1048)<br/></td></tr><tr><td align="left">drop(_1052)</td></tr></table>>];
    bb446__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_1052)<br/>StorageDead(_1051)<br/>StorageDead(_1049)<br/>StorageDead(_1047)<br/>StorageLive(_1066)<br/>StorageLive(_1067)<br/>StorageLive(_1068)<br/>_1068 = const &quot;maker or taker must be reducing position if oracle stale for margin&quot;<br/>_1067 = &amp;(*_1068)<br/></td></tr><tr><td align="left">_1066 = solana_program::log::sol_log(move _1067)</td></tr></table>>];
    bb447__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_1067)<br/>StorageDead(_1068)<br/>StorageDead(_1066)<br/>StorageLive(_1069)<br/>_1069 = _1046<br/>_1042 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1069)<br/>StorageDead(_1069)<br/>StorageDead(_1046)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb448__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_1044)<br/>StorageDead(_1043)<br/></td></tr><tr><td align="left">_1041 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1042)</td></tr></table>>];
    bb449__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1042)<br/>_1070 = discriminant(_1041)<br/></td></tr><tr><td align="left">switchInt(move _1070)</td></tr></table>>];
    bb450__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageLive(_1074)<br/>_1074 = ((_1041 as Continue).0: ())<br/>_1040 = _1074<br/>StorageDead(_1074)<br/>StorageDead(_1041)<br/>StorageDead(_1040)<br/>StorageLive(_1075)<br/>_1075 = _947<br/></td></tr><tr><td align="left">switchInt(move _1075)</td></tr></table>>];
    bb451__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageLive(_1071)<br/>_1071 = ((_1041 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1073)<br/>_1073 = _1071<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1073)</td></tr></table>>];
    bb452__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1073)<br/>StorageDead(_1071)<br/>StorageDead(_1041)<br/>StorageDead(_1040)<br/>StorageDead(_1039)<br/>StorageDead(_1038)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb453__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageLive(_1076)<br/>StorageLive(_1077)<br/>_1077 = _1005<br/></td></tr><tr><td align="left">_1076 = MarginContext::margin_ratio_override(move _1077, const _)</td></tr></table>>];
    bb454__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">_1038 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb455__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1077)<br/>_1005 = move _1076<br/>StorageDead(_1076)<br/>_1038 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb456__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageDead(_1075)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb457__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">_1038 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb458__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1039)<br/>StorageDead(_1038)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>StorageLive(_1080)<br/>StorageLive(_1081)<br/>StorageLive(_1082)<br/>StorageLive(_1083)<br/>StorageLive(_1084)<br/>_1084 = &amp;_840<br/>_1083 = &amp;(*_1084)<br/></td></tr><tr><td align="left">_1082 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _1083)</td></tr></table>>];
    bb459__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">_1081 = &amp;(*_1082)<br/>StorageDead(_1083)<br/>StorageLive(_1085)<br/>_1085 = &amp;(*_12)<br/>StorageLive(_1086)<br/>_1086 = &amp;(*_11)<br/>StorageLive(_1087)<br/>_1087 = &amp;mut (*_13)<br/>StorageLive(_1088)<br/>_1088 = _1005<br/></td></tr><tr><td align="left">_1080 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _1081, move _1085, move _1086, move _1087, move _1088)</td></tr></table>>];
    bb460__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_1088)<br/>StorageDead(_1087)<br/>StorageDead(_1086)<br/>StorageDead(_1085)<br/>StorageDead(_1081)<br/></td></tr><tr><td align="left">_1079 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _1080)</td></tr></table>>];
    bb461__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_1080)<br/>_1089 = discriminant(_1079)<br/></td></tr><tr><td align="left">switchInt(move _1089)</td></tr></table>>];
    bb462__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageLive(_1093)<br/>_1093 = ((_1079 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_1078 = _1093<br/>StorageDead(_1093)<br/>StorageDead(_1084)<br/>StorageDead(_1082)<br/>StorageDead(_1079)<br/>StorageLive(_1094)<br/>_1095 = discriminant(_851)<br/></td></tr><tr><td align="left">switchInt(move _1095)</td></tr></table>>];
    bb463__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageLive(_1090)<br/>_1090 = ((_1079 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1092)<br/>_1092 = _1090<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1092)</td></tr></table>>];
    bb464__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/>StorageDead(_1090)<br/>StorageDead(_1084)<br/>StorageDead(_1082)<br/>StorageDead(_1079)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb465__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">_1094 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb466__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageLive(_1096)<br/>_1162 = const false<br/>_1096 = move ((_851 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>StorageLive(_1097)<br/>StorageLive(_1098)<br/>StorageLive(_1099)<br/>StorageLive(_1100)<br/>StorageLive(_1101)<br/>StorageLive(_1102)<br/>_1102 = &amp;mut _1096<br/></td></tr><tr><td align="left">_1101 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _1102)</td></tr></table>>];
    bb467__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">_1100 = &amp;mut (*_1101)<br/>StorageDead(_1102)<br/>StorageLive(_1103)<br/>StorageLive(_1104)<br/>StorageLive(_1105)<br/>StorageLive(_1106)<br/>_1106 = &amp;mut _840<br/>_1105 = &amp;mut (*_1106)<br/></td></tr><tr><td align="left">_1104 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1105)</td></tr></table>>];
    bb468__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">_1103 = &amp;mut (*_1104)<br/>StorageDead(_1105)<br/>StorageLive(_1107)<br/>_1107 = (_1078.17: u32)<br/>StorageLive(_1108)<br/>_1108 = (_1078.18: u32)<br/>StorageLive(_1109)<br/>_1109 = (_1078.19: u32)<br/>StorageLive(_1110)<br/>_1110 = _14<br/></td></tr><tr><td align="left">_1099 = UserStats::update_fuel_bonus(move _1100, move _1103, move _1107, move _1108, move _1109, move _1110)</td></tr></table>>];
    bb469__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1110)<br/>StorageDead(_1109)<br/>StorageDead(_1108)<br/>StorageDead(_1107)<br/>StorageDead(_1103)<br/>StorageDead(_1100)<br/></td></tr><tr><td align="left">_1098 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1099)</td></tr></table>>];
    bb470__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1099)<br/>_1111 = discriminant(_1098)<br/></td></tr><tr><td align="left">switchInt(move _1111)</td></tr></table>>];
    bb471__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageLive(_1115)<br/>_1115 = ((_1098 as Continue).0: ())<br/>_1097 = _1115<br/>StorageDead(_1115)<br/>StorageDead(_1106)<br/>StorageDead(_1104)<br/>StorageDead(_1101)<br/>StorageDead(_1098)<br/>StorageDead(_1097)<br/>_1094 = const ()<br/></td></tr><tr><td align="left">drop(_1096)</td></tr></table>>];
    bb472__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageLive(_1112)<br/>_1112 = ((_1098 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1114)<br/>_1114 = _1112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1114)</td></tr></table>>];
    bb473__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1114)<br/>StorageDead(_1112)<br/>StorageDead(_1106)<br/>StorageDead(_1104)<br/>StorageDead(_1101)<br/>StorageDead(_1098)<br/>StorageDead(_1097)<br/></td></tr><tr><td align="left">drop(_1096)</td></tr></table>>];
    bb474__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageDead(_1096)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb475__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1094)<br/>StorageLive(_1116)<br/>StorageLive(_1117)<br/>_1117 = &amp;_1078<br/></td></tr><tr><td align="left">_1116 = MarginCalculation::meets_margin_requirement(move _1117)</td></tr></table>>];
    bb476__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left">switchInt(move _1116)</td></tr></table>>];
    bb477__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1117)<br/>_833 = const ()<br/>StorageDead(_1116)<br/>StorageDead(_1078)<br/>StorageDead(_1005)<br/>StorageDead(_947)<br/>StorageDead(_946)<br/>StorageDead(_921)<br/>StorageDead(_904)<br/>StorageDead(_891)<br/>StorageDead(_890)<br/>_1163 = const false<br/>StorageDead(_879)<br/>_1164 = const false<br/>StorageDead(_870)<br/>_1208 = discriminant(_851)<br/></td></tr><tr><td align="left">switchInt(move _1208)</td></tr></table>>];
    bb478__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_1117)<br/>StorageLive(_1119)<br/>StorageLive(_1120)<br/>StorageLive(_1121)<br/>StorageLive(_1122)<br/>StorageLive(_1123)<br/>StorageLive(_1124)<br/>StorageLive(_1125)<br/>StorageLive(_1126)<br/>StorageLive(_1127)<br/>StorageLive(_1128)<br/>StorageLive(_1129)<br/>_1148 = const _<br/>_1129 = &amp;(*_1148)<br/>_1128 = &amp;(*_1129)<br/>_1127 = move _1128 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1128)<br/>StorageLive(_1131)<br/>StorageLive(_1132)<br/>StorageLive(_1133)<br/>StorageLive(_1134)<br/>StorageLive(_1135)<br/>StorageLive(_1136)<br/>StorageLive(_1137)<br/>_1137 = &amp;_839<br/>_1136 = &amp;(*_1137)<br/></td></tr><tr><td align="left">_1135 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _1136)</td></tr></table>>];
    bb479__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageDead(_1136)<br/>StorageLive(_1138)<br/>StorageLive(_1139)<br/>StorageLive(_1140)<br/>_1140 = &amp;(_1078.3: u128)<br/>_1139 = &amp;(*_1140)<br/></td></tr><tr><td align="left">_1138 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1139)</td></tr></table>>];
    bb480__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>StorageLive(_1141)<br/>StorageLive(_1142)<br/>StorageLive(_1143)<br/>_1143 = &amp;(_1078.1: i128)<br/>_1142 = &amp;(*_1143)<br/></td></tr><tr><td align="left">_1141 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _1142)</td></tr></table>>];
    bb481__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1142)<br/>_1134 = [move _1135, move _1138, move _1141]<br/>StorageDead(_1141)<br/>StorageDead(_1138)<br/>StorageDead(_1135)<br/>_1133 = &amp;_1134<br/>_1132 = &amp;(*_1133)<br/>_1131 = move _1132 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1132)<br/></td></tr><tr><td align="left">_1126 = Arguments::&lt;'_&gt;::new_v1(move _1127, move _1131)</td></tr></table>>];
    bb482__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1131)<br/>StorageDead(_1127)<br/></td></tr><tr><td align="left">_1125 = format(move _1126)</td></tr></table>>];
    bb483__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1126)<br/>StorageDead(_1143)<br/>StorageDead(_1140)<br/>StorageDead(_1137)<br/>StorageDead(_1134)<br/>StorageDead(_1133)<br/>StorageDead(_1129)<br/>_1124 = move _1125<br/>StorageDead(_1125)<br/>_1123 = &amp;_1124<br/>_1122 = &amp;(*_1123)<br/></td></tr><tr><td align="left">_1121 = &lt;String as Deref&gt;::deref(move _1122)</td></tr></table>>];
    bb484__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">_1120 = &amp;(*_1121)<br/>StorageDead(_1122)<br/></td></tr><tr><td align="left">_1119 = solana_program::log::sol_log(move _1120)</td></tr></table>>];
    bb485__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1120)<br/></td></tr><tr><td align="left">drop(_1124)</td></tr></table>>];
    bb486__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_1124)<br/>StorageDead(_1123)<br/>StorageDead(_1121)<br/>StorageDead(_1119)<br/>StorageLive(_1144)<br/>_1144 = error::ErrorCode::InsufficientCollateral<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Err(move _1144)<br/>StorageDead(_1144)<br/>StorageDead(_1116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb487__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>StorageDead(_839)<br/>StorageDead(_836)<br/>StorageDead(_834)<br/>StorageDead(_833)<br/>_249 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb488__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_832)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/>StorageLive(_1145)<br/>StorageLive(_1146)<br/>_1146 = _368<br/>StorageLive(_1147)<br/>_1147 = _369<br/>_1145 = (move _1146, move _1147)<br/>StorageDead(_1147)<br/>StorageDead(_1146)<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Ok(move _1145)<br/>StorageDead(_1145)<br/>StorageDead(_775)<br/>StorageDead(_740)<br/>StorageDead(_682)<br/>StorageDead(_681)<br/>StorageDead(_676)<br/>StorageDead(_671)<br/>StorageDead(_655)<br/>StorageDead(_639)<br/>StorageDead(_616)<br/>StorageDead(_601)<br/>StorageDead(_371)<br/>_1165 = const false<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">drop(_351)</td></tr></table>>];
    bb489__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_331)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb490__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_221)<br/>StorageDead(_206)<br/>_1166 = const false<br/>StorageDead(_36)<br/>_1167 = const false<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb491__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1096)<br/>StorageDead(_1094)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb492__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageDead(_1078)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb493__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb494__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_1005)<br/>StorageDead(_947)<br/>StorageDead(_946)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb495__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_949)<br/>StorageDead(_948)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb496__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_929)<br/>StorageDead(_926)<br/>StorageDead(_925)<br/>StorageDead(_922)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb497__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageDead(_921)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb498__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_904)<br/>StorageDead(_891)<br/>StorageDead(_890)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb499__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">_1163 = const false<br/>StorageDead(_879)<br/></td></tr><tr><td align="left">switchInt(_1164)</td></tr></table>>];
    bb500__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">_1164 = const false<br/>StorageDead(_870)<br/>_1210 = discriminant(_851)<br/></td></tr><tr><td align="left">switchInt(move _1210)</td></tr></table>>];
    bb501__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">_1162 = const false<br/>StorageDead(_851)<br/></td></tr><tr><td align="left">drop(_840)</td></tr></table>>];
    bb502__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>StorageDead(_839)<br/>StorageDead(_836)<br/>StorageDead(_834)<br/>StorageDead(_833)<br/></td></tr><tr><td align="left">drop(_832)</td></tr></table>>];
    bb503__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_832)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb504__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_775)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb505__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageDead(_748)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb506__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>StorageDead(_682)<br/>StorageDead(_681)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb507__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>StorageDead(_683)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb508__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_676)<br/>StorageDead(_671)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb509__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageDead(_655)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb510__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb511__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/>StorageDead(_620)<br/>StorageDead(_617)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb512__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_616)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb513__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb514__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb515__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left">drop(_415)</td></tr></table>>];
    bb516__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/></td></tr><tr><td align="left">drop(_405)</td></tr></table>>];
    bb517__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_404)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb518__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb519__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_386)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_377)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb520__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/></td></tr><tr><td align="left">switchInt(_1165)</td></tr></table>>];
    bb521__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">_1165 = const false<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">drop(_351)</td></tr></table>>];
    bb522__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb523__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb524__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb525__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb526__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/></td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb527__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb528__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb529__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb530__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb531__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb532__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb533__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb534__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">_1166 = const false<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">switchInt(_1167)</td></tr></table>>];
    bb535__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">_1167 = const false<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb536__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left">return</td></tr></table>>];
    bb537__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">537 (cleanup)</td></tr><tr><td align="left">drop(_1124)</td></tr></table>>];
    bb538__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">538 (cleanup)</td></tr><tr><td align="left">drop(_1096)</td></tr></table>>];
    bb539__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">539 (cleanup)</td></tr><tr><td align="left">drop(_1052)</td></tr></table>>];
    bb540__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">540 (cleanup)</td></tr><tr><td align="left">drop(_840)</td></tr></table>>];
    bb541__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">541 (cleanup)</td></tr><tr><td align="left">drop(_832)</td></tr></table>>];
    bb542__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">542 (cleanup)</td></tr><tr><td align="left">drop(_811)</td></tr></table>>];
    bb543__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">543 (cleanup)</td></tr><tr><td align="left">drop(_578)</td></tr></table>>];
    bb544__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">544 (cleanup)</td></tr><tr><td align="left">drop(_559)</td></tr></table>>];
    bb545__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">545 (cleanup)</td></tr><tr><td align="left">drop(_415)</td></tr></table>>];
    bb546__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">546 (cleanup)</td></tr><tr><td align="left">drop(_405)</td></tr></table>>];
    bb547__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">547 (cleanup)</td></tr><tr><td align="left">drop(_351)</td></tr></table>>];
    bb548__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">548 (cleanup)</td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb549__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">549 (cleanup)</td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb550__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">550 (cleanup)</td></tr><tr><td align="left">drop(_183)</td></tr></table>>];
    bb551__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">551 (cleanup)</td></tr><tr><td align="left">drop(_145)</td></tr></table>>];
    bb552__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">552 (cleanup)</td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb553__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">553 (cleanup)</td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb554__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">554 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb555__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">_1162 = const false<br/>StorageDead(_851)<br/></td></tr><tr><td align="left">drop(_840)</td></tr></table>>];
    bb556__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left">switchInt(_1162)</td></tr></table>>];
    bb557__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left">drop(((_851 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;))</td></tr></table>>];
    bb558__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left">drop(_879)</td></tr></table>>];
    bb559__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left">switchInt(_1163)</td></tr></table>>];
    bb560__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left">drop(_870)</td></tr></table>>];
    bb561__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left">switchInt(_1162)</td></tr></table>>];
    bb562__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left">drop(((_851 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;))</td></tr></table>>];
    bb563__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left">drop(_370)</td></tr></table>>];
    bb564__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb565__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left">switchInt(_1166)</td></tr></table>>];
    bb566__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb567__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">567 (cleanup)</td></tr><tr><td align="left">drop(_879)</td></tr></table>>];
    bb568__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">568 (cleanup)</td></tr><tr><td align="left">switchInt(_1163)</td></tr></table>>];
    bb569__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">569 (cleanup)</td></tr><tr><td align="left" balign="left">_1212 = discriminant(_880)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb570__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">570 (cleanup)</td></tr><tr><td align="left">drop(_870)</td></tr></table>>];
    bb571__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">571 (cleanup)</td></tr><tr><td align="left">switchInt(_1164)</td></tr></table>>];
    bb572__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">572 (cleanup)</td></tr><tr><td align="left" balign="left">_1213 = discriminant(_871)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb573__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">573 (cleanup)</td></tr><tr><td align="left">switchInt(_1162)</td></tr></table>>];
    bb574__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">574 (cleanup)</td></tr><tr><td align="left">drop(((_851 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;))</td></tr></table>>];
    bb575__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">575 (cleanup)</td></tr><tr><td align="left" balign="left">_1214 = discriminant(_851)<br/></td></tr><tr><td align="left">switchInt(move _1214)</td></tr></table>>];
    bb576__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">576 (cleanup)</td></tr><tr><td align="left" balign="left">_1215 = discriminant(_858)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb577__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">577 (cleanup)</td></tr><tr><td align="left" balign="left">_1216 = discriminant(_841)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb578__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">578 (cleanup)</td></tr><tr><td align="left" balign="left">_1217 = discriminant(_422)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb579__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">579 (cleanup)</td></tr><tr><td align="left" balign="left">_1218 = discriminant(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb580__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">580 (cleanup)</td></tr><tr><td align="left">drop(_370)</td></tr></table>>];
    bb581__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">581 (cleanup)</td></tr><tr><td align="left">switchInt(_1165)</td></tr></table>>];
    bb582__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">582 (cleanup)</td></tr><tr><td align="left" balign="left">_1219 = discriminant(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb583__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">583 (cleanup)</td></tr><tr><td align="left" balign="left">_1220 = discriminant(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb584__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">584 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb585__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">585 (cleanup)</td></tr><tr><td align="left">switchInt(_1166)</td></tr></table>>];
    bb586__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">586 (cleanup)</td></tr><tr><td align="left" balign="left">_1221 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb587__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">587 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb588__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">588 (cleanup)</td></tr><tr><td align="left">switchInt(_1167)</td></tr></table>>];
    bb589__0_562 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">589 (cleanup)</td></tr><tr><td align="left" balign="left">_1222 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_562 -> bb1__0_562 [label="success"];
    bb1__0_562 -> bb2__0_562 [label="success"];
    bb2__0_562 -> bb3__0_562 [label="return"];
    bb3__0_562 -> bb4__0_562 [label="return"];
    bb3__0_562 -> bb554__0_562 [label="unwind"];
    bb4__0_562 -> bb5__0_562 [label="0"];
    bb4__0_562 -> bb7__0_562 [label="1"];
    bb4__0_562 -> bb6__0_562 [label="otherwise"];
    bb5__0_562 -> bb9__0_562 [label="return"];
    bb5__0_562 -> bb588__0_562 [label="unwind"];
    bb7__0_562 -> bb8__0_562 [label="return"];
    bb7__0_562 -> bb589__0_562 [label="unwind"];
    bb8__0_562 -> bb535__0_562 [label=""];
    bb9__0_562 -> bb10__0_562 [label="return"];
    bb9__0_562 -> bb588__0_562 [label="unwind"];
    bb10__0_562 -> bb11__0_562 [label="0"];
    bb10__0_562 -> bb12__0_562 [label="1"];
    bb10__0_562 -> bb6__0_562 [label="otherwise"];
    bb11__0_562 -> bb14__0_562 [label="return"];
    bb11__0_562 -> bb585__0_562 [label="unwind"];
    bb12__0_562 -> bb13__0_562 [label="return"];
    bb12__0_562 -> bb586__0_562 [label="unwind"];
    bb13__0_562 -> bb534__0_562 [label=""];
    bb14__0_562 -> bb84__0_562 [label="0"];
    bb14__0_562 -> bb15__0_562 [label="otherwise"];
    bb15__0_562 -> bb16__0_562 [label="return"];
    bb15__0_562 -> bb585__0_562 [label="unwind"];
    bb16__0_562 -> bb50__0_562 [label="0"];
    bb16__0_562 -> bb17__0_562 [label="otherwise"];
    bb17__0_562 -> bb18__0_562 [label="return"];
    bb17__0_562 -> bb585__0_562 [label="unwind"];
    bb18__0_562 -> bb19__0_562 [label="return"];
    bb18__0_562 -> bb585__0_562 [label="unwind"];
    bb19__0_562 -> bb21__0_562 [label="0"];
    bb19__0_562 -> bb20__0_562 [label="otherwise"];
    bb20__0_562 -> bb22__0_562 [label="return"];
    bb20__0_562 -> bb585__0_562 [label="unwind"];
    bb21__0_562 -> bb29__0_562 [label=""];
    bb22__0_562 -> bb23__0_562 [label="return"];
    bb22__0_562 -> bb585__0_562 [label="unwind"];
    bb23__0_562 -> bb24__0_562 [label="return"];
    bb23__0_562 -> bb585__0_562 [label="unwind"];
    bb24__0_562 -> bb25__0_562 [label="return"];
    bb24__0_562 -> bb553__0_562 [label="unwind"];
    bb25__0_562 -> bb26__0_562 [label="return"];
    bb25__0_562 -> bb553__0_562 [label="unwind"];
    bb26__0_562 -> bb27__0_562 [label="return"];
    bb26__0_562 -> bb585__0_562 [label="unwind"];
    bb27__0_562 -> bb28__0_562 [label="return"];
    bb27__0_562 -> bb585__0_562 [label="unwind"];
    bb28__0_562 -> bb29__0_562 [label=""];
    bb29__0_562 -> bb30__0_562 [label="return"];
    bb29__0_562 -> bb585__0_562 [label="unwind"];
    bb30__0_562 -> bb31__0_562 [label="0"];
    bb30__0_562 -> bb32__0_562 [label="1"];
    bb30__0_562 -> bb6__0_562 [label="otherwise"];
    bb31__0_562 -> bb34__0_562 [label="return"];
    bb31__0_562 -> bb585__0_562 [label="unwind"];
    bb32__0_562 -> bb33__0_562 [label="return"];
    bb32__0_562 -> bb585__0_562 [label="unwind"];
    bb33__0_562 -> bb533__0_562 [label=""];
    bb34__0_562 -> bb35__0_562 [label="return"];
    bb34__0_562 -> bb585__0_562 [label="unwind"];
    bb35__0_562 -> bb37__0_562 [label="0"];
    bb35__0_562 -> bb36__0_562 [label="otherwise"];
    bb36__0_562 -> bb38__0_562 [label="return"];
    bb36__0_562 -> bb585__0_562 [label="unwind"];
    bb37__0_562 -> bb45__0_562 [label=""];
    bb38__0_562 -> bb39__0_562 [label="return"];
    bb38__0_562 -> bb585__0_562 [label="unwind"];
    bb39__0_562 -> bb40__0_562 [label="return"];
    bb39__0_562 -> bb585__0_562 [label="unwind"];
    bb40__0_562 -> bb41__0_562 [label="return"];
    bb40__0_562 -> bb552__0_562 [label="unwind"];
    bb41__0_562 -> bb42__0_562 [label="return"];
    bb41__0_562 -> bb552__0_562 [label="unwind"];
    bb42__0_562 -> bb43__0_562 [label="return"];
    bb42__0_562 -> bb585__0_562 [label="unwind"];
    bb43__0_562 -> bb44__0_562 [label="return"];
    bb43__0_562 -> bb585__0_562 [label="unwind"];
    bb44__0_562 -> bb45__0_562 [label=""];
    bb45__0_562 -> bb46__0_562 [label="return"];
    bb45__0_562 -> bb585__0_562 [label="unwind"];
    bb46__0_562 -> bb47__0_562 [label="0"];
    bb46__0_562 -> bb48__0_562 [label="1"];
    bb46__0_562 -> bb6__0_562 [label="otherwise"];
    bb47__0_562 -> bb83__0_562 [label=""];
    bb48__0_562 -> bb49__0_562 [label="return"];
    bb48__0_562 -> bb585__0_562 [label="unwind"];
    bb49__0_562 -> bb533__0_562 [label=""];
    bb50__0_562 -> bb51__0_562 [label="return"];
    bb50__0_562 -> bb585__0_562 [label="unwind"];
    bb51__0_562 -> bb52__0_562 [label="return"];
    bb51__0_562 -> bb585__0_562 [label="unwind"];
    bb52__0_562 -> bb54__0_562 [label="0"];
    bb52__0_562 -> bb53__0_562 [label="otherwise"];
    bb53__0_562 -> bb55__0_562 [label="return"];
    bb53__0_562 -> bb585__0_562 [label="unwind"];
    bb54__0_562 -> bb62__0_562 [label=""];
    bb55__0_562 -> bb56__0_562 [label="return"];
    bb55__0_562 -> bb585__0_562 [label="unwind"];
    bb56__0_562 -> bb57__0_562 [label="return"];
    bb56__0_562 -> bb585__0_562 [label="unwind"];
    bb57__0_562 -> bb58__0_562 [label="return"];
    bb57__0_562 -> bb551__0_562 [label="unwind"];
    bb58__0_562 -> bb59__0_562 [label="return"];
    bb58__0_562 -> bb551__0_562 [label="unwind"];
    bb59__0_562 -> bb60__0_562 [label="return"];
    bb59__0_562 -> bb585__0_562 [label="unwind"];
    bb60__0_562 -> bb61__0_562 [label="return"];
    bb60__0_562 -> bb585__0_562 [label="unwind"];
    bb61__0_562 -> bb62__0_562 [label=""];
    bb62__0_562 -> bb63__0_562 [label="return"];
    bb62__0_562 -> bb585__0_562 [label="unwind"];
    bb63__0_562 -> bb64__0_562 [label="0"];
    bb63__0_562 -> bb65__0_562 [label="1"];
    bb63__0_562 -> bb6__0_562 [label="otherwise"];
    bb64__0_562 -> bb67__0_562 [label="return"];
    bb64__0_562 -> bb585__0_562 [label="unwind"];
    bb65__0_562 -> bb66__0_562 [label="return"];
    bb65__0_562 -> bb585__0_562 [label="unwind"];
    bb66__0_562 -> bb533__0_562 [label=""];
    bb67__0_562 -> bb68__0_562 [label="return"];
    bb67__0_562 -> bb585__0_562 [label="unwind"];
    bb68__0_562 -> bb70__0_562 [label="0"];
    bb68__0_562 -> bb69__0_562 [label="otherwise"];
    bb69__0_562 -> bb71__0_562 [label="return"];
    bb69__0_562 -> bb585__0_562 [label="unwind"];
    bb70__0_562 -> bb78__0_562 [label=""];
    bb71__0_562 -> bb72__0_562 [label="return"];
    bb71__0_562 -> bb585__0_562 [label="unwind"];
    bb72__0_562 -> bb73__0_562 [label="return"];
    bb72__0_562 -> bb585__0_562 [label="unwind"];
    bb73__0_562 -> bb74__0_562 [label="return"];
    bb73__0_562 -> bb550__0_562 [label="unwind"];
    bb74__0_562 -> bb75__0_562 [label="return"];
    bb74__0_562 -> bb550__0_562 [label="unwind"];
    bb75__0_562 -> bb76__0_562 [label="return"];
    bb75__0_562 -> bb585__0_562 [label="unwind"];
    bb76__0_562 -> bb77__0_562 [label="return"];
    bb76__0_562 -> bb585__0_562 [label="unwind"];
    bb77__0_562 -> bb78__0_562 [label=""];
    bb78__0_562 -> bb79__0_562 [label="return"];
    bb78__0_562 -> bb585__0_562 [label="unwind"];
    bb79__0_562 -> bb80__0_562 [label="0"];
    bb79__0_562 -> bb81__0_562 [label="1"];
    bb79__0_562 -> bb6__0_562 [label="otherwise"];
    bb80__0_562 -> bb83__0_562 [label=""];
    bb81__0_562 -> bb82__0_562 [label="return"];
    bb81__0_562 -> bb585__0_562 [label="unwind"];
    bb82__0_562 -> bb533__0_562 [label=""];
    bb83__0_562 -> bb85__0_562 [label=""];
    bb84__0_562 -> bb85__0_562 [label=""];
    bb85__0_562 -> bb86__0_562 [label="return"];
    bb85__0_562 -> bb585__0_562 [label="unwind"];
    bb86__0_562 -> bb87__0_562 [label="return"];
    bb86__0_562 -> bb585__0_562 [label="unwind"];
    bb87__0_562 -> bb88__0_562 [label="return"];
    bb87__0_562 -> bb585__0_562 [label="unwind"];
    bb88__0_562 -> bb89__0_562 [label="return"];
    bb88__0_562 -> bb585__0_562 [label="unwind"];
    bb89__0_562 -> bb90__0_562 [label="0"];
    bb89__0_562 -> bb91__0_562 [label="1"];
    bb89__0_562 -> bb6__0_562 [label="otherwise"];
    bb90__0_562 -> bb93__0_562 [label="return"];
    bb90__0_562 -> bb585__0_562 [label="unwind"];
    bb91__0_562 -> bb92__0_562 [label="return"];
    bb91__0_562 -> bb585__0_562 [label="unwind"];
    bb92__0_562 -> bb532__0_562 [label=""];
    bb93__0_562 -> bb94__0_562 [label="return"];
    bb93__0_562 -> bb585__0_562 [label="unwind"];
    bb94__0_562 -> bb95__0_562 [label="0"];
    bb94__0_562 -> bb96__0_562 [label="1"];
    bb94__0_562 -> bb6__0_562 [label="otherwise"];
    bb95__0_562 -> bb98__0_562 [label="return"];
    bb95__0_562 -> bb585__0_562 [label="unwind"];
    bb96__0_562 -> bb97__0_562 [label="return"];
    bb96__0_562 -> bb585__0_562 [label="unwind"];
    bb97__0_562 -> bb530__0_562 [label=""];
    bb98__0_562 -> bb99__0_562 [label="return"];
    bb98__0_562 -> bb585__0_562 [label="unwind"];
    bb99__0_562 -> bb100__0_562 [label="return"];
    bb99__0_562 -> bb585__0_562 [label="unwind"];
    bb100__0_562 -> bb101__0_562 [label="0"];
    bb100__0_562 -> bb102__0_562 [label="1"];
    bb100__0_562 -> bb6__0_562 [label="otherwise"];
    bb101__0_562 -> bb104__0_562 [label="return"];
    bb101__0_562 -> bb585__0_562 [label="unwind"];
    bb102__0_562 -> bb103__0_562 [label="return"];
    bb102__0_562 -> bb585__0_562 [label="unwind"];
    bb103__0_562 -> bb530__0_562 [label=""];
    bb104__0_562 -> bb105__0_562 [label="return"];
    bb104__0_562 -> bb549__0_562 [label="unwind"];
    bb105__0_562 -> bb106__0_562 [label=""];
    bb106__0_562 -> bb107__0_562 [label="return"];
    bb106__0_562 -> bb549__0_562 [label="unwind"];
    bb107__0_562 -> bb109__0_562 [label="0"];
    bb107__0_562 -> bb108__0_562 [label="1"];
    bb107__0_562 -> bb6__0_562 [label="otherwise"];
    bb108__0_562 -> bb110__0_562 [label="return"];
    bb108__0_562 -> bb549__0_562 [label="unwind"];
    bb109__0_562 -> bb137__0_562 [label="return"];
    bb109__0_562 -> bb549__0_562 [label="unwind"];
    bb110__0_562 -> bb111__0_562 [label="return"];
    bb110__0_562 -> bb549__0_562 [label="unwind"];
    bb111__0_562 -> bb112__0_562 [label="0"];
    bb111__0_562 -> bb113__0_562 [label="1"];
    bb111__0_562 -> bb6__0_562 [label="otherwise"];
    bb112__0_562 -> bb115__0_562 [label="return"];
    bb112__0_562 -> bb548__0_562 [label="unwind"];
    bb113__0_562 -> bb114__0_562 [label="return"];
    bb113__0_562 -> bb583__0_562 [label="unwind"];
    bb114__0_562 -> bb527__0_562 [label=""];
    bb115__0_562 -> bb116__0_562 [label="return"];
    bb115__0_562 -> bb548__0_562 [label="unwind"];
    bb116__0_562 -> bb117__0_562 [label="return"];
    bb116__0_562 -> bb548__0_562 [label="unwind"];
    bb117__0_562 -> bb118__0_562 [label="return"];
    bb117__0_562 -> bb548__0_562 [label="unwind"];
    bb118__0_562 -> bb119__0_562 [label="return"];
    bb118__0_562 -> bb548__0_562 [label="unwind"];
    bb119__0_562 -> bb120__0_562 [label="0"];
    bb119__0_562 -> bb121__0_562 [label="1"];
    bb119__0_562 -> bb6__0_562 [label="otherwise"];
    bb120__0_562 -> bb123__0_562 [label="return"];
    bb120__0_562 -> bb548__0_562 [label="unwind"];
    bb121__0_562 -> bb122__0_562 [label="return"];
    bb121__0_562 -> bb548__0_562 [label="unwind"];
    bb122__0_562 -> bb526__0_562 [label=""];
    bb123__0_562 -> bb124__0_562 [label="return"];
    bb123__0_562 -> bb548__0_562 [label="unwind"];
    bb124__0_562 -> bb125__0_562 [label="return"];
    bb124__0_562 -> bb548__0_562 [label="unwind"];
    bb125__0_562 -> bb126__0_562 [label="0"];
    bb125__0_562 -> bb127__0_562 [label="1"];
    bb125__0_562 -> bb6__0_562 [label="otherwise"];
    bb126__0_562 -> bb129__0_562 [label="return"];
    bb126__0_562 -> bb548__0_562 [label="unwind"];
    bb127__0_562 -> bb128__0_562 [label="return"];
    bb127__0_562 -> bb548__0_562 [label="unwind"];
    bb128__0_562 -> bb525__0_562 [label=""];
    bb129__0_562 -> bb130__0_562 [label="return"];
    bb129__0_562 -> bb548__0_562 [label="unwind"];
    bb130__0_562 -> bb131__0_562 [label="return"];
    bb130__0_562 -> bb548__0_562 [label="unwind"];
    bb131__0_562 -> bb132__0_562 [label="0"];
    bb131__0_562 -> bb133__0_562 [label="1"];
    bb131__0_562 -> bb6__0_562 [label="otherwise"];
    bb132__0_562 -> bb135__0_562 [label="return"];
    bb132__0_562 -> bb548__0_562 [label="unwind"];
    bb133__0_562 -> bb134__0_562 [label="return"];
    bb133__0_562 -> bb548__0_562 [label="unwind"];
    bb134__0_562 -> bb525__0_562 [label=""];
    bb135__0_562 -> bb136__0_562 [label="return"];
    bb135__0_562 -> bb549__0_562 [label="unwind"];
    bb136__0_562 -> bb106__0_562 [label=""];
    bb137__0_562 -> bb138__0_562 [label="return"];
    bb137__0_562 -> bb549__0_562 [label="unwind"];
    bb138__0_562 -> bb139__0_562 [label="return"];
    bb138__0_562 -> bb549__0_562 [label="unwind"];
    bb139__0_562 -> bb140__0_562 [label="return"];
    bb139__0_562 -> bb549__0_562 [label="unwind"];
    bb140__0_562 -> bb141__0_562 [label="0"];
    bb140__0_562 -> bb142__0_562 [label="1"];
    bb140__0_562 -> bb6__0_562 [label="otherwise"];
    bb141__0_562 -> bb144__0_562 [label="success"];
    bb141__0_562 -> bb549__0_562 [label="unwind"];
    bb142__0_562 -> bb143__0_562 [label="return"];
    bb142__0_562 -> bb549__0_562 [label="unwind"];
    bb143__0_562 -> bb524__0_562 [label=""];
    bb144__0_562 -> bb145__0_562 [label="return"];
    bb144__0_562 -> bb549__0_562 [label="unwind"];
    bb145__0_562 -> bb146__0_562 [label="return"];
    bb145__0_562 -> bb549__0_562 [label="unwind"];
    bb146__0_562 -> bb147__0_562 [label="return"];
    bb146__0_562 -> bb549__0_562 [label="unwind"];
    bb147__0_562 -> bb148__0_562 [label="0"];
    bb147__0_562 -> bb149__0_562 [label="1"];
    bb147__0_562 -> bb6__0_562 [label="otherwise"];
    bb148__0_562 -> bb151__0_562 [label="success"];
    bb148__0_562 -> bb549__0_562 [label="unwind"];
    bb149__0_562 -> bb150__0_562 [label="return"];
    bb149__0_562 -> bb549__0_562 [label="unwind"];
    bb150__0_562 -> bb523__0_562 [label=""];
    bb151__0_562 -> bb152__0_562 [label="return"];
    bb151__0_562 -> bb549__0_562 [label="unwind"];
    bb152__0_562 -> bb153__0_562 [label="return"];
    bb152__0_562 -> bb549__0_562 [label="unwind"];
    bb153__0_562 -> bb154__0_562 [label="return"];
    bb153__0_562 -> bb549__0_562 [label="unwind"];
    bb154__0_562 -> bb155__0_562 [label="0"];
    bb154__0_562 -> bb156__0_562 [label="1"];
    bb154__0_562 -> bb6__0_562 [label="otherwise"];
    bb155__0_562 -> bb158__0_562 [label="return"];
    bb155__0_562 -> bb547__0_562 [label="unwind"];
    bb156__0_562 -> bb157__0_562 [label="return"];
    bb156__0_562 -> bb582__0_562 [label="unwind"];
    bb157__0_562 -> bb522__0_562 [label=""];
    bb158__0_562 -> bb159__0_562 [label="success"];
    bb158__0_562 -> bb581__0_562 [label="unwind"];
    bb159__0_562 -> bb160__0_562 [label="return"];
    bb159__0_562 -> bb581__0_562 [label="unwind"];
    bb160__0_562 -> bb161__0_562 [label="return"];
    bb160__0_562 -> bb581__0_562 [label="unwind"];
    bb161__0_562 -> bb162__0_562 [label="return"];
    bb161__0_562 -> bb581__0_562 [label="unwind"];
    bb162__0_562 -> bb163__0_562 [label="return"];
    bb162__0_562 -> bb581__0_562 [label="unwind"];
    bb163__0_562 -> bb164__0_562 [label=""];
    bb164__0_562 -> bb165__0_562 [label="return"];
    bb164__0_562 -> bb581__0_562 [label="unwind"];
    bb165__0_562 -> bb167__0_562 [label="0"];
    bb165__0_562 -> bb166__0_562 [label="1"];
    bb165__0_562 -> bb6__0_562 [label="otherwise"];
    bb166__0_562 -> bb168__0_562 [label="success"];
    bb166__0_562 -> bb581__0_562 [label="unwind"];
    bb167__0_562 -> bb231__0_562 [label=""];
    bb168__0_562 -> bb169__0_562 [label="return"];
    bb168__0_562 -> bb581__0_562 [label="unwind"];
    bb169__0_562 -> bb171__0_562 [label="0"];
    bb169__0_562 -> bb170__0_562 [label="otherwise"];
    bb170__0_562 -> bb231__0_562 [label=""];
    bb171__0_562 -> bb172__0_562 [label="0"];
    bb171__0_562 -> bb173__0_562 [label="1"];
    bb171__0_562 -> bb6__0_562 [label="otherwise"];
    bb172__0_562 -> bb211__0_562 [label="return"];
    bb172__0_562 -> bb581__0_562 [label="unwind"];
    bb173__0_562 -> bb174__0_562 [label="return"];
    bb173__0_562 -> bb581__0_562 [label="unwind"];
    bb174__0_562 -> bb175__0_562 [label="return"];
    bb174__0_562 -> bb581__0_562 [label="unwind"];
    bb175__0_562 -> bb176__0_562 [label="0"];
    bb175__0_562 -> bb177__0_562 [label="1"];
    bb175__0_562 -> bb6__0_562 [label="otherwise"];
    bb176__0_562 -> bb179__0_562 [label="return"];
    bb176__0_562 -> bb546__0_562 [label="unwind"];
    bb177__0_562 -> bb178__0_562 [label="return"];
    bb177__0_562 -> bb579__0_562 [label="unwind"];
    bb178__0_562 -> bb517__0_562 [label=""];
    bb179__0_562 -> bb180__0_562 [label="return"];
    bb179__0_562 -> bb546__0_562 [label="unwind"];
    bb180__0_562 -> bb182__0_562 [label="0"];
    bb180__0_562 -> bb181__0_562 [label="otherwise"];
    bb181__0_562 -> bb189__0_562 [label=""];
    bb182__0_562 -> bb183__0_562 [label="return"];
    bb182__0_562 -> bb546__0_562 [label="unwind"];
    bb183__0_562 -> bb184__0_562 [label="return"];
    bb183__0_562 -> bb546__0_562 [label="unwind"];
    bb184__0_562 -> bb185__0_562 [label="return"];
    bb184__0_562 -> bb546__0_562 [label="unwind"];
    bb185__0_562 -> bb186__0_562 [label="0"];
    bb185__0_562 -> bb187__0_562 [label="1"];
    bb185__0_562 -> bb6__0_562 [label="otherwise"];
    bb186__0_562 -> bb189__0_562 [label=""];
    bb187__0_562 -> bb188__0_562 [label="return"];
    bb187__0_562 -> bb578__0_562 [label="unwind"];
    bb188__0_562 -> bb516__0_562 [label=""];
    bb189__0_562 -> bb190__0_562 [label="return"];
    bb189__0_562 -> bb545__0_562 [label="unwind"];
    bb190__0_562 -> bb191__0_562 [label="return"];
    bb190__0_562 -> bb545__0_562 [label="unwind"];
    bb191__0_562 -> bb192__0_562 [label="return"];
    bb191__0_562 -> bb545__0_562 [label="unwind"];
    bb192__0_562 -> bb193__0_562 [label="return"];
    bb192__0_562 -> bb545__0_562 [label="unwind"];
    bb193__0_562 -> bb194__0_562 [label="return"];
    bb193__0_562 -> bb545__0_562 [label="unwind"];
    bb194__0_562 -> bb195__0_562 [label="return"];
    bb194__0_562 -> bb545__0_562 [label="unwind"];
    bb195__0_562 -> bb196__0_562 [label="return"];
    bb195__0_562 -> bb545__0_562 [label="unwind"];
    bb196__0_562 -> bb197__0_562 [label="return"];
    bb196__0_562 -> bb545__0_562 [label="unwind"];
    bb197__0_562 -> bb198__0_562 [label="0"];
    bb197__0_562 -> bb199__0_562 [label="1"];
    bb197__0_562 -> bb6__0_562 [label="otherwise"];
    bb198__0_562 -> bb202__0_562 [label="0"];
    bb198__0_562 -> bb201__0_562 [label="otherwise"];
    bb199__0_562 -> bb200__0_562 [label="return"];
    bb199__0_562 -> bb545__0_562 [label="unwind"];
    bb200__0_562 -> bb515__0_562 [label=""];
    bb201__0_562 -> bb203__0_562 [label="return"];
    bb201__0_562 -> bb545__0_562 [label="unwind"];
    bb202__0_562 -> bb208__0_562 [label=""];
    bb203__0_562 -> bb204__0_562 [label="return"];
    bb203__0_562 -> bb545__0_562 [label="unwind"];
    bb204__0_562 -> bb205__0_562 [label="0"];
    bb204__0_562 -> bb206__0_562 [label="1"];
    bb204__0_562 -> bb6__0_562 [label="otherwise"];
    bb205__0_562 -> bb208__0_562 [label=""];
    bb206__0_562 -> bb207__0_562 [label="return"];
    bb206__0_562 -> bb545__0_562 [label="unwind"];
    bb207__0_562 -> bb515__0_562 [label=""];
    bb208__0_562 -> bb209__0_562 [label="return"];
    bb208__0_562 -> bb546__0_562 [label="unwind"];
    bb209__0_562 -> bb210__0_562 [label="return"];
    bb209__0_562 -> bb581__0_562 [label="unwind"];
    bb210__0_562 -> bb220__0_562 [label=""];
    bb211__0_562 -> bb212__0_562 [label="return"];
    bb211__0_562 -> bb581__0_562 [label="unwind"];
    bb212__0_562 -> bb213__0_562 [label="return"];
    bb212__0_562 -> bb581__0_562 [label="unwind"];
    bb213__0_562 -> bb214__0_562 [label="return"];
    bb213__0_562 -> bb581__0_562 [label="unwind"];
    bb214__0_562 -> bb215__0_562 [label="return"];
    bb214__0_562 -> bb581__0_562 [label="unwind"];
    bb215__0_562 -> bb216__0_562 [label="return"];
    bb215__0_562 -> bb581__0_562 [label="unwind"];
    bb216__0_562 -> bb217__0_562 [label="0"];
    bb216__0_562 -> bb218__0_562 [label="1"];
    bb216__0_562 -> bb6__0_562 [label="otherwise"];
    bb217__0_562 -> bb220__0_562 [label=""];
    bb218__0_562 -> bb219__0_562 [label="return"];
    bb218__0_562 -> bb581__0_562 [label="unwind"];
    bb219__0_562 -> bb518__0_562 [label=""];
    bb220__0_562 -> bb221__0_562 [label="return"];
    bb220__0_562 -> bb581__0_562 [label="unwind"];
    bb221__0_562 -> bb222__0_562 [label="return"];
    bb221__0_562 -> bb581__0_562 [label="unwind"];
    bb222__0_562 -> bb223__0_562 [label="0"];
    bb222__0_562 -> bb224__0_562 [label="1"];
    bb222__0_562 -> bb6__0_562 [label="otherwise"];
    bb223__0_562 -> bb226__0_562 [label="return"];
    bb223__0_562 -> bb581__0_562 [label="unwind"];
    bb224__0_562 -> bb225__0_562 [label="return"];
    bb224__0_562 -> bb581__0_562 [label="unwind"];
    bb225__0_562 -> bb514__0_562 [label=""];
    bb226__0_562 -> bb227__0_562 [label="return"];
    bb226__0_562 -> bb581__0_562 [label="unwind"];
    bb227__0_562 -> bb228__0_562 [label="0"];
    bb227__0_562 -> bb229__0_562 [label="1"];
    bb227__0_562 -> bb6__0_562 [label="otherwise"];
    bb228__0_562 -> bb164__0_562 [label=""];
    bb229__0_562 -> bb230__0_562 [label="return"];
    bb229__0_562 -> bb581__0_562 [label="unwind"];
    bb230__0_562 -> bb514__0_562 [label=""];
    bb231__0_562 -> bb233__0_562 [label="0"];
    bb231__0_562 -> bb232__0_562 [label="otherwise"];
    bb232__0_562 -> bb247__0_562 [label=""];
    bb233__0_562 -> bb234__0_562 [label="return"];
    bb233__0_562 -> bb581__0_562 [label="unwind"];
    bb234__0_562 -> bb235__0_562 [label="return"];
    bb234__0_562 -> bb581__0_562 [label="unwind"];
    bb235__0_562 -> bb236__0_562 [label="return"];
    bb235__0_562 -> bb581__0_562 [label="unwind"];
    bb236__0_562 -> bb237__0_562 [label="return"];
    bb236__0_562 -> bb544__0_562 [label="unwind"];
    bb237__0_562 -> bb238__0_562 [label="return"];
    bb237__0_562 -> bb544__0_562 [label="unwind"];
    bb238__0_562 -> bb239__0_562 [label="return"];
    bb238__0_562 -> bb581__0_562 [label="unwind"];
    bb239__0_562 -> bb240__0_562 [label="return"];
    bb239__0_562 -> bb581__0_562 [label="unwind"];
    bb240__0_562 -> bb241__0_562 [label="return"];
    bb240__0_562 -> bb581__0_562 [label="unwind"];
    bb241__0_562 -> bb242__0_562 [label="return"];
    bb241__0_562 -> bb581__0_562 [label="unwind"];
    bb242__0_562 -> bb243__0_562 [label="return"];
    bb242__0_562 -> bb581__0_562 [label="unwind"];
    bb243__0_562 -> bb244__0_562 [label="return"];
    bb243__0_562 -> bb543__0_562 [label="unwind"];
    bb244__0_562 -> bb245__0_562 [label="return"];
    bb244__0_562 -> bb543__0_562 [label="unwind"];
    bb245__0_562 -> bb246__0_562 [label="return"];
    bb245__0_562 -> bb581__0_562 [label="unwind"];
    bb246__0_562 -> bb247__0_562 [label=""];
    bb247__0_562 -> bb248__0_562 [label="return"];
    bb247__0_562 -> bb581__0_562 [label="unwind"];
    bb248__0_562 -> bb249__0_562 [label="0"];
    bb248__0_562 -> bb250__0_562 [label="1"];
    bb248__0_562 -> bb6__0_562 [label="otherwise"];
    bb249__0_562 -> bb252__0_562 [label="return"];
    bb249__0_562 -> bb581__0_562 [label="unwind"];
    bb250__0_562 -> bb251__0_562 [label="return"];
    bb250__0_562 -> bb581__0_562 [label="unwind"];
    bb251__0_562 -> bb520__0_562 [label=""];
    bb252__0_562 -> bb253__0_562 [label="return"];
    bb252__0_562 -> bb581__0_562 [label="unwind"];
    bb253__0_562 -> bb254__0_562 [label="return"];
    bb253__0_562 -> bb581__0_562 [label="unwind"];
    bb254__0_562 -> bb255__0_562 [label="return"];
    bb254__0_562 -> bb581__0_562 [label="unwind"];
    bb255__0_562 -> bb256__0_562 [label="0"];
    bb255__0_562 -> bb257__0_562 [label="1"];
    bb255__0_562 -> bb6__0_562 [label="otherwise"];
    bb256__0_562 -> bb259__0_562 [label="return"];
    bb256__0_562 -> bb581__0_562 [label="unwind"];
    bb257__0_562 -> bb258__0_562 [label="return"];
    bb257__0_562 -> bb581__0_562 [label="unwind"];
    bb258__0_562 -> bb513__0_562 [label=""];
    bb259__0_562 -> bb260__0_562 [label="return"];
    bb259__0_562 -> bb581__0_562 [label="unwind"];
    bb260__0_562 -> bb261__0_562 [label="0"];
    bb260__0_562 -> bb262__0_562 [label="1"];
    bb260__0_562 -> bb6__0_562 [label="otherwise"];
    bb261__0_562 -> bb264__0_562 [label="return"];
    bb261__0_562 -> bb581__0_562 [label="unwind"];
    bb262__0_562 -> bb263__0_562 [label="return"];
    bb262__0_562 -> bb581__0_562 [label="unwind"];
    bb263__0_562 -> bb511__0_562 [label=""];
    bb264__0_562 -> bb265__0_562 [label="return"];
    bb264__0_562 -> bb581__0_562 [label="unwind"];
    bb265__0_562 -> bb266__0_562 [label="return"];
    bb265__0_562 -> bb581__0_562 [label="unwind"];
    bb266__0_562 -> bb267__0_562 [label="0"];
    bb266__0_562 -> bb268__0_562 [label="1"];
    bb266__0_562 -> bb6__0_562 [label="otherwise"];
    bb267__0_562 -> bb270__0_562 [label="return"];
    bb267__0_562 -> bb581__0_562 [label="unwind"];
    bb268__0_562 -> bb269__0_562 [label="return"];
    bb268__0_562 -> bb581__0_562 [label="unwind"];
    bb269__0_562 -> bb511__0_562 [label=""];
    bb270__0_562 -> bb271__0_562 [label="return"];
    bb270__0_562 -> bb581__0_562 [label="unwind"];
    bb271__0_562 -> bb272__0_562 [label="return"];
    bb271__0_562 -> bb581__0_562 [label="unwind"];
    bb272__0_562 -> bb273__0_562 [label="return"];
    bb272__0_562 -> bb581__0_562 [label="unwind"];
    bb273__0_562 -> bb274__0_562 [label="0"];
    bb273__0_562 -> bb275__0_562 [label="1"];
    bb273__0_562 -> bb6__0_562 [label="otherwise"];
    bb274__0_562 -> bb277__0_562 [label="return"];
    bb274__0_562 -> bb581__0_562 [label="unwind"];
    bb275__0_562 -> bb276__0_562 [label="return"];
    bb275__0_562 -> bb581__0_562 [label="unwind"];
    bb276__0_562 -> bb510__0_562 [label=""];
    bb277__0_562 -> bb278__0_562 [label="return"];
    bb277__0_562 -> bb581__0_562 [label="unwind"];
    bb278__0_562 -> bb279__0_562 [label="return"];
    bb278__0_562 -> bb581__0_562 [label="unwind"];
    bb279__0_562 -> bb280__0_562 [label="return"];
    bb279__0_562 -> bb581__0_562 [label="unwind"];
    bb280__0_562 -> bb281__0_562 [label="0"];
    bb280__0_562 -> bb282__0_562 [label="1"];
    bb280__0_562 -> bb6__0_562 [label="otherwise"];
    bb281__0_562 -> bb284__0_562 [label="return"];
    bb281__0_562 -> bb581__0_562 [label="unwind"];
    bb282__0_562 -> bb283__0_562 [label="return"];
    bb282__0_562 -> bb581__0_562 [label="unwind"];
    bb283__0_562 -> bb509__0_562 [label=""];
    bb284__0_562 -> bb285__0_562 [label="return"];
    bb284__0_562 -> bb581__0_562 [label="unwind"];
    bb285__0_562 -> bb286__0_562 [label="return"];
    bb285__0_562 -> bb581__0_562 [label="unwind"];
    bb286__0_562 -> bb287__0_562 [label="return"];
    bb286__0_562 -> bb581__0_562 [label="unwind"];
    bb287__0_562 -> bb288__0_562 [label="return"];
    bb287__0_562 -> bb581__0_562 [label="unwind"];
    bb288__0_562 -> bb297__0_562 [label="0"];
    bb288__0_562 -> bb289__0_562 [label="otherwise"];
    bb289__0_562 -> bb290__0_562 [label="return"];
    bb289__0_562 -> bb581__0_562 [label="unwind"];
    bb290__0_562 -> bb291__0_562 [label="return"];
    bb290__0_562 -> bb581__0_562 [label="unwind"];
    bb291__0_562 -> bb292__0_562 [label="return"];
    bb291__0_562 -> bb581__0_562 [label="unwind"];
    bb292__0_562 -> bb293__0_562 [label="return"];
    bb292__0_562 -> bb581__0_562 [label="unwind"];
    bb293__0_562 -> bb294__0_562 [label="0"];
    bb293__0_562 -> bb295__0_562 [label="1"];
    bb293__0_562 -> bb6__0_562 [label="otherwise"];
    bb294__0_562 -> bb305__0_562 [label=""];
    bb295__0_562 -> bb296__0_562 [label="return"];
    bb295__0_562 -> bb581__0_562 [label="unwind"];
    bb296__0_562 -> bb507__0_562 [label=""];
    bb297__0_562 -> bb298__0_562 [label="return"];
    bb297__0_562 -> bb581__0_562 [label="unwind"];
    bb298__0_562 -> bb299__0_562 [label="return"];
    bb298__0_562 -> bb581__0_562 [label="unwind"];
    bb299__0_562 -> bb300__0_562 [label="return"];
    bb299__0_562 -> bb581__0_562 [label="unwind"];
    bb300__0_562 -> bb301__0_562 [label="return"];
    bb300__0_562 -> bb581__0_562 [label="unwind"];
    bb301__0_562 -> bb302__0_562 [label="0"];
    bb301__0_562 -> bb303__0_562 [label="1"];
    bb301__0_562 -> bb6__0_562 [label="otherwise"];
    bb302__0_562 -> bb305__0_562 [label=""];
    bb303__0_562 -> bb304__0_562 [label="return"];
    bb303__0_562 -> bb581__0_562 [label="unwind"];
    bb304__0_562 -> bb507__0_562 [label=""];
    bb305__0_562 -> bb306__0_562 [label="return"];
    bb305__0_562 -> bb581__0_562 [label="unwind"];
    bb306__0_562 -> bb307__0_562 [label="return"];
    bb306__0_562 -> bb581__0_562 [label="unwind"];
    bb307__0_562 -> bb308__0_562 [label="return"];
    bb307__0_562 -> bb581__0_562 [label="unwind"];
    bb308__0_562 -> bb309__0_562 [label="return"];
    bb308__0_562 -> bb581__0_562 [label="unwind"];
    bb309__0_562 -> bb310__0_562 [label="return"];
    bb309__0_562 -> bb581__0_562 [label="unwind"];
    bb310__0_562 -> bb311__0_562 [label="0"];
    bb310__0_562 -> bb312__0_562 [label="1"];
    bb310__0_562 -> bb6__0_562 [label="otherwise"];
    bb311__0_562 -> bb314__0_562 [label="return"];
    bb311__0_562 -> bb581__0_562 [label="unwind"];
    bb312__0_562 -> bb313__0_562 [label="return"];
    bb312__0_562 -> bb581__0_562 [label="unwind"];
    bb313__0_562 -> bb505__0_562 [label=""];
    bb314__0_562 -> bb315__0_562 [label="return"];
    bb314__0_562 -> bb581__0_562 [label="unwind"];
    bb315__0_562 -> bb316__0_562 [label="0"];
    bb315__0_562 -> bb317__0_562 [label="1"];
    bb315__0_562 -> bb6__0_562 [label="otherwise"];
    bb316__0_562 -> bb319__0_562 [label="return"];
    bb316__0_562 -> bb581__0_562 [label="unwind"];
    bb317__0_562 -> bb318__0_562 [label="return"];
    bb317__0_562 -> bb581__0_562 [label="unwind"];
    bb318__0_562 -> bb505__0_562 [label=""];
    bb319__0_562 -> bb320__0_562 [label="return"];
    bb319__0_562 -> bb581__0_562 [label="unwind"];
    bb320__0_562 -> bb324__0_562 [label="0"];
    bb320__0_562 -> bb321__0_562 [label="otherwise"];
    bb321__0_562 -> bb324__0_562 [label="0"];
    bb321__0_562 -> bb322__0_562 [label="otherwise"];
    bb322__0_562 -> bb323__0_562 [label="return"];
    bb322__0_562 -> bb581__0_562 [label="unwind"];
    bb323__0_562 -> bb325__0_562 [label=""];
    bb324__0_562 -> bb325__0_562 [label=""];
    bb325__0_562 -> bb326__0_562 [label="return"];
    bb325__0_562 -> bb581__0_562 [label="unwind"];
    bb326__0_562 -> bb327__0_562 [label="return"];
    bb326__0_562 -> bb581__0_562 [label="unwind"];
    bb327__0_562 -> bb328__0_562 [label="0"];
    bb327__0_562 -> bb329__0_562 [label="1"];
    bb327__0_562 -> bb6__0_562 [label="otherwise"];
    bb328__0_562 -> bb331__0_562 [label="return"];
    bb328__0_562 -> bb581__0_562 [label="unwind"];
    bb329__0_562 -> bb330__0_562 [label="return"];
    bb329__0_562 -> bb581__0_562 [label="unwind"];
    bb330__0_562 -> bb504__0_562 [label=""];
    bb331__0_562 -> bb332__0_562 [label="return"];
    bb331__0_562 -> bb581__0_562 [label="unwind"];
    bb332__0_562 -> bb333__0_562 [label="0"];
    bb332__0_562 -> bb334__0_562 [label="1"];
    bb332__0_562 -> bb6__0_562 [label="otherwise"];
    bb333__0_562 -> bb336__0_562 [label="return"];
    bb333__0_562 -> bb581__0_562 [label="unwind"];
    bb334__0_562 -> bb335__0_562 [label="return"];
    bb334__0_562 -> bb581__0_562 [label="unwind"];
    bb335__0_562 -> bb504__0_562 [label=""];
    bb336__0_562 -> bb338__0_562 [label="0"];
    bb336__0_562 -> bb337__0_562 [label="otherwise"];
    bb337__0_562 -> bb346__0_562 [label="return"];
    bb337__0_562 -> bb581__0_562 [label="unwind"];
    bb338__0_562 -> bb339__0_562 [label="return"];
    bb338__0_562 -> bb581__0_562 [label="unwind"];
    bb339__0_562 -> bb340__0_562 [label="return"];
    bb339__0_562 -> bb581__0_562 [label="unwind"];
    bb340__0_562 -> bb341__0_562 [label="return"];
    bb340__0_562 -> bb581__0_562 [label="unwind"];
    bb341__0_562 -> bb342__0_562 [label="return"];
    bb341__0_562 -> bb581__0_562 [label="unwind"];
    bb342__0_562 -> bb343__0_562 [label="return"];
    bb342__0_562 -> bb542__0_562 [label="unwind"];
    bb343__0_562 -> bb344__0_562 [label="return"];
    bb343__0_562 -> bb542__0_562 [label="unwind"];
    bb344__0_562 -> bb345__0_562 [label="return"];
    bb344__0_562 -> bb581__0_562 [label="unwind"];
    bb345__0_562 -> bb504__0_562 [label=""];
    bb346__0_562 -> bb347__0_562 [label=""];
    bb347__0_562 -> bb348__0_562 [label="return"];
    bb347__0_562 -> bb541__0_562 [label="unwind"];
    bb348__0_562 -> bb350__0_562 [label="0"];
    bb348__0_562 -> bb349__0_562 [label="1"];
    bb348__0_562 -> bb6__0_562 [label="otherwise"];
    bb349__0_562 -> bb351__0_562 [label="return"];
    bb349__0_562 -> bb541__0_562 [label="unwind"];
    bb350__0_562 -> bb488__0_562 [label="return"];
    bb350__0_562 -> bb581__0_562 [label="unwind"];
    bb351__0_562 -> bb352__0_562 [label="return"];
    bb351__0_562 -> bb541__0_562 [label="unwind"];
    bb352__0_562 -> bb353__0_562 [label="0"];
    bb352__0_562 -> bb354__0_562 [label="1"];
    bb352__0_562 -> bb6__0_562 [label="otherwise"];
    bb353__0_562 -> bb356__0_562 [label="return"];
    bb353__0_562 -> bb540__0_562 [label="unwind"];
    bb354__0_562 -> bb355__0_562 [label="return"];
    bb354__0_562 -> bb577__0_562 [label="unwind"];
    bb355__0_562 -> bb502__0_562 [label=""];
    bb356__0_562 -> bb357__0_562 [label="return"];
    bb356__0_562 -> bb540__0_562 [label="unwind"];
    bb357__0_562 -> bb359__0_562 [label="0"];
    bb357__0_562 -> bb358__0_562 [label="otherwise"];
    bb358__0_562 -> bb366__0_562 [label=""];
    bb359__0_562 -> bb360__0_562 [label="return"];
    bb359__0_562 -> bb540__0_562 [label="unwind"];
    bb360__0_562 -> bb361__0_562 [label="return"];
    bb360__0_562 -> bb540__0_562 [label="unwind"];
    bb361__0_562 -> bb362__0_562 [label="return"];
    bb361__0_562 -> bb540__0_562 [label="unwind"];
    bb362__0_562 -> bb363__0_562 [label="0"];
    bb362__0_562 -> bb364__0_562 [label="1"];
    bb362__0_562 -> bb6__0_562 [label="otherwise"];
    bb363__0_562 -> bb366__0_562 [label=""];
    bb364__0_562 -> bb365__0_562 [label="return"];
    bb364__0_562 -> bb576__0_562 [label="unwind"];
    bb365__0_562 -> bb501__0_562 [label=""];
    bb366__0_562 -> bb367__0_562 [label="return"];
    bb366__0_562 -> bb575__0_562 [label="unwind"];
    bb367__0_562 -> bb368__0_562 [label="return"];
    bb367__0_562 -> bb575__0_562 [label="unwind"];
    bb368__0_562 -> bb369__0_562 [label="0"];
    bb368__0_562 -> bb370__0_562 [label="1"];
    bb368__0_562 -> bb6__0_562 [label="otherwise"];
    bb369__0_562 -> bb372__0_562 [label="return"];
    bb369__0_562 -> bb571__0_562 [label="unwind"];
    bb370__0_562 -> bb371__0_562 [label="return"];
    bb370__0_562 -> bb572__0_562 [label="unwind"];
    bb371__0_562 -> bb500__0_562 [label=""];
    bb372__0_562 -> bb373__0_562 [label="return"];
    bb372__0_562 -> bb571__0_562 [label="unwind"];
    bb373__0_562 -> bb374__0_562 [label="0"];
    bb373__0_562 -> bb375__0_562 [label="1"];
    bb373__0_562 -> bb6__0_562 [label="otherwise"];
    bb374__0_562 -> bb377__0_562 [label="return"];
    bb374__0_562 -> bb568__0_562 [label="unwind"];
    bb375__0_562 -> bb376__0_562 [label="return"];
    bb375__0_562 -> bb569__0_562 [label="unwind"];
    bb376__0_562 -> bb499__0_562 [label=""];
    bb377__0_562 -> bb378__0_562 [label="return"];
    bb377__0_562 -> bb568__0_562 [label="unwind"];
    bb378__0_562 -> bb379__0_562 [label="return"];
    bb378__0_562 -> bb568__0_562 [label="unwind"];
    bb379__0_562 -> bb380__0_562 [label="0"];
    bb379__0_562 -> bb381__0_562 [label="1"];
    bb379__0_562 -> bb6__0_562 [label="otherwise"];
    bb380__0_562 -> bb383__0_562 [label="return"];
    bb380__0_562 -> bb568__0_562 [label="unwind"];
    bb381__0_562 -> bb382__0_562 [label="return"];
    bb381__0_562 -> bb568__0_562 [label="unwind"];
    bb382__0_562 -> bb559__0_562 [label=""];
    bb383__0_562 -> bb384__0_562 [label="return"];
    bb383__0_562 -> bb568__0_562 [label="unwind"];
    bb384__0_562 -> bb385__0_562 [label="return"];
    bb384__0_562 -> bb568__0_562 [label="unwind"];
    bb385__0_562 -> bb386__0_562 [label="return"];
    bb385__0_562 -> bb568__0_562 [label="unwind"];
    bb386__0_562 -> bb387__0_562 [label="return"];
    bb386__0_562 -> bb568__0_562 [label="unwind"];
    bb387__0_562 -> bb388__0_562 [label="0"];
    bb387__0_562 -> bb389__0_562 [label="1"];
    bb387__0_562 -> bb6__0_562 [label="otherwise"];
    bb388__0_562 -> bb391__0_562 [label="return"];
    bb388__0_562 -> bb568__0_562 [label="unwind"];
    bb389__0_562 -> bb390__0_562 [label="return"];
    bb389__0_562 -> bb568__0_562 [label="unwind"];
    bb390__0_562 -> bb498__0_562 [label=""];
    bb391__0_562 -> bb392__0_562 [label="return"];
    bb391__0_562 -> bb568__0_562 [label="unwind"];
    bb392__0_562 -> bb393__0_562 [label="return"];
    bb392__0_562 -> bb568__0_562 [label="unwind"];
    bb393__0_562 -> bb394__0_562 [label="0"];
    bb393__0_562 -> bb395__0_562 [label="1"];
    bb393__0_562 -> bb6__0_562 [label="otherwise"];
    bb394__0_562 -> bb397__0_562 [label="return"];
    bb394__0_562 -> bb568__0_562 [label="unwind"];
    bb395__0_562 -> bb396__0_562 [label="return"];
    bb395__0_562 -> bb568__0_562 [label="unwind"];
    bb396__0_562 -> bb496__0_562 [label=""];
    bb397__0_562 -> bb398__0_562 [label="return"];
    bb397__0_562 -> bb568__0_562 [label="unwind"];
    bb398__0_562 -> bb399__0_562 [label="return"];
    bb398__0_562 -> bb568__0_562 [label="unwind"];
    bb399__0_562 -> bb400__0_562 [label="0"];
    bb399__0_562 -> bb401__0_562 [label="1"];
    bb399__0_562 -> bb6__0_562 [label="otherwise"];
    bb400__0_562 -> bb403__0_562 [label="return"];
    bb400__0_562 -> bb568__0_562 [label="unwind"];
    bb401__0_562 -> bb402__0_562 [label="return"];
    bb401__0_562 -> bb568__0_562 [label="unwind"];
    bb402__0_562 -> bb496__0_562 [label=""];
    bb403__0_562 -> bb412__0_562 [label="0"];
    bb403__0_562 -> bb404__0_562 [label="otherwise"];
    bb404__0_562 -> bb405__0_562 [label="return"];
    bb404__0_562 -> bb568__0_562 [label="unwind"];
    bb405__0_562 -> bb406__0_562 [label="return"];
    bb405__0_562 -> bb568__0_562 [label="unwind"];
    bb406__0_562 -> bb407__0_562 [label="return"];
    bb406__0_562 -> bb568__0_562 [label="unwind"];
    bb407__0_562 -> bb408__0_562 [label="return"];
    bb407__0_562 -> bb568__0_562 [label="unwind"];
    bb408__0_562 -> bb409__0_562 [label="0"];
    bb408__0_562 -> bb410__0_562 [label="1"];
    bb408__0_562 -> bb6__0_562 [label="otherwise"];
    bb409__0_562 -> bb420__0_562 [label=""];
    bb410__0_562 -> bb411__0_562 [label="return"];
    bb410__0_562 -> bb568__0_562 [label="unwind"];
    bb411__0_562 -> bb495__0_562 [label=""];
    bb412__0_562 -> bb413__0_562 [label="return"];
    bb412__0_562 -> bb568__0_562 [label="unwind"];
    bb413__0_562 -> bb414__0_562 [label="return"];
    bb413__0_562 -> bb568__0_562 [label="unwind"];
    bb414__0_562 -> bb415__0_562 [label="return"];
    bb414__0_562 -> bb568__0_562 [label="unwind"];
    bb415__0_562 -> bb416__0_562 [label="return"];
    bb415__0_562 -> bb568__0_562 [label="unwind"];
    bb416__0_562 -> bb417__0_562 [label="0"];
    bb416__0_562 -> bb418__0_562 [label="1"];
    bb416__0_562 -> bb6__0_562 [label="otherwise"];
    bb417__0_562 -> bb420__0_562 [label=""];
    bb418__0_562 -> bb419__0_562 [label="return"];
    bb418__0_562 -> bb568__0_562 [label="unwind"];
    bb419__0_562 -> bb495__0_562 [label=""];
    bb420__0_562 -> bb421__0_562 [label="return"];
    bb420__0_562 -> bb568__0_562 [label="unwind"];
    bb421__0_562 -> bb422__0_562 [label="return"];
    bb421__0_562 -> bb568__0_562 [label="unwind"];
    bb422__0_562 -> bb423__0_562 [label="return"];
    bb422__0_562 -> bb568__0_562 [label="unwind"];
    bb423__0_562 -> bb424__0_562 [label="return"];
    bb423__0_562 -> bb568__0_562 [label="unwind"];
    bb424__0_562 -> bb425__0_562 [label="return"];
    bb424__0_562 -> bb568__0_562 [label="unwind"];
    bb425__0_562 -> bb426__0_562 [label="0"];
    bb425__0_562 -> bb427__0_562 [label="1"];
    bb425__0_562 -> bb6__0_562 [label="otherwise"];
    bb426__0_562 -> bb429__0_562 [label="return"];
    bb426__0_562 -> bb568__0_562 [label="unwind"];
    bb427__0_562 -> bb428__0_562 [label="return"];
    bb427__0_562 -> bb568__0_562 [label="unwind"];
    bb428__0_562 -> bb493__0_562 [label=""];
    bb429__0_562 -> bb430__0_562 [label="return"];
    bb429__0_562 -> bb568__0_562 [label="unwind"];
    bb430__0_562 -> bb431__0_562 [label="0"];
    bb430__0_562 -> bb432__0_562 [label="1"];
    bb430__0_562 -> bb6__0_562 [label="otherwise"];
    bb431__0_562 -> bb434__0_562 [label="return"];
    bb431__0_562 -> bb568__0_562 [label="unwind"];
    bb432__0_562 -> bb433__0_562 [label="return"];
    bb432__0_562 -> bb568__0_562 [label="unwind"];
    bb433__0_562 -> bb493__0_562 [label=""];
    bb434__0_562 -> bb435__0_562 [label="return"];
    bb434__0_562 -> bb568__0_562 [label="unwind"];
    bb435__0_562 -> bb436__0_562 [label="return"];
    bb435__0_562 -> bb568__0_562 [label="unwind"];
    bb436__0_562 -> bb457__0_562 [label="0"];
    bb436__0_562 -> bb437__0_562 [label="otherwise"];
    bb437__0_562 -> bb439__0_562 [label="0"];
    bb437__0_562 -> bb438__0_562 [label="otherwise"];
    bb438__0_562 -> bb439__0_562 [label="0"];
    bb438__0_562 -> bb440__0_562 [label="otherwise"];
    bb439__0_562 -> bb448__0_562 [label=""];
    bb440__0_562 -> bb441__0_562 [label="return"];
    bb440__0_562 -> bb568__0_562 [label="unwind"];
    bb441__0_562 -> bb442__0_562 [label="return"];
    bb441__0_562 -> bb568__0_562 [label="unwind"];
    bb442__0_562 -> bb443__0_562 [label="return"];
    bb442__0_562 -> bb568__0_562 [label="unwind"];
    bb443__0_562 -> bb444__0_562 [label="return"];
    bb443__0_562 -> bb539__0_562 [label="unwind"];
    bb444__0_562 -> bb445__0_562 [label="return"];
    bb444__0_562 -> bb539__0_562 [label="unwind"];
    bb445__0_562 -> bb446__0_562 [label="return"];
    bb445__0_562 -> bb568__0_562 [label="unwind"];
    bb446__0_562 -> bb447__0_562 [label="return"];
    bb446__0_562 -> bb568__0_562 [label="unwind"];
    bb447__0_562 -> bb448__0_562 [label=""];
    bb448__0_562 -> bb449__0_562 [label="return"];
    bb448__0_562 -> bb568__0_562 [label="unwind"];
    bb449__0_562 -> bb450__0_562 [label="0"];
    bb449__0_562 -> bb451__0_562 [label="1"];
    bb449__0_562 -> bb6__0_562 [label="otherwise"];
    bb450__0_562 -> bb454__0_562 [label="0"];
    bb450__0_562 -> bb453__0_562 [label="otherwise"];
    bb451__0_562 -> bb452__0_562 [label="return"];
    bb451__0_562 -> bb568__0_562 [label="unwind"];
    bb452__0_562 -> bb494__0_562 [label=""];
    bb453__0_562 -> bb455__0_562 [label="return"];
    bb453__0_562 -> bb568__0_562 [label="unwind"];
    bb454__0_562 -> bb456__0_562 [label=""];
    bb455__0_562 -> bb456__0_562 [label=""];
    bb456__0_562 -> bb458__0_562 [label=""];
    bb457__0_562 -> bb458__0_562 [label=""];
    bb458__0_562 -> bb459__0_562 [label="return"];
    bb458__0_562 -> bb568__0_562 [label="unwind"];
    bb459__0_562 -> bb460__0_562 [label="return"];
    bb459__0_562 -> bb568__0_562 [label="unwind"];
    bb460__0_562 -> bb461__0_562 [label="return"];
    bb460__0_562 -> bb568__0_562 [label="unwind"];
    bb461__0_562 -> bb462__0_562 [label="0"];
    bb461__0_562 -> bb463__0_562 [label="1"];
    bb461__0_562 -> bb6__0_562 [label="otherwise"];
    bb462__0_562 -> bb466__0_562 [label="1"];
    bb462__0_562 -> bb465__0_562 [label="otherwise"];
    bb463__0_562 -> bb464__0_562 [label="return"];
    bb463__0_562 -> bb568__0_562 [label="unwind"];
    bb464__0_562 -> bb492__0_562 [label=""];
    bb465__0_562 -> bb475__0_562 [label=""];
    bb466__0_562 -> bb467__0_562 [label="return"];
    bb466__0_562 -> bb538__0_562 [label="unwind"];
    bb467__0_562 -> bb468__0_562 [label="return"];
    bb467__0_562 -> bb538__0_562 [label="unwind"];
    bb468__0_562 -> bb469__0_562 [label="return"];
    bb468__0_562 -> bb538__0_562 [label="unwind"];
    bb469__0_562 -> bb470__0_562 [label="return"];
    bb469__0_562 -> bb538__0_562 [label="unwind"];
    bb470__0_562 -> bb471__0_562 [label="0"];
    bb470__0_562 -> bb472__0_562 [label="1"];
    bb470__0_562 -> bb6__0_562 [label="otherwise"];
    bb471__0_562 -> bb474__0_562 [label="return"];
    bb471__0_562 -> bb568__0_562 [label="unwind"];
    bb472__0_562 -> bb473__0_562 [label="return"];
    bb472__0_562 -> bb538__0_562 [label="unwind"];
    bb473__0_562 -> bb491__0_562 [label="return"];
    bb473__0_562 -> bb568__0_562 [label="unwind"];
    bb474__0_562 -> bb475__0_562 [label=""];
    bb475__0_562 -> bb476__0_562 [label="return"];
    bb475__0_562 -> bb568__0_562 [label="unwind"];
    bb476__0_562 -> bb478__0_562 [label="0"];
    bb476__0_562 -> bb477__0_562 [label="otherwise"];
    bb477__0_562 -> bb556__0_562 [label="1"];
    bb477__0_562 -> bb555__0_562 [label="otherwise"];
    bb478__0_562 -> bb479__0_562 [label="return"];
    bb478__0_562 -> bb568__0_562 [label="unwind"];
    bb479__0_562 -> bb480__0_562 [label="return"];
    bb479__0_562 -> bb568__0_562 [label="unwind"];
    bb480__0_562 -> bb481__0_562 [label="return"];
    bb480__0_562 -> bb568__0_562 [label="unwind"];
    bb481__0_562 -> bb482__0_562 [label="return"];
    bb481__0_562 -> bb568__0_562 [label="unwind"];
    bb482__0_562 -> bb483__0_562 [label="return"];
    bb482__0_562 -> bb568__0_562 [label="unwind"];
    bb483__0_562 -> bb484__0_562 [label="return"];
    bb483__0_562 -> bb537__0_562 [label="unwind"];
    bb484__0_562 -> bb485__0_562 [label="return"];
    bb484__0_562 -> bb537__0_562 [label="unwind"];
    bb485__0_562 -> bb486__0_562 [label="return"];
    bb485__0_562 -> bb568__0_562 [label="unwind"];
    bb486__0_562 -> bb492__0_562 [label=""];
    bb487__0_562 -> bb347__0_562 [label=""];
    bb488__0_562 -> bb489__0_562 [label="return"];
    bb488__0_562 -> bb549__0_562 [label="unwind"];
    bb489__0_562 -> bb490__0_562 [label="return"];
    bb489__0_562 -> bb585__0_562 [label="unwind"];
    bb490__0_562 -> bb536__0_562 [label=""];
    bb491__0_562 -> bb492__0_562 [label=""];
    bb492__0_562 -> bb494__0_562 [label=""];
    bb493__0_562 -> bb494__0_562 [label=""];
    bb494__0_562 -> bb497__0_562 [label=""];
    bb495__0_562 -> bb497__0_562 [label=""];
    bb496__0_562 -> bb497__0_562 [label=""];
    bb497__0_562 -> bb498__0_562 [label=""];
    bb498__0_562 -> bb559__0_562 [label=""];
    bb499__0_562 -> bb500__0_562 [label="0"];
    bb499__0_562 -> bb560__0_562 [label="otherwise"];
    bb500__0_562 -> bb561__0_562 [label="1"];
    bb500__0_562 -> bb501__0_562 [label="otherwise"];
    bb501__0_562 -> bb502__0_562 [label="return"];
    bb501__0_562 -> bb541__0_562 [label="unwind"];
    bb502__0_562 -> bb503__0_562 [label="return"];
    bb502__0_562 -> bb581__0_562 [label="unwind"];
    bb503__0_562 -> bb504__0_562 [label=""];
    bb504__0_562 -> bb506__0_562 [label=""];
    bb505__0_562 -> bb506__0_562 [label=""];
    bb506__0_562 -> bb508__0_562 [label=""];
    bb507__0_562 -> bb508__0_562 [label=""];
    bb508__0_562 -> bb509__0_562 [label=""];
    bb509__0_562 -> bb510__0_562 [label=""];
    bb510__0_562 -> bb512__0_562 [label=""];
    bb511__0_562 -> bb512__0_562 [label=""];
    bb512__0_562 -> bb513__0_562 [label=""];
    bb513__0_562 -> bb520__0_562 [label=""];
    bb514__0_562 -> bb519__0_562 [label=""];
    bb515__0_562 -> bb516__0_562 [label="return"];
    bb515__0_562 -> bb546__0_562 [label="unwind"];
    bb516__0_562 -> bb517__0_562 [label="return"];
    bb516__0_562 -> bb581__0_562 [label="unwind"];
    bb517__0_562 -> bb518__0_562 [label=""];
    bb518__0_562 -> bb519__0_562 [label=""];
    bb519__0_562 -> bb520__0_562 [label=""];
    bb520__0_562 -> bb521__0_562 [label="0"];
    bb520__0_562 -> bb563__0_562 [label="otherwise"];
    bb521__0_562 -> bb522__0_562 [label="return"];
    bb521__0_562 -> bb549__0_562 [label="unwind"];
    bb522__0_562 -> bb523__0_562 [label=""];
    bb523__0_562 -> bb524__0_562 [label=""];
    bb524__0_562 -> bb528__0_562 [label=""];
    bb525__0_562 -> bb526__0_562 [label=""];
    bb526__0_562 -> bb527__0_562 [label="return"];
    bb526__0_562 -> bb549__0_562 [label="unwind"];
    bb527__0_562 -> bb528__0_562 [label=""];
    bb528__0_562 -> bb529__0_562 [label="return"];
    bb528__0_562 -> bb585__0_562 [label="unwind"];
    bb529__0_562 -> bb531__0_562 [label=""];
    bb530__0_562 -> bb531__0_562 [label=""];
    bb531__0_562 -> bb532__0_562 [label=""];
    bb532__0_562 -> bb565__0_562 [label=""];
    bb533__0_562 -> bb565__0_562 [label=""];
    bb534__0_562 -> bb535__0_562 [label="0"];
    bb534__0_562 -> bb566__0_562 [label="otherwise"];
    bb535__0_562 -> bb536__0_562 [label=""];
    bb537__0_562 -> bb568__0_562 [label="return"];
    bb538__0_562 -> bb568__0_562 [label="return"];
    bb539__0_562 -> bb568__0_562 [label="return"];
    bb540__0_562 -> bb541__0_562 [label="return"];
    bb541__0_562 -> bb581__0_562 [label="return"];
    bb542__0_562 -> bb581__0_562 [label="return"];
    bb543__0_562 -> bb581__0_562 [label="return"];
    bb544__0_562 -> bb581__0_562 [label="return"];
    bb545__0_562 -> bb546__0_562 [label="return"];
    bb546__0_562 -> bb581__0_562 [label="return"];
    bb547__0_562 -> bb549__0_562 [label="return"];
    bb548__0_562 -> bb549__0_562 [label="return"];
    bb549__0_562 -> bb585__0_562 [label="return"];
    bb550__0_562 -> bb585__0_562 [label="return"];
    bb551__0_562 -> bb585__0_562 [label="return"];
    bb552__0_562 -> bb585__0_562 [label="return"];
    bb553__0_562 -> bb585__0_562 [label="return"];
    bb555__0_562 -> bb487__0_562 [label="return"];
    bb555__0_562 -> bb541__0_562 [label="unwind"];
    bb556__0_562 -> bb555__0_562 [label="0"];
    bb556__0_562 -> bb557__0_562 [label="otherwise"];
    bb557__0_562 -> bb555__0_562 [label="return"];
    bb557__0_562 -> bb540__0_562 [label="unwind"];
    bb558__0_562 -> bb499__0_562 [label="return"];
    bb558__0_562 -> bb571__0_562 [label="unwind"];
    bb559__0_562 -> bb499__0_562 [label="0"];
    bb559__0_562 -> bb558__0_562 [label="otherwise"];
    bb560__0_562 -> bb500__0_562 [label="return"];
    bb560__0_562 -> bb575__0_562 [label="unwind"];
    bb561__0_562 -> bb501__0_562 [label="0"];
    bb561__0_562 -> bb562__0_562 [label="otherwise"];
    bb562__0_562 -> bb501__0_562 [label="return"];
    bb562__0_562 -> bb540__0_562 [label="unwind"];
    bb563__0_562 -> bb521__0_562 [label="return"];
    bb563__0_562 -> bb547__0_562 [label="unwind"];
    bb564__0_562 -> bb534__0_562 [label="return"];
    bb564__0_562 -> bb588__0_562 [label="unwind"];
    bb565__0_562 -> bb534__0_562 [label="0"];
    bb565__0_562 -> bb564__0_562 [label="otherwise"];
    bb566__0_562 -> bb535__0_562 [label="return"];
    bb566__0_562 -> bb554__0_562 [label="unwind"];
    bb567__0_562 -> bb571__0_562 [label="return"];
    bb568__0_562 -> bb571__0_562 [label="0"];
    bb568__0_562 -> bb567__0_562 [label="otherwise"];
    bb569__0_562 -> bb571__0_562 [label=""];
    bb570__0_562 -> bb575__0_562 [label="return"];
    bb571__0_562 -> bb575__0_562 [label="0"];
    bb571__0_562 -> bb570__0_562 [label="otherwise"];
    bb572__0_562 -> bb575__0_562 [label=""];
    bb573__0_562 -> bb540__0_562 [label="0"];
    bb573__0_562 -> bb574__0_562 [label="otherwise"];
    bb574__0_562 -> bb540__0_562 [label="return"];
    bb575__0_562 -> bb573__0_562 [label="1"];
    bb575__0_562 -> bb540__0_562 [label="otherwise"];
    bb576__0_562 -> bb540__0_562 [label=""];
    bb577__0_562 -> bb541__0_562 [label=""];
    bb578__0_562 -> bb546__0_562 [label=""];
    bb579__0_562 -> bb581__0_562 [label=""];
    bb580__0_562 -> bb547__0_562 [label="return"];
    bb581__0_562 -> bb547__0_562 [label="0"];
    bb581__0_562 -> bb580__0_562 [label="otherwise"];
    bb582__0_562 -> bb549__0_562 [label=""];
    bb583__0_562 -> bb549__0_562 [label=""];
    bb584__0_562 -> bb588__0_562 [label="return"];
    bb585__0_562 -> bb588__0_562 [label="0"];
    bb585__0_562 -> bb584__0_562 [label="otherwise"];
    bb586__0_562 -> bb588__0_562 [label=""];
    bb587__0_562 -> bb554__0_562 [label="return"];
    bb588__0_562 -> bb554__0_562 [label="0"];
    bb588__0_562 -> bb587__0_562 [label="otherwise"];
    bb589__0_562 -> bb554__0_562 [label=""];
}
