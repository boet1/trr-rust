digraph Mir_0_2492 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_filler_multiplier_for_matched_orders(_1: u64, _2: controller::position::PositionDirection, _3: i64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _10: i128;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _13: i128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _19: i64;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: i64;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: i64;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: i128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i128;<br align="left"/>let mut _44: i128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _47: i64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i128;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i64;<br align="left"/>let _63: i64;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _68: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _69: i64;<br align="left"/>let mut _70: i64;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: i64;<br align="left"/>let mut _73: (i64, bool);<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: i64;<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _80: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _81: i64;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: (i64, bool);<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: i64;<br align="left"/>let mut _89: i64;<br align="left"/>let mut _90: (i64, bool);<br align="left"/>let mut _91: i64;<br align="left"/>debug maker_price =&gt; _1;<br align="left"/>debug maker_direction =&gt; _2;<br align="left"/>debug oracle_price =&gt; _3;<br align="left"/>debug price_pct_diff =&gt; _4;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug multiplier =&gt; _63;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>>;
    bb0__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _1<br/></td></tr><tr><td align="left">_22 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _23)</td></tr></table>>];
    bb1__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb2__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_24 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb3__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_21 as Continue).0: i64)<br/>_20 = _28<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_18 = &lt;i64 as SafeMath&gt;::safe_sub(move _19, move _20)</td></tr></table>>];
    bb4__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb6__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_29 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_17 as Continue).0: i64)<br/>_16 = _33<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_15 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _16)</td></tr></table>>];
    bb10__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb11__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb13__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_34 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb14__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_14 as Continue).0: i128)<br/>_13 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_12 = &lt;i128 as SafeMath&gt;::safe_mul(move _13, const _)</td></tr></table>>];
    bb15__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb16__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb18__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_39 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb19__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_11 as Continue).0: i128)<br/>_10 = _43<br/>StorageDead(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _3<br/></td></tr><tr><td align="left">_46 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _47)</td></tr></table>>];
    bb20__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb21__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb23__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb24__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: i128)<br/>_44 = _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_9 = &lt;i128 as SafeMath&gt;::safe_div(move _10, move _44)</td></tr></table>>];
    bb25__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb26__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb28__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_53 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb29__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_8 as Continue).0: i128)<br/>_7 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_6 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _7)</td></tr></table>>];
    bb30__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb31__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb33__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_58 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb34__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_5 as Continue).0: i64)<br/>_4 = _62<br/>StorageDead(_62)<br/>StorageDead(_45)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_66 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb35__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb36__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _4<br/>StorageLive(_82)<br/>_83 = CheckedMul(const _, const 2_i64)<br/></td></tr><tr><td align="left">assert(!move (_83.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const 2_i64)</td></tr></table>>];
    bb38__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _4<br/>_71 = Eq(_70, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _71, &quot;attempt to negate `{}`, which would overflow&quot;, _70)</td></tr></table>>];
    bb39__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_69 = Neg(move _70)<br/>StorageDead(_70)<br/>StorageLive(_72)<br/>_73 = CheckedMul(const _, const 2_i64)<br/></td></tr><tr><td align="left">assert(!move (_73.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const 2_i64)</td></tr></table>>];
    bb40__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_72 = move (_73.0: i64)<br/></td></tr><tr><td align="left">_68 = &lt;i64 as SafeMath&gt;::safe_add(move _69, move _72)</td></tr></table>>];
    bb41__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb42__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_74 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb43__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_67 as Continue).0: i64)<br/>_65 = _78<br/>StorageDead(_78)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb45__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_82 = move (_83.0: i64)<br/></td></tr><tr><td align="left">_80 = &lt;i64 as SafeMath&gt;::safe_add(move _81, move _82)</td></tr></table>>];
    bb47__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb48__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_84 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb49__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_79 as Continue).0: i64)<br/>_65 = _88<br/>StorageDead(_88)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb51__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left">_64 = &lt;i64 as Ord&gt;::max(move _65, const _)</td></tr></table>>];
    bb53__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_89)<br/>_90 = CheckedMul(const _, const 100_i64)<br/></td></tr><tr><td align="left">assert(!move (_90.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const 100_i64)</td></tr></table>>];
    bb54__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_89 = move (_90.0: i64)<br/></td></tr><tr><td align="left">_63 = &lt;i64 as Ord&gt;::min(move _64, move _89)</td></tr></table>>];
    bb55__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_64)<br/>StorageLive(_91)<br/>_91 = _63<br/></td></tr><tr><td align="left">_0 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _91)</td></tr></table>>];
    bb56__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_63)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2492 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2492 -> bb1__0_2492 [label="return"];
    bb1__0_2492 -> bb2__0_2492 [label="return"];
    bb2__0_2492 -> bb3__0_2492 [label="0"];
    bb2__0_2492 -> bb5__0_2492 [label="1"];
    bb2__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb3__0_2492 -> bb7__0_2492 [label="return"];
    bb5__0_2492 -> bb6__0_2492 [label="return"];
    bb6__0_2492 -> bb60__0_2492 [label=""];
    bb7__0_2492 -> bb8__0_2492 [label="return"];
    bb8__0_2492 -> bb9__0_2492 [label="0"];
    bb8__0_2492 -> bb10__0_2492 [label="1"];
    bb8__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb9__0_2492 -> bb12__0_2492 [label="return"];
    bb10__0_2492 -> bb11__0_2492 [label="return"];
    bb11__0_2492 -> bb60__0_2492 [label=""];
    bb12__0_2492 -> bb13__0_2492 [label="return"];
    bb13__0_2492 -> bb14__0_2492 [label="0"];
    bb13__0_2492 -> bb15__0_2492 [label="1"];
    bb13__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb14__0_2492 -> bb17__0_2492 [label="return"];
    bb15__0_2492 -> bb16__0_2492 [label="return"];
    bb16__0_2492 -> bb61__0_2492 [label=""];
    bb17__0_2492 -> bb18__0_2492 [label="return"];
    bb18__0_2492 -> bb19__0_2492 [label="0"];
    bb18__0_2492 -> bb20__0_2492 [label="1"];
    bb18__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb19__0_2492 -> bb22__0_2492 [label="return"];
    bb20__0_2492 -> bb21__0_2492 [label="return"];
    bb21__0_2492 -> bb62__0_2492 [label=""];
    bb22__0_2492 -> bb23__0_2492 [label="return"];
    bb23__0_2492 -> bb24__0_2492 [label="0"];
    bb23__0_2492 -> bb25__0_2492 [label="1"];
    bb23__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb24__0_2492 -> bb27__0_2492 [label="return"];
    bb25__0_2492 -> bb26__0_2492 [label="return"];
    bb26__0_2492 -> bb58__0_2492 [label=""];
    bb27__0_2492 -> bb28__0_2492 [label="return"];
    bb28__0_2492 -> bb29__0_2492 [label="0"];
    bb28__0_2492 -> bb30__0_2492 [label="1"];
    bb28__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb29__0_2492 -> bb32__0_2492 [label="return"];
    bb30__0_2492 -> bb31__0_2492 [label="return"];
    bb31__0_2492 -> bb58__0_2492 [label=""];
    bb32__0_2492 -> bb33__0_2492 [label="return"];
    bb33__0_2492 -> bb34__0_2492 [label="0"];
    bb33__0_2492 -> bb35__0_2492 [label="1"];
    bb33__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb34__0_2492 -> bb38__0_2492 [label="0"];
    bb34__0_2492 -> bb37__0_2492 [label="1"];
    bb34__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb35__0_2492 -> bb36__0_2492 [label="return"];
    bb36__0_2492 -> bb59__0_2492 [label=""];
    bb37__0_2492 -> bb46__0_2492 [label="success"];
    bb38__0_2492 -> bb39__0_2492 [label="success"];
    bb39__0_2492 -> bb40__0_2492 [label="success"];
    bb40__0_2492 -> bb41__0_2492 [label="return"];
    bb41__0_2492 -> bb42__0_2492 [label="return"];
    bb42__0_2492 -> bb43__0_2492 [label="0"];
    bb42__0_2492 -> bb44__0_2492 [label="1"];
    bb42__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb43__0_2492 -> bb52__0_2492 [label=""];
    bb44__0_2492 -> bb45__0_2492 [label="return"];
    bb45__0_2492 -> bb57__0_2492 [label=""];
    bb46__0_2492 -> bb47__0_2492 [label="return"];
    bb47__0_2492 -> bb48__0_2492 [label="return"];
    bb48__0_2492 -> bb49__0_2492 [label="0"];
    bb48__0_2492 -> bb50__0_2492 [label="1"];
    bb48__0_2492 -> bb4__0_2492 [label="otherwise"];
    bb49__0_2492 -> bb52__0_2492 [label=""];
    bb50__0_2492 -> bb51__0_2492 [label="return"];
    bb51__0_2492 -> bb57__0_2492 [label=""];
    bb52__0_2492 -> bb53__0_2492 [label="return"];
    bb53__0_2492 -> bb54__0_2492 [label="success"];
    bb54__0_2492 -> bb55__0_2492 [label="return"];
    bb55__0_2492 -> bb56__0_2492 [label="return"];
    bb56__0_2492 -> bb65__0_2492 [label=""];
    bb57__0_2492 -> bb64__0_2492 [label=""];
    bb58__0_2492 -> bb59__0_2492 [label=""];
    bb59__0_2492 -> bb63__0_2492 [label=""];
    bb60__0_2492 -> bb61__0_2492 [label=""];
    bb61__0_2492 -> bb62__0_2492 [label=""];
    bb62__0_2492 -> bb63__0_2492 [label=""];
    bb63__0_2492 -> bb64__0_2492 [label=""];
    bb64__0_2492 -> bb65__0_2492 [label=""];
}
