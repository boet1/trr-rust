digraph Mir_0_2614 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::calculate_max_perp_order_size(_1: &amp;ReErased state::user::User, _2: usize, _3: u16, _4: controller::position::PositionDirection, _5: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _6: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _7: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _8: u128;<br align="left"/>let _9: i128;<br align="left"/>let mut _10: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _12: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _13: &amp;ReErased state::user::User;<br align="left"/>let mut _14: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _17: state::margin_calculation::MarginContext;<br align="left"/>let mut _18: state::margin_calculation::MarginContext;<br align="left"/>let mut _19: math::margin::MarginRequirementType;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: state::margin_calculation::MarginCalculation;<br align="left"/>let _25: u32;<br align="left"/>let _26: bool;<br align="left"/>let mut _27: &amp;ReErased state::user::User;<br align="left"/>let mut _28: math::margin::MarginRequirementType;<br align="left"/>let _29: i128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: i128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: i128;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: i128;<br align="left"/>let _47: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _49: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased u16;<br align="left"/>let _52: &amp;ReErased u16;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _58: i64;<br align="left"/>let mut _59: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _61: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _62: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _64: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _65: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _66: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _67: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _68: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _74: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _76: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _77: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased u16;<br align="left"/>let _79: &amp;ReErased u16;<br align="left"/>let _80: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _81: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _87: i64;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _91: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _92: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _94: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _95: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _96: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _97: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _98: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _104: i64;<br align="left"/>let mut _105: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _106: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _107: ();<br align="left"/>let mut _108: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _109: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _110: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _111: usize;<br align="left"/>let mut _112: usize;<br align="left"/>let mut _113: bool;<br align="left"/>let _114: i128;<br align="left"/>let _115: u128;<br align="left"/>let mut _116: (i128, u128);<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, u128)&gt;;<br align="left"/>let mut _118: std::result::Result&lt;(i128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _119: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _120: i64;<br align="left"/>let mut _121: state::perp_market::ContractType;<br align="left"/>let mut _122: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _123: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: (i128, u128);<br align="left"/>let _129: u32;<br align="left"/>let mut _130: u32;<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _132: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _133: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _134: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _135: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _136: u128;<br align="left"/>let mut _137: i128;<br align="left"/>let mut _138: math::margin::MarginRequirementType;<br align="left"/>let mut _139: bool;<br align="left"/>let mut _140: isize;<br align="left"/>let _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _144: u32;<br align="left"/>let mut _145: u32;<br align="left"/>let mut _146: u64;<br align="left"/>let mut _147: i128;<br align="left"/>let _148: ();<br align="left"/>let mut _149: bool;<br align="left"/>let mut _150: i128;<br align="left"/>let mut _151: bool;<br align="left"/>let mut _152: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _153: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _154: controller::position::PositionDirection;<br align="left"/>let mut _155: u64;<br align="left"/>let mut _156: i64;<br align="left"/>let mut _157: i64;<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _159: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _160: i64;<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _162: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _163: i128;<br align="left"/>let mut _164: i128;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: i64;<br align="left"/>let mut _170: i64;<br align="left"/>let mut _171: isize;<br align="left"/>let _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _173: !;<br align="left"/>let mut _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _175: i64;<br align="left"/>let _176: u128;<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _178: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _179: u128;<br align="left"/>let mut _180: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _181: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _182: u128;<br align="left"/>let mut _183: u128;<br align="left"/>let mut _184: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _185: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _186: u32;<br align="left"/>let mut _187: isize;<br align="left"/>let _188: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _189: !;<br align="left"/>let mut _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _191: u128;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: u128;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _201: u128;<br align="left"/>let mut _202: i128;<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _204: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _205: u128;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: i128;<br align="left"/>let mut _211: bool;<br align="left"/>let mut _212: i128;<br align="left"/>let mut _213: bool;<br align="left"/>let mut _214: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _215: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _216: controller::position::PositionDirection;<br align="left"/>let mut _217: u64;<br align="left"/>let mut _218: i64;<br align="left"/>let mut _219: i64;<br align="left"/>let mut _220: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _221: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _222: i64;<br align="left"/>let mut _223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _224: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _225: i128;<br align="left"/>let mut _226: isize;<br align="left"/>let _227: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _228: !;<br align="left"/>let mut _229: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _230: i64;<br align="left"/>let mut _231: i64;<br align="left"/>let mut _232: isize;<br align="left"/>let _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _234: !;<br align="left"/>let mut _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _236: i64;<br align="left"/>let _237: u128;<br align="left"/>let mut _238: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _239: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _240: u128;<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _242: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _243: u128;<br align="left"/>let mut _244: u128;<br align="left"/>let mut _245: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _246: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _247: u32;<br align="left"/>let mut _248: isize;<br align="left"/>let _249: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _250: !;<br align="left"/>let mut _251: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _252: u128;<br align="left"/>let mut _253: isize;<br align="left"/>let _254: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _255: !;<br align="left"/>let mut _256: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _257: u128;<br align="left"/>let mut _258: isize;<br align="left"/>let _259: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _260: !;<br align="left"/>let mut _261: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _262: u128;<br align="left"/>let mut _263: i128;<br align="left"/>let mut _264: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _265: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _266: u128;<br align="left"/>let mut _267: isize;<br align="left"/>let _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _269: !;<br align="left"/>let mut _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _271: i128;<br align="left"/>let _272: ();<br align="left"/>let mut _273: bool;<br align="left"/>let mut _274: i128;<br align="left"/>let mut _275: !;<br align="left"/>let mut _276: u64;<br align="left"/>let mut _277: u64;<br align="left"/>let mut _278: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _279: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _280: i64;<br align="left"/>let mut _281: bool;<br align="left"/>let mut _282: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _283: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _284: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _285: bool;<br align="left"/>let mut _286: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _287: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _288: controller::position::PositionDirection;<br align="left"/>let mut _289: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _290: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _291: i64;<br align="left"/>let mut _292: isize;<br align="left"/>let _293: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _294: !;<br align="left"/>let mut _295: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _296: i64;<br align="left"/>let _297: Closure(DefId(0:2615 ~ drift[d311]::math::orders::calculate_max_perp_order_size::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((u32, i32)) -&gt; std::result::Result&lt;(u64, u32), error::ErrorCode&gt;, []), (&amp;ReErased i128, &amp;ReErased i64, &amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i64, &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, &amp;ReErased bool, &amp;ReErased u32)]);<br align="left"/>let mut _298: &amp;ReErased i128;<br align="left"/>let mut _299: &amp;ReErased i64;<br align="left"/>let mut _300: &amp;ReErased i128;<br align="left"/>let mut _301: &amp;ReErased i128;<br align="left"/>let mut _302: &amp;ReErased i64;<br align="left"/>let mut _303: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _304: &amp;ReErased bool;<br align="left"/>let mut _305: &amp;ReErased u32;<br align="left"/>let mut _306: u64;<br align="left"/>let mut _307: u32;<br align="left"/>let mut _308: i32;<br align="left"/>let _309: ();<br align="left"/>let mut _310: std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _311: std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _312: std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _313: ();<br align="left"/>let _314: ();<br align="left"/>let mut _315: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _316: &amp;ReErased mut std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _317: &amp;ReErased mut std::ops::Range&lt;i32&gt;;<br align="left"/>let mut _318: isize;<br align="left"/>let mut _319: !;<br align="left"/>let _320: u64;<br align="left"/>let _321: u32;<br align="left"/>let mut _322: (u64, u32);<br align="left"/>let mut _323: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u32)&gt;;<br align="left"/>let mut _324: std::result::Result&lt;(u64, u32), error::ErrorCode&gt;;<br align="left"/>let mut _325: &amp;ReErased Closure(DefId(0:2615 ~ drift[d311]::math::orders::calculate_max_perp_order_size::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((u32, i32)) -&gt; std::result::Result&lt;(u64, u32), error::ErrorCode&gt;, []), (&amp;ReErased i128, &amp;ReErased i64, &amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i64, &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, &amp;ReErased bool, &amp;ReErased u32)]);<br align="left"/>let mut _326: (u32, i32);<br align="left"/>let mut _327: u32;<br align="left"/>let mut _328: i32;<br align="left"/>let mut _329: isize;<br align="left"/>let _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _331: !;<br align="left"/>let mut _332: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _333: (u64, u32);<br align="left"/>let mut _334: u64;<br align="left"/>let _335: ();<br align="left"/>let mut _336: bool;<br align="left"/>let mut _337: u32;<br align="left"/>let mut _338: u32;<br align="left"/>let mut _339: !;<br align="left"/>let mut _340: i32;<br align="left"/>let mut _341: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _342: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _343: i32;<br align="left"/>let mut _344: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _345: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _346: u32;<br align="left"/>let mut _347: isize;<br align="left"/>let _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _349: !;<br align="left"/>let mut _350: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _351: i32;<br align="left"/>let mut _352: i32;<br align="left"/>let mut _353: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i32&gt;;<br align="left"/>let mut _354: std::result::Result&lt;i32, error::ErrorCode&gt;;<br align="left"/>let mut _355: u32;<br align="left"/>let mut _356: isize;<br align="left"/>let _357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _358: !;<br align="left"/>let mut _359: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _360: i32;<br align="left"/>let mut _361: isize;<br align="left"/>let _362: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _363: !;<br align="left"/>let mut _364: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _365: i32;<br align="left"/>let mut _366: u32;<br align="left"/>let mut _367: u64;<br align="left"/>let mut _368: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _369: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _370: u64;<br align="left"/>let mut _371: u64;<br align="left"/>let mut _372: isize;<br align="left"/>let _373: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _374: !;<br align="left"/>let mut _375: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _376: u64;<br align="left"/>let mut _377: u64;<br align="left"/>let mut _378: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _379: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _380: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _381: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _382: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _383: bool;<br align="left"/>let mut _384: isize;<br align="left"/>let mut _385: isize;<br align="left"/>let mut _386: isize;<br align="left"/>let mut _387: isize;<br align="left"/>let mut _388: isize;<br align="left"/>let mut _389: isize;<br align="left"/>let mut _390: isize;<br align="left"/>let mut _391: isize;<br align="left"/>let mut _392: isize;<br align="left"/>let mut _393: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug position_index =&gt; _2;<br align="left"/>debug market_index =&gt; _3;<br align="left"/>debug direction =&gt; _4;<br align="left"/>debug perp_market_map =&gt; _5;<br align="left"/>debug spot_market_map =&gt; _6;<br align="left"/>debug oracle_map =&gt; _7;<br align="left"/>debug margin_requirement =&gt; _8;<br align="left"/>debug total_collateral =&gt; _9;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug user_custom_margin_ratio =&gt; _25;<br align="left"/>debug user_high_leverage_mode =&gt; _26;<br align="left"/>debug free_collateral_before =&gt; _29;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug perp_market =&gt; _47;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug oracle_price_data_price =&gt; _58;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug quote_spot_market =&gt; _74;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug quote_oracle_price =&gt; _87;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug perp_position =&gt; _109;<br align="left"/>debug worst_case_base_asset_amount =&gt; _114;<br align="left"/>debug worst_case_liability_value =&gt; _115;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug margin_ratio =&gt; _129;<br align="left"/>debug residual =&gt; _141;<br align="left"/>debug val =&gt; _144;<br align="left"/>debug order_size_to_reduce_position =&gt; _146;<br align="left"/>debug free_collateral_released =&gt; _147;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug residual =&gt; _172;<br align="left"/>debug val =&gt; _175;<br align="left"/>debug existing_position_margin_requirement =&gt; _176;<br align="left"/>debug residual =&gt; _188;<br align="left"/>debug val =&gt; _191;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug residual =&gt; _198;<br align="left"/>debug val =&gt; _201;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug residual =&gt; _227;<br align="left"/>debug val =&gt; _230;<br align="left"/>debug residual =&gt; _233;<br align="left"/>debug val =&gt; _236;<br align="left"/>debug existing_position_margin_requirement =&gt; _237;<br align="left"/>debug residual =&gt; _249;<br align="left"/>debug val =&gt; _252;<br align="left"/>debug residual =&gt; _254;<br align="left"/>debug val =&gt; _257;<br align="left"/>debug residual =&gt; _259;<br align="left"/>debug val =&gt; _262;<br align="left"/>debug residual =&gt; _268;<br align="left"/>debug val =&gt; _271;<br align="left"/>debug oracle_price =&gt; _280;<br align="left"/>debug residual =&gt; _293;<br align="left"/>debug val =&gt; _296;<br align="left"/>debug calculate_order_size_and_margin_ratio =&gt; _297;<br align="left"/>debug order_size =&gt; _306;<br align="left"/>debug updated_margin_ratio =&gt; _307;<br align="left"/>debug margin_ratio_delta =&gt; _308;<br align="left"/>debug iter =&gt; _312;<br align="left"/>debug new_order_size =&gt; _320;<br align="left"/>debug new_margin_ratio =&gt; _321;<br align="left"/>debug residual =&gt; _330;<br align="left"/>debug val =&gt; _333;<br align="left"/>debug residual =&gt; _348;<br align="left"/>debug val =&gt; _351;<br align="left"/>debug residual =&gt; _357;<br align="left"/>debug val =&gt; _360;<br align="left"/>debug residual =&gt; _362;<br align="left"/>debug val =&gt; _365;<br align="left"/>debug residual =&gt; _373;<br align="left"/>debug val =&gt; _376;<br align="left"/>>;
    bb0__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_383 = const false<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_1)<br/>StorageLive(_14)<br/>_14 = &amp;(*_5)<br/>StorageLive(_15)<br/>_15 = &amp;(*_6)<br/>StorageLive(_16)<br/>_16 = &amp;mut (*_7)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_18 = MarginContext::standard(move _19)</td></tr></table>>];
    bb1__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = MarginContext::strict(move _18, const true)</td></tr></table>>];
    bb2__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_12 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _13, move _14, move _15, move _16, move _17)</td></tr></table>>];
    bb3__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb4__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_20 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb5__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_11 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_10 = _24<br/>StorageDead(_24)<br/>StorageLive(_8)<br/>_8 = (_10.3: u128)<br/>StorageLive(_9)<br/>_9 = (_10.1: i128)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_25)<br/>_25 = ((*_1).16: u32)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_1)<br/>StorageLive(_28)<br/>_28 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_26 = User::is_high_leverage_mode(move _27, move _28)</td></tr></table>>];
    bb6__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb8__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _9<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _8<br/></td></tr><tr><td align="left">_35 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _36)</td></tr></table>>];
    bb10__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb11__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb12__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: i128)<br/>_33 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_31 = &lt;i128 as SafeMath&gt;::safe_sub(move _32, move _33)</td></tr></table>>];
    bb13__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb14__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_42 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb17__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_30 as Continue).0: i128)<br/>_29 = _46<br/>StorageDead(_46)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;(*_5)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_3<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_49 = PerpMarketMap::&lt;'_&gt;::get_ref(move _50, move _51)</td></tr></table>>];
    bb18__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb19__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb21__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb22__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move ((_48 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_47 = move _57<br/>StorageDead(_57)<br/>_386 = discriminant(_48)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut (*_7)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_47<br/></td></tr><tr><td align="left">_67 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _68)</td></tr></table>>];
    bb23__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb24__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>_384 = discriminant(_48)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_66 = &amp;(*_67)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_65 = PerpMarket::oracle_id(move _66)</td></tr></table>>];
    bb26__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_61 = OracleMap::&lt;'_&gt;::get_price_data(move _62, move _63)</td></tr></table>>];
    bb27__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb28__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_69 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb29__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_60 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_59 = _73<br/>StorageDead(_73)<br/>_58 = ((*_59).0: i64)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_6)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_47<br/></td></tr><tr><td align="left">_80 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _81)</td></tr></table>>];
    bb30__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb31__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = &amp;((*_80).26: u16)<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_76 = SpotMarketMap::&lt;'_&gt;::get_ref(move _77, move _78)</td></tr></table>>];
    bb33__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb34__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_82 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb35__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = move ((_75 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_383 = const true<br/>_74 = move _86<br/>StorageDead(_86)<br/>_390 = discriminant(_75)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;mut (*_7)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;_74<br/></td></tr><tr><td align="left">_97 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb36__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb37__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>_388 = discriminant(_75)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_95 = SpotMarket::oracle_id(move _96)</td></tr></table>>];
    bb39__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_94 = &amp;_95<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_91 = OracleMap::&lt;'_&gt;::get_price_data(move _92, move _93)</td></tr></table>>];
    bb40__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb41__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_99 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb42__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_90 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_89 = _103<br/>StorageDead(_103)<br/>_88 = ((*_89).0: i64)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_74<br/></td></tr><tr><td align="left">_105 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _106)</td></tr></table>>];
    bb43__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb44__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_88)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = (((*_105).5: state::oracle::HistoricalOracleData).4: i64)<br/></td></tr><tr><td align="left">_87 = &lt;i64 as Ord&gt;::max(move _88, move _104)</td></tr></table>>];
    bb46__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_88)<br/>StorageDead(_105)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_383 = const false<br/>_108 = move _74<br/></td></tr><tr><td align="left">_107 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _108)</td></tr></table>>];
    bb47__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = _2<br/>_112 = Len(((*_1).4: [state::user::PerpPosition; 8]))<br/>_113 = Lt(_111, _112)<br/></td></tr><tr><td align="left">assert(move _113, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _112, _111)</td></tr></table>>];
    bb48__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_110 = &amp;((*_1).4: [state::user::PerpPosition; 8])[_111]<br/>_109 = &amp;(*_110)<br/>StorageDead(_110)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;(*_109)<br/>StorageLive(_120)<br/>_120 = _58<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;_47<br/></td></tr><tr><td align="left">_122 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _123)</td></tr></table>>];
    bb49__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_121 = ((*_122).23: state::perp_market::ContractType)<br/></td></tr><tr><td align="left">_118 = PerpPosition::worst_case_liability_value(move _119, move _120, move _121)</td></tr></table>>];
    bb50__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb51__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_124 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb52__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_117 as Continue).0: (i128, u128))<br/>_116 = _128<br/>StorageDead(_128)<br/>StorageLive(_114)<br/>_114 = (_116.0: i128)<br/>StorageLive(_115)<br/>_115 = (_116.1: u128)<br/>StorageDead(_122)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;_47<br/></td></tr><tr><td align="left">_134 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _135)</td></tr></table>>];
    bb53__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb54__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_133 = &amp;(*_134)<br/>StorageDead(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = _114<br/></td></tr><tr><td align="left">_136 = core::num::&lt;impl i128&gt;::unsigned_abs(move _137)</td></tr></table>>];
    bb56__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageLive(_138)<br/>_138 = math::margin::MarginRequirementType::Initial<br/>StorageLive(_139)<br/>_139 = _26<br/></td></tr><tr><td align="left">_132 = PerpMarket::get_margin_ratio(move _133, move _136, move _138, move _139)</td></tr></table>>];
    bb57__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb58__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_140 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb59__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_131 as Continue).0: u32)<br/>_130 = _144<br/>StorageDead(_144)<br/>StorageLive(_145)<br/>_145 = _25<br/></td></tr><tr><td align="left">_129 = &lt;u32 as Ord&gt;::max(move _130, move _145)</td></tr></table>>];
    bb60__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_143)<br/>_143 = _141<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _143)</td></tr></table>>];
    bb61__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_130)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_130)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageLive(_146)<br/>_146 = const 0_u64<br/>StorageLive(_147)<br/>_147 = const 0_i128<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = _114<br/>_149 = Lt(move _150, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb63__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = &amp;_4<br/>StorageLive(_153)<br/>_382 = const _<br/>_153 = &amp;(*_382)<br/></td></tr><tr><td align="left">_151 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _152, move _153)</td></tr></table>>];
    bb64__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb65__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = _114<br/></td></tr><tr><td align="left">_163 = core::num::&lt;impl i128&gt;::abs(move _164)</td></tr></table>>];
    bb66__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _163)</td></tr></table>>];
    bb67__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb68__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_165 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb69__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_161 as Continue).0: i64)<br/>_160 = _169<br/>StorageDead(_169)<br/>StorageLive(_170)<br/>_170 = ((*_109).5: i64)<br/></td></tr><tr><td align="left">_159 = &lt;i64 as SafeMath&gt;::safe_sub(move _160, move _170)</td></tr></table>>];
    bb70__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb71__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb73__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_171 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb74__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = ((_158 as Continue).0: i64)<br/>_157 = _175<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">_156 = &lt;i64 as Ord&gt;::max(move _157, const 0_i64)</td></tr></table>>];
    bb75__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_174)<br/>_174 = _172<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _174)</td></tr></table>>];
    bb76__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = core::num::&lt;impl i64&gt;::unsigned_abs(move _156)</td></tr></table>>];
    bb78__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_146 = move _155<br/>StorageDead(_155)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = _115<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = _129<br/></td></tr><tr><td align="left">_185 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _186)</td></tr></table>>];
    bb79__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">_184 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _185)</td></tr></table>>];
    bb80__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_187 = discriminant(_184)<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb81__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_184 as Continue).0: u128)<br/>_183 = _191<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_181 = &lt;u128 as SafeMath&gt;::safe_mul(move _182, move _183)</td></tr></table>>];
    bb82__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_184 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_190)<br/>_190 = _188<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _190)</td></tr></table>>];
    bb83__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _181)</td></tr></table>>];
    bb85__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_192 = discriminant(_180)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb86__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_180 as Continue).0: u128)<br/>_179 = _196<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">_178 = &lt;u128 as SafeMath&gt;::safe_div(move _179, const _)</td></tr></table>>];
    bb87__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_180 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb88__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb90__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_197 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb91__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_177 as Continue).0: u128)<br/>_176 = _201<br/>StorageDead(_201)<br/>StorageDead(_184)<br/>StorageDead(_180)<br/>StorageDead(_177)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = _176<br/></td></tr><tr><td align="left">_204 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _205)</td></tr></table>>];
    bb92__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_200)<br/>_200 = _198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _200)</td></tr></table>>];
    bb93__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb95__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_206 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb96__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_203 as Continue).0: i128)<br/>_202 = _210<br/>StorageDead(_210)<br/>_147 = move _202<br/>StorageDead(_202)<br/>StorageDead(_203)<br/>_148 = const ()<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb98__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_202)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = _114<br/>_211 = Gt(move _212, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _211)</td></tr></table>>];
    bb102__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_4<br/>StorageLive(_215)<br/>_381 = const _<br/>_215 = &amp;(*_381)<br/></td></tr><tr><td align="left">_213 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _214, move _215)</td></tr></table>>];
    bb103__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb104__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = _114<br/></td></tr><tr><td align="left">_224 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _225)</td></tr></table>>];
    bb105__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _224)</td></tr></table>>];
    bb106__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_226 = discriminant(_223)<br/></td></tr><tr><td align="left">switchInt(move _226)</td></tr></table>>];
    bb107__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_223 as Continue).0: i64)<br/>_222 = _230<br/>StorageDead(_230)<br/>StorageLive(_231)<br/>_231 = ((*_109).6: i64)<br/></td></tr><tr><td align="left">_221 = &lt;i64 as SafeMath&gt;::safe_add(move _222, move _231)</td></tr></table>>];
    bb108__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_227)<br/>_227 = ((_223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_229)<br/>_229 = _227<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _229)</td></tr></table>>];
    bb109__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _221)</td></tr></table>>];
    bb111__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_232 = discriminant(_220)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb112__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_220 as Continue).0: i64)<br/>_219 = _236<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_218 = &lt;i64 as Ord&gt;::max(move _219, const 0_i64)</td></tr></table>>];
    bb113__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_220 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_235)<br/>_235 = _233<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _235)</td></tr></table>>];
    bb114__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = core::num::&lt;impl i64&gt;::unsigned_abs(move _218)</td></tr></table>>];
    bb116__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_146 = move _217<br/>StorageDead(_217)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = _115<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = _129<br/></td></tr><tr><td align="left">_246 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _247)</td></tr></table>>];
    bb117__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/></td></tr><tr><td align="left">_245 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _246)</td></tr></table>>];
    bb118__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_248 = discriminant(_245)<br/></td></tr><tr><td align="left">switchInt(move _248)</td></tr></table>>];
    bb119__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = ((_245 as Continue).0: u128)<br/>_244 = _252<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_242 = &lt;u128 as SafeMath&gt;::safe_mul(move _243, move _244)</td></tr></table>>];
    bb120__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = ((_245 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_251)<br/>_251 = _249<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _251)</td></tr></table>>];
    bb121__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_244)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb123__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_253 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _253)</td></tr></table>>];
    bb124__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_257)<br/>_257 = ((_241 as Continue).0: u128)<br/>_240 = _257<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_239 = &lt;u128 as SafeMath&gt;::safe_div(move _240, const _)</td></tr></table>>];
    bb125__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_254)<br/>_254 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_256)<br/>_256 = _254<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _256)</td></tr></table>>];
    bb126__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/></td></tr><tr><td align="left">_238 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _239)</td></tr></table>>];
    bb128__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>_258 = discriminant(_238)<br/></td></tr><tr><td align="left">switchInt(move _258)</td></tr></table>>];
    bb129__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_262)<br/>_262 = ((_238 as Continue).0: u128)<br/>_237 = _262<br/>StorageDead(_262)<br/>StorageDead(_245)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = _237<br/></td></tr><tr><td align="left">_265 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _266)</td></tr></table>>];
    bb130__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_259)<br/>_259 = ((_238 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_261)<br/>_261 = _259<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _261)</td></tr></table>>];
    bb131__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/></td></tr><tr><td align="left">_264 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _265)</td></tr></table>>];
    bb133__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_267 = discriminant(_264)<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb134__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_264 as Continue).0: i128)<br/>_263 = _271<br/>StorageDead(_271)<br/>_147 = move _263<br/>StorageDead(_263)<br/>StorageDead(_264)<br/>_148 = const ()<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_264 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_270)<br/>_270 = _268<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _270)</td></tr></table>>];
    bb136__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/>StorageDead(_263)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_148 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = _29<br/>_273 = Le(move _274, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _273)</td></tr></table>>];
    bb142__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>StorageLive(_276)<br/>_276 = _146<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_279 = &amp;_47<br/></td></tr><tr><td align="left">_278 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _279)</td></tr></table>>];
    bb143__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>_277 = (((*_278).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_base_asset_amount(move _276, move _277)</td></tr></table>>];
    bb144__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_278)<br/>StorageDead(_273)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_272 = const ()<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = &amp;_47<br/></td></tr><tr><td align="left">_283 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _284)</td></tr></table>>];
    bb146__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">_282 = &amp;(*_283)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">_281 = PerpMarket::is_prediction_market(move _282)</td></tr></table>>];
    bb147__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left">switchInt(move _281)</td></tr></table>>];
    bb148__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_283)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_4<br/>StorageLive(_287)<br/>_380 = const _<br/>_287 = &amp;(*_380)<br/></td></tr><tr><td align="left">_285 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _286, move _287)</td></tr></table>>];
    bb149__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left">switchInt(move _285)</td></tr></table>>];
    bb151__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>_280 = _58<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = _58<br/></td></tr><tr><td align="left">_290 = &lt;i64 as SafeMath&gt;::safe_sub(const _, move _291)</td></tr></table>>];
    bb153__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/></td></tr><tr><td align="left">_289 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _290)</td></tr></table>>];
    bb154__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>_292 = discriminant(_289)<br/></td></tr><tr><td align="left">switchInt(move _292)</td></tr></table>>];
    bb155__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_289 as Continue).0: i64)<br/>_280 = _296<br/>StorageDead(_296)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = ((_289 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_295)<br/>_295 = _293<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _295)</td></tr></table>>];
    bb157__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_289)<br/>StorageDead(_285)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_281)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>_298 = &amp;_114<br/>StorageLive(_299)<br/>_299 = &amp;_280<br/>StorageLive(_300)<br/>_300 = &amp;_29<br/>StorageLive(_301)<br/>_301 = &amp;_147<br/>StorageLive(_302)<br/>_302 = &amp;_87<br/>StorageLive(_303)<br/>_303 = &amp;_47<br/>StorageLive(_304)<br/>_304 = &amp;_26<br/>StorageLive(_305)<br/>_305 = &amp;_25<br/>_297 = {closure@programs/drift/src/math/orders.rs:889:49: 889:93} { worst_case_base_asset_amount: move _298, oracle_price: move _299, free_collateral_before: move _300, free_collateral_released: move _301, quote_oracle_price: move _302, perp_market: move _303, user_high_leverage_mode: move _304, user_custom_margin_ratio: move _305 }<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>StorageLive(_306)<br/>_306 = const 0_u64<br/>StorageLive(_307)<br/>_307 = _129<br/>StorageLive(_308)<br/>_308 = const 0_i32<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = std::ops::Range::&lt;i32&gt; { start: const 0_i32, end: const 6_i32 }<br/></td></tr><tr><td align="left">_310 = &lt;std::ops::Range&lt;i32&gt; as IntoIterator&gt;::into_iter(move _311)</td></tr></table>>];
    bb159__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageLive(_312)<br/>_312 = move _310<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>_317 = &amp;mut _312<br/>_316 = &amp;mut (*_317)<br/></td></tr><tr><td align="left">_315 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _316)</td></tr></table>>];
    bb161__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>_318 = discriminant(_315)<br/></td></tr><tr><td align="left">switchInt(move _318)</td></tr></table>>];
    bb162__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;_297<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_327 = _307<br/>StorageLive(_328)<br/>_328 = _308<br/>_326 = (move _327, move _328)<br/></td></tr><tr><td align="left">_324 = &lt;{closure@programs/drift/src/math/orders.rs:889:49: 889:93} as Fn&lt;(u32, i32)&gt;&gt;::call(move _325, move _326)</td></tr></table>>];
    bb163__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">_309 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_323 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as Try&gt;::branch(move _324)</td></tr></table>>];
    bb165__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_329 = discriminant(_323)<br/></td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb166__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_333)<br/>_333 = ((_323 as Continue).0: (u64, u32))<br/>_322 = _333<br/>StorageDead(_333)<br/>StorageLive(_320)<br/>_320 = (_322.0: u64)<br/>StorageLive(_321)<br/>_321 = (_322.1: u32)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageLive(_334)<br/>_334 = _320<br/>_306 = move _334<br/>StorageDead(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = _321<br/>StorageLive(_338)<br/>_338 = _307<br/>_336 = Eq(move _337, move _338)<br/></td></tr><tr><td align="left">switchInt(move _336)</td></tr></table>>];
    bb167__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_330)<br/>_330 = ((_323 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_332)<br/>_332 = _330<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _332)</td></tr></table>>];
    bb168__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_337)<br/>_309 = const ()<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_337)<br/>_335 = const ()<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = _321<br/></td></tr><tr><td align="left">_345 = &lt;u32 as Cast&gt;::cast::&lt;i32&gt;(move _346)</td></tr></table>>];
    bb171__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/></td></tr><tr><td align="left">_344 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _345)</td></tr></table>>];
    bb172__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_347 = discriminant(_344)<br/></td></tr><tr><td align="left">switchInt(move _347)</td></tr></table>>];
    bb173__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = ((_344 as Continue).0: i32)<br/>_343 = _351<br/>StorageDead(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>_355 = _129<br/></td></tr><tr><td align="left">_354 = &lt;u32 as Cast&gt;::cast::&lt;i32&gt;(move _355)</td></tr></table>>];
    bb174__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_348)<br/>_348 = ((_344 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_350)<br/>_350 = _348<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _350)</td></tr></table>>];
    bb175__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_348)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/></td></tr><tr><td align="left">_353 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _354)</td></tr></table>>];
    bb177__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>_356 = discriminant(_353)<br/></td></tr><tr><td align="left">switchInt(move _356)</td></tr></table>>];
    bb178__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_360)<br/>_360 = ((_353 as Continue).0: i32)<br/>_352 = _360<br/>StorageDead(_360)<br/></td></tr><tr><td align="left">_342 = &lt;i32 as SafeMath&gt;::safe_sub(move _343, move _352)</td></tr></table>>];
    bb179__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_357)<br/>_357 = ((_353 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_359)<br/>_359 = _357<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _359)</td></tr></table>>];
    bb180__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_357)<br/>StorageDead(_352)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_341 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as Try&gt;::branch(move _342)</td></tr></table>>];
    bb182__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_361 = discriminant(_341)<br/></td></tr><tr><td align="left">switchInt(move _361)</td></tr></table>>];
    bb183__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_365)<br/>_365 = ((_341 as Continue).0: i32)<br/>_340 = _365<br/>StorageDead(_365)<br/>_308 = move _340<br/>StorageDead(_340)<br/>StorageDead(_353)<br/>StorageDead(_344)<br/>StorageDead(_341)<br/>StorageLive(_366)<br/>_366 = _321<br/>_307 = move _366<br/>StorageDead(_366)<br/>_314 = const ()<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_317)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>_313 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_362)<br/>_362 = ((_341 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_364)<br/>_364 = _362<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _364)</td></tr></table>>];
    bb185__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_370 = _306<br/>StorageLive(_371)<br/>_371 = _146<br/></td></tr><tr><td align="left">_369 = &lt;u64 as SafeMath&gt;::safe_add(move _370, move _371)</td></tr></table>>];
    bb187__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">_368 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _369)</td></tr></table>>];
    bb188__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>_372 = discriminant(_368)<br/></td></tr><tr><td align="left">switchInt(move _372)</td></tr></table>>];
    bb189__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_376)<br/>_376 = ((_368 as Continue).0: u64)<br/>_367 = _376<br/>StorageDead(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>_379 = &amp;_47<br/></td></tr><tr><td align="left">_378 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _379)</td></tr></table>>];
    bb190__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageLive(_373)<br/>_373 = ((_368 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_375)<br/>_375 = _373<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _375)</td></tr></table>>];
    bb191__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_373)<br/>StorageDead(_367)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_297)<br/>StorageDead(_280)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_129)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_87)<br/>_383 = const false<br/>StorageDead(_74)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb192__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>_377 = (((*_378).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_0 = math::orders::standardize_base_asset_amount(move _367, move _377)</td></tr></table>>];
    bb193__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>StorageDead(_367)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_297)<br/>StorageDead(_280)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_129)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_87)<br/>_383 = const false<br/>StorageDead(_74)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb194__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_378)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_353)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/>StorageDead(_341)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_180)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">switchInt(_383)</td></tr></table>>];
    bb214__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_383 = const false<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb216__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left">return</td></tr></table>>];
    bb220__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">220 (cleanup)</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb221__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">221 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb222__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb223__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">223 (cleanup)</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb224__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">224 (cleanup)</td></tr><tr><td align="left">switchInt(_383)</td></tr></table>>];
    bb225__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">225 (cleanup)</td></tr><tr><td align="left" balign="left">_392 = discriminant(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_2614 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">226 (cleanup)</td></tr><tr><td align="left" balign="left">_393 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2614 -> bb1__0_2614 [label="return"];
    bb1__0_2614 -> bb2__0_2614 [label="return"];
    bb2__0_2614 -> bb3__0_2614 [label="return"];
    bb3__0_2614 -> bb4__0_2614 [label="return"];
    bb4__0_2614 -> bb5__0_2614 [label="0"];
    bb4__0_2614 -> bb7__0_2614 [label="1"];
    bb4__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb5__0_2614 -> bb9__0_2614 [label="return"];
    bb7__0_2614 -> bb8__0_2614 [label="return"];
    bb8__0_2614 -> bb219__0_2614 [label=""];
    bb9__0_2614 -> bb10__0_2614 [label="return"];
    bb10__0_2614 -> bb11__0_2614 [label="return"];
    bb11__0_2614 -> bb12__0_2614 [label="0"];
    bb11__0_2614 -> bb13__0_2614 [label="1"];
    bb11__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb12__0_2614 -> bb15__0_2614 [label="return"];
    bb13__0_2614 -> bb14__0_2614 [label="return"];
    bb14__0_2614 -> bb217__0_2614 [label=""];
    bb15__0_2614 -> bb16__0_2614 [label="return"];
    bb16__0_2614 -> bb17__0_2614 [label="0"];
    bb16__0_2614 -> bb18__0_2614 [label="1"];
    bb16__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb17__0_2614 -> bb20__0_2614 [label="return"];
    bb18__0_2614 -> bb19__0_2614 [label="return"];
    bb19__0_2614 -> bb217__0_2614 [label=""];
    bb20__0_2614 -> bb21__0_2614 [label="return"];
    bb20__0_2614 -> bb221__0_2614 [label="unwind"];
    bb21__0_2614 -> bb22__0_2614 [label="0"];
    bb21__0_2614 -> bb23__0_2614 [label="1"];
    bb21__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb22__0_2614 -> bb25__0_2614 [label="return"];
    bb22__0_2614 -> bb220__0_2614 [label="unwind"];
    bb23__0_2614 -> bb24__0_2614 [label="return"];
    bb23__0_2614 -> bb226__0_2614 [label="unwind"];
    bb24__0_2614 -> bb216__0_2614 [label=""];
    bb25__0_2614 -> bb26__0_2614 [label="return"];
    bb25__0_2614 -> bb220__0_2614 [label="unwind"];
    bb26__0_2614 -> bb27__0_2614 [label="return"];
    bb26__0_2614 -> bb220__0_2614 [label="unwind"];
    bb27__0_2614 -> bb28__0_2614 [label="return"];
    bb27__0_2614 -> bb220__0_2614 [label="unwind"];
    bb28__0_2614 -> bb29__0_2614 [label="0"];
    bb28__0_2614 -> bb30__0_2614 [label="1"];
    bb28__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb29__0_2614 -> bb32__0_2614 [label="return"];
    bb29__0_2614 -> bb220__0_2614 [label="unwind"];
    bb30__0_2614 -> bb31__0_2614 [label="return"];
    bb30__0_2614 -> bb220__0_2614 [label="unwind"];
    bb31__0_2614 -> bb215__0_2614 [label=""];
    bb32__0_2614 -> bb33__0_2614 [label="return"];
    bb32__0_2614 -> bb220__0_2614 [label="unwind"];
    bb33__0_2614 -> bb34__0_2614 [label="return"];
    bb33__0_2614 -> bb220__0_2614 [label="unwind"];
    bb34__0_2614 -> bb35__0_2614 [label="0"];
    bb34__0_2614 -> bb36__0_2614 [label="1"];
    bb34__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb35__0_2614 -> bb38__0_2614 [label="return"];
    bb35__0_2614 -> bb224__0_2614 [label="unwind"];
    bb36__0_2614 -> bb37__0_2614 [label="return"];
    bb36__0_2614 -> bb225__0_2614 [label="unwind"];
    bb37__0_2614 -> bb214__0_2614 [label=""];
    bb38__0_2614 -> bb39__0_2614 [label="return"];
    bb38__0_2614 -> bb224__0_2614 [label="unwind"];
    bb39__0_2614 -> bb40__0_2614 [label="return"];
    bb39__0_2614 -> bb224__0_2614 [label="unwind"];
    bb40__0_2614 -> bb41__0_2614 [label="return"];
    bb40__0_2614 -> bb224__0_2614 [label="unwind"];
    bb41__0_2614 -> bb42__0_2614 [label="0"];
    bb41__0_2614 -> bb43__0_2614 [label="1"];
    bb41__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb42__0_2614 -> bb45__0_2614 [label="return"];
    bb42__0_2614 -> bb224__0_2614 [label="unwind"];
    bb43__0_2614 -> bb44__0_2614 [label="return"];
    bb43__0_2614 -> bb224__0_2614 [label="unwind"];
    bb44__0_2614 -> bb213__0_2614 [label=""];
    bb45__0_2614 -> bb46__0_2614 [label="return"];
    bb45__0_2614 -> bb224__0_2614 [label="unwind"];
    bb46__0_2614 -> bb47__0_2614 [label="return"];
    bb46__0_2614 -> bb224__0_2614 [label="unwind"];
    bb47__0_2614 -> bb48__0_2614 [label="success"];
    bb47__0_2614 -> bb224__0_2614 [label="unwind"];
    bb48__0_2614 -> bb49__0_2614 [label="return"];
    bb48__0_2614 -> bb224__0_2614 [label="unwind"];
    bb49__0_2614 -> bb50__0_2614 [label="return"];
    bb49__0_2614 -> bb224__0_2614 [label="unwind"];
    bb50__0_2614 -> bb51__0_2614 [label="return"];
    bb50__0_2614 -> bb224__0_2614 [label="unwind"];
    bb51__0_2614 -> bb52__0_2614 [label="0"];
    bb51__0_2614 -> bb53__0_2614 [label="1"];
    bb51__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb52__0_2614 -> bb55__0_2614 [label="return"];
    bb52__0_2614 -> bb224__0_2614 [label="unwind"];
    bb53__0_2614 -> bb54__0_2614 [label="return"];
    bb53__0_2614 -> bb224__0_2614 [label="unwind"];
    bb54__0_2614 -> bb212__0_2614 [label=""];
    bb55__0_2614 -> bb56__0_2614 [label="return"];
    bb55__0_2614 -> bb224__0_2614 [label="unwind"];
    bb56__0_2614 -> bb57__0_2614 [label="return"];
    bb56__0_2614 -> bb224__0_2614 [label="unwind"];
    bb57__0_2614 -> bb58__0_2614 [label="return"];
    bb57__0_2614 -> bb224__0_2614 [label="unwind"];
    bb58__0_2614 -> bb59__0_2614 [label="0"];
    bb58__0_2614 -> bb60__0_2614 [label="1"];
    bb58__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb59__0_2614 -> bb62__0_2614 [label="return"];
    bb59__0_2614 -> bb224__0_2614 [label="unwind"];
    bb60__0_2614 -> bb61__0_2614 [label="return"];
    bb60__0_2614 -> bb224__0_2614 [label="unwind"];
    bb61__0_2614 -> bb211__0_2614 [label=""];
    bb62__0_2614 -> bb100__0_2614 [label="0"];
    bb62__0_2614 -> bb63__0_2614 [label="otherwise"];
    bb63__0_2614 -> bb64__0_2614 [label="return"];
    bb63__0_2614 -> bb224__0_2614 [label="unwind"];
    bb64__0_2614 -> bb99__0_2614 [label="0"];
    bb64__0_2614 -> bb65__0_2614 [label="otherwise"];
    bb65__0_2614 -> bb66__0_2614 [label="return"];
    bb65__0_2614 -> bb224__0_2614 [label="unwind"];
    bb66__0_2614 -> bb67__0_2614 [label="return"];
    bb66__0_2614 -> bb224__0_2614 [label="unwind"];
    bb67__0_2614 -> bb68__0_2614 [label="return"];
    bb67__0_2614 -> bb224__0_2614 [label="unwind"];
    bb68__0_2614 -> bb69__0_2614 [label="0"];
    bb68__0_2614 -> bb70__0_2614 [label="1"];
    bb68__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb69__0_2614 -> bb72__0_2614 [label="return"];
    bb69__0_2614 -> bb224__0_2614 [label="unwind"];
    bb70__0_2614 -> bb71__0_2614 [label="return"];
    bb70__0_2614 -> bb224__0_2614 [label="unwind"];
    bb71__0_2614 -> bb208__0_2614 [label=""];
    bb72__0_2614 -> bb73__0_2614 [label="return"];
    bb72__0_2614 -> bb224__0_2614 [label="unwind"];
    bb73__0_2614 -> bb74__0_2614 [label="0"];
    bb73__0_2614 -> bb75__0_2614 [label="1"];
    bb73__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb74__0_2614 -> bb77__0_2614 [label="return"];
    bb74__0_2614 -> bb224__0_2614 [label="unwind"];
    bb75__0_2614 -> bb76__0_2614 [label="return"];
    bb75__0_2614 -> bb224__0_2614 [label="unwind"];
    bb76__0_2614 -> bb208__0_2614 [label=""];
    bb77__0_2614 -> bb78__0_2614 [label="return"];
    bb77__0_2614 -> bb224__0_2614 [label="unwind"];
    bb78__0_2614 -> bb79__0_2614 [label="return"];
    bb78__0_2614 -> bb224__0_2614 [label="unwind"];
    bb79__0_2614 -> bb80__0_2614 [label="return"];
    bb79__0_2614 -> bb224__0_2614 [label="unwind"];
    bb80__0_2614 -> bb81__0_2614 [label="0"];
    bb80__0_2614 -> bb82__0_2614 [label="1"];
    bb80__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb81__0_2614 -> bb84__0_2614 [label="return"];
    bb81__0_2614 -> bb224__0_2614 [label="unwind"];
    bb82__0_2614 -> bb83__0_2614 [label="return"];
    bb82__0_2614 -> bb224__0_2614 [label="unwind"];
    bb83__0_2614 -> bb205__0_2614 [label=""];
    bb84__0_2614 -> bb85__0_2614 [label="return"];
    bb84__0_2614 -> bb224__0_2614 [label="unwind"];
    bb85__0_2614 -> bb86__0_2614 [label="0"];
    bb85__0_2614 -> bb87__0_2614 [label="1"];
    bb85__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb86__0_2614 -> bb89__0_2614 [label="return"];
    bb86__0_2614 -> bb224__0_2614 [label="unwind"];
    bb87__0_2614 -> bb88__0_2614 [label="return"];
    bb87__0_2614 -> bb224__0_2614 [label="unwind"];
    bb88__0_2614 -> bb205__0_2614 [label=""];
    bb89__0_2614 -> bb90__0_2614 [label="return"];
    bb89__0_2614 -> bb224__0_2614 [label="unwind"];
    bb90__0_2614 -> bb91__0_2614 [label="0"];
    bb90__0_2614 -> bb92__0_2614 [label="1"];
    bb90__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb91__0_2614 -> bb94__0_2614 [label="return"];
    bb91__0_2614 -> bb224__0_2614 [label="unwind"];
    bb92__0_2614 -> bb93__0_2614 [label="return"];
    bb92__0_2614 -> bb224__0_2614 [label="unwind"];
    bb93__0_2614 -> bb206__0_2614 [label=""];
    bb94__0_2614 -> bb95__0_2614 [label="return"];
    bb94__0_2614 -> bb224__0_2614 [label="unwind"];
    bb95__0_2614 -> bb96__0_2614 [label="0"];
    bb95__0_2614 -> bb97__0_2614 [label="1"];
    bb95__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb96__0_2614 -> bb141__0_2614 [label=""];
    bb97__0_2614 -> bb98__0_2614 [label="return"];
    bb97__0_2614 -> bb224__0_2614 [label="unwind"];
    bb98__0_2614 -> bb207__0_2614 [label=""];
    bb99__0_2614 -> bb101__0_2614 [label=""];
    bb100__0_2614 -> bb101__0_2614 [label=""];
    bb101__0_2614 -> bb138__0_2614 [label="0"];
    bb101__0_2614 -> bb102__0_2614 [label="otherwise"];
    bb102__0_2614 -> bb103__0_2614 [label="return"];
    bb102__0_2614 -> bb224__0_2614 [label="unwind"];
    bb103__0_2614 -> bb137__0_2614 [label="0"];
    bb103__0_2614 -> bb104__0_2614 [label="otherwise"];
    bb104__0_2614 -> bb105__0_2614 [label="return"];
    bb104__0_2614 -> bb224__0_2614 [label="unwind"];
    bb105__0_2614 -> bb106__0_2614 [label="return"];
    bb105__0_2614 -> bb224__0_2614 [label="unwind"];
    bb106__0_2614 -> bb107__0_2614 [label="0"];
    bb106__0_2614 -> bb108__0_2614 [label="1"];
    bb106__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb107__0_2614 -> bb110__0_2614 [label="return"];
    bb107__0_2614 -> bb224__0_2614 [label="unwind"];
    bb108__0_2614 -> bb109__0_2614 [label="return"];
    bb108__0_2614 -> bb224__0_2614 [label="unwind"];
    bb109__0_2614 -> bb203__0_2614 [label=""];
    bb110__0_2614 -> bb111__0_2614 [label="return"];
    bb110__0_2614 -> bb224__0_2614 [label="unwind"];
    bb111__0_2614 -> bb112__0_2614 [label="0"];
    bb111__0_2614 -> bb113__0_2614 [label="1"];
    bb111__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb112__0_2614 -> bb115__0_2614 [label="return"];
    bb112__0_2614 -> bb224__0_2614 [label="unwind"];
    bb113__0_2614 -> bb114__0_2614 [label="return"];
    bb113__0_2614 -> bb224__0_2614 [label="unwind"];
    bb114__0_2614 -> bb203__0_2614 [label=""];
    bb115__0_2614 -> bb116__0_2614 [label="return"];
    bb115__0_2614 -> bb224__0_2614 [label="unwind"];
    bb116__0_2614 -> bb117__0_2614 [label="return"];
    bb116__0_2614 -> bb224__0_2614 [label="unwind"];
    bb117__0_2614 -> bb118__0_2614 [label="return"];
    bb117__0_2614 -> bb224__0_2614 [label="unwind"];
    bb118__0_2614 -> bb119__0_2614 [label="0"];
    bb118__0_2614 -> bb120__0_2614 [label="1"];
    bb118__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb119__0_2614 -> bb122__0_2614 [label="return"];
    bb119__0_2614 -> bb224__0_2614 [label="unwind"];
    bb120__0_2614 -> bb121__0_2614 [label="return"];
    bb120__0_2614 -> bb224__0_2614 [label="unwind"];
    bb121__0_2614 -> bb200__0_2614 [label=""];
    bb122__0_2614 -> bb123__0_2614 [label="return"];
    bb122__0_2614 -> bb224__0_2614 [label="unwind"];
    bb123__0_2614 -> bb124__0_2614 [label="0"];
    bb123__0_2614 -> bb125__0_2614 [label="1"];
    bb123__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb124__0_2614 -> bb127__0_2614 [label="return"];
    bb124__0_2614 -> bb224__0_2614 [label="unwind"];
    bb125__0_2614 -> bb126__0_2614 [label="return"];
    bb125__0_2614 -> bb224__0_2614 [label="unwind"];
    bb126__0_2614 -> bb200__0_2614 [label=""];
    bb127__0_2614 -> bb128__0_2614 [label="return"];
    bb127__0_2614 -> bb224__0_2614 [label="unwind"];
    bb128__0_2614 -> bb129__0_2614 [label="0"];
    bb128__0_2614 -> bb130__0_2614 [label="1"];
    bb128__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb129__0_2614 -> bb132__0_2614 [label="return"];
    bb129__0_2614 -> bb224__0_2614 [label="unwind"];
    bb130__0_2614 -> bb131__0_2614 [label="return"];
    bb130__0_2614 -> bb224__0_2614 [label="unwind"];
    bb131__0_2614 -> bb201__0_2614 [label=""];
    bb132__0_2614 -> bb133__0_2614 [label="return"];
    bb132__0_2614 -> bb224__0_2614 [label="unwind"];
    bb133__0_2614 -> bb134__0_2614 [label="0"];
    bb133__0_2614 -> bb135__0_2614 [label="1"];
    bb133__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb134__0_2614 -> bb140__0_2614 [label=""];
    bb135__0_2614 -> bb136__0_2614 [label="return"];
    bb135__0_2614 -> bb224__0_2614 [label="unwind"];
    bb136__0_2614 -> bb202__0_2614 [label=""];
    bb137__0_2614 -> bb139__0_2614 [label=""];
    bb138__0_2614 -> bb139__0_2614 [label=""];
    bb139__0_2614 -> bb140__0_2614 [label=""];
    bb140__0_2614 -> bb141__0_2614 [label=""];
    bb141__0_2614 -> bb145__0_2614 [label="0"];
    bb141__0_2614 -> bb142__0_2614 [label="otherwise"];
    bb142__0_2614 -> bb143__0_2614 [label="return"];
    bb142__0_2614 -> bb224__0_2614 [label="unwind"];
    bb143__0_2614 -> bb144__0_2614 [label="return"];
    bb143__0_2614 -> bb224__0_2614 [label="unwind"];
    bb144__0_2614 -> bb210__0_2614 [label=""];
    bb145__0_2614 -> bb146__0_2614 [label="return"];
    bb145__0_2614 -> bb224__0_2614 [label="unwind"];
    bb146__0_2614 -> bb147__0_2614 [label="return"];
    bb146__0_2614 -> bb224__0_2614 [label="unwind"];
    bb147__0_2614 -> bb149__0_2614 [label="0"];
    bb147__0_2614 -> bb148__0_2614 [label="otherwise"];
    bb148__0_2614 -> bb150__0_2614 [label="return"];
    bb148__0_2614 -> bb224__0_2614 [label="unwind"];
    bb149__0_2614 -> bb151__0_2614 [label=""];
    bb150__0_2614 -> bb152__0_2614 [label="0"];
    bb150__0_2614 -> bb151__0_2614 [label="otherwise"];
    bb151__0_2614 -> bb158__0_2614 [label=""];
    bb152__0_2614 -> bb153__0_2614 [label="return"];
    bb152__0_2614 -> bb224__0_2614 [label="unwind"];
    bb153__0_2614 -> bb154__0_2614 [label="return"];
    bb153__0_2614 -> bb224__0_2614 [label="unwind"];
    bb154__0_2614 -> bb155__0_2614 [label="0"];
    bb154__0_2614 -> bb156__0_2614 [label="1"];
    bb154__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb155__0_2614 -> bb158__0_2614 [label=""];
    bb156__0_2614 -> bb157__0_2614 [label="return"];
    bb156__0_2614 -> bb224__0_2614 [label="unwind"];
    bb157__0_2614 -> bb199__0_2614 [label=""];
    bb158__0_2614 -> bb159__0_2614 [label="return"];
    bb158__0_2614 -> bb224__0_2614 [label="unwind"];
    bb159__0_2614 -> bb160__0_2614 [label=""];
    bb160__0_2614 -> bb161__0_2614 [label="return"];
    bb160__0_2614 -> bb224__0_2614 [label="unwind"];
    bb161__0_2614 -> bb163__0_2614 [label="0"];
    bb161__0_2614 -> bb162__0_2614 [label="1"];
    bb161__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb162__0_2614 -> bb164__0_2614 [label="return"];
    bb162__0_2614 -> bb224__0_2614 [label="unwind"];
    bb163__0_2614 -> bb186__0_2614 [label=""];
    bb164__0_2614 -> bb165__0_2614 [label="return"];
    bb164__0_2614 -> bb224__0_2614 [label="unwind"];
    bb165__0_2614 -> bb166__0_2614 [label="0"];
    bb165__0_2614 -> bb167__0_2614 [label="1"];
    bb165__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb166__0_2614 -> bb170__0_2614 [label="0"];
    bb166__0_2614 -> bb169__0_2614 [label="otherwise"];
    bb167__0_2614 -> bb168__0_2614 [label="return"];
    bb167__0_2614 -> bb224__0_2614 [label="unwind"];
    bb168__0_2614 -> bb198__0_2614 [label=""];
    bb169__0_2614 -> bb186__0_2614 [label=""];
    bb170__0_2614 -> bb171__0_2614 [label="return"];
    bb170__0_2614 -> bb224__0_2614 [label="unwind"];
    bb171__0_2614 -> bb172__0_2614 [label="return"];
    bb171__0_2614 -> bb224__0_2614 [label="unwind"];
    bb172__0_2614 -> bb173__0_2614 [label="0"];
    bb172__0_2614 -> bb174__0_2614 [label="1"];
    bb172__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb173__0_2614 -> bb176__0_2614 [label="return"];
    bb173__0_2614 -> bb224__0_2614 [label="unwind"];
    bb174__0_2614 -> bb175__0_2614 [label="return"];
    bb174__0_2614 -> bb224__0_2614 [label="unwind"];
    bb175__0_2614 -> bb197__0_2614 [label=""];
    bb176__0_2614 -> bb177__0_2614 [label="return"];
    bb176__0_2614 -> bb224__0_2614 [label="unwind"];
    bb177__0_2614 -> bb178__0_2614 [label="0"];
    bb177__0_2614 -> bb179__0_2614 [label="1"];
    bb177__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb178__0_2614 -> bb181__0_2614 [label="return"];
    bb178__0_2614 -> bb224__0_2614 [label="unwind"];
    bb179__0_2614 -> bb180__0_2614 [label="return"];
    bb179__0_2614 -> bb224__0_2614 [label="unwind"];
    bb180__0_2614 -> bb196__0_2614 [label=""];
    bb181__0_2614 -> bb182__0_2614 [label="return"];
    bb181__0_2614 -> bb224__0_2614 [label="unwind"];
    bb182__0_2614 -> bb183__0_2614 [label="0"];
    bb182__0_2614 -> bb184__0_2614 [label="1"];
    bb182__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb183__0_2614 -> bb160__0_2614 [label=""];
    bb184__0_2614 -> bb185__0_2614 [label="return"];
    bb184__0_2614 -> bb224__0_2614 [label="unwind"];
    bb185__0_2614 -> bb196__0_2614 [label=""];
    bb186__0_2614 -> bb187__0_2614 [label="return"];
    bb186__0_2614 -> bb224__0_2614 [label="unwind"];
    bb187__0_2614 -> bb188__0_2614 [label="return"];
    bb187__0_2614 -> bb224__0_2614 [label="unwind"];
    bb188__0_2614 -> bb189__0_2614 [label="0"];
    bb188__0_2614 -> bb190__0_2614 [label="1"];
    bb188__0_2614 -> bb6__0_2614 [label="otherwise"];
    bb189__0_2614 -> bb192__0_2614 [label="return"];
    bb189__0_2614 -> bb224__0_2614 [label="unwind"];
    bb190__0_2614 -> bb191__0_2614 [label="return"];
    bb190__0_2614 -> bb224__0_2614 [label="unwind"];
    bb191__0_2614 -> bb195__0_2614 [label="return"];
    bb191__0_2614 -> bb221__0_2614 [label="unwind"];
    bb192__0_2614 -> bb193__0_2614 [label="return"];
    bb192__0_2614 -> bb224__0_2614 [label="unwind"];
    bb193__0_2614 -> bb194__0_2614 [label="return"];
    bb193__0_2614 -> bb221__0_2614 [label="unwind"];
    bb194__0_2614 -> bb219__0_2614 [label=""];
    bb195__0_2614 -> bb219__0_2614 [label=""];
    bb196__0_2614 -> bb197__0_2614 [label=""];
    bb197__0_2614 -> bb198__0_2614 [label=""];
    bb198__0_2614 -> bb199__0_2614 [label=""];
    bb199__0_2614 -> bb210__0_2614 [label=""];
    bb200__0_2614 -> bb201__0_2614 [label=""];
    bb201__0_2614 -> bb202__0_2614 [label=""];
    bb202__0_2614 -> bb204__0_2614 [label=""];
    bb203__0_2614 -> bb204__0_2614 [label=""];
    bb204__0_2614 -> bb209__0_2614 [label=""];
    bb205__0_2614 -> bb206__0_2614 [label=""];
    bb206__0_2614 -> bb207__0_2614 [label=""];
    bb207__0_2614 -> bb209__0_2614 [label=""];
    bb208__0_2614 -> bb209__0_2614 [label=""];
    bb209__0_2614 -> bb210__0_2614 [label=""];
    bb210__0_2614 -> bb211__0_2614 [label=""];
    bb211__0_2614 -> bb212__0_2614 [label=""];
    bb212__0_2614 -> bb213__0_2614 [label=""];
    bb213__0_2614 -> bb214__0_2614 [label="0"];
    bb213__0_2614 -> bb222__0_2614 [label="otherwise"];
    bb214__0_2614 -> bb215__0_2614 [label=""];
    bb215__0_2614 -> bb216__0_2614 [label="return"];
    bb215__0_2614 -> bb221__0_2614 [label="unwind"];
    bb216__0_2614 -> bb218__0_2614 [label=""];
    bb217__0_2614 -> bb218__0_2614 [label=""];
    bb218__0_2614 -> bb219__0_2614 [label=""];
    bb220__0_2614 -> bb221__0_2614 [label="return"];
    bb222__0_2614 -> bb214__0_2614 [label="return"];
    bb222__0_2614 -> bb220__0_2614 [label="unwind"];
    bb223__0_2614 -> bb220__0_2614 [label="return"];
    bb224__0_2614 -> bb220__0_2614 [label="0"];
    bb224__0_2614 -> bb223__0_2614 [label="otherwise"];
    bb225__0_2614 -> bb220__0_2614 [label=""];
    bb226__0_2614 -> bb221__0_2614 [label=""];
}
