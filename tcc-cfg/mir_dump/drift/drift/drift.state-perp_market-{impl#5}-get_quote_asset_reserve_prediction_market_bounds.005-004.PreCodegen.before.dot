digraph Mir_0_3808 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpMarket::get_quote_asset_reserve_prediction_market_bounds(_1: &amp;ReErased state::perp_market::PerpMarket, _2: controller::position::PositionDirection) -&gt; std::result::Result&lt;(u128, u128), error::ErrorCode&gt;<br align="left"/>let mut _3: u128;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: &amp;ReErased u128;<br align="left"/>let _7: u128;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: u128;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u128;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let _36: ();<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _39: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _40: controller::position::PositionDirection;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _50: u128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: u128;<br align="left"/>let mut _59: u128;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: u128;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: u128;<br align="left"/>let mut _70: u128;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: u128;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _82: u128;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _85: u128;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _87: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _88: u128;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: u128;<br align="left"/>let mut _94: u128;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: u128;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: u128;<br align="left"/>let mut _105: u128;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: u128;<br align="left"/>let mut _111: (u128, u128);<br align="left"/>let mut _112: u128;<br align="left"/>let mut _113: u128;<br align="left"/>let mut _114: &amp;ReErased controller::position::PositionDirection;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug direction =&gt; _2;<br align="left"/>debug quote_asset_reserve_lower_bound =&gt; _3;<br align="left"/>debug peg_sqrt =&gt; _4;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug quote_asset_reserve_upper_bound =&gt; _17;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>>;
    bb0__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = const 0_u128<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = (((*_1).1: state::perp_market::AMM).11: u128)<br/></td></tr><tr><td align="left">_10 = &lt;u128 as SafeMath&gt;::safe_mul(move _11, const _)</td></tr></table>>];
    bb1__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb2__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_12 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Continue).0: u128)<br/>_8 = _16<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_7 = core::num::&lt;impl u128&gt;::saturating_add(move _8, const 1_u128)</td></tr></table>>];
    bb4__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_6 = &amp;_7<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = &lt;u128 as Roots&gt;::nth_root(move _6, const 2_u32)</td></tr></table>>];
    bb8__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = core::num::&lt;impl u128&gt;::saturating_add(move _5, const 1_u128)</td></tr></table>>];
    bb9__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = (((*_1).1: state::perp_market::AMM).10: u128)<br/>StorageLive(_24)<br/>_24 = _4<br/></td></tr><tr><td align="left">_22 = &lt;u128 as SafeMath&gt;::safe_mul(move _23, move _24)</td></tr></table>>];
    bb10__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb11__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_25 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_21 as Continue).0: u128)<br/>_20 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = (((*_1).1: state::perp_market::AMM).11: u128)<br/></td></tr><tr><td align="left">_19 = &lt;u128 as SafeMath&gt;::safe_div(move _20, move _30)</td></tr></table>>];
    bb13__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb14__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb16__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_31 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb17__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_18 as Continue).0: u128)<br/>_17 = _35<br/>StorageDead(_35)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;_2<br/>StorageLive(_39)<br/>_114 = const _<br/>_39 = &amp;(*_114)<br/></td></tr><tr><td align="left">_37 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _38, move _39)</td></tr></table>>];
    bb18__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb19__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb21__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = (((*_1).1: state::perp_market::AMM).10: u128)<br/></td></tr><tr><td align="left">_52 = &lt;u128 as SafeMath&gt;::safe_mul(move _53, const 22361_u128)</td></tr></table>>];
    bb22__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb23__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_54 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb24__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_51 as Continue).0: u128)<br/>_50 = _58<br/>StorageDead(_58)<br/>StorageLive(_59)<br/>_59 = _4<br/></td></tr><tr><td align="left">_49 = &lt;u128 as SafeMath&gt;::safe_mul(move _50, move _59)</td></tr></table>>];
    bb25__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb26__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb28__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_60 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb29__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_48 as Continue).0: u128)<br/>_47 = _64<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_46 = &lt;u128 as SafeMath&gt;::safe_div(move _47, const 100000_u128)</td></tr></table>>];
    bb30__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb31__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb33__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_65 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb34__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_45 as Continue).0: u128)<br/>_44 = _69<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>_70 = (((*_1).1: state::perp_market::AMM).11: u128)<br/></td></tr><tr><td align="left">_43 = &lt;u128 as SafeMath&gt;::safe_div(move _44, move _70)</td></tr></table>>];
    bb35__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb36__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb38__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_71 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb39__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_42 as Continue).0: u128)<br/>_41 = _75<br/>StorageDead(_75)<br/>_3 = move _41<br/>_36 = const ()<br/>StorageDead(_41)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb41__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = (((*_1).1: state::perp_market::AMM).10: u128)<br/></td></tr><tr><td align="left">_87 = &lt;u128 as SafeMath&gt;::safe_mul(move _88, const 97467_u128)</td></tr></table>>];
    bb43__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb44__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_89 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb45__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_86 as Continue).0: u128)<br/>_85 = _93<br/>StorageDead(_93)<br/>StorageLive(_94)<br/>_94 = _4<br/></td></tr><tr><td align="left">_84 = &lt;u128 as SafeMath&gt;::safe_mul(move _85, move _94)</td></tr></table>>];
    bb46__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb47__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb49__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_95 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb50__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_83 as Continue).0: u128)<br/>_82 = _99<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_81 = &lt;u128 as SafeMath&gt;::safe_div(move _82, const 100000_u128)</td></tr></table>>];
    bb51__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb52__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb54__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_100 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb55__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_80 as Continue).0: u128)<br/>_79 = _104<br/>StorageDead(_104)<br/>StorageLive(_105)<br/>_105 = (((*_1).1: state::perp_market::AMM).11: u128)<br/></td></tr><tr><td align="left">_78 = &lt;u128 as SafeMath&gt;::safe_div(move _79, move _105)</td></tr></table>>];
    bb56__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb57__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb59__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_106 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb60__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_77 as Continue).0: u128)<br/>_76 = _110<br/>StorageDead(_110)<br/>_17 = move _76<br/>_36 = const ()<br/>StorageDead(_76)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb62__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = _3<br/>StorageLive(_113)<br/>_113 = _17<br/>_111 = (move _112, move _113)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Ok(move _111)<br/>StorageDead(_111)<br/>StorageDead(_17)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3808 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3808 -> bb1__0_3808 [label="return"];
    bb1__0_3808 -> bb2__0_3808 [label="return"];
    bb2__0_3808 -> bb3__0_3808 [label="0"];
    bb2__0_3808 -> bb5__0_3808 [label="1"];
    bb2__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb3__0_3808 -> bb7__0_3808 [label="return"];
    bb5__0_3808 -> bb6__0_3808 [label="return"];
    bb6__0_3808 -> bb73__0_3808 [label=""];
    bb7__0_3808 -> bb8__0_3808 [label="return"];
    bb8__0_3808 -> bb9__0_3808 [label="return"];
    bb9__0_3808 -> bb10__0_3808 [label="return"];
    bb10__0_3808 -> bb11__0_3808 [label="return"];
    bb11__0_3808 -> bb12__0_3808 [label="0"];
    bb11__0_3808 -> bb13__0_3808 [label="1"];
    bb11__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb12__0_3808 -> bb15__0_3808 [label="return"];
    bb13__0_3808 -> bb14__0_3808 [label="return"];
    bb14__0_3808 -> bb71__0_3808 [label=""];
    bb15__0_3808 -> bb16__0_3808 [label="return"];
    bb16__0_3808 -> bb17__0_3808 [label="0"];
    bb16__0_3808 -> bb18__0_3808 [label="1"];
    bb16__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb17__0_3808 -> bb20__0_3808 [label="return"];
    bb18__0_3808 -> bb19__0_3808 [label="return"];
    bb19__0_3808 -> bb71__0_3808 [label=""];
    bb20__0_3808 -> bb42__0_3808 [label="0"];
    bb20__0_3808 -> bb21__0_3808 [label="otherwise"];
    bb21__0_3808 -> bb22__0_3808 [label="return"];
    bb22__0_3808 -> bb23__0_3808 [label="return"];
    bb23__0_3808 -> bb24__0_3808 [label="0"];
    bb23__0_3808 -> bb25__0_3808 [label="1"];
    bb23__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb24__0_3808 -> bb27__0_3808 [label="return"];
    bb25__0_3808 -> bb26__0_3808 [label="return"];
    bb26__0_3808 -> bb67__0_3808 [label=""];
    bb27__0_3808 -> bb28__0_3808 [label="return"];
    bb28__0_3808 -> bb29__0_3808 [label="0"];
    bb28__0_3808 -> bb30__0_3808 [label="1"];
    bb28__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb29__0_3808 -> bb32__0_3808 [label="return"];
    bb30__0_3808 -> bb31__0_3808 [label="return"];
    bb31__0_3808 -> bb67__0_3808 [label=""];
    bb32__0_3808 -> bb33__0_3808 [label="return"];
    bb33__0_3808 -> bb34__0_3808 [label="0"];
    bb33__0_3808 -> bb35__0_3808 [label="1"];
    bb33__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb34__0_3808 -> bb37__0_3808 [label="return"];
    bb35__0_3808 -> bb36__0_3808 [label="return"];
    bb36__0_3808 -> bb68__0_3808 [label=""];
    bb37__0_3808 -> bb38__0_3808 [label="return"];
    bb38__0_3808 -> bb39__0_3808 [label="0"];
    bb38__0_3808 -> bb40__0_3808 [label="1"];
    bb38__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb39__0_3808 -> bb63__0_3808 [label=""];
    bb40__0_3808 -> bb41__0_3808 [label="return"];
    bb41__0_3808 -> bb69__0_3808 [label=""];
    bb42__0_3808 -> bb43__0_3808 [label="return"];
    bb43__0_3808 -> bb44__0_3808 [label="return"];
    bb44__0_3808 -> bb45__0_3808 [label="0"];
    bb44__0_3808 -> bb46__0_3808 [label="1"];
    bb44__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb45__0_3808 -> bb48__0_3808 [label="return"];
    bb46__0_3808 -> bb47__0_3808 [label="return"];
    bb47__0_3808 -> bb64__0_3808 [label=""];
    bb48__0_3808 -> bb49__0_3808 [label="return"];
    bb49__0_3808 -> bb50__0_3808 [label="0"];
    bb49__0_3808 -> bb51__0_3808 [label="1"];
    bb49__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb50__0_3808 -> bb53__0_3808 [label="return"];
    bb51__0_3808 -> bb52__0_3808 [label="return"];
    bb52__0_3808 -> bb64__0_3808 [label=""];
    bb53__0_3808 -> bb54__0_3808 [label="return"];
    bb54__0_3808 -> bb55__0_3808 [label="0"];
    bb54__0_3808 -> bb56__0_3808 [label="1"];
    bb54__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb55__0_3808 -> bb58__0_3808 [label="return"];
    bb56__0_3808 -> bb57__0_3808 [label="return"];
    bb57__0_3808 -> bb65__0_3808 [label=""];
    bb58__0_3808 -> bb59__0_3808 [label="return"];
    bb59__0_3808 -> bb60__0_3808 [label="0"];
    bb59__0_3808 -> bb61__0_3808 [label="1"];
    bb59__0_3808 -> bb4__0_3808 [label="otherwise"];
    bb60__0_3808 -> bb63__0_3808 [label=""];
    bb61__0_3808 -> bb62__0_3808 [label="return"];
    bb62__0_3808 -> bb66__0_3808 [label=""];
    bb63__0_3808 -> bb74__0_3808 [label=""];
    bb64__0_3808 -> bb65__0_3808 [label=""];
    bb65__0_3808 -> bb66__0_3808 [label=""];
    bb66__0_3808 -> bb70__0_3808 [label=""];
    bb67__0_3808 -> bb68__0_3808 [label=""];
    bb68__0_3808 -> bb69__0_3808 [label=""];
    bb69__0_3808 -> bb70__0_3808 [label=""];
    bb70__0_3808 -> bb72__0_3808 [label=""];
    bb71__0_3808 -> bb72__0_3808 [label=""];
    bb72__0_3808 -> bb73__0_3808 [label=""];
    bb73__0_3808 -> bb74__0_3808 [label=""];
}
