digraph Mir_0_11781 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_place_and_make_spot_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::PlaceAndMake&lt;ReErased&gt;&gt;, _2: state::order_params::OrderParams, _3: u32, _4: instructions::keeper::SpotFulfillmentType) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _16: anchor_lang::prelude::Clock;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _18: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _23: anchor_lang::prelude::Clock;<br align="left"/>let _24: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _25: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _27: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _28: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _29: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _30: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _31: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _32: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _34: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _41: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _42: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _43: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _44: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: usize;<br align="left"/>let mut _47: *mut u8;<br align="left"/>let mut _48: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _49: u16;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: anchor_lang::prelude::Clock;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _58: anchor_lang::prelude::Clock;<br align="left"/>let mut _59: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _65: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let _66: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _67: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;)&gt;;<br align="left"/>let mut _69: std::result::Result&lt;(std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _70: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let _76: ();<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _79: bool;<br align="left"/>let mut _80: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _81: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _82: state::order_params::PostOnlyParam;<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _85: &amp;ReErased state::user::OrderType;<br align="left"/>let _86: state::user::OrderType;<br align="left"/>let mut _87: !;<br align="left"/>let _88: ();<br align="left"/>let mut _89: &amp;ReErased str;<br align="left"/>let _90: &amp;ReErased str;<br align="left"/>let mut _91: anchor_lang::error::Error;<br align="left"/>let mut _92: error::ErrorCode;<br align="left"/>let mut _93: &amp;ReErased Closure(DefId(0:11785 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _94: Closure(DefId(0:11785 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _95: ();<br align="left"/>let _96: u16;<br align="left"/>let mut _97: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _98: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let _101: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _102: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _103: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _104: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _105: &amp;ReErased u16;<br align="left"/>let _106: &amp;ReErased u16;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _112: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _114: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _115: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _121: std::boxed::Box&lt;state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _122: state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _124: std::result::Result&lt;state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _125: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _126: &amp;ReErased state::state::State;<br align="left"/>let _127: &amp;ReErased state::state::State;<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _129: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _130: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _131: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _132: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _133: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _134: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _135: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _136: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _137: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _138: i64;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _144: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _146: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _147: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased u16;<br align="left"/>let _149: &amp;ReErased u16;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _155: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _156: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _157: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _158: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _163: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _164: std::boxed::Box&lt;state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _165: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _166: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _167: std::result::Result&lt;state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _168: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _169: &amp;ReErased state::state::State;<br align="left"/>let _170: &amp;ReErased state::state::State;<br align="left"/>let mut _171: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _172: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _173: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _174: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _175: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _176: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _177: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _178: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _179: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _180: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _186: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _188: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _189: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _190: &amp;ReErased u16;<br align="left"/>let _191: &amp;ReErased u16;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _197: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _198: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _199: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _200: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _201: isize;<br align="left"/>let _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _203: !;<br align="left"/>let mut _204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _205: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _206: std::boxed::Box&lt;state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _207: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _208: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _209: std::result::Result&lt;state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _210: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _211: &amp;ReErased state::state::State;<br align="left"/>let _212: &amp;ReErased state::state::State;<br align="left"/>let mut _213: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _214: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _215: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _216: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _217: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _218: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _219: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _220: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _221: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _222: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _223: i64;<br align="left"/>let mut _224: isize;<br align="left"/>let _225: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _226: !;<br align="left"/>let mut _227: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _228: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _229: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _230: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _231: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _232: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _233: &amp;ReErased u16;<br align="left"/>let _234: &amp;ReErased u16;<br align="left"/>let mut _235: isize;<br align="left"/>let _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _237: !;<br align="left"/>let mut _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _239: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _240: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _242: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _243: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _244: isize;<br align="left"/>let _245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _246: !;<br align="left"/>let mut _247: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _248: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _249: std::boxed::Box&lt;state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _250: state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;;<br align="left"/>let mut _251: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;&gt;;<br align="left"/>let mut _252: std::result::Result&lt;state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _253: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _254: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _255: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _256: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _257: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _258: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _259: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _260: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _261: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;;<br align="left"/>let _267: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _268: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _269: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _270: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _271: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _272: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _273: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _274: Closure(DefId(0:11786 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _275: isize;<br align="left"/>let _276: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _277: !;<br align="left"/>let mut _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _279: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _280: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _281: &amp;ReErased state::user::User;<br align="left"/>let mut _282: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _283: ();<br align="left"/>let mut _284: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _285: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _286: &amp;ReErased state::state::State;<br align="left"/>let _287: &amp;ReErased state::state::State;<br align="left"/>let mut _288: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _289: &amp;ReErased mut state::user::User;<br align="left"/>let mut _290: &amp;ReErased mut state::user::User;<br align="left"/>let mut _291: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _292: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _293: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _294: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _295: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _296: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _297: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _298: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _299: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _300: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _301: state::order_params::OrderParams;<br align="left"/>let mut _302: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _303: isize;<br align="left"/>let _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _307: ();<br align="left"/>let _308: ();<br align="left"/>let mut _309: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _310: u32;<br align="left"/>let mut _311: &amp;ReErased state::user::User;<br align="left"/>let _312: &amp;ReErased state::user::User;<br align="left"/>let mut _313: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _314: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _315: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _316: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _317: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _318: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _319: Closure(DefId(0:11787 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _320: isize;<br align="left"/>let _321: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _322: !;<br align="left"/>let mut _323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _324: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _325: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _326: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _327: ();<br align="left"/>let mut _328: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _329: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _330: &amp;ReErased mut state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _331: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _332: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _333: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _334: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _335: isize;<br align="left"/>let _336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _337: !;<br align="left"/>let mut _338: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _339: ();<br align="left"/>let _340: ();<br align="left"/>let mut _341: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _342: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _343: &amp;ReErased mut state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _344: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _345: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _346: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _347: isize;<br align="left"/>let _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _349: !;<br align="left"/>let mut _350: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _351: ();<br align="left"/>let _352: u64;<br align="left"/>let mut _353: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _354: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _355: u32;<br align="left"/>let mut _356: &amp;ReErased state::state::State;<br align="left"/>let _357: &amp;ReErased state::state::State;<br align="left"/>let mut _358: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _359: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _360: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _361: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _362: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _363: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _364: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _365: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _366: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _367: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _368: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _369: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _370: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _371: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _372: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _373: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _374: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _375: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _376: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _377: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _378: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _379: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _380: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _381: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _382: u32;<br align="left"/>let mut _383: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _384: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _385: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _386: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _387: &amp;ReErased mut std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _388: isize;<br align="left"/>let _389: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _390: !;<br align="left"/>let mut _391: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _392: u64;<br align="left"/>let _393: bool;<br align="left"/>let mut _394: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _395: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _396: &amp;ReErased [state::user::Order];<br align="left"/>let mut _397: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let _398: &amp;ReErased state::user::User;<br align="left"/>let mut _399: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _400: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _401: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _402: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _403: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _404: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _405: Closure(DefId(0:11788 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#4}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _406: isize;<br align="left"/>let _407: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _408: !;<br align="left"/>let mut _409: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _410: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _411: Closure(DefId(0:11784 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#0}), [ReErased, ReErased, i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased u32,)]);<br align="left"/>let mut _412: &amp;ReErased u32;<br align="left"/>let _413: ();<br align="left"/>let mut _414: bool;<br align="left"/>let _415: ();<br align="left"/>let mut _416: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _417: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _418: u32;<br align="left"/>let mut _419: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _420: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _421: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _422: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _423: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _424: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _425: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _426: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _427: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _428: isize;<br align="left"/>let _429: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _430: !;<br align="left"/>let mut _431: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _432: ();<br align="left"/>let _433: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _434: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _435: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _436: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _437: &amp;ReErased u16;<br align="left"/>let _438: &amp;ReErased u16;<br align="left"/>let mut _439: isize;<br align="left"/>let _440: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _441: !;<br align="left"/>let mut _442: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _443: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _444: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _445: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _446: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _447: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _448: isize;<br align="left"/>let _449: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _450: !;<br align="left"/>let mut _451: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _452: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _453: ();<br align="left"/>let mut _454: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _455: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _456: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _457: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _458: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _459: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _460: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _461: isize;<br align="left"/>let _462: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _463: !;<br align="left"/>let mut _464: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _465: ();<br align="left"/>let mut _466: ();<br align="left"/>let mut _467: &amp;ReErased Closure(DefId(0:11785 ~ drift[d311]::instructions::user::handle_place_and_make_spot_order::{closure#1}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _468: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _469: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _470: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _471: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _472: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _473: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _474: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _475: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _476: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _477: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _478: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _479: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _480: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _481: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _482: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _483: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _484: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _485: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _486: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _487: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _488: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _489: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _490: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _491: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _492: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _493: &amp;ReErased mut instructions::user::PlaceAndMake&lt;ReErased&gt;;<br align="left"/>let mut _494: bool;<br align="left"/>let mut _495: bool;<br align="left"/>let mut _496: bool;<br align="left"/>let mut _497: bool;<br align="left"/>let mut _498: bool;<br align="left"/>let mut _499: bool;<br align="left"/>let mut _500: bool;<br align="left"/>let mut _501: bool;<br align="left"/>let mut _502: bool;<br align="left"/>let mut _503: isize;<br align="left"/>let mut _504: isize;<br align="left"/>let mut _505: isize;<br align="left"/>let mut _506: isize;<br align="left"/>let mut _507: isize;<br align="left"/>let mut _508: isize;<br align="left"/>let mut _509: isize;<br align="left"/>let mut _510: isize;<br align="left"/>let mut _511: isize;<br align="left"/>let mut _512: isize;<br align="left"/>let mut _513: isize;<br align="left"/>let mut _514: isize;<br align="left"/>let mut _515: isize;<br align="left"/>let mut _516: isize;<br align="left"/>let mut _517: isize;<br align="left"/>let mut _518: isize;<br align="left"/>let mut _519: isize;<br align="left"/>let mut _520: isize;<br align="left"/>let mut _521: isize;<br align="left"/>let mut _522: isize;<br align="left"/>let mut _523: isize;<br align="left"/>let mut _524: isize;<br align="left"/>let mut _525: isize;<br align="left"/>let mut _526: isize;<br align="left"/>let mut _527: isize;<br align="left"/>let mut _528: isize;<br align="left"/>let mut _529: isize;<br align="left"/>let mut _530: isize;<br align="left"/>let mut _531: isize;<br align="left"/>let mut _532: isize;<br align="left"/>let mut _533: isize;<br align="left"/>let mut _534: isize;<br align="left"/>let mut _535: isize;<br align="left"/>let mut _536: isize;<br align="left"/>let mut _537: isize;<br align="left"/>let mut _538: isize;<br align="left"/>let mut _539: isize;<br align="left"/>let mut _540: isize;<br align="left"/>let mut _541: isize;<br align="left"/>let mut _542: isize;<br align="left"/>let mut _543: isize;<br align="left"/>let mut _544: isize;<br align="left"/>let mut _545: isize;<br align="left"/>let mut _546: isize;<br align="left"/>let mut _547: isize;<br align="left"/>let mut _548: isize;<br align="left"/>let mut _549: isize;<br align="left"/>let mut _550: isize;<br align="left"/>let mut _551: isize;<br align="left"/>let mut _552: isize;<br align="left"/>let mut _553: isize;<br align="left"/>let mut _554: isize;<br align="left"/>let mut _555: isize;<br align="left"/>let mut _556: isize;<br align="left"/>let mut _557: isize;<br align="left"/>let mut _558: isize;<br align="left"/>let mut _559: isize;<br align="left"/>let mut _560: isize;<br align="left"/>let mut _561: isize;<br align="left"/>let mut _562: isize;<br align="left"/>let mut _563: isize;<br align="left"/>let mut _564: isize;<br align="left"/>let mut _565: isize;<br align="left"/>let mut _566: isize;<br align="left"/>let mut _567: isize;<br align="left"/>let mut _568: isize;<br align="left"/>let mut _569: isize;<br align="left"/>let mut _570: isize;<br align="left"/>let mut _571: isize;<br align="left"/>let mut _572: isize;<br align="left"/>let mut _573: isize;<br align="left"/>let mut _574: isize;<br align="left"/>let mut _575: isize;<br align="left"/>let mut _576: isize;<br align="left"/>let mut _577: isize;<br align="left"/>let mut _578: isize;<br align="left"/>let mut _579: isize;<br align="left"/>let mut _580: isize;<br align="left"/>let mut _581: isize;<br align="left"/>let mut _582: isize;<br align="left"/>let mut _583: isize;<br align="left"/>let mut _584: isize;<br align="left"/>let mut _585: isize;<br align="left"/>let mut _586: isize;<br align="left"/>let mut _587: isize;<br align="left"/>let mut _588: isize;<br align="left"/>let mut _589: isize;<br align="left"/>let mut _590: isize;<br align="left"/>let mut _591: isize;<br align="left"/>let mut _592: isize;<br align="left"/>let mut _593: isize;<br align="left"/>let mut _594: isize;<br align="left"/>let mut _595: isize;<br align="left"/>let mut _596: isize;<br align="left"/>let mut _597: isize;<br align="left"/>let mut _598: isize;<br align="left"/>let mut _599: isize;<br align="left"/>let mut _600: isize;<br align="left"/>let mut _601: isize;<br align="left"/>let mut _602: isize;<br align="left"/>let mut _603: isize;<br align="left"/>let mut _604: isize;<br align="left"/>let mut _605: isize;<br align="left"/>let mut _606: isize;<br align="left"/>let mut _607: isize;<br align="left"/>let mut _608: isize;<br align="left"/>let mut _609: isize;<br align="left"/>let mut _610: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _611: *const [u16; 2_usize];<br align="left"/>let mut _612: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _613: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _614: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _615: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _616: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _617: *const dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _618: *const ();<br align="left"/>let mut _619: usize;<br align="left"/>let mut _620: usize;<br align="left"/>let mut _621: usize;<br align="left"/>let mut _622: usize;<br align="left"/>let mut _623: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug taker_order_id =&gt; _3;<br align="left"/>debug fulfillment_type =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug clock =&gt; _15;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug state =&gt; _24;<br align="left"/>debug remaining_accounts_iter =&gt; _25;<br align="left"/>debug perp_market_map =&gt; _29;<br align="left"/>debug spot_market_map =&gt; _30;<br align="left"/>debug oracle_map =&gt; _31;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug _referrer =&gt; _65;<br align="left"/>debug _referrer_stats =&gt; _66;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug market_index =&gt; _96;<br align="left"/>debug fulfillment_params =&gt; _97;<br align="left"/>debug base_market =&gt; _101;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug quote_market =&gt; _112;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>debug base_market =&gt; _144;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug quote_market =&gt; _155;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug base_market =&gt; _186;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug quote_market =&gt; _197;<br align="left"/>debug residual =&gt; _202;<br align="left"/>debug val =&gt; _205;<br align="left"/>debug residual =&gt; _225;<br align="left"/>debug val =&gt; _228;<br align="left"/>debug base_market =&gt; _229;<br align="left"/>debug residual =&gt; _236;<br align="left"/>debug val =&gt; _239;<br align="left"/>debug quote_market =&gt; _240;<br align="left"/>debug residual =&gt; _245;<br align="left"/>debug val =&gt; _248;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>debug user_key =&gt; _267;<br align="left"/>debug user =&gt; _269;<br align="left"/>debug residual =&gt; _276;<br align="left"/>debug val =&gt; _279;<br align="left"/>debug authority =&gt; _280;<br align="left"/>debug residual =&gt; _304;<br align="left"/>debug val =&gt; _307;<br align="left"/>debug order_id =&gt; _310;<br align="left"/>debug residual =&gt; _321;<br align="left"/>debug val =&gt; _324;<br align="left"/>debug makers_and_referrer =&gt; _325;<br align="left"/>debug makers_and_referrer_stats =&gt; _326;<br align="left"/>debug residual =&gt; _336;<br align="left"/>debug val =&gt; _339;<br align="left"/>debug residual =&gt; _348;<br align="left"/>debug val =&gt; _351;<br align="left"/>debug residual =&gt; _389;<br align="left"/>debug val =&gt; _392;<br align="left"/>debug order_exists =&gt; _393;<br align="left"/>debug residual =&gt; _407;<br align="left"/>debug val =&gt; _410;<br align="left"/>debug residual =&gt; _429;<br align="left"/>debug val =&gt; _432;<br align="left"/>debug base_market =&gt; _433;<br align="left"/>debug residual =&gt; _440;<br align="left"/>debug val =&gt; _443;<br align="left"/>debug quote_market =&gt; _444;<br align="left"/>debug residual =&gt; _449;<br align="left"/>debug val =&gt; _452;<br align="left"/>debug residual =&gt; _462;<br align="left"/>debug val =&gt; _465;<br align="left"/>>;
    bb0__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_494 = const false<br/>_496 = const false<br/>_495 = const false<br/>_502 = const false<br/>_501 = const false<br/>_500 = const false<br/>_499 = const false<br/>_498 = const false<br/>_497 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_470 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_9 = &amp;((*_470).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_471 = deref_copy (*_9)<br/>_610 = (((_471.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_610)<br/></td></tr><tr><td align="left">_7 = constraints::fill_not_paused(move _8)</td></tr></table>>];
    bb1__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_503 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_585 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_19 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_17 as Continue).0: anchor_lang::prelude::Clock)<br/>_16 = move _23<br/>StorageDead(_23)<br/>_15 = &amp;_16<br/>_505 = discriminant(_17)<br/>StorageDead(_17)<br/>StorageLive(_24)<br/>_472 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_24 = &amp;((*_472).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_473 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_28 = &amp;(*_473)<br/></td></tr><tr><td align="left">_27 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _28)</td></tr></table>>];
    bb10__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_583 = discriminant(_17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _27)</td></tr></table>>];
    bb13__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = &amp;mut _26<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;mut (*_25)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/></td></tr><tr><td align="left">_38 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_45 = SizeOf([u16; 2])<br/>_46 = AlignOf([u16; 2])<br/></td></tr><tr><td align="left">_47 = alloc::alloc::exchange_malloc(move _45, move _46)</td></tr></table>>];
    bb15__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ShallowInitBox(move _47, [u16; 2])<br/>StorageLive(_49)<br/>_49 = (_2.6: u16)<br/>_611 = (((_48.0: std::ptr::Unique&lt;[u16; 2]&gt;).0: std::ptr::NonNull&lt;[u16; 2]&gt;).0: *const [u16; 2])<br/>_618 = _611 as *const () (PtrToPtr)<br/>_619 = _618 as usize (Transmute)<br/>_620 = AlignOf([u16; 2])<br/>_621 = Sub(_620, const 1_usize)<br/>_622 = BitAnd(_619, _621)<br/>_623 = Eq(_622, const 0_usize)<br/></td></tr><tr><td align="left">assert(_623, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _620, _619)</td></tr></table>>];
    bb16__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = get_writable_spot_market_set_from_many(move _42)</td></tr></table>>];
    bb17__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb18__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb19__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_495 = const true<br/>_496 = const true<br/>StorageDead(_53)<br/>_54 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb20__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_52 as Continue).0: anchor_lang::prelude::Clock)<br/>_51 = move _58<br/>StorageDead(_58)<br/>_50 = (_51.0: u64)<br/>StorageLive(_59)<br/>_59 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_34 = load_maps(move _35, move _36, move _39, move _50, move _59)</td></tr></table>>];
    bb21__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_57)<br/>_57 = move _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb22__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_50)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb24__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_60 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb25__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_33 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_32 = move _64<br/>StorageDead(_64)<br/>StorageLive(_29)<br/>_29 = move (_32.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_30)<br/>_30 = move (_32.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_31)<br/>_31 = move (_32.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_509 = discriminant(_33)<br/>_511 = discriminant(_52)<br/>_495 = const false<br/>_496 = const false<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb26__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb27__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_507 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb29__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_69 = get_referrer_and_referrer_stats(move _70)</td></tr></table>>];
    bb30__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;(Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;, Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb31__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_71 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb32__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = move ((_68 as Continue).0: (std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;))<br/>_67 = move _75<br/>StorageDead(_75)<br/>StorageLive(_65)<br/>_65 = move (_67.0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_66)<br/>_66 = move (_67.1: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;&gt;)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_2<br/></td></tr><tr><td align="left">_77 = order_params::OrderParams::is_immediate_or_cancel(move _78)</td></tr></table>>];
    bb33__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb34__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb36__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;(_2.8: state::order_params::PostOnlyParam)<br/>StorageLive(_81)<br/>_469 = const _<br/>_81 = &amp;(*_469)<br/></td></tr><tr><td align="left">_79 = &lt;PostOnlyParam as PartialEq&gt;::eq(move _80, move _81)</td></tr></table>>];
    bb37__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb39__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(_2.0: state::user::OrderType)<br/>StorageLive(_85)<br/>_468 = const _<br/>_85 = &amp;(*_468)<br/></td></tr><tr><td align="left">_83 = &lt;state::user::OrderType as PartialEq&gt;::ne(move _84, move _85)</td></tr></table>>];
    bb41__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb42__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = const &quot;place_and_make must use IOC post only limit order&quot;<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = solana_program::log::sol_log(move _89)</td></tr></table>>];
    bb43__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_467 = const _<br/>_93 = &amp;(*_467)<br/>StorageLive(_95)<br/>_95 = ()<br/></td></tr><tr><td align="left">_92 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _93, move _95)</td></tr></table>>];
    bb44__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _92)</td></tr></table>>];
    bb45__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _91)<br/>StorageDead(_91)<br/>StorageDead(_83)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>_76 = const ()<br/>StorageDead(_83)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_96)<br/>_96 = (_2.6: u16)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_99 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb47__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;_30<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_234 = &amp;_96<br/>_233 = &amp;(*_234)<br/></td></tr><tr><td align="left">_231 = SpotMarketMap::&lt;'_&gt;::get_ref(move _232, move _233)</td></tr></table>>];
    bb48__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_30<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_96<br/>_105 = &amp;(*_106)<br/></td></tr><tr><td align="left">_103 = SpotMarketMap::&lt;'_&gt;::get_ref(move _104, move _105)</td></tr></table>>];
    bb49__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_102 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _103)</td></tr></table>>];
    bb50__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_107 = discriminant(_102)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb51__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = move ((_102 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_101 = move _111<br/>StorageDead(_111)<br/>_515 = discriminant(_102)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_30<br/></td></tr><tr><td align="left">_114 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _115)</td></tr></table>>];
    bb52__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_102 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb53__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>_513 = discriminant(_102)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb55__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_116 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb56__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = move ((_113 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_112 = move _120<br/>StorageDead(_120)<br/>_519 = discriminant(_113)<br/>StorageDead(_113)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;mut (*_25)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_474 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_129 = &amp;((*_474).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_475 = deref_copy (*_129)<br/>_612 = (((_475.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_128 = &amp;(*_612)<br/></td></tr><tr><td align="left">_127 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb57__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb58__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>_517 = discriminant(_113)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb59__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_126 = &amp;(*_127)<br/>StorageDead(_128)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_101<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _132)</td></tr></table>>];
    bb60__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_130 = &amp;(*_131)<br/>StorageDead(_132)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;_112<br/>_136 = &amp;(*_137)<br/></td></tr><tr><td align="left">_135 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb61__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_134 = &amp;(*_135)<br/>StorageDead(_136)<br/>StorageLive(_138)<br/>_138 = ((*_15).4: i64)<br/></td></tr><tr><td align="left">_124 = SerumFulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _125, move _126, move _130, move _134, move _138)</td></tr></table>>];
    bb62__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;SerumFulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb63__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_502 = const true<br/>StorageDead(_124)<br/>_139 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb64__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = move ((_123 as Continue).0: state::fulfillment_params::serum::SerumFulfillmentParams&lt;'_, '_&gt;)<br/>_122 = move _143<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_121 = Box::&lt;SerumFulfillmentParams&lt;'_, '_&gt;&gt;::new(move _122)</td></tr></table>>];
    bb65__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb66__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb67__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_100 = move _121 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb68__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb69__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_98 = move _100 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>_521 = discriminant(_123)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>_502 = const false<br/>StorageDead(_123)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_30<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_96<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_146 = SpotMarketMap::&lt;'_&gt;::get_ref(move _147, move _148)</td></tr></table>>];
    bb71__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb72__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_150 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb73__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = move ((_145 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_144 = move _154<br/>StorageDead(_154)<br/>_525 = discriminant(_145)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;_30<br/></td></tr><tr><td align="left">_157 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _158)</td></tr></table>>];
    bb74__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb75__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>_523 = discriminant(_145)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _157)</td></tr></table>>];
    bb77__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_159 = discriminant(_156)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb78__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = move ((_156 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_155 = move _163<br/>StorageDead(_163)<br/>_529 = discriminant(_156)<br/>StorageDead(_156)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;mut (*_25)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_476 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_172 = &amp;((*_476).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_477 = deref_copy (*_172)<br/>_613 = (((_477.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_171 = &amp;(*_613)<br/></td></tr><tr><td align="left">_170 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _171)</td></tr></table>>];
    bb79__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_156 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_162)<br/>_162 = _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb80__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>_527 = discriminant(_156)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb81__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_169 = &amp;(*_170)<br/>StorageDead(_171)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = &amp;_144<br/>_175 = &amp;(*_176)<br/></td></tr><tr><td align="left">_174 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _175)</td></tr></table>>];
    bb82__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_173 = &amp;(*_174)<br/>StorageDead(_175)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;_155<br/>_179 = &amp;(*_180)<br/></td></tr><tr><td align="left">_178 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _179)</td></tr></table>>];
    bb83__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_177 = &amp;(*_178)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_167 = PhoenixFulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _168, move _169, move _173, move _177)</td></tr></table>>];
    bb84__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_173)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_166 = &lt;std::result::Result&lt;PhoenixFulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _167)</td></tr></table>>];
    bb85__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_501 = const true<br/>StorageDead(_167)<br/>_181 = discriminant(_166)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb86__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = move ((_166 as Continue).0: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;'_, '_&gt;)<br/>_165 = move _185<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_164 = Box::&lt;PhoenixFulfillmentParams&lt;'_, '_&gt;&gt;::new(move _165)</td></tr></table>>];
    bb87__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_166 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb88__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb89__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_98 = move _164 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb90__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb91__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_531 = discriminant(_166)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>_501 = const false<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;_30<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_96<br/>_190 = &amp;(*_191)<br/></td></tr><tr><td align="left">_188 = SpotMarketMap::&lt;'_&gt;::get_ref(move _189, move _190)</td></tr></table>>];
    bb93__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb94__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_192 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb95__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = move ((_187 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_186 = move _196<br/>StorageDead(_196)<br/>_535 = discriminant(_187)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;_30<br/></td></tr><tr><td align="left">_199 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _200)</td></tr></table>>];
    bb96__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb97__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>_533 = discriminant(_187)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/></td></tr><tr><td align="left">_198 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _199)</td></tr></table>>];
    bb99__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_201 = discriminant(_198)<br/></td></tr><tr><td align="left">switchInt(move _201)</td></tr></table>>];
    bb100__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = move ((_198 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_197 = move _205<br/>StorageDead(_205)<br/>_539 = discriminant(_198)<br/>StorageDead(_198)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;mut (*_25)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_478 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_214 = &amp;((*_478).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_479 = deref_copy (*_214)<br/>_614 = (((_479.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_213 = &amp;(*_614)<br/></td></tr><tr><td align="left">_212 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _213)</td></tr></table>>];
    bb101__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = ((_198 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_204)<br/>_204 = _202<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _204)</td></tr></table>>];
    bb102__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_202)<br/>_537 = discriminant(_198)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb103__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_211 = &amp;(*_212)<br/>StorageDead(_213)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = &amp;_186<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_216 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb104__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_215 = &amp;(*_216)<br/>StorageDead(_217)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_222 = &amp;_197<br/>_221 = &amp;(*_222)<br/></td></tr><tr><td align="left">_220 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb105__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/>StorageLive(_223)<br/>_223 = ((*_15).4: i64)<br/></td></tr><tr><td align="left">_209 = OpenbookV2FulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _210, move _211, move _215, move _219, move _223)</td></tr></table>>];
    bb106__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_219)<br/>StorageDead(_215)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_208 = &lt;std::result::Result&lt;OpenbookV2FulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _209)</td></tr></table>>];
    bb107__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_500 = const true<br/>StorageDead(_209)<br/>_224 = discriminant(_208)<br/></td></tr><tr><td align="left">switchInt(move _224)</td></tr></table>>];
    bb108__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>_228 = move ((_208 as Continue).0: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;'_, '_&gt;)<br/>_207 = move _228<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">_206 = Box::&lt;OpenbookV2FulfillmentParams&lt;'_, '_&gt;&gt;::new(move _207)</td></tr></table>>];
    bb109__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_225)<br/>_225 = ((_208 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_227)<br/>_227 = _225<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _227)</td></tr></table>>];
    bb110__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_225)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">drop(_197)</td></tr></table>>];
    bb111__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_98 = move _206 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">drop(_197)</td></tr></table>>];
    bb112__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb113__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_541 = discriminant(_208)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>_500 = const false<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _231)</td></tr></table>>];
    bb115__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_235 = discriminant(_230)<br/></td></tr><tr><td align="left">switchInt(move _235)</td></tr></table>>];
    bb116__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = move ((_230 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_229 = move _239<br/>StorageDead(_239)<br/>_545 = discriminant(_230)<br/>StorageDead(_234)<br/>StorageDead(_230)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = &amp;_30<br/></td></tr><tr><td align="left">_242 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _243)</td></tr></table>>];
    bb117__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_230 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_238)<br/>_238 = _236<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _238)</td></tr></table>>];
    bb118__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_236)<br/>_543 = discriminant(_230)<br/>StorageDead(_234)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb120__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_244 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _244)</td></tr></table>>];
    bb121__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = move ((_241 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_240 = move _248<br/>StorageDead(_248)<br/>_549 = discriminant(_241)<br/>StorageDead(_241)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;mut (*_25)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;_229<br/>_256 = &amp;(*_257)<br/></td></tr><tr><td align="left">_255 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _256)</td></tr></table>>];
    bb122__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_247)<br/>_247 = _245<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _247)</td></tr></table>>];
    bb123__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_245)<br/>_547 = discriminant(_241)<br/>StorageDead(_241)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb124__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_254 = &amp;(*_255)<br/>StorageDead(_256)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_261 = &amp;_240<br/>_260 = &amp;(*_261)<br/></td></tr><tr><td align="left">_259 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _260)</td></tr></table>>];
    bb125__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">_258 = &amp;(*_259)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_252 = MatchFulfillmentParams::&lt;'_&gt;::new::&lt;'_&gt;(move _253, move _254, move _258)</td></tr></table>>];
    bb126__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">_251 = &lt;std::result::Result&lt;MatchFulfillmentParams&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _252)</td></tr></table>>];
    bb127__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_499 = const true<br/>StorageDead(_252)<br/>_262 = discriminant(_251)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb128__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = move ((_251 as Continue).0: state::fulfillment_params::drift::MatchFulfillmentParams&lt;'_&gt;)<br/>_250 = move _266<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_249 = Box::&lt;MatchFulfillmentParams&lt;'_&gt;&gt;::new(move _250)</td></tr></table>>];
    bb129__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_251 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb130__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_250)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">drop(_240)</td></tr></table>>];
    bb131__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_98 = move _249 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_250)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">drop(_240)</td></tr></table>>];
    bb132__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb133__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_551 = discriminant(_251)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>_499 = const false<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">_97 = move _98 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_98)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_480 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_268 = &amp;((*_480).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_267 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _268)</td></tr></table>>];
    bb135__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_481 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_273 = &amp;((*_481).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_272 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _273)</td></tr></table>>];
    bb136__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageLive(_274)<br/>_274 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_271 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _272, move _274)</td></tr></table>>];
    bb137__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">_270 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _271)</td></tr></table>>];
    bb138__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>_275 = discriminant(_270)<br/></td></tr><tr><td align="left">switchInt(move _275)</td></tr></table>>];
    bb139__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_279)<br/>_279 = move ((_270 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_494 = const true<br/>_269 = move _279<br/>StorageDead(_279)<br/>_555 = discriminant(_270)<br/>StorageDead(_270)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = &amp;_269<br/></td></tr><tr><td align="left">_281 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _282)</td></tr></table>>];
    bb140__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_270 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_278)<br/>_278 = _276<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _278)</td></tr></table>>];
    bb141__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageDead(_276)<br/>_553 = discriminant(_270)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>_280 = ((*_281).0: anchor_lang::prelude::Pubkey)<br/>StorageDead(_281)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_482 = deref_copy (*_24)<br/>_615 = (((_482.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_288 = &amp;(*_615)<br/></td></tr><tr><td align="left">_287 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _288)</td></tr></table>>];
    bb143__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">_286 = &amp;(*_287)<br/>StorageDead(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = &amp;mut _269<br/>_291 = &amp;mut (*_292)<br/></td></tr><tr><td align="left">_290 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _291)</td></tr></table>>];
    bb144__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_289 = &amp;mut (*_290)<br/>StorageDead(_291)<br/>StorageLive(_293)<br/>_293 = _267<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = &amp;_29<br/>_294 = &amp;(*_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;_30<br/>_296 = &amp;(*_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>_299 = &amp;mut _31<br/>_298 = &amp;mut (*_299)<br/>StorageLive(_300)<br/>_300 = &amp;(*_15)<br/>StorageLive(_301)<br/>_301 = _2<br/>StorageLive(_302)<br/></td></tr><tr><td align="left">_302 = &lt;PlaceOrderOptions as Default&gt;::default()</td></tr></table>>];
    bb145__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left">_285 = controller::orders::place_spot_order(move _286, move _289, move _293, move _294, move _296, move _298, move _300, move _301, move _302)</td></tr></table>>];
    bb146__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_293)<br/>StorageDead(_289)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">_284 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _285)</td></tr></table>>];
    bb147__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>_303 = discriminant(_284)<br/></td></tr><tr><td align="left">switchInt(move _303)</td></tr></table>>];
    bb148__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = ((_284 as Continue).0: ())<br/>_283 = _307<br/>StorageDead(_307)<br/>StorageDead(_299)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_494 = const false<br/>_309 = move _269<br/></td></tr><tr><td align="left">_308 = std::mem::drop::&lt;RefMut&lt;'_, User&gt;&gt;(move _309)</td></tr></table>>];
    bb149__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_284 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_306)<br/>_306 = _304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _306)</td></tr></table>>];
    bb150__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_299)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_308)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_483 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_318 = &amp;((*_483).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_317 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _318)</td></tr></table>>];
    bb152__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageLive(_319)<br/>_319 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_316 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _317, move _319)</td></tr></table>>];
    bb153__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_317)<br/></td></tr><tr><td align="left">_315 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _316)</td></tr></table>>];
    bb154__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">_498 = const true<br/>StorageDead(_316)<br/>_320 = discriminant(_315)<br/></td></tr><tr><td align="left">switchInt(move _320)</td></tr></table>>];
    bb155__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = move ((_315 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_314 = move _324<br/>StorageDead(_324)<br/>_313 = &amp;_314<br/></td></tr><tr><td align="left">_312 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _313)</td></tr></table>>];
    bb156__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_321)<br/>_321 = ((_315 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_323)<br/>_323 = _321<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _323)</td></tr></table>>];
    bb157__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_321)<br/>StorageDead(_313)<br/>StorageDead(_311)<br/>_557 = discriminant(_315)<br/>_498 = const false<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_312)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">_311 = &amp;(*_312)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">_310 = User::get_last_order_id(move _311)</td></tr></table>>];
    bb159__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/></td></tr><tr><td align="left">drop(_314)</td></tr></table>>];
    bb160__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_326)<br/></td></tr><tr><td align="left">_326 = UserStatsMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb161__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>_330 = &amp;mut _325<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_484 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_332 = &amp;((*_484).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_331 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _332)</td></tr></table>>];
    bb162__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_485 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_334 = &amp;((*_485).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_333 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as Clone&gt;::clone(move _334)</td></tr></table>>];
    bb163__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/></td></tr><tr><td align="left">_329 = UserMap::&lt;'_&gt;::insert(move _330, move _331, move _333)</td></tr></table>>];
    bb164__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">_328 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _329)</td></tr></table>>];
    bb165__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>_335 = discriminant(_328)<br/></td></tr><tr><td align="left">switchInt(move _335)</td></tr></table>>];
    bb166__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>_339 = ((_328 as Continue).0: ())<br/>_327 = _339<br/>StorageDead(_339)<br/>StorageDead(_328)<br/>StorageDead(_327)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = &amp;mut _326<br/>StorageLive(_344)<br/>_344 = _280<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_486 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_346 = &amp;((*_486).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_345 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as Clone&gt;::clone(move _346)</td></tr></table>>];
    bb167__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>_336 = ((_328 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_338)<br/>_338 = _336<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _338)</td></tr></table>>];
    bb168__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_328)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/></td></tr><tr><td align="left">_342 = UserStatsMap::&lt;'_&gt;::insert(move _343, move _344, move _345)</td></tr></table>>];
    bb170__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_341 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _342)</td></tr></table>>];
    bb171__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_347 = discriminant(_341)<br/></td></tr><tr><td align="left">switchInt(move _347)</td></tr></table>>];
    bb172__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = ((_341 as Continue).0: ())<br/>_340 = _351<br/>StorageDead(_351)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>_355 = _3<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_487 = deref_copy (*_24)<br/>_616 = (((_487.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_358 = &amp;(*_616)<br/></td></tr><tr><td align="left">_357 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _358)</td></tr></table>>];
    bb173__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_348)<br/>_348 = ((_341 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_350)<br/>_350 = _348<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _350)</td></tr></table>>];
    bb174__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_348)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">_356 = &amp;(*_357)<br/>StorageDead(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>_488 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_360 = &amp;((*_488).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_359 = &amp;(*_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_489 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_362 = &amp;((*_489).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_361 = &amp;(*_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>_364 = &amp;_30<br/>_363 = &amp;(*_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;_29<br/>_365 = &amp;(*_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = &amp;mut _31<br/>_367 = &amp;mut (*_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_490 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_372 = &amp;((*_490).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_371 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as Clone&gt;::clone(move _372)</td></tr></table>>];
    bb176__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>_370 = &amp;_371<br/>_369 = &amp;(*_370)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_491 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_376 = &amp;((*_491).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_375 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as Clone&gt;::clone(move _376)</td></tr></table>>];
    bb177__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>_374 = &amp;_375<br/>_373 = &amp;(*_374)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_378 = &amp;_325<br/>_377 = &amp;(*_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>_380 = &amp;_326<br/>_379 = &amp;(*_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>_382 = _310<br/>_381 = Option::&lt;u32&gt;::Some(move _382)<br/>StorageDead(_382)<br/>StorageLive(_383)<br/>_383 = &amp;(*_15)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = &amp;mut _97<br/></td></tr><tr><td align="left">_386 = &lt;Box&lt;dyn SpotFulfillmentParams&gt; as AsMut&lt;dyn SpotFulfillmentParams&gt;&gt;::as_mut(move _387)</td></tr></table>>];
    bb178__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">_385 = &amp;mut (*_386)<br/>_384 = move _385 as &amp;mut dyn state::spot_fulfillment_params::SpotFulfillmentParams (PointerCoercion(Unsize))<br/>StorageDead(_387)<br/>StorageDead(_385)<br/></td></tr><tr><td align="left">_354 = controller::orders::fill_spot_order(move _355, move _356, move _359, move _361, move _363, move _365, move _367, move _369, move _373, move _377, move _379, move _381, move _383, move _384)</td></tr></table>>];
    bb179__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_373)<br/>StorageDead(_369)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_359)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">_353 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _354)</td></tr></table>>];
    bb180__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>_388 = discriminant(_353)<br/></td></tr><tr><td align="left">switchInt(move _388)</td></tr></table>>];
    bb181__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageLive(_392)<br/>_392 = ((_353 as Continue).0: u64)<br/>_352 = _392<br/>StorageDead(_392)<br/>StorageDead(_386)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>StorageDead(_368)<br/>StorageDead(_366)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_357)<br/>StorageDead(_353)<br/>StorageDead(_352)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_492 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_404 = &amp;((*_492).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_403 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _404)</td></tr></table>>];
    bb182__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_353 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_391)<br/>_391 = _389<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _391)</td></tr></table>>];
    bb183__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_389)<br/>StorageDead(_386)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>StorageDead(_368)<br/>StorageDead(_366)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_357)<br/>StorageDead(_353)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>StorageLive(_405)<br/>_405 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_402 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _403, move _405)</td></tr></table>>];
    bb185__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">_401 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _402)</td></tr></table>>];
    bb186__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">_497 = const true<br/>StorageDead(_402)<br/>_406 = discriminant(_401)<br/></td></tr><tr><td align="left">switchInt(move _406)</td></tr></table>>];
    bb187__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageLive(_410)<br/>_410 = move ((_401 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_400 = move _410<br/>StorageDead(_410)<br/>_399 = &amp;_400<br/></td></tr><tr><td align="left">_398 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _399)</td></tr></table>>];
    bb188__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_407)<br/>_407 = ((_401 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_409)<br/>_409 = _407<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _409)</td></tr></table>>];
    bb189__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_407)<br/>StorageDead(_399)<br/>StorageDead(_397)<br/>StorageDead(_396)<br/>StorageDead(_394)<br/>_561 = discriminant(_401)<br/>_497 = const false<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_398)<br/>StorageDead(_395)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>_397 = &amp;((*_398).5: [state::user::Order; 32])<br/>_396 = move _397 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_397)<br/></td></tr><tr><td align="left">_395 = core::slice::&lt;impl [Order]&gt;::iter(move _396)</td></tr></table>>];
    bb191__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_394 = &amp;mut _395<br/>StorageDead(_396)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>_412 = &amp;_310<br/>_411 = {closure@programs/drift/src/instructions/user.rs:2908:14: 2908:21} { order_id: move _412 }<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">_393 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::any::&lt;{closure@programs/drift/src/instructions/user.rs:2908:14: 2908:21}&gt;(move _394, move _411)</td></tr></table>>];
    bb192__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageDead(_394)<br/></td></tr><tr><td align="left">drop(_400)</td></tr></table>>];
    bb193__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = _310<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_493 = deref_copy (_1.1: &amp;mut instructions::user::PlaceAndMake&lt;'_&gt;)<br/>_420 = &amp;((*_493).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_419 = &amp;(*_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>_422 = &amp;_29<br/>_421 = &amp;(*_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>_424 = &amp;_30<br/>_423 = &amp;(*_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>_426 = &amp;mut _31<br/>_425 = &amp;mut (*_426)<br/>StorageLive(_427)<br/>_427 = &amp;(*_15)<br/></td></tr><tr><td align="left">_417 = cancel_order_by_order_id(move _418, move _419, move _421, move _423, move _425, move _427)</td></tr></table>>];
    bb194__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>StorageDead(_425)<br/>StorageDead(_423)<br/>StorageDead(_421)<br/>StorageDead(_419)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">_416 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _417)</td></tr></table>>];
    bb195__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>_428 = discriminant(_416)<br/></td></tr><tr><td align="left">switchInt(move _428)</td></tr></table>>];
    bb196__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_432)<br/>_432 = ((_416 as Continue).0: ())<br/>_415 = _432<br/>StorageDead(_432)<br/>StorageDead(_426)<br/>StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_420)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>_413 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_429)<br/>_429 = ((_416 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_431)<br/>_431 = _429<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _431)</td></tr></table>>];
    bb198__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_420)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">_413 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>StorageDead(_413)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;_30<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>_438 = &amp;_96<br/>_437 = &amp;(*_438)<br/></td></tr><tr><td align="left">_435 = SpotMarketMap::&lt;'_&gt;::get_ref(move _436, move _437)</td></tr></table>>];
    bb201__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_434 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _435)</td></tr></table>>];
    bb202__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_439 = discriminant(_434)<br/></td></tr><tr><td align="left">switchInt(move _439)</td></tr></table>>];
    bb203__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageLive(_443)<br/>_443 = move ((_434 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_433 = move _443<br/>StorageDead(_443)<br/>_567 = discriminant(_434)<br/>StorageDead(_438)<br/>StorageDead(_434)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>_447 = &amp;_30<br/></td></tr><tr><td align="left">_446 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _447)</td></tr></table>>];
    bb204__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_440)<br/>_440 = ((_434 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_442)<br/>_442 = _440<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _442)</td></tr></table>>];
    bb205__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>StorageDead(_440)<br/>_565 = discriminant(_434)<br/>StorageDead(_438)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/></td></tr><tr><td align="left">_445 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _446)</td></tr></table>>];
    bb207__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/>_448 = discriminant(_445)<br/></td></tr><tr><td align="left">switchInt(move _448)</td></tr></table>>];
    bb208__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageLive(_452)<br/>_452 = move ((_445 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_444 = move _452<br/>StorageDead(_452)<br/>_571 = discriminant(_445)<br/>StorageDead(_445)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_617 = (((_97.0: std::ptr::Unique&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt;).0: std::ptr::NonNull&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt;).0: *const dyn state::spot_fulfillment_params::SpotFulfillmentParams)<br/>_456 = &amp;(*_617)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>_458 = &amp;_433<br/>_457 = &amp;(*_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>_460 = &amp;_444<br/>_459 = &amp;(*_460)<br/></td></tr><tr><td align="left">_455 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::validate_vault_amounts(move _456, move _457, move _459)</td></tr></table>>];
    bb209__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageLive(_449)<br/>_449 = ((_445 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_451)<br/>_451 = _449<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _451)</td></tr></table>>];
    bb210__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>StorageDead(_449)<br/>_569 = discriminant(_445)<br/>StorageDead(_445)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">_454 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _455)</td></tr></table>>];
    bb212__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>_461 = discriminant(_454)<br/></td></tr><tr><td align="left">switchInt(move _461)</td></tr></table>>];
    bb213__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageLive(_465)<br/>_465 = ((_454 as Continue).0: ())<br/>_453 = _465<br/>StorageDead(_465)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_454)<br/>StorageDead(_453)<br/>StorageLive(_466)<br/>_466 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _466)<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">drop(_444)</td></tr></table>>];
    bb214__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageLive(_462)<br/>_462 = ((_454 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_464)<br/>_464 = _462<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _464)</td></tr></table>>];
    bb215__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>StorageDead(_462)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_454)<br/>StorageDead(_453)<br/></td></tr><tr><td align="left">drop(_444)</td></tr></table>>];
    bb216__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/></td></tr><tr><td align="left">drop(_433)</td></tr></table>>];
    bb217__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">drop(_326)</td></tr></table>>];
    bb218__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/></td></tr><tr><td align="left">drop(_325)</td></tr></table>>];
    bb219__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_310)<br/>StorageDead(_280)<br/>_494 = const false<br/>StorageDead(_269)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb220__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb221__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb222__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb223__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/></td></tr><tr><td align="left">drop(_433)</td></tr></table>>];
    bb225__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left">drop(_326)</td></tr></table>>];
    bb228__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/></td></tr><tr><td align="left">drop(_325)</td></tr></table>>];
    bb229__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/></td></tr><tr><td align="left">switchInt(_494)</td></tr></table>>];
    bb232__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">_494 = const false<br/>StorageDead(_269)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb233__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb234__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_573 = discriminant(_251)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>_499 = const false<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb235__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb236__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb237__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_575 = discriminant(_208)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>_500 = const false<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb240__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_577 = discriminant(_166)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>_501 = const false<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb243__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_579 = discriminant(_123)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>_502 = const false<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb250__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb251__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb252__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">_581 = discriminant(_52)<br/>_495 = const false<br/>_496 = const false<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb254__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb255__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb257__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left">return</td></tr></table>>];
    bb259__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">259 (cleanup)</td></tr><tr><td align="left">drop(_444)</td></tr></table>>];
    bb260__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">260 (cleanup)</td></tr><tr><td align="left">drop(_433)</td></tr></table>>];
    bb261__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">261 (cleanup)</td></tr><tr><td align="left">drop(_400)</td></tr></table>>];
    bb262__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">262 (cleanup)</td></tr><tr><td align="left">drop(_326)</td></tr></table>>];
    bb263__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">263 (cleanup)</td></tr><tr><td align="left">drop(_325)</td></tr></table>>];
    bb264__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">264 (cleanup)</td></tr><tr><td align="left">drop(_314)</td></tr></table>>];
    bb265__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">265 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb266__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">266 (cleanup)</td></tr><tr><td align="left">drop(_240)</td></tr></table>>];
    bb267__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">267 (cleanup)</td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb268__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">268 (cleanup)</td></tr><tr><td align="left">drop(_240)</td></tr></table>>];
    bb269__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">269 (cleanup)</td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb270__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">270 (cleanup)</td></tr><tr><td align="left">drop(_197)</td></tr></table>>];
    bb271__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">271 (cleanup)</td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb272__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">272 (cleanup)</td></tr><tr><td align="left">drop(_197)</td></tr></table>>];
    bb273__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">273 (cleanup)</td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb274__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">274 (cleanup)</td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb275__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">275 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb276__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">276 (cleanup)</td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb277__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">277 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb278__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">278 (cleanup)</td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb279__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">279 (cleanup)</td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb280__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">280 (cleanup)</td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb281__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">281 (cleanup)</td></tr><tr><td align="left">drop(_101)</td></tr></table>>];
    bb282__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">282 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb283__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">283 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb284__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">284 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb285__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">285 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb286__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">286 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb287__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">287 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb288__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb289__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">_559 = discriminant(_315)<br/>_498 = const false<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_312)<br/>StorageLive(_325)<br/></td></tr><tr><td align="left">_325 = UserMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb290__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">_563 = discriminant(_401)<br/>_497 = const false<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_398)<br/>StorageDead(_395)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = _393<br/></td></tr><tr><td align="left">switchInt(move _414)</td></tr></table>>];
    bb291__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left">drop(_269)</td></tr></table>>];
    bb292__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left" balign="left">_587 = discriminant(_445)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left" balign="left">_588 = discriminant(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left" balign="left">_589 = discriminant(_401)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left" balign="left">_590 = discriminant(_315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb296__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left">drop(_269)</td></tr></table>>];
    bb297__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left">switchInt(_494)</td></tr></table>>];
    bb298__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left" balign="left">_591 = discriminant(_270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb299__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left" balign="left">_592 = discriminant(_251)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left" balign="left">_593 = discriminant(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb301__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">301 (cleanup)</td></tr><tr><td align="left" balign="left">_594 = discriminant(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb302__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">302 (cleanup)</td></tr><tr><td align="left" balign="left">_595 = discriminant(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left" balign="left">_596 = discriminant(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb304__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left" balign="left">_597 = discriminant(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">305 (cleanup)</td></tr><tr><td align="left" balign="left">_598 = discriminant(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb306__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">306 (cleanup)</td></tr><tr><td align="left" balign="left">_599 = discriminant(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">307 (cleanup)</td></tr><tr><td align="left" balign="left">_600 = discriminant(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">308 (cleanup)</td></tr><tr><td align="left" balign="left">_601 = discriminant(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">309 (cleanup)</td></tr><tr><td align="left" balign="left">_602 = discriminant(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">310 (cleanup)</td></tr><tr><td align="left" balign="left">_603 = discriminant(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">311 (cleanup)</td></tr><tr><td align="left" balign="left">_606 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">312 (cleanup)</td></tr><tr><td align="left" balign="left">_607 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">313 (cleanup)</td></tr><tr><td align="left" balign="left">_608 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">314 (cleanup)</td></tr><tr><td align="left" balign="left">_609 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_11781 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">(*_611) = [const _, move _49]<br/>StorageDead(_49)<br/>_44 = move _48<br/>_43 = move _44 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _43)</td></tr></table>>];
    bb0__0_11781 -> bb1__0_11781 [label="return"];
    bb1__0_11781 -> bb2__0_11781 [label="return"];
    bb1__0_11781 -> bb288__0_11781 [label="unwind"];
    bb2__0_11781 -> bb3__0_11781 [label="0"];
    bb2__0_11781 -> bb5__0_11781 [label="1"];
    bb2__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb3__0_11781 -> bb7__0_11781 [label="return"];
    bb5__0_11781 -> bb6__0_11781 [label="return"];
    bb5__0_11781 -> bb314__0_11781 [label="unwind"];
    bb6__0_11781 -> bb258__0_11781 [label=""];
    bb7__0_11781 -> bb8__0_11781 [label="return"];
    bb7__0_11781 -> bb288__0_11781 [label="unwind"];
    bb8__0_11781 -> bb9__0_11781 [label="0"];
    bb8__0_11781 -> bb10__0_11781 [label="1"];
    bb8__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb9__0_11781 -> bb12__0_11781 [label="return"];
    bb10__0_11781 -> bb11__0_11781 [label="return"];
    bb10__0_11781 -> bb313__0_11781 [label="unwind"];
    bb11__0_11781 -> bb257__0_11781 [label=""];
    bb12__0_11781 -> bb13__0_11781 [label="return"];
    bb13__0_11781 -> bb14__0_11781 [label="return"];
    bb14__0_11781 -> bb15__0_11781 [label="return"];
    bb14__0_11781 -> bb287__0_11781 [label="unwind"];
    bb15__0_11781 -> bb315__0_11781 [label="success"];
    bb16__0_11781 -> bb17__0_11781 [label="return"];
    bb16__0_11781 -> bb287__0_11781 [label="unwind"];
    bb17__0_11781 -> bb18__0_11781 [label="return"];
    bb17__0_11781 -> bb286__0_11781 [label="unwind"];
    bb18__0_11781 -> bb19__0_11781 [label="return"];
    bb18__0_11781 -> bb286__0_11781 [label="unwind"];
    bb19__0_11781 -> bb20__0_11781 [label="0"];
    bb19__0_11781 -> bb21__0_11781 [label="1"];
    bb19__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb20__0_11781 -> bb23__0_11781 [label="return"];
    bb20__0_11781 -> bb312__0_11781 [label="unwind"];
    bb21__0_11781 -> bb22__0_11781 [label="return"];
    bb21__0_11781 -> bb312__0_11781 [label="unwind"];
    bb22__0_11781 -> bb253__0_11781 [label=""];
    bb23__0_11781 -> bb24__0_11781 [label="return"];
    bb23__0_11781 -> bb312__0_11781 [label="unwind"];
    bb24__0_11781 -> bb25__0_11781 [label="0"];
    bb24__0_11781 -> bb26__0_11781 [label="1"];
    bb24__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb25__0_11781 -> bb28__0_11781 [label="return"];
    bb25__0_11781 -> bb282__0_11781 [label="unwind"];
    bb26__0_11781 -> bb27__0_11781 [label="return"];
    bb26__0_11781 -> bb311__0_11781 [label="unwind"];
    bb27__0_11781 -> bb253__0_11781 [label=""];
    bb28__0_11781 -> bb29__0_11781 [label="return"];
    bb28__0_11781 -> bb283__0_11781 [label="unwind"];
    bb29__0_11781 -> bb30__0_11781 [label="return"];
    bb29__0_11781 -> bb283__0_11781 [label="unwind"];
    bb30__0_11781 -> bb31__0_11781 [label="return"];
    bb30__0_11781 -> bb283__0_11781 [label="unwind"];
    bb31__0_11781 -> bb32__0_11781 [label="0"];
    bb31__0_11781 -> bb33__0_11781 [label="1"];
    bb31__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb32__0_11781 -> bb35__0_11781 [label="return"];
    bb32__0_11781 -> bb283__0_11781 [label="unwind"];
    bb33__0_11781 -> bb34__0_11781 [label="return"];
    bb33__0_11781 -> bb283__0_11781 [label="unwind"];
    bb34__0_11781 -> bb249__0_11781 [label=""];
    bb35__0_11781 -> bb37__0_11781 [label="0"];
    bb35__0_11781 -> bb36__0_11781 [label="otherwise"];
    bb36__0_11781 -> bb38__0_11781 [label="return"];
    bb36__0_11781 -> bb283__0_11781 [label="unwind"];
    bb37__0_11781 -> bb39__0_11781 [label=""];
    bb38__0_11781 -> bb40__0_11781 [label="0"];
    bb38__0_11781 -> bb39__0_11781 [label="otherwise"];
    bb39__0_11781 -> bb42__0_11781 [label=""];
    bb40__0_11781 -> bb41__0_11781 [label="return"];
    bb40__0_11781 -> bb283__0_11781 [label="unwind"];
    bb41__0_11781 -> bb46__0_11781 [label="0"];
    bb41__0_11781 -> bb42__0_11781 [label="otherwise"];
    bb42__0_11781 -> bb43__0_11781 [label="return"];
    bb42__0_11781 -> bb283__0_11781 [label="unwind"];
    bb43__0_11781 -> bb44__0_11781 [label="return"];
    bb43__0_11781 -> bb283__0_11781 [label="unwind"];
    bb44__0_11781 -> bb45__0_11781 [label="return"];
    bb44__0_11781 -> bb283__0_11781 [label="unwind"];
    bb45__0_11781 -> bb248__0_11781 [label=""];
    bb46__0_11781 -> bb48__0_11781 [label="0"];
    bb46__0_11781 -> bb47__0_11781 [label="1"];
    bb46__0_11781 -> bb70__0_11781 [label="2"];
    bb46__0_11781 -> bb92__0_11781 [label="3"];
    bb46__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb47__0_11781 -> bb114__0_11781 [label="return"];
    bb47__0_11781 -> bb283__0_11781 [label="unwind"];
    bb48__0_11781 -> bb49__0_11781 [label="return"];
    bb48__0_11781 -> bb283__0_11781 [label="unwind"];
    bb49__0_11781 -> bb50__0_11781 [label="return"];
    bb49__0_11781 -> bb283__0_11781 [label="unwind"];
    bb50__0_11781 -> bb51__0_11781 [label="0"];
    bb50__0_11781 -> bb52__0_11781 [label="1"];
    bb50__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb51__0_11781 -> bb54__0_11781 [label="return"];
    bb51__0_11781 -> bb281__0_11781 [label="unwind"];
    bb52__0_11781 -> bb53__0_11781 [label="return"];
    bb52__0_11781 -> bb310__0_11781 [label="unwind"];
    bb53__0_11781 -> bb244__0_11781 [label=""];
    bb54__0_11781 -> bb55__0_11781 [label="return"];
    bb54__0_11781 -> bb281__0_11781 [label="unwind"];
    bb55__0_11781 -> bb56__0_11781 [label="0"];
    bb55__0_11781 -> bb57__0_11781 [label="1"];
    bb55__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb56__0_11781 -> bb59__0_11781 [label="return"];
    bb56__0_11781 -> bb280__0_11781 [label="unwind"];
    bb57__0_11781 -> bb58__0_11781 [label="return"];
    bb57__0_11781 -> bb309__0_11781 [label="unwind"];
    bb58__0_11781 -> bb244__0_11781 [label="return"];
    bb58__0_11781 -> bb283__0_11781 [label="unwind"];
    bb59__0_11781 -> bb60__0_11781 [label="return"];
    bb59__0_11781 -> bb280__0_11781 [label="unwind"];
    bb60__0_11781 -> bb61__0_11781 [label="return"];
    bb60__0_11781 -> bb280__0_11781 [label="unwind"];
    bb61__0_11781 -> bb62__0_11781 [label="return"];
    bb61__0_11781 -> bb280__0_11781 [label="unwind"];
    bb62__0_11781 -> bb63__0_11781 [label="return"];
    bb62__0_11781 -> bb280__0_11781 [label="unwind"];
    bb63__0_11781 -> bb64__0_11781 [label="0"];
    bb63__0_11781 -> bb65__0_11781 [label="1"];
    bb63__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb64__0_11781 -> bb67__0_11781 [label="return"];
    bb64__0_11781 -> bb278__0_11781 [label="unwind"];
    bb65__0_11781 -> bb66__0_11781 [label="return"];
    bb65__0_11781 -> bb278__0_11781 [label="unwind"];
    bb66__0_11781 -> bb242__0_11781 [label="return"];
    bb66__0_11781 -> bb279__0_11781 [label="unwind"];
    bb67__0_11781 -> bb68__0_11781 [label="return"];
    bb67__0_11781 -> bb279__0_11781 [label="unwind"];
    bb68__0_11781 -> bb69__0_11781 [label="return"];
    bb68__0_11781 -> bb308__0_11781 [label="unwind"];
    bb69__0_11781 -> bb134__0_11781 [label=""];
    bb70__0_11781 -> bb71__0_11781 [label="return"];
    bb70__0_11781 -> bb283__0_11781 [label="unwind"];
    bb71__0_11781 -> bb72__0_11781 [label="return"];
    bb71__0_11781 -> bb283__0_11781 [label="unwind"];
    bb72__0_11781 -> bb73__0_11781 [label="0"];
    bb72__0_11781 -> bb74__0_11781 [label="1"];
    bb72__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb73__0_11781 -> bb76__0_11781 [label="return"];
    bb73__0_11781 -> bb277__0_11781 [label="unwind"];
    bb74__0_11781 -> bb75__0_11781 [label="return"];
    bb74__0_11781 -> bb307__0_11781 [label="unwind"];
    bb75__0_11781 -> bb241__0_11781 [label=""];
    bb76__0_11781 -> bb77__0_11781 [label="return"];
    bb76__0_11781 -> bb277__0_11781 [label="unwind"];
    bb77__0_11781 -> bb78__0_11781 [label="0"];
    bb77__0_11781 -> bb79__0_11781 [label="1"];
    bb77__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb78__0_11781 -> bb81__0_11781 [label="return"];
    bb78__0_11781 -> bb276__0_11781 [label="unwind"];
    bb79__0_11781 -> bb80__0_11781 [label="return"];
    bb79__0_11781 -> bb306__0_11781 [label="unwind"];
    bb80__0_11781 -> bb241__0_11781 [label="return"];
    bb80__0_11781 -> bb283__0_11781 [label="unwind"];
    bb81__0_11781 -> bb82__0_11781 [label="return"];
    bb81__0_11781 -> bb276__0_11781 [label="unwind"];
    bb82__0_11781 -> bb83__0_11781 [label="return"];
    bb82__0_11781 -> bb276__0_11781 [label="unwind"];
    bb83__0_11781 -> bb84__0_11781 [label="return"];
    bb83__0_11781 -> bb276__0_11781 [label="unwind"];
    bb84__0_11781 -> bb85__0_11781 [label="return"];
    bb84__0_11781 -> bb276__0_11781 [label="unwind"];
    bb85__0_11781 -> bb86__0_11781 [label="0"];
    bb85__0_11781 -> bb87__0_11781 [label="1"];
    bb85__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb86__0_11781 -> bb89__0_11781 [label="return"];
    bb86__0_11781 -> bb274__0_11781 [label="unwind"];
    bb87__0_11781 -> bb88__0_11781 [label="return"];
    bb87__0_11781 -> bb274__0_11781 [label="unwind"];
    bb88__0_11781 -> bb239__0_11781 [label="return"];
    bb88__0_11781 -> bb275__0_11781 [label="unwind"];
    bb89__0_11781 -> bb90__0_11781 [label="return"];
    bb89__0_11781 -> bb275__0_11781 [label="unwind"];
    bb90__0_11781 -> bb91__0_11781 [label="return"];
    bb90__0_11781 -> bb305__0_11781 [label="unwind"];
    bb91__0_11781 -> bb134__0_11781 [label=""];
    bb92__0_11781 -> bb93__0_11781 [label="return"];
    bb92__0_11781 -> bb283__0_11781 [label="unwind"];
    bb93__0_11781 -> bb94__0_11781 [label="return"];
    bb93__0_11781 -> bb283__0_11781 [label="unwind"];
    bb94__0_11781 -> bb95__0_11781 [label="0"];
    bb94__0_11781 -> bb96__0_11781 [label="1"];
    bb94__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb95__0_11781 -> bb98__0_11781 [label="return"];
    bb95__0_11781 -> bb273__0_11781 [label="unwind"];
    bb96__0_11781 -> bb97__0_11781 [label="return"];
    bb96__0_11781 -> bb304__0_11781 [label="unwind"];
    bb97__0_11781 -> bb238__0_11781 [label=""];
    bb98__0_11781 -> bb99__0_11781 [label="return"];
    bb98__0_11781 -> bb273__0_11781 [label="unwind"];
    bb99__0_11781 -> bb100__0_11781 [label="0"];
    bb99__0_11781 -> bb101__0_11781 [label="1"];
    bb99__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb100__0_11781 -> bb103__0_11781 [label="return"];
    bb100__0_11781 -> bb272__0_11781 [label="unwind"];
    bb101__0_11781 -> bb102__0_11781 [label="return"];
    bb101__0_11781 -> bb303__0_11781 [label="unwind"];
    bb102__0_11781 -> bb238__0_11781 [label="return"];
    bb102__0_11781 -> bb283__0_11781 [label="unwind"];
    bb103__0_11781 -> bb104__0_11781 [label="return"];
    bb103__0_11781 -> bb272__0_11781 [label="unwind"];
    bb104__0_11781 -> bb105__0_11781 [label="return"];
    bb104__0_11781 -> bb272__0_11781 [label="unwind"];
    bb105__0_11781 -> bb106__0_11781 [label="return"];
    bb105__0_11781 -> bb272__0_11781 [label="unwind"];
    bb106__0_11781 -> bb107__0_11781 [label="return"];
    bb106__0_11781 -> bb272__0_11781 [label="unwind"];
    bb107__0_11781 -> bb108__0_11781 [label="0"];
    bb107__0_11781 -> bb109__0_11781 [label="1"];
    bb107__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb108__0_11781 -> bb111__0_11781 [label="return"];
    bb108__0_11781 -> bb270__0_11781 [label="unwind"];
    bb109__0_11781 -> bb110__0_11781 [label="return"];
    bb109__0_11781 -> bb270__0_11781 [label="unwind"];
    bb110__0_11781 -> bb236__0_11781 [label="return"];
    bb110__0_11781 -> bb271__0_11781 [label="unwind"];
    bb111__0_11781 -> bb112__0_11781 [label="return"];
    bb111__0_11781 -> bb271__0_11781 [label="unwind"];
    bb112__0_11781 -> bb113__0_11781 [label="return"];
    bb112__0_11781 -> bb302__0_11781 [label="unwind"];
    bb113__0_11781 -> bb134__0_11781 [label=""];
    bb114__0_11781 -> bb115__0_11781 [label="return"];
    bb114__0_11781 -> bb283__0_11781 [label="unwind"];
    bb115__0_11781 -> bb116__0_11781 [label="0"];
    bb115__0_11781 -> bb117__0_11781 [label="1"];
    bb115__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb116__0_11781 -> bb119__0_11781 [label="return"];
    bb116__0_11781 -> bb269__0_11781 [label="unwind"];
    bb117__0_11781 -> bb118__0_11781 [label="return"];
    bb117__0_11781 -> bb301__0_11781 [label="unwind"];
    bb118__0_11781 -> bb235__0_11781 [label=""];
    bb119__0_11781 -> bb120__0_11781 [label="return"];
    bb119__0_11781 -> bb269__0_11781 [label="unwind"];
    bb120__0_11781 -> bb121__0_11781 [label="0"];
    bb120__0_11781 -> bb122__0_11781 [label="1"];
    bb120__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb121__0_11781 -> bb124__0_11781 [label="return"];
    bb121__0_11781 -> bb268__0_11781 [label="unwind"];
    bb122__0_11781 -> bb123__0_11781 [label="return"];
    bb122__0_11781 -> bb300__0_11781 [label="unwind"];
    bb123__0_11781 -> bb235__0_11781 [label="return"];
    bb123__0_11781 -> bb283__0_11781 [label="unwind"];
    bb124__0_11781 -> bb125__0_11781 [label="return"];
    bb124__0_11781 -> bb268__0_11781 [label="unwind"];
    bb125__0_11781 -> bb126__0_11781 [label="return"];
    bb125__0_11781 -> bb268__0_11781 [label="unwind"];
    bb126__0_11781 -> bb127__0_11781 [label="return"];
    bb126__0_11781 -> bb268__0_11781 [label="unwind"];
    bb127__0_11781 -> bb128__0_11781 [label="0"];
    bb127__0_11781 -> bb129__0_11781 [label="1"];
    bb127__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb128__0_11781 -> bb131__0_11781 [label="return"];
    bb128__0_11781 -> bb266__0_11781 [label="unwind"];
    bb129__0_11781 -> bb130__0_11781 [label="return"];
    bb129__0_11781 -> bb266__0_11781 [label="unwind"];
    bb130__0_11781 -> bb233__0_11781 [label="return"];
    bb130__0_11781 -> bb267__0_11781 [label="unwind"];
    bb131__0_11781 -> bb132__0_11781 [label="return"];
    bb131__0_11781 -> bb267__0_11781 [label="unwind"];
    bb132__0_11781 -> bb133__0_11781 [label="return"];
    bb132__0_11781 -> bb299__0_11781 [label="unwind"];
    bb133__0_11781 -> bb134__0_11781 [label=""];
    bb134__0_11781 -> bb135__0_11781 [label="return"];
    bb134__0_11781 -> bb265__0_11781 [label="unwind"];
    bb135__0_11781 -> bb136__0_11781 [label="return"];
    bb135__0_11781 -> bb265__0_11781 [label="unwind"];
    bb136__0_11781 -> bb137__0_11781 [label="return"];
    bb136__0_11781 -> bb265__0_11781 [label="unwind"];
    bb137__0_11781 -> bb138__0_11781 [label="return"];
    bb137__0_11781 -> bb265__0_11781 [label="unwind"];
    bb138__0_11781 -> bb139__0_11781 [label="0"];
    bb138__0_11781 -> bb140__0_11781 [label="1"];
    bb138__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb139__0_11781 -> bb142__0_11781 [label="return"];
    bb139__0_11781 -> bb297__0_11781 [label="unwind"];
    bb140__0_11781 -> bb141__0_11781 [label="return"];
    bb140__0_11781 -> bb298__0_11781 [label="unwind"];
    bb141__0_11781 -> bb232__0_11781 [label=""];
    bb142__0_11781 -> bb143__0_11781 [label="return"];
    bb142__0_11781 -> bb297__0_11781 [label="unwind"];
    bb143__0_11781 -> bb144__0_11781 [label="return"];
    bb143__0_11781 -> bb297__0_11781 [label="unwind"];
    bb144__0_11781 -> bb145__0_11781 [label="return"];
    bb144__0_11781 -> bb297__0_11781 [label="unwind"];
    bb145__0_11781 -> bb146__0_11781 [label="return"];
    bb145__0_11781 -> bb297__0_11781 [label="unwind"];
    bb146__0_11781 -> bb147__0_11781 [label="return"];
    bb146__0_11781 -> bb297__0_11781 [label="unwind"];
    bb147__0_11781 -> bb148__0_11781 [label="0"];
    bb147__0_11781 -> bb149__0_11781 [label="1"];
    bb147__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb148__0_11781 -> bb151__0_11781 [label="return"];
    bb148__0_11781 -> bb297__0_11781 [label="unwind"];
    bb149__0_11781 -> bb150__0_11781 [label="return"];
    bb149__0_11781 -> bb297__0_11781 [label="unwind"];
    bb150__0_11781 -> bb231__0_11781 [label=""];
    bb151__0_11781 -> bb152__0_11781 [label="return"];
    bb151__0_11781 -> bb297__0_11781 [label="unwind"];
    bb152__0_11781 -> bb153__0_11781 [label="return"];
    bb152__0_11781 -> bb297__0_11781 [label="unwind"];
    bb153__0_11781 -> bb154__0_11781 [label="return"];
    bb153__0_11781 -> bb297__0_11781 [label="unwind"];
    bb154__0_11781 -> bb155__0_11781 [label="0"];
    bb154__0_11781 -> bb156__0_11781 [label="1"];
    bb154__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb155__0_11781 -> bb158__0_11781 [label="return"];
    bb155__0_11781 -> bb264__0_11781 [label="unwind"];
    bb156__0_11781 -> bb157__0_11781 [label="return"];
    bb156__0_11781 -> bb295__0_11781 [label="unwind"];
    bb157__0_11781 -> bb230__0_11781 [label=""];
    bb158__0_11781 -> bb159__0_11781 [label="return"];
    bb158__0_11781 -> bb264__0_11781 [label="unwind"];
    bb159__0_11781 -> bb289__0_11781 [label="return"];
    bb159__0_11781 -> bb295__0_11781 [label="unwind"];
    bb160__0_11781 -> bb161__0_11781 [label="return"];
    bb160__0_11781 -> bb263__0_11781 [label="unwind"];
    bb161__0_11781 -> bb162__0_11781 [label="return"];
    bb161__0_11781 -> bb262__0_11781 [label="unwind"];
    bb162__0_11781 -> bb163__0_11781 [label="return"];
    bb162__0_11781 -> bb262__0_11781 [label="unwind"];
    bb163__0_11781 -> bb164__0_11781 [label="return"];
    bb163__0_11781 -> bb262__0_11781 [label="unwind"];
    bb164__0_11781 -> bb165__0_11781 [label="return"];
    bb164__0_11781 -> bb262__0_11781 [label="unwind"];
    bb165__0_11781 -> bb166__0_11781 [label="0"];
    bb165__0_11781 -> bb167__0_11781 [label="1"];
    bb165__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb166__0_11781 -> bb169__0_11781 [label="return"];
    bb166__0_11781 -> bb262__0_11781 [label="unwind"];
    bb167__0_11781 -> bb168__0_11781 [label="return"];
    bb167__0_11781 -> bb262__0_11781 [label="unwind"];
    bb168__0_11781 -> bb227__0_11781 [label=""];
    bb169__0_11781 -> bb170__0_11781 [label="return"];
    bb169__0_11781 -> bb262__0_11781 [label="unwind"];
    bb170__0_11781 -> bb171__0_11781 [label="return"];
    bb170__0_11781 -> bb262__0_11781 [label="unwind"];
    bb171__0_11781 -> bb172__0_11781 [label="0"];
    bb171__0_11781 -> bb173__0_11781 [label="1"];
    bb171__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb172__0_11781 -> bb175__0_11781 [label="return"];
    bb172__0_11781 -> bb262__0_11781 [label="unwind"];
    bb173__0_11781 -> bb174__0_11781 [label="return"];
    bb173__0_11781 -> bb262__0_11781 [label="unwind"];
    bb174__0_11781 -> bb227__0_11781 [label=""];
    bb175__0_11781 -> bb176__0_11781 [label="return"];
    bb175__0_11781 -> bb262__0_11781 [label="unwind"];
    bb176__0_11781 -> bb177__0_11781 [label="return"];
    bb176__0_11781 -> bb262__0_11781 [label="unwind"];
    bb177__0_11781 -> bb178__0_11781 [label="return"];
    bb177__0_11781 -> bb262__0_11781 [label="unwind"];
    bb178__0_11781 -> bb179__0_11781 [label="return"];
    bb178__0_11781 -> bb262__0_11781 [label="unwind"];
    bb179__0_11781 -> bb180__0_11781 [label="return"];
    bb179__0_11781 -> bb262__0_11781 [label="unwind"];
    bb180__0_11781 -> bb181__0_11781 [label="0"];
    bb180__0_11781 -> bb182__0_11781 [label="1"];
    bb180__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb181__0_11781 -> bb184__0_11781 [label="return"];
    bb181__0_11781 -> bb262__0_11781 [label="unwind"];
    bb182__0_11781 -> bb183__0_11781 [label="return"];
    bb182__0_11781 -> bb262__0_11781 [label="unwind"];
    bb183__0_11781 -> bb227__0_11781 [label=""];
    bb184__0_11781 -> bb185__0_11781 [label="return"];
    bb184__0_11781 -> bb262__0_11781 [label="unwind"];
    bb185__0_11781 -> bb186__0_11781 [label="return"];
    bb185__0_11781 -> bb262__0_11781 [label="unwind"];
    bb186__0_11781 -> bb187__0_11781 [label="0"];
    bb186__0_11781 -> bb188__0_11781 [label="1"];
    bb186__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb187__0_11781 -> bb190__0_11781 [label="return"];
    bb187__0_11781 -> bb261__0_11781 [label="unwind"];
    bb188__0_11781 -> bb189__0_11781 [label="return"];
    bb188__0_11781 -> bb294__0_11781 [label="unwind"];
    bb189__0_11781 -> bb226__0_11781 [label=""];
    bb190__0_11781 -> bb191__0_11781 [label="return"];
    bb190__0_11781 -> bb261__0_11781 [label="unwind"];
    bb191__0_11781 -> bb192__0_11781 [label="return"];
    bb191__0_11781 -> bb261__0_11781 [label="unwind"];
    bb192__0_11781 -> bb290__0_11781 [label="return"];
    bb192__0_11781 -> bb294__0_11781 [label="unwind"];
    bb193__0_11781 -> bb194__0_11781 [label="return"];
    bb193__0_11781 -> bb262__0_11781 [label="unwind"];
    bb194__0_11781 -> bb195__0_11781 [label="return"];
    bb194__0_11781 -> bb262__0_11781 [label="unwind"];
    bb195__0_11781 -> bb196__0_11781 [label="0"];
    bb195__0_11781 -> bb197__0_11781 [label="1"];
    bb195__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb196__0_11781 -> bb200__0_11781 [label=""];
    bb197__0_11781 -> bb198__0_11781 [label="return"];
    bb197__0_11781 -> bb262__0_11781 [label="unwind"];
    bb198__0_11781 -> bb226__0_11781 [label=""];
    bb199__0_11781 -> bb200__0_11781 [label=""];
    bb200__0_11781 -> bb201__0_11781 [label="return"];
    bb200__0_11781 -> bb262__0_11781 [label="unwind"];
    bb201__0_11781 -> bb202__0_11781 [label="return"];
    bb201__0_11781 -> bb262__0_11781 [label="unwind"];
    bb202__0_11781 -> bb203__0_11781 [label="0"];
    bb202__0_11781 -> bb204__0_11781 [label="1"];
    bb202__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb203__0_11781 -> bb206__0_11781 [label="return"];
    bb203__0_11781 -> bb260__0_11781 [label="unwind"];
    bb204__0_11781 -> bb205__0_11781 [label="return"];
    bb204__0_11781 -> bb293__0_11781 [label="unwind"];
    bb205__0_11781 -> bb225__0_11781 [label=""];
    bb206__0_11781 -> bb207__0_11781 [label="return"];
    bb206__0_11781 -> bb260__0_11781 [label="unwind"];
    bb207__0_11781 -> bb208__0_11781 [label="0"];
    bb207__0_11781 -> bb209__0_11781 [label="1"];
    bb207__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb208__0_11781 -> bb211__0_11781 [label="return"];
    bb208__0_11781 -> bb259__0_11781 [label="unwind"];
    bb209__0_11781 -> bb210__0_11781 [label="return"];
    bb209__0_11781 -> bb292__0_11781 [label="unwind"];
    bb210__0_11781 -> bb224__0_11781 [label=""];
    bb211__0_11781 -> bb212__0_11781 [label="return"];
    bb211__0_11781 -> bb259__0_11781 [label="unwind"];
    bb212__0_11781 -> bb213__0_11781 [label="0"];
    bb212__0_11781 -> bb214__0_11781 [label="1"];
    bb212__0_11781 -> bb4__0_11781 [label="otherwise"];
    bb213__0_11781 -> bb216__0_11781 [label="return"];
    bb213__0_11781 -> bb260__0_11781 [label="unwind"];
    bb214__0_11781 -> bb215__0_11781 [label="return"];
    bb214__0_11781 -> bb259__0_11781 [label="unwind"];
    bb215__0_11781 -> bb224__0_11781 [label="return"];
    bb215__0_11781 -> bb260__0_11781 [label="unwind"];
    bb216__0_11781 -> bb217__0_11781 [label="return"];
    bb216__0_11781 -> bb262__0_11781 [label="unwind"];
    bb217__0_11781 -> bb218__0_11781 [label="return"];
    bb217__0_11781 -> bb263__0_11781 [label="unwind"];
    bb218__0_11781 -> bb219__0_11781 [label="return"];
    bb218__0_11781 -> bb297__0_11781 [label="unwind"];
    bb219__0_11781 -> bb220__0_11781 [label="return"];
    bb219__0_11781 -> bb283__0_11781 [label="unwind"];
    bb220__0_11781 -> bb221__0_11781 [label="return"];
    bb220__0_11781 -> bb284__0_11781 [label="unwind"];
    bb221__0_11781 -> bb222__0_11781 [label="return"];
    bb221__0_11781 -> bb285__0_11781 [label="unwind"];
    bb222__0_11781 -> bb223__0_11781 [label="return"];
    bb222__0_11781 -> bb288__0_11781 [label="unwind"];
    bb223__0_11781 -> bb258__0_11781 [label=""];
    bb224__0_11781 -> bb225__0_11781 [label="return"];
    bb224__0_11781 -> bb262__0_11781 [label="unwind"];
    bb225__0_11781 -> bb226__0_11781 [label=""];
    bb226__0_11781 -> bb227__0_11781 [label=""];
    bb227__0_11781 -> bb228__0_11781 [label="return"];
    bb227__0_11781 -> bb263__0_11781 [label="unwind"];
    bb228__0_11781 -> bb229__0_11781 [label="return"];
    bb228__0_11781 -> bb297__0_11781 [label="unwind"];
    bb229__0_11781 -> bb230__0_11781 [label=""];
    bb230__0_11781 -> bb231__0_11781 [label=""];
    bb231__0_11781 -> bb232__0_11781 [label="0"];
    bb231__0_11781 -> bb291__0_11781 [label="otherwise"];
    bb232__0_11781 -> bb247__0_11781 [label="return"];
    bb232__0_11781 -> bb283__0_11781 [label="unwind"];
    bb233__0_11781 -> bb234__0_11781 [label="return"];
    bb233__0_11781 -> bb299__0_11781 [label="unwind"];
    bb234__0_11781 -> bb246__0_11781 [label=""];
    bb235__0_11781 -> bb246__0_11781 [label=""];
    bb236__0_11781 -> bb237__0_11781 [label="return"];
    bb236__0_11781 -> bb302__0_11781 [label="unwind"];
    bb237__0_11781 -> bb246__0_11781 [label=""];
    bb238__0_11781 -> bb246__0_11781 [label=""];
    bb239__0_11781 -> bb240__0_11781 [label="return"];
    bb239__0_11781 -> bb305__0_11781 [label="unwind"];
    bb240__0_11781 -> bb246__0_11781 [label=""];
    bb241__0_11781 -> bb246__0_11781 [label=""];
    bb242__0_11781 -> bb243__0_11781 [label="return"];
    bb242__0_11781 -> bb308__0_11781 [label="unwind"];
    bb243__0_11781 -> bb245__0_11781 [label=""];
    bb244__0_11781 -> bb245__0_11781 [label=""];
    bb245__0_11781 -> bb246__0_11781 [label=""];
    bb246__0_11781 -> bb247__0_11781 [label=""];
    bb247__0_11781 -> bb248__0_11781 [label=""];
    bb248__0_11781 -> bb249__0_11781 [label=""];
    bb249__0_11781 -> bb250__0_11781 [label="return"];
    bb249__0_11781 -> bb284__0_11781 [label="unwind"];
    bb250__0_11781 -> bb251__0_11781 [label="return"];
    bb250__0_11781 -> bb285__0_11781 [label="unwind"];
    bb251__0_11781 -> bb252__0_11781 [label="return"];
    bb251__0_11781 -> bb288__0_11781 [label="unwind"];
    bb252__0_11781 -> bb256__0_11781 [label=""];
    bb253__0_11781 -> bb254__0_11781 [label="return"];
    bb253__0_11781 -> bb287__0_11781 [label="unwind"];
    bb254__0_11781 -> bb255__0_11781 [label="return"];
    bb254__0_11781 -> bb288__0_11781 [label="unwind"];
    bb255__0_11781 -> bb256__0_11781 [label=""];
    bb256__0_11781 -> bb257__0_11781 [label=""];
    bb257__0_11781 -> bb258__0_11781 [label=""];
    bb259__0_11781 -> bb260__0_11781 [label="return"];
    bb260__0_11781 -> bb262__0_11781 [label="return"];
    bb261__0_11781 -> bb294__0_11781 [label="return"];
    bb262__0_11781 -> bb263__0_11781 [label="return"];
    bb263__0_11781 -> bb297__0_11781 [label="return"];
    bb264__0_11781 -> bb295__0_11781 [label="return"];
    bb265__0_11781 -> bb283__0_11781 [label="return"];
    bb266__0_11781 -> bb267__0_11781 [label="return"];
    bb267__0_11781 -> bb299__0_11781 [label="return"];
    bb268__0_11781 -> bb269__0_11781 [label="return"];
    bb269__0_11781 -> bb283__0_11781 [label="return"];
    bb270__0_11781 -> bb271__0_11781 [label="return"];
    bb271__0_11781 -> bb302__0_11781 [label="return"];
    bb272__0_11781 -> bb273__0_11781 [label="return"];
    bb273__0_11781 -> bb283__0_11781 [label="return"];
    bb274__0_11781 -> bb275__0_11781 [label="return"];
    bb275__0_11781 -> bb305__0_11781 [label="return"];
    bb276__0_11781 -> bb277__0_11781 [label="return"];
    bb277__0_11781 -> bb283__0_11781 [label="return"];
    bb278__0_11781 -> bb279__0_11781 [label="return"];
    bb279__0_11781 -> bb308__0_11781 [label="return"];
    bb280__0_11781 -> bb281__0_11781 [label="return"];
    bb281__0_11781 -> bb283__0_11781 [label="return"];
    bb282__0_11781 -> bb283__0_11781 [label="return"];
    bb283__0_11781 -> bb284__0_11781 [label="return"];
    bb284__0_11781 -> bb285__0_11781 [label="return"];
    bb285__0_11781 -> bb288__0_11781 [label="return"];
    bb286__0_11781 -> bb287__0_11781 [label="return"];
    bb287__0_11781 -> bb288__0_11781 [label="return"];
    bb289__0_11781 -> bb160__0_11781 [label="return"];
    bb289__0_11781 -> bb297__0_11781 [label="unwind"];
    bb290__0_11781 -> bb199__0_11781 [label="0"];
    bb290__0_11781 -> bb193__0_11781 [label="otherwise"];
    bb291__0_11781 -> bb232__0_11781 [label="return"];
    bb291__0_11781 -> bb265__0_11781 [label="unwind"];
    bb292__0_11781 -> bb260__0_11781 [label=""];
    bb293__0_11781 -> bb262__0_11781 [label=""];
    bb294__0_11781 -> bb262__0_11781 [label=""];
    bb295__0_11781 -> bb297__0_11781 [label=""];
    bb296__0_11781 -> bb265__0_11781 [label="return"];
    bb297__0_11781 -> bb265__0_11781 [label="0"];
    bb297__0_11781 -> bb296__0_11781 [label="otherwise"];
    bb298__0_11781 -> bb265__0_11781 [label=""];
    bb299__0_11781 -> bb283__0_11781 [label=""];
    bb300__0_11781 -> bb269__0_11781 [label=""];
    bb301__0_11781 -> bb283__0_11781 [label=""];
    bb302__0_11781 -> bb283__0_11781 [label=""];
    bb303__0_11781 -> bb273__0_11781 [label=""];
    bb304__0_11781 -> bb283__0_11781 [label=""];
    bb305__0_11781 -> bb283__0_11781 [label=""];
    bb306__0_11781 -> bb277__0_11781 [label=""];
    bb307__0_11781 -> bb283__0_11781 [label=""];
    bb308__0_11781 -> bb283__0_11781 [label=""];
    bb309__0_11781 -> bb281__0_11781 [label=""];
    bb310__0_11781 -> bb283__0_11781 [label=""];
    bb311__0_11781 -> bb312__0_11781 [label=""];
    bb312__0_11781 -> bb286__0_11781 [label=""];
    bb313__0_11781 -> bb288__0_11781 [label=""];
    bb314__0_11781 -> bb288__0_11781 [label=""];
    bb315__0_11781 -> bb16__0_11781 [label="return"];
    bb315__0_11781 -> bb287__0_11781 [label="unwind"];
}
