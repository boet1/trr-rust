digraph Mir_0_9197 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_fill_spot_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::FillOrder&lt;ReErased&gt;&gt;, _2: std::option::Option&lt;u32&gt;, _3: std::option::Option&lt;instructions::keeper::SpotFulfillmentType&gt;, _4: std::option::Option&lt;u32&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: u32;<br align="left"/>let _16: u16;<br align="left"/>let mut _17: (u32, u16);<br align="left"/>let _18: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _19: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _21: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _22: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _24: Closure(DefId(0:9203 ~ drift[d311]::instructions::keeper::handle_fill_spot_order::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _30: u32;<br align="left"/>let mut _31: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _32: Closure(DefId(0:9200 ~ drift[d311]::instructions::keeper::handle_fill_spot_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; u32, []), (&amp;ReErased &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;,)]);<br align="left"/>let mut _33: &amp;ReErased &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _34: u16;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _36: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _37: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _38: std::option::Option&lt;&amp;ReErased state::user::Order&gt;;<br align="left"/>let mut _39: &amp;ReErased state::user::User;<br align="left"/>let _40: &amp;ReErased state::user::User;<br align="left"/>let mut _41: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _42: u32;<br align="left"/>let mut _43: Closure(DefId(0:9201 ~ drift[d311]::instructions::keeper::handle_fill_spot_order::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; u16, []), ()]);<br align="left"/>let mut _44: error::ErrorCode;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: u16;<br align="left"/>let mut _50: u32;<br align="left"/>let mut _51: u16;<br align="left"/>let _52: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _53: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _55: ();<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _57: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _59: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::FillOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _60: u32;<br align="left"/>let mut _61: u16;<br align="left"/>let mut _62: instructions::keeper::SpotFulfillmentType;<br align="left"/>let mut _63: std::option::Option&lt;instructions::keeper::SpotFulfillmentType&gt;;<br align="left"/>let mut _64: instructions::keeper::SpotFulfillmentType;<br align="left"/>let mut _65: Closure(DefId(0:9202 ~ drift[d311]::instructions::keeper::handle_fill_spot_order::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), (&amp;ReErased u32, &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey)]);<br align="left"/>let mut _66: &amp;ReErased u32;<br align="left"/>let mut _67: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: ();<br align="left"/>let mut _74: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _75: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _76: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug order_id =&gt; _2;<br align="left"/>debug fulfillment_type =&gt; _3;<br align="left"/>debug _maker_order_id =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug order_id =&gt; _15;<br align="left"/>debug market_index =&gt; _16;<br align="left"/>debug user =&gt; _18;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug order_id =&gt; _30;<br align="left"/>debug market_index =&gt; _34;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug user_key =&gt; _52;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>>;
    bb0__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_74 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_9 = &amp;((*_74).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_75 = deref_copy (*_9)<br/>_93 = (((_75.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_93)<br/></td></tr><tr><td align="left">_7 = constraints::fill_not_paused(move _8)</td></tr></table>>];
    bb1__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_78 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_76 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_23 = &amp;((*_76).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_22 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _23)</td></tr></table>>];
    bb4__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_88 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>_24 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_21 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _22, move _24)</td></tr></table>>];
    bb8__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb9__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_25 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb10__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = move ((_20 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_19 = move _29<br/>StorageDead(_29)<br/>_18 = &amp;_19<br/>_82 = discriminant(_20)<br/>StorageDead(_20)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _2<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_18<br/>_32 = {closure@programs/drift/src/instructions/keeper.rs:212:48: 212:50} { user: move _33 }<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_30 = Option::&lt;u32&gt;::unwrap_or_else::&lt;{closure@programs/drift/src/instructions/keeper.rs:212:48: 212:50}&gt;(move _31, move _32)</td></tr></table>>];
    bb11__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb12__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>_80 = discriminant(_20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;(*_18)<br/></td></tr><tr><td align="left">_40 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb14__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>_42 = _30<br/></td></tr><tr><td align="left">_38 = User::get_order(move _39, move _42)</td></tr></table>>];
    bb15__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_39)<br/>StorageLive(_43)<br/>_43 = {closure@programs/drift/src/instructions/keeper.rs:215:18: 215:25}<br/></td></tr><tr><td align="left">_37 = Option::&lt;&amp;Order&gt;::map::&lt;u16, {closure@programs/drift/src/instructions/keeper.rs:215:18: 215:25}&gt;(move _38, move _43)</td></tr></table>>];
    bb16__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_38)<br/>StorageLive(_44)<br/>_44 = error::ErrorCode::OrderDoesNotExist<br/></td></tr><tr><td align="left">_36 = Option::&lt;u16&gt;::ok_or::&lt;error::ErrorCode&gt;(move _37, move _44)</td></tr></table>>];
    bb17__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb18__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_45 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb19__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_35 as Continue).0: u16)<br/>_34 = _49<br/>StorageDead(_49)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageLive(_50)<br/>_50 = _30<br/>StorageLive(_51)<br/>_51 = _34<br/>_17 = (move _50, move _51)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb20__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb21__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb22__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_15)<br/>_15 = (_17.0: u32)<br/>StorageLive(_16)<br/>_16 = (_17.1: u16)<br/>StorageDead(_17)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_54 = &amp;((*_77).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _54)</td></tr></table>>];
    bb23__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = &amp;_53<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = move _1<br/>StorageLive(_60)<br/>_60 = _15<br/>StorageLive(_61)<br/>_61 = _16<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _3<br/>StorageLive(_64)<br/>_64 = keeper::SpotFulfillmentType::Match<br/></td></tr><tr><td align="left">_62 = Option::&lt;keeper::SpotFulfillmentType&gt;::unwrap_or(move _63, move _64)</td></tr></table>>];
    bb24__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_58 = keeper::fill_spot_order::&lt;'_, '_&gt;(move _59, move _60, move _61, move _62)</td></tr></table>>];
    bb25__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;_15<br/>StorageLive(_67)<br/>_67 = &amp;_52<br/>_65 = {closure@programs/drift/src/instructions/keeper.rs:228:14: 228:17} { order_id: move _66, user_key: move _67 }<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_57 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:228:14: 228:17}&gt;(move _58, move _65)</td></tr></table>>];
    bb26__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb27__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_68 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb28__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_56 as Continue).0: ())<br/>_55 = _72<br/>StorageDead(_72)<br/>_84 = discriminant(_56)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_73)<br/>_73 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _73)<br/>StorageDead(_73)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = move ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_71)<br/>_71 = move _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb30__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>_86 = discriminant(_56)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">return</td></tr></table>>];
    bb33__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb34__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb35__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_9197 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_92 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9197 -> bb1__0_9197 [label="return"];
    bb1__0_9197 -> bb2__0_9197 [label="return"];
    bb1__0_9197 -> bb34__0_9197 [label="unwind"];
    bb2__0_9197 -> bb3__0_9197 [label="0"];
    bb2__0_9197 -> bb5__0_9197 [label="1"];
    bb2__0_9197 -> bb4__0_9197 [label="otherwise"];
    bb3__0_9197 -> bb7__0_9197 [label="return"];
    bb5__0_9197 -> bb6__0_9197 [label="return"];
    bb5__0_9197 -> bb37__0_9197 [label="unwind"];
    bb6__0_9197 -> bb32__0_9197 [label=""];
    bb7__0_9197 -> bb8__0_9197 [label="return"];
    bb7__0_9197 -> bb34__0_9197 [label="unwind"];
    bb8__0_9197 -> bb9__0_9197 [label="return"];
    bb8__0_9197 -> bb34__0_9197 [label="unwind"];
    bb9__0_9197 -> bb10__0_9197 [label="0"];
    bb9__0_9197 -> bb11__0_9197 [label="1"];
    bb9__0_9197 -> bb4__0_9197 [label="otherwise"];
    bb10__0_9197 -> bb13__0_9197 [label="return"];
    bb10__0_9197 -> bb33__0_9197 [label="unwind"];
    bb11__0_9197 -> bb12__0_9197 [label="return"];
    bb11__0_9197 -> bb36__0_9197 [label="unwind"];
    bb12__0_9197 -> bb31__0_9197 [label=""];
    bb13__0_9197 -> bb14__0_9197 [label="return"];
    bb13__0_9197 -> bb33__0_9197 [label="unwind"];
    bb14__0_9197 -> bb15__0_9197 [label="return"];
    bb14__0_9197 -> bb33__0_9197 [label="unwind"];
    bb15__0_9197 -> bb16__0_9197 [label="return"];
    bb15__0_9197 -> bb33__0_9197 [label="unwind"];
    bb16__0_9197 -> bb17__0_9197 [label="return"];
    bb16__0_9197 -> bb33__0_9197 [label="unwind"];
    bb17__0_9197 -> bb18__0_9197 [label="return"];
    bb17__0_9197 -> bb33__0_9197 [label="unwind"];
    bb18__0_9197 -> bb19__0_9197 [label="0"];
    bb18__0_9197 -> bb20__0_9197 [label="1"];
    bb18__0_9197 -> bb4__0_9197 [label="otherwise"];
    bb19__0_9197 -> bb22__0_9197 [label="return"];
    bb19__0_9197 -> bb34__0_9197 [label="unwind"];
    bb20__0_9197 -> bb21__0_9197 [label="return"];
    bb20__0_9197 -> bb33__0_9197 [label="unwind"];
    bb21__0_9197 -> bb31__0_9197 [label="return"];
    bb21__0_9197 -> bb34__0_9197 [label="unwind"];
    bb22__0_9197 -> bb23__0_9197 [label="return"];
    bb23__0_9197 -> bb24__0_9197 [label="return"];
    bb24__0_9197 -> bb25__0_9197 [label="return"];
    bb25__0_9197 -> bb26__0_9197 [label="return"];
    bb25__0_9197 -> bb34__0_9197 [label="unwind"];
    bb26__0_9197 -> bb27__0_9197 [label="return"];
    bb26__0_9197 -> bb34__0_9197 [label="unwind"];
    bb27__0_9197 -> bb28__0_9197 [label="0"];
    bb27__0_9197 -> bb29__0_9197 [label="1"];
    bb27__0_9197 -> bb4__0_9197 [label="otherwise"];
    bb28__0_9197 -> bb32__0_9197 [label=""];
    bb29__0_9197 -> bb30__0_9197 [label="return"];
    bb29__0_9197 -> bb35__0_9197 [label="unwind"];
    bb30__0_9197 -> bb32__0_9197 [label=""];
    bb31__0_9197 -> bb32__0_9197 [label=""];
    bb33__0_9197 -> bb34__0_9197 [label="return"];
    bb35__0_9197 -> bb34__0_9197 [label=""];
    bb36__0_9197 -> bb34__0_9197 [label=""];
    bb37__0_9197 -> bb34__0_9197 [label=""];
}
