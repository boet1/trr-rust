digraph Mir_0_1829 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_clamped_jit_base_asset_amount(_1: &amp;ReErased state::perp_market::PerpMarket, _2: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _6: u128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: u128;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _24: u8;<br align="left"/>let mut _25: u8;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u128;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: u128;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: u64;<br align="left"/>let _46: u64;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: u64;<br align="left"/>let _56: u64;<br align="left"/>let mut _57: u64;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: u64;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug jit_base_asset_amount =&gt; _2;<br align="left"/>debug jit_base_asset_amount =&gt; _3;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug max_amm_base_asset_amount =&gt; _46;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug jit_base_asset_amount =&gt; _56;<br align="left"/>>;
    bb0__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _2<br/></td></tr><tr><td align="left">_14 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _15)</td></tr></table>>];
    bb1__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb2__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: u128)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = (((*_1).1: state::perp_market::AMM).71: u8)<br/></td></tr><tr><td align="left">_24 = &lt;u8 as Ord&gt;::min(move _25, const 100_u8)</td></tr></table>>];
    bb4__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb6__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;u8 as Cast&gt;::cast::&lt;u128&gt;(move _24)</td></tr></table>>];
    bb8__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_26 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Continue).0: u128)<br/>_21 = _30<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_11 = &lt;u128 as SafeMath&gt;::safe_mul(move _12, move _21)</td></tr></table>>];
    bb11__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb12__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb14__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_31 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb15__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_10 as Continue).0: u128)<br/>_9 = _35<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_8 = &lt;u128 as SafeMath&gt;::safe_div(move _9, const 100_u128)</td></tr></table>>];
    bb16__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb17__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb19__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_36 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb20__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_7 as Continue).0: u128)<br/>_6 = _40<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_5 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _6)</td></tr></table>>];
    bb21__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb22__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb24__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_41 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb25__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_4 as Continue).0: u64)<br/>_3 = _45<br/>StorageDead(_45)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = (((*_1).1: state::perp_market::AMM).15: i128)<br/></td></tr><tr><td align="left">_49 = core::num::&lt;impl i128&gt;::unsigned_abs(move _50)</td></tr></table>>];
    bb26__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb27__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _49)</td></tr></table>>];
    bb29__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb30__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_51 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb31__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_47 as Continue).0: u64)<br/>_46 = _55<br/>StorageDead(_55)<br/>StorageDead(_47)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _3<br/>StorageLive(_58)<br/>_58 = _46<br/></td></tr><tr><td align="left">_56 = &lt;u64 as Ord&gt;::min(move _57, move _58)</td></tr></table>>];
    bb32__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb33__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_59)<br/>_59 = _56<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _59)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_46)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1829 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1829 -> bb1__0_1829 [label="return"];
    bb1__0_1829 -> bb2__0_1829 [label="return"];
    bb2__0_1829 -> bb3__0_1829 [label="0"];
    bb2__0_1829 -> bb5__0_1829 [label="1"];
    bb2__0_1829 -> bb4__0_1829 [label="otherwise"];
    bb3__0_1829 -> bb7__0_1829 [label="return"];
    bb5__0_1829 -> bb6__0_1829 [label="return"];
    bb6__0_1829 -> bb38__0_1829 [label=""];
    bb7__0_1829 -> bb8__0_1829 [label="return"];
    bb8__0_1829 -> bb9__0_1829 [label="return"];
    bb9__0_1829 -> bb10__0_1829 [label="0"];
    bb9__0_1829 -> bb11__0_1829 [label="1"];
    bb9__0_1829 -> bb4__0_1829 [label="otherwise"];
    bb10__0_1829 -> bb13__0_1829 [label="return"];
    bb11__0_1829 -> bb12__0_1829 [label="return"];
    bb12__0_1829 -> bb35__0_1829 [label=""];
    bb13__0_1829 -> bb14__0_1829 [label="return"];
    bb14__0_1829 -> bb15__0_1829 [label="0"];
    bb14__0_1829 -> bb16__0_1829 [label="1"];
    bb14__0_1829 -> bb4__0_1829 [label="otherwise"];
    bb15__0_1829 -> bb18__0_1829 [label="return"];
    bb16__0_1829 -> bb17__0_1829 [label="return"];
    bb17__0_1829 -> bb35__0_1829 [label=""];
    bb18__0_1829 -> bb19__0_1829 [label="return"];
    bb19__0_1829 -> bb20__0_1829 [label="0"];
    bb19__0_1829 -> bb21__0_1829 [label="1"];
    bb19__0_1829 -> bb4__0_1829 [label="otherwise"];
    bb20__0_1829 -> bb23__0_1829 [label="return"];
    bb21__0_1829 -> bb22__0_1829 [label="return"];
    bb22__0_1829 -> bb36__0_1829 [label=""];
    bb23__0_1829 -> bb24__0_1829 [label="return"];
    bb24__0_1829 -> bb25__0_1829 [label="0"];
    bb24__0_1829 -> bb26__0_1829 [label="1"];
    bb24__0_1829 -> bb4__0_1829 [label="otherwise"];
    bb25__0_1829 -> bb28__0_1829 [label="return"];
    bb26__0_1829 -> bb27__0_1829 [label="return"];
    bb27__0_1829 -> bb37__0_1829 [label=""];
    bb28__0_1829 -> bb29__0_1829 [label="return"];
    bb29__0_1829 -> bb30__0_1829 [label="return"];
    bb30__0_1829 -> bb31__0_1829 [label="0"];
    bb30__0_1829 -> bb32__0_1829 [label="1"];
    bb30__0_1829 -> bb4__0_1829 [label="otherwise"];
    bb31__0_1829 -> bb34__0_1829 [label="return"];
    bb32__0_1829 -> bb33__0_1829 [label="return"];
    bb33__0_1829 -> bb39__0_1829 [label=""];
    bb34__0_1829 -> bb40__0_1829 [label=""];
    bb35__0_1829 -> bb36__0_1829 [label=""];
    bb36__0_1829 -> bb37__0_1829 [label=""];
    bb37__0_1829 -> bb38__0_1829 [label=""];
    bb38__0_1829 -> bb39__0_1829 [label=""];
    bb39__0_1829 -> bb40__0_1829 [label=""];
}
