digraph Mir_0_347 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::liquidate_perp_pnl_for_deposit(_1: u16, _2: u16, _3: u128, _4: std::option::Option&lt;u64&gt;, _5: &amp;ReErased mut state::user::User, _6: &amp;ReErased anchor_lang::prelude::Pubkey, _7: &amp;ReErased mut state::user::User, _8: &amp;ReErased anchor_lang::prelude::Pubkey, _9: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _10: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _11: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _12: i64, _13: u64, _14: u32, _15: u128, _16: u128) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _20: bool;<br align="left"/>let mut _21: &amp;ReErased state::user::User;<br align="left"/>let mut _22: ();<br align="left"/>let _23: error::ErrorCode;<br align="left"/>let _24: ();<br align="left"/>let mut _25: &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased str;<br align="left"/>let mut _27: &amp;ReErased std::string::String;<br align="left"/>let _28: &amp;ReErased std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let mut _31: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased error::ErrorCode;<br align="left"/>let _42: &amp;ReErased error::ErrorCode;<br align="left"/>let _43: ();<br align="left"/>let mut _44: &amp;ReErased str;<br align="left"/>let _45: &amp;ReErased str;<br align="left"/>let mut _46: &amp;ReErased std::string::String;<br align="left"/>let _47: &amp;ReErased std::string::String;<br align="left"/>let _48: std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let mut _50: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _53: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _54: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _55: error::ErrorCode;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: ();<br align="left"/>let _61: ();<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _63: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: &amp;ReErased state::user::User;<br align="left"/>let mut _66: ();<br align="left"/>let _67: error::ErrorCode;<br align="left"/>let _68: ();<br align="left"/>let mut _69: &amp;ReErased str;<br align="left"/>let _70: &amp;ReErased str;<br align="left"/>let mut _71: &amp;ReErased std::string::String;<br align="left"/>let _72: &amp;ReErased std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let _74: std::string::String;<br align="left"/>let mut _75: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _79: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _83: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _84: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased error::ErrorCode;<br align="left"/>let _86: &amp;ReErased error::ErrorCode;<br align="left"/>let _87: ();<br align="left"/>let mut _88: &amp;ReErased str;<br align="left"/>let _89: &amp;ReErased str;<br align="left"/>let mut _90: &amp;ReErased std::string::String;<br align="left"/>let _91: &amp;ReErased std::string::String;<br align="left"/>let _92: std::string::String;<br align="left"/>let _93: std::string::String;<br align="left"/>let mut _94: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _95: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _97: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _98: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _99: error::ErrorCode;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: ();<br align="left"/>let _105: ();<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _107: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: u8;<br align="left"/>let mut _110: ();<br align="left"/>let _111: error::ErrorCode;<br align="left"/>let _112: ();<br align="left"/>let mut _113: &amp;ReErased str;<br align="left"/>let _114: &amp;ReErased str;<br align="left"/>let mut _115: &amp;ReErased std::string::String;<br align="left"/>let _116: &amp;ReErased std::string::String;<br align="left"/>let _117: std::string::String;<br align="left"/>let _118: std::string::String;<br align="left"/>let mut _119: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _120: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _122: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _123: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _124: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _127: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _128: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _129: &amp;ReErased error::ErrorCode;<br align="left"/>let _130: &amp;ReErased error::ErrorCode;<br align="left"/>let _131: ();<br align="left"/>let mut _132: &amp;ReErased str;<br align="left"/>let _133: &amp;ReErased str;<br align="left"/>let mut _134: &amp;ReErased std::string::String;<br align="left"/>let _135: &amp;ReErased std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let mut _138: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _142: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _146: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _147: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased u8;<br align="left"/>let _149: &amp;ReErased u8;<br align="left"/>let mut _150: error::ErrorCode;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: ();<br align="left"/>let _156: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _158: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _159: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased u16;<br align="left"/>let _161: &amp;ReErased u16;<br align="left"/>let mut _162: isize;<br align="left"/>let _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _166: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _167: ();<br align="left"/>let mut _168: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _169: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _170: bool;<br align="left"/>let mut _171: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _172: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _173: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _174: state::paused_operations::SpotOperation;<br align="left"/>let mut _175: ();<br align="left"/>let _176: error::ErrorCode;<br align="left"/>let _177: ();<br align="left"/>let mut _178: &amp;ReErased str;<br align="left"/>let _179: &amp;ReErased str;<br align="left"/>let mut _180: &amp;ReErased std::string::String;<br align="left"/>let _181: &amp;ReErased std::string::String;<br align="left"/>let _182: std::string::String;<br align="left"/>let _183: std::string::String;<br align="left"/>let mut _184: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _186: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _187: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _188: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _189: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _190: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _191: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _192: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _193: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased error::ErrorCode;<br align="left"/>let _195: &amp;ReErased error::ErrorCode;<br align="left"/>let _196: ();<br align="left"/>let mut _197: &amp;ReErased str;<br align="left"/>let _198: &amp;ReErased str;<br align="left"/>let mut _199: &amp;ReErased std::string::String;<br align="left"/>let _200: &amp;ReErased std::string::String;<br align="left"/>let _201: std::string::String;<br align="left"/>let _202: std::string::String;<br align="left"/>let mut _203: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _204: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _206: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _207: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _208: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _210: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _211: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _212: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _213: &amp;ReErased u16;<br align="left"/>let _214: &amp;ReErased u16;<br align="left"/>let mut _215: error::ErrorCode;<br align="left"/>let mut _216: isize;<br align="left"/>let _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _218: !;<br align="left"/>let mut _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _220: ();<br align="left"/>let _221: ();<br align="left"/>let mut _222: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _223: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _224: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _225: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _226: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _227: &amp;ReErased u16;<br align="left"/>let _228: &amp;ReErased u16;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _234: ();<br align="left"/>let mut _235: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _236: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _237: bool;<br align="left"/>let mut _238: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _239: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _240: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _241: state::paused_operations::PerpOperation;<br align="left"/>let mut _242: ();<br align="left"/>let _243: error::ErrorCode;<br align="left"/>let _244: ();<br align="left"/>let mut _245: &amp;ReErased str;<br align="left"/>let _246: &amp;ReErased str;<br align="left"/>let mut _247: &amp;ReErased std::string::String;<br align="left"/>let _248: &amp;ReErased std::string::String;<br align="left"/>let _249: std::string::String;<br align="left"/>let _250: std::string::String;<br align="left"/>let mut _251: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _252: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _253: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _254: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _255: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _256: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _257: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _258: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _259: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _260: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _261: &amp;ReErased error::ErrorCode;<br align="left"/>let _262: &amp;ReErased error::ErrorCode;<br align="left"/>let _263: ();<br align="left"/>let mut _264: &amp;ReErased str;<br align="left"/>let _265: &amp;ReErased str;<br align="left"/>let mut _266: &amp;ReErased std::string::String;<br align="left"/>let _267: &amp;ReErased std::string::String;<br align="left"/>let _268: std::string::String;<br align="left"/>let _269: std::string::String;<br align="left"/>let mut _270: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _271: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _272: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _273: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _274: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _275: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _276: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _277: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _278: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _279: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased u16;<br align="left"/>let _281: &amp;ReErased u16;<br align="left"/>let mut _282: error::ErrorCode;<br align="left"/>let mut _283: isize;<br align="left"/>let _284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _285: !;<br align="left"/>let mut _286: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _287: ();<br align="left"/>let _288: ();<br align="left"/>let mut _289: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _290: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _292: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _293: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _294: &amp;ReErased state::user::User;<br align="left"/>let mut _295: u16;<br align="left"/>let mut _296: Closure(DefId(0:348 ~ drift[d311]::controller::liquidation::liquidate_perp_pnl_for_deposit::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _297: &amp;ReErased u16;<br align="left"/>let mut _298: isize;<br align="left"/>let _299: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _300: !;<br align="left"/>let mut _301: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _302: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _303: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _304: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _305: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _306: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _307: &amp;ReErased state::user::User;<br align="left"/>let mut _308: u16;<br align="left"/>let mut _309: Closure(DefId(0:349 ~ drift[d311]::controller::liquidation::liquidate_perp_pnl_for_deposit::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _310: &amp;ReErased u16;<br align="left"/>let mut _311: isize;<br align="left"/>let _312: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _313: !;<br align="left"/>let mut _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _315: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _316: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _317: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _318: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _319: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _320: &amp;ReErased mut state::user::User;<br align="left"/>let mut _321: u16;<br align="left"/>let mut _322: Closure(DefId(0:350 ~ drift[d311]::controller::liquidation::liquidate_perp_pnl_for_deposit::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _323: isize;<br align="left"/>let _324: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _325: !;<br align="left"/>let mut _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _327: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _328: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _329: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _330: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _331: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _332: &amp;ReErased mut state::user::User;<br align="left"/>let mut _333: u16;<br align="left"/>let mut _334: Closure(DefId(0:351 ~ drift[d311]::controller::liquidation::liquidate_perp_pnl_for_deposit::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _335: isize;<br align="left"/>let _336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _337: !;<br align="left"/>let mut _338: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _339: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _340: ();<br align="left"/>let mut _341: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _342: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _343: &amp;ReErased mut state::user::User;<br align="left"/>let mut _344: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _345: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _346: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _347: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _348: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _349: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _350: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _351: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased u16;<br align="left"/>let _353: &amp;ReErased u16;<br align="left"/>let mut _354: isize;<br align="left"/>let _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _358: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _359: i64;<br align="left"/>let mut _360: isize;<br align="left"/>let _361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _362: !;<br align="left"/>let mut _363: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _364: ();<br align="left"/>let _365: ();<br align="left"/>let mut _366: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _367: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _368: &amp;ReErased mut state::user::User;<br align="left"/>let mut _369: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _370: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _371: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _372: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _373: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _374: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _375: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _376: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _377: &amp;ReErased u16;<br align="left"/>let _378: &amp;ReErased u16;<br align="left"/>let mut _379: isize;<br align="left"/>let _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _381: !;<br align="left"/>let mut _382: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _383: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _384: i64;<br align="left"/>let mut _385: isize;<br align="left"/>let _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _387: !;<br align="left"/>let mut _388: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _389: ();<br align="left"/>let _390: u128;<br align="left"/>let _391: i64;<br align="left"/>let _392: state::spot_market::AssetTier;<br align="left"/>let _393: u32;<br align="left"/>let _394: u32;<br align="left"/>let _395: u32;<br align="left"/>let mut _396: (u128, i64, state::spot_market::AssetTier, u32, u32, u32);<br align="left"/>let mut _397: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _398: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _399: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _400: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _401: &amp;ReErased u16;<br align="left"/>let _402: &amp;ReErased u16;<br align="left"/>let mut _403: isize;<br align="left"/>let _404: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _405: !;<br align="left"/>let mut _406: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _407: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _408: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _409: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _410: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _411: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _412: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _413: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _414: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _415: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _416: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _417: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _418: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _419: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _420: isize;<br align="left"/>let _421: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _422: !;<br align="left"/>let mut _423: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _424: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _425: ();<br align="left"/>let mut _426: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _427: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _428: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _429: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _430: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _431: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _432: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _433: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _434: i64;<br align="left"/>let mut _435: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _436: math::oracle::DriftAction;<br align="left"/>let mut _437: isize;<br align="left"/>let _438: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _439: !;<br align="left"/>let mut _440: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _441: ();<br align="left"/>let _442: i64;<br align="left"/>let _443: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _444: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _445: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _446: &amp;ReErased state::user::User;<br align="left"/>let mut _447: u16;<br align="left"/>let mut _448: isize;<br align="left"/>let _449: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _450: !;<br align="left"/>let mut _451: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _452: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _453: ();<br align="left"/>let mut _454: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _455: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _456: bool;<br align="left"/>let mut _457: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _458: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _459: state::spot_market::SpotBalanceType;<br align="left"/>let mut _460: ();<br align="left"/>let _461: error::ErrorCode;<br align="left"/>let _462: ();<br align="left"/>let mut _463: &amp;ReErased str;<br align="left"/>let _464: &amp;ReErased str;<br align="left"/>let mut _465: &amp;ReErased std::string::String;<br align="left"/>let _466: &amp;ReErased std::string::String;<br align="left"/>let _467: std::string::String;<br align="left"/>let _468: std::string::String;<br align="left"/>let mut _469: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _470: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _471: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _472: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _473: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _474: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _475: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _476: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _477: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _478: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _479: &amp;ReErased error::ErrorCode;<br align="left"/>let _480: &amp;ReErased error::ErrorCode;<br align="left"/>let _481: ();<br align="left"/>let mut _482: &amp;ReErased str;<br align="left"/>let _483: &amp;ReErased str;<br align="left"/>let mut _484: error::ErrorCode;<br align="left"/>let mut _485: isize;<br align="left"/>let _486: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _487: !;<br align="left"/>let mut _488: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _489: ();<br align="left"/>let _490: u128;<br align="left"/>let mut _491: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _492: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _493: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _494: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _495: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _496: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _497: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _498: isize;<br align="left"/>let _499: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _500: !;<br align="left"/>let mut _501: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _502: u128;<br align="left"/>let _503: ();<br align="left"/>let mut _504: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _505: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _506: bool;<br align="left"/>let mut _507: u128;<br align="left"/>let mut _508: ();<br align="left"/>let _509: error::ErrorCode;<br align="left"/>let _510: ();<br align="left"/>let mut _511: &amp;ReErased str;<br align="left"/>let _512: &amp;ReErased str;<br align="left"/>let mut _513: &amp;ReErased std::string::String;<br align="left"/>let _514: &amp;ReErased std::string::String;<br align="left"/>let _515: std::string::String;<br align="left"/>let _516: std::string::String;<br align="left"/>let mut _517: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _518: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _519: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _520: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _521: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _522: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _523: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _524: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _525: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _526: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _527: &amp;ReErased error::ErrorCode;<br align="left"/>let _528: &amp;ReErased error::ErrorCode;<br align="left"/>let _529: ();<br align="left"/>let mut _530: &amp;ReErased str;<br align="left"/>let _531: &amp;ReErased str;<br align="left"/>let mut _532: &amp;ReErased std::string::String;<br align="left"/>let _533: &amp;ReErased std::string::String;<br align="left"/>let _534: std::string::String;<br align="left"/>let _535: std::string::String;<br align="left"/>let mut _536: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _537: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _538: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _539: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _540: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _541: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _542: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _543: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _544: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _545: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _546: &amp;ReErased u16;<br align="left"/>let _547: &amp;ReErased u16;<br align="left"/>let mut _548: error::ErrorCode;<br align="left"/>let mut _549: isize;<br align="left"/>let _550: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _551: !;<br align="left"/>let mut _552: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _553: ();<br align="left"/>let mut _554: u128;<br align="left"/>let mut _555: i64;<br align="left"/>let mut _556: state::spot_market::AssetTier;<br align="left"/>let mut _557: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _558: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _559: u32;<br align="left"/>let mut _560: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _561: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _562: u32;<br align="left"/>let mut _563: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _564: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _565: u32;<br align="left"/>let mut _566: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _567: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _568: u32;<br align="left"/>let mut _569: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _570: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _571: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _572: isize;<br align="left"/>let _573: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _574: !;<br align="left"/>let mut _575: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _576: u32;<br align="left"/>let _577: u128;<br align="left"/>let _578: i64;<br align="left"/>let _579: state::perp_market::ContractTier;<br align="left"/>let _580: u32;<br align="left"/>let _581: u32;<br align="left"/>let _582: u32;<br align="left"/>let mut _583: (u128, i64, state::perp_market::ContractTier, u32, u32, u32);<br align="left"/>let _584: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _585: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _586: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _587: &amp;ReErased state::user::User;<br align="left"/>let mut _588: u16;<br align="left"/>let mut _589: isize;<br align="left"/>let _590: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _591: !;<br align="left"/>let mut _592: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _593: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _594: i64;<br align="left"/>let _595: ();<br align="left"/>let mut _596: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _597: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _598: bool;<br align="left"/>let mut _599: i64;<br align="left"/>let mut _600: ();<br align="left"/>let _601: error::ErrorCode;<br align="left"/>let _602: ();<br align="left"/>let mut _603: &amp;ReErased str;<br align="left"/>let _604: &amp;ReErased str;<br align="left"/>let mut _605: &amp;ReErased std::string::String;<br align="left"/>let _606: &amp;ReErased std::string::String;<br align="left"/>let _607: std::string::String;<br align="left"/>let _608: std::string::String;<br align="left"/>let mut _609: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _610: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _611: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _612: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _613: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _614: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _615: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _616: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _617: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _618: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _619: &amp;ReErased error::ErrorCode;<br align="left"/>let _620: &amp;ReErased error::ErrorCode;<br align="left"/>let _621: ();<br align="left"/>let mut _622: &amp;ReErased str;<br align="left"/>let _623: &amp;ReErased str;<br align="left"/>let mut _624: &amp;ReErased std::string::String;<br align="left"/>let _625: &amp;ReErased std::string::String;<br align="left"/>let _626: std::string::String;<br align="left"/>let _627: std::string::String;<br align="left"/>let mut _628: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _629: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _630: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _631: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _632: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _633: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _634: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _635: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _636: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _637: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _638: &amp;ReErased i64;<br align="left"/>let _639: &amp;ReErased i64;<br align="left"/>let mut _640: error::ErrorCode;<br align="left"/>let mut _641: isize;<br align="left"/>let _642: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _643: !;<br align="left"/>let mut _644: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _645: ();<br align="left"/>let _646: i128;<br align="left"/>let mut _647: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _648: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _649: i64;<br align="left"/>let mut _650: isize;<br align="left"/>let _651: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _652: !;<br align="left"/>let mut _653: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _654: i128;<br align="left"/>let _655: ();<br align="left"/>let mut _656: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _657: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _658: bool;<br align="left"/>let mut _659: i128;<br align="left"/>let mut _660: ();<br align="left"/>let _661: error::ErrorCode;<br align="left"/>let _662: ();<br align="left"/>let mut _663: &amp;ReErased str;<br align="left"/>let _664: &amp;ReErased str;<br align="left"/>let mut _665: &amp;ReErased std::string::String;<br align="left"/>let _666: &amp;ReErased std::string::String;<br align="left"/>let _667: std::string::String;<br align="left"/>let _668: std::string::String;<br align="left"/>let mut _669: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _670: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _671: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _672: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _673: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _674: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _675: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _676: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _677: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _678: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _679: &amp;ReErased error::ErrorCode;<br align="left"/>let _680: &amp;ReErased error::ErrorCode;<br align="left"/>let _681: ();<br align="left"/>let mut _682: &amp;ReErased str;<br align="left"/>let _683: &amp;ReErased str;<br align="left"/>let mut _684: error::ErrorCode;<br align="left"/>let mut _685: isize;<br align="left"/>let _686: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _687: !;<br align="left"/>let mut _688: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _689: ();<br align="left"/>let _690: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _691: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _692: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _693: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _694: &amp;ReErased u16;<br align="left"/>let _695: &amp;ReErased u16;<br align="left"/>let mut _696: isize;<br align="left"/>let _697: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _698: !;<br align="left"/>let mut _699: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _700: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _701: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _702: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _703: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _704: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _705: &amp;ReErased u16;<br align="left"/>let _706: &amp;ReErased u16;<br align="left"/>let _707: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _708: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _709: isize;<br align="left"/>let _710: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _711: !;<br align="left"/>let mut _712: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _713: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _714: i64;<br align="left"/>let mut _715: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _716: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _717: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _718: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _719: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _720: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _721: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _722: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _723: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _724: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _725: isize;<br align="left"/>let _726: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _727: !;<br align="left"/>let mut _728: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _729: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _730: u128;<br align="left"/>let mut _731: i128;<br align="left"/>let mut _732: i64;<br align="left"/>let mut _733: state::perp_market::ContractTier;<br align="left"/>let mut _734: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _735: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _736: u32;<br align="left"/>let mut _737: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _738: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _739: u32;<br align="left"/>let mut _740: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _741: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _742: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _743: isize;<br align="left"/>let _744: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _745: !;<br align="left"/>let mut _746: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _747: u32;<br align="left"/>let _748: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _749: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _750: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _751: &amp;ReErased state::user::User;<br align="left"/>let mut _752: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _753: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _754: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _755: state::margin_calculation::MarginContext;<br align="left"/>let mut _756: u32;<br align="left"/>let mut _757: isize;<br align="left"/>let _758: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _759: !;<br align="left"/>let mut _760: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _761: state::margin_calculation::MarginCalculation;<br align="left"/>let _762: ();<br align="left"/>let mut _763: bool;<br align="left"/>let mut _764: &amp;ReErased state::user::User;<br align="left"/>let mut _765: bool;<br align="left"/>let mut _766: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _767: !;<br align="left"/>let _768: ();<br align="left"/>let mut _769: &amp;ReErased str;<br align="left"/>let _770: &amp;ReErased str;<br align="left"/>let mut _771: &amp;ReErased std::string::String;<br align="left"/>let _772: &amp;ReErased std::string::String;<br align="left"/>let _773: std::string::String;<br align="left"/>let _774: std::string::String;<br align="left"/>let mut _775: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _776: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _777: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _778: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _779: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _780: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _781: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _782: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _783: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _784: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _785: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _786: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _787: error::ErrorCode;<br align="left"/>let mut _788: bool;<br align="left"/>let mut _789: &amp;ReErased state::user::User;<br align="left"/>let mut _790: bool;<br align="left"/>let mut _791: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _792: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _793: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _794: isize;<br align="left"/>let _795: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _796: !;<br align="left"/>let mut _797: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _798: bool;<br align="left"/>let mut _799: !;<br align="left"/>let _800: ();<br align="left"/>let mut _801: &amp;ReErased mut state::user::User;<br align="left"/>let mut _802: ();<br align="left"/>let _803: u16;<br align="left"/>let mut _804: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _805: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _806: &amp;ReErased mut state::user::User;<br align="left"/>let mut _807: u64;<br align="left"/>let mut _808: isize;<br align="left"/>let _809: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _810: !;<br align="left"/>let mut _811: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _812: u16;<br align="left"/>let mut _813: u64;<br align="left"/>let _814: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _815: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _816: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _817: &amp;ReErased mut state::user::User;<br align="left"/>let mut _818: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _819: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _820: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _821: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _822: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _823: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _824: i64;<br align="left"/>let mut _825: u64;<br align="left"/>let mut _826: state::events::OrderActionExplanation;<br align="left"/>let mut _827: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _828: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _829: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _830: isize;<br align="left"/>let _831: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _832: !;<br align="left"/>let mut _833: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _834: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _835: state::spot_market::AssetTier;<br align="left"/>let _836: state::perp_market::ContractTier;<br align="left"/>let mut _837: (state::spot_market::AssetTier, state::perp_market::ContractTier);<br align="left"/>let mut _838: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (state::spot_market::AssetTier, state::perp_market::ContractTier)&gt;;<br align="left"/>let mut _839: std::result::Result&lt;(state::spot_market::AssetTier, state::perp_market::ContractTier), error::ErrorCode&gt;;<br align="left"/>let mut _840: &amp;ReErased state::user::User;<br align="left"/>let mut _841: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _842: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _843: isize;<br align="left"/>let _844: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _845: !;<br align="left"/>let mut _846: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _847: (state::spot_market::AssetTier, state::perp_market::ContractTier);<br align="left"/>let _848: bool;<br align="left"/>let mut _849: bool;<br align="left"/>let mut _850: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _851: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _852: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _853: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _854: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _855: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _856: bool;<br align="left"/>let mut _857: &amp;ReErased std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _858: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _859: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _860: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _861: &amp;ReErased state::user::User;<br align="left"/>let mut _862: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _863: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _864: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _865: state::margin_calculation::MarginContext;<br align="left"/>let mut _866: u32;<br align="left"/>let mut _867: isize;<br align="left"/>let _868: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _869: !;<br align="left"/>let mut _870: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _871: state::margin_calculation::MarginCalculation;<br align="left"/>let _872: u128;<br align="left"/>let mut _873: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _874: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _875: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _876: isize;<br align="left"/>let _877: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _878: !;<br align="left"/>let mut _879: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _880: u128;<br align="left"/>let _881: u128;<br align="left"/>let mut _882: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _883: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _884: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _885: isize;<br align="left"/>let _886: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _887: !;<br align="left"/>let mut _888: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _889: u128;<br align="left"/>let mut _890: u64;<br align="left"/>let mut _891: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _892: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _893: u128;<br align="left"/>let mut _894: u128;<br align="left"/>let mut _895: u128;<br align="left"/>let mut _896: isize;<br align="left"/>let _897: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _898: !;<br align="left"/>let mut _899: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _900: u64;<br align="left"/>let _901: ();<br align="left"/>let mut _902: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _903: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _904: &amp;ReErased mut state::user::User;<br align="left"/>let mut _905: u64;<br align="left"/>let mut _906: isize;<br align="left"/>let _907: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _908: !;<br align="left"/>let mut _909: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _910: ();<br align="left"/>let _911: bool;<br align="left"/>let mut _912: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _913: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _914: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _915: isize;<br align="left"/>let _916: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _917: !;<br align="left"/>let mut _918: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _919: bool;<br align="left"/>let _920: ();<br align="left"/>let mut _921: bool;<br align="left"/>let mut _922: bool;<br align="left"/>let mut _923: !;<br align="left"/>let _924: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _925: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _926: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _927: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _928: &amp;ReErased u16;<br align="left"/>let _929: &amp;ReErased u16;<br align="left"/>let mut _930: isize;<br align="left"/>let _931: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _932: !;<br align="left"/>let mut _933: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _934: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _935: i64;<br align="left"/>let mut _936: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _937: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _938: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _939: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _940: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _941: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _942: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _943: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _944: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _945: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _946: isize;<br align="left"/>let _947: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _948: !;<br align="left"/>let mut _949: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _950: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _951: ();<br align="left"/>let _952: ();<br align="left"/>let mut _953: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _954: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _955: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _956: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _957: &amp;ReErased [u8];<br align="left"/>let _958: &amp;ReErased [u8];<br align="left"/>let mut _959: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _960: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _961: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _962: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _963: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _964: state::events::LiquidationRecord;<br align="left"/>let mut _965: i64;<br align="left"/>let mut _966: u16;<br align="left"/>let mut _967: state::events::LiquidationType;<br align="left"/>let mut _968: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _969: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _970: u128;<br align="left"/>let mut _971: i128;<br align="left"/>let mut _972: bool;<br align="left"/>let mut _973: &amp;ReErased state::user::User;<br align="left"/>let mut _974: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _975: u64;<br align="left"/>let mut _976: state::events::LiquidatePerpPnlForDepositRecord;<br align="left"/>let mut _977: u16;<br align="left"/>let mut _978: i64;<br align="left"/>let mut _979: u16;<br align="left"/>let mut _980: i64;<br align="left"/>let mut _981: state::events::LiquidationRecord;<br align="left"/>let _982: ();<br align="left"/>let mut _983: bool;<br align="left"/>let _984: ();<br align="left"/>let mut _985: &amp;ReErased mut state::user::User;<br align="left"/>let mut _986: bool;<br align="left"/>let _987: ();<br align="left"/>let mut _988: &amp;ReErased str;<br align="left"/>let _989: &amp;ReErased str;<br align="left"/>let mut _990: &amp;ReErased std::string::String;<br align="left"/>let _991: &amp;ReErased std::string::String;<br align="left"/>let _992: std::string::String;<br align="left"/>let _993: std::string::String;<br align="left"/>let mut _994: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _995: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _996: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _997: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _998: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _999: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1000: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1001: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1002: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1003: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1004: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _1005: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _1006: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1007: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _1008: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _1009: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1010: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _1011: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _1012: ();<br align="left"/>let _1013: ();<br align="left"/>let mut _1014: bool;<br align="left"/>let mut _1015: !;<br align="left"/>let _1016: ();<br align="left"/>let mut _1017: &amp;ReErased str;<br align="left"/>let _1018: &amp;ReErased str;<br align="left"/>let mut _1019: &amp;ReErased std::string::String;<br align="left"/>let _1020: &amp;ReErased std::string::String;<br align="left"/>let _1021: std::string::String;<br align="left"/>let _1022: std::string::String;<br align="left"/>let mut _1023: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1024: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1025: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1026: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1027: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1028: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1029: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1030: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1031: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1032: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1033: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _1034: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _1035: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1036: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _1037: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _1038: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1039: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let _1040: &amp;ReErased state::spot_market::AssetTier;<br align="left"/>let mut _1041: error::ErrorCode;<br align="left"/>let _1042: u128;<br align="left"/>let mut _1043: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1044: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1045: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1046: isize;<br align="left"/>let _1047: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1048: !;<br align="left"/>let mut _1049: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1050: u128;<br align="left"/>let _1051: u32;<br align="left"/>let mut _1052: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _1053: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _1054: u32;<br align="left"/>let mut _1055: u32;<br align="left"/>let mut _1056: isize;<br align="left"/>let _1057: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1058: !;<br align="left"/>let mut _1059: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1060: u32;<br align="left"/>let _1061: u128;<br align="left"/>let mut _1062: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1063: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1064: u128;<br align="left"/>let mut _1065: u32;<br align="left"/>let mut _1066: u32;<br align="left"/>let mut _1067: u32;<br align="left"/>let mut _1068: u32;<br align="left"/>let mut _1069: u32;<br align="left"/>let mut _1070: i64;<br align="left"/>let mut _1071: isize;<br align="left"/>let _1072: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1073: !;<br align="left"/>let mut _1074: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1075: u128;<br align="left"/>let _1076: u128;<br align="left"/>let mut _1077: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1078: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1079: &amp;ReErased state::user::User;<br align="left"/>let mut _1080: u128;<br align="left"/>let mut _1081: u64;<br align="left"/>let mut _1082: u128;<br align="left"/>let mut _1083: u128;<br align="left"/>let mut _1084: isize;<br align="left"/>let _1085: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1086: !;<br align="left"/>let mut _1087: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1088: u128;<br align="left"/>let _1089: u128;<br align="left"/>let mut _1090: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1091: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1092: u128;<br align="left"/>let mut _1093: u128;<br align="left"/>let mut _1094: u128;<br align="left"/>let mut _1095: isize;<br align="left"/>let _1096: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1097: !;<br align="left"/>let mut _1098: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1099: u128;<br align="left"/>let _1100: ();<br align="left"/>let mut _1101: bool;<br align="left"/>let mut _1102: u128;<br align="left"/>let mut _1103: !;<br align="left"/>let _1104: ();<br align="left"/>let mut _1105: &amp;ReErased str;<br align="left"/>let _1106: &amp;ReErased str;<br align="left"/>let mut _1107: ();<br align="left"/>let _1108: u128;<br align="left"/>let mut _1109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1110: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1111: u128;<br align="left"/>let mut _1112: u32;<br align="left"/>let mut _1113: u32;<br align="left"/>let mut _1114: i64;<br align="left"/>let mut _1115: u32;<br align="left"/>let mut _1116: u32;<br align="left"/>let mut _1117: i64;<br align="left"/>let mut _1118: isize;<br align="left"/>let _1119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1120: !;<br align="left"/>let mut _1121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1122: u128;<br align="left"/>let _1123: u128;<br align="left"/>let mut _1124: bool;<br align="left"/>let mut _1125: u128;<br align="left"/>let mut _1126: u128;<br align="left"/>let mut _1127: (u128, bool);<br align="left"/>let _1128: u128;<br align="left"/>let mut _1129: u128;<br align="left"/>let mut _1130: u128;<br align="left"/>let mut _1131: u128;<br align="left"/>let mut _1132: u128;<br align="left"/>let mut _1133: u128;<br align="left"/>let mut _1134: u128;<br align="left"/>let mut _1135: u128;<br align="left"/>let mut _1136: u128;<br align="left"/>let _1137: u128;<br align="left"/>let mut _1138: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1139: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1140: u128;<br align="left"/>let mut _1141: u32;<br align="left"/>let mut _1142: u32;<br align="left"/>let mut _1143: i64;<br align="left"/>let mut _1144: u128;<br align="left"/>let mut _1145: u32;<br align="left"/>let mut _1146: u32;<br align="left"/>let mut _1147: i64;<br align="left"/>let mut _1148: isize;<br align="left"/>let _1149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1150: !;<br align="left"/>let mut _1151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1152: u128;<br align="left"/>let _1153: ();<br align="left"/>let mut _1154: bool;<br align="left"/>let mut _1155: u128;<br align="left"/>let mut _1156: bool;<br align="left"/>let mut _1157: u128;<br align="left"/>let mut _1158: !;<br align="left"/>let _1159: ();<br align="left"/>let mut _1160: &amp;ReErased str;<br align="left"/>let _1161: &amp;ReErased str;<br align="left"/>let mut _1162: &amp;ReErased std::string::String;<br align="left"/>let _1163: &amp;ReErased std::string::String;<br align="left"/>let _1164: std::string::String;<br align="left"/>let _1165: std::string::String;<br align="left"/>let mut _1166: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1167: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1168: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1169: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1170: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1171: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1172: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1173: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1174: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1175: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1176: &amp;ReErased u16;<br align="left"/>let _1177: &amp;ReErased u16;<br align="left"/>let mut _1178: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1179: &amp;ReErased u16;<br align="left"/>let _1180: &amp;ReErased u16;<br align="left"/>let _1181: ();<br align="left"/>let mut _1182: &amp;ReErased str;<br align="left"/>let _1183: &amp;ReErased str;<br align="left"/>let mut _1184: &amp;ReErased std::string::String;<br align="left"/>let _1185: &amp;ReErased std::string::String;<br align="left"/>let _1186: std::string::String;<br align="left"/>let _1187: std::string::String;<br align="left"/>let mut _1188: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1189: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1190: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1191: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1192: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1193: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1194: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1195: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1196: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1197: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1198: &amp;ReErased u128;<br align="left"/>let _1199: &amp;ReErased u128;<br align="left"/>let mut _1200: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1201: &amp;ReErased u128;<br align="left"/>let _1202: &amp;ReErased u128;<br align="left"/>let mut _1203: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1204: &amp;ReErased u128;<br align="left"/>let _1205: &amp;ReErased u128;<br align="left"/>let _1206: ();<br align="left"/>let mut _1207: &amp;ReErased str;<br align="left"/>let _1208: &amp;ReErased str;<br align="left"/>let mut _1209: &amp;ReErased std::string::String;<br align="left"/>let _1210: &amp;ReErased std::string::String;<br align="left"/>let _1211: std::string::String;<br align="left"/>let _1212: std::string::String;<br align="left"/>let mut _1213: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1214: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1215: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1216: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1217: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1218: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1219: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1220: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1221: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1222: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1223: &amp;ReErased u128;<br align="left"/>let _1224: &amp;ReErased u128;<br align="left"/>let mut _1225: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1226: &amp;ReErased u128;<br align="left"/>let _1227: &amp;ReErased u128;<br align="left"/>let mut _1228: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1229: &amp;ReErased u128;<br align="left"/>let _1230: &amp;ReErased u128;<br align="left"/>let mut _1231: error::ErrorCode;<br align="left"/>let _1232: ();<br align="left"/>let mut _1233: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1234: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1235: u128;<br align="left"/>let mut _1236: u128;<br align="left"/>let mut _1237: u32;<br align="left"/>let mut _1238: u32;<br align="left"/>let mut _1239: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1240: isize;<br align="left"/>let _1241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1242: !;<br align="left"/>let mut _1243: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1244: ();<br align="left"/>let _1245: ();<br align="left"/>let mut _1246: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1247: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1248: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1249: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1250: &amp;ReErased u16;<br align="left"/>let _1251: &amp;ReErased u16;<br align="left"/>let mut _1252: isize;<br align="left"/>let _1253: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1254: !;<br align="left"/>let mut _1255: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1256: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1257: ();<br align="left"/>let mut _1258: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1259: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1260: u128;<br align="left"/>let mut _1261: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1262: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1263: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1264: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1265: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1266: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1267: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1268: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1269: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1270: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1271: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1272: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1273: u16;<br align="left"/>let mut _1274: isize;<br align="left"/>let _1275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1276: !;<br align="left"/>let mut _1277: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1278: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1279: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1280: u128;<br align="left"/>let mut _1281: isize;<br align="left"/>let _1282: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1283: !;<br align="left"/>let mut _1284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1285: ();<br align="left"/>let _1286: ();<br align="left"/>let mut _1287: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1288: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1289: u128;<br align="left"/>let mut _1290: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1291: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1292: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1293: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1294: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1295: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1296: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1297: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1298: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1299: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1300: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1301: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1302: u16;<br align="left"/>let mut _1303: isize;<br align="left"/>let _1304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1305: !;<br align="left"/>let mut _1306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1307: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1308: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1309: u128;<br align="left"/>let mut _1310: isize;<br align="left"/>let _1311: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1312: !;<br align="left"/>let mut _1313: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1314: ();<br align="left"/>let _1315: ();<br align="left"/>let mut _1316: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1317: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1318: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1319: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1320: &amp;ReErased u16;<br align="left"/>let _1321: &amp;ReErased u16;<br align="left"/>let mut _1322: isize;<br align="left"/>let _1323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1324: !;<br align="left"/>let mut _1325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1326: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1327: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1328: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _1329: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1330: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1331: u16;<br align="left"/>let mut _1332: isize;<br align="left"/>let _1333: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1334: !;<br align="left"/>let mut _1335: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1336: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _1337: ();<br align="left"/>let mut _1338: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1339: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1340: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1341: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1342: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1343: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1344: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1345: i64;<br align="left"/>let mut _1346: i64;<br align="left"/>let mut _1347: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1348: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1349: u128;<br align="left"/>let mut _1350: isize;<br align="left"/>let _1351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1352: !;<br align="left"/>let mut _1353: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1354: i64;<br align="left"/>let mut _1355: bool;<br align="left"/>let mut _1356: isize;<br align="left"/>let _1357: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1358: !;<br align="left"/>let mut _1359: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1360: ();<br align="left"/>let _1361: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1362: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _1363: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1364: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1365: u16;<br align="left"/>let mut _1366: isize;<br align="left"/>let _1367: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1368: !;<br align="left"/>let mut _1369: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1370: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _1371: ();<br align="left"/>let mut _1372: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1373: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1374: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1375: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1376: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1377: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1378: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1379: i64;<br align="left"/>let mut _1380: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1381: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1382: u128;<br align="left"/>let mut _1383: isize;<br align="left"/>let _1384: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1385: !;<br align="left"/>let mut _1386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1387: i64;<br align="left"/>let mut _1388: isize;<br align="left"/>let _1389: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1390: !;<br align="left"/>let mut _1391: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1392: ();<br align="left"/>let _1393: u64;<br align="left"/>let mut _1394: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1395: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, state::margin_calculation::MarginCalculation)&gt;;<br align="left"/>let mut _1396: std::result::Result&lt;(u64, state::margin_calculation::MarginCalculation), error::ErrorCode&gt;;<br align="left"/>let mut _1397: &amp;ReErased state::user::User;<br align="left"/>let mut _1398: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1399: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1400: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1401: u32;<br align="left"/>let mut _1402: u128;<br align="left"/>let mut _1403: isize;<br align="left"/>let _1404: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1405: !;<br align="left"/>let mut _1406: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1407: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1408: u64;<br align="left"/>let mut _1409: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1410: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1411: u64;<br align="left"/>let mut _1412: u64;<br align="left"/>let mut _1413: isize;<br align="left"/>let _1414: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1415: !;<br align="left"/>let mut _1416: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1417: u64;<br align="left"/>let _1418: ();<br align="left"/>let mut _1419: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1420: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1421: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1422: u64;<br align="left"/>let mut _1423: isize;<br align="left"/>let _1424: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1425: !;<br align="left"/>let mut _1426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1427: ();<br align="left"/>let _1428: ();<br align="left"/>let mut _1429: bool;<br align="left"/>let mut _1430: u128;<br align="left"/>let mut _1431: u128;<br align="left"/>let _1432: ();<br align="left"/>let mut _1433: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1434: bool;<br align="left"/>let mut _1435: &amp;ReErased state::user::User;<br align="left"/>let _1436: ();<br align="left"/>let mut _1437: &amp;ReErased mut state::user::User;<br align="left"/>let _1438: bool;<br align="left"/>let mut _1439: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1440: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1441: &amp;ReErased state::user::User;<br align="left"/>let mut _1442: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1443: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1444: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1445: isize;<br align="left"/>let _1446: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1447: !;<br align="left"/>let mut _1448: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1449: bool;<br align="left"/>let _1450: ();<br align="left"/>let mut _1451: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1452: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1453: bool;<br align="left"/>let mut _1454: ();<br align="left"/>let _1455: error::ErrorCode;<br align="left"/>let _1456: ();<br align="left"/>let mut _1457: &amp;ReErased str;<br align="left"/>let _1458: &amp;ReErased str;<br align="left"/>let mut _1459: &amp;ReErased std::string::String;<br align="left"/>let _1460: &amp;ReErased std::string::String;<br align="left"/>let _1461: std::string::String;<br align="left"/>let _1462: std::string::String;<br align="left"/>let mut _1463: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1464: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1465: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1466: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1467: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1468: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1469: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1470: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1471: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1472: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1473: &amp;ReErased error::ErrorCode;<br align="left"/>let _1474: &amp;ReErased error::ErrorCode;<br align="left"/>let _1475: ();<br align="left"/>let mut _1476: &amp;ReErased str;<br align="left"/>let _1477: &amp;ReErased str;<br align="left"/>let mut _1478: error::ErrorCode;<br align="left"/>let mut _1479: isize;<br align="left"/>let _1480: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1481: !;<br align="left"/>let mut _1482: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1483: ();<br align="left"/>let _1484: i64;<br align="left"/>let _1485: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1486: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1487: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1488: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1489: &amp;ReErased u16;<br align="left"/>let _1490: &amp;ReErased u16;<br align="left"/>let mut _1491: isize;<br align="left"/>let _1492: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1493: !;<br align="left"/>let mut _1494: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1495: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1496: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _1497: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _1498: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _1499: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1500: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1501: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _1502: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _1503: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _1504: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1505: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1506: isize;<br align="left"/>let _1507: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1508: !;<br align="left"/>let mut _1509: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1510: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _1511: ();<br align="left"/>let _1512: ();<br align="left"/>let mut _1513: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _1514: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1515: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1516: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _1517: &amp;ReErased [u8];<br align="left"/>let _1518: &amp;ReErased [u8];<br align="left"/>let mut _1519: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1520: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1521: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _1522: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1523: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1524: state::events::LiquidationRecord;<br align="left"/>let mut _1525: i64;<br align="left"/>let mut _1526: u16;<br align="left"/>let mut _1527: state::events::LiquidationType;<br align="left"/>let mut _1528: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1529: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1530: u128;<br align="left"/>let mut _1531: i128;<br align="left"/>let mut _1532: bool;<br align="left"/>let mut _1533: &amp;ReErased state::user::User;<br align="left"/>let mut _1534: u64;<br align="left"/>let mut _1535: state::events::LiquidatePerpPnlForDepositRecord;<br align="left"/>let mut _1536: u16;<br align="left"/>let mut _1537: i64;<br align="left"/>let mut _1538: u128;<br align="left"/>let mut _1539: u16;<br align="left"/>let mut _1540: i64;<br align="left"/>let mut _1541: u128;<br align="left"/>let mut _1542: state::events::LiquidationRecord;<br align="left"/>let mut _1543: ();<br align="left"/>let mut _1544: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1545: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1546: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1547: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1548: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1549: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1550: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1551: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1552: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1553: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1554: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1555: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1556: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1557: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1558: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1559: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1560: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1561: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1562: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1563: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1564: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1565: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1566: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1567: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1568: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1569: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1570: bool;<br align="left"/>let mut _1571: bool;<br align="left"/>let mut _1572: bool;<br align="left"/>let mut _1573: bool;<br align="left"/>let mut _1574: bool;<br align="left"/>let mut _1575: isize;<br align="left"/>let mut _1576: isize;<br align="left"/>let mut _1577: isize;<br align="left"/>let mut _1578: isize;<br align="left"/>let mut _1579: isize;<br align="left"/>let mut _1580: isize;<br align="left"/>let mut _1581: isize;<br align="left"/>let mut _1582: isize;<br align="left"/>let mut _1583: isize;<br align="left"/>let mut _1584: isize;<br align="left"/>let mut _1585: isize;<br align="left"/>let mut _1586: isize;<br align="left"/>let mut _1587: isize;<br align="left"/>let mut _1588: isize;<br align="left"/>let mut _1589: isize;<br align="left"/>let mut _1590: isize;<br align="left"/>let mut _1591: isize;<br align="left"/>let mut _1592: isize;<br align="left"/>let mut _1593: isize;<br align="left"/>let mut _1594: isize;<br align="left"/>let mut _1595: isize;<br align="left"/>let mut _1596: isize;<br align="left"/>let mut _1597: isize;<br align="left"/>let mut _1598: isize;<br align="left"/>let mut _1599: isize;<br align="left"/>let mut _1600: isize;<br align="left"/>let mut _1601: isize;<br align="left"/>let mut _1602: isize;<br align="left"/>let mut _1603: isize;<br align="left"/>let mut _1604: isize;<br align="left"/>let mut _1605: isize;<br align="left"/>let mut _1606: isize;<br align="left"/>let mut _1607: isize;<br align="left"/>let mut _1608: isize;<br align="left"/>let mut _1609: isize;<br align="left"/>let mut _1610: isize;<br align="left"/>let mut _1611: isize;<br align="left"/>let mut _1612: isize;<br align="left"/>let mut _1613: isize;<br align="left"/>let mut _1614: isize;<br align="left"/>let mut _1615: isize;<br align="left"/>let mut _1616: isize;<br align="left"/>let mut _1617: isize;<br align="left"/>let mut _1618: isize;<br align="left"/>let mut _1619: isize;<br align="left"/>let mut _1620: isize;<br align="left"/>let mut _1621: isize;<br align="left"/>let mut _1622: isize;<br align="left"/>let mut _1623: isize;<br align="left"/>let mut _1624: isize;<br align="left"/>let mut _1625: isize;<br align="left"/>let mut _1626: isize;<br align="left"/>let mut _1627: isize;<br align="left"/>let mut _1628: isize;<br align="left"/>let mut _1629: isize;<br align="left"/>let mut _1630: isize;<br align="left"/>let mut _1631: isize;<br align="left"/>let mut _1632: isize;<br align="left"/>let mut _1633: isize;<br align="left"/>let mut _1634: isize;<br align="left"/>debug perp_market_index =&gt; _1;<br align="left"/>debug asset_market_index =&gt; _2;<br align="left"/>debug liquidator_max_pnl_transfer =&gt; _3;<br align="left"/>debug limit_price =&gt; _4;<br align="left"/>debug user =&gt; _5;<br align="left"/>debug user_key =&gt; _6;<br align="left"/>debug liquidator =&gt; _7;<br align="left"/>debug liquidator_key =&gt; _8;<br align="left"/>debug perp_market_map =&gt; _9;<br align="left"/>debug spot_market_map =&gt; _10;<br align="left"/>debug oracle_map =&gt; _11;<br align="left"/>debug now =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _14;<br align="left"/>debug initial_pct_to_liquidate =&gt; _15;<br align="left"/>debug liquidation_duration =&gt; _16;<br align="left"/>debug error_code =&gt; _23;<br align="left"/>debug res =&gt; _30;<br align="left"/>debug res =&gt; _49;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug error_code =&gt; _67;<br align="left"/>debug res =&gt; _74;<br align="left"/>debug res =&gt; _93;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug error_code =&gt; _111;<br align="left"/>debug res =&gt; _118;<br align="left"/>debug res =&gt; _137;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug asset_spot_market =&gt; _156;<br align="left"/>debug residual =&gt; _163;<br align="left"/>debug val =&gt; _166;<br align="left"/>debug error_code =&gt; _176;<br align="left"/>debug res =&gt; _183;<br align="left"/>debug res =&gt; _202;<br align="left"/>debug residual =&gt; _217;<br align="left"/>debug val =&gt; _220;<br align="left"/>debug perp_market =&gt; _223;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug error_code =&gt; _243;<br align="left"/>debug res =&gt; _250;<br align="left"/>debug res =&gt; _269;<br align="left"/>debug residual =&gt; _284;<br align="left"/>debug val =&gt; _287;<br align="left"/>debug residual =&gt; _299;<br align="left"/>debug val =&gt; _302;<br align="left"/>debug residual =&gt; _312;<br align="left"/>debug val =&gt; _315;<br align="left"/>debug residual =&gt; _324;<br align="left"/>debug val =&gt; _327;<br align="left"/>debug residual =&gt; _336;<br align="left"/>debug val =&gt; _339;<br align="left"/>debug residual =&gt; _355;<br align="left"/>debug val =&gt; _358;<br align="left"/>debug residual =&gt; _361;<br align="left"/>debug val =&gt; _364;<br align="left"/>debug residual =&gt; _380;<br align="left"/>debug val =&gt; _383;<br align="left"/>debug residual =&gt; _386;<br align="left"/>debug val =&gt; _389;<br align="left"/>debug asset_amount =&gt; _390;<br align="left"/>debug asset_price =&gt; _391;<br align="left"/>debug _asset_tier =&gt; _392;<br align="left"/>debug asset_decimals =&gt; _393;<br align="left"/>debug asset_weight =&gt; _394;<br align="left"/>debug asset_liquidation_multiplier =&gt; _395;<br align="left"/>debug asset_market =&gt; _397;<br align="left"/>debug residual =&gt; _404;<br align="left"/>debug val =&gt; _407;<br align="left"/>debug asset_price_data =&gt; _408;<br align="left"/>debug validity_guard_rails =&gt; _409;<br align="left"/>debug residual =&gt; _421;<br align="left"/>debug val =&gt; _424;<br align="left"/>debug residual =&gt; _438;<br align="left"/>debug val =&gt; _441;<br align="left"/>debug token_price =&gt; _442;<br align="left"/>debug spot_position =&gt; _443;<br align="left"/>debug residual =&gt; _449;<br align="left"/>debug val =&gt; _452;<br align="left"/>debug error_code =&gt; _461;<br align="left"/>debug res =&gt; _468;<br align="left"/>debug residual =&gt; _486;<br align="left"/>debug val =&gt; _489;<br align="left"/>debug token_amount =&gt; _490;<br align="left"/>debug residual =&gt; _499;<br align="left"/>debug val =&gt; _502;<br align="left"/>debug error_code =&gt; _509;<br align="left"/>debug res =&gt; _516;<br align="left"/>debug res =&gt; _535;<br align="left"/>debug residual =&gt; _550;<br align="left"/>debug val =&gt; _553;<br align="left"/>debug residual =&gt; _573;<br align="left"/>debug val =&gt; _576;<br align="left"/>debug unsettled_pnl =&gt; _577;<br align="left"/>debug quote_price =&gt; _578;<br align="left"/>debug contract_tier =&gt; _579;<br align="left"/>debug quote_decimals =&gt; _580;<br align="left"/>debug pnl_liability_weight =&gt; _581;<br align="left"/>debug pnl_liquidation_multiplier =&gt; _582;<br align="left"/>debug user_position =&gt; _584;<br align="left"/>debug residual =&gt; _590;<br align="left"/>debug val =&gt; _593;<br align="left"/>debug base_asset_amount =&gt; _594;<br align="left"/>debug error_code =&gt; _601;<br align="left"/>debug res =&gt; _608;<br align="left"/>debug res =&gt; _627;<br align="left"/>debug residual =&gt; _642;<br align="left"/>debug val =&gt; _645;<br align="left"/>debug unsettled_pnl =&gt; _646;<br align="left"/>debug residual =&gt; _651;<br align="left"/>debug val =&gt; _654;<br align="left"/>debug error_code =&gt; _661;<br align="left"/>debug res =&gt; _668;<br align="left"/>debug residual =&gt; _686;<br align="left"/>debug val =&gt; _689;<br align="left"/>debug market =&gt; _690;<br align="left"/>debug residual =&gt; _697;<br align="left"/>debug val =&gt; _700;<br align="left"/>debug quote_spot_market =&gt; _701;<br align="left"/>debug residual =&gt; _710;<br align="left"/>debug val =&gt; _713;<br align="left"/>debug quote_price =&gt; _714;<br align="left"/>debug residual =&gt; _726;<br align="left"/>debug val =&gt; _729;<br align="left"/>debug residual =&gt; _744;<br align="left"/>debug val =&gt; _747;<br align="left"/>debug margin_calculation =&gt; _748;<br align="left"/>debug residual =&gt; _758;<br align="left"/>debug val =&gt; _761;<br align="left"/>debug res =&gt; _774;<br align="left"/>debug residual =&gt; _795;<br align="left"/>debug val =&gt; _798;<br align="left"/>debug liquidation_id =&gt; _803;<br align="left"/>debug residual =&gt; _809;<br align="left"/>debug val =&gt; _812;<br align="left"/>debug margin_freed =&gt; _813;<br align="left"/>debug canceled_order_ids =&gt; _814;<br align="left"/>debug residual =&gt; _831;<br align="left"/>debug val =&gt; _834;<br align="left"/>debug safest_tier_spot_liability =&gt; _835;<br align="left"/>debug safest_tier_perp_liability =&gt; _836;<br align="left"/>debug residual =&gt; _844;<br align="left"/>debug val =&gt; _847;<br align="left"/>debug is_contract_tier_violation =&gt; _848;<br align="left"/>debug intermediate_margin_calculation =&gt; _855;<br align="left"/>debug intermediate_margin_calculation =&gt; _858;<br align="left"/>debug residual =&gt; _868;<br align="left"/>debug val =&gt; _871;<br align="left"/>debug initial_margin_shortage =&gt; _872;<br align="left"/>debug residual =&gt; _877;<br align="left"/>debug val =&gt; _880;<br align="left"/>debug new_margin_shortage =&gt; _881;<br align="left"/>debug residual =&gt; _886;<br align="left"/>debug val =&gt; _889;<br align="left"/>debug residual =&gt; _897;<br align="left"/>debug val =&gt; _900;<br align="left"/>debug residual =&gt; _907;<br align="left"/>debug val =&gt; _910;<br align="left"/>debug exiting_liq_territory =&gt; _911;<br align="left"/>debug residual =&gt; _916;<br align="left"/>debug val =&gt; _919;<br align="left"/>debug market =&gt; _924;<br align="left"/>debug residual =&gt; _931;<br align="left"/>debug val =&gt; _934;<br align="left"/>debug market_oracle_price =&gt; _935;<br align="left"/>debug residual =&gt; _947;<br align="left"/>debug val =&gt; _950;<br align="left"/>debug res =&gt; _993;<br align="left"/>debug res =&gt; _1022;<br align="left"/>debug margin_shortage =&gt; _1042;<br align="left"/>debug residual =&gt; _1047;<br align="left"/>debug val =&gt; _1050;<br align="left"/>debug pnl_liability_weight_plus_buffer =&gt; _1051;<br align="left"/>debug residual =&gt; _1057;<br align="left"/>debug val =&gt; _1060;<br align="left"/>debug pnl_transfer_to_cover_margin_shortage =&gt; _1061;<br align="left"/>debug residual =&gt; _1072;<br align="left"/>debug val =&gt; _1075;<br align="left"/>debug max_pct_allowed =&gt; _1076;<br align="left"/>debug residual =&gt; _1085;<br align="left"/>debug val =&gt; _1088;<br align="left"/>debug max_pnl_allowed_to_be_transferred =&gt; _1089;<br align="left"/>debug residual =&gt; _1096;<br align="left"/>debug val =&gt; _1099;<br align="left"/>debug pnl_transfer_implied_by_asset_amount =&gt; _1108;<br align="left"/>debug residual =&gt; _1119;<br align="left"/>debug val =&gt; _1122;<br align="left"/>debug minimum_pnl_transfer =&gt; _1123;<br align="left"/>debug pnl_transfer =&gt; _1128;<br align="left"/>debug asset_transfer =&gt; _1137;<br align="left"/>debug residual =&gt; _1149;<br align="left"/>debug val =&gt; _1152;<br align="left"/>debug res =&gt; _1165;<br align="left"/>debug res =&gt; _1187;<br align="left"/>debug res =&gt; _1212;<br align="left"/>debug residual =&gt; _1241;<br align="left"/>debug val =&gt; _1244;<br align="left"/>debug asset_market =&gt; _1246;<br align="left"/>debug residual =&gt; _1253;<br align="left"/>debug val =&gt; _1256;<br align="left"/>debug residual =&gt; _1275;<br align="left"/>debug val =&gt; _1278;<br align="left"/>debug residual =&gt; _1282;<br align="left"/>debug val =&gt; _1285;<br align="left"/>debug residual =&gt; _1304;<br align="left"/>debug val =&gt; _1307;<br align="left"/>debug residual =&gt; _1311;<br align="left"/>debug val =&gt; _1314;<br align="left"/>debug perp_market =&gt; _1316;<br align="left"/>debug residual =&gt; _1323;<br align="left"/>debug val =&gt; _1326;<br align="left"/>debug liquidator_position =&gt; _1327;<br align="left"/>debug residual =&gt; _1333;<br align="left"/>debug val =&gt; _1336;<br align="left"/>debug residual =&gt; _1351;<br align="left"/>debug val =&gt; _1354;<br align="left"/>debug residual =&gt; _1357;<br align="left"/>debug val =&gt; _1360;<br align="left"/>debug user_position =&gt; _1361;<br align="left"/>debug residual =&gt; _1367;<br align="left"/>debug val =&gt; _1370;<br align="left"/>debug residual =&gt; _1384;<br align="left"/>debug val =&gt; _1387;<br align="left"/>debug residual =&gt; _1389;<br align="left"/>debug val =&gt; _1392;<br align="left"/>debug margin_freed_from_liability =&gt; _1393;<br align="left"/>debug residual =&gt; _1404;<br align="left"/>debug val =&gt; _1407;<br align="left"/>debug residual =&gt; _1414;<br align="left"/>debug val =&gt; _1417;<br align="left"/>debug residual =&gt; _1424;<br align="left"/>debug val =&gt; _1427;<br align="left"/>debug liquidator_meets_initial_margin_requirement =&gt; _1438;<br align="left"/>debug residual =&gt; _1446;<br align="left"/>debug val =&gt; _1449;<br align="left"/>debug error_code =&gt; _1455;<br align="left"/>debug res =&gt; _1462;<br align="left"/>debug residual =&gt; _1480;<br align="left"/>debug val =&gt; _1483;<br align="left"/>debug market_oracle_price =&gt; _1484;<br align="left"/>debug market =&gt; _1485;<br align="left"/>debug residual =&gt; _1492;<br align="left"/>debug val =&gt; _1495;<br align="left"/>debug residual =&gt; _1507;<br align="left"/>debug val =&gt; _1510;<br align="left"/>>;
    bb0__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1574 = const false<br/>_1573 = const false<br/>_1570 = const false<br/>_1572 = const false<br/>_1571 = const false<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_5)<br/></td></tr><tr><td align="left">_20 = User::is_bankrupt(move _21)</td></tr></table>>];
    bb1__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb2__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_23)<br/>_23 = error::ErrorCode::UserBankrupt<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_1569 = const _<br/>_34 = &amp;(*_1569)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;_23<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _41)</td></tr></table>>];
    bb3__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = ()<br/>_19 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = [move _40]<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_31 = Arguments::&lt;'_&gt;::new_v1(move _32, move _36)</td></tr></table>>];
    bb5__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = format(move _31)</td></tr></table>>];
    bb6__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>_29 = move _30<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;String as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb7__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = solana_program::log::sol_log(move _25)</td></tr></table>>];
    bb8__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb9__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_1568 = const _<br/>_53 = &amp;(*_1568)<br/>_52 = &amp;(*_53)<br/>_51 = move _52 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = Arguments::&lt;'_&gt;::new_const(move _51)</td></tr></table>>];
    bb10__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = format(move _50)</td></tr></table>>];
    bb11__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_53)<br/>_48 = move _49<br/>StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = &lt;String as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb12__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_44 = &amp;(*_45)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = solana_program::log::sol_log(move _44)</td></tr></table>>];
    bb13__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb14__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageLive(_55)<br/>_55 = _23<br/>_19 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _55)<br/>StorageDead(_55)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb16__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_56 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb17__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_18 as Continue).0: ())<br/>_17 = _60<br/>StorageDead(_60)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;(*_7)<br/></td></tr><tr><td align="left">_64 = User::is_bankrupt(move _65)</td></tr></table>>];
    bb18__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb20__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb22__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_67)<br/>_67 = error::ErrorCode::UserBankrupt<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_1567 = const _<br/>_78 = &amp;(*_1567)<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_67<br/>_85 = &amp;(*_86)<br/></td></tr><tr><td align="left">_84 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _85)</td></tr></table>>];
    bb23__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = ()<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_83 = [move _84]<br/>StorageDead(_84)<br/>_82 = &amp;_83<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_75 = Arguments::&lt;'_&gt;::new_v1(move _76, move _80)</td></tr></table>>];
    bb25__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = format(move _75)</td></tr></table>>];
    bb26__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_78)<br/>_73 = move _74<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = &lt;String as Deref&gt;::deref(move _71)</td></tr></table>>];
    bb27__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_69 = &amp;(*_70)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_68 = solana_program::log::sol_log(move _69)</td></tr></table>>];
    bb28__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb29__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_1566 = const _<br/>_97 = &amp;(*_1566)<br/>_96 = &amp;(*_97)<br/>_95 = move _96 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = Arguments::&lt;'_&gt;::new_const(move _95)</td></tr></table>>];
    bb30__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = format(move _94)</td></tr></table>>];
    bb31__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_97)<br/>_92 = move _93<br/>StorageDead(_93)<br/>_91 = &amp;_92<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = &lt;String as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb32__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_88 = &amp;(*_89)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_87 = solana_program::log::sol_log(move _88)</td></tr></table>>];
    bb33__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb34__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageLive(_99)<br/>_99 = _67<br/>_63 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _99)<br/>StorageDead(_99)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb36__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_100 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb37__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_62 as Continue).0: ())<br/>_61 = _104<br/>StorageDead(_104)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = ((*_7).27: u8)<br/>_108 = Eq(move _109, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb38__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb39__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_110)<br/>_110 = ()<br/>_107 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _110)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_111)<br/>_111 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_1565 = const _<br/>_122 = &amp;(*_1565)<br/>_121 = &amp;(*_122)<br/>_120 = move _121 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_121)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;_111<br/>_129 = &amp;(*_130)<br/></td></tr><tr><td align="left">_128 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _129)</td></tr></table>>];
    bb42__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_127 = [move _128]<br/>StorageDead(_128)<br/>_126 = &amp;_127<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_119 = Arguments::&lt;'_&gt;::new_v1(move _120, move _124)</td></tr></table>>];
    bb43__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = format(move _119)</td></tr></table>>];
    bb44__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_122)<br/>_117 = move _118<br/>StorageDead(_118)<br/>_116 = &amp;_117<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = &lt;String as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb45__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_113 = &amp;(*_114)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_112 = solana_program::log::sol_log(move _113)</td></tr></table>>];
    bb46__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb47__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_1564 = const _<br/>_141 = &amp;(*_1564)<br/>_140 = &amp;(*_141)<br/>_139 = move _140 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_140)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;((*_7).27: u8)<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _148)</td></tr></table>>];
    bb48__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_146 = [move _147]<br/>StorageDead(_147)<br/>_145 = &amp;_146<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_138 = Arguments::&lt;'_&gt;::new_v1(move _139, move _143)</td></tr></table>>];
    bb49__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = format(move _138)</td></tr></table>>];
    bb50__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>_136 = move _137<br/>StorageDead(_137)<br/>_135 = &amp;_136<br/>_134 = &amp;(*_135)<br/></td></tr><tr><td align="left">_133 = &lt;String as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb51__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_131 = solana_program::log::sol_log(move _132)</td></tr></table>>];
    bb52__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb53__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageLive(_150)<br/>_150 = _111<br/>_107 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _150)<br/>StorageDead(_150)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb55__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_151 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb56__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_106 as Continue).0: ())<br/>_105 = _155<br/>StorageDead(_155)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;(*_10)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_2<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_158 = SpotMarketMap::&lt;'_&gt;::get_ref(move _159, move _160)</td></tr></table>>];
    bb57__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb58__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb60__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_162 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb61__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = move ((_157 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1574 = const true<br/>_156 = move _166<br/>StorageDead(_166)<br/>_1577 = discriminant(_157)<br/>StorageDead(_161)<br/>StorageDead(_157)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = &amp;_156<br/></td></tr><tr><td align="left">_172 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _173)</td></tr></table>>];
    bb62__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_165)<br/>_165 = _163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _165)</td></tr></table>>];
    bb63__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>_1575 = discriminant(_157)<br/>StorageDead(_161)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_171 = &amp;(*_172)<br/>StorageDead(_173)<br/>StorageLive(_174)<br/>_174 = SpotOperation::Liquidation<br/></td></tr><tr><td align="left">_170 = SpotMarket::is_operation_paused(move _171, move _174)</td></tr></table>>];
    bb65__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb66__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_172)<br/>StorageLive(_176)<br/>_176 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_1563 = const _<br/>_187 = &amp;(*_1563)<br/>_186 = &amp;(*_187)<br/>_185 = move _186 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_186)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_176<br/>_194 = &amp;(*_195)<br/></td></tr><tr><td align="left">_193 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _194)</td></tr></table>>];
    bb67__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_172)<br/>StorageLive(_175)<br/>_175 = ()<br/>_169 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _175)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_192 = [move _193]<br/>StorageDead(_193)<br/>_191 = &amp;_192<br/>_190 = &amp;(*_191)<br/>_189 = move _190 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_184 = Arguments::&lt;'_&gt;::new_v1(move _185, move _189)</td></tr></table>>];
    bb69__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">_183 = format(move _184)</td></tr></table>>];
    bb70__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_187)<br/>_182 = move _183<br/>StorageDead(_183)<br/>_181 = &amp;_182<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_179 = &lt;String as Deref&gt;::deref(move _180)</td></tr></table>>];
    bb71__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_178 = &amp;(*_179)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_177 = solana_program::log::sol_log(move _178)</td></tr></table>>];
    bb72__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">drop(_182)</td></tr></table>>];
    bb73__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/>StorageDead(_179)<br/>StorageDead(_177)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_1562 = const _<br/>_206 = &amp;(*_1562)<br/>_205 = &amp;(*_206)<br/>_204 = move _205 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_205)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_2<br/>_213 = &amp;(*_214)<br/></td></tr><tr><td align="left">_212 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _213)</td></tr></table>>];
    bb74__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_211 = [move _212]<br/>StorageDead(_212)<br/>_210 = &amp;_211<br/>_209 = &amp;(*_210)<br/>_208 = move _209 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">_203 = Arguments::&lt;'_&gt;::new_v1(move _204, move _208)</td></tr></table>>];
    bb75__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = format(move _203)</td></tr></table>>];
    bb76__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_214)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/>StorageDead(_206)<br/>_201 = move _202<br/>StorageDead(_202)<br/>_200 = &amp;_201<br/>_199 = &amp;(*_200)<br/></td></tr><tr><td align="left">_198 = &lt;String as Deref&gt;::deref(move _199)</td></tr></table>>];
    bb77__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_197 = &amp;(*_198)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">_196 = solana_program::log::sol_log(move _197)</td></tr></table>>];
    bb78__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">drop(_201)</td></tr></table>>];
    bb79__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageLive(_215)<br/>_215 = _176<br/>_169 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _215)<br/>StorageDead(_215)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">_168 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _169)</td></tr></table>>];
    bb81__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_216 = discriminant(_168)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb82__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_220)<br/>_220 = ((_168 as Continue).0: ())<br/>_167 = _220<br/>StorageDead(_220)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_1574 = const false<br/>_222 = move _156<br/></td></tr><tr><td align="left">_221 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _222)</td></tr></table>>];
    bb83__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_168 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_219)<br/>_219 = _217<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _219)</td></tr></table>>];
    bb84__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_217)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;(*_9)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;_1<br/>_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_225 = PerpMarketMap::&lt;'_&gt;::get_ref(move _226, move _227)</td></tr></table>>];
    bb86__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _225)</td></tr></table>>];
    bb87__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_229 = discriminant(_224)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb88__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = move ((_224 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1573 = const true<br/>_223 = move _233<br/>StorageDead(_233)<br/>_1581 = discriminant(_224)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = &amp;_223<br/></td></tr><tr><td align="left">_239 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _240)</td></tr></table>>];
    bb89__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_224 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb90__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>_1579 = discriminant(_224)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_238 = &amp;(*_239)<br/>StorageDead(_240)<br/>StorageLive(_241)<br/>_241 = PerpOperation::Liquidation<br/></td></tr><tr><td align="left">_237 = PerpMarket::is_operation_paused(move _238, move _241)</td></tr></table>>];
    bb92__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left">switchInt(move _237)</td></tr></table>>];
    bb93__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_239)<br/>StorageLive(_243)<br/>_243 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_1561 = const _<br/>_254 = &amp;(*_1561)<br/>_253 = &amp;(*_254)<br/>_252 = move _253 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_253)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;_243<br/>_261 = &amp;(*_262)<br/></td></tr><tr><td align="left">_260 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _261)</td></tr></table>>];
    bb94__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_239)<br/>StorageLive(_242)<br/>_242 = ()<br/>_236 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _242)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>_259 = [move _260]<br/>StorageDead(_260)<br/>_258 = &amp;_259<br/>_257 = &amp;(*_258)<br/>_256 = move _257 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_251 = Arguments::&lt;'_&gt;::new_v1(move _252, move _256)</td></tr></table>>];
    bb96__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = format(move _251)</td></tr></table>>];
    bb97__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>StorageDead(_254)<br/>_249 = move _250<br/>StorageDead(_250)<br/>_248 = &amp;_249<br/>_247 = &amp;(*_248)<br/></td></tr><tr><td align="left">_246 = &lt;String as Deref&gt;::deref(move _247)</td></tr></table>>];
    bb98__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_245 = &amp;(*_246)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_244 = solana_program::log::sol_log(move _245)</td></tr></table>>];
    bb99__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/></td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb100__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_1560 = const _<br/>_273 = &amp;(*_1560)<br/>_272 = &amp;(*_273)<br/>_271 = move _272 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_272)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;_1<br/>_280 = &amp;(*_281)<br/></td></tr><tr><td align="left">_279 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _280)</td></tr></table>>];
    bb101__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>_278 = [move _279]<br/>StorageDead(_279)<br/>_277 = &amp;_278<br/>_276 = &amp;(*_277)<br/>_275 = move _276 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_270 = Arguments::&lt;'_&gt;::new_v1(move _271, move _275)</td></tr></table>>];
    bb102__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = format(move _270)</td></tr></table>>];
    bb103__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_281)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_273)<br/>_268 = move _269<br/>StorageDead(_269)<br/>_267 = &amp;_268<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = &lt;String as Deref&gt;::deref(move _266)</td></tr></table>>];
    bb104__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_264 = &amp;(*_265)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_263 = solana_program::log::sol_log(move _264)</td></tr></table>>];
    bb105__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/></td></tr><tr><td align="left">drop(_268)</td></tr></table>>];
    bb106__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageLive(_282)<br/>_282 = _243<br/>_236 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _282)<br/>StorageDead(_282)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/></td></tr><tr><td align="left">_235 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _236)</td></tr></table>>];
    bb108__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_283 = discriminant(_235)<br/></td></tr><tr><td align="left">switchInt(move _283)</td></tr></table>>];
    bb109__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = ((_235 as Continue).0: ())<br/>_234 = _287<br/>StorageDead(_287)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_1573 = const false<br/>_289 = move _223<br/></td></tr><tr><td align="left">_288 = std::mem::drop::&lt;Ref&lt;'_, PerpMarket&gt;&gt;(move _289)</td></tr></table>>];
    bb110__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = ((_235 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_286)<br/>_286 = _284<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _286)</td></tr></table>>];
    bb111__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_288)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;(*_5)<br/>StorageLive(_295)<br/>_295 = _1<br/></td></tr><tr><td align="left">_293 = User::get_perp_position(move _294, move _295)</td></tr></table>>];
    bb113__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_294)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;_1<br/>_296 = {closure@programs/drift/src/controller/liquidation.rs:2823:55: 2823:58} { perp_market_index: move _297 }<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">_292 = std::result::Result::&lt;&amp;PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2823:55: 2823:58}&gt;(move _293, move _296)</td></tr></table>>];
    bb114__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_293)<br/></td></tr><tr><td align="left">_291 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _292)</td></tr></table>>];
    bb115__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_298 = discriminant(_291)<br/></td></tr><tr><td align="left">switchInt(move _298)</td></tr></table>>];
    bb116__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_302)<br/>_302 = ((_291 as Continue).0: &amp;state::user::PerpPosition)<br/>_290 = _302<br/>StorageDead(_302)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>_307 = &amp;(*_5)<br/>StorageLive(_308)<br/>_308 = _2<br/></td></tr><tr><td align="left">_306 = User::get_spot_position(move _307, move _308)</td></tr></table>>];
    bb117__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_291 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_301)<br/>_301 = _299<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _301)</td></tr></table>>];
    bb118__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_307)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;_2<br/>_309 = {closure@programs/drift/src/controller/liquidation.rs:2831:56: 2831:59} { asset_market_index: move _310 }<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">_305 = std::result::Result::&lt;&amp;SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2831:56: 2831:59}&gt;(move _306, move _309)</td></tr></table>>];
    bb120__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_304 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _305)</td></tr></table>>];
    bb121__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>_311 = discriminant(_304)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb122__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_315)<br/>_315 = ((_304 as Continue).0: &amp;state::user::SpotPosition)<br/>_303 = _315<br/>StorageDead(_315)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = &amp;mut (*_7)<br/>StorageLive(_321)<br/>_321 = _1<br/></td></tr><tr><td align="left">_319 = User::force_get_perp_position_mut(move _320, move _321)</td></tr></table>>];
    bb123__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_312)<br/>_312 = ((_304 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_314)<br/>_314 = _312<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _314)</td></tr></table>>];
    bb124__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_320)<br/>StorageLive(_322)<br/>_322 = {closure@programs/drift/src/controller/liquidation.rs:2841:18: 2841:21}<br/></td></tr><tr><td align="left">_318 = std::result::Result::&lt;&amp;mut PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2841:18: 2841:21}&gt;(move _319, move _322)</td></tr></table>>];
    bb126__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">_317 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _318)</td></tr></table>>];
    bb127__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_323 = discriminant(_317)<br/></td></tr><tr><td align="left">switchInt(move _323)</td></tr></table>>];
    bb128__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>_327 = move ((_317 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_316 = move _327<br/>StorageDead(_327)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = &amp;mut (*_7)<br/>StorageLive(_333)<br/>_333 = _2<br/></td></tr><tr><td align="left">_331 = User::force_get_spot_position_mut(move _332, move _333)</td></tr></table>>];
    bb129__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = ((_317 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_326)<br/>_326 = _324<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _326)</td></tr></table>>];
    bb130__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_324)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_332)<br/>StorageLive(_334)<br/>_334 = {closure@programs/drift/src/controller/liquidation.rs:2848:18: 2848:21}<br/></td></tr><tr><td align="left">_330 = std::result::Result::&lt;&amp;mut SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:2848:18: 2848:21}&gt;(move _331, move _334)</td></tr></table>>];
    bb132__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_329 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _330)</td></tr></table>>];
    bb133__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>_335 = discriminant(_329)<br/></td></tr><tr><td align="left">switchInt(move _335)</td></tr></table>>];
    bb134__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>_339 = move ((_329 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_328 = move _339<br/>StorageDead(_339)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = &amp;mut (*_5)<br/>StorageLive(_344)<br/>_344 = &amp;(*_6)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;(*_9)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = &amp;_1<br/>_352 = &amp;(*_353)<br/></td></tr><tr><td align="left">_350 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _351, move _352)</td></tr></table>>];
    bb135__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_336)<br/>_336 = ((_329 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_338)<br/>_338 = _336<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _338)</td></tr></table>>];
    bb136__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">_349 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _350)</td></tr></table>>];
    bb138__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_1572 = const true<br/>StorageDead(_350)<br/>_354 = discriminant(_349)<br/></td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb139__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = move ((_349 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_348 = move _358<br/>StorageDead(_358)<br/>_347 = &amp;mut _348<br/></td></tr><tr><td align="left">_346 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _347)</td></tr></table>>];
    bb140__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_349 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_357)<br/>_357 = _355<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _357)</td></tr></table>>];
    bb141__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_355)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_345 = &amp;mut (*_346)<br/>StorageDead(_347)<br/>StorageLive(_359)<br/>_359 = _12<br/></td></tr><tr><td align="left">_342 = controller::funding::settle_funding_payment(move _343, move _344, move _345, move _359)</td></tr></table>>];
    bb143__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_341 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _342)</td></tr></table>>];
    bb144__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_360 = discriminant(_341)<br/></td></tr><tr><td align="left">switchInt(move _360)</td></tr></table>>];
    bb145__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_341 as Continue).0: ())<br/>_340 = _364<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb146__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = ((_341 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_363)<br/>_363 = _361<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _363)</td></tr></table>>];
    bb147__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_361)<br/></td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb148__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _375)</td></tr></table>>];
    bb149__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">_1571 = const true<br/>StorageDead(_375)<br/>_379 = discriminant(_374)<br/></td></tr><tr><td align="left">switchInt(move _379)</td></tr></table>>];
    bb150__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageLive(_383)<br/>_383 = move ((_374 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_373 = move _383<br/>StorageDead(_383)<br/>_372 = &amp;mut _373<br/></td></tr><tr><td align="left">_371 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _372)</td></tr></table>>];
    bb151__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_380)<br/>_380 = ((_374 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_382)<br/>_382 = _380<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _382)</td></tr></table>>];
    bb152__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/>StorageDead(_367)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_370 = &amp;mut (*_371)<br/>StorageDead(_372)<br/>StorageLive(_384)<br/>_384 = _12<br/></td></tr><tr><td align="left">_367 = controller::funding::settle_funding_payment(move _368, move _369, move _370, move _384)</td></tr></table>>];
    bb154__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_370)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">_366 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _367)</td></tr></table>>];
    bb155__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>_385 = discriminant(_366)<br/></td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb156__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_366 as Continue).0: ())<br/>_365 = _389<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">drop(_373)</td></tr></table>>];
    bb157__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = ((_366 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_388)<br/>_388 = _386<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _388)</td></tr></table>>];
    bb158__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">drop(_373)</td></tr></table>>];
    bb159__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">_398 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _399)</td></tr></table>>];
    bb160__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>_403 = discriminant(_398)<br/></td></tr><tr><td align="left">switchInt(move _403)</td></tr></table>>];
    bb161__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_407)<br/>_407 = move ((_398 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_397 = move _407<br/>StorageDead(_407)<br/>_1589 = discriminant(_398)<br/>StorageDead(_402)<br/>StorageDead(_398)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_413 = &amp;mut (*_11)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>_419 = &amp;_397<br/></td></tr><tr><td align="left">_418 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _419)</td></tr></table>>];
    bb162__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_404)<br/>_404 = ((_398 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_406)<br/>_406 = _404<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _406)</td></tr></table>>];
    bb163__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>StorageDead(_404)<br/>_1587 = discriminant(_398)<br/>StorageDead(_402)<br/>StorageDead(_398)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">_417 = &amp;(*_418)<br/>StorageDead(_419)<br/></td></tr><tr><td align="left">_416 = SpotMarket::oracle_id(move _417)</td></tr></table>>];
    bb165__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>_415 = &amp;_416<br/>_414 = &amp;(*_415)<br/></td></tr><tr><td align="left">_412 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _413, move _414)</td></tr></table>>];
    bb166__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">_411 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _412)</td></tr></table>>];
    bb167__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>_420 = discriminant(_411)<br/></td></tr><tr><td align="left">switchInt(move _420)</td></tr></table>>];
    bb168__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_424)<br/>_424 = ((_411 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_410 = _424<br/>StorageDead(_424)<br/>StorageLive(_408)<br/>_408 = (_410.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_409)<br/>_409 = (_410.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_411)<br/>StorageDead(_410)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_431 = &amp;mut _397<br/>_430 = &amp;mut (*_431)<br/></td></tr><tr><td align="left">_429 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _430)</td></tr></table>>];
    bb169__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageLive(_421)<br/>_421 = ((_411 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_423)<br/>_423 = _421<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _423)</td></tr></table>>];
    bb170__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>StorageDead(_421)<br/>StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_411)<br/>StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">_428 = &amp;mut (*_429)<br/>StorageDead(_430)<br/>StorageLive(_432)<br/>_432 = &amp;(*_408)<br/>StorageLive(_433)<br/>_433 = &amp;(*_409)<br/>StorageLive(_434)<br/>_434 = _12<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = DriftAction::Liquidate<br/>_435 = Option::&lt;DriftAction&gt;::Some(move _436)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_427 = update_spot_market_and_check_validity(move _428, move _432, move _433, move _434, move _435)</td></tr></table>>];
    bb172__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_434)<br/>StorageDead(_433)<br/>StorageDead(_432)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">_426 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _427)</td></tr></table>>];
    bb173__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>_437 = discriminant(_426)<br/></td></tr><tr><td align="left">switchInt(move _437)</td></tr></table>>];
    bb174__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_441)<br/>_441 = ((_426 as Continue).0: ())<br/>_425 = _441<br/>StorageDead(_441)<br/>StorageDead(_431)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageLive(_442)<br/>_442 = ((*_408).0: i64)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>_446 = &amp;(*_5)<br/>StorageLive(_447)<br/>_447 = _2<br/></td></tr><tr><td align="left">_445 = User::get_spot_position(move _446, move _447)</td></tr></table>>];
    bb175__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_438)<br/>_438 = ((_426 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_440)<br/>_440 = _438<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _440)</td></tr></table>>];
    bb176__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_438)<br/>StorageDead(_431)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">_444 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _445)</td></tr></table>>];
    bb178__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>_448 = discriminant(_444)<br/></td></tr><tr><td align="left">switchInt(move _448)</td></tr></table>>];
    bb179__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_452)<br/>_452 = ((_444 as Continue).0: &amp;state::user::SpotPosition)<br/>_443 = _452<br/>StorageDead(_452)<br/>StorageDead(_444)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>_457 = &amp;((*_443).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_458)<br/>_1559 = const _<br/>_458 = &amp;(*_1559)<br/></td></tr><tr><td align="left">_456 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _457, move _458)</td></tr></table>>];
    bb180__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_449)<br/>_449 = ((_444 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_451)<br/>_451 = _449<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _451)</td></tr></table>>];
    bb181__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>StorageDead(_449)<br/>StorageDead(_444)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left">switchInt(move _456)</td></tr></table>>];
    bb183__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>StorageDead(_457)<br/>StorageLive(_460)<br/>_460 = ()<br/>_455 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _460)<br/>StorageDead(_460)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>StorageDead(_457)<br/>StorageLive(_461)<br/>_461 = error::ErrorCode::WrongSpotBalanceType<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_1558 = const _<br/>_472 = &amp;(*_1558)<br/>_471 = &amp;(*_472)<br/>_470 = move _471 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_471)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_480 = &amp;_461<br/>_479 = &amp;(*_480)<br/></td></tr><tr><td align="left">_478 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _479)</td></tr></table>>];
    bb185__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>_477 = [move _478]<br/>StorageDead(_478)<br/>_476 = &amp;_477<br/>_475 = &amp;(*_476)<br/>_474 = move _475 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_475)<br/></td></tr><tr><td align="left">_469 = Arguments::&lt;'_&gt;::new_v1(move _470, move _474)</td></tr></table>>];
    bb186__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>StorageDead(_470)<br/></td></tr><tr><td align="left">_468 = format(move _469)</td></tr></table>>];
    bb187__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>StorageDead(_480)<br/>StorageDead(_477)<br/>StorageDead(_476)<br/>StorageDead(_472)<br/>_467 = move _468<br/>StorageDead(_468)<br/>_466 = &amp;_467<br/>_465 = &amp;(*_466)<br/></td></tr><tr><td align="left">_464 = &lt;String as Deref&gt;::deref(move _465)</td></tr></table>>];
    bb188__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">_463 = &amp;(*_464)<br/>StorageDead(_465)<br/></td></tr><tr><td align="left">_462 = solana_program::log::sol_log(move _463)</td></tr></table>>];
    bb189__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/></td></tr><tr><td align="left">drop(_467)</td></tr></table>>];
    bb190__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_462)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>_483 = const &quot;User did not have a deposit for the asset market&quot;<br/>_482 = &amp;(*_483)<br/></td></tr><tr><td align="left">_481 = solana_program::log::sol_log(move _482)</td></tr></table>>];
    bb191__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>StorageDead(_483)<br/>StorageDead(_481)<br/>StorageLive(_484)<br/>_484 = _461<br/>_455 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _484)<br/>StorageDead(_484)<br/>StorageDead(_461)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/></td></tr><tr><td align="left">_454 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _455)</td></tr></table>>];
    bb193__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>_485 = discriminant(_454)<br/></td></tr><tr><td align="left">switchInt(move _485)</td></tr></table>>];
    bb194__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_489)<br/>_489 = ((_454 as Continue).0: ())<br/>_453 = _489<br/>StorageDead(_489)<br/>StorageDead(_454)<br/>StorageDead(_453)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>_493 = &amp;(*_443)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>_497 = &amp;_397<br/>_496 = &amp;(*_497)<br/></td></tr><tr><td align="left">_495 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _496)</td></tr></table>>];
    bb195__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_486)<br/>_486 = ((_454 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_488)<br/>_488 = _486<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _488)</td></tr></table>>];
    bb196__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>StorageDead(_486)<br/>StorageDead(_454)<br/>StorageDead(_453)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">_494 = &amp;(*_495)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">_492 = SpotPosition::get_token_amount(move _493, move _494)</td></tr></table>>];
    bb198__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>StorageDead(_493)<br/></td></tr><tr><td align="left">_491 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _492)</td></tr></table>>];
    bb199__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>_498 = discriminant(_491)<br/></td></tr><tr><td align="left">switchInt(move _498)</td></tr></table>>];
    bb200__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_502)<br/>_502 = ((_491 as Continue).0: u128)<br/>_490 = _502<br/>StorageDead(_502)<br/>StorageDead(_497)<br/>StorageDead(_495)<br/>StorageDead(_491)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>_507 = _490<br/>_506 = Ne(move _507, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _506)</td></tr></table>>];
    bb201__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_499)<br/>_499 = ((_491 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_501)<br/>_501 = _499<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _501)</td></tr></table>>];
    bb202__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>StorageDead(_499)<br/>StorageDead(_497)<br/>StorageDead(_495)<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_507)<br/>StorageLive(_508)<br/>_508 = ()<br/>_505 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _508)<br/>StorageDead(_508)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_507)<br/>StorageLive(_509)<br/>_509 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>_1557 = const _<br/>_520 = &amp;(*_1557)<br/>_519 = &amp;(*_520)<br/>_518 = move _519 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_519)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>_528 = &amp;_509<br/>_527 = &amp;(*_528)<br/></td></tr><tr><td align="left">_526 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _527)</td></tr></table>>];
    bb205__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>_525 = [move _526]<br/>StorageDead(_526)<br/>_524 = &amp;_525<br/>_523 = &amp;(*_524)<br/>_522 = move _523 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">_517 = Arguments::&lt;'_&gt;::new_v1(move _518, move _522)</td></tr></table>>];
    bb206__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/>StorageDead(_518)<br/></td></tr><tr><td align="left">_516 = format(move _517)</td></tr></table>>];
    bb207__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_528)<br/>StorageDead(_525)<br/>StorageDead(_524)<br/>StorageDead(_520)<br/>_515 = move _516<br/>StorageDead(_516)<br/>_514 = &amp;_515<br/>_513 = &amp;(*_514)<br/></td></tr><tr><td align="left">_512 = &lt;String as Deref&gt;::deref(move _513)</td></tr></table>>];
    bb208__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_511 = &amp;(*_512)<br/>StorageDead(_513)<br/></td></tr><tr><td align="left">_510 = solana_program::log::sol_log(move _511)</td></tr></table>>];
    bb209__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/></td></tr><tr><td align="left">drop(_515)</td></tr></table>>];
    bb210__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_514)<br/>StorageDead(_512)<br/>StorageDead(_510)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>_1556 = const _<br/>_539 = &amp;(*_1556)<br/>_538 = &amp;(*_539)<br/>_537 = move _538 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_538)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>_547 = &amp;_2<br/>_546 = &amp;(*_547)<br/></td></tr><tr><td align="left">_545 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _546)</td></tr></table>>];
    bb211__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>_544 = [move _545]<br/>StorageDead(_545)<br/>_543 = &amp;_544<br/>_542 = &amp;(*_543)<br/>_541 = move _542 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_542)<br/></td></tr><tr><td align="left">_536 = Arguments::&lt;'_&gt;::new_v1(move _537, move _541)</td></tr></table>>];
    bb212__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_537)<br/></td></tr><tr><td align="left">_535 = format(move _536)</td></tr></table>>];
    bb213__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_547)<br/>StorageDead(_544)<br/>StorageDead(_543)<br/>StorageDead(_539)<br/>_534 = move _535<br/>StorageDead(_535)<br/>_533 = &amp;_534<br/>_532 = &amp;(*_533)<br/></td></tr><tr><td align="left">_531 = &lt;String as Deref&gt;::deref(move _532)</td></tr></table>>];
    bb214__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_530 = &amp;(*_531)<br/>StorageDead(_532)<br/></td></tr><tr><td align="left">_529 = solana_program::log::sol_log(move _530)</td></tr></table>>];
    bb215__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/></td></tr><tr><td align="left">drop(_534)</td></tr></table>>];
    bb216__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/>StorageDead(_533)<br/>StorageDead(_531)<br/>StorageDead(_529)<br/>StorageLive(_548)<br/>_548 = _509<br/>_505 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _548)<br/>StorageDead(_548)<br/>StorageDead(_509)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/></td></tr><tr><td align="left">_504 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _505)</td></tr></table>>];
    bb218__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>_549 = discriminant(_504)<br/></td></tr><tr><td align="left">switchInt(move _549)</td></tr></table>>];
    bb219__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageLive(_553)<br/>_553 = ((_504 as Continue).0: ())<br/>_503 = _553<br/>StorageDead(_553)<br/>StorageDead(_504)<br/>StorageDead(_503)<br/>StorageLive(_554)<br/>_554 = _490<br/>StorageLive(_555)<br/>_555 = _442<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>_558 = &amp;_397<br/></td></tr><tr><td align="left">_557 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _558)</td></tr></table>>];
    bb220__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_550)<br/>_550 = ((_504 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_552)<br/>_552 = _550<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _552)</td></tr></table>>];
    bb221__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/>StorageDead(_550)<br/>StorageDead(_504)<br/>StorageDead(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/>_556 = ((*_557).46: state::spot_market::AssetTier)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>_561 = &amp;_397<br/></td></tr><tr><td align="left">_560 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _561)</td></tr></table>>];
    bb223__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>_559 = ((*_560).41: u32)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>_564 = &amp;_397<br/></td></tr><tr><td align="left">_563 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _564)</td></tr></table>>];
    bb224__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_564)<br/>_562 = ((*_563).32: u32)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>_570 = &amp;_397<br/></td></tr><tr><td align="left">_569 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _570)</td></tr></table>>];
    bb225__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>_568 = ((*_569).36: u32)<br/>StorageLive(_571)<br/>_571 = LiquidationMultiplierType::Premium<br/></td></tr><tr><td align="left">_567 = calculate_liquidation_multiplier(move _568, move _571)</td></tr></table>>];
    bb226__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">_566 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _567)</td></tr></table>>];
    bb227__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>_572 = discriminant(_566)<br/></td></tr><tr><td align="left">switchInt(move _572)</td></tr></table>>];
    bb228__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageLive(_576)<br/>_576 = ((_566 as Continue).0: u32)<br/>_565 = _576<br/>StorageDead(_576)<br/>_396 = (move _554, move _555, move _556, move _559, move _562, move _565)<br/>StorageDead(_565)<br/>StorageDead(_562)<br/>StorageDead(_559)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/>StorageDead(_554)<br/>StorageDead(_490)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">drop(_397)</td></tr></table>>];
    bb229__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_573)<br/>_573 = ((_566 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_575)<br/>_575 = _573<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _575)</td></tr></table>>];
    bb230__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>StorageDead(_573)<br/>StorageDead(_565)<br/>StorageDead(_562)<br/>StorageDead(_559)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/>StorageDead(_554)<br/>StorageDead(_490)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">drop(_397)</td></tr></table>>];
    bb231__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageLive(_390)<br/>_390 = (_396.0: u128)<br/>StorageLive(_391)<br/>_391 = (_396.1: i64)<br/>StorageLive(_392)<br/>_392 = (_396.2: state::spot_market::AssetTier)<br/>StorageLive(_393)<br/>_393 = (_396.3: u32)<br/>StorageLive(_394)<br/>_394 = (_396.4: u32)<br/>StorageLive(_395)<br/>_395 = (_396.5: u32)<br/>StorageDead(_569)<br/>StorageDead(_566)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_557)<br/>StorageDead(_396)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>_587 = &amp;(*_5)<br/>StorageLive(_588)<br/>_588 = _1<br/></td></tr><tr><td align="left">_586 = User::get_perp_position(move _587, move _588)</td></tr></table>>];
    bb232__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>StorageDead(_587)<br/></td></tr><tr><td align="left">_585 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _586)</td></tr></table>>];
    bb233__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_586)<br/>_589 = discriminant(_585)<br/></td></tr><tr><td align="left">switchInt(move _589)</td></tr></table>>];
    bb234__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageLive(_593)<br/>_593 = ((_585 as Continue).0: &amp;state::user::PerpPosition)<br/>_584 = _593<br/>StorageDead(_593)<br/>StorageDead(_585)<br/>StorageLive(_594)<br/>_594 = ((*_584).1: i64)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>_599 = _594<br/>_598 = Eq(move _599, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _598)</td></tr></table>>];
    bb235__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageLive(_590)<br/>_590 = ((_585 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_592)<br/>_592 = _590<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _592)</td></tr></table>>];
    bb236__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>StorageDead(_590)<br/>StorageDead(_585)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageLive(_600)<br/>_600 = ()<br/>_597 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _600)<br/>StorageDead(_600)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageLive(_601)<br/>_601 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>_1555 = const _<br/>_612 = &amp;(*_1555)<br/>_611 = &amp;(*_612)<br/>_610 = move _611 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_611)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>_620 = &amp;_601<br/>_619 = &amp;(*_620)<br/></td></tr><tr><td align="left">_618 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _619)</td></tr></table>>];
    bb239__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>_617 = [move _618]<br/>StorageDead(_618)<br/>_616 = &amp;_617<br/>_615 = &amp;(*_616)<br/>_614 = move _615 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_615)<br/></td></tr><tr><td align="left">_609 = Arguments::&lt;'_&gt;::new_v1(move _610, move _614)</td></tr></table>>];
    bb240__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>StorageDead(_610)<br/></td></tr><tr><td align="left">_608 = format(move _609)</td></tr></table>>];
    bb241__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/>StorageDead(_620)<br/>StorageDead(_617)<br/>StorageDead(_616)<br/>StorageDead(_612)<br/>_607 = move _608<br/>StorageDead(_608)<br/>_606 = &amp;_607<br/>_605 = &amp;(*_606)<br/></td></tr><tr><td align="left">_604 = &lt;String as Deref&gt;::deref(move _605)</td></tr></table>>];
    bb242__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">_603 = &amp;(*_604)<br/>StorageDead(_605)<br/></td></tr><tr><td align="left">_602 = solana_program::log::sol_log(move _603)</td></tr></table>>];
    bb243__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/></td></tr><tr><td align="left">drop(_607)</td></tr></table>>];
    bb244__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>StorageDead(_606)<br/>StorageDead(_604)<br/>StorageDead(_602)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>_1554 = const _<br/>_631 = &amp;(*_1554)<br/>_630 = &amp;(*_631)<br/>_629 = move _630 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_630)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_639 = &amp;_594<br/>_638 = &amp;(*_639)<br/></td></tr><tr><td align="left">_637 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _638)</td></tr></table>>];
    bb245__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/>_636 = [move _637]<br/>StorageDead(_637)<br/>_635 = &amp;_636<br/>_634 = &amp;(*_635)<br/>_633 = move _634 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_634)<br/></td></tr><tr><td align="left">_628 = Arguments::&lt;'_&gt;::new_v1(move _629, move _633)</td></tr></table>>];
    bb246__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_633)<br/>StorageDead(_629)<br/></td></tr><tr><td align="left">_627 = format(move _628)</td></tr></table>>];
    bb247__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_628)<br/>StorageDead(_639)<br/>StorageDead(_636)<br/>StorageDead(_635)<br/>StorageDead(_631)<br/>_626 = move _627<br/>StorageDead(_627)<br/>_625 = &amp;_626<br/>_624 = &amp;(*_625)<br/></td></tr><tr><td align="left">_623 = &lt;String as Deref&gt;::deref(move _624)</td></tr></table>>];
    bb248__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">_622 = &amp;(*_623)<br/>StorageDead(_624)<br/></td></tr><tr><td align="left">_621 = solana_program::log::sol_log(move _622)</td></tr></table>>];
    bb249__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/></td></tr><tr><td align="left">drop(_626)</td></tr></table>>];
    bb250__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_626)<br/>StorageDead(_625)<br/>StorageDead(_623)<br/>StorageDead(_621)<br/>StorageLive(_640)<br/>_640 = _601<br/>_597 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _640)<br/>StorageDead(_640)<br/>StorageDead(_601)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/></td></tr><tr><td align="left">_596 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _597)</td></tr></table>>];
    bb252__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/>_641 = discriminant(_596)<br/></td></tr><tr><td align="left">switchInt(move _641)</td></tr></table>>];
    bb253__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageLive(_645)<br/>_645 = ((_596 as Continue).0: ())<br/>_595 = _645<br/>StorageDead(_645)<br/>StorageDead(_596)<br/>StorageDead(_595)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>_649 = ((*_584).2: i64)<br/></td></tr><tr><td align="left">_648 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _649)</td></tr></table>>];
    bb254__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageLive(_642)<br/>_642 = ((_596 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_644)<br/>_644 = _642<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _644)</td></tr></table>>];
    bb255__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageDead(_642)<br/>StorageDead(_596)<br/>StorageDead(_595)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_649)<br/></td></tr><tr><td align="left">_647 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _648)</td></tr></table>>];
    bb257__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_648)<br/>_650 = discriminant(_647)<br/></td></tr><tr><td align="left">switchInt(move _650)</td></tr></table>>];
    bb258__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageLive(_654)<br/>_654 = ((_647 as Continue).0: i128)<br/>_646 = _654<br/>StorageDead(_654)<br/>StorageDead(_647)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = _646<br/>_658 = Lt(move _659, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _658)</td></tr></table>>];
    bb259__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageLive(_651)<br/>_651 = ((_647 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_653)<br/>_653 = _651<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _653)</td></tr></table>>];
    bb260__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>StorageDead(_651)<br/>StorageDead(_647)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>StorageLive(_660)<br/>_660 = ()<br/>_657 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _660)<br/>StorageDead(_660)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb262__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>StorageLive(_661)<br/>_661 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>_1553 = const _<br/>_672 = &amp;(*_1553)<br/>_671 = &amp;(*_672)<br/>_670 = move _671 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_671)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>_680 = &amp;_661<br/>_679 = &amp;(*_680)<br/></td></tr><tr><td align="left">_678 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _679)</td></tr></table>>];
    bb263__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_679)<br/>_677 = [move _678]<br/>StorageDead(_678)<br/>_676 = &amp;_677<br/>_675 = &amp;(*_676)<br/>_674 = move _675 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_675)<br/></td></tr><tr><td align="left">_669 = Arguments::&lt;'_&gt;::new_v1(move _670, move _674)</td></tr></table>>];
    bb264__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/>StorageDead(_670)<br/></td></tr><tr><td align="left">_668 = format(move _669)</td></tr></table>>];
    bb265__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>StorageDead(_680)<br/>StorageDead(_677)<br/>StorageDead(_676)<br/>StorageDead(_672)<br/>_667 = move _668<br/>StorageDead(_668)<br/>_666 = &amp;_667<br/>_665 = &amp;(*_666)<br/></td></tr><tr><td align="left">_664 = &lt;String as Deref&gt;::deref(move _665)</td></tr></table>>];
    bb266__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">_663 = &amp;(*_664)<br/>StorageDead(_665)<br/></td></tr><tr><td align="left">_662 = solana_program::log::sol_log(move _663)</td></tr></table>>];
    bb267__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/></td></tr><tr><td align="left">drop(_667)</td></tr></table>>];
    bb268__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>StorageDead(_666)<br/>StorageDead(_664)<br/>StorageDead(_662)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>_683 = const &quot;Perp position must have negative pnl&quot;<br/>_682 = &amp;(*_683)<br/></td></tr><tr><td align="left">_681 = solana_program::log::sol_log(move _682)</td></tr></table>>];
    bb269__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/>StorageDead(_683)<br/>StorageDead(_681)<br/>StorageLive(_684)<br/>_684 = _661<br/>_657 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _684)<br/>StorageDead(_684)<br/>StorageDead(_661)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/></td></tr><tr><td align="left">_656 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _657)</td></tr></table>>];
    bb271__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_657)<br/>_685 = discriminant(_656)<br/></td></tr><tr><td align="left">switchInt(move _685)</td></tr></table>>];
    bb272__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageLive(_689)<br/>_689 = ((_656 as Continue).0: ())<br/>_655 = _689<br/>StorageDead(_689)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>_693 = &amp;(*_9)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>_695 = &amp;_1<br/>_694 = &amp;(*_695)<br/></td></tr><tr><td align="left">_692 = PerpMarketMap::&lt;'_&gt;::get_ref(move _693, move _694)</td></tr></table>>];
    bb273__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageLive(_686)<br/>_686 = ((_656 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_688)<br/>_688 = _686<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _688)</td></tr></table>>];
    bb274__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_688)<br/>StorageDead(_686)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/>StorageDead(_693)<br/></td></tr><tr><td align="left">_691 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _692)</td></tr></table>>];
    bb276__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_692)<br/>_696 = discriminant(_691)<br/></td></tr><tr><td align="left">switchInt(move _696)</td></tr></table>>];
    bb277__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageLive(_700)<br/>_700 = move ((_691 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_690 = move _700<br/>StorageDead(_700)<br/>_1593 = discriminant(_691)<br/>StorageDead(_695)<br/>StorageDead(_691)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>_704 = &amp;(*_10)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>_708 = &amp;_690<br/></td></tr><tr><td align="left">_707 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _708)</td></tr></table>>];
    bb278__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageLive(_697)<br/>_697 = ((_691 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_699)<br/>_699 = _697<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _699)</td></tr></table>>];
    bb279__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_699)<br/>StorageDead(_697)<br/>_1591 = discriminant(_691)<br/>StorageDead(_695)<br/>StorageDead(_691)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_708)<br/>_706 = &amp;((*_707).26: u16)<br/>_705 = &amp;(*_706)<br/></td></tr><tr><td align="left">_703 = SpotMarketMap::&lt;'_&gt;::get_ref(move _704, move _705)</td></tr></table>>];
    bb281__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_704)<br/></td></tr><tr><td align="left">_702 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _703)</td></tr></table>>];
    bb282__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>_709 = discriminant(_702)<br/></td></tr><tr><td align="left">switchInt(move _709)</td></tr></table>>];
    bb283__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageLive(_713)<br/>_713 = move ((_702 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_701 = move _713<br/>StorageDead(_713)<br/>_1597 = discriminant(_702)<br/>StorageDead(_707)<br/>StorageDead(_706)<br/>StorageDead(_702)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>_718 = &amp;mut (*_11)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>_724 = &amp;_701<br/></td></tr><tr><td align="left">_723 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _724)</td></tr></table>>];
    bb284__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageLive(_710)<br/>_710 = ((_702 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_712)<br/>_712 = _710<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _712)</td></tr></table>>];
    bb285__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/>StorageDead(_710)<br/>_1595 = discriminant(_702)<br/>StorageDead(_707)<br/>StorageDead(_706)<br/>StorageDead(_702)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">_722 = &amp;(*_723)<br/>StorageDead(_724)<br/></td></tr><tr><td align="left">_721 = SpotMarket::oracle_id(move _722)</td></tr></table>>];
    bb287__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_722)<br/>_720 = &amp;_721<br/>_719 = &amp;(*_720)<br/></td></tr><tr><td align="left">_717 = OracleMap::&lt;'_&gt;::get_price_data(move _718, move _719)</td></tr></table>>];
    bb288__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_719)<br/>StorageDead(_718)<br/></td></tr><tr><td align="left">_716 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _717)</td></tr></table>>];
    bb289__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>_725 = discriminant(_716)<br/></td></tr><tr><td align="left">switchInt(move _725)</td></tr></table>>];
    bb290__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageLive(_729)<br/>_729 = ((_716 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_715 = _729<br/>StorageDead(_729)<br/>_714 = ((*_715).0: i64)<br/>StorageDead(_723)<br/>StorageDead(_721)<br/>StorageDead(_720)<br/>StorageDead(_716)<br/>StorageDead(_715)<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>_731 = _646<br/></td></tr><tr><td align="left">_730 = core::num::&lt;impl i128&gt;::unsigned_abs(move _731)</td></tr></table>>];
    bb291__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageLive(_726)<br/>_726 = ((_716 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_728)<br/>_728 = _726<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _728)</td></tr></table>>];
    bb292__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_728)<br/>StorageDead(_726)<br/>StorageDead(_723)<br/>StorageDead(_721)<br/>StorageDead(_720)<br/>StorageDead(_716)<br/>StorageDead(_715)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb293__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_731)<br/>StorageLive(_732)<br/>_732 = _714<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_735 = &amp;_690<br/></td></tr><tr><td align="left">_734 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _735)</td></tr></table>>];
    bb294__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_735)<br/>_733 = ((*_734).24: state::perp_market::ContractTier)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>_741 = &amp;_690<br/></td></tr><tr><td align="left">_740 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _741)</td></tr></table>>];
    bb295__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_741)<br/>_739 = ((*_740).13: u32)<br/>StorageLive(_742)<br/>_742 = LiquidationMultiplierType::Discount<br/></td></tr><tr><td align="left">_738 = calculate_liquidation_multiplier(move _739, move _742)</td></tr></table>>];
    bb296__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_742)<br/>StorageDead(_739)<br/></td></tr><tr><td align="left">_737 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _738)</td></tr></table>>];
    bb297__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>_743 = discriminant(_737)<br/></td></tr><tr><td align="left">switchInt(move _743)</td></tr></table>>];
    bb298__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageLive(_747)<br/>_747 = ((_737 as Continue).0: u32)<br/>_736 = _747<br/>StorageDead(_747)<br/>_583 = (move _730, move _732, move _733, const 6_u32, const _, move _736)<br/>StorageDead(_736)<br/>StorageDead(_733)<br/>StorageDead(_732)<br/>StorageDead(_730)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb299__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageLive(_744)<br/>_744 = ((_737 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_746)<br/>_746 = _744<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _746)</td></tr></table>>];
    bb300__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_746)<br/>StorageDead(_744)<br/>StorageDead(_736)<br/>StorageDead(_733)<br/>StorageDead(_732)<br/>StorageDead(_730)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb301__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/></td></tr><tr><td align="left">drop(_690)</td></tr></table>>];
    bb302__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>StorageDead(_646)<br/>StorageDead(_594)<br/>StorageDead(_584)<br/>StorageLive(_577)<br/>_577 = (_583.0: u128)<br/>StorageLive(_578)<br/>_578 = (_583.1: i64)<br/>StorageLive(_579)<br/>_579 = (_583.2: state::perp_market::ContractTier)<br/>StorageLive(_580)<br/>_580 = (_583.3: u32)<br/>StorageLive(_581)<br/>_581 = (_583.4: u32)<br/>StorageLive(_582)<br/>_582 = (_583.5: u32)<br/>StorageDead(_740)<br/>StorageDead(_737)<br/>StorageDead(_734)<br/>StorageDead(_583)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>StorageLive(_751)<br/>_751 = &amp;(*_5)<br/>StorageLive(_752)<br/>_752 = &amp;(*_9)<br/>StorageLive(_753)<br/>_753 = &amp;(*_10)<br/>StorageLive(_754)<br/>_754 = &amp;mut (*_11)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>_756 = _14<br/></td></tr><tr><td align="left">_755 = MarginContext::liquidation(move _756)</td></tr></table>>];
    bb303__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_756)<br/></td></tr><tr><td align="left">_750 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _751, move _752, move _753, move _754, move _755)</td></tr></table>>];
    bb304__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/>StorageDead(_754)<br/>StorageDead(_753)<br/>StorageDead(_752)<br/>StorageDead(_751)<br/></td></tr><tr><td align="left">_749 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _750)</td></tr></table>>];
    bb305__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_750)<br/>_757 = discriminant(_749)<br/></td></tr><tr><td align="left">switchInt(move _757)</td></tr></table>>];
    bb306__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageLive(_761)<br/>_761 = ((_749 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_748 = _761<br/>StorageDead(_761)<br/>StorageDead(_749)<br/>StorageLive(_762)<br/>StorageLive(_763)<br/>StorageLive(_764)<br/>_764 = &amp;(*_5)<br/></td></tr><tr><td align="left">_763 = User::is_being_liquidated(move _764)</td></tr></table>>];
    bb307__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageLive(_758)<br/>_758 = ((_749 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_760)<br/>_760 = _758<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _760)</td></tr></table>>];
    bb308__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_760)<br/>StorageDead(_758)<br/>StorageDead(_749)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left">switchInt(move _763)</td></tr></table>>];
    bb310__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_764)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_764)<br/>StorageLive(_765)<br/>StorageLive(_766)<br/>_766 = &amp;_748<br/></td></tr><tr><td align="left">_765 = MarginCalculation::meets_margin_requirement(move _766)</td></tr></table>>];
    bb312__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left">switchInt(move _765)</td></tr></table>>];
    bb313__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>StorageLive(_776)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>_1552 = const _<br/>_778 = &amp;(*_1552)<br/>_777 = &amp;(*_778)<br/>_776 = move _777 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_777)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>_786 = &amp;_748<br/>_785 = &amp;(*_786)<br/></td></tr><tr><td align="left">_784 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;MarginCalculation&gt;(move _785)</td></tr></table>>];
    bb314__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_785)<br/>_783 = [move _784]<br/>StorageDead(_784)<br/>_782 = &amp;_783<br/>_781 = &amp;(*_782)<br/>_780 = move _781 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_781)<br/></td></tr><tr><td align="left">_775 = Arguments::&lt;'_&gt;::new_v1(move _776, move _780)</td></tr></table>>];
    bb315__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/>StorageDead(_776)<br/></td></tr><tr><td align="left">_774 = format(move _775)</td></tr></table>>];
    bb316__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_775)<br/>StorageDead(_786)<br/>StorageDead(_783)<br/>StorageDead(_782)<br/>StorageDead(_778)<br/>_773 = move _774<br/>StorageDead(_774)<br/>_772 = &amp;_773<br/>_771 = &amp;(*_772)<br/></td></tr><tr><td align="left">_770 = &lt;String as Deref&gt;::deref(move _771)</td></tr></table>>];
    bb317__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">_769 = &amp;(*_770)<br/>StorageDead(_771)<br/></td></tr><tr><td align="left">_768 = solana_program::log::sol_log(move _769)</td></tr></table>>];
    bb318__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/></td></tr><tr><td align="left">drop(_773)</td></tr></table>>];
    bb319__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_773)<br/>StorageDead(_772)<br/>StorageDead(_770)<br/>StorageDead(_768)<br/>StorageLive(_787)<br/>_787 = error::ErrorCode::SufficientCollateral<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _787)<br/>StorageDead(_787)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb320__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb321__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageLive(_788)<br/>StorageLive(_789)<br/>_789 = &amp;(*_5)<br/></td></tr><tr><td align="left">_788 = User::is_being_liquidated(move _789)</td></tr></table>>];
    bb322__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left">switchInt(move _788)</td></tr></table>>];
    bb323__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_789)<br/>StorageLive(_790)<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>_793 = &amp;_748<br/></td></tr><tr><td align="left">_792 = MarginCalculation::can_exit_liquidation(move _793)</td></tr></table>>];
    bb324__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_793)<br/></td></tr><tr><td align="left">_791 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _792)</td></tr></table>>];
    bb325__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_792)<br/>_794 = discriminant(_791)<br/></td></tr><tr><td align="left">switchInt(move _794)</td></tr></table>>];
    bb326__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageLive(_798)<br/>_798 = ((_791 as Continue).0: bool)<br/>_790 = _798<br/>StorageDead(_798)<br/></td></tr><tr><td align="left">switchInt(move _790)</td></tr></table>>];
    bb327__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageLive(_795)<br/>_795 = ((_791 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_797)<br/>_797 = _795<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _797)</td></tr></table>>];
    bb328__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>StorageDead(_795)<br/>StorageDead(_791)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb329__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_791)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>_801 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_800 = User::exit_liquidation(move _801)</td></tr></table>>];
    bb330__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_791)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_800)<br/>StorageLive(_802)<br/>_802 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _802)<br/>StorageDead(_802)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb332__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_789)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb333__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">_762 = const ()<br/>StorageDead(_790)<br/>StorageDead(_788)<br/>StorageDead(_765)<br/>StorageDead(_763)<br/>StorageDead(_762)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>_806 = &amp;mut (*_5)<br/>StorageLive(_807)<br/>_807 = _13<br/></td></tr><tr><td align="left">_805 = User::enter_liquidation(move _806, move _807)</td></tr></table>>];
    bb334__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_807)<br/>StorageDead(_806)<br/></td></tr><tr><td align="left">_804 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _805)</td></tr></table>>];
    bb335__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_805)<br/>_808 = discriminant(_804)<br/></td></tr><tr><td align="left">switchInt(move _808)</td></tr></table>>];
    bb336__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageLive(_812)<br/>_812 = ((_804 as Continue).0: u16)<br/>_803 = _812<br/>StorageDead(_812)<br/>StorageDead(_804)<br/>StorageLive(_813)<br/>_813 = const 0_u64<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>_817 = &amp;mut (*_5)<br/>StorageLive(_818)<br/>_818 = &amp;(*_6)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>_820 = &amp;(*_8)<br/>_819 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _820)<br/>StorageDead(_820)<br/>StorageLive(_821)<br/>_821 = &amp;(*_9)<br/>StorageLive(_822)<br/>_822 = &amp;(*_10)<br/>StorageLive(_823)<br/>_823 = &amp;mut (*_11)<br/>StorageLive(_824)<br/>_824 = _12<br/>StorageLive(_825)<br/>_825 = _13<br/>StorageLive(_826)<br/>_826 = OrderActionExplanation::Liquidation<br/>StorageLive(_827)<br/>_827 = Option::&lt;state::user::MarketType&gt;::None<br/>StorageLive(_828)<br/>_828 = Option::&lt;u16&gt;::None<br/>StorageLive(_829)<br/>_829 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">_816 = controller::orders::cancel_orders(move _817, move _818, move _819, move _821, move _822, move _823, move _824, move _825, move _826, move _827, move _828, move _829)</td></tr></table>>];
    bb337__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageLive(_809)<br/>_809 = ((_804 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_811)<br/>_811 = _809<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _811)</td></tr></table>>];
    bb338__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>StorageDead(_809)<br/>StorageDead(_804)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_829)<br/>StorageDead(_828)<br/>StorageDead(_827)<br/>StorageDead(_826)<br/>StorageDead(_825)<br/>StorageDead(_824)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/>StorageDead(_821)<br/>StorageDead(_819)<br/>StorageDead(_818)<br/>StorageDead(_817)<br/></td></tr><tr><td align="left">_815 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _816)</td></tr></table>>];
    bb340__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_816)<br/>_830 = discriminant(_815)<br/></td></tr><tr><td align="left">switchInt(move _830)</td></tr></table>>];
    bb341__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_834)<br/>_834 = move ((_815 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_1570 = const true<br/>_814 = move _834<br/>StorageDead(_834)<br/>_1601 = discriminant(_815)<br/>StorageDead(_815)<br/>StorageLive(_837)<br/>StorageLive(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>_840 = &amp;(*_5)<br/>StorageLive(_841)<br/>_841 = &amp;(*_9)<br/>StorageLive(_842)<br/>_842 = &amp;(*_10)<br/></td></tr><tr><td align="left">_839 = calculate_user_safest_position_tiers(move _840, move _841, move _842)</td></tr></table>>];
    bb342__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageLive(_831)<br/>_831 = ((_815 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_833)<br/>_833 = _831<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _833)</td></tr></table>>];
    bb343__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_833)<br/>StorageDead(_831)<br/>_1599 = discriminant(_815)<br/>StorageDead(_815)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageDead(_841)<br/>StorageDead(_840)<br/></td></tr><tr><td align="left">_838 = &lt;std::result::Result&lt;(state::spot_market::AssetTier, state::perp_market::ContractTier), error::ErrorCode&gt; as Try&gt;::branch(move _839)</td></tr></table>>];
    bb345__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>_843 = discriminant(_838)<br/></td></tr><tr><td align="left">switchInt(move _843)</td></tr></table>>];
    bb346__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageLive(_847)<br/>_847 = ((_838 as Continue).0: (state::spot_market::AssetTier, state::perp_market::ContractTier))<br/>_837 = _847<br/>StorageDead(_847)<br/>StorageLive(_835)<br/>_835 = (_837.0: state::spot_market::AssetTier)<br/>StorageLive(_836)<br/>_836 = (_837.1: state::perp_market::ContractTier)<br/>StorageDead(_838)<br/>StorageDead(_837)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>StorageLive(_850)<br/>_850 = &amp;_579<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>_852 = &amp;_836<br/>_851 = &amp;(*_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>_854 = &amp;_835<br/>_853 = &amp;(*_854)<br/></td></tr><tr><td align="left">_849 = state::perp_market::ContractTier::is_as_safe_as(move _850, move _851, move _853)</td></tr></table>>];
    bb347__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageLive(_844)<br/>_844 = ((_838 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_846)<br/>_846 = _844<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _846)</td></tr></table>>];
    bb348__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/>StorageDead(_844)<br/>StorageDead(_838)<br/>StorageDead(_837)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb349__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/>StorageDead(_851)<br/>StorageDead(_850)<br/>_848 = Not(move _849)<br/>StorageDead(_849)<br/>StorageDead(_854)<br/>StorageDead(_852)<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>_857 = &amp;_814<br/></td></tr><tr><td align="left">_856 = Vec::&lt;u32&gt;::is_empty(move _857)</td></tr></table>>];
    bb350__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left">switchInt(move _856)</td></tr></table>>];
    bb351__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>_855 = _748<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb352__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>_861 = &amp;(*_5)<br/>StorageLive(_862)<br/>_862 = &amp;(*_9)<br/>StorageLive(_863)<br/>_863 = &amp;(*_10)<br/>StorageLive(_864)<br/>_864 = &amp;mut (*_11)<br/>StorageLive(_865)<br/>StorageLive(_866)<br/>_866 = _14<br/></td></tr><tr><td align="left">_865 = MarginContext::liquidation(move _866)</td></tr></table>>];
    bb353__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/></td></tr><tr><td align="left">_860 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _861, move _862, move _863, move _864, move _865)</td></tr></table>>];
    bb354__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_865)<br/>StorageDead(_864)<br/>StorageDead(_863)<br/>StorageDead(_862)<br/>StorageDead(_861)<br/></td></tr><tr><td align="left">_859 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _860)</td></tr></table>>];
    bb355__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_860)<br/>_867 = discriminant(_859)<br/></td></tr><tr><td align="left">switchInt(move _867)</td></tr></table>>];
    bb356__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageLive(_871)<br/>_871 = ((_859 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_858 = _871<br/>StorageDead(_871)<br/>StorageDead(_859)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>_875 = &amp;_748<br/></td></tr><tr><td align="left">_874 = MarginCalculation::margin_shortage(move _875)</td></tr></table>>];
    bb357__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_868)<br/>_868 = ((_859 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_870)<br/>_870 = _868<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _870)</td></tr></table>>];
    bb358__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_870)<br/>StorageDead(_868)<br/>StorageDead(_859)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb359__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_875)<br/></td></tr><tr><td align="left">_873 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _874)</td></tr></table>>];
    bb360__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_874)<br/>_876 = discriminant(_873)<br/></td></tr><tr><td align="left">switchInt(move _876)</td></tr></table>>];
    bb361__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageLive(_880)<br/>_880 = ((_873 as Continue).0: u128)<br/>_872 = _880<br/>StorageDead(_880)<br/>StorageDead(_873)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>StorageLive(_883)<br/>StorageLive(_884)<br/>_884 = &amp;_858<br/></td></tr><tr><td align="left">_883 = MarginCalculation::margin_shortage(move _884)</td></tr></table>>];
    bb362__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageLive(_877)<br/>_877 = ((_873 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_879)<br/>_879 = _877<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _879)</td></tr></table>>];
    bb363__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_879)<br/>StorageDead(_877)<br/>StorageDead(_873)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb364__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/></td></tr><tr><td align="left">_882 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _883)</td></tr></table>>];
    bb365__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/>_885 = discriminant(_882)<br/></td></tr><tr><td align="left">switchInt(move _885)</td></tr></table>>];
    bb366__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageLive(_889)<br/>_889 = ((_882 as Continue).0: u128)<br/>_881 = _889<br/>StorageDead(_889)<br/>StorageDead(_882)<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>StorageLive(_894)<br/>_894 = _872<br/>StorageLive(_895)<br/>_895 = _881<br/></td></tr><tr><td align="left">_893 = core::num::&lt;impl u128&gt;::saturating_sub(move _894, move _895)</td></tr></table>>];
    bb367__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageLive(_886)<br/>_886 = ((_882 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_888)<br/>_888 = _886<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _888)</td></tr></table>>];
    bb368__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/>StorageDead(_886)<br/>StorageDead(_882)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb369__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_895)<br/>StorageDead(_894)<br/></td></tr><tr><td align="left">_892 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _893)</td></tr></table>>];
    bb370__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_893)<br/></td></tr><tr><td align="left">_891 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _892)</td></tr></table>>];
    bb371__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_892)<br/>_896 = discriminant(_891)<br/></td></tr><tr><td align="left">switchInt(move _896)</td></tr></table>>];
    bb372__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_900)<br/>_900 = ((_891 as Continue).0: u64)<br/>_890 = _900<br/>StorageDead(_900)<br/>_813 = move _890<br/>StorageDead(_890)<br/>StorageDead(_891)<br/>StorageLive(_901)<br/>StorageLive(_902)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>_904 = &amp;mut (*_5)<br/>StorageLive(_905)<br/>_905 = _813<br/></td></tr><tr><td align="left">_903 = User::increment_margin_freed(move _904, move _905)</td></tr></table>>];
    bb373__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageLive(_897)<br/>_897 = ((_891 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_899)<br/>_899 = _897<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _899)</td></tr></table>>];
    bb374__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_899)<br/>StorageDead(_897)<br/>StorageDead(_890)<br/>StorageDead(_891)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb375__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_905)<br/>StorageDead(_904)<br/></td></tr><tr><td align="left">_902 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _903)</td></tr></table>>];
    bb376__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_903)<br/>_906 = discriminant(_902)<br/></td></tr><tr><td align="left">switchInt(move _906)</td></tr></table>>];
    bb377__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageLive(_910)<br/>_910 = ((_902 as Continue).0: ())<br/>_901 = _910<br/>StorageDead(_910)<br/>StorageDead(_902)<br/>StorageDead(_901)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>_914 = &amp;_858<br/></td></tr><tr><td align="left">_913 = MarginCalculation::can_exit_liquidation(move _914)</td></tr></table>>];
    bb378__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageLive(_907)<br/>_907 = ((_902 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_909)<br/>_909 = _907<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _909)</td></tr></table>>];
    bb379__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_909)<br/>StorageDead(_907)<br/>StorageDead(_902)<br/>StorageDead(_901)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_914)<br/></td></tr><tr><td align="left">_912 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _913)</td></tr></table>>];
    bb381__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_913)<br/>_915 = discriminant(_912)<br/></td></tr><tr><td align="left">switchInt(move _915)</td></tr></table>>];
    bb382__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_919)<br/>_919 = ((_912 as Continue).0: bool)<br/>_911 = _919<br/>StorageDead(_919)<br/>StorageDead(_912)<br/>StorageLive(_920)<br/>StorageLive(_921)<br/>_921 = _911<br/></td></tr><tr><td align="left">switchInt(move _921)</td></tr></table>>];
    bb383__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_916)<br/>_916 = ((_912 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_918)<br/>_918 = _916<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _918)</td></tr></table>>];
    bb384__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_918)<br/>StorageDead(_916)<br/>StorageDead(_912)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageLive(_922)<br/>_922 = _848<br/></td></tr><tr><td align="left">switchInt(move _922)</td></tr></table>>];
    bb386__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>_927 = &amp;(*_9)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>_929 = &amp;_1<br/>_928 = &amp;(*_929)<br/></td></tr><tr><td align="left">_926 = PerpMarketMap::&lt;'_&gt;::get_ref(move _927, move _928)</td></tr></table>>];
    bb387__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">_920 = const ()<br/>StorageDead(_922)<br/>StorageDead(_921)<br/>StorageDead(_920)<br/>_855 = _858<br/>StorageDead(_911)<br/>StorageDead(_881)<br/>StorageDead(_872)<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb388__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_928)<br/>StorageDead(_927)<br/></td></tr><tr><td align="left">_925 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _926)</td></tr></table>>];
    bb389__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_926)<br/>_930 = discriminant(_925)<br/></td></tr><tr><td align="left">switchInt(move _930)</td></tr></table>>];
    bb390__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageLive(_934)<br/>_934 = move ((_925 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_924 = move _934<br/>StorageDead(_934)<br/>_1605 = discriminant(_925)<br/>StorageDead(_929)<br/>StorageDead(_925)<br/>StorageLive(_935)<br/>StorageLive(_936)<br/>StorageLive(_937)<br/>StorageLive(_938)<br/>StorageLive(_939)<br/>_939 = &amp;mut (*_11)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>StorageLive(_942)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>StorageLive(_945)<br/>_945 = &amp;_924<br/></td></tr><tr><td align="left">_944 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _945)</td></tr></table>>];
    bb391__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageLive(_931)<br/>_931 = ((_925 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_933)<br/>_933 = _931<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _933)</td></tr></table>>];
    bb392__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_933)<br/>StorageDead(_931)<br/>_1603 = discriminant(_925)<br/>StorageDead(_929)<br/>StorageDead(_925)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb393__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">_943 = &amp;(*_944)<br/>StorageDead(_945)<br/></td></tr><tr><td align="left">_942 = PerpMarket::oracle_id(move _943)</td></tr></table>>];
    bb394__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_943)<br/>_941 = &amp;_942<br/>_940 = &amp;(*_941)<br/></td></tr><tr><td align="left">_938 = OracleMap::&lt;'_&gt;::get_price_data(move _939, move _940)</td></tr></table>>];
    bb395__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_940)<br/>StorageDead(_939)<br/></td></tr><tr><td align="left">_937 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _938)</td></tr></table>>];
    bb396__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_938)<br/>_946 = discriminant(_937)<br/></td></tr><tr><td align="left">switchInt(move _946)</td></tr></table>>];
    bb397__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageLive(_950)<br/>_950 = ((_937 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_936 = _950<br/>StorageDead(_950)<br/>_935 = ((*_936).0: i64)<br/>StorageDead(_944)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/>StorageDead(_937)<br/>StorageDead(_936)<br/>StorageLive(_951)<br/>StorageLive(_952)<br/>StorageLive(_953)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>StorageLive(_957)<br/>StorageLive(_958)<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>StorageLive(_961)<br/>StorageLive(_962)<br/>StorageLive(_963)<br/>StorageLive(_964)<br/>StorageLive(_965)<br/>_965 = _12<br/>StorageLive(_966)<br/>_966 = _803<br/>StorageLive(_967)<br/>_967 = LiquidationType::LiquidatePerpPnlForDeposit<br/>StorageLive(_968)<br/>_968 = (*_6)<br/>StorageLive(_969)<br/>_969 = (*_8)<br/>StorageLive(_970)<br/>_970 = (_748.3: u128)<br/>StorageLive(_971)<br/>_971 = (_748.1: i128)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>_973 = &amp;(*_5)<br/></td></tr><tr><td align="left">_972 = User::is_bankrupt(move _973)</td></tr></table>>];
    bb398__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageLive(_947)<br/>_947 = ((_937 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_949)<br/>_949 = _947<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _949)</td></tr></table>>];
    bb399__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_949)<br/>StorageDead(_947)<br/>StorageDead(_944)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/>StorageDead(_937)<br/>StorageDead(_936)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb400__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_973)<br/>StorageLive(_974)<br/>_1570 = const false<br/>_974 = move _814<br/>StorageLive(_975)<br/>_975 = _813<br/>StorageLive(_976)<br/>StorageLive(_977)<br/>_977 = _1<br/>StorageLive(_978)<br/>_978 = _935<br/>StorageLive(_979)<br/>_979 = _2<br/>StorageLive(_980)<br/>_980 = _391<br/>_976 = LiquidatePerpPnlForDepositRecord { perp_market_index: move _977, market_oracle_price: move _978, pnl_transfer: const 0_u128, asset_market_index: move _979, asset_price: move _980, asset_transfer: const 0_u128 }<br/>StorageDead(_980)<br/>StorageDead(_979)<br/>StorageDead(_978)<br/>StorageDead(_977)<br/>StorageLive(_981)<br/></td></tr><tr><td align="left">_981 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb401__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">_964 = LiquidationRecord { ts: move _965, liquidation_type: move _967, user: move _968, liquidator: move _969, margin_requirement: move _970, total_collateral: move _971, margin_freed: move _975, liquidation_id: move _966, bankrupt: move _972, canceled_order_ids: move _974, liquidate_perp: move (_981.10: state::events::LiquidatePerpRecord), liquidate_spot: move (_981.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move (_981.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move _976, perp_bankruptcy: move (_981.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_981.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_976)<br/>StorageDead(_975)<br/>StorageDead(_974)<br/>StorageDead(_972)<br/>StorageDead(_971)<br/>StorageDead(_970)<br/>StorageDead(_969)<br/>StorageDead(_968)<br/>StorageDead(_967)<br/>StorageDead(_966)<br/>StorageDead(_965)<br/>_963 = &amp;_964<br/>_962 = &amp;(*_963)<br/></td></tr><tr><td align="left">_961 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _962)</td></tr></table>>];
    bb402__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_962)<br/>_960 = &amp;_961<br/>_959 = &amp;(*_960)<br/></td></tr><tr><td align="left">_958 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _959)</td></tr></table>>];
    bb403__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">_957 = &amp;(*_958)<br/>StorageDead(_959)<br/>_956 = [move _957]<br/>StorageDead(_957)<br/>_955 = &amp;_956<br/>_954 = &amp;(*_955)<br/>_953 = move _954 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_954)<br/></td></tr><tr><td align="left">_952 = solana_program::log::sol_log_data(move _953)</td></tr></table>>];
    bb404__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_953)<br/></td></tr><tr><td align="left">drop(_961)</td></tr></table>>];
    bb405__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left">drop(_964)</td></tr></table>>];
    bb406__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left">drop(_981)</td></tr></table>>];
    bb407__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_981)<br/>StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_961)<br/>StorageDead(_960)<br/>StorageDead(_958)<br/>StorageDead(_956)<br/>StorageDead(_955)<br/>StorageDead(_952)<br/>_951 = const ()<br/>StorageDead(_951)<br/>StorageLive(_982)<br/>StorageLive(_983)<br/>_983 = _911<br/></td></tr><tr><td align="left">switchInt(move _983)</td></tr></table>>];
    bb408__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageLive(_984)<br/>StorageLive(_985)<br/>_985 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_984 = User::exit_liquidation(move _985)</td></tr></table>>];
    bb409__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_985)<br/>StorageDead(_984)<br/>_982 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageLive(_986)<br/>_986 = _848<br/></td></tr><tr><td align="left">switchInt(move _986)</td></tr></table>>];
    bb411__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageLive(_987)<br/>StorageLive(_988)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>StorageLive(_991)<br/>StorageLive(_992)<br/>StorageLive(_993)<br/>StorageLive(_994)<br/>StorageLive(_995)<br/>StorageLive(_996)<br/>StorageLive(_997)<br/>_1551 = const _<br/>_997 = &amp;(*_1551)<br/>_996 = &amp;(*_997)<br/>_995 = move _996 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_996)<br/>StorageLive(_999)<br/>StorageLive(_1000)<br/>StorageLive(_1001)<br/>StorageLive(_1002)<br/>StorageLive(_1003)<br/>StorageLive(_1004)<br/>StorageLive(_1005)<br/>_1005 = &amp;_579<br/>_1004 = &amp;(*_1005)<br/></td></tr><tr><td align="left">_1003 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::ContractTier&gt;(move _1004)</td></tr></table>>];
    bb412__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>StorageLive(_1006)<br/>StorageLive(_1007)<br/>StorageLive(_1008)<br/>_1008 = &amp;_836<br/>_1007 = &amp;(*_1008)<br/></td></tr><tr><td align="left">_1006 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::ContractTier&gt;(move _1007)</td></tr></table>>];
    bb413__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_1007)<br/>StorageLive(_1009)<br/>StorageLive(_1010)<br/>StorageLive(_1011)<br/>_1011 = &amp;_835<br/>_1010 = &amp;(*_1011)<br/></td></tr><tr><td align="left">_1009 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::spot_market::AssetTier&gt;(move _1010)</td></tr></table>>];
    bb414__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_1010)<br/>_1002 = [move _1003, move _1006, move _1009]<br/>StorageDead(_1009)<br/>StorageDead(_1006)<br/>StorageDead(_1003)<br/>_1001 = &amp;_1002<br/>_1000 = &amp;(*_1001)<br/>_999 = move _1000 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1000)<br/></td></tr><tr><td align="left">_994 = Arguments::&lt;'_&gt;::new_v1(move _995, move _999)</td></tr></table>>];
    bb415__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_999)<br/>StorageDead(_995)<br/></td></tr><tr><td align="left">_993 = format(move _994)</td></tr></table>>];
    bb416__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_994)<br/>StorageDead(_1011)<br/>StorageDead(_1008)<br/>StorageDead(_1005)<br/>StorageDead(_1002)<br/>StorageDead(_1001)<br/>StorageDead(_997)<br/>_992 = move _993<br/>StorageDead(_993)<br/>_991 = &amp;_992<br/>_990 = &amp;(*_991)<br/></td></tr><tr><td align="left">_989 = &lt;String as Deref&gt;::deref(move _990)</td></tr></table>>];
    bb417__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">_988 = &amp;(*_989)<br/>StorageDead(_990)<br/></td></tr><tr><td align="left">_987 = solana_program::log::sol_log(move _988)</td></tr></table>>];
    bb418__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_988)<br/></td></tr><tr><td align="left">drop(_992)</td></tr></table>>];
    bb419__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_991)<br/>StorageDead(_989)<br/>StorageDead(_987)<br/>_982 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb420__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">_982 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb421__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_986)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_983)<br/>StorageDead(_982)<br/>StorageLive(_1012)<br/>_1012 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1012)<br/>StorageDead(_1012)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb423__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>_1014 = _848<br/></td></tr><tr><td align="left">switchInt(move _1014)</td></tr></table>>];
    bb424__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageLive(_1016)<br/>StorageLive(_1017)<br/>StorageLive(_1018)<br/>StorageLive(_1019)<br/>StorageLive(_1020)<br/>StorageLive(_1021)<br/>StorageLive(_1022)<br/>StorageLive(_1023)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>StorageLive(_1026)<br/>_1544 = const _<br/>_1026 = &amp;(*_1544)<br/>_1025 = &amp;(*_1026)<br/>_1024 = move _1025 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1025)<br/>StorageLive(_1028)<br/>StorageLive(_1029)<br/>StorageLive(_1030)<br/>StorageLive(_1031)<br/>StorageLive(_1032)<br/>StorageLive(_1033)<br/>StorageLive(_1034)<br/>_1034 = &amp;_579<br/>_1033 = &amp;(*_1034)<br/></td></tr><tr><td align="left">_1032 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::ContractTier&gt;(move _1033)</td></tr></table>>];
    bb425__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_1033)<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>StorageLive(_1037)<br/>_1037 = &amp;_836<br/>_1036 = &amp;(*_1037)<br/></td></tr><tr><td align="left">_1035 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::perp_market::ContractTier&gt;(move _1036)</td></tr></table>>];
    bb426__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_1036)<br/>StorageLive(_1038)<br/>StorageLive(_1039)<br/>StorageLive(_1040)<br/>_1040 = &amp;_835<br/>_1039 = &amp;(*_1040)<br/></td></tr><tr><td align="left">_1038 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::spot_market::AssetTier&gt;(move _1039)</td></tr></table>>];
    bb427__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_1039)<br/>_1031 = [move _1032, move _1035, move _1038]<br/>StorageDead(_1038)<br/>StorageDead(_1035)<br/>StorageDead(_1032)<br/>_1030 = &amp;_1031<br/>_1029 = &amp;(*_1030)<br/>_1028 = move _1029 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1029)<br/></td></tr><tr><td align="left">_1023 = Arguments::&lt;'_&gt;::new_v1(move _1024, move _1028)</td></tr></table>>];
    bb428__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_1028)<br/>StorageDead(_1024)<br/></td></tr><tr><td align="left">_1022 = format(move _1023)</td></tr></table>>];
    bb429__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_1023)<br/>StorageDead(_1040)<br/>StorageDead(_1037)<br/>StorageDead(_1034)<br/>StorageDead(_1031)<br/>StorageDead(_1030)<br/>StorageDead(_1026)<br/>_1021 = move _1022<br/>StorageDead(_1022)<br/>_1020 = &amp;_1021<br/>_1019 = &amp;(*_1020)<br/></td></tr><tr><td align="left">_1018 = &lt;String as Deref&gt;::deref(move _1019)</td></tr></table>>];
    bb430__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">_1017 = &amp;(*_1018)<br/>StorageDead(_1019)<br/></td></tr><tr><td align="left">_1016 = solana_program::log::sol_log(move _1017)</td></tr></table>>];
    bb431__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_1017)<br/></td></tr><tr><td align="left">drop(_1021)</td></tr></table>>];
    bb432__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_1021)<br/>StorageDead(_1020)<br/>StorageDead(_1018)<br/>StorageDead(_1016)<br/>StorageLive(_1041)<br/>_1041 = error::ErrorCode::TierViolationLiquidatingPerpPnl<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1041)<br/>StorageDead(_1041)<br/>StorageDead(_1014)<br/>StorageDead(_1013)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">_1013 = const ()<br/>StorageDead(_1014)<br/>StorageDead(_1013)<br/>StorageLive(_1042)<br/>StorageLive(_1043)<br/>StorageLive(_1044)<br/>StorageLive(_1045)<br/>_1045 = &amp;_855<br/></td></tr><tr><td align="left">_1044 = MarginCalculation::margin_shortage(move _1045)</td></tr></table>>];
    bb434__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_1045)<br/></td></tr><tr><td align="left">_1043 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1044)</td></tr></table>>];
    bb435__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_1044)<br/>_1046 = discriminant(_1043)<br/></td></tr><tr><td align="left">switchInt(move _1046)</td></tr></table>>];
    bb436__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageLive(_1050)<br/>_1050 = ((_1043 as Continue).0: u128)<br/>_1042 = _1050<br/>StorageDead(_1050)<br/>StorageDead(_1043)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>StorageLive(_1053)<br/>StorageLive(_1054)<br/>_1054 = _581<br/>StorageLive(_1055)<br/>_1055 = _14<br/></td></tr><tr><td align="left">_1053 = &lt;u32 as SafeMath&gt;::safe_add(move _1054, move _1055)</td></tr></table>>];
    bb437__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageLive(_1047)<br/>_1047 = ((_1043 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1049)<br/>_1049 = _1047<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1049)</td></tr></table>>];
    bb438__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_1049)<br/>StorageDead(_1047)<br/>StorageDead(_1043)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb439__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_1055)<br/>StorageDead(_1054)<br/></td></tr><tr><td align="left">_1052 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _1053)</td></tr></table>>];
    bb440__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1053)<br/>_1056 = discriminant(_1052)<br/></td></tr><tr><td align="left">switchInt(move _1056)</td></tr></table>>];
    bb441__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageLive(_1060)<br/>_1060 = ((_1052 as Continue).0: u32)<br/>_1051 = _1060<br/>StorageDead(_1060)<br/>StorageDead(_1052)<br/>StorageLive(_1061)<br/>StorageLive(_1062)<br/>StorageLive(_1063)<br/>StorageLive(_1064)<br/>_1064 = _1042<br/>StorageLive(_1065)<br/>_1065 = _394<br/>StorageLive(_1066)<br/>_1066 = _395<br/>StorageLive(_1067)<br/>_1067 = _1051<br/>StorageLive(_1068)<br/>_1068 = _582<br/>StorageLive(_1069)<br/>_1069 = _580<br/>StorageLive(_1070)<br/>_1070 = _578<br/></td></tr><tr><td align="left">_1063 = calculate_liability_transfer_to_cover_margin_shortage(move _1064, move _1065, move _1066, move _1067, move _1068, move _1069, move _1070, const 0_u32)</td></tr></table>>];
    bb442__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageLive(_1057)<br/>_1057 = ((_1052 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1059)<br/>_1059 = _1057<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1059)</td></tr></table>>];
    bb443__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_1059)<br/>StorageDead(_1057)<br/>StorageDead(_1052)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb444__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_1070)<br/>StorageDead(_1069)<br/>StorageDead(_1068)<br/>StorageDead(_1067)<br/>StorageDead(_1066)<br/>StorageDead(_1065)<br/>StorageDead(_1064)<br/></td></tr><tr><td align="left">_1062 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1063)</td></tr></table>>];
    bb445__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1063)<br/>_1071 = discriminant(_1062)<br/></td></tr><tr><td align="left">switchInt(move _1071)</td></tr></table>>];
    bb446__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageLive(_1075)<br/>_1075 = ((_1062 as Continue).0: u128)<br/>_1061 = _1075<br/>StorageDead(_1075)<br/>StorageDead(_1062)<br/>StorageLive(_1076)<br/>StorageLive(_1077)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>_1079 = &amp;(*_5)<br/>StorageLive(_1080)<br/>_1080 = _1042<br/>StorageLive(_1081)<br/>_1081 = _13<br/>StorageLive(_1082)<br/>_1082 = _15<br/>StorageLive(_1083)<br/>_1083 = _16<br/></td></tr><tr><td align="left">_1078 = calculate_max_pct_to_liquidate(move _1079, move _1080, move _1081, move _1082, move _1083)</td></tr></table>>];
    bb447__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageLive(_1072)<br/>_1072 = ((_1062 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1074)<br/>_1074 = _1072<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1074)</td></tr></table>>];
    bb448__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_1074)<br/>StorageDead(_1072)<br/>StorageDead(_1062)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb449__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1083)<br/>StorageDead(_1082)<br/>StorageDead(_1081)<br/>StorageDead(_1080)<br/>StorageDead(_1079)<br/></td></tr><tr><td align="left">_1077 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1078)</td></tr></table>>];
    bb450__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageDead(_1078)<br/>_1084 = discriminant(_1077)<br/></td></tr><tr><td align="left">switchInt(move _1084)</td></tr></table>>];
    bb451__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageLive(_1088)<br/>_1088 = ((_1077 as Continue).0: u128)<br/>_1076 = _1088<br/>StorageDead(_1088)<br/>StorageDead(_1077)<br/>StorageLive(_1089)<br/>StorageLive(_1090)<br/>StorageLive(_1091)<br/>StorageLive(_1092)<br/>StorageLive(_1093)<br/>_1093 = _1061<br/>StorageLive(_1094)<br/>_1094 = _1076<br/></td></tr><tr><td align="left">_1092 = core::num::&lt;impl u128&gt;::saturating_mul(move _1093, move _1094)</td></tr></table>>];
    bb452__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageLive(_1085)<br/>_1085 = ((_1077 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1087)<br/>_1087 = _1085<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1087)</td></tr></table>>];
    bb453__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1087)<br/>StorageDead(_1085)<br/>StorageDead(_1077)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb454__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1094)<br/>StorageDead(_1093)<br/></td></tr><tr><td align="left">_1091 = &lt;u128 as SafeMath&gt;::safe_div(move _1092, const _)</td></tr></table>>];
    bb455__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/></td></tr><tr><td align="left">_1090 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1091)</td></tr></table>>];
    bb456__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageDead(_1091)<br/>_1095 = discriminant(_1090)<br/></td></tr><tr><td align="left">switchInt(move _1095)</td></tr></table>>];
    bb457__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageLive(_1099)<br/>_1099 = ((_1090 as Continue).0: u128)<br/>_1089 = _1099<br/>StorageDead(_1099)<br/>StorageDead(_1090)<br/>StorageLive(_1100)<br/>StorageLive(_1101)<br/>StorageLive(_1102)<br/>_1102 = _1089<br/>_1101 = Eq(move _1102, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1101)</td></tr></table>>];
    bb458__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageLive(_1096)<br/>_1096 = ((_1090 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1098)<br/>_1098 = _1096<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1098)</td></tr></table>>];
    bb459__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1098)<br/>StorageDead(_1096)<br/>StorageDead(_1090)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb460__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_1102)<br/>StorageLive(_1104)<br/>StorageLive(_1105)<br/>StorageLive(_1106)<br/>_1106 = const &quot;max_pnl_allowed_to_be_transferred == 0&quot;<br/>_1105 = &amp;(*_1106)<br/></td></tr><tr><td align="left">_1104 = solana_program::log::sol_log(move _1105)</td></tr></table>>];
    bb461__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_1102)<br/>_1100 = const ()<br/>StorageDead(_1101)<br/>StorageDead(_1100)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>StorageLive(_1110)<br/>StorageLive(_1111)<br/>_1111 = _390<br/>StorageLive(_1112)<br/>_1112 = _395<br/>StorageLive(_1113)<br/>_1113 = _393<br/>StorageLive(_1114)<br/>_1114 = _391<br/>StorageLive(_1115)<br/>_1115 = _582<br/>StorageLive(_1116)<br/>_1116 = _580<br/>StorageLive(_1117)<br/>_1117 = _578<br/></td></tr><tr><td align="left">_1110 = calculate_liability_transfer_implied_by_asset_amount(move _1111, move _1112, move _1113, move _1114, move _1115, move _1116, move _1117)</td></tr></table>>];
    bb462__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageDead(_1105)<br/>StorageDead(_1106)<br/>StorageDead(_1104)<br/>StorageLive(_1107)<br/>_1107 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1107)<br/>StorageDead(_1107)<br/>StorageDead(_1101)<br/>StorageDead(_1100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb463__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_1117)<br/>StorageDead(_1116)<br/>StorageDead(_1115)<br/>StorageDead(_1114)<br/>StorageDead(_1113)<br/>StorageDead(_1112)<br/>StorageDead(_1111)<br/></td></tr><tr><td align="left">_1109 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1110)</td></tr></table>>];
    bb464__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1110)<br/>_1118 = discriminant(_1109)<br/></td></tr><tr><td align="left">switchInt(move _1118)</td></tr></table>>];
    bb465__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageLive(_1122)<br/>_1122 = ((_1109 as Continue).0: u128)<br/>_1108 = _1122<br/>StorageDead(_1122)<br/>StorageDead(_1109)<br/>StorageLive(_1123)<br/>StorageLive(_1124)<br/>StorageLive(_1125)<br/>_1125 = _577<br/>StorageLive(_1126)<br/>_1127 = CheckedMul(const 10_u128, const _)<br/></td></tr><tr><td align="left">assert(!move (_1127.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 10_u128, const _)</td></tr></table>>];
    bb466__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageLive(_1119)<br/>_1119 = ((_1109 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1121)<br/>_1121 = _1119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1121)</td></tr></table>>];
    bb467__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageDead(_1121)<br/>StorageDead(_1119)<br/>StorageDead(_1109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb468__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">_1126 = move (_1127.0: u128)<br/>_1124 = Gt(move _1125, move _1126)<br/></td></tr><tr><td align="left">switchInt(move _1124)</td></tr></table>>];
    bb469__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1126)<br/>StorageDead(_1125)<br/>_1123 = const 0_u128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb470__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1126)<br/>StorageDead(_1125)<br/>_1123 = _577<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb471__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1124)<br/>StorageLive(_1128)<br/>StorageLive(_1129)<br/>StorageLive(_1130)<br/>StorageLive(_1131)<br/>_1131 = _3<br/>StorageLive(_1132)<br/>_1132 = _577<br/></td></tr><tr><td align="left">_1130 = &lt;u128 as Ord&gt;::min(move _1131, move _1132)</td></tr></table>>];
    bb472__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageDead(_1132)<br/>StorageDead(_1131)<br/>StorageLive(_1133)<br/>StorageLive(_1134)<br/>_1134 = _1089<br/>StorageLive(_1135)<br/>_1135 = _1123<br/></td></tr><tr><td align="left">_1133 = &lt;u128 as Ord&gt;::max(move _1134, move _1135)</td></tr></table>>];
    bb473__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1135)<br/>StorageDead(_1134)<br/></td></tr><tr><td align="left">_1129 = &lt;u128 as Ord&gt;::min(move _1130, move _1133)</td></tr></table>>];
    bb474__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageDead(_1133)<br/>StorageDead(_1130)<br/>StorageLive(_1136)<br/>_1136 = _1108<br/></td></tr><tr><td align="left">_1128 = &lt;u128 as Ord&gt;::min(move _1129, move _1136)</td></tr></table>>];
    bb475__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1136)<br/>StorageDead(_1129)<br/>StorageLive(_1137)<br/>StorageLive(_1138)<br/>StorageLive(_1139)<br/>StorageLive(_1140)<br/>_1140 = _390<br/>StorageLive(_1141)<br/>_1141 = _395<br/>StorageLive(_1142)<br/>_1142 = _393<br/>StorageLive(_1143)<br/>_1143 = _391<br/>StorageLive(_1144)<br/>_1144 = _1128<br/>StorageLive(_1145)<br/>_1145 = _582<br/>StorageLive(_1146)<br/>_1146 = _580<br/>StorageLive(_1147)<br/>_1147 = _578<br/></td></tr><tr><td align="left">_1139 = calculate_asset_transfer_for_liability_transfer(move _1140, move _1141, move _1142, move _1143, move _1144, move _1145, move _1146, move _1147)</td></tr></table>>];
    bb476__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1147)<br/>StorageDead(_1146)<br/>StorageDead(_1145)<br/>StorageDead(_1144)<br/>StorageDead(_1143)<br/>StorageDead(_1142)<br/>StorageDead(_1141)<br/>StorageDead(_1140)<br/></td></tr><tr><td align="left">_1138 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1139)</td></tr></table>>];
    bb477__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>_1148 = discriminant(_1138)<br/></td></tr><tr><td align="left">switchInt(move _1148)</td></tr></table>>];
    bb478__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageLive(_1152)<br/>_1152 = ((_1138 as Continue).0: u128)<br/>_1137 = _1152<br/>StorageDead(_1152)<br/>StorageDead(_1138)<br/>StorageLive(_1153)<br/>StorageLive(_1154)<br/>StorageLive(_1155)<br/>_1155 = _1137<br/>_1154 = Eq(move _1155, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1154)</td></tr></table>>];
    bb479__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageLive(_1149)<br/>_1149 = ((_1138 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1151)<br/>_1151 = _1149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1151)</td></tr></table>>];
    bb480__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_1151)<br/>StorageDead(_1149)<br/>StorageDead(_1138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb481__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb482__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1155)<br/>StorageLive(_1156)<br/>StorageLive(_1157)<br/>_1157 = _1128<br/>_1156 = Eq(move _1157, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1156)</td></tr></table>>];
    bb483__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1157)<br/>StorageLive(_1159)<br/>StorageLive(_1160)<br/>StorageLive(_1161)<br/>StorageLive(_1162)<br/>StorageLive(_1163)<br/>StorageLive(_1164)<br/>StorageLive(_1165)<br/>StorageLive(_1166)<br/>StorageLive(_1167)<br/>StorageLive(_1168)<br/>StorageLive(_1169)<br/>_1547 = const _<br/>_1169 = &amp;(*_1547)<br/>_1168 = &amp;(*_1169)<br/>_1167 = move _1168 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1168)<br/>StorageLive(_1171)<br/>StorageLive(_1172)<br/>StorageLive(_1173)<br/>StorageLive(_1174)<br/>StorageLive(_1175)<br/>StorageLive(_1176)<br/>StorageLive(_1177)<br/>_1177 = &amp;_2<br/>_1176 = &amp;(*_1177)<br/></td></tr><tr><td align="left">_1175 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1176)</td></tr></table>>];
    bb484__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_1157)<br/>_1153 = const ()<br/>StorageDead(_1156)<br/>StorageDead(_1154)<br/>StorageDead(_1153)<br/>StorageLive(_1232)<br/>StorageLive(_1233)<br/>StorageLive(_1234)<br/>StorageLive(_1235)<br/>_1235 = _1137<br/>StorageLive(_1236)<br/>_1236 = _1128<br/>StorageLive(_1237)<br/>_1237 = _393<br/>StorageLive(_1238)<br/>_1238 = _580<br/>StorageLive(_1239)<br/>_1239 = _4<br/></td></tr><tr><td align="left">_1234 = validate_transfer_satisfies_limit_price(move _1235, move _1236, move _1237, move _1238, move _1239)</td></tr></table>>];
    bb485__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1176)<br/>StorageLive(_1178)<br/>StorageLive(_1179)<br/>StorageLive(_1180)<br/>_1180 = &amp;_1<br/>_1179 = &amp;(*_1180)<br/></td></tr><tr><td align="left">_1178 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1179)</td></tr></table>>];
    bb486__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_1179)<br/>_1174 = [move _1175, move _1178]<br/>StorageDead(_1178)<br/>StorageDead(_1175)<br/>_1173 = &amp;_1174<br/>_1172 = &amp;(*_1173)<br/>_1171 = move _1172 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1172)<br/></td></tr><tr><td align="left">_1166 = Arguments::&lt;'_&gt;::new_v1(move _1167, move _1171)</td></tr></table>>];
    bb487__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_1171)<br/>StorageDead(_1167)<br/></td></tr><tr><td align="left">_1165 = format(move _1166)</td></tr></table>>];
    bb488__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_1166)<br/>StorageDead(_1180)<br/>StorageDead(_1177)<br/>StorageDead(_1174)<br/>StorageDead(_1173)<br/>StorageDead(_1169)<br/>_1164 = move _1165<br/>StorageDead(_1165)<br/>_1163 = &amp;_1164<br/>_1162 = &amp;(*_1163)<br/></td></tr><tr><td align="left">_1161 = &lt;String as Deref&gt;::deref(move _1162)</td></tr></table>>];
    bb489__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">_1160 = &amp;(*_1161)<br/>StorageDead(_1162)<br/></td></tr><tr><td align="left">_1159 = solana_program::log::sol_log(move _1160)</td></tr></table>>];
    bb490__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_1160)<br/></td></tr><tr><td align="left">drop(_1164)</td></tr></table>>];
    bb491__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1164)<br/>StorageDead(_1163)<br/>StorageDead(_1161)<br/>StorageDead(_1159)<br/>StorageLive(_1181)<br/>StorageLive(_1182)<br/>StorageLive(_1183)<br/>StorageLive(_1184)<br/>StorageLive(_1185)<br/>StorageLive(_1186)<br/>StorageLive(_1187)<br/>StorageLive(_1188)<br/>StorageLive(_1189)<br/>StorageLive(_1190)<br/>StorageLive(_1191)<br/>_1546 = const _<br/>_1191 = &amp;(*_1546)<br/>_1190 = &amp;(*_1191)<br/>_1189 = move _1190 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1190)<br/>StorageLive(_1193)<br/>StorageLive(_1194)<br/>StorageLive(_1195)<br/>StorageLive(_1196)<br/>StorageLive(_1197)<br/>StorageLive(_1198)<br/>StorageLive(_1199)<br/>_1199 = &amp;_3<br/>_1198 = &amp;(*_1199)<br/></td></tr><tr><td align="left">_1197 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1198)</td></tr></table>>];
    bb492__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageDead(_1198)<br/>StorageLive(_1200)<br/>StorageLive(_1201)<br/>StorageLive(_1202)<br/>_1202 = &amp;_577<br/>_1201 = &amp;(*_1202)<br/></td></tr><tr><td align="left">_1200 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1201)</td></tr></table>>];
    bb493__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_1201)<br/>StorageLive(_1203)<br/>StorageLive(_1204)<br/>StorageLive(_1205)<br/>_1205 = &amp;_1061<br/>_1204 = &amp;(*_1205)<br/></td></tr><tr><td align="left">_1203 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1204)</td></tr></table>>];
    bb494__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_1204)<br/>_1196 = [move _1197, move _1200, move _1203]<br/>StorageDead(_1203)<br/>StorageDead(_1200)<br/>StorageDead(_1197)<br/>_1195 = &amp;_1196<br/>_1194 = &amp;(*_1195)<br/>_1193 = move _1194 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1194)<br/></td></tr><tr><td align="left">_1188 = Arguments::&lt;'_&gt;::new_v1(move _1189, move _1193)</td></tr></table>>];
    bb495__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_1193)<br/>StorageDead(_1189)<br/></td></tr><tr><td align="left">_1187 = format(move _1188)</td></tr></table>>];
    bb496__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_1188)<br/>StorageDead(_1205)<br/>StorageDead(_1202)<br/>StorageDead(_1199)<br/>StorageDead(_1196)<br/>StorageDead(_1195)<br/>StorageDead(_1191)<br/>_1186 = move _1187<br/>StorageDead(_1187)<br/>_1185 = &amp;_1186<br/>_1184 = &amp;(*_1185)<br/></td></tr><tr><td align="left">_1183 = &lt;String as Deref&gt;::deref(move _1184)</td></tr></table>>];
    bb497__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">_1182 = &amp;(*_1183)<br/>StorageDead(_1184)<br/></td></tr><tr><td align="left">_1181 = solana_program::log::sol_log(move _1182)</td></tr></table>>];
    bb498__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_1182)<br/></td></tr><tr><td align="left">drop(_1186)</td></tr></table>>];
    bb499__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">StorageDead(_1186)<br/>StorageDead(_1185)<br/>StorageDead(_1183)<br/>StorageDead(_1181)<br/>StorageLive(_1206)<br/>StorageLive(_1207)<br/>StorageLive(_1208)<br/>StorageLive(_1209)<br/>StorageLive(_1210)<br/>StorageLive(_1211)<br/>StorageLive(_1212)<br/>StorageLive(_1213)<br/>StorageLive(_1214)<br/>StorageLive(_1215)<br/>StorageLive(_1216)<br/>_1545 = const _<br/>_1216 = &amp;(*_1545)<br/>_1215 = &amp;(*_1216)<br/>_1214 = move _1215 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1215)<br/>StorageLive(_1218)<br/>StorageLive(_1219)<br/>StorageLive(_1220)<br/>StorageLive(_1221)<br/>StorageLive(_1222)<br/>StorageLive(_1223)<br/>StorageLive(_1224)<br/>_1224 = &amp;_1108<br/>_1223 = &amp;(*_1224)<br/></td></tr><tr><td align="left">_1222 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1223)</td></tr></table>>];
    bb500__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_1223)<br/>StorageLive(_1225)<br/>StorageLive(_1226)<br/>StorageLive(_1227)<br/>_1227 = &amp;_1128<br/>_1226 = &amp;(*_1227)<br/></td></tr><tr><td align="left">_1225 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1226)</td></tr></table>>];
    bb501__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageDead(_1226)<br/>StorageLive(_1228)<br/>StorageLive(_1229)<br/>StorageLive(_1230)<br/>_1230 = &amp;_1137<br/>_1229 = &amp;(*_1230)<br/></td></tr><tr><td align="left">_1228 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1229)</td></tr></table>>];
    bb502__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_1229)<br/>_1221 = [move _1222, move _1225, move _1228]<br/>StorageDead(_1228)<br/>StorageDead(_1225)<br/>StorageDead(_1222)<br/>_1220 = &amp;_1221<br/>_1219 = &amp;(*_1220)<br/>_1218 = move _1219 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1219)<br/></td></tr><tr><td align="left">_1213 = Arguments::&lt;'_&gt;::new_v1(move _1214, move _1218)</td></tr></table>>];
    bb503__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_1218)<br/>StorageDead(_1214)<br/></td></tr><tr><td align="left">_1212 = format(move _1213)</td></tr></table>>];
    bb504__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_1213)<br/>StorageDead(_1230)<br/>StorageDead(_1227)<br/>StorageDead(_1224)<br/>StorageDead(_1221)<br/>StorageDead(_1220)<br/>StorageDead(_1216)<br/>_1211 = move _1212<br/>StorageDead(_1212)<br/>_1210 = &amp;_1211<br/>_1209 = &amp;(*_1210)<br/></td></tr><tr><td align="left">_1208 = &lt;String as Deref&gt;::deref(move _1209)</td></tr></table>>];
    bb505__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">_1207 = &amp;(*_1208)<br/>StorageDead(_1209)<br/></td></tr><tr><td align="left">_1206 = solana_program::log::sol_log(move _1207)</td></tr></table>>];
    bb506__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_1207)<br/></td></tr><tr><td align="left">drop(_1211)</td></tr></table>>];
    bb507__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_1211)<br/>StorageDead(_1210)<br/>StorageDead(_1208)<br/>StorageDead(_1206)<br/>StorageLive(_1231)<br/>_1231 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1231)<br/>StorageDead(_1231)<br/>StorageDead(_1156)<br/>StorageDead(_1154)<br/>StorageDead(_1153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb508__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_1239)<br/>StorageDead(_1238)<br/>StorageDead(_1237)<br/>StorageDead(_1236)<br/>StorageDead(_1235)<br/></td></tr><tr><td align="left">_1233 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1234)</td></tr></table>>];
    bb509__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageDead(_1234)<br/>_1240 = discriminant(_1233)<br/></td></tr><tr><td align="left">switchInt(move _1240)</td></tr></table>>];
    bb510__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageLive(_1244)<br/>_1244 = ((_1233 as Continue).0: ())<br/>_1232 = _1244<br/>StorageDead(_1244)<br/>StorageDead(_1233)<br/>StorageDead(_1232)<br/>StorageLive(_1245)<br/>StorageLive(_1246)<br/>StorageLive(_1247)<br/>StorageLive(_1248)<br/>StorageLive(_1249)<br/>_1249 = &amp;(*_10)<br/>StorageLive(_1250)<br/>StorageLive(_1251)<br/>_1251 = &amp;_2<br/>_1250 = &amp;(*_1251)<br/></td></tr><tr><td align="left">_1248 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _1249, move _1250)</td></tr></table>>];
    bb511__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageLive(_1241)<br/>_1241 = ((_1233 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1243)<br/>_1243 = _1241<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1243)</td></tr></table>>];
    bb512__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_1243)<br/>StorageDead(_1241)<br/>StorageDead(_1233)<br/>StorageDead(_1232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb513__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">StorageDead(_1250)<br/>StorageDead(_1249)<br/></td></tr><tr><td align="left">_1247 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1248)</td></tr></table>>];
    bb514__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_1248)<br/>_1252 = discriminant(_1247)<br/></td></tr><tr><td align="left">switchInt(move _1252)</td></tr></table>>];
    bb515__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageLive(_1256)<br/>_1256 = move ((_1247 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1246 = move _1256<br/>StorageDead(_1256)<br/>_1609 = discriminant(_1247)<br/>StorageDead(_1251)<br/>StorageDead(_1247)<br/>StorageLive(_1257)<br/>StorageLive(_1258)<br/>StorageLive(_1259)<br/>StorageLive(_1260)<br/>_1260 = _1137<br/>StorageLive(_1261)<br/>StorageLive(_1262)<br/>_1550 = const _<br/>_1262 = &amp;(*_1550)<br/>_1261 = &amp;(*_1262)<br/>StorageLive(_1264)<br/>StorageLive(_1265)<br/>StorageLive(_1266)<br/>StorageLive(_1267)<br/>_1267 = &amp;mut _1246<br/>_1266 = &amp;mut (*_1267)<br/></td></tr><tr><td align="left">_1265 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1266)</td></tr></table>>];
    bb516__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageLive(_1253)<br/>_1253 = ((_1247 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1255)<br/>_1255 = _1253<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1255)</td></tr></table>>];
    bb517__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_1255)<br/>StorageDead(_1253)<br/>_1607 = discriminant(_1247)<br/>StorageDead(_1251)<br/>StorageDead(_1247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb518__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">_1264 = &amp;mut (*_1265)<br/>StorageDead(_1266)<br/>StorageLive(_1268)<br/>StorageLive(_1269)<br/>StorageLive(_1270)<br/>StorageLive(_1271)<br/>StorageLive(_1272)<br/>_1272 = &amp;mut (*_7)<br/>StorageLive(_1273)<br/>_1273 = _2<br/></td></tr><tr><td align="left">_1271 = User::get_spot_position_mut(move _1272, move _1273)</td></tr></table>>];
    bb519__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_1273)<br/>StorageDead(_1272)<br/></td></tr><tr><td align="left">_1270 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1271)</td></tr></table>>];
    bb520__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageDead(_1271)<br/>_1274 = discriminant(_1270)<br/></td></tr><tr><td align="left">switchInt(move _1274)</td></tr></table>>];
    bb521__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageLive(_1278)<br/>_1278 = move ((_1270 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1269 = &amp;mut (*_1278)<br/>StorageDead(_1278)<br/>_1268 = &amp;mut (*_1269)<br/>StorageLive(_1279)<br/>StorageLive(_1280)<br/>_1280 = _1137<br/>_1279 = Option::&lt;u128&gt;::Some(move _1280)<br/>StorageDead(_1280)<br/></td></tr><tr><td align="left">_1259 = update_spot_balances_and_cumulative_deposits(move _1260, move _1261, move _1264, move _1268, const false, move _1279)</td></tr></table>>];
    bb522__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageLive(_1275)<br/>_1275 = ((_1270 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1277)<br/>_1277 = _1275<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1277)</td></tr></table>>];
    bb523__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_1277)<br/>StorageDead(_1275)<br/>StorageDead(_1268)<br/>StorageDead(_1264)<br/>StorageDead(_1261)<br/>StorageDead(_1260)<br/>StorageDead(_1259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb524__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_1279)<br/>StorageDead(_1268)<br/>StorageDead(_1264)<br/>StorageDead(_1261)<br/>StorageDead(_1260)<br/></td></tr><tr><td align="left">_1258 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1259)</td></tr></table>>];
    bb525__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageDead(_1259)<br/>_1281 = discriminant(_1258)<br/></td></tr><tr><td align="left">switchInt(move _1281)</td></tr></table>>];
    bb526__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageLive(_1285)<br/>_1285 = ((_1258 as Continue).0: ())<br/>_1257 = _1285<br/>StorageDead(_1285)<br/>StorageDead(_1270)<br/>StorageDead(_1269)<br/>StorageDead(_1267)<br/>StorageDead(_1265)<br/>StorageDead(_1262)<br/>StorageDead(_1258)<br/>StorageDead(_1257)<br/>StorageLive(_1286)<br/>StorageLive(_1287)<br/>StorageLive(_1288)<br/>StorageLive(_1289)<br/>_1289 = _1137<br/>StorageLive(_1290)<br/>StorageLive(_1291)<br/>_1549 = const _<br/>_1291 = &amp;(*_1549)<br/>_1290 = &amp;(*_1291)<br/>StorageLive(_1293)<br/>StorageLive(_1294)<br/>StorageLive(_1295)<br/>StorageLive(_1296)<br/>_1296 = &amp;mut _1246<br/>_1295 = &amp;mut (*_1296)<br/></td></tr><tr><td align="left">_1294 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1295)</td></tr></table>>];
    bb527__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageLive(_1282)<br/>_1282 = ((_1258 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1284)<br/>_1284 = _1282<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1284)</td></tr></table>>];
    bb528__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">StorageDead(_1284)<br/>StorageDead(_1282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb529__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">_1293 = &amp;mut (*_1294)<br/>StorageDead(_1295)<br/>StorageLive(_1297)<br/>StorageLive(_1298)<br/>StorageLive(_1299)<br/>StorageLive(_1300)<br/>StorageLive(_1301)<br/>_1301 = &amp;mut (*_5)<br/>StorageLive(_1302)<br/>_1302 = _2<br/></td></tr><tr><td align="left">_1300 = User::get_spot_position_mut(move _1301, move _1302)</td></tr></table>>];
    bb530__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_1302)<br/>StorageDead(_1301)<br/></td></tr><tr><td align="left">_1299 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1300)</td></tr></table>>];
    bb531__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageDead(_1300)<br/>_1303 = discriminant(_1299)<br/></td></tr><tr><td align="left">switchInt(move _1303)</td></tr></table>>];
    bb532__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageLive(_1307)<br/>_1307 = move ((_1299 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1298 = &amp;mut (*_1307)<br/>StorageDead(_1307)<br/>_1297 = &amp;mut (*_1298)<br/>StorageLive(_1308)<br/>StorageLive(_1309)<br/>_1309 = _1137<br/>_1308 = Option::&lt;u128&gt;::Some(move _1309)<br/>StorageDead(_1309)<br/></td></tr><tr><td align="left">_1288 = update_spot_balances_and_cumulative_deposits(move _1289, move _1290, move _1293, move _1297, const false, move _1308)</td></tr></table>>];
    bb533__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageLive(_1304)<br/>_1304 = ((_1299 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1306)<br/>_1306 = _1304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1306)</td></tr></table>>];
    bb534__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">StorageDead(_1306)<br/>StorageDead(_1304)<br/>StorageDead(_1297)<br/>StorageDead(_1293)<br/>StorageDead(_1290)<br/>StorageDead(_1289)<br/>StorageDead(_1288)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb535__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_1308)<br/>StorageDead(_1297)<br/>StorageDead(_1293)<br/>StorageDead(_1290)<br/>StorageDead(_1289)<br/></td></tr><tr><td align="left">_1287 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1288)</td></tr></table>>];
    bb536__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">StorageDead(_1288)<br/>_1310 = discriminant(_1287)<br/></td></tr><tr><td align="left">switchInt(move _1310)</td></tr></table>>];
    bb537__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageLive(_1314)<br/>_1314 = ((_1287 as Continue).0: ())<br/>_1286 = _1314<br/>StorageDead(_1314)<br/>StorageDead(_1299)<br/>StorageDead(_1298)<br/>StorageDead(_1296)<br/>StorageDead(_1294)<br/>StorageDead(_1291)<br/>StorageDead(_1287)<br/>StorageDead(_1286)<br/>_1245 = const ()<br/></td></tr><tr><td align="left">drop(_1246)</td></tr></table>>];
    bb538__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageLive(_1311)<br/>_1311 = ((_1287 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1313)<br/>_1313 = _1311<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1313)</td></tr></table>>];
    bb539__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">StorageDead(_1313)<br/>StorageDead(_1311)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb540__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageDead(_1246)<br/>StorageDead(_1245)<br/>StorageLive(_1315)<br/>StorageLive(_1316)<br/>StorageLive(_1317)<br/>StorageLive(_1318)<br/>StorageLive(_1319)<br/>_1319 = &amp;(*_9)<br/>StorageLive(_1320)<br/>StorageLive(_1321)<br/>_1321 = &amp;_1<br/>_1320 = &amp;(*_1321)<br/></td></tr><tr><td align="left">_1318 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _1319, move _1320)</td></tr></table>>];
    bb541__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageDead(_1320)<br/>StorageDead(_1319)<br/></td></tr><tr><td align="left">_1317 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1318)</td></tr></table>>];
    bb542__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageDead(_1318)<br/>_1322 = discriminant(_1317)<br/></td></tr><tr><td align="left">switchInt(move _1322)</td></tr></table>>];
    bb543__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageLive(_1326)<br/>_1326 = move ((_1317 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1316 = move _1326<br/>StorageDead(_1326)<br/>_1613 = discriminant(_1317)<br/>StorageDead(_1321)<br/>StorageDead(_1317)<br/>StorageLive(_1327)<br/>StorageLive(_1328)<br/>StorageLive(_1329)<br/>StorageLive(_1330)<br/>_1330 = &amp;mut (*_7)<br/>StorageLive(_1331)<br/>_1331 = _1<br/></td></tr><tr><td align="left">_1329 = User::force_get_perp_position_mut(move _1330, move _1331)</td></tr></table>>];
    bb544__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageLive(_1323)<br/>_1323 = ((_1317 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1325)<br/>_1325 = _1323<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1325)</td></tr></table>>];
    bb545__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">StorageDead(_1325)<br/>StorageDead(_1323)<br/>_1611 = discriminant(_1317)<br/>StorageDead(_1321)<br/>StorageDead(_1317)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb546__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageDead(_1331)<br/>StorageDead(_1330)<br/></td></tr><tr><td align="left">_1328 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1329)</td></tr></table>>];
    bb547__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageDead(_1329)<br/>_1332 = discriminant(_1328)<br/></td></tr><tr><td align="left">switchInt(move _1332)</td></tr></table>>];
    bb548__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">StorageLive(_1336)<br/>_1336 = move ((_1328 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_1327 = move _1336<br/>StorageDead(_1336)<br/>StorageDead(_1328)<br/>StorageLive(_1337)<br/>StorageLive(_1338)<br/>StorageLive(_1339)<br/>StorageLive(_1340)<br/>_1340 = &amp;mut (*_1327)<br/>StorageLive(_1341)<br/>StorageLive(_1342)<br/>StorageLive(_1343)<br/>StorageLive(_1344)<br/>_1344 = &amp;mut _1316<br/>_1343 = &amp;mut (*_1344)<br/></td></tr><tr><td align="left">_1342 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1343)</td></tr></table>>];
    bb549__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">StorageLive(_1333)<br/>_1333 = ((_1328 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1335)<br/>_1335 = _1333<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1335)</td></tr></table>>];
    bb550__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">StorageDead(_1335)<br/>StorageDead(_1333)<br/>StorageDead(_1328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb551__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">_1341 = &amp;mut (*_1342)<br/>StorageDead(_1343)<br/>StorageLive(_1345)<br/>StorageLive(_1346)<br/>StorageLive(_1347)<br/>StorageLive(_1348)<br/>StorageLive(_1349)<br/>_1349 = _1128<br/></td></tr><tr><td align="left">_1348 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _1349)</td></tr></table>>];
    bb552__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">StorageDead(_1349)<br/></td></tr><tr><td align="left">_1347 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1348)</td></tr></table>>];
    bb553__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageDead(_1348)<br/>_1350 = discriminant(_1347)<br/></td></tr><tr><td align="left">switchInt(move _1350)</td></tr></table>>];
    bb554__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">StorageLive(_1354)<br/>_1354 = ((_1347 as Continue).0: i64)<br/>_1346 = _1354<br/>StorageDead(_1354)<br/>_1355 = Eq(_1346, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _1355, &quot;attempt to negate `{}`, which would overflow&quot;, _1346)</td></tr></table>>];
    bb555__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageLive(_1351)<br/>_1351 = ((_1347 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1353)<br/>_1353 = _1351<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1353)</td></tr></table>>];
    bb556__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">StorageDead(_1353)<br/>StorageDead(_1351)<br/>StorageDead(_1346)<br/>StorageDead(_1345)<br/>StorageDead(_1341)<br/>StorageDead(_1340)<br/>StorageDead(_1339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb557__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">_1345 = Neg(move _1346)<br/>StorageDead(_1346)<br/></td></tr><tr><td align="left">_1339 = update_quote_asset_amount(move _1340, move _1341, move _1345)</td></tr></table>>];
    bb558__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageDead(_1345)<br/>StorageDead(_1341)<br/>StorageDead(_1340)<br/></td></tr><tr><td align="left">_1338 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1339)</td></tr></table>>];
    bb559__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageDead(_1339)<br/>_1356 = discriminant(_1338)<br/></td></tr><tr><td align="left">switchInt(move _1356)</td></tr></table>>];
    bb560__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">StorageLive(_1360)<br/>_1360 = ((_1338 as Continue).0: ())<br/>_1337 = _1360<br/>StorageDead(_1360)<br/>StorageDead(_1347)<br/>StorageDead(_1344)<br/>StorageDead(_1342)<br/>StorageDead(_1338)<br/>StorageDead(_1337)<br/>StorageLive(_1361)<br/>StorageLive(_1362)<br/>StorageLive(_1363)<br/>StorageLive(_1364)<br/>_1364 = &amp;mut (*_5)<br/>StorageLive(_1365)<br/>_1365 = _1<br/></td></tr><tr><td align="left">_1363 = User::get_perp_position_mut(move _1364, move _1365)</td></tr></table>>];
    bb561__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left" balign="left">StorageLive(_1357)<br/>_1357 = ((_1338 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1359)<br/>_1359 = _1357<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1359)</td></tr></table>>];
    bb562__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left" balign="left">StorageDead(_1359)<br/>StorageDead(_1357)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb563__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left" balign="left">StorageDead(_1365)<br/>StorageDead(_1364)<br/></td></tr><tr><td align="left">_1362 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1363)</td></tr></table>>];
    bb564__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left" balign="left">StorageDead(_1363)<br/>_1366 = discriminant(_1362)<br/></td></tr><tr><td align="left">switchInt(move _1366)</td></tr></table>>];
    bb565__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left" balign="left">StorageLive(_1370)<br/>_1370 = move ((_1362 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_1361 = move _1370<br/>StorageDead(_1370)<br/>StorageDead(_1362)<br/>StorageLive(_1371)<br/>StorageLive(_1372)<br/>StorageLive(_1373)<br/>StorageLive(_1374)<br/>_1374 = &amp;mut (*_1361)<br/>StorageLive(_1375)<br/>StorageLive(_1376)<br/>StorageLive(_1377)<br/>StorageLive(_1378)<br/>_1378 = &amp;mut _1316<br/>_1377 = &amp;mut (*_1378)<br/></td></tr><tr><td align="left">_1376 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1377)</td></tr></table>>];
    bb566__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left" balign="left">StorageLive(_1367)<br/>_1367 = ((_1362 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1369)<br/>_1369 = _1367<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1369)</td></tr></table>>];
    bb567__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">567</td></tr><tr><td align="left" balign="left">StorageDead(_1369)<br/>StorageDead(_1367)<br/>StorageDead(_1362)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb568__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">568</td></tr><tr><td align="left" balign="left">_1375 = &amp;mut (*_1376)<br/>StorageDead(_1377)<br/>StorageLive(_1379)<br/>StorageLive(_1380)<br/>StorageLive(_1381)<br/>StorageLive(_1382)<br/>_1382 = _1128<br/></td></tr><tr><td align="left">_1381 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _1382)</td></tr></table>>];
    bb569__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">569</td></tr><tr><td align="left" balign="left">StorageDead(_1382)<br/></td></tr><tr><td align="left">_1380 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1381)</td></tr></table>>];
    bb570__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">570</td></tr><tr><td align="left" balign="left">StorageDead(_1381)<br/>_1383 = discriminant(_1380)<br/></td></tr><tr><td align="left">switchInt(move _1383)</td></tr></table>>];
    bb571__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">571</td></tr><tr><td align="left" balign="left">StorageLive(_1387)<br/>_1387 = ((_1380 as Continue).0: i64)<br/>_1379 = _1387<br/>StorageDead(_1387)<br/></td></tr><tr><td align="left">_1373 = update_quote_asset_amount(move _1374, move _1375, move _1379)</td></tr></table>>];
    bb572__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">572</td></tr><tr><td align="left" balign="left">StorageLive(_1384)<br/>_1384 = ((_1380 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1386)<br/>_1386 = _1384<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1386)</td></tr></table>>];
    bb573__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">573</td></tr><tr><td align="left" balign="left">StorageDead(_1386)<br/>StorageDead(_1384)<br/>StorageDead(_1379)<br/>StorageDead(_1375)<br/>StorageDead(_1374)<br/>StorageDead(_1373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb574__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">574</td></tr><tr><td align="left" balign="left">StorageDead(_1379)<br/>StorageDead(_1375)<br/>StorageDead(_1374)<br/></td></tr><tr><td align="left">_1372 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1373)</td></tr></table>>];
    bb575__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">575</td></tr><tr><td align="left" balign="left">StorageDead(_1373)<br/>_1388 = discriminant(_1372)<br/></td></tr><tr><td align="left">switchInt(move _1388)</td></tr></table>>];
    bb576__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">576</td></tr><tr><td align="left" balign="left">StorageLive(_1392)<br/>_1392 = ((_1372 as Continue).0: ())<br/>_1371 = _1392<br/>StorageDead(_1392)<br/>StorageDead(_1380)<br/>StorageDead(_1378)<br/>StorageDead(_1376)<br/>StorageDead(_1372)<br/>StorageDead(_1371)<br/>_1315 = const ()<br/>StorageDead(_1361)<br/>StorageDead(_1327)<br/></td></tr><tr><td align="left">drop(_1316)</td></tr></table>>];
    bb577__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">577</td></tr><tr><td align="left" balign="left">StorageLive(_1389)<br/>_1389 = ((_1372 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1391)<br/>_1391 = _1389<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1391)</td></tr></table>>];
    bb578__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">578</td></tr><tr><td align="left" balign="left">StorageDead(_1391)<br/>StorageDead(_1389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb579__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">579</td></tr><tr><td align="left" balign="left">StorageDead(_1316)<br/>StorageDead(_1315)<br/>StorageLive(_1394)<br/>StorageLive(_1395)<br/>StorageLive(_1396)<br/>StorageLive(_1397)<br/>_1397 = &amp;(*_5)<br/>StorageLive(_1398)<br/>_1398 = &amp;(*_9)<br/>StorageLive(_1399)<br/>_1399 = &amp;(*_10)<br/>StorageLive(_1400)<br/>_1400 = &amp;mut (*_11)<br/>StorageLive(_1401)<br/>_1401 = _14<br/>StorageLive(_1402)<br/>_1402 = _1042<br/></td></tr><tr><td align="left">_1396 = calculate_margin_freed(move _1397, move _1398, move _1399, move _1400, move _1401, move _1402)</td></tr></table>>];
    bb580__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">580</td></tr><tr><td align="left" balign="left">StorageDead(_1402)<br/>StorageDead(_1401)<br/>StorageDead(_1400)<br/>StorageDead(_1399)<br/>StorageDead(_1398)<br/>StorageDead(_1397)<br/></td></tr><tr><td align="left">_1395 = &lt;std::result::Result&lt;(u64, MarginCalculation), error::ErrorCode&gt; as Try&gt;::branch(move _1396)</td></tr></table>>];
    bb581__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">581</td></tr><tr><td align="left" balign="left">StorageDead(_1396)<br/>_1403 = discriminant(_1395)<br/></td></tr><tr><td align="left">switchInt(move _1403)</td></tr></table>>];
    bb582__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">582</td></tr><tr><td align="left" balign="left">StorageLive(_1407)<br/>_1407 = ((_1395 as Continue).0: (u64, state::margin_calculation::MarginCalculation))<br/>_1394 = _1407<br/>StorageDead(_1407)<br/>StorageLive(_1393)<br/>_1393 = (_1394.0: u64)<br/>StorageDead(_1395)<br/>StorageDead(_1394)<br/>StorageLive(_1408)<br/>StorageLive(_1409)<br/>StorageLive(_1410)<br/>StorageLive(_1411)<br/>_1411 = _813<br/>StorageLive(_1412)<br/>_1412 = _1393<br/></td></tr><tr><td align="left">_1410 = &lt;u64 as SafeMath&gt;::safe_add(move _1411, move _1412)</td></tr></table>>];
    bb583__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">583</td></tr><tr><td align="left" balign="left">StorageLive(_1404)<br/>_1404 = ((_1395 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1406)<br/>_1406 = _1404<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1406)</td></tr></table>>];
    bb584__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">584</td></tr><tr><td align="left" balign="left">StorageDead(_1406)<br/>StorageDead(_1404)<br/>StorageDead(_1395)<br/>StorageDead(_1394)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb585__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">585</td></tr><tr><td align="left" balign="left">StorageDead(_1412)<br/>StorageDead(_1411)<br/></td></tr><tr><td align="left">_1409 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1410)</td></tr></table>>];
    bb586__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">586</td></tr><tr><td align="left" balign="left">StorageDead(_1410)<br/>_1413 = discriminant(_1409)<br/></td></tr><tr><td align="left">switchInt(move _1413)</td></tr></table>>];
    bb587__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">587</td></tr><tr><td align="left" balign="left">StorageLive(_1417)<br/>_1417 = ((_1409 as Continue).0: u64)<br/>_1408 = _1417<br/>StorageDead(_1417)<br/>_813 = move _1408<br/>StorageDead(_1408)<br/>StorageDead(_1409)<br/>StorageLive(_1418)<br/>StorageLive(_1419)<br/>StorageLive(_1420)<br/>StorageLive(_1421)<br/>_1421 = &amp;mut (*_5)<br/>StorageLive(_1422)<br/>_1422 = _1393<br/></td></tr><tr><td align="left">_1420 = User::increment_margin_freed(move _1421, move _1422)</td></tr></table>>];
    bb588__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">588</td></tr><tr><td align="left" balign="left">StorageLive(_1414)<br/>_1414 = ((_1409 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1416)<br/>_1416 = _1414<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1416)</td></tr></table>>];
    bb589__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left" balign="left">StorageDead(_1416)<br/>StorageDead(_1414)<br/>StorageDead(_1408)<br/>StorageDead(_1409)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb590__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">StorageDead(_1422)<br/>StorageDead(_1421)<br/></td></tr><tr><td align="left">_1419 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1420)</td></tr></table>>];
    bb591__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">StorageDead(_1420)<br/>_1423 = discriminant(_1419)<br/></td></tr><tr><td align="left">switchInt(move _1423)</td></tr></table>>];
    bb592__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">StorageLive(_1427)<br/>_1427 = ((_1419 as Continue).0: ())<br/>_1418 = _1427<br/>StorageDead(_1427)<br/>StorageDead(_1419)<br/>StorageDead(_1418)<br/>StorageLive(_1428)<br/>StorageLive(_1429)<br/>StorageLive(_1430)<br/>_1430 = _1128<br/>StorageLive(_1431)<br/>_1431 = _1061<br/>_1429 = Ge(move _1430, move _1431)<br/></td></tr><tr><td align="left">switchInt(move _1429)</td></tr></table>>];
    bb593__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left" balign="left">StorageLive(_1424)<br/>_1424 = ((_1419 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1426)<br/>_1426 = _1424<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1426)</td></tr></table>>];
    bb594__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left" balign="left">StorageDead(_1426)<br/>StorageDead(_1424)<br/>StorageDead(_1419)<br/>StorageDead(_1418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb595__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left" balign="left">StorageDead(_1431)<br/>StorageDead(_1430)<br/>StorageLive(_1432)<br/>StorageLive(_1433)<br/>_1433 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1432 = User::exit_liquidation(move _1433)</td></tr></table>>];
    bb596__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">596</td></tr><tr><td align="left" balign="left">StorageDead(_1431)<br/>StorageDead(_1430)<br/>StorageLive(_1434)<br/>StorageLive(_1435)<br/>_1435 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1434 = is_user_bankrupt(move _1435)</td></tr></table>>];
    bb597__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">597</td></tr><tr><td align="left" balign="left">StorageDead(_1433)<br/>StorageDead(_1432)<br/>_1428 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb598__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">598</td></tr><tr><td align="left">switchInt(move _1434)</td></tr></table>>];
    bb599__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">599</td></tr><tr><td align="left" balign="left">StorageDead(_1435)<br/>StorageLive(_1436)<br/>StorageLive(_1437)<br/>_1437 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1436 = User::enter_bankruptcy(move _1437)</td></tr></table>>];
    bb600__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">600</td></tr><tr><td align="left" balign="left">StorageDead(_1437)<br/>StorageDead(_1436)<br/>_1428 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb601__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">601</td></tr><tr><td align="left" balign="left">StorageDead(_1435)<br/>_1428 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb602__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">602</td></tr><tr><td align="left" balign="left">StorageDead(_1434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb603__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">603</td></tr><tr><td align="left" balign="left">StorageDead(_1429)<br/>StorageDead(_1428)<br/>StorageLive(_1438)<br/>StorageLive(_1439)<br/>StorageLive(_1440)<br/>StorageLive(_1441)<br/>_1441 = &amp;(*_7)<br/>StorageLive(_1442)<br/>_1442 = &amp;(*_9)<br/>StorageLive(_1443)<br/>_1443 = &amp;(*_10)<br/>StorageLive(_1444)<br/>_1444 = &amp;mut (*_11)<br/></td></tr><tr><td align="left">_1440 = math::margin::meets_initial_margin_requirement(move _1441, move _1442, move _1443, move _1444)</td></tr></table>>];
    bb604__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">604</td></tr><tr><td align="left" balign="left">StorageDead(_1444)<br/>StorageDead(_1443)<br/>StorageDead(_1442)<br/>StorageDead(_1441)<br/></td></tr><tr><td align="left">_1439 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1440)</td></tr></table>>];
    bb605__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">605</td></tr><tr><td align="left" balign="left">StorageDead(_1440)<br/>_1445 = discriminant(_1439)<br/></td></tr><tr><td align="left">switchInt(move _1445)</td></tr></table>>];
    bb606__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">606</td></tr><tr><td align="left" balign="left">StorageLive(_1449)<br/>_1449 = ((_1439 as Continue).0: bool)<br/>_1438 = _1449<br/>StorageDead(_1449)<br/>StorageDead(_1439)<br/>StorageLive(_1450)<br/>StorageLive(_1451)<br/>StorageLive(_1452)<br/>StorageLive(_1453)<br/>_1453 = _1438<br/></td></tr><tr><td align="left">switchInt(move _1453)</td></tr></table>>];
    bb607__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">607</td></tr><tr><td align="left" balign="left">StorageLive(_1446)<br/>_1446 = ((_1439 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1448)<br/>_1448 = _1446<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1448)</td></tr></table>>];
    bb608__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">608</td></tr><tr><td align="left" balign="left">StorageDead(_1448)<br/>StorageDead(_1446)<br/>StorageDead(_1439)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb609__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">609</td></tr><tr><td align="left" balign="left">StorageLive(_1454)<br/>_1454 = ()<br/>_1452 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1454)<br/>StorageDead(_1454)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb610__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">610</td></tr><tr><td align="left" balign="left">StorageLive(_1455)<br/>_1455 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_1456)<br/>StorageLive(_1457)<br/>StorageLive(_1458)<br/>StorageLive(_1459)<br/>StorageLive(_1460)<br/>StorageLive(_1461)<br/>StorageLive(_1462)<br/>StorageLive(_1463)<br/>StorageLive(_1464)<br/>StorageLive(_1465)<br/>StorageLive(_1466)<br/>_1548 = const _<br/>_1466 = &amp;(*_1548)<br/>_1465 = &amp;(*_1466)<br/>_1464 = move _1465 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1465)<br/>StorageLive(_1468)<br/>StorageLive(_1469)<br/>StorageLive(_1470)<br/>StorageLive(_1471)<br/>StorageLive(_1472)<br/>StorageLive(_1473)<br/>StorageLive(_1474)<br/>_1474 = &amp;_1455<br/>_1473 = &amp;(*_1474)<br/></td></tr><tr><td align="left">_1472 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1473)</td></tr></table>>];
    bb611__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">611</td></tr><tr><td align="left" balign="left">StorageDead(_1473)<br/>_1471 = [move _1472]<br/>StorageDead(_1472)<br/>_1470 = &amp;_1471<br/>_1469 = &amp;(*_1470)<br/>_1468 = move _1469 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1469)<br/></td></tr><tr><td align="left">_1463 = Arguments::&lt;'_&gt;::new_v1(move _1464, move _1468)</td></tr></table>>];
    bb612__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">612</td></tr><tr><td align="left" balign="left">StorageDead(_1468)<br/>StorageDead(_1464)<br/></td></tr><tr><td align="left">_1462 = format(move _1463)</td></tr></table>>];
    bb613__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">613</td></tr><tr><td align="left" balign="left">StorageDead(_1463)<br/>StorageDead(_1474)<br/>StorageDead(_1471)<br/>StorageDead(_1470)<br/>StorageDead(_1466)<br/>_1461 = move _1462<br/>StorageDead(_1462)<br/>_1460 = &amp;_1461<br/>_1459 = &amp;(*_1460)<br/></td></tr><tr><td align="left">_1458 = &lt;String as Deref&gt;::deref(move _1459)</td></tr></table>>];
    bb614__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">614</td></tr><tr><td align="left" balign="left">_1457 = &amp;(*_1458)<br/>StorageDead(_1459)<br/></td></tr><tr><td align="left">_1456 = solana_program::log::sol_log(move _1457)</td></tr></table>>];
    bb615__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">615</td></tr><tr><td align="left" balign="left">StorageDead(_1457)<br/></td></tr><tr><td align="left">drop(_1461)</td></tr></table>>];
    bb616__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">616</td></tr><tr><td align="left" balign="left">StorageDead(_1461)<br/>StorageDead(_1460)<br/>StorageDead(_1458)<br/>StorageDead(_1456)<br/>StorageLive(_1475)<br/>StorageLive(_1476)<br/>StorageLive(_1477)<br/>_1477 = const &quot;Liquidator doesnt have enough collateral to take over borrow&quot;<br/>_1476 = &amp;(*_1477)<br/></td></tr><tr><td align="left">_1475 = solana_program::log::sol_log(move _1476)</td></tr></table>>];
    bb617__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">617</td></tr><tr><td align="left" balign="left">StorageDead(_1476)<br/>StorageDead(_1477)<br/>StorageDead(_1475)<br/>StorageLive(_1478)<br/>_1478 = _1455<br/>_1452 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1478)<br/>StorageDead(_1478)<br/>StorageDead(_1455)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb618__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">618</td></tr><tr><td align="left" balign="left">StorageDead(_1453)<br/></td></tr><tr><td align="left">_1451 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1452)</td></tr></table>>];
    bb619__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">619</td></tr><tr><td align="left" balign="left">StorageDead(_1452)<br/>_1479 = discriminant(_1451)<br/></td></tr><tr><td align="left">switchInt(move _1479)</td></tr></table>>];
    bb620__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">620</td></tr><tr><td align="left" balign="left">StorageLive(_1483)<br/>_1483 = ((_1451 as Continue).0: ())<br/>_1450 = _1483<br/>StorageDead(_1483)<br/>StorageDead(_1451)<br/>StorageDead(_1450)<br/>StorageLive(_1484)<br/>StorageLive(_1485)<br/>StorageLive(_1486)<br/>StorageLive(_1487)<br/>StorageLive(_1488)<br/>_1488 = &amp;(*_9)<br/>StorageLive(_1489)<br/>StorageLive(_1490)<br/>_1490 = &amp;_1<br/>_1489 = &amp;(*_1490)<br/></td></tr><tr><td align="left">_1487 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _1488, move _1489)</td></tr></table>>];
    bb621__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">621</td></tr><tr><td align="left" balign="left">StorageLive(_1480)<br/>_1480 = ((_1451 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1482)<br/>_1482 = _1480<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1482)</td></tr></table>>];
    bb622__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">622</td></tr><tr><td align="left" balign="left">StorageDead(_1482)<br/>StorageDead(_1480)<br/>StorageDead(_1451)<br/>StorageDead(_1450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb623__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">623</td></tr><tr><td align="left" balign="left">StorageDead(_1489)<br/>StorageDead(_1488)<br/></td></tr><tr><td align="left">_1486 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1487)</td></tr></table>>];
    bb624__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">624</td></tr><tr><td align="left" balign="left">StorageDead(_1487)<br/>_1491 = discriminant(_1486)<br/></td></tr><tr><td align="left">switchInt(move _1491)</td></tr></table>>];
    bb625__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">625</td></tr><tr><td align="left" balign="left">StorageLive(_1495)<br/>_1495 = move ((_1486 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1485 = move _1495<br/>StorageDead(_1495)<br/>_1617 = discriminant(_1486)<br/>StorageDead(_1490)<br/>StorageDead(_1486)<br/>StorageLive(_1496)<br/>StorageLive(_1497)<br/>StorageLive(_1498)<br/>StorageLive(_1499)<br/>_1499 = &amp;mut (*_11)<br/>StorageLive(_1500)<br/>StorageLive(_1501)<br/>StorageLive(_1502)<br/>StorageLive(_1503)<br/>StorageLive(_1504)<br/>StorageLive(_1505)<br/>_1505 = &amp;_1485<br/></td></tr><tr><td align="left">_1504 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1505)</td></tr></table>>];
    bb626__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">626</td></tr><tr><td align="left" balign="left">StorageLive(_1492)<br/>_1492 = ((_1486 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1494)<br/>_1494 = _1492<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1494)</td></tr></table>>];
    bb627__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">627</td></tr><tr><td align="left" balign="left">StorageDead(_1494)<br/>StorageDead(_1492)<br/>_1615 = discriminant(_1486)<br/>StorageDead(_1490)<br/>StorageDead(_1486)<br/>StorageDead(_1485)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb628__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">628</td></tr><tr><td align="left" balign="left">_1503 = &amp;(*_1504)<br/>StorageDead(_1505)<br/></td></tr><tr><td align="left">_1502 = PerpMarket::oracle_id(move _1503)</td></tr></table>>];
    bb629__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">629</td></tr><tr><td align="left" balign="left">StorageDead(_1503)<br/>_1501 = &amp;_1502<br/>_1500 = &amp;(*_1501)<br/></td></tr><tr><td align="left">_1498 = OracleMap::&lt;'_&gt;::get_price_data(move _1499, move _1500)</td></tr></table>>];
    bb630__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">630</td></tr><tr><td align="left" balign="left">StorageDead(_1500)<br/>StorageDead(_1499)<br/></td></tr><tr><td align="left">_1497 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _1498)</td></tr></table>>];
    bb631__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">631</td></tr><tr><td align="left" balign="left">StorageDead(_1498)<br/>_1506 = discriminant(_1497)<br/></td></tr><tr><td align="left">switchInt(move _1506)</td></tr></table>>];
    bb632__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">632</td></tr><tr><td align="left" balign="left">StorageLive(_1510)<br/>_1510 = ((_1497 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_1496 = _1510<br/>StorageDead(_1510)<br/>_1484 = ((*_1496).0: i64)<br/></td></tr><tr><td align="left">drop(_1485)</td></tr></table>>];
    bb633__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">633</td></tr><tr><td align="left" balign="left">StorageLive(_1507)<br/>_1507 = ((_1497 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1509)<br/>_1509 = _1507<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1509)</td></tr></table>>];
    bb634__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">634</td></tr><tr><td align="left" balign="left">StorageDead(_1509)<br/>StorageDead(_1507)<br/></td></tr><tr><td align="left">drop(_1485)</td></tr></table>>];
    bb635__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">635</td></tr><tr><td align="left" balign="left">StorageDead(_1485)<br/>StorageDead(_1504)<br/>StorageDead(_1502)<br/>StorageDead(_1501)<br/>StorageDead(_1497)<br/>StorageDead(_1496)<br/>StorageLive(_1511)<br/>StorageLive(_1512)<br/>StorageLive(_1513)<br/>StorageLive(_1514)<br/>StorageLive(_1515)<br/>StorageLive(_1516)<br/>StorageLive(_1517)<br/>StorageLive(_1518)<br/>StorageLive(_1519)<br/>StorageLive(_1520)<br/>StorageLive(_1521)<br/>StorageLive(_1522)<br/>StorageLive(_1523)<br/>StorageLive(_1524)<br/>StorageLive(_1525)<br/>_1525 = _12<br/>StorageLive(_1526)<br/>_1526 = _803<br/>StorageLive(_1527)<br/>_1527 = LiquidationType::LiquidatePerpPnlForDeposit<br/>StorageLive(_1528)<br/>_1528 = (*_6)<br/>StorageLive(_1529)<br/>_1529 = (*_8)<br/>StorageLive(_1530)<br/>_1530 = (_748.3: u128)<br/>StorageLive(_1531)<br/>_1531 = (_748.1: i128)<br/>StorageLive(_1532)<br/>StorageLive(_1533)<br/>_1533 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1532 = User::is_bankrupt(move _1533)</td></tr></table>>];
    bb636__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">636</td></tr><tr><td align="left" balign="left">StorageDead(_1533)<br/>StorageLive(_1534)<br/>_1534 = _813<br/>StorageLive(_1535)<br/>StorageLive(_1536)<br/>_1536 = _1<br/>StorageLive(_1537)<br/>_1537 = _1484<br/>StorageLive(_1538)<br/>_1538 = _1128<br/>StorageLive(_1539)<br/>_1539 = _2<br/>StorageLive(_1540)<br/>_1540 = _391<br/>StorageLive(_1541)<br/>_1541 = _1137<br/>_1535 = LiquidatePerpPnlForDepositRecord { perp_market_index: move _1536, market_oracle_price: move _1537, pnl_transfer: move _1538, asset_market_index: move _1539, asset_price: move _1540, asset_transfer: move _1541 }<br/>StorageDead(_1541)<br/>StorageDead(_1540)<br/>StorageDead(_1539)<br/>StorageDead(_1538)<br/>StorageDead(_1537)<br/>StorageDead(_1536)<br/>StorageLive(_1542)<br/></td></tr><tr><td align="left">_1542 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb637__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">637</td></tr><tr><td align="left" balign="left">_1524 = LiquidationRecord { ts: move _1525, liquidation_type: move _1527, user: move _1528, liquidator: move _1529, margin_requirement: move _1530, total_collateral: move _1531, margin_freed: move _1534, liquidation_id: move _1526, bankrupt: move _1532, canceled_order_ids: move (_1542.9: std::vec::Vec&lt;u32&gt;), liquidate_perp: move (_1542.10: state::events::LiquidatePerpRecord), liquidate_spot: move (_1542.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move (_1542.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move _1535, perp_bankruptcy: move (_1542.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_1542.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_1535)<br/>StorageDead(_1534)<br/>StorageDead(_1532)<br/>StorageDead(_1531)<br/>StorageDead(_1530)<br/>StorageDead(_1529)<br/>StorageDead(_1528)<br/>StorageDead(_1527)<br/>StorageDead(_1526)<br/>StorageDead(_1525)<br/>_1523 = &amp;_1524<br/>_1522 = &amp;(*_1523)<br/></td></tr><tr><td align="left">_1521 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _1522)</td></tr></table>>];
    bb638__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">638</td></tr><tr><td align="left" balign="left">StorageDead(_1522)<br/>_1520 = &amp;_1521<br/>_1519 = &amp;(*_1520)<br/></td></tr><tr><td align="left">_1518 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _1519)</td></tr></table>>];
    bb639__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">639</td></tr><tr><td align="left" balign="left">_1517 = &amp;(*_1518)<br/>StorageDead(_1519)<br/>_1516 = [move _1517]<br/>StorageDead(_1517)<br/>_1515 = &amp;_1516<br/>_1514 = &amp;(*_1515)<br/>_1513 = move _1514 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_1514)<br/></td></tr><tr><td align="left">_1512 = solana_program::log::sol_log_data(move _1513)</td></tr></table>>];
    bb640__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">640</td></tr><tr><td align="left" balign="left">StorageDead(_1513)<br/></td></tr><tr><td align="left">drop(_1521)</td></tr></table>>];
    bb641__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">641</td></tr><tr><td align="left">drop(_1524)</td></tr></table>>];
    bb642__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">642</td></tr><tr><td align="left" balign="left">StorageDead(_1542)<br/>StorageDead(_1524)<br/>StorageDead(_1523)<br/>StorageDead(_1521)<br/>StorageDead(_1520)<br/>StorageDead(_1518)<br/>StorageDead(_1516)<br/>StorageDead(_1515)<br/>StorageDead(_1512)<br/>_1511 = const ()<br/>StorageDead(_1511)<br/>StorageLive(_1543)<br/>_1543 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1543)<br/>StorageDead(_1543)<br/>StorageDead(_1484)<br/>StorageDead(_1438)<br/>StorageDead(_1393)<br/>StorageDead(_1137)<br/>StorageDead(_1128)<br/>StorageDead(_1123)<br/>StorageDead(_1108)<br/>StorageDead(_1089)<br/>StorageDead(_1076)<br/>StorageDead(_1061)<br/>StorageDead(_1051)<br/>StorageDead(_1042)<br/>StorageDead(_855)<br/>StorageDead(_848)<br/>StorageDead(_836)<br/>StorageDead(_835)<br/></td></tr><tr><td align="left">drop(_814)</td></tr></table>>];
    bb643__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">643</td></tr><tr><td align="left" balign="left">_1570 = const false<br/>StorageDead(_814)<br/>StorageDead(_813)<br/>StorageDead(_803)<br/>StorageDead(_748)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/>StorageDead(_578)<br/>StorageDead(_577)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>_1573 = const false<br/>StorageDead(_223)<br/>_1574 = const false<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb644__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">644</td></tr><tr><td align="left" balign="left">StorageDead(_1485)<br/>StorageDead(_1504)<br/>StorageDead(_1502)<br/>StorageDead(_1501)<br/>StorageDead(_1497)<br/>StorageDead(_1496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb645__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">645</td></tr><tr><td align="left" balign="left">StorageDead(_1484)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb646__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">646</td></tr><tr><td align="left" balign="left">StorageDead(_1438)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb647__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">647</td></tr><tr><td align="left" balign="left">StorageDead(_1393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb648__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">648</td></tr><tr><td align="left" balign="left">StorageDead(_1380)<br/>StorageDead(_1378)<br/>StorageDead(_1376)<br/>StorageDead(_1372)<br/>StorageDead(_1371)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb649__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">649</td></tr><tr><td align="left" balign="left">StorageDead(_1361)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb650__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">650</td></tr><tr><td align="left" balign="left">StorageDead(_1347)<br/>StorageDead(_1344)<br/>StorageDead(_1342)<br/>StorageDead(_1338)<br/>StorageDead(_1337)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb651__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">651</td></tr><tr><td align="left" balign="left">StorageDead(_1327)<br/></td></tr><tr><td align="left">drop(_1316)</td></tr></table>>];
    bb652__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">652</td></tr><tr><td align="left" balign="left">StorageDead(_1316)<br/>StorageDead(_1315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb653__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">653</td></tr><tr><td align="left" balign="left">StorageDead(_1299)<br/>StorageDead(_1298)<br/>StorageDead(_1296)<br/>StorageDead(_1294)<br/>StorageDead(_1291)<br/>StorageDead(_1287)<br/>StorageDead(_1286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb654__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">654</td></tr><tr><td align="left" balign="left">StorageDead(_1270)<br/>StorageDead(_1269)<br/>StorageDead(_1267)<br/>StorageDead(_1265)<br/>StorageDead(_1262)<br/>StorageDead(_1258)<br/>StorageDead(_1257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb655__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">655</td></tr><tr><td align="left">drop(_1246)</td></tr></table>>];
    bb656__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">656</td></tr><tr><td align="left" balign="left">StorageDead(_1246)<br/>StorageDead(_1245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb657__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">657</td></tr><tr><td align="left" balign="left">StorageDead(_1137)<br/>StorageDead(_1128)<br/>StorageDead(_1123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb658__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">658</td></tr><tr><td align="left" balign="left">StorageDead(_1108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb659__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">659</td></tr><tr><td align="left" balign="left">StorageDead(_1089)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb660__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">660</td></tr><tr><td align="left" balign="left">StorageDead(_1076)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb661__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">661</td></tr><tr><td align="left" balign="left">StorageDead(_1061)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb662__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">662</td></tr><tr><td align="left" balign="left">StorageDead(_1051)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb663__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">663</td></tr><tr><td align="left" balign="left">StorageDead(_1042)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb664__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">664</td></tr><tr><td align="left" balign="left">StorageDead(_935)<br/></td></tr><tr><td align="left">drop(_924)</td></tr></table>>];
    bb665__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">665</td></tr><tr><td align="left" balign="left">StorageDead(_924)<br/>StorageDead(_922)<br/>StorageDead(_921)<br/>StorageDead(_920)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb666__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">666</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb667__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">667</td></tr><tr><td align="left" balign="left">StorageDead(_881)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb668__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">668</td></tr><tr><td align="left" balign="left">StorageDead(_872)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb669__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">669</td></tr><tr><td align="left" balign="left">StorageDead(_858)<br/>StorageDead(_856)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb670__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">670</td></tr><tr><td align="left" balign="left">StorageDead(_855)<br/>StorageDead(_848)<br/>StorageDead(_836)<br/>StorageDead(_835)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb671__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">671</td></tr><tr><td align="left" balign="left">_1570 = const false<br/>StorageDead(_814)<br/>StorageDead(_813)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb672__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">672</td></tr><tr><td align="left" balign="left">StorageDead(_803)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb673__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">673</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/>StorageDead(_788)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb674__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">674</td></tr><tr><td align="left" balign="left">StorageDead(_765)<br/>StorageDead(_763)<br/>StorageDead(_762)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb675__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">675</td></tr><tr><td align="left" balign="left">StorageDead(_748)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/>StorageDead(_578)<br/>StorageDead(_577)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb676__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">676</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/></td></tr><tr><td align="left">drop(_690)</td></tr></table>>];
    bb677__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">677</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>StorageDead(_646)<br/>StorageDead(_594)<br/>StorageDead(_584)<br/>StorageDead(_740)<br/>StorageDead(_737)<br/>StorageDead(_734)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb678__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">678</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/></td></tr><tr><td align="left">drop(_690)</td></tr></table>>];
    bb679__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">679</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb680__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">680</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb681__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">681</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb682__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">682</td></tr><tr><td align="left" balign="left">StorageDead(_584)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb683__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">683</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb684__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">684</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb685__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">685</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_569)<br/>StorageDead(_566)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_557)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb686__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">686</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb687__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">687</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb688__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">688</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb689__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">689</td></tr><tr><td align="left">drop(_397)</td></tr></table>>];
    bb690__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">690</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb691__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">691</td></tr><tr><td align="left" balign="left">StorageDead(_396)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb692__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">692</td></tr><tr><td align="left" balign="left">_1573 = const false<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb693__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">693</td></tr><tr><td align="left" balign="left">_1574 = const false<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb694__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">694</td></tr><tr><td align="left">return</td></tr></table>>];
    bb695__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">695 (cleanup)</td></tr><tr><td align="left">drop(_1521)</td></tr></table>>];
    bb696__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">696 (cleanup)</td></tr><tr><td align="left">drop(_1524)</td></tr></table>>];
    bb697__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">697 (cleanup)</td></tr><tr><td align="left">drop(_1485)</td></tr></table>>];
    bb698__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">698 (cleanup)</td></tr><tr><td align="left">drop(_1461)</td></tr></table>>];
    bb699__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">699 (cleanup)</td></tr><tr><td align="left">drop(_1316)</td></tr></table>>];
    bb700__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">700 (cleanup)</td></tr><tr><td align="left">drop(_1246)</td></tr></table>>];
    bb701__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">701 (cleanup)</td></tr><tr><td align="left">drop(_1211)</td></tr></table>>];
    bb702__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">702 (cleanup)</td></tr><tr><td align="left">drop(_1186)</td></tr></table>>];
    bb703__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">703 (cleanup)</td></tr><tr><td align="left">drop(_1164)</td></tr></table>>];
    bb704__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">704 (cleanup)</td></tr><tr><td align="left">drop(_1021)</td></tr></table>>];
    bb705__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">705 (cleanup)</td></tr><tr><td align="left">drop(_992)</td></tr></table>>];
    bb706__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">706 (cleanup)</td></tr><tr><td align="left">drop(_961)</td></tr></table>>];
    bb707__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">707 (cleanup)</td></tr><tr><td align="left">drop(_964)</td></tr></table>>];
    bb708__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">708 (cleanup)</td></tr><tr><td align="left">drop(_981)</td></tr></table>>];
    bb709__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">709 (cleanup)</td></tr><tr><td align="left">drop(_974)</td></tr></table>>];
    bb710__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">710 (cleanup)</td></tr><tr><td align="left">drop(_924)</td></tr></table>>];
    bb711__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">711 (cleanup)</td></tr><tr><td align="left">drop(_773)</td></tr></table>>];
    bb712__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">712 (cleanup)</td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb713__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">713 (cleanup)</td></tr><tr><td align="left">drop(_690)</td></tr></table>>];
    bb714__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">714 (cleanup)</td></tr><tr><td align="left">drop(_667)</td></tr></table>>];
    bb715__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">715 (cleanup)</td></tr><tr><td align="left">drop(_626)</td></tr></table>>];
    bb716__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">716 (cleanup)</td></tr><tr><td align="left">drop(_607)</td></tr></table>>];
    bb717__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">717 (cleanup)</td></tr><tr><td align="left">drop(_534)</td></tr></table>>];
    bb718__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">718 (cleanup)</td></tr><tr><td align="left">drop(_515)</td></tr></table>>];
    bb719__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">719 (cleanup)</td></tr><tr><td align="left">drop(_467)</td></tr></table>>];
    bb720__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">720 (cleanup)</td></tr><tr><td align="left">drop(_397)</td></tr></table>>];
    bb721__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">721 (cleanup)</td></tr><tr><td align="left">drop(_373)</td></tr></table>>];
    bb722__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">722 (cleanup)</td></tr><tr><td align="left">drop(_348)</td></tr></table>>];
    bb723__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">723 (cleanup)</td></tr><tr><td align="left">drop(_268)</td></tr></table>>];
    bb724__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">724 (cleanup)</td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb725__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">725 (cleanup)</td></tr><tr><td align="left">drop(_201)</td></tr></table>>];
    bb726__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">726 (cleanup)</td></tr><tr><td align="left">drop(_182)</td></tr></table>>];
    bb727__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">727 (cleanup)</td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb728__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">728 (cleanup)</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb729__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">729 (cleanup)</td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb730__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">730 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb731__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">731 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb732__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">732 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb733__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">733 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb734__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">734</td></tr><tr><td align="left" balign="left">_1583 = discriminant(_349)<br/>StorageDead(_353)<br/>_1572 = const false<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>_368 = &amp;mut (*_7)<br/>StorageLive(_369)<br/>_369 = &amp;(*_8)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_376 = &amp;(*_9)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_378 = &amp;_1<br/>_377 = &amp;(*_378)<br/></td></tr><tr><td align="left">_375 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _376, move _377)</td></tr></table>>];
    bb735__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">735</td></tr><tr><td align="left" balign="left">_1585 = discriminant(_374)<br/>StorageDead(_378)<br/>_1571 = const false<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_371)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = &amp;(*_10)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_402 = &amp;_2<br/>_401 = &amp;(*_402)<br/></td></tr><tr><td align="left">_399 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _400, move _401)</td></tr></table>>];
    bb736__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">736</td></tr><tr><td align="left">drop(_814)</td></tr></table>>];
    bb737__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">737</td></tr><tr><td align="left">switchInt(_1570)</td></tr></table>>];
    bb738__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">738</td></tr><tr><td align="left" balign="left">_1619 = discriminant(_374)<br/>StorageDead(_378)<br/>_1571 = const false<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_371)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb739__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">739</td></tr><tr><td align="left" balign="left">_1621 = discriminant(_349)<br/>StorageDead(_353)<br/>_1572 = const false<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb740__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">740</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb741__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">741</td></tr><tr><td align="left">switchInt(_1573)</td></tr></table>>];
    bb742__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">742</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb743__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">743</td></tr><tr><td align="left">switchInt(_1574)</td></tr></table>>];
    bb744__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">744 (cleanup)</td></tr><tr><td align="left" balign="left">_1623 = discriminant(_1486)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb745__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">745 (cleanup)</td></tr><tr><td align="left" balign="left">_1624 = discriminant(_1317)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb746__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">746 (cleanup)</td></tr><tr><td align="left" balign="left">_1625 = discriminant(_1247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb747__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">747 (cleanup)</td></tr><tr><td align="left" balign="left">_1626 = discriminant(_925)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb748__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">748 (cleanup)</td></tr><tr><td align="left">drop(_814)</td></tr></table>>];
    bb749__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">749 (cleanup)</td></tr><tr><td align="left">switchInt(_1570)</td></tr></table>>];
    bb750__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">750 (cleanup)</td></tr><tr><td align="left" balign="left">_1627 = discriminant(_815)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb751__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">751 (cleanup)</td></tr><tr><td align="left" balign="left">_1628 = discriminant(_702)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb752__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">752 (cleanup)</td></tr><tr><td align="left" balign="left">_1629 = discriminant(_691)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb753__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">753 (cleanup)</td></tr><tr><td align="left" balign="left">_1630 = discriminant(_398)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb754__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">754 (cleanup)</td></tr><tr><td align="left" balign="left">_1631 = discriminant(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb755__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">755 (cleanup)</td></tr><tr><td align="left" balign="left">_1632 = discriminant(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb756__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">756 (cleanup)</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb757__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">757 (cleanup)</td></tr><tr><td align="left">switchInt(_1573)</td></tr></table>>];
    bb758__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">758 (cleanup)</td></tr><tr><td align="left" balign="left">_1633 = discriminant(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb759__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">759 (cleanup)</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb760__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">760 (cleanup)</td></tr><tr><td align="left">switchInt(_1574)</td></tr></table>>];
    bb761__0_347 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">761 (cleanup)</td></tr><tr><td align="left" balign="left">_1634 = discriminant(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_347 -> bb1__0_347 [label="return"];
    bb1__0_347 -> bb3__0_347 [label="0"];
    bb1__0_347 -> bb2__0_347 [label="otherwise"];
    bb2__0_347 -> bb4__0_347 [label="return"];
    bb3__0_347 -> bb15__0_347 [label=""];
    bb4__0_347 -> bb5__0_347 [label="return"];
    bb5__0_347 -> bb6__0_347 [label="return"];
    bb6__0_347 -> bb7__0_347 [label="return"];
    bb6__0_347 -> bb732__0_347 [label="unwind"];
    bb7__0_347 -> bb8__0_347 [label="return"];
    bb7__0_347 -> bb732__0_347 [label="unwind"];
    bb8__0_347 -> bb9__0_347 [label="return"];
    bb8__0_347 -> bb733__0_347 [label="unwind"];
    bb9__0_347 -> bb10__0_347 [label="return"];
    bb10__0_347 -> bb11__0_347 [label="return"];
    bb11__0_347 -> bb12__0_347 [label="return"];
    bb11__0_347 -> bb731__0_347 [label="unwind"];
    bb12__0_347 -> bb13__0_347 [label="return"];
    bb12__0_347 -> bb731__0_347 [label="unwind"];
    bb13__0_347 -> bb14__0_347 [label="return"];
    bb13__0_347 -> bb733__0_347 [label="unwind"];
    bb14__0_347 -> bb15__0_347 [label=""];
    bb15__0_347 -> bb16__0_347 [label="return"];
    bb16__0_347 -> bb17__0_347 [label="0"];
    bb16__0_347 -> bb19__0_347 [label="1"];
    bb16__0_347 -> bb18__0_347 [label="otherwise"];
    bb17__0_347 -> bb21__0_347 [label="return"];
    bb19__0_347 -> bb20__0_347 [label="return"];
    bb20__0_347 -> bb694__0_347 [label=""];
    bb21__0_347 -> bb23__0_347 [label="0"];
    bb21__0_347 -> bb22__0_347 [label="otherwise"];
    bb22__0_347 -> bb24__0_347 [label="return"];
    bb23__0_347 -> bb35__0_347 [label=""];
    bb24__0_347 -> bb25__0_347 [label="return"];
    bb25__0_347 -> bb26__0_347 [label="return"];
    bb26__0_347 -> bb27__0_347 [label="return"];
    bb26__0_347 -> bb730__0_347 [label="unwind"];
    bb27__0_347 -> bb28__0_347 [label="return"];
    bb27__0_347 -> bb730__0_347 [label="unwind"];
    bb28__0_347 -> bb29__0_347 [label="return"];
    bb28__0_347 -> bb733__0_347 [label="unwind"];
    bb29__0_347 -> bb30__0_347 [label="return"];
    bb30__0_347 -> bb31__0_347 [label="return"];
    bb31__0_347 -> bb32__0_347 [label="return"];
    bb31__0_347 -> bb729__0_347 [label="unwind"];
    bb32__0_347 -> bb33__0_347 [label="return"];
    bb32__0_347 -> bb729__0_347 [label="unwind"];
    bb33__0_347 -> bb34__0_347 [label="return"];
    bb33__0_347 -> bb733__0_347 [label="unwind"];
    bb34__0_347 -> bb35__0_347 [label=""];
    bb35__0_347 -> bb36__0_347 [label="return"];
    bb36__0_347 -> bb37__0_347 [label="0"];
    bb36__0_347 -> bb38__0_347 [label="1"];
    bb36__0_347 -> bb18__0_347 [label="otherwise"];
    bb37__0_347 -> bb41__0_347 [label="0"];
    bb37__0_347 -> bb40__0_347 [label="otherwise"];
    bb38__0_347 -> bb39__0_347 [label="return"];
    bb39__0_347 -> bb694__0_347 [label=""];
    bb40__0_347 -> bb54__0_347 [label=""];
    bb41__0_347 -> bb42__0_347 [label="return"];
    bb42__0_347 -> bb43__0_347 [label="return"];
    bb43__0_347 -> bb44__0_347 [label="return"];
    bb44__0_347 -> bb45__0_347 [label="return"];
    bb44__0_347 -> bb728__0_347 [label="unwind"];
    bb45__0_347 -> bb46__0_347 [label="return"];
    bb45__0_347 -> bb728__0_347 [label="unwind"];
    bb46__0_347 -> bb47__0_347 [label="return"];
    bb46__0_347 -> bb733__0_347 [label="unwind"];
    bb47__0_347 -> bb48__0_347 [label="return"];
    bb48__0_347 -> bb49__0_347 [label="return"];
    bb49__0_347 -> bb50__0_347 [label="return"];
    bb50__0_347 -> bb51__0_347 [label="return"];
    bb50__0_347 -> bb727__0_347 [label="unwind"];
    bb51__0_347 -> bb52__0_347 [label="return"];
    bb51__0_347 -> bb727__0_347 [label="unwind"];
    bb52__0_347 -> bb53__0_347 [label="return"];
    bb52__0_347 -> bb733__0_347 [label="unwind"];
    bb53__0_347 -> bb54__0_347 [label=""];
    bb54__0_347 -> bb55__0_347 [label="return"];
    bb55__0_347 -> bb56__0_347 [label="0"];
    bb55__0_347 -> bb57__0_347 [label="1"];
    bb55__0_347 -> bb18__0_347 [label="otherwise"];
    bb56__0_347 -> bb59__0_347 [label="return"];
    bb57__0_347 -> bb58__0_347 [label="return"];
    bb58__0_347 -> bb694__0_347 [label=""];
    bb59__0_347 -> bb60__0_347 [label="return"];
    bb59__0_347 -> bb733__0_347 [label="unwind"];
    bb60__0_347 -> bb61__0_347 [label="0"];
    bb60__0_347 -> bb62__0_347 [label="1"];
    bb60__0_347 -> bb18__0_347 [label="otherwise"];
    bb61__0_347 -> bb64__0_347 [label="return"];
    bb61__0_347 -> bb760__0_347 [label="unwind"];
    bb62__0_347 -> bb63__0_347 [label="return"];
    bb62__0_347 -> bb761__0_347 [label="unwind"];
    bb63__0_347 -> bb693__0_347 [label=""];
    bb64__0_347 -> bb65__0_347 [label="return"];
    bb64__0_347 -> bb760__0_347 [label="unwind"];
    bb65__0_347 -> bb67__0_347 [label="0"];
    bb65__0_347 -> bb66__0_347 [label="otherwise"];
    bb66__0_347 -> bb68__0_347 [label="return"];
    bb66__0_347 -> bb760__0_347 [label="unwind"];
    bb67__0_347 -> bb80__0_347 [label=""];
    bb68__0_347 -> bb69__0_347 [label="return"];
    bb68__0_347 -> bb760__0_347 [label="unwind"];
    bb69__0_347 -> bb70__0_347 [label="return"];
    bb69__0_347 -> bb760__0_347 [label="unwind"];
    bb70__0_347 -> bb71__0_347 [label="return"];
    bb70__0_347 -> bb726__0_347 [label="unwind"];
    bb71__0_347 -> bb72__0_347 [label="return"];
    bb71__0_347 -> bb726__0_347 [label="unwind"];
    bb72__0_347 -> bb73__0_347 [label="return"];
    bb72__0_347 -> bb760__0_347 [label="unwind"];
    bb73__0_347 -> bb74__0_347 [label="return"];
    bb73__0_347 -> bb760__0_347 [label="unwind"];
    bb74__0_347 -> bb75__0_347 [label="return"];
    bb74__0_347 -> bb760__0_347 [label="unwind"];
    bb75__0_347 -> bb76__0_347 [label="return"];
    bb75__0_347 -> bb760__0_347 [label="unwind"];
    bb76__0_347 -> bb77__0_347 [label="return"];
    bb76__0_347 -> bb725__0_347 [label="unwind"];
    bb77__0_347 -> bb78__0_347 [label="return"];
    bb77__0_347 -> bb725__0_347 [label="unwind"];
    bb78__0_347 -> bb79__0_347 [label="return"];
    bb78__0_347 -> bb760__0_347 [label="unwind"];
    bb79__0_347 -> bb80__0_347 [label=""];
    bb80__0_347 -> bb81__0_347 [label="return"];
    bb80__0_347 -> bb760__0_347 [label="unwind"];
    bb81__0_347 -> bb82__0_347 [label="0"];
    bb81__0_347 -> bb83__0_347 [label="1"];
    bb81__0_347 -> bb18__0_347 [label="otherwise"];
    bb82__0_347 -> bb85__0_347 [label="return"];
    bb82__0_347 -> bb760__0_347 [label="unwind"];
    bb83__0_347 -> bb84__0_347 [label="return"];
    bb83__0_347 -> bb760__0_347 [label="unwind"];
    bb84__0_347 -> bb743__0_347 [label=""];
    bb85__0_347 -> bb86__0_347 [label="return"];
    bb85__0_347 -> bb760__0_347 [label="unwind"];
    bb86__0_347 -> bb87__0_347 [label="return"];
    bb86__0_347 -> bb760__0_347 [label="unwind"];
    bb87__0_347 -> bb88__0_347 [label="0"];
    bb87__0_347 -> bb89__0_347 [label="1"];
    bb87__0_347 -> bb18__0_347 [label="otherwise"];
    bb88__0_347 -> bb91__0_347 [label="return"];
    bb88__0_347 -> bb757__0_347 [label="unwind"];
    bb89__0_347 -> bb90__0_347 [label="return"];
    bb89__0_347 -> bb758__0_347 [label="unwind"];
    bb90__0_347 -> bb692__0_347 [label=""];
    bb91__0_347 -> bb92__0_347 [label="return"];
    bb91__0_347 -> bb757__0_347 [label="unwind"];
    bb92__0_347 -> bb94__0_347 [label="0"];
    bb92__0_347 -> bb93__0_347 [label="otherwise"];
    bb93__0_347 -> bb95__0_347 [label="return"];
    bb93__0_347 -> bb757__0_347 [label="unwind"];
    bb94__0_347 -> bb107__0_347 [label=""];
    bb95__0_347 -> bb96__0_347 [label="return"];
    bb95__0_347 -> bb757__0_347 [label="unwind"];
    bb96__0_347 -> bb97__0_347 [label="return"];
    bb96__0_347 -> bb757__0_347 [label="unwind"];
    bb97__0_347 -> bb98__0_347 [label="return"];
    bb97__0_347 -> bb724__0_347 [label="unwind"];
    bb98__0_347 -> bb99__0_347 [label="return"];
    bb98__0_347 -> bb724__0_347 [label="unwind"];
    bb99__0_347 -> bb100__0_347 [label="return"];
    bb99__0_347 -> bb757__0_347 [label="unwind"];
    bb100__0_347 -> bb101__0_347 [label="return"];
    bb100__0_347 -> bb757__0_347 [label="unwind"];
    bb101__0_347 -> bb102__0_347 [label="return"];
    bb101__0_347 -> bb757__0_347 [label="unwind"];
    bb102__0_347 -> bb103__0_347 [label="return"];
    bb102__0_347 -> bb757__0_347 [label="unwind"];
    bb103__0_347 -> bb104__0_347 [label="return"];
    bb103__0_347 -> bb723__0_347 [label="unwind"];
    bb104__0_347 -> bb105__0_347 [label="return"];
    bb104__0_347 -> bb723__0_347 [label="unwind"];
    bb105__0_347 -> bb106__0_347 [label="return"];
    bb105__0_347 -> bb757__0_347 [label="unwind"];
    bb106__0_347 -> bb107__0_347 [label=""];
    bb107__0_347 -> bb108__0_347 [label="return"];
    bb107__0_347 -> bb757__0_347 [label="unwind"];
    bb108__0_347 -> bb109__0_347 [label="0"];
    bb108__0_347 -> bb110__0_347 [label="1"];
    bb108__0_347 -> bb18__0_347 [label="otherwise"];
    bb109__0_347 -> bb112__0_347 [label="return"];
    bb109__0_347 -> bb757__0_347 [label="unwind"];
    bb110__0_347 -> bb111__0_347 [label="return"];
    bb110__0_347 -> bb757__0_347 [label="unwind"];
    bb111__0_347 -> bb741__0_347 [label=""];
    bb112__0_347 -> bb113__0_347 [label="return"];
    bb112__0_347 -> bb757__0_347 [label="unwind"];
    bb113__0_347 -> bb114__0_347 [label="return"];
    bb113__0_347 -> bb757__0_347 [label="unwind"];
    bb114__0_347 -> bb115__0_347 [label="return"];
    bb114__0_347 -> bb757__0_347 [label="unwind"];
    bb115__0_347 -> bb116__0_347 [label="0"];
    bb115__0_347 -> bb117__0_347 [label="1"];
    bb115__0_347 -> bb18__0_347 [label="otherwise"];
    bb116__0_347 -> bb119__0_347 [label="return"];
    bb116__0_347 -> bb757__0_347 [label="unwind"];
    bb117__0_347 -> bb118__0_347 [label="return"];
    bb117__0_347 -> bb757__0_347 [label="unwind"];
    bb118__0_347 -> bb741__0_347 [label=""];
    bb119__0_347 -> bb120__0_347 [label="return"];
    bb119__0_347 -> bb757__0_347 [label="unwind"];
    bb120__0_347 -> bb121__0_347 [label="return"];
    bb120__0_347 -> bb757__0_347 [label="unwind"];
    bb121__0_347 -> bb122__0_347 [label="0"];
    bb121__0_347 -> bb123__0_347 [label="1"];
    bb121__0_347 -> bb18__0_347 [label="otherwise"];
    bb122__0_347 -> bb125__0_347 [label="return"];
    bb122__0_347 -> bb757__0_347 [label="unwind"];
    bb123__0_347 -> bb124__0_347 [label="return"];
    bb123__0_347 -> bb757__0_347 [label="unwind"];
    bb124__0_347 -> bb741__0_347 [label=""];
    bb125__0_347 -> bb126__0_347 [label="return"];
    bb125__0_347 -> bb757__0_347 [label="unwind"];
    bb126__0_347 -> bb127__0_347 [label="return"];
    bb126__0_347 -> bb757__0_347 [label="unwind"];
    bb127__0_347 -> bb128__0_347 [label="0"];
    bb127__0_347 -> bb129__0_347 [label="1"];
    bb127__0_347 -> bb18__0_347 [label="otherwise"];
    bb128__0_347 -> bb131__0_347 [label="return"];
    bb128__0_347 -> bb757__0_347 [label="unwind"];
    bb129__0_347 -> bb130__0_347 [label="return"];
    bb129__0_347 -> bb757__0_347 [label="unwind"];
    bb130__0_347 -> bb741__0_347 [label=""];
    bb131__0_347 -> bb132__0_347 [label="return"];
    bb131__0_347 -> bb757__0_347 [label="unwind"];
    bb132__0_347 -> bb133__0_347 [label="return"];
    bb132__0_347 -> bb757__0_347 [label="unwind"];
    bb133__0_347 -> bb134__0_347 [label="0"];
    bb133__0_347 -> bb135__0_347 [label="1"];
    bb133__0_347 -> bb18__0_347 [label="otherwise"];
    bb134__0_347 -> bb137__0_347 [label="return"];
    bb134__0_347 -> bb757__0_347 [label="unwind"];
    bb135__0_347 -> bb136__0_347 [label="return"];
    bb135__0_347 -> bb757__0_347 [label="unwind"];
    bb136__0_347 -> bb741__0_347 [label=""];
    bb137__0_347 -> bb138__0_347 [label="return"];
    bb137__0_347 -> bb757__0_347 [label="unwind"];
    bb138__0_347 -> bb139__0_347 [label="0"];
    bb138__0_347 -> bb140__0_347 [label="1"];
    bb138__0_347 -> bb18__0_347 [label="otherwise"];
    bb139__0_347 -> bb142__0_347 [label="return"];
    bb139__0_347 -> bb722__0_347 [label="unwind"];
    bb140__0_347 -> bb141__0_347 [label="return"];
    bb140__0_347 -> bb755__0_347 [label="unwind"];
    bb141__0_347 -> bb739__0_347 [label=""];
    bb142__0_347 -> bb143__0_347 [label="return"];
    bb142__0_347 -> bb722__0_347 [label="unwind"];
    bb143__0_347 -> bb144__0_347 [label="return"];
    bb143__0_347 -> bb722__0_347 [label="unwind"];
    bb144__0_347 -> bb145__0_347 [label="0"];
    bb144__0_347 -> bb146__0_347 [label="1"];
    bb144__0_347 -> bb18__0_347 [label="otherwise"];
    bb145__0_347 -> bb734__0_347 [label="return"];
    bb145__0_347 -> bb755__0_347 [label="unwind"];
    bb146__0_347 -> bb147__0_347 [label="return"];
    bb146__0_347 -> bb722__0_347 [label="unwind"];
    bb147__0_347 -> bb739__0_347 [label="return"];
    bb147__0_347 -> bb755__0_347 [label="unwind"];
    bb148__0_347 -> bb149__0_347 [label="return"];
    bb148__0_347 -> bb757__0_347 [label="unwind"];
    bb149__0_347 -> bb150__0_347 [label="0"];
    bb149__0_347 -> bb151__0_347 [label="1"];
    bb149__0_347 -> bb18__0_347 [label="otherwise"];
    bb150__0_347 -> bb153__0_347 [label="return"];
    bb150__0_347 -> bb721__0_347 [label="unwind"];
    bb151__0_347 -> bb152__0_347 [label="return"];
    bb151__0_347 -> bb754__0_347 [label="unwind"];
    bb152__0_347 -> bb738__0_347 [label=""];
    bb153__0_347 -> bb154__0_347 [label="return"];
    bb153__0_347 -> bb721__0_347 [label="unwind"];
    bb154__0_347 -> bb155__0_347 [label="return"];
    bb154__0_347 -> bb721__0_347 [label="unwind"];
    bb155__0_347 -> bb156__0_347 [label="0"];
    bb155__0_347 -> bb157__0_347 [label="1"];
    bb155__0_347 -> bb18__0_347 [label="otherwise"];
    bb156__0_347 -> bb735__0_347 [label="return"];
    bb156__0_347 -> bb754__0_347 [label="unwind"];
    bb157__0_347 -> bb158__0_347 [label="return"];
    bb157__0_347 -> bb721__0_347 [label="unwind"];
    bb158__0_347 -> bb738__0_347 [label="return"];
    bb158__0_347 -> bb754__0_347 [label="unwind"];
    bb159__0_347 -> bb160__0_347 [label="return"];
    bb159__0_347 -> bb757__0_347 [label="unwind"];
    bb160__0_347 -> bb161__0_347 [label="0"];
    bb160__0_347 -> bb162__0_347 [label="1"];
    bb160__0_347 -> bb18__0_347 [label="otherwise"];
    bb161__0_347 -> bb164__0_347 [label="return"];
    bb161__0_347 -> bb720__0_347 [label="unwind"];
    bb162__0_347 -> bb163__0_347 [label="return"];
    bb162__0_347 -> bb753__0_347 [label="unwind"];
    bb163__0_347 -> bb690__0_347 [label=""];
    bb164__0_347 -> bb165__0_347 [label="return"];
    bb164__0_347 -> bb720__0_347 [label="unwind"];
    bb165__0_347 -> bb166__0_347 [label="return"];
    bb165__0_347 -> bb720__0_347 [label="unwind"];
    bb166__0_347 -> bb167__0_347 [label="return"];
    bb166__0_347 -> bb720__0_347 [label="unwind"];
    bb167__0_347 -> bb168__0_347 [label="0"];
    bb167__0_347 -> bb169__0_347 [label="1"];
    bb167__0_347 -> bb18__0_347 [label="otherwise"];
    bb168__0_347 -> bb171__0_347 [label="return"];
    bb168__0_347 -> bb720__0_347 [label="unwind"];
    bb169__0_347 -> bb170__0_347 [label="return"];
    bb169__0_347 -> bb720__0_347 [label="unwind"];
    bb170__0_347 -> bb689__0_347 [label=""];
    bb171__0_347 -> bb172__0_347 [label="return"];
    bb171__0_347 -> bb720__0_347 [label="unwind"];
    bb172__0_347 -> bb173__0_347 [label="return"];
    bb172__0_347 -> bb720__0_347 [label="unwind"];
    bb173__0_347 -> bb174__0_347 [label="0"];
    bb173__0_347 -> bb175__0_347 [label="1"];
    bb173__0_347 -> bb18__0_347 [label="otherwise"];
    bb174__0_347 -> bb177__0_347 [label="return"];
    bb174__0_347 -> bb720__0_347 [label="unwind"];
    bb175__0_347 -> bb176__0_347 [label="return"];
    bb175__0_347 -> bb720__0_347 [label="unwind"];
    bb176__0_347 -> bb688__0_347 [label=""];
    bb177__0_347 -> bb178__0_347 [label="return"];
    bb177__0_347 -> bb720__0_347 [label="unwind"];
    bb178__0_347 -> bb179__0_347 [label="0"];
    bb178__0_347 -> bb180__0_347 [label="1"];
    bb178__0_347 -> bb18__0_347 [label="otherwise"];
    bb179__0_347 -> bb182__0_347 [label="return"];
    bb179__0_347 -> bb720__0_347 [label="unwind"];
    bb180__0_347 -> bb181__0_347 [label="return"];
    bb180__0_347 -> bb720__0_347 [label="unwind"];
    bb181__0_347 -> bb687__0_347 [label=""];
    bb182__0_347 -> bb184__0_347 [label="0"];
    bb182__0_347 -> bb183__0_347 [label="otherwise"];
    bb183__0_347 -> bb192__0_347 [label=""];
    bb184__0_347 -> bb185__0_347 [label="return"];
    bb184__0_347 -> bb720__0_347 [label="unwind"];
    bb185__0_347 -> bb186__0_347 [label="return"];
    bb185__0_347 -> bb720__0_347 [label="unwind"];
    bb186__0_347 -> bb187__0_347 [label="return"];
    bb186__0_347 -> bb720__0_347 [label="unwind"];
    bb187__0_347 -> bb188__0_347 [label="return"];
    bb187__0_347 -> bb719__0_347 [label="unwind"];
    bb188__0_347 -> bb189__0_347 [label="return"];
    bb188__0_347 -> bb719__0_347 [label="unwind"];
    bb189__0_347 -> bb190__0_347 [label="return"];
    bb189__0_347 -> bb720__0_347 [label="unwind"];
    bb190__0_347 -> bb191__0_347 [label="return"];
    bb190__0_347 -> bb720__0_347 [label="unwind"];
    bb191__0_347 -> bb192__0_347 [label=""];
    bb192__0_347 -> bb193__0_347 [label="return"];
    bb192__0_347 -> bb720__0_347 [label="unwind"];
    bb193__0_347 -> bb194__0_347 [label="0"];
    bb193__0_347 -> bb195__0_347 [label="1"];
    bb193__0_347 -> bb18__0_347 [label="otherwise"];
    bb194__0_347 -> bb197__0_347 [label="return"];
    bb194__0_347 -> bb720__0_347 [label="unwind"];
    bb195__0_347 -> bb196__0_347 [label="return"];
    bb195__0_347 -> bb720__0_347 [label="unwind"];
    bb196__0_347 -> bb687__0_347 [label=""];
    bb197__0_347 -> bb198__0_347 [label="return"];
    bb197__0_347 -> bb720__0_347 [label="unwind"];
    bb198__0_347 -> bb199__0_347 [label="return"];
    bb198__0_347 -> bb720__0_347 [label="unwind"];
    bb199__0_347 -> bb200__0_347 [label="0"];
    bb199__0_347 -> bb201__0_347 [label="1"];
    bb199__0_347 -> bb18__0_347 [label="otherwise"];
    bb200__0_347 -> bb204__0_347 [label="0"];
    bb200__0_347 -> bb203__0_347 [label="otherwise"];
    bb201__0_347 -> bb202__0_347 [label="return"];
    bb201__0_347 -> bb720__0_347 [label="unwind"];
    bb202__0_347 -> bb686__0_347 [label=""];
    bb203__0_347 -> bb217__0_347 [label=""];
    bb204__0_347 -> bb205__0_347 [label="return"];
    bb204__0_347 -> bb720__0_347 [label="unwind"];
    bb205__0_347 -> bb206__0_347 [label="return"];
    bb205__0_347 -> bb720__0_347 [label="unwind"];
    bb206__0_347 -> bb207__0_347 [label="return"];
    bb206__0_347 -> bb720__0_347 [label="unwind"];
    bb207__0_347 -> bb208__0_347 [label="return"];
    bb207__0_347 -> bb718__0_347 [label="unwind"];
    bb208__0_347 -> bb209__0_347 [label="return"];
    bb208__0_347 -> bb718__0_347 [label="unwind"];
    bb209__0_347 -> bb210__0_347 [label="return"];
    bb209__0_347 -> bb720__0_347 [label="unwind"];
    bb210__0_347 -> bb211__0_347 [label="return"];
    bb210__0_347 -> bb720__0_347 [label="unwind"];
    bb211__0_347 -> bb212__0_347 [label="return"];
    bb211__0_347 -> bb720__0_347 [label="unwind"];
    bb212__0_347 -> bb213__0_347 [label="return"];
    bb212__0_347 -> bb720__0_347 [label="unwind"];
    bb213__0_347 -> bb214__0_347 [label="return"];
    bb213__0_347 -> bb717__0_347 [label="unwind"];
    bb214__0_347 -> bb215__0_347 [label="return"];
    bb214__0_347 -> bb717__0_347 [label="unwind"];
    bb215__0_347 -> bb216__0_347 [label="return"];
    bb215__0_347 -> bb720__0_347 [label="unwind"];
    bb216__0_347 -> bb217__0_347 [label=""];
    bb217__0_347 -> bb218__0_347 [label="return"];
    bb217__0_347 -> bb720__0_347 [label="unwind"];
    bb218__0_347 -> bb219__0_347 [label="0"];
    bb218__0_347 -> bb220__0_347 [label="1"];
    bb218__0_347 -> bb18__0_347 [label="otherwise"];
    bb219__0_347 -> bb222__0_347 [label="return"];
    bb219__0_347 -> bb720__0_347 [label="unwind"];
    bb220__0_347 -> bb221__0_347 [label="return"];
    bb220__0_347 -> bb720__0_347 [label="unwind"];
    bb221__0_347 -> bb686__0_347 [label=""];
    bb222__0_347 -> bb223__0_347 [label="return"];
    bb222__0_347 -> bb720__0_347 [label="unwind"];
    bb223__0_347 -> bb224__0_347 [label="return"];
    bb223__0_347 -> bb720__0_347 [label="unwind"];
    bb224__0_347 -> bb225__0_347 [label="return"];
    bb224__0_347 -> bb720__0_347 [label="unwind"];
    bb225__0_347 -> bb226__0_347 [label="return"];
    bb225__0_347 -> bb720__0_347 [label="unwind"];
    bb226__0_347 -> bb227__0_347 [label="return"];
    bb226__0_347 -> bb720__0_347 [label="unwind"];
    bb227__0_347 -> bb228__0_347 [label="0"];
    bb227__0_347 -> bb229__0_347 [label="1"];
    bb227__0_347 -> bb18__0_347 [label="otherwise"];
    bb228__0_347 -> bb231__0_347 [label="return"];
    bb228__0_347 -> bb757__0_347 [label="unwind"];
    bb229__0_347 -> bb230__0_347 [label="return"];
    bb229__0_347 -> bb720__0_347 [label="unwind"];
    bb230__0_347 -> bb685__0_347 [label="return"];
    bb230__0_347 -> bb757__0_347 [label="unwind"];
    bb231__0_347 -> bb232__0_347 [label="return"];
    bb231__0_347 -> bb757__0_347 [label="unwind"];
    bb232__0_347 -> bb233__0_347 [label="return"];
    bb232__0_347 -> bb757__0_347 [label="unwind"];
    bb233__0_347 -> bb234__0_347 [label="0"];
    bb233__0_347 -> bb235__0_347 [label="1"];
    bb233__0_347 -> bb18__0_347 [label="otherwise"];
    bb234__0_347 -> bb238__0_347 [label="0"];
    bb234__0_347 -> bb237__0_347 [label="otherwise"];
    bb235__0_347 -> bb236__0_347 [label="return"];
    bb235__0_347 -> bb757__0_347 [label="unwind"];
    bb236__0_347 -> bb682__0_347 [label=""];
    bb237__0_347 -> bb251__0_347 [label=""];
    bb238__0_347 -> bb239__0_347 [label="return"];
    bb238__0_347 -> bb757__0_347 [label="unwind"];
    bb239__0_347 -> bb240__0_347 [label="return"];
    bb239__0_347 -> bb757__0_347 [label="unwind"];
    bb240__0_347 -> bb241__0_347 [label="return"];
    bb240__0_347 -> bb757__0_347 [label="unwind"];
    bb241__0_347 -> bb242__0_347 [label="return"];
    bb241__0_347 -> bb716__0_347 [label="unwind"];
    bb242__0_347 -> bb243__0_347 [label="return"];
    bb242__0_347 -> bb716__0_347 [label="unwind"];
    bb243__0_347 -> bb244__0_347 [label="return"];
    bb243__0_347 -> bb757__0_347 [label="unwind"];
    bb244__0_347 -> bb245__0_347 [label="return"];
    bb244__0_347 -> bb757__0_347 [label="unwind"];
    bb245__0_347 -> bb246__0_347 [label="return"];
    bb245__0_347 -> bb757__0_347 [label="unwind"];
    bb246__0_347 -> bb247__0_347 [label="return"];
    bb246__0_347 -> bb757__0_347 [label="unwind"];
    bb247__0_347 -> bb248__0_347 [label="return"];
    bb247__0_347 -> bb715__0_347 [label="unwind"];
    bb248__0_347 -> bb249__0_347 [label="return"];
    bb248__0_347 -> bb715__0_347 [label="unwind"];
    bb249__0_347 -> bb250__0_347 [label="return"];
    bb249__0_347 -> bb757__0_347 [label="unwind"];
    bb250__0_347 -> bb251__0_347 [label=""];
    bb251__0_347 -> bb252__0_347 [label="return"];
    bb251__0_347 -> bb757__0_347 [label="unwind"];
    bb252__0_347 -> bb253__0_347 [label="0"];
    bb252__0_347 -> bb254__0_347 [label="1"];
    bb252__0_347 -> bb18__0_347 [label="otherwise"];
    bb253__0_347 -> bb256__0_347 [label="return"];
    bb253__0_347 -> bb757__0_347 [label="unwind"];
    bb254__0_347 -> bb255__0_347 [label="return"];
    bb254__0_347 -> bb757__0_347 [label="unwind"];
    bb255__0_347 -> bb681__0_347 [label=""];
    bb256__0_347 -> bb257__0_347 [label="return"];
    bb256__0_347 -> bb757__0_347 [label="unwind"];
    bb257__0_347 -> bb258__0_347 [label="0"];
    bb257__0_347 -> bb259__0_347 [label="1"];
    bb257__0_347 -> bb18__0_347 [label="otherwise"];
    bb258__0_347 -> bb262__0_347 [label="0"];
    bb258__0_347 -> bb261__0_347 [label="otherwise"];
    bb259__0_347 -> bb260__0_347 [label="return"];
    bb259__0_347 -> bb757__0_347 [label="unwind"];
    bb260__0_347 -> bb680__0_347 [label=""];
    bb261__0_347 -> bb270__0_347 [label=""];
    bb262__0_347 -> bb263__0_347 [label="return"];
    bb262__0_347 -> bb757__0_347 [label="unwind"];
    bb263__0_347 -> bb264__0_347 [label="return"];
    bb263__0_347 -> bb757__0_347 [label="unwind"];
    bb264__0_347 -> bb265__0_347 [label="return"];
    bb264__0_347 -> bb757__0_347 [label="unwind"];
    bb265__0_347 -> bb266__0_347 [label="return"];
    bb265__0_347 -> bb714__0_347 [label="unwind"];
    bb266__0_347 -> bb267__0_347 [label="return"];
    bb266__0_347 -> bb714__0_347 [label="unwind"];
    bb267__0_347 -> bb268__0_347 [label="return"];
    bb267__0_347 -> bb757__0_347 [label="unwind"];
    bb268__0_347 -> bb269__0_347 [label="return"];
    bb268__0_347 -> bb757__0_347 [label="unwind"];
    bb269__0_347 -> bb270__0_347 [label=""];
    bb270__0_347 -> bb271__0_347 [label="return"];
    bb270__0_347 -> bb757__0_347 [label="unwind"];
    bb271__0_347 -> bb272__0_347 [label="0"];
    bb271__0_347 -> bb273__0_347 [label="1"];
    bb271__0_347 -> bb18__0_347 [label="otherwise"];
    bb272__0_347 -> bb275__0_347 [label="return"];
    bb272__0_347 -> bb757__0_347 [label="unwind"];
    bb273__0_347 -> bb274__0_347 [label="return"];
    bb273__0_347 -> bb757__0_347 [label="unwind"];
    bb274__0_347 -> bb680__0_347 [label=""];
    bb275__0_347 -> bb276__0_347 [label="return"];
    bb275__0_347 -> bb757__0_347 [label="unwind"];
    bb276__0_347 -> bb277__0_347 [label="0"];
    bb276__0_347 -> bb278__0_347 [label="1"];
    bb276__0_347 -> bb18__0_347 [label="otherwise"];
    bb277__0_347 -> bb280__0_347 [label="return"];
    bb277__0_347 -> bb713__0_347 [label="unwind"];
    bb278__0_347 -> bb279__0_347 [label="return"];
    bb278__0_347 -> bb752__0_347 [label="unwind"];
    bb279__0_347 -> bb679__0_347 [label=""];
    bb280__0_347 -> bb281__0_347 [label="return"];
    bb280__0_347 -> bb713__0_347 [label="unwind"];
    bb281__0_347 -> bb282__0_347 [label="return"];
    bb281__0_347 -> bb713__0_347 [label="unwind"];
    bb282__0_347 -> bb283__0_347 [label="0"];
    bb282__0_347 -> bb284__0_347 [label="1"];
    bb282__0_347 -> bb18__0_347 [label="otherwise"];
    bb283__0_347 -> bb286__0_347 [label="return"];
    bb283__0_347 -> bb712__0_347 [label="unwind"];
    bb284__0_347 -> bb285__0_347 [label="return"];
    bb284__0_347 -> bb751__0_347 [label="unwind"];
    bb285__0_347 -> bb678__0_347 [label=""];
    bb286__0_347 -> bb287__0_347 [label="return"];
    bb286__0_347 -> bb712__0_347 [label="unwind"];
    bb287__0_347 -> bb288__0_347 [label="return"];
    bb287__0_347 -> bb712__0_347 [label="unwind"];
    bb288__0_347 -> bb289__0_347 [label="return"];
    bb288__0_347 -> bb712__0_347 [label="unwind"];
    bb289__0_347 -> bb290__0_347 [label="0"];
    bb289__0_347 -> bb291__0_347 [label="1"];
    bb289__0_347 -> bb18__0_347 [label="otherwise"];
    bb290__0_347 -> bb293__0_347 [label="return"];
    bb290__0_347 -> bb712__0_347 [label="unwind"];
    bb291__0_347 -> bb292__0_347 [label="return"];
    bb291__0_347 -> bb712__0_347 [label="unwind"];
    bb292__0_347 -> bb678__0_347 [label="return"];
    bb292__0_347 -> bb713__0_347 [label="unwind"];
    bb293__0_347 -> bb294__0_347 [label="return"];
    bb293__0_347 -> bb712__0_347 [label="unwind"];
    bb294__0_347 -> bb295__0_347 [label="return"];
    bb294__0_347 -> bb712__0_347 [label="unwind"];
    bb295__0_347 -> bb296__0_347 [label="return"];
    bb295__0_347 -> bb712__0_347 [label="unwind"];
    bb296__0_347 -> bb297__0_347 [label="return"];
    bb296__0_347 -> bb712__0_347 [label="unwind"];
    bb297__0_347 -> bb298__0_347 [label="0"];
    bb297__0_347 -> bb299__0_347 [label="1"];
    bb297__0_347 -> bb18__0_347 [label="otherwise"];
    bb298__0_347 -> bb301__0_347 [label="return"];
    bb298__0_347 -> bb713__0_347 [label="unwind"];
    bb299__0_347 -> bb300__0_347 [label="return"];
    bb299__0_347 -> bb712__0_347 [label="unwind"];
    bb300__0_347 -> bb676__0_347 [label="return"];
    bb300__0_347 -> bb713__0_347 [label="unwind"];
    bb301__0_347 -> bb302__0_347 [label="return"];
    bb301__0_347 -> bb757__0_347 [label="unwind"];
    bb302__0_347 -> bb303__0_347 [label="return"];
    bb302__0_347 -> bb757__0_347 [label="unwind"];
    bb303__0_347 -> bb304__0_347 [label="return"];
    bb303__0_347 -> bb757__0_347 [label="unwind"];
    bb304__0_347 -> bb305__0_347 [label="return"];
    bb304__0_347 -> bb757__0_347 [label="unwind"];
    bb305__0_347 -> bb306__0_347 [label="0"];
    bb305__0_347 -> bb307__0_347 [label="1"];
    bb305__0_347 -> bb18__0_347 [label="otherwise"];
    bb306__0_347 -> bb309__0_347 [label="return"];
    bb306__0_347 -> bb757__0_347 [label="unwind"];
    bb307__0_347 -> bb308__0_347 [label="return"];
    bb307__0_347 -> bb757__0_347 [label="unwind"];
    bb308__0_347 -> bb675__0_347 [label=""];
    bb309__0_347 -> bb311__0_347 [label="0"];
    bb309__0_347 -> bb310__0_347 [label="otherwise"];
    bb310__0_347 -> bb321__0_347 [label=""];
    bb311__0_347 -> bb312__0_347 [label="return"];
    bb311__0_347 -> bb757__0_347 [label="unwind"];
    bb312__0_347 -> bb320__0_347 [label="0"];
    bb312__0_347 -> bb313__0_347 [label="otherwise"];
    bb313__0_347 -> bb314__0_347 [label="return"];
    bb313__0_347 -> bb757__0_347 [label="unwind"];
    bb314__0_347 -> bb315__0_347 [label="return"];
    bb314__0_347 -> bb757__0_347 [label="unwind"];
    bb315__0_347 -> bb316__0_347 [label="return"];
    bb315__0_347 -> bb757__0_347 [label="unwind"];
    bb316__0_347 -> bb317__0_347 [label="return"];
    bb316__0_347 -> bb711__0_347 [label="unwind"];
    bb317__0_347 -> bb318__0_347 [label="return"];
    bb317__0_347 -> bb711__0_347 [label="unwind"];
    bb318__0_347 -> bb319__0_347 [label="return"];
    bb318__0_347 -> bb757__0_347 [label="unwind"];
    bb319__0_347 -> bb674__0_347 [label=""];
    bb320__0_347 -> bb321__0_347 [label=""];
    bb321__0_347 -> bb322__0_347 [label="return"];
    bb321__0_347 -> bb757__0_347 [label="unwind"];
    bb322__0_347 -> bb332__0_347 [label="0"];
    bb322__0_347 -> bb323__0_347 [label="otherwise"];
    bb323__0_347 -> bb324__0_347 [label="return"];
    bb323__0_347 -> bb757__0_347 [label="unwind"];
    bb324__0_347 -> bb325__0_347 [label="return"];
    bb324__0_347 -> bb757__0_347 [label="unwind"];
    bb325__0_347 -> bb326__0_347 [label="0"];
    bb325__0_347 -> bb327__0_347 [label="1"];
    bb325__0_347 -> bb18__0_347 [label="otherwise"];
    bb326__0_347 -> bb330__0_347 [label="0"];
    bb326__0_347 -> bb329__0_347 [label="otherwise"];
    bb327__0_347 -> bb328__0_347 [label="return"];
    bb327__0_347 -> bb757__0_347 [label="unwind"];
    bb328__0_347 -> bb673__0_347 [label=""];
    bb329__0_347 -> bb331__0_347 [label="return"];
    bb329__0_347 -> bb757__0_347 [label="unwind"];
    bb330__0_347 -> bb333__0_347 [label=""];
    bb331__0_347 -> bb673__0_347 [label=""];
    bb332__0_347 -> bb333__0_347 [label=""];
    bb333__0_347 -> bb334__0_347 [label="return"];
    bb333__0_347 -> bb757__0_347 [label="unwind"];
    bb334__0_347 -> bb335__0_347 [label="return"];
    bb334__0_347 -> bb757__0_347 [label="unwind"];
    bb335__0_347 -> bb336__0_347 [label="0"];
    bb335__0_347 -> bb337__0_347 [label="1"];
    bb335__0_347 -> bb18__0_347 [label="otherwise"];
    bb336__0_347 -> bb339__0_347 [label="return"];
    bb336__0_347 -> bb757__0_347 [label="unwind"];
    bb337__0_347 -> bb338__0_347 [label="return"];
    bb337__0_347 -> bb757__0_347 [label="unwind"];
    bb338__0_347 -> bb672__0_347 [label=""];
    bb339__0_347 -> bb340__0_347 [label="return"];
    bb339__0_347 -> bb757__0_347 [label="unwind"];
    bb340__0_347 -> bb341__0_347 [label="0"];
    bb340__0_347 -> bb342__0_347 [label="1"];
    bb340__0_347 -> bb18__0_347 [label="otherwise"];
    bb341__0_347 -> bb344__0_347 [label="return"];
    bb341__0_347 -> bb749__0_347 [label="unwind"];
    bb342__0_347 -> bb343__0_347 [label="return"];
    bb342__0_347 -> bb750__0_347 [label="unwind"];
    bb343__0_347 -> bb671__0_347 [label=""];
    bb344__0_347 -> bb345__0_347 [label="return"];
    bb344__0_347 -> bb749__0_347 [label="unwind"];
    bb345__0_347 -> bb346__0_347 [label="0"];
    bb345__0_347 -> bb347__0_347 [label="1"];
    bb345__0_347 -> bb18__0_347 [label="otherwise"];
    bb346__0_347 -> bb349__0_347 [label="return"];
    bb346__0_347 -> bb749__0_347 [label="unwind"];
    bb347__0_347 -> bb348__0_347 [label="return"];
    bb347__0_347 -> bb749__0_347 [label="unwind"];
    bb348__0_347 -> bb737__0_347 [label=""];
    bb349__0_347 -> bb350__0_347 [label="return"];
    bb349__0_347 -> bb749__0_347 [label="unwind"];
    bb350__0_347 -> bb352__0_347 [label="0"];
    bb350__0_347 -> bb351__0_347 [label="otherwise"];
    bb351__0_347 -> bb423__0_347 [label=""];
    bb352__0_347 -> bb353__0_347 [label="return"];
    bb352__0_347 -> bb749__0_347 [label="unwind"];
    bb353__0_347 -> bb354__0_347 [label="return"];
    bb353__0_347 -> bb749__0_347 [label="unwind"];
    bb354__0_347 -> bb355__0_347 [label="return"];
    bb354__0_347 -> bb749__0_347 [label="unwind"];
    bb355__0_347 -> bb356__0_347 [label="0"];
    bb355__0_347 -> bb357__0_347 [label="1"];
    bb355__0_347 -> bb18__0_347 [label="otherwise"];
    bb356__0_347 -> bb359__0_347 [label="return"];
    bb356__0_347 -> bb749__0_347 [label="unwind"];
    bb357__0_347 -> bb358__0_347 [label="return"];
    bb357__0_347 -> bb749__0_347 [label="unwind"];
    bb358__0_347 -> bb669__0_347 [label=""];
    bb359__0_347 -> bb360__0_347 [label="return"];
    bb359__0_347 -> bb749__0_347 [label="unwind"];
    bb360__0_347 -> bb361__0_347 [label="0"];
    bb360__0_347 -> bb362__0_347 [label="1"];
    bb360__0_347 -> bb18__0_347 [label="otherwise"];
    bb361__0_347 -> bb364__0_347 [label="return"];
    bb361__0_347 -> bb749__0_347 [label="unwind"];
    bb362__0_347 -> bb363__0_347 [label="return"];
    bb362__0_347 -> bb749__0_347 [label="unwind"];
    bb363__0_347 -> bb668__0_347 [label=""];
    bb364__0_347 -> bb365__0_347 [label="return"];
    bb364__0_347 -> bb749__0_347 [label="unwind"];
    bb365__0_347 -> bb366__0_347 [label="0"];
    bb365__0_347 -> bb367__0_347 [label="1"];
    bb365__0_347 -> bb18__0_347 [label="otherwise"];
    bb366__0_347 -> bb369__0_347 [label="return"];
    bb366__0_347 -> bb749__0_347 [label="unwind"];
    bb367__0_347 -> bb368__0_347 [label="return"];
    bb367__0_347 -> bb749__0_347 [label="unwind"];
    bb368__0_347 -> bb667__0_347 [label=""];
    bb369__0_347 -> bb370__0_347 [label="return"];
    bb369__0_347 -> bb749__0_347 [label="unwind"];
    bb370__0_347 -> bb371__0_347 [label="return"];
    bb370__0_347 -> bb749__0_347 [label="unwind"];
    bb371__0_347 -> bb372__0_347 [label="0"];
    bb371__0_347 -> bb373__0_347 [label="1"];
    bb371__0_347 -> bb18__0_347 [label="otherwise"];
    bb372__0_347 -> bb375__0_347 [label="return"];
    bb372__0_347 -> bb749__0_347 [label="unwind"];
    bb373__0_347 -> bb374__0_347 [label="return"];
    bb373__0_347 -> bb749__0_347 [label="unwind"];
    bb374__0_347 -> bb667__0_347 [label=""];
    bb375__0_347 -> bb376__0_347 [label="return"];
    bb375__0_347 -> bb749__0_347 [label="unwind"];
    bb376__0_347 -> bb377__0_347 [label="0"];
    bb376__0_347 -> bb378__0_347 [label="1"];
    bb376__0_347 -> bb18__0_347 [label="otherwise"];
    bb377__0_347 -> bb380__0_347 [label="return"];
    bb377__0_347 -> bb749__0_347 [label="unwind"];
    bb378__0_347 -> bb379__0_347 [label="return"];
    bb378__0_347 -> bb749__0_347 [label="unwind"];
    bb379__0_347 -> bb667__0_347 [label=""];
    bb380__0_347 -> bb381__0_347 [label="return"];
    bb380__0_347 -> bb749__0_347 [label="unwind"];
    bb381__0_347 -> bb382__0_347 [label="0"];
    bb381__0_347 -> bb383__0_347 [label="1"];
    bb381__0_347 -> bb18__0_347 [label="otherwise"];
    bb382__0_347 -> bb385__0_347 [label="0"];
    bb382__0_347 -> bb386__0_347 [label="otherwise"];
    bb383__0_347 -> bb384__0_347 [label="return"];
    bb383__0_347 -> bb749__0_347 [label="unwind"];
    bb384__0_347 -> bb666__0_347 [label=""];
    bb385__0_347 -> bb387__0_347 [label="0"];
    bb385__0_347 -> bb386__0_347 [label="otherwise"];
    bb386__0_347 -> bb388__0_347 [label="return"];
    bb386__0_347 -> bb749__0_347 [label="unwind"];
    bb387__0_347 -> bb423__0_347 [label=""];
    bb388__0_347 -> bb389__0_347 [label="return"];
    bb388__0_347 -> bb749__0_347 [label="unwind"];
    bb389__0_347 -> bb390__0_347 [label="0"];
    bb389__0_347 -> bb391__0_347 [label="1"];
    bb389__0_347 -> bb18__0_347 [label="otherwise"];
    bb390__0_347 -> bb393__0_347 [label="return"];
    bb390__0_347 -> bb710__0_347 [label="unwind"];
    bb391__0_347 -> bb392__0_347 [label="return"];
    bb391__0_347 -> bb747__0_347 [label="unwind"];
    bb392__0_347 -> bb665__0_347 [label=""];
    bb393__0_347 -> bb394__0_347 [label="return"];
    bb393__0_347 -> bb710__0_347 [label="unwind"];
    bb394__0_347 -> bb395__0_347 [label="return"];
    bb394__0_347 -> bb710__0_347 [label="unwind"];
    bb395__0_347 -> bb396__0_347 [label="return"];
    bb395__0_347 -> bb710__0_347 [label="unwind"];
    bb396__0_347 -> bb397__0_347 [label="0"];
    bb396__0_347 -> bb398__0_347 [label="1"];
    bb396__0_347 -> bb18__0_347 [label="otherwise"];
    bb397__0_347 -> bb400__0_347 [label="return"];
    bb397__0_347 -> bb710__0_347 [label="unwind"];
    bb398__0_347 -> bb399__0_347 [label="return"];
    bb398__0_347 -> bb710__0_347 [label="unwind"];
    bb399__0_347 -> bb664__0_347 [label=""];
    bb400__0_347 -> bb401__0_347 [label="return"];
    bb400__0_347 -> bb709__0_347 [label="unwind"];
    bb401__0_347 -> bb402__0_347 [label="return"];
    bb401__0_347 -> bb707__0_347 [label="unwind"];
    bb402__0_347 -> bb403__0_347 [label="return"];
    bb402__0_347 -> bb706__0_347 [label="unwind"];
    bb403__0_347 -> bb404__0_347 [label="return"];
    bb403__0_347 -> bb706__0_347 [label="unwind"];
    bb404__0_347 -> bb405__0_347 [label="return"];
    bb404__0_347 -> bb707__0_347 [label="unwind"];
    bb405__0_347 -> bb406__0_347 [label="return"];
    bb405__0_347 -> bb708__0_347 [label="unwind"];
    bb406__0_347 -> bb407__0_347 [label="return"];
    bb406__0_347 -> bb710__0_347 [label="unwind"];
    bb407__0_347 -> bb410__0_347 [label="0"];
    bb407__0_347 -> bb408__0_347 [label="otherwise"];
    bb408__0_347 -> bb409__0_347 [label="return"];
    bb408__0_347 -> bb710__0_347 [label="unwind"];
    bb409__0_347 -> bb422__0_347 [label=""];
    bb410__0_347 -> bb420__0_347 [label="0"];
    bb410__0_347 -> bb411__0_347 [label="otherwise"];
    bb411__0_347 -> bb412__0_347 [label="return"];
    bb411__0_347 -> bb710__0_347 [label="unwind"];
    bb412__0_347 -> bb413__0_347 [label="return"];
    bb412__0_347 -> bb710__0_347 [label="unwind"];
    bb413__0_347 -> bb414__0_347 [label="return"];
    bb413__0_347 -> bb710__0_347 [label="unwind"];
    bb414__0_347 -> bb415__0_347 [label="return"];
    bb414__0_347 -> bb710__0_347 [label="unwind"];
    bb415__0_347 -> bb416__0_347 [label="return"];
    bb415__0_347 -> bb710__0_347 [label="unwind"];
    bb416__0_347 -> bb417__0_347 [label="return"];
    bb416__0_347 -> bb705__0_347 [label="unwind"];
    bb417__0_347 -> bb418__0_347 [label="return"];
    bb417__0_347 -> bb705__0_347 [label="unwind"];
    bb418__0_347 -> bb419__0_347 [label="return"];
    bb418__0_347 -> bb710__0_347 [label="unwind"];
    bb419__0_347 -> bb421__0_347 [label=""];
    bb420__0_347 -> bb421__0_347 [label=""];
    bb421__0_347 -> bb422__0_347 [label=""];
    bb422__0_347 -> bb664__0_347 [label=""];
    bb423__0_347 -> bb433__0_347 [label="0"];
    bb423__0_347 -> bb424__0_347 [label="otherwise"];
    bb424__0_347 -> bb425__0_347 [label="return"];
    bb424__0_347 -> bb749__0_347 [label="unwind"];
    bb425__0_347 -> bb426__0_347 [label="return"];
    bb425__0_347 -> bb749__0_347 [label="unwind"];
    bb426__0_347 -> bb427__0_347 [label="return"];
    bb426__0_347 -> bb749__0_347 [label="unwind"];
    bb427__0_347 -> bb428__0_347 [label="return"];
    bb427__0_347 -> bb749__0_347 [label="unwind"];
    bb428__0_347 -> bb429__0_347 [label="return"];
    bb428__0_347 -> bb749__0_347 [label="unwind"];
    bb429__0_347 -> bb430__0_347 [label="return"];
    bb429__0_347 -> bb704__0_347 [label="unwind"];
    bb430__0_347 -> bb431__0_347 [label="return"];
    bb430__0_347 -> bb704__0_347 [label="unwind"];
    bb431__0_347 -> bb432__0_347 [label="return"];
    bb431__0_347 -> bb749__0_347 [label="unwind"];
    bb432__0_347 -> bb670__0_347 [label=""];
    bb433__0_347 -> bb434__0_347 [label="return"];
    bb433__0_347 -> bb749__0_347 [label="unwind"];
    bb434__0_347 -> bb435__0_347 [label="return"];
    bb434__0_347 -> bb749__0_347 [label="unwind"];
    bb435__0_347 -> bb436__0_347 [label="0"];
    bb435__0_347 -> bb437__0_347 [label="1"];
    bb435__0_347 -> bb18__0_347 [label="otherwise"];
    bb436__0_347 -> bb439__0_347 [label="return"];
    bb436__0_347 -> bb749__0_347 [label="unwind"];
    bb437__0_347 -> bb438__0_347 [label="return"];
    bb437__0_347 -> bb749__0_347 [label="unwind"];
    bb438__0_347 -> bb663__0_347 [label=""];
    bb439__0_347 -> bb440__0_347 [label="return"];
    bb439__0_347 -> bb749__0_347 [label="unwind"];
    bb440__0_347 -> bb441__0_347 [label="0"];
    bb440__0_347 -> bb442__0_347 [label="1"];
    bb440__0_347 -> bb18__0_347 [label="otherwise"];
    bb441__0_347 -> bb444__0_347 [label="return"];
    bb441__0_347 -> bb749__0_347 [label="unwind"];
    bb442__0_347 -> bb443__0_347 [label="return"];
    bb442__0_347 -> bb749__0_347 [label="unwind"];
    bb443__0_347 -> bb662__0_347 [label=""];
    bb444__0_347 -> bb445__0_347 [label="return"];
    bb444__0_347 -> bb749__0_347 [label="unwind"];
    bb445__0_347 -> bb446__0_347 [label="0"];
    bb445__0_347 -> bb447__0_347 [label="1"];
    bb445__0_347 -> bb18__0_347 [label="otherwise"];
    bb446__0_347 -> bb449__0_347 [label="return"];
    bb446__0_347 -> bb749__0_347 [label="unwind"];
    bb447__0_347 -> bb448__0_347 [label="return"];
    bb447__0_347 -> bb749__0_347 [label="unwind"];
    bb448__0_347 -> bb661__0_347 [label=""];
    bb449__0_347 -> bb450__0_347 [label="return"];
    bb449__0_347 -> bb749__0_347 [label="unwind"];
    bb450__0_347 -> bb451__0_347 [label="0"];
    bb450__0_347 -> bb452__0_347 [label="1"];
    bb450__0_347 -> bb18__0_347 [label="otherwise"];
    bb451__0_347 -> bb454__0_347 [label="return"];
    bb451__0_347 -> bb749__0_347 [label="unwind"];
    bb452__0_347 -> bb453__0_347 [label="return"];
    bb452__0_347 -> bb749__0_347 [label="unwind"];
    bb453__0_347 -> bb660__0_347 [label=""];
    bb454__0_347 -> bb455__0_347 [label="return"];
    bb454__0_347 -> bb749__0_347 [label="unwind"];
    bb455__0_347 -> bb456__0_347 [label="return"];
    bb455__0_347 -> bb749__0_347 [label="unwind"];
    bb456__0_347 -> bb457__0_347 [label="0"];
    bb456__0_347 -> bb458__0_347 [label="1"];
    bb456__0_347 -> bb18__0_347 [label="otherwise"];
    bb457__0_347 -> bb461__0_347 [label="0"];
    bb457__0_347 -> bb460__0_347 [label="otherwise"];
    bb458__0_347 -> bb459__0_347 [label="return"];
    bb458__0_347 -> bb749__0_347 [label="unwind"];
    bb459__0_347 -> bb659__0_347 [label=""];
    bb460__0_347 -> bb462__0_347 [label="return"];
    bb460__0_347 -> bb749__0_347 [label="unwind"];
    bb461__0_347 -> bb463__0_347 [label="return"];
    bb461__0_347 -> bb749__0_347 [label="unwind"];
    bb462__0_347 -> bb659__0_347 [label=""];
    bb463__0_347 -> bb464__0_347 [label="return"];
    bb463__0_347 -> bb749__0_347 [label="unwind"];
    bb464__0_347 -> bb465__0_347 [label="0"];
    bb464__0_347 -> bb466__0_347 [label="1"];
    bb464__0_347 -> bb18__0_347 [label="otherwise"];
    bb465__0_347 -> bb468__0_347 [label="success"];
    bb465__0_347 -> bb749__0_347 [label="unwind"];
    bb466__0_347 -> bb467__0_347 [label="return"];
    bb466__0_347 -> bb749__0_347 [label="unwind"];
    bb467__0_347 -> bb658__0_347 [label=""];
    bb468__0_347 -> bb470__0_347 [label="0"];
    bb468__0_347 -> bb469__0_347 [label="otherwise"];
    bb469__0_347 -> bb471__0_347 [label=""];
    bb470__0_347 -> bb471__0_347 [label=""];
    bb471__0_347 -> bb472__0_347 [label="return"];
    bb471__0_347 -> bb749__0_347 [label="unwind"];
    bb472__0_347 -> bb473__0_347 [label="return"];
    bb472__0_347 -> bb749__0_347 [label="unwind"];
    bb473__0_347 -> bb474__0_347 [label="return"];
    bb473__0_347 -> bb749__0_347 [label="unwind"];
    bb474__0_347 -> bb475__0_347 [label="return"];
    bb474__0_347 -> bb749__0_347 [label="unwind"];
    bb475__0_347 -> bb476__0_347 [label="return"];
    bb475__0_347 -> bb749__0_347 [label="unwind"];
    bb476__0_347 -> bb477__0_347 [label="return"];
    bb476__0_347 -> bb749__0_347 [label="unwind"];
    bb477__0_347 -> bb478__0_347 [label="0"];
    bb477__0_347 -> bb479__0_347 [label="1"];
    bb477__0_347 -> bb18__0_347 [label="otherwise"];
    bb478__0_347 -> bb482__0_347 [label="0"];
    bb478__0_347 -> bb481__0_347 [label="otherwise"];
    bb479__0_347 -> bb480__0_347 [label="return"];
    bb479__0_347 -> bb749__0_347 [label="unwind"];
    bb480__0_347 -> bb657__0_347 [label=""];
    bb481__0_347 -> bb483__0_347 [label=""];
    bb482__0_347 -> bb484__0_347 [label="0"];
    bb482__0_347 -> bb483__0_347 [label="otherwise"];
    bb483__0_347 -> bb485__0_347 [label="return"];
    bb483__0_347 -> bb749__0_347 [label="unwind"];
    bb484__0_347 -> bb508__0_347 [label="return"];
    bb484__0_347 -> bb749__0_347 [label="unwind"];
    bb485__0_347 -> bb486__0_347 [label="return"];
    bb485__0_347 -> bb749__0_347 [label="unwind"];
    bb486__0_347 -> bb487__0_347 [label="return"];
    bb486__0_347 -> bb749__0_347 [label="unwind"];
    bb487__0_347 -> bb488__0_347 [label="return"];
    bb487__0_347 -> bb749__0_347 [label="unwind"];
    bb488__0_347 -> bb489__0_347 [label="return"];
    bb488__0_347 -> bb703__0_347 [label="unwind"];
    bb489__0_347 -> bb490__0_347 [label="return"];
    bb489__0_347 -> bb703__0_347 [label="unwind"];
    bb490__0_347 -> bb491__0_347 [label="return"];
    bb490__0_347 -> bb749__0_347 [label="unwind"];
    bb491__0_347 -> bb492__0_347 [label="return"];
    bb491__0_347 -> bb749__0_347 [label="unwind"];
    bb492__0_347 -> bb493__0_347 [label="return"];
    bb492__0_347 -> bb749__0_347 [label="unwind"];
    bb493__0_347 -> bb494__0_347 [label="return"];
    bb493__0_347 -> bb749__0_347 [label="unwind"];
    bb494__0_347 -> bb495__0_347 [label="return"];
    bb494__0_347 -> bb749__0_347 [label="unwind"];
    bb495__0_347 -> bb496__0_347 [label="return"];
    bb495__0_347 -> bb749__0_347 [label="unwind"];
    bb496__0_347 -> bb497__0_347 [label="return"];
    bb496__0_347 -> bb702__0_347 [label="unwind"];
    bb497__0_347 -> bb498__0_347 [label="return"];
    bb497__0_347 -> bb702__0_347 [label="unwind"];
    bb498__0_347 -> bb499__0_347 [label="return"];
    bb498__0_347 -> bb749__0_347 [label="unwind"];
    bb499__0_347 -> bb500__0_347 [label="return"];
    bb499__0_347 -> bb749__0_347 [label="unwind"];
    bb500__0_347 -> bb501__0_347 [label="return"];
    bb500__0_347 -> bb749__0_347 [label="unwind"];
    bb501__0_347 -> bb502__0_347 [label="return"];
    bb501__0_347 -> bb749__0_347 [label="unwind"];
    bb502__0_347 -> bb503__0_347 [label="return"];
    bb502__0_347 -> bb749__0_347 [label="unwind"];
    bb503__0_347 -> bb504__0_347 [label="return"];
    bb503__0_347 -> bb749__0_347 [label="unwind"];
    bb504__0_347 -> bb505__0_347 [label="return"];
    bb504__0_347 -> bb701__0_347 [label="unwind"];
    bb505__0_347 -> bb506__0_347 [label="return"];
    bb505__0_347 -> bb701__0_347 [label="unwind"];
    bb506__0_347 -> bb507__0_347 [label="return"];
    bb506__0_347 -> bb749__0_347 [label="unwind"];
    bb507__0_347 -> bb657__0_347 [label=""];
    bb508__0_347 -> bb509__0_347 [label="return"];
    bb508__0_347 -> bb749__0_347 [label="unwind"];
    bb509__0_347 -> bb510__0_347 [label="0"];
    bb509__0_347 -> bb511__0_347 [label="1"];
    bb509__0_347 -> bb18__0_347 [label="otherwise"];
    bb510__0_347 -> bb513__0_347 [label="return"];
    bb510__0_347 -> bb749__0_347 [label="unwind"];
    bb511__0_347 -> bb512__0_347 [label="return"];
    bb511__0_347 -> bb749__0_347 [label="unwind"];
    bb512__0_347 -> bb657__0_347 [label=""];
    bb513__0_347 -> bb514__0_347 [label="return"];
    bb513__0_347 -> bb749__0_347 [label="unwind"];
    bb514__0_347 -> bb515__0_347 [label="0"];
    bb514__0_347 -> bb516__0_347 [label="1"];
    bb514__0_347 -> bb18__0_347 [label="otherwise"];
    bb515__0_347 -> bb518__0_347 [label="return"];
    bb515__0_347 -> bb700__0_347 [label="unwind"];
    bb516__0_347 -> bb517__0_347 [label="return"];
    bb516__0_347 -> bb746__0_347 [label="unwind"];
    bb517__0_347 -> bb656__0_347 [label=""];
    bb518__0_347 -> bb519__0_347 [label="return"];
    bb518__0_347 -> bb700__0_347 [label="unwind"];
    bb519__0_347 -> bb520__0_347 [label="return"];
    bb519__0_347 -> bb700__0_347 [label="unwind"];
    bb520__0_347 -> bb521__0_347 [label="0"];
    bb520__0_347 -> bb522__0_347 [label="1"];
    bb520__0_347 -> bb18__0_347 [label="otherwise"];
    bb521__0_347 -> bb524__0_347 [label="return"];
    bb521__0_347 -> bb700__0_347 [label="unwind"];
    bb522__0_347 -> bb523__0_347 [label="return"];
    bb522__0_347 -> bb700__0_347 [label="unwind"];
    bb523__0_347 -> bb654__0_347 [label=""];
    bb524__0_347 -> bb525__0_347 [label="return"];
    bb524__0_347 -> bb700__0_347 [label="unwind"];
    bb525__0_347 -> bb526__0_347 [label="0"];
    bb525__0_347 -> bb527__0_347 [label="1"];
    bb525__0_347 -> bb18__0_347 [label="otherwise"];
    bb526__0_347 -> bb529__0_347 [label="return"];
    bb526__0_347 -> bb700__0_347 [label="unwind"];
    bb527__0_347 -> bb528__0_347 [label="return"];
    bb527__0_347 -> bb700__0_347 [label="unwind"];
    bb528__0_347 -> bb654__0_347 [label=""];
    bb529__0_347 -> bb530__0_347 [label="return"];
    bb529__0_347 -> bb700__0_347 [label="unwind"];
    bb530__0_347 -> bb531__0_347 [label="return"];
    bb530__0_347 -> bb700__0_347 [label="unwind"];
    bb531__0_347 -> bb532__0_347 [label="0"];
    bb531__0_347 -> bb533__0_347 [label="1"];
    bb531__0_347 -> bb18__0_347 [label="otherwise"];
    bb532__0_347 -> bb535__0_347 [label="return"];
    bb532__0_347 -> bb700__0_347 [label="unwind"];
    bb533__0_347 -> bb534__0_347 [label="return"];
    bb533__0_347 -> bb700__0_347 [label="unwind"];
    bb534__0_347 -> bb653__0_347 [label=""];
    bb535__0_347 -> bb536__0_347 [label="return"];
    bb535__0_347 -> bb700__0_347 [label="unwind"];
    bb536__0_347 -> bb537__0_347 [label="0"];
    bb536__0_347 -> bb538__0_347 [label="1"];
    bb536__0_347 -> bb18__0_347 [label="otherwise"];
    bb537__0_347 -> bb540__0_347 [label="return"];
    bb537__0_347 -> bb749__0_347 [label="unwind"];
    bb538__0_347 -> bb539__0_347 [label="return"];
    bb538__0_347 -> bb700__0_347 [label="unwind"];
    bb539__0_347 -> bb653__0_347 [label=""];
    bb540__0_347 -> bb541__0_347 [label="return"];
    bb540__0_347 -> bb749__0_347 [label="unwind"];
    bb541__0_347 -> bb542__0_347 [label="return"];
    bb541__0_347 -> bb749__0_347 [label="unwind"];
    bb542__0_347 -> bb543__0_347 [label="0"];
    bb542__0_347 -> bb544__0_347 [label="1"];
    bb542__0_347 -> bb18__0_347 [label="otherwise"];
    bb543__0_347 -> bb546__0_347 [label="return"];
    bb543__0_347 -> bb699__0_347 [label="unwind"];
    bb544__0_347 -> bb545__0_347 [label="return"];
    bb544__0_347 -> bb745__0_347 [label="unwind"];
    bb545__0_347 -> bb652__0_347 [label=""];
    bb546__0_347 -> bb547__0_347 [label="return"];
    bb546__0_347 -> bb699__0_347 [label="unwind"];
    bb547__0_347 -> bb548__0_347 [label="0"];
    bb547__0_347 -> bb549__0_347 [label="1"];
    bb547__0_347 -> bb18__0_347 [label="otherwise"];
    bb548__0_347 -> bb551__0_347 [label="return"];
    bb548__0_347 -> bb699__0_347 [label="unwind"];
    bb549__0_347 -> bb550__0_347 [label="return"];
    bb549__0_347 -> bb699__0_347 [label="unwind"];
    bb550__0_347 -> bb651__0_347 [label=""];
    bb551__0_347 -> bb552__0_347 [label="return"];
    bb551__0_347 -> bb699__0_347 [label="unwind"];
    bb552__0_347 -> bb553__0_347 [label="return"];
    bb552__0_347 -> bb699__0_347 [label="unwind"];
    bb553__0_347 -> bb554__0_347 [label="0"];
    bb553__0_347 -> bb555__0_347 [label="1"];
    bb553__0_347 -> bb18__0_347 [label="otherwise"];
    bb554__0_347 -> bb557__0_347 [label="success"];
    bb554__0_347 -> bb699__0_347 [label="unwind"];
    bb555__0_347 -> bb556__0_347 [label="return"];
    bb555__0_347 -> bb699__0_347 [label="unwind"];
    bb556__0_347 -> bb650__0_347 [label=""];
    bb557__0_347 -> bb558__0_347 [label="return"];
    bb557__0_347 -> bb699__0_347 [label="unwind"];
    bb558__0_347 -> bb559__0_347 [label="return"];
    bb558__0_347 -> bb699__0_347 [label="unwind"];
    bb559__0_347 -> bb560__0_347 [label="0"];
    bb559__0_347 -> bb561__0_347 [label="1"];
    bb559__0_347 -> bb18__0_347 [label="otherwise"];
    bb560__0_347 -> bb563__0_347 [label="return"];
    bb560__0_347 -> bb699__0_347 [label="unwind"];
    bb561__0_347 -> bb562__0_347 [label="return"];
    bb561__0_347 -> bb699__0_347 [label="unwind"];
    bb562__0_347 -> bb650__0_347 [label=""];
    bb563__0_347 -> bb564__0_347 [label="return"];
    bb563__0_347 -> bb699__0_347 [label="unwind"];
    bb564__0_347 -> bb565__0_347 [label="0"];
    bb564__0_347 -> bb566__0_347 [label="1"];
    bb564__0_347 -> bb18__0_347 [label="otherwise"];
    bb565__0_347 -> bb568__0_347 [label="return"];
    bb565__0_347 -> bb699__0_347 [label="unwind"];
    bb566__0_347 -> bb567__0_347 [label="return"];
    bb566__0_347 -> bb699__0_347 [label="unwind"];
    bb567__0_347 -> bb649__0_347 [label=""];
    bb568__0_347 -> bb569__0_347 [label="return"];
    bb568__0_347 -> bb699__0_347 [label="unwind"];
    bb569__0_347 -> bb570__0_347 [label="return"];
    bb569__0_347 -> bb699__0_347 [label="unwind"];
    bb570__0_347 -> bb571__0_347 [label="0"];
    bb570__0_347 -> bb572__0_347 [label="1"];
    bb570__0_347 -> bb18__0_347 [label="otherwise"];
    bb571__0_347 -> bb574__0_347 [label="return"];
    bb571__0_347 -> bb699__0_347 [label="unwind"];
    bb572__0_347 -> bb573__0_347 [label="return"];
    bb572__0_347 -> bb699__0_347 [label="unwind"];
    bb573__0_347 -> bb648__0_347 [label=""];
    bb574__0_347 -> bb575__0_347 [label="return"];
    bb574__0_347 -> bb699__0_347 [label="unwind"];
    bb575__0_347 -> bb576__0_347 [label="0"];
    bb575__0_347 -> bb577__0_347 [label="1"];
    bb575__0_347 -> bb18__0_347 [label="otherwise"];
    bb576__0_347 -> bb579__0_347 [label="return"];
    bb576__0_347 -> bb749__0_347 [label="unwind"];
    bb577__0_347 -> bb578__0_347 [label="return"];
    bb577__0_347 -> bb699__0_347 [label="unwind"];
    bb578__0_347 -> bb648__0_347 [label=""];
    bb579__0_347 -> bb580__0_347 [label="return"];
    bb579__0_347 -> bb749__0_347 [label="unwind"];
    bb580__0_347 -> bb581__0_347 [label="return"];
    bb580__0_347 -> bb749__0_347 [label="unwind"];
    bb581__0_347 -> bb582__0_347 [label="0"];
    bb581__0_347 -> bb583__0_347 [label="1"];
    bb581__0_347 -> bb18__0_347 [label="otherwise"];
    bb582__0_347 -> bb585__0_347 [label="return"];
    bb582__0_347 -> bb749__0_347 [label="unwind"];
    bb583__0_347 -> bb584__0_347 [label="return"];
    bb583__0_347 -> bb749__0_347 [label="unwind"];
    bb584__0_347 -> bb657__0_347 [label=""];
    bb585__0_347 -> bb586__0_347 [label="return"];
    bb585__0_347 -> bb749__0_347 [label="unwind"];
    bb586__0_347 -> bb587__0_347 [label="0"];
    bb586__0_347 -> bb588__0_347 [label="1"];
    bb586__0_347 -> bb18__0_347 [label="otherwise"];
    bb587__0_347 -> bb590__0_347 [label="return"];
    bb587__0_347 -> bb749__0_347 [label="unwind"];
    bb588__0_347 -> bb589__0_347 [label="return"];
    bb588__0_347 -> bb749__0_347 [label="unwind"];
    bb589__0_347 -> bb647__0_347 [label=""];
    bb590__0_347 -> bb591__0_347 [label="return"];
    bb590__0_347 -> bb749__0_347 [label="unwind"];
    bb591__0_347 -> bb592__0_347 [label="0"];
    bb591__0_347 -> bb593__0_347 [label="1"];
    bb591__0_347 -> bb18__0_347 [label="otherwise"];
    bb592__0_347 -> bb596__0_347 [label="0"];
    bb592__0_347 -> bb595__0_347 [label="otherwise"];
    bb593__0_347 -> bb594__0_347 [label="return"];
    bb593__0_347 -> bb749__0_347 [label="unwind"];
    bb594__0_347 -> bb647__0_347 [label=""];
    bb595__0_347 -> bb597__0_347 [label="return"];
    bb595__0_347 -> bb749__0_347 [label="unwind"];
    bb596__0_347 -> bb598__0_347 [label="return"];
    bb596__0_347 -> bb749__0_347 [label="unwind"];
    bb597__0_347 -> bb603__0_347 [label=""];
    bb598__0_347 -> bb601__0_347 [label="0"];
    bb598__0_347 -> bb599__0_347 [label="otherwise"];
    bb599__0_347 -> bb600__0_347 [label="return"];
    bb599__0_347 -> bb749__0_347 [label="unwind"];
    bb600__0_347 -> bb602__0_347 [label=""];
    bb601__0_347 -> bb602__0_347 [label=""];
    bb602__0_347 -> bb603__0_347 [label=""];
    bb603__0_347 -> bb604__0_347 [label="return"];
    bb603__0_347 -> bb749__0_347 [label="unwind"];
    bb604__0_347 -> bb605__0_347 [label="return"];
    bb604__0_347 -> bb749__0_347 [label="unwind"];
    bb605__0_347 -> bb606__0_347 [label="0"];
    bb605__0_347 -> bb607__0_347 [label="1"];
    bb605__0_347 -> bb18__0_347 [label="otherwise"];
    bb606__0_347 -> bb610__0_347 [label="0"];
    bb606__0_347 -> bb609__0_347 [label="otherwise"];
    bb607__0_347 -> bb608__0_347 [label="return"];
    bb607__0_347 -> bb749__0_347 [label="unwind"];
    bb608__0_347 -> bb646__0_347 [label=""];
    bb609__0_347 -> bb618__0_347 [label=""];
    bb610__0_347 -> bb611__0_347 [label="return"];
    bb610__0_347 -> bb749__0_347 [label="unwind"];
    bb611__0_347 -> bb612__0_347 [label="return"];
    bb611__0_347 -> bb749__0_347 [label="unwind"];
    bb612__0_347 -> bb613__0_347 [label="return"];
    bb612__0_347 -> bb749__0_347 [label="unwind"];
    bb613__0_347 -> bb614__0_347 [label="return"];
    bb613__0_347 -> bb698__0_347 [label="unwind"];
    bb614__0_347 -> bb615__0_347 [label="return"];
    bb614__0_347 -> bb698__0_347 [label="unwind"];
    bb615__0_347 -> bb616__0_347 [label="return"];
    bb615__0_347 -> bb749__0_347 [label="unwind"];
    bb616__0_347 -> bb617__0_347 [label="return"];
    bb616__0_347 -> bb749__0_347 [label="unwind"];
    bb617__0_347 -> bb618__0_347 [label=""];
    bb618__0_347 -> bb619__0_347 [label="return"];
    bb618__0_347 -> bb749__0_347 [label="unwind"];
    bb619__0_347 -> bb620__0_347 [label="0"];
    bb619__0_347 -> bb621__0_347 [label="1"];
    bb619__0_347 -> bb18__0_347 [label="otherwise"];
    bb620__0_347 -> bb623__0_347 [label="return"];
    bb620__0_347 -> bb749__0_347 [label="unwind"];
    bb621__0_347 -> bb622__0_347 [label="return"];
    bb621__0_347 -> bb749__0_347 [label="unwind"];
    bb622__0_347 -> bb646__0_347 [label=""];
    bb623__0_347 -> bb624__0_347 [label="return"];
    bb623__0_347 -> bb749__0_347 [label="unwind"];
    bb624__0_347 -> bb625__0_347 [label="0"];
    bb624__0_347 -> bb626__0_347 [label="1"];
    bb624__0_347 -> bb18__0_347 [label="otherwise"];
    bb625__0_347 -> bb628__0_347 [label="return"];
    bb625__0_347 -> bb697__0_347 [label="unwind"];
    bb626__0_347 -> bb627__0_347 [label="return"];
    bb626__0_347 -> bb744__0_347 [label="unwind"];
    bb627__0_347 -> bb645__0_347 [label=""];
    bb628__0_347 -> bb629__0_347 [label="return"];
    bb628__0_347 -> bb697__0_347 [label="unwind"];
    bb629__0_347 -> bb630__0_347 [label="return"];
    bb629__0_347 -> bb697__0_347 [label="unwind"];
    bb630__0_347 -> bb631__0_347 [label="return"];
    bb630__0_347 -> bb697__0_347 [label="unwind"];
    bb631__0_347 -> bb632__0_347 [label="0"];
    bb631__0_347 -> bb633__0_347 [label="1"];
    bb631__0_347 -> bb18__0_347 [label="otherwise"];
    bb632__0_347 -> bb635__0_347 [label="return"];
    bb632__0_347 -> bb749__0_347 [label="unwind"];
    bb633__0_347 -> bb634__0_347 [label="return"];
    bb633__0_347 -> bb697__0_347 [label="unwind"];
    bb634__0_347 -> bb644__0_347 [label="return"];
    bb634__0_347 -> bb749__0_347 [label="unwind"];
    bb635__0_347 -> bb636__0_347 [label="return"];
    bb635__0_347 -> bb749__0_347 [label="unwind"];
    bb636__0_347 -> bb637__0_347 [label="return"];
    bb636__0_347 -> bb749__0_347 [label="unwind"];
    bb637__0_347 -> bb638__0_347 [label="return"];
    bb637__0_347 -> bb696__0_347 [label="unwind"];
    bb638__0_347 -> bb639__0_347 [label="return"];
    bb638__0_347 -> bb695__0_347 [label="unwind"];
    bb639__0_347 -> bb640__0_347 [label="return"];
    bb639__0_347 -> bb695__0_347 [label="unwind"];
    bb640__0_347 -> bb641__0_347 [label="return"];
    bb640__0_347 -> bb696__0_347 [label="unwind"];
    bb641__0_347 -> bb642__0_347 [label="return"];
    bb641__0_347 -> bb749__0_347 [label="unwind"];
    bb642__0_347 -> bb643__0_347 [label="return"];
    bb642__0_347 -> bb757__0_347 [label="unwind"];
    bb643__0_347 -> bb694__0_347 [label=""];
    bb644__0_347 -> bb645__0_347 [label=""];
    bb645__0_347 -> bb646__0_347 [label=""];
    bb646__0_347 -> bb647__0_347 [label=""];
    bb647__0_347 -> bb657__0_347 [label=""];
    bb648__0_347 -> bb649__0_347 [label=""];
    bb649__0_347 -> bb651__0_347 [label=""];
    bb650__0_347 -> bb651__0_347 [label=""];
    bb651__0_347 -> bb652__0_347 [label="return"];
    bb651__0_347 -> bb749__0_347 [label="unwind"];
    bb652__0_347 -> bb657__0_347 [label=""];
    bb653__0_347 -> bb655__0_347 [label=""];
    bb654__0_347 -> bb655__0_347 [label=""];
    bb655__0_347 -> bb656__0_347 [label="return"];
    bb655__0_347 -> bb749__0_347 [label="unwind"];
    bb656__0_347 -> bb657__0_347 [label=""];
    bb657__0_347 -> bb658__0_347 [label=""];
    bb658__0_347 -> bb659__0_347 [label=""];
    bb659__0_347 -> bb660__0_347 [label=""];
    bb660__0_347 -> bb661__0_347 [label=""];
    bb661__0_347 -> bb662__0_347 [label=""];
    bb662__0_347 -> bb663__0_347 [label=""];
    bb663__0_347 -> bb670__0_347 [label=""];
    bb664__0_347 -> bb665__0_347 [label="return"];
    bb664__0_347 -> bb749__0_347 [label="unwind"];
    bb665__0_347 -> bb666__0_347 [label=""];
    bb666__0_347 -> bb667__0_347 [label=""];
    bb667__0_347 -> bb668__0_347 [label=""];
    bb668__0_347 -> bb669__0_347 [label=""];
    bb669__0_347 -> bb670__0_347 [label=""];
    bb670__0_347 -> bb737__0_347 [label=""];
    bb671__0_347 -> bb672__0_347 [label=""];
    bb672__0_347 -> bb675__0_347 [label=""];
    bb673__0_347 -> bb674__0_347 [label=""];
    bb674__0_347 -> bb675__0_347 [label=""];
    bb675__0_347 -> bb684__0_347 [label=""];
    bb676__0_347 -> bb677__0_347 [label="return"];
    bb676__0_347 -> bb757__0_347 [label="unwind"];
    bb677__0_347 -> bb683__0_347 [label=""];
    bb678__0_347 -> bb679__0_347 [label="return"];
    bb678__0_347 -> bb757__0_347 [label="unwind"];
    bb679__0_347 -> bb680__0_347 [label=""];
    bb680__0_347 -> bb681__0_347 [label=""];
    bb681__0_347 -> bb682__0_347 [label=""];
    bb682__0_347 -> bb683__0_347 [label=""];
    bb683__0_347 -> bb684__0_347 [label=""];
    bb684__0_347 -> bb741__0_347 [label=""];
    bb685__0_347 -> bb691__0_347 [label=""];
    bb686__0_347 -> bb687__0_347 [label=""];
    bb687__0_347 -> bb688__0_347 [label=""];
    bb688__0_347 -> bb689__0_347 [label=""];
    bb689__0_347 -> bb690__0_347 [label="return"];
    bb689__0_347 -> bb757__0_347 [label="unwind"];
    bb690__0_347 -> bb691__0_347 [label=""];
    bb691__0_347 -> bb741__0_347 [label=""];
    bb692__0_347 -> bb743__0_347 [label=""];
    bb693__0_347 -> bb694__0_347 [label=""];
    bb695__0_347 -> bb696__0_347 [label="return"];
    bb696__0_347 -> bb749__0_347 [label="return"];
    bb697__0_347 -> bb749__0_347 [label="return"];
    bb698__0_347 -> bb749__0_347 [label="return"];
    bb699__0_347 -> bb749__0_347 [label="return"];
    bb700__0_347 -> bb749__0_347 [label="return"];
    bb701__0_347 -> bb749__0_347 [label="return"];
    bb702__0_347 -> bb749__0_347 [label="return"];
    bb703__0_347 -> bb749__0_347 [label="return"];
    bb704__0_347 -> bb749__0_347 [label="return"];
    bb705__0_347 -> bb710__0_347 [label="return"];
    bb706__0_347 -> bb707__0_347 [label="return"];
    bb707__0_347 -> bb708__0_347 [label="return"];
    bb708__0_347 -> bb710__0_347 [label="return"];
    bb709__0_347 -> bb710__0_347 [label="return"];
    bb710__0_347 -> bb749__0_347 [label="return"];
    bb711__0_347 -> bb757__0_347 [label="return"];
    bb712__0_347 -> bb713__0_347 [label="return"];
    bb713__0_347 -> bb757__0_347 [label="return"];
    bb714__0_347 -> bb757__0_347 [label="return"];
    bb715__0_347 -> bb757__0_347 [label="return"];
    bb716__0_347 -> bb757__0_347 [label="return"];
    bb717__0_347 -> bb720__0_347 [label="return"];
    bb718__0_347 -> bb720__0_347 [label="return"];
    bb719__0_347 -> bb720__0_347 [label="return"];
    bb720__0_347 -> bb757__0_347 [label="return"];
    bb721__0_347 -> bb754__0_347 [label="return"];
    bb722__0_347 -> bb755__0_347 [label="return"];
    bb723__0_347 -> bb757__0_347 [label="return"];
    bb724__0_347 -> bb757__0_347 [label="return"];
    bb725__0_347 -> bb760__0_347 [label="return"];
    bb726__0_347 -> bb760__0_347 [label="return"];
    bb727__0_347 -> bb733__0_347 [label="return"];
    bb728__0_347 -> bb733__0_347 [label="return"];
    bb729__0_347 -> bb733__0_347 [label="return"];
    bb730__0_347 -> bb733__0_347 [label="return"];
    bb731__0_347 -> bb733__0_347 [label="return"];
    bb732__0_347 -> bb733__0_347 [label="return"];
    bb734__0_347 -> bb148__0_347 [label="return"];
    bb734__0_347 -> bb757__0_347 [label="unwind"];
    bb735__0_347 -> bb159__0_347 [label="return"];
    bb735__0_347 -> bb757__0_347 [label="unwind"];
    bb736__0_347 -> bb671__0_347 [label="return"];
    bb736__0_347 -> bb757__0_347 [label="unwind"];
    bb737__0_347 -> bb671__0_347 [label="0"];
    bb737__0_347 -> bb736__0_347 [label="otherwise"];
    bb738__0_347 -> bb741__0_347 [label=""];
    bb739__0_347 -> bb741__0_347 [label=""];
    bb740__0_347 -> bb692__0_347 [label="return"];
    bb740__0_347 -> bb760__0_347 [label="unwind"];
    bb741__0_347 -> bb692__0_347 [label="0"];
    bb741__0_347 -> bb740__0_347 [label="otherwise"];
    bb742__0_347 -> bb693__0_347 [label="return"];
    bb742__0_347 -> bb733__0_347 [label="unwind"];
    bb743__0_347 -> bb693__0_347 [label="0"];
    bb743__0_347 -> bb742__0_347 [label="otherwise"];
    bb744__0_347 -> bb749__0_347 [label=""];
    bb745__0_347 -> bb749__0_347 [label=""];
    bb746__0_347 -> bb749__0_347 [label=""];
    bb747__0_347 -> bb749__0_347 [label=""];
    bb748__0_347 -> bb757__0_347 [label="return"];
    bb749__0_347 -> bb757__0_347 [label="0"];
    bb749__0_347 -> bb748__0_347 [label="otherwise"];
    bb750__0_347 -> bb757__0_347 [label=""];
    bb751__0_347 -> bb713__0_347 [label=""];
    bb752__0_347 -> bb757__0_347 [label=""];
    bb753__0_347 -> bb757__0_347 [label=""];
    bb754__0_347 -> bb757__0_347 [label=""];
    bb755__0_347 -> bb757__0_347 [label=""];
    bb756__0_347 -> bb760__0_347 [label="return"];
    bb757__0_347 -> bb760__0_347 [label="0"];
    bb757__0_347 -> bb756__0_347 [label="otherwise"];
    bb758__0_347 -> bb760__0_347 [label=""];
    bb759__0_347 -> bb733__0_347 [label="return"];
    bb760__0_347 -> bb733__0_347 [label="0"];
    bb760__0_347 -> bb759__0_347 [label="otherwise"];
    bb761__0_347 -> bb733__0_347 [label=""];
}
