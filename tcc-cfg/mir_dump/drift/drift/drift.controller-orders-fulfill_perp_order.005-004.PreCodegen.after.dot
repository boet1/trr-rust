digraph Mir_0_531 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn fulfill_perp_order(_1: &amp;ReErased mut state::user::User, _2: usize, _3: &amp;ReErased anchor_lang::prelude::Pubkey, _4: &amp;ReErased mut state::user::UserStats, _5: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _6: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;, _7: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)], _8: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;, _9: &amp;ReErased anchor_lang::prelude::Pubkey, _10: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;, _11: std::option::Option&lt;(anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey)&gt;, _12: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _13: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _14: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _15: &amp;ReErased state::state::FeeStructure, _16: u64, _17: std::option::Option&lt;i64&gt;, _18: i64, _19: u64, _20: u8, _21: state::perp_market::AMMAvailability, _22: state::fill_mode::FillMode, _23: bool) -&gt; std::result::Result&lt;(u64, u64), error::ErrorCode&gt;<br align="left"/>let _24: u16;<br align="left"/>let _25: usize;<br align="left"/>let mut _26: usize;<br align="left"/>let mut _27: bool;<br align="left"/>let _28: bool;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _30: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _31: &amp;ReErased state::user::User;<br align="left"/>let mut _32: u16;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: bool;<br align="left"/>let _39: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _41: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _42: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased u16;<br align="left"/>let _44: &amp;ReErased u16;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _50: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;u64&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased state::fill_mode::FillMode;<br align="left"/>let mut _54: &amp;ReErased state::user::Order;<br align="left"/>let _55: &amp;ReErased state::user::Order;<br align="left"/>let _56: usize;<br align="left"/>let mut _57: usize;<br align="left"/>let mut _58: bool;<br align="left"/>let mut _59: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _60: u64;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _63: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _66: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _67: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: std::option::Option&lt;u64&gt;;<br align="left"/>let _73: u128;<br align="left"/>let mut _74: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _75: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _76: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _77: ();<br align="left"/>let mut _78: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _79: std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let _80: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _82: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _83: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased u16;<br align="left"/>let _85: &amp;ReErased u16;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _91: i64;<br align="left"/>let mut _92: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _94: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _95: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _97: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _98: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _99: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _100: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _101: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _108: std::result::Result&lt;std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _109: &amp;ReErased state::user::Order;<br align="left"/>let _110: &amp;ReErased state::user::Order;<br align="left"/>let _111: usize;<br align="left"/>let mut _112: usize;<br align="left"/>let mut _113: bool;<br align="left"/>let mut _114: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)];<br align="left"/>let mut _115: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _116: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _117: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _118: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _119: u64;<br align="left"/>let mut _120: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _123: state::perp_market::AMMAvailability;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: u8;<br align="left"/>let mut _126: state::fill_mode::FillMode;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _131: std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let _132: ();<br align="left"/>let mut _133: bool;<br align="left"/>let mut _134: &amp;ReErased std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: (u64, u64);<br align="left"/>let mut _137: u64;<br align="left"/>let mut _138: u64;<br align="left"/>let mut _139: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let _140: controller::position::PositionDirection;<br align="left"/>let mut _141: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _142: usize;<br align="left"/>let mut _143: usize;<br align="left"/>let mut _144: bool;<br align="left"/>let _145: ();<br align="left"/>let mut _146: std::slice::Iter&lt;ReErased, state::fulfillment::PerpFulfillmentMethod&gt;;<br align="left"/>let mut _147: std::slice::Iter&lt;ReErased, state::fulfillment::PerpFulfillmentMethod&gt;;<br align="left"/>let mut _148: &amp;ReErased [state::fulfillment::PerpFulfillmentMethod];<br align="left"/>let _149: &amp;ReErased [state::fulfillment::PerpFulfillmentMethod];<br align="left"/>let mut _150: &amp;ReErased std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod, std::alloc::Global&gt;;<br align="left"/>let mut _151: std::slice::Iter&lt;ReErased, state::fulfillment::PerpFulfillmentMethod&gt;;<br align="left"/>let mut _152: ();<br align="left"/>let _153: ();<br align="left"/>let mut _154: std::option::Option&lt;&amp;ReErased state::fulfillment::PerpFulfillmentMethod&gt;;<br align="left"/>let mut _155: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::fulfillment::PerpFulfillmentMethod&gt;;<br align="left"/>let mut _156: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::fulfillment::PerpFulfillmentMethod&gt;;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: !;<br align="left"/>let _159: &amp;ReErased state::fulfillment::PerpFulfillmentMethod;<br align="left"/>let _160: ();<br align="left"/>let mut _161: bool;<br align="left"/>let mut _162: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _163: usize;<br align="left"/>let mut _164: usize;<br align="left"/>let mut _165: bool;<br align="left"/>let mut _166: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _167: state::user::OrderStatus;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _170: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _171: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _172: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased u16;<br align="left"/>let _174: &amp;ReErased u16;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _179: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _180: controller::position::PositionDirection;<br align="left"/>let _181: usize;<br align="left"/>let mut _182: usize;<br align="left"/>let mut _183: bool;<br align="left"/>let _184: u64;<br align="left"/>let _185: u64;<br align="left"/>let mut _186: (u64, u64);<br align="left"/>let mut _187: isize;<br align="left"/>let _188: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _189: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _190: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _191: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _192: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;)&gt;;<br align="left"/>let mut _193: std::result::Result&lt;(std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _194: &amp;ReErased std::option::Option&lt;(anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey)&gt;;<br align="left"/>let _195: &amp;ReErased std::option::Option&lt;(anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey)&gt;;<br align="left"/>let mut _196: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _197: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _198: std::option::Option&lt;&amp;ReErased state::user::User&gt;;<br align="left"/>let mut _199: isize;<br align="left"/>let _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _203: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _204: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _205: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _206: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _207: bool;<br align="left"/>let mut _208: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _210: bool;<br align="left"/>let mut _211: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let _212: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _213: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _214: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _215: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _216: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _217: isize;<br align="left"/>let _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _219: !;<br align="left"/>let mut _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _221: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _222: bool;<br align="left"/>let mut _223: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _224: &amp;ReErased state::user::User;<br align="left"/>let mut _225: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _226: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _227: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _228: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let _229: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _230: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _231: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _232: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _233: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _234: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _235: &amp;ReErased state::user::User;<br align="left"/>let mut _236: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _237: isize;<br align="left"/>let _238: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _239: !;<br align="left"/>let mut _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _241: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _242: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _243: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _244: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _245: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _246: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _247: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let _248: u64;<br align="left"/>let _249: u64;<br align="left"/>let mut _250: (u64, u64);<br align="left"/>let mut _251: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64)&gt;;<br align="left"/>let mut _252: std::result::Result&lt;(u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _253: &amp;ReErased mut state::user::User;<br align="left"/>let mut _254: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _255: usize;<br align="left"/>let mut _256: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _257: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _258: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _259: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _260: u64;<br align="left"/>let mut _261: i64;<br align="left"/>let mut _262: u64;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _264: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _265: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _266: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _267: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _268: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _269: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _270: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _271: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _272: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _273: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _274: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _275: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _276: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _277: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _278: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _279: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _280: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _281: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _282: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _283: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _284: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _285: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _286: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _287: bool;<br align="left"/>let mut _288: &amp;ReErased state::fill_mode::FillMode;<br align="left"/>let mut _289: isize;<br align="left"/>let _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _291: !;<br align="left"/>let mut _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _293: (u64, u64);<br align="left"/>let mut _294: u64;<br align="left"/>let mut _295: u64;<br align="left"/>let _296: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _297: &amp;ReErased u16;<br align="left"/>let _298: &amp;ReErased u64;<br align="left"/>let mut _299: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _300: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _301: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _302: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _303: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _304: isize;<br align="left"/>let _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _306: !;<br align="left"/>let mut _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _308: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _309: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _310: bool;<br align="left"/>let mut _311: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _312: &amp;ReErased state::user::User;<br align="left"/>let mut _313: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _314: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _315: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _316: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _317: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _318: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _319: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _320: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _321: &amp;ReErased state::user::User;<br align="left"/>let mut _322: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _323: isize;<br align="left"/>let _324: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _325: !;<br align="left"/>let mut _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _327: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _328: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _329: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _330: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _331: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;)&gt;;<br align="left"/>let mut _332: std::result::Result&lt;(std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _333: &amp;ReErased std::option::Option&lt;(anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey)&gt;;<br align="left"/>let _334: &amp;ReErased std::option::Option&lt;(anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey)&gt;;<br align="left"/>let mut _335: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _336: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _337: std::option::Option&lt;&amp;ReErased state::user::User&gt;;<br align="left"/>let mut _338: &amp;ReErased state::user::User;<br align="left"/>let _339: &amp;ReErased state::user::User;<br align="left"/>let mut _340: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _341: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _342: isize;<br align="left"/>let _343: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _344: !;<br align="left"/>let mut _345: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _346: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let _347: u64;<br align="left"/>let _348: u64;<br align="left"/>let _349: u64;<br align="left"/>let mut _350: (u64, u64, u64);<br align="left"/>let mut _351: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64, u64)&gt;;<br align="left"/>let mut _352: std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _353: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _354: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _355: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _356: &amp;ReErased mut state::user::User;<br align="left"/>let mut _357: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _358: usize;<br align="left"/>let mut _359: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _360: &amp;ReErased mut state::user::User;<br align="left"/>let mut _361: &amp;ReErased mut state::user::User;<br align="left"/>let mut _362: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _363: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _364: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _365: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _366: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _367: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _368: usize;<br align="left"/>let mut _369: u16;<br align="left"/>let mut _370: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _371: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _372: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _373: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _374: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _375: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _376: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _377: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _378: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _379: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _380: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _381: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _382: u64;<br align="left"/>let mut _383: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _384: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _385: u64;<br align="left"/>let mut _386: i64;<br align="left"/>let mut _387: u64;<br align="left"/>let mut _388: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _389: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _390: bool;<br align="left"/>let mut _391: &amp;ReErased state::fill_mode::FillMode;<br align="left"/>let mut _392: isize;<br align="left"/>let _393: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _394: !;<br align="left"/>let mut _395: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _396: (u64, u64, u64);<br align="left"/>let _397: ();<br align="left"/>let mut _398: bool;<br align="left"/>let mut _399: u64;<br align="left"/>let _400: ();<br align="left"/>let mut _401: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _402: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _403: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _404: &amp;ReErased mut std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _405: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _406: controller::position::PositionDirection;<br align="left"/>let mut _407: u64;<br align="left"/>let mut _408: isize;<br align="left"/>let _409: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _410: !;<br align="left"/>let mut _411: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _412: ();<br align="left"/>let mut _413: u64;<br align="left"/>let mut _414: u64;<br align="left"/>let mut _415: u64;<br align="left"/>let mut _416: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _417: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _418: u64;<br align="left"/>let mut _419: u64;<br align="left"/>let mut _420: isize;<br align="left"/>let _421: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _422: !;<br align="left"/>let mut _423: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _424: u64;<br align="left"/>let mut _425: u64;<br align="left"/>let mut _426: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _427: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _428: u64;<br align="left"/>let mut _429: u64;<br align="left"/>let mut _430: isize;<br align="left"/>let _431: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _432: !;<br align="left"/>let mut _433: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _434: u64;<br align="left"/>let _435: ();<br align="left"/>let mut _436: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _437: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _438: &amp;ReErased mut state::perp_market::AMM;<br align="left"/>let mut _439: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _440: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _441: u64;<br align="left"/>let mut _442: controller::position::PositionDirection;<br align="left"/>let mut _443: i64;<br align="left"/>let mut _444: isize;<br align="left"/>let _445: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _446: !;<br align="left"/>let mut _447: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _448: ();<br align="left"/>let _449: ();<br align="left"/>let mut _450: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _451: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _452: bool;<br align="left"/>let mut _453: bool;<br align="left"/>let mut _454: u64;<br align="left"/>let mut _455: bool;<br align="left"/>let mut _456: u64;<br align="left"/>let mut _457: ();<br align="left"/>let _458: error::ErrorCode;<br align="left"/>let _459: ();<br align="left"/>let mut _460: &amp;ReErased str;<br align="left"/>let _461: &amp;ReErased str;<br align="left"/>let mut _462: &amp;ReErased std::string::String;<br align="left"/>let _463: &amp;ReErased std::string::String;<br align="left"/>let _464: std::string::String;<br align="left"/>let _465: std::string::String;<br align="left"/>let mut _466: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _467: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _468: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _469: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _470: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _471: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _472: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _473: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _474: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _475: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _476: &amp;ReErased error::ErrorCode;<br align="left"/>let _477: &amp;ReErased error::ErrorCode;<br align="left"/>let _478: ();<br align="left"/>let mut _479: &amp;ReErased str;<br align="left"/>let _480: &amp;ReErased str;<br align="left"/>let mut _481: &amp;ReErased std::string::String;<br align="left"/>let _482: &amp;ReErased std::string::String;<br align="left"/>let _483: std::string::String;<br align="left"/>let _484: std::string::String;<br align="left"/>let mut _485: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _486: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _487: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _488: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _489: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _490: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _491: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _492: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _493: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _494: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _495: &amp;ReErased u64;<br align="left"/>let _496: &amp;ReErased u64;<br align="left"/>let mut _497: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _498: &amp;ReErased u64;<br align="left"/>let _499: &amp;ReErased u64;<br align="left"/>let mut _500: error::ErrorCode;<br align="left"/>let mut _501: isize;<br align="left"/>let _502: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _503: !;<br align="left"/>let mut _504: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _505: ();<br align="left"/>let _506: i64;<br align="left"/>let mut _507: std::collections::btree_map::Values&lt;ReErased, anchor_lang::prelude::Pubkey, i64&gt;;<br align="left"/>let mut _508: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let _509: ();<br align="left"/>let mut _510: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _511: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _512: bool;<br align="left"/>let mut _513: u64;<br align="left"/>let mut _514: i64;<br align="left"/>let mut _515: u64;<br align="left"/>let mut _516: ();<br align="left"/>let _517: error::ErrorCode;<br align="left"/>let _518: ();<br align="left"/>let mut _519: &amp;ReErased str;<br align="left"/>let _520: &amp;ReErased str;<br align="left"/>let mut _521: &amp;ReErased std::string::String;<br align="left"/>let _522: &amp;ReErased std::string::String;<br align="left"/>let _523: std::string::String;<br align="left"/>let _524: std::string::String;<br align="left"/>let mut _525: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _526: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _527: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _528: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _529: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _530: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _531: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _532: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _533: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _534: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _535: &amp;ReErased error::ErrorCode;<br align="left"/>let _536: &amp;ReErased error::ErrorCode;<br align="left"/>let _537: ();<br align="left"/>let mut _538: &amp;ReErased str;<br align="left"/>let _539: &amp;ReErased str;<br align="left"/>let mut _540: &amp;ReErased std::string::String;<br align="left"/>let _541: &amp;ReErased std::string::String;<br align="left"/>let _542: std::string::String;<br align="left"/>let _543: std::string::String;<br align="left"/>let mut _544: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _545: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _546: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _547: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _548: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _549: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _550: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _551: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _552: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _553: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _554: &amp;ReErased i64;<br align="left"/>let _555: &amp;ReErased i64;<br align="left"/>let mut _556: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _557: &amp;ReErased u64;<br align="left"/>let _558: &amp;ReErased u64;<br align="left"/>let mut _559: error::ErrorCode;<br align="left"/>let mut _560: isize;<br align="left"/>let _561: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _562: !;<br align="left"/>let mut _563: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _564: ();<br align="left"/>let _565: ();<br align="left"/>let mut _566: bool;<br align="left"/>let mut _567: &amp;ReErased state::fill_mode::FillMode;<br align="left"/>let _568: i64;<br align="left"/>let mut _569: bool;<br align="left"/>let mut _570: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _571: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _572: controller::position::PositionDirection;<br align="left"/>let mut _573: u64;<br align="left"/>let mut _574: i64;<br align="left"/>let mut _575: u64;<br align="left"/>let mut _576: bool;<br align="left"/>let mut _577: state::margin_calculation::MarginContext;<br align="left"/>let mut _578: state::margin_calculation::MarginContext;<br align="left"/>let mut _579: state::margin_calculation::MarginContext;<br align="left"/>let mut _580: math::margin::MarginRequirementType;<br align="left"/>let mut _581: bool;<br align="left"/>let mut _582: u16;<br align="left"/>let mut _583: i64;<br align="left"/>let mut _584: &amp;ReErased state::user::User;<br align="left"/>let mut _585: i64;<br align="left"/>let _586: ();<br align="left"/>let mut _587: bool;<br align="left"/>let mut _588: bool;<br align="left"/>let mut _589: state::margin_calculation::MarginContext;<br align="left"/>let mut _590: state::margin_calculation::MarginContext;<br align="left"/>let _591: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _592: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _593: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _594: &amp;ReErased state::user::User;<br align="left"/>let mut _595: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _596: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _597: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _598: state::margin_calculation::MarginContext;<br align="left"/>let mut _599: isize;<br align="left"/>let _600: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _601: !;<br align="left"/>let mut _602: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _603: state::margin_calculation::MarginCalculation;<br align="left"/>let _604: ();<br align="left"/>let mut _605: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _606: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _607: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _608: &amp;ReErased mut state::user::User;<br align="left"/>let mut _609: u32;<br align="left"/>let mut _610: u32;<br align="left"/>let mut _611: u32;<br align="left"/>let mut _612: i64;<br align="left"/>let mut _613: isize;<br align="left"/>let _614: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _615: !;<br align="left"/>let mut _616: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _617: ();<br align="left"/>let mut _618: bool;<br align="left"/>let mut _619: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _620: !;<br align="left"/>let _621: ();<br align="left"/>let mut _622: &amp;ReErased str;<br align="left"/>let _623: &amp;ReErased str;<br align="left"/>let mut _624: &amp;ReErased std::string::String;<br align="left"/>let _625: &amp;ReErased std::string::String;<br align="left"/>let _626: std::string::String;<br align="left"/>let _627: std::string::String;<br align="left"/>let mut _628: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _629: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _630: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _631: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _632: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _633: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _634: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _635: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _636: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _637: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _638: &amp;ReErased u128;<br align="left"/>let _639: &amp;ReErased u128;<br align="left"/>let mut _640: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _641: &amp;ReErased i128;<br align="left"/>let _642: &amp;ReErased i128;<br align="left"/>let mut _643: error::ErrorCode;<br align="left"/>let _644: ();<br align="left"/>let mut _645: std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _646: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _647: std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let _648: ();<br align="left"/>let mut _649: std::option::Option&lt;(anchor_lang::prelude::Pubkey, i64)&gt;;<br align="left"/>let mut _650: &amp;ReErased mut std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _651: &amp;ReErased mut std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64, std::alloc::Global&gt;;<br align="left"/>let mut _652: isize;<br align="left"/>let mut _653: !;<br align="left"/>let _654: anchor_lang::prelude::Pubkey;<br align="left"/>let _655: i64;<br align="left"/>let mut _656: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _657: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _658: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _659: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _660: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _661: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _662: isize;<br align="left"/>let _663: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _664: !;<br align="left"/>let mut _665: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _666: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _667: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _668: bool;<br align="left"/>let mut _669: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _670: &amp;ReErased state::user::User;<br align="left"/>let mut _671: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _672: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _673: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _674: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _675: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _676: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _677: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _678: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _679: &amp;ReErased state::user::User;<br align="left"/>let mut _680: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _681: isize;<br align="left"/>let _682: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _683: !;<br align="left"/>let mut _684: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _685: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _686: math::margin::MarginRequirementType;<br align="left"/>let _687: bool;<br align="left"/>let mut _688: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _689: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (math::margin::MarginRequirementType, bool)&gt;;<br align="left"/>let mut _690: std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt;;<br align="left"/>let mut _691: &amp;ReErased state::user::User;<br align="left"/>let _692: &amp;ReErased state::user::User;<br align="left"/>let mut _693: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _694: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _695: i64;<br align="left"/>let mut _696: u16;<br align="left"/>let mut _697: isize;<br align="left"/>let _698: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _699: !;<br align="left"/>let mut _700: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _701: (math::margin::MarginRequirementType, bool);<br align="left"/>let mut _702: state::margin_calculation::MarginContext;<br align="left"/>let mut _703: state::margin_calculation::MarginContext;<br align="left"/>let mut _704: state::margin_calculation::MarginContext;<br align="left"/>let mut _705: math::margin::MarginRequirementType;<br align="left"/>let mut _706: u16;<br align="left"/>let mut _707: i64;<br align="left"/>let mut _708: i64;<br align="left"/>let mut _709: bool;<br align="left"/>let mut _710: &amp;ReErased state::user::User;<br align="left"/>let _711: &amp;ReErased state::user::User;<br align="left"/>let mut _712: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _713: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _714: i64;<br align="left"/>let _715: ();<br align="left"/>let mut _716: bool;<br align="left"/>let _717: ();<br align="left"/>let mut _718: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _719: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _720: bool;<br align="left"/>let mut _721: bool;<br align="left"/>let mut _722: ();<br align="left"/>let _723: error::ErrorCode;<br align="left"/>let _724: ();<br align="left"/>let mut _725: &amp;ReErased str;<br align="left"/>let _726: &amp;ReErased str;<br align="left"/>let mut _727: &amp;ReErased std::string::String;<br align="left"/>let _728: &amp;ReErased std::string::String;<br align="left"/>let _729: std::string::String;<br align="left"/>let _730: std::string::String;<br align="left"/>let mut _731: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _732: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _733: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _734: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _735: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _736: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _737: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _738: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _739: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _740: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _741: &amp;ReErased error::ErrorCode;<br align="left"/>let _742: &amp;ReErased error::ErrorCode;<br align="left"/>let _743: ();<br align="left"/>let mut _744: &amp;ReErased str;<br align="left"/>let _745: &amp;ReErased str;<br align="left"/>let mut _746: error::ErrorCode;<br align="left"/>let mut _747: isize;<br align="left"/>let _748: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _749: !;<br align="left"/>let mut _750: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _751: ();<br align="left"/>let mut _752: bool;<br align="left"/>let mut _753: state::margin_calculation::MarginContext;<br align="left"/>let mut _754: state::margin_calculation::MarginContext;<br align="left"/>let _755: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _756: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _757: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _758: &amp;ReErased state::user::User;<br align="left"/>let _759: &amp;ReErased state::user::User;<br align="left"/>let mut _760: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _761: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _762: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _763: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _764: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _765: state::margin_calculation::MarginContext;<br align="left"/>let mut _766: isize;<br align="left"/>let _767: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _768: !;<br align="left"/>let mut _769: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _770: state::margin_calculation::MarginCalculation;<br align="left"/>let _771: ();<br align="left"/>let mut _772: isize;<br align="left"/>let mut _773: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _774: ();<br align="left"/>let mut _775: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _776: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _777: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _778: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _779: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _780: &amp;ReErased mut state::user::User;<br align="left"/>let mut _781: &amp;ReErased mut state::user::User;<br align="left"/>let mut _782: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _783: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _784: u32;<br align="left"/>let mut _785: u32;<br align="left"/>let mut _786: u32;<br align="left"/>let mut _787: i64;<br align="left"/>let mut _788: isize;<br align="left"/>let _789: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _790: !;<br align="left"/>let mut _791: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _792: ();<br align="left"/>let mut _793: bool;<br align="left"/>let mut _794: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _795: !;<br align="left"/>let _796: ();<br align="left"/>let mut _797: &amp;ReErased str;<br align="left"/>let _798: &amp;ReErased str;<br align="left"/>let mut _799: &amp;ReErased std::string::String;<br align="left"/>let _800: &amp;ReErased std::string::String;<br align="left"/>let _801: std::string::String;<br align="left"/>let _802: std::string::String;<br align="left"/>let mut _803: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _804: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _805: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _806: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _807: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _808: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _809: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _810: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _811: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _812: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _813: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _814: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _815: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _816: &amp;ReErased u128;<br align="left"/>let _817: &amp;ReErased u128;<br align="left"/>let mut _818: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _819: &amp;ReErased i128;<br align="left"/>let _820: &amp;ReErased i128;<br align="left"/>let mut _821: error::ErrorCode;<br align="left"/>let _822: ();<br align="left"/>let mut _823: bool;<br align="left"/>let _824: u128;<br align="left"/>let mut _825: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _826: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _827: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _828: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _829: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _830: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _831: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _832: &amp;ReErased u16;<br align="left"/>let _833: &amp;ReErased u16;<br align="left"/>let mut _834: isize;<br align="left"/>let _835: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _836: !;<br align="left"/>let mut _837: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _838: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _839: ();<br align="left"/>let mut _840: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _841: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _842: bool;<br align="left"/>let mut _843: u128;<br align="left"/>let mut _844: u128;<br align="left"/>let mut _845: ();<br align="left"/>let _846: error::ErrorCode;<br align="left"/>let _847: ();<br align="left"/>let mut _848: &amp;ReErased str;<br align="left"/>let _849: &amp;ReErased str;<br align="left"/>let mut _850: &amp;ReErased std::string::String;<br align="left"/>let _851: &amp;ReErased std::string::String;<br align="left"/>let _852: std::string::String;<br align="left"/>let _853: std::string::String;<br align="left"/>let mut _854: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _855: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _856: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _857: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _858: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _859: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _860: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _861: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _862: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _863: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _864: &amp;ReErased error::ErrorCode;<br align="left"/>let _865: &amp;ReErased error::ErrorCode;<br align="left"/>let _866: ();<br align="left"/>let mut _867: &amp;ReErased str;<br align="left"/>let _868: &amp;ReErased str;<br align="left"/>let mut _869: error::ErrorCode;<br align="left"/>let mut _870: isize;<br align="left"/>let _871: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _872: !;<br align="left"/>let mut _873: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _874: ();<br align="left"/>let mut _875: (u64, u64);<br align="left"/>let mut _876: u64;<br align="left"/>let mut _877: u64;<br align="left"/>let mut _878: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _879: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _880: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _881: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _882: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _883: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _884: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _885: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _886: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _887: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _888: bool;<br align="left"/>let mut _889: bool;<br align="left"/>let mut _890: bool;<br align="left"/>let mut _891: bool;<br align="left"/>let mut _892: bool;<br align="left"/>let mut _893: bool;<br align="left"/>let mut _894: isize;<br align="left"/>let mut _895: isize;<br align="left"/>let mut _896: isize;<br align="left"/>let mut _897: isize;<br align="left"/>let mut _898: isize;<br align="left"/>let mut _899: isize;<br align="left"/>let mut _900: isize;<br align="left"/>let mut _901: isize;<br align="left"/>let mut _902: isize;<br align="left"/>let mut _903: isize;<br align="left"/>let mut _904: isize;<br align="left"/>let mut _905: isize;<br align="left"/>let mut _906: isize;<br align="left"/>let mut _907: isize;<br align="left"/>let mut _908: isize;<br align="left"/>let mut _909: isize;<br align="left"/>let mut _910: isize;<br align="left"/>let mut _911: isize;<br align="left"/>let mut _912: isize;<br align="left"/>let mut _913: isize;<br align="left"/>let mut _914: isize;<br align="left"/>let mut _915: isize;<br align="left"/>let mut _916: isize;<br align="left"/>let mut _917: isize;<br align="left"/>let mut _918: isize;<br align="left"/>let mut _919: isize;<br align="left"/>let mut _920: isize;<br align="left"/>let mut _921: isize;<br align="left"/>let mut _922: isize;<br align="left"/>let mut _923: isize;<br align="left"/>let mut _924: isize;<br align="left"/>let mut _925: isize;<br align="left"/>let mut _926: isize;<br align="left"/>let mut _927: isize;<br align="left"/>let mut _928: isize;<br align="left"/>let mut _929: isize;<br align="left"/>let mut _930: isize;<br align="left"/>let mut _931: isize;<br align="left"/>let mut _932: isize;<br align="left"/>let mut _933: isize;<br align="left"/>let mut _934: isize;<br align="left"/>let mut _935: isize;<br align="left"/>let mut _936: isize;<br align="left"/>let mut _937: isize;<br align="left"/>let mut _938: isize;<br align="left"/>let mut _939: isize;<br align="left"/>let mut _940: isize;<br align="left"/>let mut _941: isize;<br align="left"/>let mut _942: isize;<br align="left"/>let mut _943: isize;<br align="left"/>let mut _944: isize;<br align="left"/>let mut _945: isize;<br align="left"/>let mut _946: isize;<br align="left"/>let mut _947: isize;<br align="left"/>let mut _948: isize;<br align="left"/>let mut _949: isize;<br align="left"/>let mut _950: isize;<br align="left"/>let mut _951: isize;<br align="left"/>let mut _952: isize;<br align="left"/>let mut _953: isize;<br align="left"/>let mut _954: isize;<br align="left"/>let mut _955: isize;<br align="left"/>let mut _956: isize;<br align="left"/>let mut _957: isize;<br align="left"/>let mut _958: isize;<br align="left"/>let mut _959: isize;<br align="left"/>let mut _960: isize;<br align="left"/>let mut _961: isize;<br align="left"/>let mut _962: isize;<br align="left"/>let mut _963: isize;<br align="left"/>let mut _964: isize;<br align="left"/>let mut _965: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug user_order_index =&gt; _2;<br align="left"/>debug user_key =&gt; _3;<br align="left"/>debug user_stats =&gt; _4;<br align="left"/>debug makers_and_referrer =&gt; _5;<br align="left"/>debug makers_and_referrer_stats =&gt; _6;<br align="left"/>debug maker_orders_info =&gt; _7;<br align="left"/>debug filler =&gt; _8;<br align="left"/>debug filler_key =&gt; _9;<br align="left"/>debug filler_stats =&gt; _10;<br align="left"/>debug referrer_info =&gt; _11;<br align="left"/>debug spot_market_map =&gt; _12;<br align="left"/>debug perp_market_map =&gt; _13;<br align="left"/>debug oracle_map =&gt; _14;<br align="left"/>debug fee_structure =&gt; _15;<br align="left"/>debug reserve_price_before =&gt; _16;<br align="left"/>debug valid_oracle_price =&gt; _17;<br align="left"/>debug now =&gt; _18;<br align="left"/>debug slot =&gt; _19;<br align="left"/>debug min_auction_duration =&gt; _20;<br align="left"/>debug amm_availability =&gt; _21;<br align="left"/>debug fill_mode =&gt; _22;<br align="left"/>debug oracle_stale_for_margin =&gt; _23;<br align="left"/>debug market_index =&gt; _24;<br align="left"/>debug user_order_position_decreasing =&gt; _28;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug perp_market =&gt; _39;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug limit_price =&gt; _50;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug perp_market_oi_before =&gt; _73;<br align="left"/>debug fulfillment_methods =&gt; _79;<br align="left"/>debug market =&gt; _80;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug oracle_price =&gt; _91;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug base_asset_amount =&gt; _137;<br align="left"/>debug quote_asset_amount =&gt; _138;<br align="left"/>debug maker_fills =&gt; _139;<br align="left"/>debug maker_direction =&gt; _140;<br align="left"/>debug iter =&gt; _151;<br align="left"/>debug fulfillment_method =&gt; _159;<br align="left"/>debug market =&gt; _169;<br align="left"/>debug residual =&gt; _176;<br align="left"/>debug val =&gt; _179;<br align="left"/>debug user_order_direction =&gt; _180;<br align="left"/>debug fill_base_asset_amount =&gt; _184;<br align="left"/>debug fill_quote_asset_amount =&gt; _185;<br align="left"/>debug maker_price =&gt; _188;<br align="left"/>debug referrer =&gt; _189;<br align="left"/>debug referrer_stats =&gt; _190;<br align="left"/>debug residual =&gt; _200;<br align="left"/>debug val =&gt; _203;<br align="left"/>debug maker =&gt; _204;<br align="left"/>debug maker_stats =&gt; _205;<br align="left"/>debug maker =&gt; _212;<br align="left"/>debug residual =&gt; _218;<br align="left"/>debug val =&gt; _221;<br align="left"/>debug maker_stats =&gt; _229;<br align="left"/>debug residual =&gt; _238;<br align="left"/>debug val =&gt; _241;<br align="left"/>debug fill_base_asset_amount =&gt; _248;<br align="left"/>debug fill_quote_asset_amount =&gt; _249;<br align="left"/>debug residual =&gt; _290;<br align="left"/>debug val =&gt; _293;<br align="left"/>debug maker_key =&gt; _296;<br align="left"/>debug maker_order_index =&gt; _297;<br align="left"/>debug maker_price =&gt; _298;<br align="left"/>debug maker =&gt; _299;<br align="left"/>debug residual =&gt; _305;<br align="left"/>debug val =&gt; _308;<br align="left"/>debug maker_stats =&gt; _309;<br align="left"/>debug residual =&gt; _324;<br align="left"/>debug val =&gt; _327;<br align="left"/>debug referrer =&gt; _328;<br align="left"/>debug referrer_stats =&gt; _329;<br align="left"/>debug residual =&gt; _343;<br align="left"/>debug val =&gt; _346;<br align="left"/>debug fill_base_asset_amount =&gt; _347;<br align="left"/>debug fill_quote_asset_amount =&gt; _348;<br align="left"/>debug maker_fill_base_asset_amount =&gt; _349;<br align="left"/>debug residual =&gt; _393;<br align="left"/>debug val =&gt; _396;<br align="left"/>debug residual =&gt; _409;<br align="left"/>debug val =&gt; _412;<br align="left"/>debug residual =&gt; _421;<br align="left"/>debug val =&gt; _424;<br align="left"/>debug residual =&gt; _431;<br align="left"/>debug val =&gt; _434;<br align="left"/>debug residual =&gt; _445;<br align="left"/>debug val =&gt; _448;<br align="left"/>debug error_code =&gt; _458;<br align="left"/>debug res =&gt; _465;<br align="left"/>debug res =&gt; _484;<br align="left"/>debug residual =&gt; _502;<br align="left"/>debug val =&gt; _505;<br align="left"/>debug total_maker_fill =&gt; _506;<br align="left"/>debug error_code =&gt; _517;<br align="left"/>debug res =&gt; _524;<br align="left"/>debug res =&gt; _543;<br align="left"/>debug residual =&gt; _561;<br align="left"/>debug val =&gt; _564;<br align="left"/>debug taker_base_asset_amount_delta =&gt; _568;<br align="left"/>debug context =&gt; _577;<br align="left"/>debug taker_margin_calculation =&gt; _591;<br align="left"/>debug residual =&gt; _600;<br align="left"/>debug val =&gt; _603;<br align="left"/>debug residual =&gt; _614;<br align="left"/>debug val =&gt; _617;<br align="left"/>debug res =&gt; _627;<br align="left"/>debug iter =&gt; _647;<br align="left"/>debug maker_key =&gt; _654;<br align="left"/>debug maker_base_asset_amount_filled =&gt; _655;<br align="left"/>debug maker =&gt; _656;<br align="left"/>debug residual =&gt; _663;<br align="left"/>debug val =&gt; _666;<br align="left"/>debug maker_stats =&gt; _667;<br align="left"/>debug residual =&gt; _682;<br align="left"/>debug val =&gt; _685;<br align="left"/>debug margin_type =&gt; _686;<br align="left"/>debug maker_risk_increasing =&gt; _687;<br align="left"/>debug residual =&gt; _698;<br align="left"/>debug val =&gt; _701;<br align="left"/>debug context =&gt; _702;<br align="left"/>debug error_code =&gt; _723;<br align="left"/>debug res =&gt; _730;<br align="left"/>debug residual =&gt; _748;<br align="left"/>debug val =&gt; _751;<br align="left"/>debug maker_margin_calculation =&gt; _755;<br align="left"/>debug residual =&gt; _767;<br align="left"/>debug val =&gt; _770;<br align="left"/>debug maker_stats =&gt; _773;<br align="left"/>debug residual =&gt; _789;<br align="left"/>debug val =&gt; _792;<br align="left"/>debug res =&gt; _802;<br align="left"/>debug perp_market_oi_after =&gt; _824;<br align="left"/>debug residual =&gt; _835;<br align="left"/>debug val =&gt; _838;<br align="left"/>debug error_code =&gt; _846;<br align="left"/>debug res =&gt; _853;<br align="left"/>debug residual =&gt; _871;<br align="left"/>debug val =&gt; _874;<br align="left"/>>;
    bb0__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_891 = const false<br/>_890 = const false<br/>_888 = const false<br/>_893 = const false<br/>_889 = const false<br/>_892 = const false<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _2<br/>_26 = Len(((*_1).5: [state::user::Order; 32]))<br/>_27 = Lt(_25, _26)<br/></td></tr><tr><td align="left">assert(move _27, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _26, _25)</td></tr></table>>];
    bb1__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_24 = (((*_1).5: [state::user::Order; 32])[_25].11: u16)<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;(*_1)<br/>StorageLive(_32)<br/>_32 = _24<br/>StorageLive(_33)<br/>_33 = _2<br/></td></tr><tr><td align="left">_30 = determine_if_user_order_is_position_decreasing(move _31, move _32, move _33)</td></tr></table>>];
    bb2__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb3__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb4__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_29 as Continue).0: bool)<br/>_28 = _38<br/>StorageDead(_38)<br/>StorageDead(_29)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;(*_13)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_24<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_41 = PerpMarketMap::&lt;'_&gt;::get_ref(move _42, move _43)</td></tr></table>>];
    bb5__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb7__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb9__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_45 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb10__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_40 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_891 = const true<br/>_39 = move _49<br/>StorageDead(_49)<br/>_896 = discriminant(_40)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_22<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _2<br/>_57 = Len(((*_1).5: [state::user::Order; 32]))<br/>_58 = Lt(_56, _57)<br/></td></tr><tr><td align="left">assert(move _58, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _57, _56)</td></tr></table>>];
    bb11__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb12__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_894 = discriminant(_40)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_55 = &amp;((*_1).5: [state::user::Order; 32])[_56]<br/>_54 = &amp;(*_55)<br/>StorageLive(_59)<br/>_59 = _17<br/>StorageLive(_60)<br/>_60 = _19<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_39<br/></td></tr><tr><td align="left">_62 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb14__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = (((*_62).1: state::perp_market::AMM).53: u64)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_39<br/></td></tr><tr><td align="left">_66 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb15__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_65 = &amp;(*_66)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = PerpMarket::is_prediction_market(move _65)</td></tr></table>>];
    bb16__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_52 = FillMode::get_limit_price(move _53, move _54, move _59, move _60, move _61, move _64)</td></tr></table>>];
    bb17__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb18__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_68 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb19__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_51 as Continue).0: std::option::Option&lt;u64&gt;)<br/>_50 = _72<br/>StorageDead(_72)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_39<br/></td></tr><tr><td align="left">_75 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb20__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb21__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = PerpMarket::get_open_interest(move _74)</td></tr></table>>];
    bb23__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_75)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_891 = const false<br/>_78 = move _39<br/></td></tr><tr><td align="left">_77 = std::mem::drop::&lt;Ref&lt;'_, PerpMarket&gt;&gt;(move _78)</td></tr></table>>];
    bb24__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;(*_13)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_24<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_82 = PerpMarketMap::&lt;'_&gt;::get_ref(move _83, move _84)</td></tr></table>>];
    bb25__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb26__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_86 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb27__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = move ((_81 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_80 = move _90<br/>StorageDead(_90)<br/>_900 = discriminant(_81)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;mut (*_14)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;_80<br/></td></tr><tr><td align="left">_100 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb28__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb29__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>_898 = discriminant(_81)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_99 = &amp;(*_100)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_98 = PerpMarket::oracle_id(move _99)</td></tr></table>>];
    bb31__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_97 = &amp;_98<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_94 = OracleMap::&lt;'_&gt;::get_price_data(move _95, move _96)</td></tr></table>>];
    bb32__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb33__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_102 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb34__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_93 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_92 = _106<br/>StorageDead(_106)<br/>_91 = ((*_92).0: i64)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = _2<br/>_112 = Len(((*_1).5: [state::user::Order; 32]))<br/>_113 = Lt(_111, _112)<br/></td></tr><tr><td align="left">assert(move _113, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _112, _111)</td></tr></table>>];
    bb35__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb36__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb37__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_110 = &amp;((*_1).5: [state::user::Order; 32])[_111]<br/>_109 = &amp;(*_110)<br/>StorageLive(_114)<br/>_114 = &amp;(*_7)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;_80<br/></td></tr><tr><td align="left">_117 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb38__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_116 = &amp;((*_117).1: state::perp_market::AMM)<br/>_115 = &amp;(*_116)<br/>StorageLive(_119)<br/>_119 = _16<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = _91<br/>_120 = Option::&lt;i64&gt;::Some(move _121)<br/>StorageDead(_121)<br/>StorageLive(_122)<br/>_122 = _50<br/>StorageLive(_123)<br/>_123 = _21<br/>StorageLive(_124)<br/>_124 = _19<br/>StorageLive(_125)<br/>_125 = _20<br/>StorageLive(_126)<br/>_126 = _22<br/></td></tr><tr><td align="left">_108 = determine_perp_fulfillment_methods(move _109, move _114, move _115, move _119, move _120, move _122, move _123, move _124, move _125, move _126)</td></tr></table>>];
    bb39__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;Vec&lt;PerpFulfillmentMethod&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb40__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_893 = const true<br/>StorageDead(_108)<br/>_127 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb41__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = move ((_107 as Continue).0: std::vec::Vec&lt;state::fulfillment::PerpFulfillmentMethod&gt;)<br/>_79 = move _131<br/>StorageDead(_131)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb42__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_130)<br/>_130 = _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb43__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb44__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_902 = discriminant(_107)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>_893 = const false<br/>StorageDead(_107)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;_79<br/></td></tr><tr><td align="left">_133 = Vec::&lt;PerpFulfillmentMethod&gt;::is_empty(move _134)</td></tr></table>>];
    bb45__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb46__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageLive(_136)<br/>_136 = (const 0_u64, const 0_u64)<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Ok(move _136)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_132 = const ()<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_137)<br/>_137 = const 0_u64<br/>StorageLive(_138)<br/>_138 = const 0_u64<br/>StorageLive(_139)<br/></td></tr><tr><td align="left">_139 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, i64&gt;::new()</td></tr></table>>];
    bb48__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_890 = const true<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = _2<br/>_143 = Len(((*_1).5: [state::user::Order; 32]))<br/>_144 = Lt(_142, _143)<br/></td></tr><tr><td align="left">assert(move _144, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _143, _142)</td></tr></table>>];
    bb49__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_141 = &amp;(((*_1).5: [state::user::Order; 32])[_142].17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_140 = controller::position::PositionDirection::opposite(move _141)</td></tr></table>>];
    bb50__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_142)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;_79<br/></td></tr><tr><td align="left">_149 = &lt;Vec&lt;PerpFulfillmentMethod&gt; as Deref&gt;::deref(move _150)</td></tr></table>>];
    bb51__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_148 = &amp;(*_149)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_147 = core::slice::&lt;impl [PerpFulfillmentMethod]&gt;::iter(move _148)</td></tr></table>>];
    bb52__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::slice::Iter&lt;'_, PerpFulfillmentMethod&gt; as IntoIterator&gt;::into_iter(move _147)</td></tr></table>>];
    bb53__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_151)<br/>_151 = move _146<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = &amp;mut _151<br/>_155 = &amp;mut (*_156)<br/></td></tr><tr><td align="left">_154 = &lt;std::slice::Iter&lt;'_, PerpFulfillmentMethod&gt; as Iterator&gt;::next(move _155)</td></tr></table>>];
    bb55__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_157 = discriminant(_154)<br/></td></tr><tr><td align="left">switchInt(move _157)</td></tr></table>>];
    bb56__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_154 as Some).0: &amp;state::fulfillment::PerpFulfillmentMethod)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = _2<br/>_164 = Len(((*_1).5: [state::user::Order; 32]))<br/>_165 = Lt(_163, _164)<br/></td></tr><tr><td align="left">assert(move _165, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _164, _163)</td></tr></table>>];
    bb57__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_145 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_162 = &amp;(((*_1).5: [state::user::Order; 32])[_163].12: state::user::OrderStatus)<br/>StorageLive(_166)<br/>_887 = const _<br/>_166 = &amp;(*_887)<br/></td></tr><tr><td align="left">_161 = &lt;OrderStatus as PartialEq&gt;::ne(move _162, move _166)</td></tr></table>>];
    bb59__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb60__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>_145 = const ()<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>_160 = const ()<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = &amp;(*_13)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_24<br/>_173 = &amp;(*_174)<br/></td></tr><tr><td align="left">_171 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _172, move _173)</td></tr></table>>];
    bb62__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">_170 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _171)</td></tr></table>>];
    bb63__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>_175 = discriminant(_170)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb64__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_179)<br/>_179 = move ((_170 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_169 = move _179<br/>StorageDead(_179)<br/>_906 = discriminant(_170)<br/>StorageDead(_174)<br/>StorageDead(_170)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = _2<br/>_182 = Len(((*_1).5: [state::user::Order; 32]))<br/>_183 = Lt(_181, _182)<br/></td></tr><tr><td align="left">assert(move _183, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _182, _181)</td></tr></table>>];
    bb65__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_170 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_178)<br/>_178 = _176<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _178)</td></tr></table>>];
    bb66__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_176)<br/>_904 = discriminant(_170)<br/>StorageDead(_174)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_180 = (((*_1).5: [state::user::Order; 32])[_181].17: controller::position::PositionDirection)<br/>StorageDead(_181)<br/>StorageLive(_186)<br/>_187 = discriminant((*_159))<br/></td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb68__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = &amp;(((*_159) as Match).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_297)<br/>_297 = &amp;(((*_159) as Match).1: u16)<br/>StorageLive(_298)<br/>_298 = &amp;(((*_159) as Match).2: u64)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = &amp;(*_5)<br/>StorageLive(_303)<br/>_303 = &amp;(*_296)<br/></td></tr><tr><td align="left">_301 = UserMap::&lt;'_&gt;::get_ref_mut(move _302, move _303)</td></tr></table>>];
    bb69__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = &amp;(((*_159) as AMM).0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_11<br/>_194 = &amp;(*_195)<br/>StorageLive(_196)<br/>_196 = &amp;(*_5)<br/>StorageLive(_197)<br/>_197 = &amp;(*_6)<br/>StorageLive(_198)<br/>_198 = Option::&lt;&amp;User&gt;::None<br/></td></tr><tr><td align="left">_193 = get_referrer(move _194, move _196, move _197, move _198)</td></tr></table>>];
    bb70__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_192 = &lt;std::result::Result&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _193)</td></tr></table>>];
    bb71__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>_199 = discriminant(_192)<br/></td></tr><tr><td align="left">switchInt(move _199)</td></tr></table>>];
    bb72__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = move ((_192 as Continue).0: (std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::UserStats&gt;&gt;))<br/>_191 = move _203<br/>StorageDead(_203)<br/>StorageLive(_189)<br/>_189 = move (_191.0: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_190)<br/>_190 = move (_191.1: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::UserStats&gt;&gt;)<br/>_910 = discriminant(_192)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = &amp;((*_5).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_209)<br/>_209 = &amp;(*_9)<br/></td></tr><tr><td align="left">_207 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;::contains_key::&lt;anchor_lang::prelude::Pubkey&gt;(move _208, move _209)</td></tr></table>>];
    bb73__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_192 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_202)<br/>_202 = _200<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _202)</td></tr></table>>];
    bb74__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>_908 = discriminant(_192)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb76__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;(*_8)<br/></td></tr><tr><td align="left">_210 = Option::&lt;&amp;mut User&gt;::is_none(move _211)</td></tr></table>>];
    bb77__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb78__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;(*_5)<br/>StorageLive(_216)<br/>_216 = &amp;(*_9)<br/></td></tr><tr><td align="left">_214 = UserMap::&lt;'_&gt;::get_ref_mut(move _215, move _216)</td></tr></table>>];
    bb79__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">_213 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _214)</td></tr></table>>];
    bb80__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_217 = discriminant(_213)<br/></td></tr><tr><td align="left">switchInt(move _217)</td></tr></table>>];
    bb81__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = move ((_213 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_888 = const true<br/>_212 = move _221<br/>StorageDead(_221)<br/>_914 = discriminant(_213)<br/>StorageDead(_213)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;_212<br/></td></tr><tr><td align="left">_224 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _225)</td></tr></table>>];
    bb82__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = ((_213 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_220)<br/>_220 = _218<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _220)</td></tr></table>>];
    bb83__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_218)<br/>_912 = discriminant(_213)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_223 = &amp;((*_224).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_226)<br/>_226 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_222 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _223, move _226)</td></tr></table>>];
    bb85__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left">switchInt(move _222)</td></tr></table>>];
    bb86__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageLive(_227)<br/>_227 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::None<br/>StorageLive(_228)<br/>_228 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/>_206 = (move _227, move _228)<br/>StorageDead(_228)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;(*_6)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = &amp;_212<br/></td></tr><tr><td align="left">_235 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _236)</td></tr></table>>];
    bb88__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_234 = &amp;((*_235).0: anchor_lang::prelude::Pubkey)<br/>_233 = &amp;(*_234)<br/></td></tr><tr><td align="left">_231 = UserStatsMap::&lt;'_&gt;::get_ref_mut(move _232, move _233)</td></tr></table>>];
    bb89__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _231)</td></tr></table>>];
    bb90__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_237 = discriminant(_230)<br/></td></tr><tr><td align="left">switchInt(move _237)</td></tr></table>>];
    bb91__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_241)<br/>_241 = move ((_230 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_229 = move _241<br/>StorageDead(_241)<br/>_918 = discriminant(_230)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_230)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_888 = const false<br/>_243 = move _212<br/>_242 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::Some(move _243)<br/>StorageDead(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = move _229<br/>_244 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _245)<br/>StorageDead(_245)<br/>_206 = (move _242, move _244)<br/>StorageDead(_244)<br/>StorageDead(_242)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_238)<br/>_238 = ((_230 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_240)<br/>_240 = _238<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _240)</td></tr></table>>];
    bb93__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_238)<br/>_916 = discriminant(_230)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">drop(_212)</td></tr></table>>];
    bb94__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/></td></tr><tr><td align="left">switchInt(_888)</td></tr></table>>];
    bb95__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_888 = const false<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::None<br/>StorageLive(_247)<br/>_247 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/>_206 = (move _246, move _247)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_207)<br/>StorageLive(_204)<br/>_204 = move (_206.0: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_205)<br/>_205 = move (_206.1: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::UserStats&gt;&gt;)<br/>StorageDead(_206)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;mut (*_1)<br/>StorageLive(_254)<br/>_254 = &amp;mut (*_4)<br/>StorageLive(_255)<br/>_255 = _2<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_258 = &amp;mut _169<br/></td></tr><tr><td align="left">_257 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _258)</td></tr></table>>];
    bb100__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_256 = &amp;mut (*_257)<br/>StorageDead(_258)<br/>StorageLive(_259)<br/>_259 = &amp;mut (*_14)<br/>StorageLive(_260)<br/>_260 = _16<br/>StorageLive(_261)<br/>_261 = _18<br/>StorageLive(_262)<br/>_262 = _19<br/>StorageLive(_263)<br/>_263 = &amp;(*_3)<br/>StorageLive(_264)<br/>_264 = &amp;(*_9)<br/>StorageLive(_265)<br/>_265 = &amp;mut (*_8)<br/>StorageLive(_266)<br/>_266 = &amp;mut (*_10)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = &amp;mut _204<br/></td></tr><tr><td align="left">_269 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _270)</td></tr></table>>];
    bb101__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>_268 = &amp;mut _269<br/>_267 = &amp;mut (*_268)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;mut _205<br/></td></tr><tr><td align="left">_273 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::as_deref_mut(move _274)</td></tr></table>>];
    bb102__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_272 = &amp;mut _273<br/>_271 = &amp;mut (*_272)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = &amp;mut _189<br/></td></tr><tr><td align="left">_277 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _278)</td></tr></table>>];
    bb103__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>_276 = &amp;mut _277<br/>_275 = &amp;mut (*_276)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = &amp;mut _190<br/></td></tr><tr><td align="left">_281 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::as_deref_mut(move _282)</td></tr></table>>];
    bb104__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>_280 = &amp;mut _281<br/>_279 = &amp;mut (*_280)<br/>StorageLive(_283)<br/>_283 = &amp;(*_15)<br/>StorageLive(_284)<br/>_284 = _50<br/>StorageLive(_285)<br/>_285 = Option::&lt;u64&gt;::None<br/>StorageLive(_286)<br/>_286 = (*_188)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_288 = &amp;_22<br/></td></tr><tr><td align="left">_287 = FillMode::is_liquidation(move _288)</td></tr></table>>];
    bb105__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/></td></tr><tr><td align="left">_252 = fulfill_perp_order_with_amm(move _253, move _254, move _255, move _256, move _259, move _260, move _261, move _262, move _263, move _264, move _265, move _266, move _267, move _271, move _275, move _279, move _283, move _284, move _285, move _286, move _287)</td></tr></table>>];
    bb106__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_279)<br/>StorageDead(_275)<br/>StorageDead(_271)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_260)<br/>StorageDead(_259)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">_251 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _252)</td></tr></table>>];
    bb107__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>_289 = discriminant(_251)<br/></td></tr><tr><td align="left">switchInt(move _289)</td></tr></table>>];
    bb108__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = ((_251 as Continue).0: (u64, u64))<br/>_250 = _293<br/>StorageDead(_293)<br/>StorageLive(_248)<br/>_248 = (_250.0: u64)<br/>StorageLive(_249)<br/>_249 = (_250.1: u64)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageDead(_257)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageLive(_294)<br/>_294 = _248<br/>StorageLive(_295)<br/>_295 = _249<br/>_186 = (move _294, move _295)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/>StorageDead(_249)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">drop(_205)</td></tr></table>>];
    bb109__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_290)<br/>_290 = ((_251 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_292)<br/>_292 = _290<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _292)</td></tr></table>>];
    bb110__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageDead(_257)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">drop(_205)</td></tr></table>>];
    bb111__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">drop(_204)</td></tr></table>>];
    bb112__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/></td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb113__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb114__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_300 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _301)</td></tr></table>>];
    bb116__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>_304 = discriminant(_300)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb117__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = move ((_300 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_299 = move _308<br/>StorageDead(_308)<br/>_922 = discriminant(_300)<br/>StorageDead(_300)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = &amp;_299<br/></td></tr><tr><td align="left">_312 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _313)</td></tr></table>>];
    bb118__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_300 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_307)<br/>_307 = _305<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _307)</td></tr></table>>];
    bb119__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/>_920 = discriminant(_300)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>_311 = &amp;((*_312).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_314)<br/>_314 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_310 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _311, move _314)</td></tr></table>>];
    bb121__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left">switchInt(move _310)</td></tr></table>>];
    bb122__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/>_309 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;(*_6)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_322 = &amp;_299<br/></td></tr><tr><td align="left">_321 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _322)</td></tr></table>>];
    bb124__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>_320 = &amp;((*_321).0: anchor_lang::prelude::Pubkey)<br/>_319 = &amp;(*_320)<br/></td></tr><tr><td align="left">_317 = UserStatsMap::&lt;'_&gt;::get_ref_mut(move _318, move _319)</td></tr></table>>];
    bb125__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">_316 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _317)</td></tr></table>>];
    bb126__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>_323 = discriminant(_316)<br/></td></tr><tr><td align="left">switchInt(move _323)</td></tr></table>>];
    bb127__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>_327 = move ((_316 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_315 = move _327<br/>StorageDead(_327)<br/>_309 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _315)<br/>StorageDead(_315)<br/>_926 = discriminant(_316)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = ((_316 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_326)<br/>_326 = _324<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _326)</td></tr></table>>];
    bb129__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_324)<br/>StorageDead(_315)<br/>_924 = discriminant(_316)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_316)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>_334 = &amp;_11<br/>_333 = &amp;(*_334)<br/>StorageLive(_335)<br/>_335 = &amp;(*_5)<br/>StorageLive(_336)<br/>_336 = &amp;(*_6)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>_341 = &amp;_299<br/>_340 = &amp;(*_341)<br/></td></tr><tr><td align="left">_339 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _340)</td></tr></table>>];
    bb131__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_338 = &amp;(*_339)<br/>StorageDead(_340)<br/>_337 = Option::&lt;&amp;User&gt;::Some(move _338)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_332 = get_referrer(move _333, move _335, move _336, move _337)</td></tr></table>>];
    bb132__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageDead(_333)<br/></td></tr><tr><td align="left">_331 = &lt;std::result::Result&lt;(Option&lt;RefMut&lt;'_, User&gt;&gt;, Option&lt;RefMut&lt;'_, UserStats&gt;&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _332)</td></tr></table>>];
    bb133__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>_342 = discriminant(_331)<br/></td></tr><tr><td align="left">switchInt(move _342)</td></tr></table>>];
    bb134__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_346)<br/>_346 = move ((_331 as Continue).0: (std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::UserStats&gt;&gt;))<br/>_330 = move _346<br/>StorageDead(_346)<br/>StorageLive(_328)<br/>_328 = move (_330.0: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_329)<br/>_329 = move (_330.1: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::UserStats&gt;&gt;)<br/>_930 = discriminant(_331)<br/>StorageDead(_341)<br/>StorageDead(_339)<br/>StorageDead(_334)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>_355 = &amp;mut _169<br/></td></tr><tr><td align="left">_354 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _355)</td></tr></table>>];
    bb135__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_343)<br/>_343 = ((_331 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_345)<br/>_345 = _343<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _345)</td></tr></table>>];
    bb136__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_343)<br/>_928 = discriminant(_331)<br/>StorageDead(_341)<br/>StorageDead(_339)<br/>StorageDead(_334)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_353 = &amp;mut (*_354)<br/>StorageDead(_355)<br/>StorageLive(_356)<br/>_356 = &amp;mut (*_1)<br/>StorageLive(_357)<br/>_357 = &amp;mut (*_4)<br/>StorageLive(_358)<br/>_358 = _2<br/>StorageLive(_359)<br/>_359 = &amp;(*_3)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>_363 = &amp;mut _299<br/>_362 = &amp;mut (*_363)<br/></td></tr><tr><td align="left">_361 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _362)</td></tr></table>>];
    bb138__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_360 = &amp;mut (*_361)<br/>StorageDead(_362)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>_367 = &amp;mut _309<br/></td></tr><tr><td align="left">_366 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::as_deref_mut(move _367)</td></tr></table>>];
    bb139__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>_365 = &amp;mut _366<br/>_364 = &amp;mut (*_365)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = (*_297)<br/>_368 = move _369 as usize (IntToInt)<br/>StorageDead(_369)<br/>StorageLive(_370)<br/>_370 = &amp;(*_296)<br/>StorageLive(_371)<br/>_371 = &amp;mut (*_8)<br/>StorageLive(_372)<br/>_372 = &amp;mut (*_10)<br/>StorageLive(_373)<br/>_373 = &amp;(*_9)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_377 = &amp;mut _328<br/></td></tr><tr><td align="left">_376 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _377)</td></tr></table>>];
    bb140__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>_375 = &amp;mut _376<br/>_374 = &amp;mut (*_375)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = &amp;mut _329<br/></td></tr><tr><td align="left">_380 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::as_deref_mut(move _381)</td></tr></table>>];
    bb141__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>_379 = &amp;mut _380<br/>_378 = &amp;mut (*_379)<br/>StorageLive(_382)<br/>_382 = _16<br/>StorageLive(_383)<br/>_383 = _17<br/>StorageLive(_384)<br/>_384 = _50<br/>StorageLive(_385)<br/>_385 = (*_298)<br/>StorageLive(_386)<br/>_386 = _18<br/>StorageLive(_387)<br/>_387 = _19<br/>StorageLive(_388)<br/>_388 = &amp;(*_15)<br/>StorageLive(_389)<br/>_389 = &amp;mut (*_14)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;_22<br/></td></tr><tr><td align="left">_390 = FillMode::is_liquidation(move _391)</td></tr></table>>];
    bb142__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/></td></tr><tr><td align="left">_352 = fulfill_perp_order_with_match(move _353, move _356, move _357, move _358, move _359, move _360, move _364, move _368, move _370, move _371, move _372, move _373, move _374, move _378, move _382, move _383, move _384, move _385, move _386, move _387, move _388, move _389, move _390)</td></tr></table>>];
    bb143__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>StorageDead(_389)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>StorageDead(_386)<br/>StorageDead(_385)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/>StorageDead(_378)<br/>StorageDead(_374)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>StorageDead(_368)<br/>StorageDead(_364)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>StorageDead(_358)<br/>StorageDead(_357)<br/>StorageDead(_356)<br/>StorageDead(_353)<br/></td></tr><tr><td align="left">_351 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _352)</td></tr></table>>];
    bb144__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>_392 = discriminant(_351)<br/></td></tr><tr><td align="left">switchInt(move _392)</td></tr></table>>];
    bb145__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_351 as Continue).0: (u64, u64, u64))<br/>_350 = _396<br/>StorageDead(_396)<br/>StorageLive(_347)<br/>_347 = (_350.0: u64)<br/>StorageLive(_348)<br/>_348 = (_350.1: u64)<br/>StorageLive(_349)<br/>_349 = (_350.2: u64)<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>StorageDead(_376)<br/>StorageDead(_375)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_354)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>_399 = _349<br/>_398 = Ne(move _399, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _398)</td></tr></table>>];
    bb146__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_393)<br/>_393 = ((_351 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_395)<br/>_395 = _393<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _395)</td></tr></table>>];
    bb147__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>StorageDead(_376)<br/>StorageDead(_375)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_354)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;mut _139<br/>_403 = &amp;mut (*_404)<br/>StorageLive(_405)<br/>_405 = &amp;(*_296)<br/>StorageLive(_406)<br/>_406 = _140<br/>StorageLive(_407)<br/>_407 = _349<br/></td></tr><tr><td align="left">_402 = update_maker_fills_map(move _403, move _405, move _406, move _407)</td></tr></table>>];
    bb149__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>_397 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">_401 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _402)</td></tr></table>>];
    bb151__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>_408 = discriminant(_401)<br/></td></tr><tr><td align="left">switchInt(move _408)</td></tr></table>>];
    bb152__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_412)<br/>_412 = ((_401 as Continue).0: ())<br/>_400 = _412<br/>StorageDead(_412)<br/>StorageDead(_404)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>_397 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_409)<br/>_409 = ((_401 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_411)<br/>_411 = _409<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _411)</td></tr></table>>];
    bb154__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageDead(_409)<br/>StorageDead(_404)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageDead(_398)<br/>StorageDead(_397)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_397)<br/>StorageLive(_413)<br/>_413 = _347<br/>StorageLive(_414)<br/>_414 = _348<br/>_186 = (move _413, move _414)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">drop(_329)</td></tr></table>>];
    bb156__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">drop(_328)</td></tr></table>>];
    bb157__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/></td></tr><tr><td align="left">drop(_309)</td></tr></table>>];
    bb158__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/></td></tr><tr><td align="left">drop(_299)</td></tr></table>>];
    bb159__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = (_186.0: u64)<br/>StorageLive(_185)<br/>_185 = (_186.1: u64)<br/>StorageDead(_186)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = _137<br/>StorageLive(_419)<br/>_419 = _184<br/></td></tr><tr><td align="left">_417 = &lt;u64 as SafeMath&gt;::safe_add(move _418, move _419)</td></tr></table>>];
    bb161__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">_416 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _417)</td></tr></table>>];
    bb162__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>_420 = discriminant(_416)<br/></td></tr><tr><td align="left">switchInt(move _420)</td></tr></table>>];
    bb163__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_424)<br/>_424 = ((_416 as Continue).0: u64)<br/>_415 = _424<br/>StorageDead(_424)<br/>_137 = move _415<br/>StorageDead(_415)<br/>StorageDead(_416)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>_428 = _138<br/>StorageLive(_429)<br/>_429 = _185<br/></td></tr><tr><td align="left">_427 = &lt;u64 as SafeMath&gt;::safe_add(move _428, move _429)</td></tr></table>>];
    bb164__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_421)<br/>_421 = ((_416 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_423)<br/>_423 = _421<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _423)</td></tr></table>>];
    bb165__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>StorageDead(_421)<br/>StorageDead(_415)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">_426 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _427)</td></tr></table>>];
    bb167__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>_430 = discriminant(_426)<br/></td></tr><tr><td align="left">switchInt(move _430)</td></tr></table>>];
    bb168__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_434)<br/>_434 = ((_426 as Continue).0: u64)<br/>_425 = _434<br/>StorageDead(_434)<br/>_138 = move _425<br/>StorageDead(_425)<br/>StorageDead(_426)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = &amp;mut _169<br/></td></tr><tr><td align="left">_439 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _440)</td></tr></table>>];
    bb169__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageLive(_431)<br/>_431 = ((_426 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_433)<br/>_433 = _431<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _433)</td></tr></table>>];
    bb170__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_431)<br/>StorageDead(_425)<br/>StorageDead(_426)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>_438 = &amp;mut ((*_439).1: state::perp_market::AMM)<br/>StorageLive(_441)<br/>_441 = _185<br/>StorageLive(_442)<br/>_442 = _180<br/>StorageLive(_443)<br/>_443 = _18<br/></td></tr><tr><td align="left">_437 = AMM::update_volume_24h(move _438, move _441, move _442, move _443)</td></tr></table>>];
    bb172__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>StorageDead(_442)<br/>StorageDead(_441)<br/>StorageDead(_438)<br/></td></tr><tr><td align="left">_436 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _437)</td></tr></table>>];
    bb173__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>_444 = discriminant(_436)<br/></td></tr><tr><td align="left">switchInt(move _444)</td></tr></table>>];
    bb174__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_448)<br/>_448 = ((_436 as Continue).0: ())<br/>_435 = _448<br/>StorageDead(_448)<br/>StorageDead(_439)<br/>StorageDead(_436)<br/>StorageDead(_435)<br/>_153 = const ()<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">drop(_169)</td></tr></table>>];
    bb175__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_445)<br/>_445 = ((_436 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_447)<br/>_447 = _445<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _447)</td></tr></table>>];
    bb176__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_445)<br/>StorageDead(_439)<br/>StorageDead(_436)<br/>StorageDead(_435)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_159)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>_152 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = _137<br/>_453 = Gt(move _454, const 0_u64)<br/>StorageDead(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = _138<br/>_455 = Gt(move _456, const 0_u64)<br/>StorageDead(_456)<br/>_452 = Eq(move _453, move _455)<br/></td></tr><tr><td align="left">switchInt(move _452)</td></tr></table>>];
    bb179__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_453)<br/>StorageLive(_457)<br/>_457 = ()<br/>_451 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _457)<br/>StorageDead(_457)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_453)<br/>StorageLive(_458)<br/>_458 = error::ErrorCode::DefaultError<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>_886 = const _<br/>_469 = &amp;(*_886)<br/>_468 = &amp;(*_469)<br/>_467 = move _468 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_468)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>_477 = &amp;_458<br/>_476 = &amp;(*_477)<br/></td></tr><tr><td align="left">_475 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _476)</td></tr></table>>];
    bb181__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>_474 = [move _475]<br/>StorageDead(_475)<br/>_473 = &amp;_474<br/>_472 = &amp;(*_473)<br/>_471 = move _472 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_472)<br/></td></tr><tr><td align="left">_466 = Arguments::&lt;'_&gt;::new_v1(move _467, move _471)</td></tr></table>>];
    bb182__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageDead(_467)<br/></td></tr><tr><td align="left">_465 = format(move _466)</td></tr></table>>];
    bb183__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/>StorageDead(_477)<br/>StorageDead(_474)<br/>StorageDead(_473)<br/>StorageDead(_469)<br/>_464 = move _465<br/>StorageDead(_465)<br/>_463 = &amp;_464<br/>_462 = &amp;(*_463)<br/></td></tr><tr><td align="left">_461 = &lt;String as Deref&gt;::deref(move _462)</td></tr></table>>];
    bb184__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">_460 = &amp;(*_461)<br/>StorageDead(_462)<br/></td></tr><tr><td align="left">_459 = solana_program::log::sol_log(move _460)</td></tr></table>>];
    bb185__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/></td></tr><tr><td align="left">drop(_464)</td></tr></table>>];
    bb186__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_461)<br/>StorageDead(_459)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>_885 = const _<br/>_488 = &amp;(*_885)<br/>_487 = &amp;(*_488)<br/>_486 = move _487 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_487)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>_496 = &amp;_137<br/>_495 = &amp;(*_496)<br/></td></tr><tr><td align="left">_494 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _495)</td></tr></table>>];
    bb187__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>_499 = &amp;_138<br/>_498 = &amp;(*_499)<br/></td></tr><tr><td align="left">_497 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _498)</td></tr></table>>];
    bb188__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_498)<br/>_493 = [move _494, move _497]<br/>StorageDead(_497)<br/>StorageDead(_494)<br/>_492 = &amp;_493<br/>_491 = &amp;(*_492)<br/>_490 = move _491 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">_485 = Arguments::&lt;'_&gt;::new_v1(move _486, move _490)</td></tr></table>>];
    bb189__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_486)<br/></td></tr><tr><td align="left">_484 = format(move _485)</td></tr></table>>];
    bb190__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>StorageDead(_499)<br/>StorageDead(_496)<br/>StorageDead(_493)<br/>StorageDead(_492)<br/>StorageDead(_488)<br/>_483 = move _484<br/>StorageDead(_484)<br/>_482 = &amp;_483<br/>_481 = &amp;(*_482)<br/></td></tr><tr><td align="left">_480 = &lt;String as Deref&gt;::deref(move _481)</td></tr></table>>];
    bb191__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_479 = &amp;(*_480)<br/>StorageDead(_481)<br/></td></tr><tr><td align="left">_478 = solana_program::log::sol_log(move _479)</td></tr></table>>];
    bb192__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/></td></tr><tr><td align="left">drop(_483)</td></tr></table>>];
    bb193__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/>StorageDead(_482)<br/>StorageDead(_480)<br/>StorageDead(_478)<br/>StorageLive(_500)<br/>_500 = _458<br/>_451 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _500)<br/>StorageDead(_500)<br/>StorageDead(_458)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/></td></tr><tr><td align="left">_450 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _451)</td></tr></table>>];
    bb195__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>_501 = discriminant(_450)<br/></td></tr><tr><td align="left">switchInt(move _501)</td></tr></table>>];
    bb196__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_505)<br/>_505 = ((_450 as Continue).0: ())<br/>_449 = _505<br/>StorageDead(_505)<br/>StorageDead(_450)<br/>StorageDead(_449)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = &amp;_139<br/></td></tr><tr><td align="left">_507 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, i64&gt;::values(move _508)</td></tr></table>>];
    bb197__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_502)<br/>_502 = ((_450 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_504)<br/>_504 = _502<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _504)</td></tr></table>>];
    bb198__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_502)<br/>StorageDead(_450)<br/>StorageDead(_449)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_508)<br/></td></tr><tr><td align="left">_506 = &lt;std::collections::btree_map::Values&lt;'_, anchor_lang::prelude::Pubkey, i64&gt; as Iterator&gt;::sum::&lt;i64&gt;(move _507)</td></tr></table>>];
    bb200__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_507)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>_514 = _506<br/></td></tr><tr><td align="left">_513 = core::num::&lt;impl i64&gt;::unsigned_abs(move _514)</td></tr></table>>];
    bb201__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_514)<br/>StorageLive(_515)<br/>_515 = _137<br/>_512 = Le(move _513, move _515)<br/></td></tr><tr><td align="left">switchInt(move _512)</td></tr></table>>];
    bb202__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_513)<br/>StorageLive(_516)<br/>_516 = ()<br/>_511 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _516)<br/>StorageDead(_516)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_513)<br/>StorageLive(_517)<br/>_517 = error::ErrorCode::DefaultError<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>_884 = const _<br/>_528 = &amp;(*_884)<br/>_527 = &amp;(*_528)<br/>_526 = move _527 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_527)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>_536 = &amp;_517<br/>_535 = &amp;(*_536)<br/></td></tr><tr><td align="left">_534 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _535)</td></tr></table>>];
    bb204__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_535)<br/>_533 = [move _534]<br/>StorageDead(_534)<br/>_532 = &amp;_533<br/>_531 = &amp;(*_532)<br/>_530 = move _531 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_531)<br/></td></tr><tr><td align="left">_525 = Arguments::&lt;'_&gt;::new_v1(move _526, move _530)</td></tr></table>>];
    bb205__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>StorageDead(_526)<br/></td></tr><tr><td align="left">_524 = format(move _525)</td></tr></table>>];
    bb206__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/>StorageDead(_536)<br/>StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_528)<br/>_523 = move _524<br/>StorageDead(_524)<br/>_522 = &amp;_523<br/>_521 = &amp;(*_522)<br/></td></tr><tr><td align="left">_520 = &lt;String as Deref&gt;::deref(move _521)</td></tr></table>>];
    bb207__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">_519 = &amp;(*_520)<br/>StorageDead(_521)<br/></td></tr><tr><td align="left">_518 = solana_program::log::sol_log(move _519)</td></tr></table>>];
    bb208__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/></td></tr><tr><td align="left">drop(_523)</td></tr></table>>];
    bb209__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_522)<br/>StorageDead(_520)<br/>StorageDead(_518)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>_883 = const _<br/>_547 = &amp;(*_883)<br/>_546 = &amp;(*_547)<br/>_545 = move _546 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_546)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>_555 = &amp;_506<br/>_554 = &amp;(*_555)<br/></td></tr><tr><td align="left">_553 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _554)</td></tr></table>>];
    bb210__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>_558 = &amp;_137<br/>_557 = &amp;(*_558)<br/></td></tr><tr><td align="left">_556 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _557)</td></tr></table>>];
    bb211__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>_552 = [move _553, move _556]<br/>StorageDead(_556)<br/>StorageDead(_553)<br/>_551 = &amp;_552<br/>_550 = &amp;(*_551)<br/>_549 = move _550 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">_544 = Arguments::&lt;'_&gt;::new_v1(move _545, move _549)</td></tr></table>>];
    bb212__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_545)<br/></td></tr><tr><td align="left">_543 = format(move _544)</td></tr></table>>];
    bb213__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_544)<br/>StorageDead(_558)<br/>StorageDead(_555)<br/>StorageDead(_552)<br/>StorageDead(_551)<br/>StorageDead(_547)<br/>_542 = move _543<br/>StorageDead(_543)<br/>_541 = &amp;_542<br/>_540 = &amp;(*_541)<br/></td></tr><tr><td align="left">_539 = &lt;String as Deref&gt;::deref(move _540)</td></tr></table>>];
    bb214__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_538 = &amp;(*_539)<br/>StorageDead(_540)<br/></td></tr><tr><td align="left">_537 = solana_program::log::sol_log(move _538)</td></tr></table>>];
    bb215__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/></td></tr><tr><td align="left">drop(_542)</td></tr></table>>];
    bb216__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_541)<br/>StorageDead(_539)<br/>StorageDead(_537)<br/>StorageLive(_559)<br/>_559 = _517<br/>_511 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _559)<br/>StorageDead(_559)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/></td></tr><tr><td align="left">_510 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _511)</td></tr></table>>];
    bb218__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>_560 = discriminant(_510)<br/></td></tr><tr><td align="left">switchInt(move _560)</td></tr></table>>];
    bb219__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageLive(_564)<br/>_564 = ((_510 as Continue).0: ())<br/>_509 = _564<br/>StorageDead(_564)<br/>StorageDead(_510)<br/>StorageDead(_509)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>_567 = &amp;_22<br/></td></tr><tr><td align="left">_566 = FillMode::is_liquidation(move _567)</td></tr></table>>];
    bb220__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_561)<br/>_561 = ((_510 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_563)<br/>_563 = _561<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _563)</td></tr></table>>];
    bb221__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_563)<br/>StorageDead(_561)<br/>StorageDead(_510)<br/>StorageDead(_509)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left">switchInt(move _566)</td></tr></table>>];
    bb223__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>_565 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>_570 = &amp;_140<br/>StorageLive(_571)<br/>_882 = const _<br/>_571 = &amp;(*_882)<br/></td></tr><tr><td align="left">_569 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _570, move _571)</td></tr></table>>];
    bb225__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left">switchInt(move _569)</td></tr></table>>];
    bb226__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_570)<br/>StorageLive(_573)<br/>_573 = _137<br/>_568 = move _573 as i64 (IntToInt)<br/>StorageDead(_573)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_570)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>_575 = _137<br/>_574 = move _575 as i64 (IntToInt)<br/>StorageDead(_575)<br/>_576 = Eq(_574, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _576, &quot;attempt to negate `{}`, which would overflow&quot;, _574)</td></tr></table>>];
    bb228__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">_568 = Neg(move _574)<br/>StorageDead(_574)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_569)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>_581 = _28<br/></td></tr><tr><td align="left">switchInt(move _581)</td></tr></table>>];
    bb230__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">_580 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">_580 = math::margin::MarginRequirementType::Fill<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/></td></tr><tr><td align="left">_579 = MarginContext::standard(move _580)</td></tr></table>>];
    bb233__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_580)<br/>StorageLive(_582)<br/>_582 = _24<br/>StorageLive(_583)<br/>_583 = _568<br/></td></tr><tr><td align="left">_578 = MarginContext::fuel_perp_delta(move _579, move _582, move _583)</td></tr></table>>];
    bb234__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>StorageDead(_582)<br/>StorageDead(_579)<br/>StorageLive(_584)<br/>_584 = &amp;(*_1)<br/>StorageLive(_585)<br/>_585 = _18<br/></td></tr><tr><td align="left">_577 = MarginContext::fuel_numerator(move _578, move _584, move _585)</td></tr></table>>];
    bb235__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_584)<br/>StorageDead(_578)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>_587 = _23<br/></td></tr><tr><td align="left">switchInt(move _587)</td></tr></table>>];
    bb236__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_588)<br/>_588 = _28<br/></td></tr><tr><td align="left">switchInt(move _588)</td></tr></table>>];
    bb237__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_589)<br/>StorageLive(_590)<br/>_590 = _577<br/></td></tr><tr><td align="left">_589 = MarginContext::margin_ratio_override(move _590, const _)</td></tr></table>>];
    bb238__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_590)<br/>_577 = move _589<br/>StorageDead(_589)<br/>_586 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">_586 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>StorageDead(_587)<br/>StorageDead(_586)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>_594 = &amp;(*_1)<br/>StorageLive(_595)<br/>_595 = &amp;(*_13)<br/>StorageLive(_596)<br/>_596 = &amp;(*_12)<br/>StorageLive(_597)<br/>_597 = &amp;mut (*_14)<br/>StorageLive(_598)<br/>_598 = _577<br/></td></tr><tr><td align="left">_593 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _594, move _595, move _596, move _597, move _598)</td></tr></table>>];
    bb241__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>StorageDead(_597)<br/>StorageDead(_596)<br/>StorageDead(_595)<br/>StorageDead(_594)<br/></td></tr><tr><td align="left">_592 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _593)</td></tr></table>>];
    bb242__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>_599 = discriminant(_592)<br/></td></tr><tr><td align="left">switchInt(move _599)</td></tr></table>>];
    bb243__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageLive(_603)<br/>_603 = ((_592 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_591 = _603<br/>StorageDead(_603)<br/>StorageDead(_592)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>_607 = &amp;mut (*_4)<br/>StorageLive(_608)<br/>_608 = &amp;mut (*_1)<br/>StorageLive(_609)<br/>_609 = (_591.17: u32)<br/>StorageLive(_610)<br/>_610 = (_591.18: u32)<br/>StorageLive(_611)<br/>_611 = (_591.19: u32)<br/>StorageLive(_612)<br/>_612 = _18<br/></td></tr><tr><td align="left">_606 = UserStats::update_fuel_bonus(move _607, move _608, move _609, move _610, move _611, move _612)</td></tr></table>>];
    bb244__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_600)<br/>_600 = ((_592 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_602)<br/>_602 = _600<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _602)</td></tr></table>>];
    bb245__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/>StorageDead(_600)<br/>StorageDead(_592)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_612)<br/>StorageDead(_611)<br/>StorageDead(_610)<br/>StorageDead(_609)<br/>StorageDead(_608)<br/>StorageDead(_607)<br/></td></tr><tr><td align="left">_605 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _606)</td></tr></table>>];
    bb247__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_606)<br/>_613 = discriminant(_605)<br/></td></tr><tr><td align="left">switchInt(move _613)</td></tr></table>>];
    bb248__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageLive(_617)<br/>_617 = ((_605 as Continue).0: ())<br/>_604 = _617<br/>StorageDead(_617)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>_619 = &amp;_591<br/></td></tr><tr><td align="left">_618 = MarginCalculation::meets_margin_requirement(move _619)</td></tr></table>>];
    bb249__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_614)<br/>_614 = ((_605 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_616)<br/>_616 = _614<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _616)</td></tr></table>>];
    bb250__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_616)<br/>StorageDead(_614)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left">switchInt(move _618)</td></tr></table>>];
    bb252__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>_565 = const ()<br/>StorageDead(_618)<br/>StorageDead(_591)<br/>StorageDead(_577)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>_881 = const _<br/>_631 = &amp;(*_881)<br/>_630 = &amp;(*_631)<br/>_629 = move _630 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_630)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_639 = &amp;(_591.3: u128)<br/>_638 = &amp;(*_639)<br/></td></tr><tr><td align="left">_637 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _638)</td></tr></table>>];
    bb254__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>_642 = &amp;(_591.1: i128)<br/>_641 = &amp;(*_642)<br/></td></tr><tr><td align="left">_640 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _641)</td></tr></table>>];
    bb255__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>_636 = [move _637, move _640]<br/>StorageDead(_640)<br/>StorageDead(_637)<br/>_635 = &amp;_636<br/>_634 = &amp;(*_635)<br/>_633 = move _634 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_634)<br/></td></tr><tr><td align="left">_628 = Arguments::&lt;'_&gt;::new_v1(move _629, move _633)</td></tr></table>>];
    bb256__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_633)<br/>StorageDead(_629)<br/></td></tr><tr><td align="left">_627 = format(move _628)</td></tr></table>>];
    bb257__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_628)<br/>StorageDead(_642)<br/>StorageDead(_639)<br/>StorageDead(_636)<br/>StorageDead(_635)<br/>StorageDead(_631)<br/>_626 = move _627<br/>StorageDead(_627)<br/>_625 = &amp;_626<br/>_624 = &amp;(*_625)<br/></td></tr><tr><td align="left">_623 = &lt;String as Deref&gt;::deref(move _624)</td></tr></table>>];
    bb258__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">_622 = &amp;(*_623)<br/>StorageDead(_624)<br/></td></tr><tr><td align="left">_621 = solana_program::log::sol_log(move _622)</td></tr></table>>];
    bb259__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/></td></tr><tr><td align="left">drop(_626)</td></tr></table>>];
    bb260__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_626)<br/>StorageDead(_625)<br/>StorageDead(_623)<br/>StorageDead(_621)<br/>StorageLive(_643)<br/>_643 = error::ErrorCode::InsufficientCollateral<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Err(move _643)<br/>StorageDead(_643)<br/>StorageDead(_618)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/>StorageDead(_565)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>_890 = const false<br/>_646 = move _139<br/></td></tr><tr><td align="left">_645 = &lt;BTreeMap&lt;anchor_lang::prelude::Pubkey, i64&gt; as IntoIterator&gt;::into_iter(move _646)</td></tr></table>>];
    bb262__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/>StorageLive(_647)<br/>_647 = move _645<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb263__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>_651 = &amp;mut _647<br/>_650 = &amp;mut (*_651)<br/></td></tr><tr><td align="left">_649 = &lt;std::collections::btree_map::IntoIter&lt;anchor_lang::prelude::Pubkey, i64&gt; as Iterator&gt;::next(move _650)</td></tr></table>>];
    bb264__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_650)<br/>_652 = discriminant(_649)<br/></td></tr><tr><td align="left">switchInt(move _652)</td></tr></table>>];
    bb265__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageLive(_654)<br/>_654 = (((_649 as Some).0: (anchor_lang::prelude::Pubkey, i64)).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_655)<br/>_655 = (((_649 as Some).0: (anchor_lang::prelude::Pubkey, i64)).1: i64)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = &amp;(*_5)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>_661 = &amp;_654<br/>_660 = &amp;(*_661)<br/></td></tr><tr><td align="left">_658 = UserMap::&lt;'_&gt;::get_ref_mut(move _659, move _660)</td></tr></table>>];
    bb266__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">_644 = const ()<br/>StorageDead(_651)<br/>StorageDead(_649)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">drop(_647)</td></tr></table>>];
    bb267__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_660)<br/>StorageDead(_659)<br/></td></tr><tr><td align="left">_657 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _658)</td></tr></table>>];
    bb268__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>_662 = discriminant(_657)<br/></td></tr><tr><td align="left">switchInt(move _662)</td></tr></table>>];
    bb269__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageLive(_666)<br/>_666 = move ((_657 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_656 = move _666<br/>StorageDead(_666)<br/>_934 = discriminant(_657)<br/>StorageDead(_661)<br/>StorageDead(_657)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>_671 = &amp;_656<br/></td></tr><tr><td align="left">_670 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _671)</td></tr></table>>];
    bb270__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageLive(_663)<br/>_663 = ((_657 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_665)<br/>_665 = _663<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _665)</td></tr></table>>];
    bb271__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_665)<br/>StorageDead(_663)<br/>_932 = discriminant(_657)<br/>StorageDead(_661)<br/>StorageDead(_657)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/>_669 = &amp;((*_670).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_672)<br/>_672 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_668 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _669, move _672)</td></tr></table>>];
    bb273__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left">switchInt(move _668)</td></tr></table>>];
    bb274__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>StorageDead(_670)<br/>StorageDead(_669)<br/>_889 = const true<br/>_667 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>StorageDead(_670)<br/>StorageDead(_669)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>_676 = &amp;(*_6)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>_680 = &amp;_656<br/></td></tr><tr><td align="left">_679 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _680)</td></tr></table>>];
    bb276__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>_678 = &amp;((*_679).0: anchor_lang::prelude::Pubkey)<br/>_677 = &amp;(*_678)<br/></td></tr><tr><td align="left">_675 = UserStatsMap::&lt;'_&gt;::get_ref_mut(move _676, move _677)</td></tr></table>>];
    bb277__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_677)<br/>StorageDead(_676)<br/></td></tr><tr><td align="left">_674 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _675)</td></tr></table>>];
    bb278__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>_681 = discriminant(_674)<br/></td></tr><tr><td align="left">switchInt(move _681)</td></tr></table>>];
    bb279__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageLive(_685)<br/>_685 = move ((_674 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_673 = move _685<br/>StorageDead(_685)<br/>_889 = const true<br/>_667 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _673)<br/>StorageDead(_673)<br/>_938 = discriminant(_674)<br/>StorageDead(_679)<br/>StorageDead(_678)<br/>StorageDead(_674)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageLive(_682)<br/>_682 = ((_674 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_684)<br/>_684 = _682<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _684)</td></tr></table>>];
    bb281__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>StorageDead(_682)<br/>StorageDead(_673)<br/>_936 = discriminant(_674)<br/>StorageDead(_679)<br/>StorageDead(_678)<br/>StorageDead(_674)<br/>StorageDead(_668)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_668)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>_694 = &amp;_656<br/>_693 = &amp;(*_694)<br/></td></tr><tr><td align="left">_692 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _693)</td></tr></table>>];
    bb283__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">_691 = &amp;(*_692)<br/>StorageDead(_693)<br/>StorageLive(_695)<br/>_695 = _655<br/>StorageLive(_696)<br/>_696 = _24<br/></td></tr><tr><td align="left">_690 = math::orders::select_margin_type_for_perp_maker(move _691, move _695, move _696)</td></tr></table>>];
    bb284__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_696)<br/>StorageDead(_695)<br/>StorageDead(_691)<br/></td></tr><tr><td align="left">_689 = &lt;std::result::Result&lt;(math::margin::MarginRequirementType, bool), error::ErrorCode&gt; as Try&gt;::branch(move _690)</td></tr></table>>];
    bb285__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>_697 = discriminant(_689)<br/></td></tr><tr><td align="left">switchInt(move _697)</td></tr></table>>];
    bb286__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageLive(_701)<br/>_701 = ((_689 as Continue).0: (math::margin::MarginRequirementType, bool))<br/>_688 = _701<br/>StorageDead(_701)<br/>StorageLive(_686)<br/>_686 = (_688.0: math::margin::MarginRequirementType)<br/>StorageLive(_687)<br/>_687 = (_688.1: bool)<br/>StorageDead(_694)<br/>StorageDead(_692)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>_705 = _686<br/></td></tr><tr><td align="left">_704 = MarginContext::standard(move _705)</td></tr></table>>];
    bb287__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageLive(_698)<br/>_698 = ((_689 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_700)<br/>_700 = _698<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _700)</td></tr></table>>];
    bb288__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_700)<br/>StorageDead(_698)<br/>StorageDead(_694)<br/>StorageDead(_692)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb289__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageLive(_706)<br/>_706 = _24<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>_708 = _655<br/>_709 = Eq(_708, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _709, &quot;attempt to negate `{}`, which would overflow&quot;, _708)</td></tr></table>>];
    bb290__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">_707 = Neg(move _708)<br/>StorageDead(_708)<br/></td></tr><tr><td align="left">_703 = MarginContext::fuel_perp_delta(move _704, move _706, move _707)</td></tr></table>>];
    bb291__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_707)<br/>StorageDead(_706)<br/>StorageDead(_704)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>_713 = &amp;_656<br/>_712 = &amp;(*_713)<br/></td></tr><tr><td align="left">_711 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _712)</td></tr></table>>];
    bb292__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">_710 = &amp;(*_711)<br/>StorageDead(_712)<br/>StorageLive(_714)<br/>_714 = _18<br/></td></tr><tr><td align="left">_702 = MarginContext::fuel_numerator(move _703, move _710, move _714)</td></tr></table>>];
    bb293__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_714)<br/>StorageDead(_710)<br/>StorageDead(_703)<br/>StorageDead(_713)<br/>StorageDead(_711)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>_716 = _23<br/></td></tr><tr><td align="left">switchInt(move _716)</td></tr></table>>];
    bb294__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageLive(_717)<br/>StorageLive(_718)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>_720 = _28<br/></td></tr><tr><td align="left">switchInt(move _720)</td></tr></table>>];
    bb295__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageLive(_721)<br/>_721 = _687<br/></td></tr><tr><td align="left">switchInt(move _721)</td></tr></table>>];
    bb296__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageLive(_722)<br/>_722 = ()<br/>_719 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _722)<br/>StorageDead(_722)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageLive(_723)<br/>_723 = error::ErrorCode::InvalidOracle<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>StorageLive(_732)<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>_879 = const _<br/>_734 = &amp;(*_879)<br/>_733 = &amp;(*_734)<br/>_732 = move _733 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_733)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>_742 = &amp;_723<br/>_741 = &amp;(*_742)<br/></td></tr><tr><td align="left">_740 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _741)</td></tr></table>>];
    bb298__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_741)<br/>_739 = [move _740]<br/>StorageDead(_740)<br/>_738 = &amp;_739<br/>_737 = &amp;(*_738)<br/>_736 = move _737 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_737)<br/></td></tr><tr><td align="left">_731 = Arguments::&lt;'_&gt;::new_v1(move _732, move _736)</td></tr></table>>];
    bb299__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/>StorageDead(_732)<br/></td></tr><tr><td align="left">_730 = format(move _731)</td></tr></table>>];
    bb300__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_731)<br/>StorageDead(_742)<br/>StorageDead(_739)<br/>StorageDead(_738)<br/>StorageDead(_734)<br/>_729 = move _730<br/>StorageDead(_730)<br/>_728 = &amp;_729<br/>_727 = &amp;(*_728)<br/></td></tr><tr><td align="left">_726 = &lt;String as Deref&gt;::deref(move _727)</td></tr></table>>];
    bb301__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">_725 = &amp;(*_726)<br/>StorageDead(_727)<br/></td></tr><tr><td align="left">_724 = solana_program::log::sol_log(move _725)</td></tr></table>>];
    bb302__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_725)<br/></td></tr><tr><td align="left">drop(_729)</td></tr></table>>];
    bb303__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_729)<br/>StorageDead(_728)<br/>StorageDead(_726)<br/>StorageDead(_724)<br/>StorageLive(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>_745 = const &quot;taker or maker must be reducing position if oracle stale for margin&quot;<br/>_744 = &amp;(*_745)<br/></td></tr><tr><td align="left">_743 = solana_program::log::sol_log(move _744)</td></tr></table>>];
    bb304__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_744)<br/>StorageDead(_745)<br/>StorageDead(_743)<br/>StorageLive(_746)<br/>_746 = _723<br/>_719 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _746)<br/>StorageDead(_746)<br/>StorageDead(_723)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_721)<br/>StorageDead(_720)<br/></td></tr><tr><td align="left">_718 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _719)</td></tr></table>>];
    bb306__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_719)<br/>_747 = discriminant(_718)<br/></td></tr><tr><td align="left">switchInt(move _747)</td></tr></table>>];
    bb307__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageLive(_751)<br/>_751 = ((_718 as Continue).0: ())<br/>_717 = _751<br/>StorageDead(_751)<br/>StorageDead(_718)<br/>StorageDead(_717)<br/>StorageLive(_752)<br/>_752 = _687<br/></td></tr><tr><td align="left">switchInt(move _752)</td></tr></table>>];
    bb308__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageLive(_748)<br/>_748 = ((_718 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_750)<br/>_750 = _748<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _750)</td></tr></table>>];
    bb309__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_750)<br/>StorageDead(_748)<br/>StorageDead(_718)<br/>StorageDead(_717)<br/>StorageDead(_716)<br/>StorageDead(_715)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageLive(_753)<br/>StorageLive(_754)<br/>_754 = _702<br/></td></tr><tr><td align="left">_753 = MarginContext::margin_ratio_override(move _754, const _)</td></tr></table>>];
    bb311__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">_715 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_754)<br/>_702 = move _753<br/>StorageDead(_753)<br/>_715 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_752)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">_715 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_716)<br/>StorageDead(_715)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>_761 = &amp;_656<br/>_760 = &amp;(*_761)<br/></td></tr><tr><td align="left">_759 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _760)</td></tr></table>>];
    bb316__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">_758 = &amp;(*_759)<br/>StorageDead(_760)<br/>StorageLive(_762)<br/>_762 = &amp;(*_13)<br/>StorageLive(_763)<br/>_763 = &amp;(*_12)<br/>StorageLive(_764)<br/>_764 = &amp;mut (*_14)<br/>StorageLive(_765)<br/>_765 = _702<br/></td></tr><tr><td align="left">_757 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _758, move _762, move _763, move _764, move _765)</td></tr></table>>];
    bb317__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_765)<br/>StorageDead(_764)<br/>StorageDead(_763)<br/>StorageDead(_762)<br/>StorageDead(_758)<br/></td></tr><tr><td align="left">_756 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _757)</td></tr></table>>];
    bb318__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_757)<br/>_766 = discriminant(_756)<br/></td></tr><tr><td align="left">switchInt(move _766)</td></tr></table>>];
    bb319__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageLive(_770)<br/>_770 = ((_756 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_755 = _770<br/>StorageDead(_770)<br/>StorageDead(_761)<br/>StorageDead(_759)<br/>StorageDead(_756)<br/>StorageLive(_771)<br/>_772 = discriminant(_667)<br/></td></tr><tr><td align="left">switchInt(move _772)</td></tr></table>>];
    bb320__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageLive(_767)<br/>_767 = ((_756 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_769)<br/>_769 = _767<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _769)</td></tr></table>>];
    bb321__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/>StorageDead(_767)<br/>StorageDead(_761)<br/>StorageDead(_759)<br/>StorageDead(_756)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb322__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">_771 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb323__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageLive(_773)<br/>_889 = const false<br/>_773 = move ((_667 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>StorageLive(_776)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>_779 = &amp;mut _773<br/></td></tr><tr><td align="left">_778 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _779)</td></tr></table>>];
    bb324__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">_777 = &amp;mut (*_778)<br/>StorageDead(_779)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>_783 = &amp;mut _656<br/>_782 = &amp;mut (*_783)<br/></td></tr><tr><td align="left">_781 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _782)</td></tr></table>>];
    bb325__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">_780 = &amp;mut (*_781)<br/>StorageDead(_782)<br/>StorageLive(_784)<br/>_784 = (_755.17: u32)<br/>StorageLive(_785)<br/>_785 = (_755.18: u32)<br/>StorageLive(_786)<br/>_786 = (_755.19: u32)<br/>StorageLive(_787)<br/>_787 = _18<br/></td></tr><tr><td align="left">_776 = UserStats::update_fuel_bonus(move _777, move _780, move _784, move _785, move _786, move _787)</td></tr></table>>];
    bb326__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_787)<br/>StorageDead(_786)<br/>StorageDead(_785)<br/>StorageDead(_784)<br/>StorageDead(_780)<br/>StorageDead(_777)<br/></td></tr><tr><td align="left">_775 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _776)</td></tr></table>>];
    bb327__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_776)<br/>_788 = discriminant(_775)<br/></td></tr><tr><td align="left">switchInt(move _788)</td></tr></table>>];
    bb328__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_792)<br/>_792 = ((_775 as Continue).0: ())<br/>_774 = _792<br/>StorageDead(_792)<br/>StorageDead(_783)<br/>StorageDead(_781)<br/>StorageDead(_778)<br/>StorageDead(_775)<br/>StorageDead(_774)<br/>_771 = const ()<br/></td></tr><tr><td align="left">drop(_773)</td></tr></table>>];
    bb329__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageLive(_789)<br/>_789 = ((_775 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_791)<br/>_791 = _789<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _791)</td></tr></table>>];
    bb330__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_791)<br/>StorageDead(_789)<br/>StorageDead(_783)<br/>StorageDead(_781)<br/>StorageDead(_778)<br/>StorageDead(_775)<br/>StorageDead(_774)<br/></td></tr><tr><td align="left">drop(_773)</td></tr></table>>];
    bb331__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_773)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb332__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>_794 = &amp;_755<br/></td></tr><tr><td align="left">_793 = MarginCalculation::meets_margin_requirement(move _794)</td></tr></table>>];
    bb333__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left">switchInt(move _793)</td></tr></table>>];
    bb334__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>_648 = const ()<br/>StorageDead(_793)<br/>StorageDead(_755)<br/>StorageDead(_702)<br/>StorageDead(_687)<br/>StorageDead(_686)<br/>_940 = discriminant(_667)<br/></td></tr><tr><td align="left">switchInt(move _940)</td></tr></table>>];
    bb335__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>_878 = const _<br/>_806 = &amp;(*_878)<br/>_805 = &amp;(*_806)<br/>_804 = move _805 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_805)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>_814 = &amp;_654<br/>_813 = &amp;(*_814)<br/></td></tr><tr><td align="left">_812 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _813)</td></tr></table>>];
    bb336__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_813)<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>_817 = &amp;(_755.3: u128)<br/>_816 = &amp;(*_817)<br/></td></tr><tr><td align="left">_815 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _816)</td></tr></table>>];
    bb337__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_816)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>_820 = &amp;(_755.1: i128)<br/>_819 = &amp;(*_820)<br/></td></tr><tr><td align="left">_818 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _819)</td></tr></table>>];
    bb338__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_819)<br/>_811 = [move _812, move _815, move _818]<br/>StorageDead(_818)<br/>StorageDead(_815)<br/>StorageDead(_812)<br/>_810 = &amp;_811<br/>_809 = &amp;(*_810)<br/>_808 = move _809 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_809)<br/></td></tr><tr><td align="left">_803 = Arguments::&lt;'_&gt;::new_v1(move _804, move _808)</td></tr></table>>];
    bb339__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_808)<br/>StorageDead(_804)<br/></td></tr><tr><td align="left">_802 = format(move _803)</td></tr></table>>];
    bb340__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_803)<br/>StorageDead(_820)<br/>StorageDead(_817)<br/>StorageDead(_814)<br/>StorageDead(_811)<br/>StorageDead(_810)<br/>StorageDead(_806)<br/>_801 = move _802<br/>StorageDead(_802)<br/>_800 = &amp;_801<br/>_799 = &amp;(*_800)<br/></td></tr><tr><td align="left">_798 = &lt;String as Deref&gt;::deref(move _799)</td></tr></table>>];
    bb341__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">_797 = &amp;(*_798)<br/>StorageDead(_799)<br/></td></tr><tr><td align="left">_796 = solana_program::log::sol_log(move _797)</td></tr></table>>];
    bb342__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/></td></tr><tr><td align="left">drop(_801)</td></tr></table>>];
    bb343__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_800)<br/>StorageDead(_798)<br/>StorageDead(_796)<br/>StorageLive(_821)<br/>_821 = error::ErrorCode::InsufficientCollateral<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Err(move _821)<br/>StorageDead(_821)<br/>StorageDead(_793)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_654)<br/>StorageDead(_651)<br/>StorageDead(_649)<br/>StorageDead(_648)<br/>_152 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb345__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageDead(_645)<br/>StorageDead(_644)<br/>StorageLive(_822)<br/>StorageLive(_823)<br/>_823 = _23<br/></td></tr><tr><td align="left">switchInt(move _823)</td></tr></table>>];
    bb346__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageLive(_824)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>StorageLive(_828)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>StorageLive(_831)<br/>_831 = &amp;(*_13)<br/>StorageLive(_832)<br/>StorageLive(_833)<br/>_833 = &amp;_24<br/>_832 = &amp;(*_833)<br/></td></tr><tr><td align="left">_830 = PerpMarketMap::&lt;'_&gt;::get_ref(move _831, move _832)</td></tr></table>>];
    bb347__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_832)<br/>StorageDead(_831)<br/></td></tr><tr><td align="left">_829 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _830)</td></tr></table>>];
    bb348__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">_892 = const true<br/>StorageDead(_830)<br/>_834 = discriminant(_829)<br/></td></tr><tr><td align="left">switchInt(move _834)</td></tr></table>>];
    bb349__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageLive(_838)<br/>_838 = move ((_829 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_828 = move _838<br/>StorageDead(_838)<br/>_827 = &amp;_828<br/></td></tr><tr><td align="left">_826 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _827)</td></tr></table>>];
    bb350__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageLive(_835)<br/>_835 = ((_829 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_837)<br/>_837 = _835<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _837)</td></tr></table>>];
    bb351__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_837)<br/>StorageDead(_835)<br/>StorageDead(_827)<br/>StorageDead(_825)<br/>_942 = discriminant(_829)<br/>StorageDead(_833)<br/>_892 = const false<br/>StorageDead(_829)<br/>StorageDead(_828)<br/>StorageDead(_826)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb352__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">_825 = &amp;(*_826)<br/>StorageDead(_827)<br/></td></tr><tr><td align="left">_824 = PerpMarket::get_open_interest(move _825)</td></tr></table>>];
    bb353__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_825)<br/></td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb354__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_844)<br/>StorageDead(_843)<br/>StorageLive(_845)<br/>_845 = ()<br/>_841 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _845)<br/>StorageDead(_845)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb355__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_844)<br/>StorageDead(_843)<br/>StorageLive(_846)<br/>_846 = error::ErrorCode::InvalidOracle<br/>StorageLive(_847)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>_880 = const _<br/>_857 = &amp;(*_880)<br/>_856 = &amp;(*_857)<br/>_855 = move _856 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_856)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>StorageLive(_864)<br/>StorageLive(_865)<br/>_865 = &amp;_846<br/>_864 = &amp;(*_865)<br/></td></tr><tr><td align="left">_863 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _864)</td></tr></table>>];
    bb356__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/>_862 = [move _863]<br/>StorageDead(_863)<br/>_861 = &amp;_862<br/>_860 = &amp;(*_861)<br/>_859 = move _860 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_860)<br/></td></tr><tr><td align="left">_854 = Arguments::&lt;'_&gt;::new_v1(move _855, move _859)</td></tr></table>>];
    bb357__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>StorageDead(_855)<br/></td></tr><tr><td align="left">_853 = format(move _854)</td></tr></table>>];
    bb358__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/>StorageDead(_865)<br/>StorageDead(_862)<br/>StorageDead(_861)<br/>StorageDead(_857)<br/>_852 = move _853<br/>StorageDead(_853)<br/>_851 = &amp;_852<br/>_850 = &amp;(*_851)<br/></td></tr><tr><td align="left">_849 = &lt;String as Deref&gt;::deref(move _850)</td></tr></table>>];
    bb359__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">_848 = &amp;(*_849)<br/>StorageDead(_850)<br/></td></tr><tr><td align="left">_847 = solana_program::log::sol_log(move _848)</td></tr></table>>];
    bb360__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_848)<br/></td></tr><tr><td align="left">drop(_852)</td></tr></table>>];
    bb361__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>StorageDead(_851)<br/>StorageDead(_849)<br/>StorageDead(_847)<br/>StorageLive(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>_868 = const &quot;oracle stale for margin but open interest increased&quot;<br/>_867 = &amp;(*_868)<br/></td></tr><tr><td align="left">_866 = solana_program::log::sol_log(move _867)</td></tr></table>>];
    bb362__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_867)<br/>StorageDead(_868)<br/>StorageDead(_866)<br/>StorageLive(_869)<br/>_869 = _846<br/>_841 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _869)<br/>StorageDead(_869)<br/>StorageDead(_846)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb363__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/></td></tr><tr><td align="left">_840 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _841)</td></tr></table>>];
    bb364__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>_870 = discriminant(_840)<br/></td></tr><tr><td align="left">switchInt(move _870)</td></tr></table>>];
    bb365__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_874)<br/>_874 = ((_840 as Continue).0: ())<br/>_839 = _874<br/>StorageDead(_874)<br/>StorageDead(_840)<br/>StorageDead(_839)<br/>_822 = const ()<br/>StorageDead(_824)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb366__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageLive(_871)<br/>_871 = ((_840 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_873)<br/>_873 = _871<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _873)</td></tr></table>>];
    bb367__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/>StorageDead(_871)<br/>StorageDead(_840)<br/>StorageDead(_839)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb368__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">_822 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb369__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageDead(_822)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>_876 = _137<br/>StorageLive(_877)<br/>_877 = _138<br/>_875 = (move _876, move _877)<br/>StorageDead(_877)<br/>StorageDead(_876)<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Ok(move _875)<br/>StorageDead(_875)<br/>StorageDead(_506)<br/>StorageDead(_140)<br/>_890 = const false<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb370__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_73)<br/>StorageDead(_50)<br/>_891 = const false<br/>StorageDead(_39)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb371__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_824)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb372__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_773)<br/>StorageDead(_771)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb373__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb374__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_702)<br/>StorageDead(_687)<br/>StorageDead(_686)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb375__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">_889 = const false<br/>StorageDead(_667)<br/></td></tr><tr><td align="left">drop(_656)</td></tr></table>>];
    bb376__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_654)<br/>StorageDead(_651)<br/>StorageDead(_649)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">drop(_647)</td></tr></table>>];
    bb377__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageDead(_645)<br/>StorageDead(_644)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb378__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/>StorageDead(_577)<br/>StorageDead(_568)<br/>StorageDead(_566)<br/>StorageDead(_565)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb379__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb381__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left">drop(_329)</td></tr></table>>];
    bb382__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">drop(_328)</td></tr></table>>];
    bb383__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb384__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left">drop(_309)</td></tr></table>>];
    bb385__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/></td></tr><tr><td align="left">drop(_299)</td></tr></table>>];
    bb386__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">drop(_204)</td></tr></table>>];
    bb388__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb389__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">_888 = const false<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb390__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb391__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb392__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb393__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb394__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb395__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">drop(_169)</td></tr></table>>];
    bb396__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_159)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb397__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">switchInt(_890)</td></tr></table>>];
    bb398__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">_890 = const false<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb399__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb400__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_948 = discriminant(_107)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>_893 = const false<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb401__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb402__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">switchInt(_891)</td></tr></table>>];
    bb404__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">_891 = const false<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb405__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb406__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left">return</td></tr></table>>];
    bb407__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">407 (cleanup)</td></tr><tr><td align="left">drop(_852)</td></tr></table>>];
    bb408__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">408 (cleanup)</td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb409__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">409 (cleanup)</td></tr><tr><td align="left">drop(_801)</td></tr></table>>];
    bb410__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">410 (cleanup)</td></tr><tr><td align="left">drop(_773)</td></tr></table>>];
    bb411__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">411 (cleanup)</td></tr><tr><td align="left">drop(_729)</td></tr></table>>];
    bb412__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">412 (cleanup)</td></tr><tr><td align="left">drop(_656)</td></tr></table>>];
    bb413__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">413 (cleanup)</td></tr><tr><td align="left">drop(_647)</td></tr></table>>];
    bb414__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">414 (cleanup)</td></tr><tr><td align="left">drop(_626)</td></tr></table>>];
    bb415__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">415 (cleanup)</td></tr><tr><td align="left">drop(_542)</td></tr></table>>];
    bb416__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">416 (cleanup)</td></tr><tr><td align="left">drop(_523)</td></tr></table>>];
    bb417__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">417 (cleanup)</td></tr><tr><td align="left">drop(_483)</td></tr></table>>];
    bb418__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">418 (cleanup)</td></tr><tr><td align="left">drop(_464)</td></tr></table>>];
    bb419__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">419 (cleanup)</td></tr><tr><td align="left">drop(_329)</td></tr></table>>];
    bb420__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">420 (cleanup)</td></tr><tr><td align="left">drop(_328)</td></tr></table>>];
    bb421__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">421 (cleanup)</td></tr><tr><td align="left">drop(_309)</td></tr></table>>];
    bb422__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">422 (cleanup)</td></tr><tr><td align="left">drop(_299)</td></tr></table>>];
    bb423__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">423 (cleanup)</td></tr><tr><td align="left">drop(_205)</td></tr></table>>];
    bb424__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">424 (cleanup)</td></tr><tr><td align="left">drop(_204)</td></tr></table>>];
    bb425__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">425 (cleanup)</td></tr><tr><td align="left">drop(_212)</td></tr></table>>];
    bb426__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">426 (cleanup)</td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb427__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">427 (cleanup)</td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb428__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">428 (cleanup)</td></tr><tr><td align="left">drop(_169)</td></tr></table>>];
    bb429__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">429 (cleanup)</td></tr><tr><td align="left">drop(_79)</td></tr></table>>];
    bb430__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">430 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb431__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">431 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb432__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">432 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb433__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left">drop(_212)</td></tr></table>>];
    bb434__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">_889 = const false<br/>StorageDead(_667)<br/></td></tr><tr><td align="left">drop(_656)</td></tr></table>>];
    bb435__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left">switchInt(_889)</td></tr></table>>];
    bb436__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left">drop(((_667 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;))</td></tr></table>>];
    bb437__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">_944 = discriminant(_829)<br/>StorageDead(_833)<br/>_892 = const false<br/>StorageDead(_829)<br/>StorageDead(_828)<br/>StorageDead(_826)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>StorageLive(_843)<br/>_843 = _824<br/>StorageLive(_844)<br/>_844 = _73<br/>_842 = Le(move _843, move _844)<br/></td></tr><tr><td align="left">switchInt(move _842)</td></tr></table>>];
    bb438__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left">switchInt(_889)</td></tr></table>>];
    bb439__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left">drop(((_667 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;))</td></tr></table>>];
    bb440__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">_946 = discriminant(_667)<br/></td></tr><tr><td align="left">switchInt(move _946)</td></tr></table>>];
    bb441__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left">drop(_139)</td></tr></table>>];
    bb442__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb443__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">443 (cleanup)</td></tr><tr><td align="left" balign="left">_950 = discriminant(_829)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb444__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">444 (cleanup)</td></tr><tr><td align="left">switchInt(_889)</td></tr></table>>];
    bb445__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">445 (cleanup)</td></tr><tr><td align="left">drop(((_667 as Some).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;))</td></tr></table>>];
    bb446__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">446 (cleanup)</td></tr><tr><td align="left" balign="left">_951 = discriminant(_667)<br/></td></tr><tr><td align="left">switchInt(move _951)</td></tr></table>>];
    bb447__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">447 (cleanup)</td></tr><tr><td align="left" balign="left">_952 = discriminant(_674)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb448__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">448 (cleanup)</td></tr><tr><td align="left" balign="left">_953 = discriminant(_657)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb449__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">449 (cleanup)</td></tr><tr><td align="left" balign="left">_955 = discriminant(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb450__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">450 (cleanup)</td></tr><tr><td align="left" balign="left">_956 = discriminant(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb451__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">451 (cleanup)</td></tr><tr><td align="left" balign="left">_957 = discriminant(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb452__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">452 (cleanup)</td></tr><tr><td align="left" balign="left">_958 = discriminant(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb453__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">453 (cleanup)</td></tr><tr><td align="left" balign="left">_959 = discriminant(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb454__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">454 (cleanup)</td></tr><tr><td align="left" balign="left">_961 = discriminant(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb455__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">455 (cleanup)</td></tr><tr><td align="left" balign="left">_962 = discriminant(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb456__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">456 (cleanup)</td></tr><tr><td align="left">drop(_139)</td></tr></table>>];
    bb457__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">457 (cleanup)</td></tr><tr><td align="left">switchInt(_890)</td></tr></table>>];
    bb458__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">458 (cleanup)</td></tr><tr><td align="left" balign="left">_963 = discriminant(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb459__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">459 (cleanup)</td></tr><tr><td align="left" balign="left">_964 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb460__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">460 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb461__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">461 (cleanup)</td></tr><tr><td align="left">switchInt(_891)</td></tr></table>>];
    bb462__0_531 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">462 (cleanup)</td></tr><tr><td align="left" balign="left">_965 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_531 -> bb1__0_531 [label="success"];
    bb1__0_531 -> bb2__0_531 [label="return"];
    bb2__0_531 -> bb3__0_531 [label="return"];
    bb3__0_531 -> bb4__0_531 [label="0"];
    bb3__0_531 -> bb6__0_531 [label="1"];
    bb3__0_531 -> bb5__0_531 [label="otherwise"];
    bb4__0_531 -> bb8__0_531 [label="return"];
    bb6__0_531 -> bb7__0_531 [label="return"];
    bb7__0_531 -> bb405__0_531 [label=""];
    bb8__0_531 -> bb9__0_531 [label="return"];
    bb8__0_531 -> bb432__0_531 [label="unwind"];
    bb9__0_531 -> bb10__0_531 [label="0"];
    bb9__0_531 -> bb11__0_531 [label="1"];
    bb9__0_531 -> bb5__0_531 [label="otherwise"];
    bb10__0_531 -> bb13__0_531 [label="success"];
    bb10__0_531 -> bb461__0_531 [label="unwind"];
    bb11__0_531 -> bb12__0_531 [label="return"];
    bb11__0_531 -> bb462__0_531 [label="unwind"];
    bb12__0_531 -> bb404__0_531 [label=""];
    bb13__0_531 -> bb14__0_531 [label="return"];
    bb13__0_531 -> bb461__0_531 [label="unwind"];
    bb14__0_531 -> bb15__0_531 [label="return"];
    bb14__0_531 -> bb461__0_531 [label="unwind"];
    bb15__0_531 -> bb16__0_531 [label="return"];
    bb15__0_531 -> bb461__0_531 [label="unwind"];
    bb16__0_531 -> bb17__0_531 [label="return"];
    bb16__0_531 -> bb461__0_531 [label="unwind"];
    bb17__0_531 -> bb18__0_531 [label="return"];
    bb17__0_531 -> bb461__0_531 [label="unwind"];
    bb18__0_531 -> bb19__0_531 [label="0"];
    bb18__0_531 -> bb20__0_531 [label="1"];
    bb18__0_531 -> bb5__0_531 [label="otherwise"];
    bb19__0_531 -> bb22__0_531 [label="return"];
    bb19__0_531 -> bb461__0_531 [label="unwind"];
    bb20__0_531 -> bb21__0_531 [label="return"];
    bb20__0_531 -> bb461__0_531 [label="unwind"];
    bb21__0_531 -> bb403__0_531 [label=""];
    bb22__0_531 -> bb23__0_531 [label="return"];
    bb22__0_531 -> bb461__0_531 [label="unwind"];
    bb23__0_531 -> bb24__0_531 [label="return"];
    bb23__0_531 -> bb461__0_531 [label="unwind"];
    bb24__0_531 -> bb25__0_531 [label="return"];
    bb24__0_531 -> bb461__0_531 [label="unwind"];
    bb25__0_531 -> bb26__0_531 [label="return"];
    bb25__0_531 -> bb461__0_531 [label="unwind"];
    bb26__0_531 -> bb27__0_531 [label="0"];
    bb26__0_531 -> bb28__0_531 [label="1"];
    bb26__0_531 -> bb5__0_531 [label="otherwise"];
    bb27__0_531 -> bb30__0_531 [label="return"];
    bb27__0_531 -> bb431__0_531 [label="unwind"];
    bb28__0_531 -> bb29__0_531 [label="return"];
    bb28__0_531 -> bb459__0_531 [label="unwind"];
    bb29__0_531 -> bb401__0_531 [label=""];
    bb30__0_531 -> bb31__0_531 [label="return"];
    bb30__0_531 -> bb431__0_531 [label="unwind"];
    bb31__0_531 -> bb32__0_531 [label="return"];
    bb31__0_531 -> bb431__0_531 [label="unwind"];
    bb32__0_531 -> bb33__0_531 [label="return"];
    bb32__0_531 -> bb431__0_531 [label="unwind"];
    bb33__0_531 -> bb34__0_531 [label="0"];
    bb33__0_531 -> bb35__0_531 [label="1"];
    bb33__0_531 -> bb5__0_531 [label="otherwise"];
    bb34__0_531 -> bb37__0_531 [label="success"];
    bb34__0_531 -> bb431__0_531 [label="unwind"];
    bb35__0_531 -> bb36__0_531 [label="return"];
    bb35__0_531 -> bb431__0_531 [label="unwind"];
    bb36__0_531 -> bb401__0_531 [label="return"];
    bb36__0_531 -> bb461__0_531 [label="unwind"];
    bb37__0_531 -> bb38__0_531 [label="return"];
    bb37__0_531 -> bb431__0_531 [label="unwind"];
    bb38__0_531 -> bb39__0_531 [label="return"];
    bb38__0_531 -> bb431__0_531 [label="unwind"];
    bb39__0_531 -> bb40__0_531 [label="return"];
    bb39__0_531 -> bb431__0_531 [label="unwind"];
    bb40__0_531 -> bb41__0_531 [label="0"];
    bb40__0_531 -> bb42__0_531 [label="1"];
    bb40__0_531 -> bb5__0_531 [label="otherwise"];
    bb41__0_531 -> bb44__0_531 [label="return"];
    bb41__0_531 -> bb458__0_531 [label="unwind"];
    bb42__0_531 -> bb43__0_531 [label="return"];
    bb42__0_531 -> bb430__0_531 [label="unwind"];
    bb43__0_531 -> bb400__0_531 [label="return"];
    bb43__0_531 -> bb458__0_531 [label="unwind"];
    bb44__0_531 -> bb45__0_531 [label="return"];
    bb44__0_531 -> bb429__0_531 [label="unwind"];
    bb45__0_531 -> bb47__0_531 [label="0"];
    bb45__0_531 -> bb46__0_531 [label="otherwise"];
    bb46__0_531 -> bb399__0_531 [label=""];
    bb47__0_531 -> bb48__0_531 [label="return"];
    bb47__0_531 -> bb429__0_531 [label="unwind"];
    bb48__0_531 -> bb49__0_531 [label="success"];
    bb48__0_531 -> bb457__0_531 [label="unwind"];
    bb49__0_531 -> bb50__0_531 [label="return"];
    bb49__0_531 -> bb457__0_531 [label="unwind"];
    bb50__0_531 -> bb51__0_531 [label="return"];
    bb50__0_531 -> bb457__0_531 [label="unwind"];
    bb51__0_531 -> bb52__0_531 [label="return"];
    bb51__0_531 -> bb457__0_531 [label="unwind"];
    bb52__0_531 -> bb53__0_531 [label="return"];
    bb52__0_531 -> bb457__0_531 [label="unwind"];
    bb53__0_531 -> bb54__0_531 [label=""];
    bb54__0_531 -> bb55__0_531 [label="return"];
    bb54__0_531 -> bb457__0_531 [label="unwind"];
    bb55__0_531 -> bb57__0_531 [label="0"];
    bb55__0_531 -> bb56__0_531 [label="1"];
    bb55__0_531 -> bb5__0_531 [label="otherwise"];
    bb56__0_531 -> bb58__0_531 [label="success"];
    bb56__0_531 -> bb457__0_531 [label="unwind"];
    bb57__0_531 -> bb178__0_531 [label=""];
    bb58__0_531 -> bb59__0_531 [label="return"];
    bb58__0_531 -> bb457__0_531 [label="unwind"];
    bb59__0_531 -> bb61__0_531 [label="0"];
    bb59__0_531 -> bb60__0_531 [label="otherwise"];
    bb60__0_531 -> bb178__0_531 [label=""];
    bb61__0_531 -> bb62__0_531 [label="return"];
    bb61__0_531 -> bb457__0_531 [label="unwind"];
    bb62__0_531 -> bb63__0_531 [label="return"];
    bb62__0_531 -> bb457__0_531 [label="unwind"];
    bb63__0_531 -> bb64__0_531 [label="0"];
    bb63__0_531 -> bb65__0_531 [label="1"];
    bb63__0_531 -> bb5__0_531 [label="otherwise"];
    bb64__0_531 -> bb67__0_531 [label="success"];
    bb64__0_531 -> bb428__0_531 [label="unwind"];
    bb65__0_531 -> bb66__0_531 [label="return"];
    bb65__0_531 -> bb455__0_531 [label="unwind"];
    bb66__0_531 -> bb396__0_531 [label=""];
    bb67__0_531 -> bb69__0_531 [label="0"];
    bb67__0_531 -> bb68__0_531 [label="1"];
    bb67__0_531 -> bb5__0_531 [label="otherwise"];
    bb68__0_531 -> bb115__0_531 [label="return"];
    bb68__0_531 -> bb428__0_531 [label="unwind"];
    bb69__0_531 -> bb70__0_531 [label="return"];
    bb69__0_531 -> bb428__0_531 [label="unwind"];
    bb70__0_531 -> bb71__0_531 [label="return"];
    bb70__0_531 -> bb428__0_531 [label="unwind"];
    bb71__0_531 -> bb72__0_531 [label="0"];
    bb71__0_531 -> bb73__0_531 [label="1"];
    bb71__0_531 -> bb5__0_531 [label="otherwise"];
    bb72__0_531 -> bb75__0_531 [label="return"];
    bb72__0_531 -> bb426__0_531 [label="unwind"];
    bb73__0_531 -> bb74__0_531 [label="return"];
    bb73__0_531 -> bb454__0_531 [label="unwind"];
    bb74__0_531 -> bb393__0_531 [label=""];
    bb75__0_531 -> bb97__0_531 [label="0"];
    bb75__0_531 -> bb76__0_531 [label="otherwise"];
    bb76__0_531 -> bb77__0_531 [label="return"];
    bb76__0_531 -> bb426__0_531 [label="unwind"];
    bb77__0_531 -> bb96__0_531 [label="0"];
    bb77__0_531 -> bb78__0_531 [label="otherwise"];
    bb78__0_531 -> bb79__0_531 [label="return"];
    bb78__0_531 -> bb426__0_531 [label="unwind"];
    bb79__0_531 -> bb80__0_531 [label="return"];
    bb79__0_531 -> bb426__0_531 [label="unwind"];
    bb80__0_531 -> bb81__0_531 [label="0"];
    bb80__0_531 -> bb82__0_531 [label="1"];
    bb80__0_531 -> bb5__0_531 [label="otherwise"];
    bb81__0_531 -> bb84__0_531 [label="return"];
    bb81__0_531 -> bb425__0_531 [label="unwind"];
    bb82__0_531 -> bb83__0_531 [label="return"];
    bb82__0_531 -> bb453__0_531 [label="unwind"];
    bb83__0_531 -> bb389__0_531 [label=""];
    bb84__0_531 -> bb85__0_531 [label="return"];
    bb84__0_531 -> bb425__0_531 [label="unwind"];
    bb85__0_531 -> bb87__0_531 [label="0"];
    bb85__0_531 -> bb86__0_531 [label="otherwise"];
    bb86__0_531 -> bb94__0_531 [label=""];
    bb87__0_531 -> bb88__0_531 [label="return"];
    bb87__0_531 -> bb425__0_531 [label="unwind"];
    bb88__0_531 -> bb89__0_531 [label="return"];
    bb88__0_531 -> bb425__0_531 [label="unwind"];
    bb89__0_531 -> bb90__0_531 [label="return"];
    bb89__0_531 -> bb425__0_531 [label="unwind"];
    bb90__0_531 -> bb91__0_531 [label="0"];
    bb90__0_531 -> bb92__0_531 [label="1"];
    bb90__0_531 -> bb5__0_531 [label="otherwise"];
    bb91__0_531 -> bb94__0_531 [label=""];
    bb92__0_531 -> bb93__0_531 [label="return"];
    bb92__0_531 -> bb452__0_531 [label="unwind"];
    bb93__0_531 -> bb389__0_531 [label="return"];
    bb93__0_531 -> bb426__0_531 [label="unwind"];
    bb94__0_531 -> bb95__0_531 [label="0"];
    bb94__0_531 -> bb433__0_531 [label="otherwise"];
    bb95__0_531 -> bb99__0_531 [label=""];
    bb96__0_531 -> bb98__0_531 [label=""];
    bb97__0_531 -> bb98__0_531 [label=""];
    bb98__0_531 -> bb99__0_531 [label=""];
    bb99__0_531 -> bb100__0_531 [label="return"];
    bb99__0_531 -> bb423__0_531 [label="unwind"];
    bb100__0_531 -> bb101__0_531 [label="return"];
    bb100__0_531 -> bb423__0_531 [label="unwind"];
    bb101__0_531 -> bb102__0_531 [label="return"];
    bb101__0_531 -> bb423__0_531 [label="unwind"];
    bb102__0_531 -> bb103__0_531 [label="return"];
    bb102__0_531 -> bb423__0_531 [label="unwind"];
    bb103__0_531 -> bb104__0_531 [label="return"];
    bb103__0_531 -> bb423__0_531 [label="unwind"];
    bb104__0_531 -> bb105__0_531 [label="return"];
    bb104__0_531 -> bb423__0_531 [label="unwind"];
    bb105__0_531 -> bb106__0_531 [label="return"];
    bb105__0_531 -> bb423__0_531 [label="unwind"];
    bb106__0_531 -> bb107__0_531 [label="return"];
    bb106__0_531 -> bb423__0_531 [label="unwind"];
    bb107__0_531 -> bb108__0_531 [label="0"];
    bb107__0_531 -> bb109__0_531 [label="1"];
    bb107__0_531 -> bb5__0_531 [label="otherwise"];
    bb108__0_531 -> bb111__0_531 [label="return"];
    bb108__0_531 -> bb424__0_531 [label="unwind"];
    bb109__0_531 -> bb110__0_531 [label="return"];
    bb109__0_531 -> bb423__0_531 [label="unwind"];
    bb110__0_531 -> bb387__0_531 [label="return"];
    bb110__0_531 -> bb424__0_531 [label="unwind"];
    bb111__0_531 -> bb112__0_531 [label="return"];
    bb111__0_531 -> bb426__0_531 [label="unwind"];
    bb112__0_531 -> bb113__0_531 [label="return"];
    bb112__0_531 -> bb427__0_531 [label="unwind"];
    bb113__0_531 -> bb114__0_531 [label="return"];
    bb113__0_531 -> bb428__0_531 [label="unwind"];
    bb114__0_531 -> bb160__0_531 [label=""];
    bb115__0_531 -> bb116__0_531 [label="return"];
    bb115__0_531 -> bb428__0_531 [label="unwind"];
    bb116__0_531 -> bb117__0_531 [label="0"];
    bb116__0_531 -> bb118__0_531 [label="1"];
    bb116__0_531 -> bb5__0_531 [label="otherwise"];
    bb117__0_531 -> bb120__0_531 [label="return"];
    bb117__0_531 -> bb422__0_531 [label="unwind"];
    bb118__0_531 -> bb119__0_531 [label="return"];
    bb118__0_531 -> bb451__0_531 [label="unwind"];
    bb119__0_531 -> bb386__0_531 [label=""];
    bb120__0_531 -> bb121__0_531 [label="return"];
    bb120__0_531 -> bb422__0_531 [label="unwind"];
    bb121__0_531 -> bb123__0_531 [label="0"];
    bb121__0_531 -> bb122__0_531 [label="otherwise"];
    bb122__0_531 -> bb130__0_531 [label=""];
    bb123__0_531 -> bb124__0_531 [label="return"];
    bb123__0_531 -> bb422__0_531 [label="unwind"];
    bb124__0_531 -> bb125__0_531 [label="return"];
    bb124__0_531 -> bb422__0_531 [label="unwind"];
    bb125__0_531 -> bb126__0_531 [label="return"];
    bb125__0_531 -> bb422__0_531 [label="unwind"];
    bb126__0_531 -> bb127__0_531 [label="0"];
    bb126__0_531 -> bb128__0_531 [label="1"];
    bb126__0_531 -> bb5__0_531 [label="otherwise"];
    bb127__0_531 -> bb130__0_531 [label=""];
    bb128__0_531 -> bb129__0_531 [label="return"];
    bb128__0_531 -> bb450__0_531 [label="unwind"];
    bb129__0_531 -> bb385__0_531 [label=""];
    bb130__0_531 -> bb131__0_531 [label="return"];
    bb130__0_531 -> bb421__0_531 [label="unwind"];
    bb131__0_531 -> bb132__0_531 [label="return"];
    bb131__0_531 -> bb421__0_531 [label="unwind"];
    bb132__0_531 -> bb133__0_531 [label="return"];
    bb132__0_531 -> bb421__0_531 [label="unwind"];
    bb133__0_531 -> bb134__0_531 [label="0"];
    bb133__0_531 -> bb135__0_531 [label="1"];
    bb133__0_531 -> bb5__0_531 [label="otherwise"];
    bb134__0_531 -> bb137__0_531 [label="return"];
    bb134__0_531 -> bb419__0_531 [label="unwind"];
    bb135__0_531 -> bb136__0_531 [label="return"];
    bb135__0_531 -> bb449__0_531 [label="unwind"];
    bb136__0_531 -> bb384__0_531 [label=""];
    bb137__0_531 -> bb138__0_531 [label="return"];
    bb137__0_531 -> bb419__0_531 [label="unwind"];
    bb138__0_531 -> bb139__0_531 [label="return"];
    bb138__0_531 -> bb419__0_531 [label="unwind"];
    bb139__0_531 -> bb140__0_531 [label="return"];
    bb139__0_531 -> bb419__0_531 [label="unwind"];
    bb140__0_531 -> bb141__0_531 [label="return"];
    bb140__0_531 -> bb419__0_531 [label="unwind"];
    bb141__0_531 -> bb142__0_531 [label="return"];
    bb141__0_531 -> bb419__0_531 [label="unwind"];
    bb142__0_531 -> bb143__0_531 [label="return"];
    bb142__0_531 -> bb419__0_531 [label="unwind"];
    bb143__0_531 -> bb144__0_531 [label="return"];
    bb143__0_531 -> bb419__0_531 [label="unwind"];
    bb144__0_531 -> bb145__0_531 [label="0"];
    bb144__0_531 -> bb146__0_531 [label="1"];
    bb144__0_531 -> bb5__0_531 [label="otherwise"];
    bb145__0_531 -> bb149__0_531 [label="0"];
    bb145__0_531 -> bb148__0_531 [label="otherwise"];
    bb146__0_531 -> bb147__0_531 [label="return"];
    bb146__0_531 -> bb419__0_531 [label="unwind"];
    bb147__0_531 -> bb381__0_531 [label=""];
    bb148__0_531 -> bb150__0_531 [label="return"];
    bb148__0_531 -> bb419__0_531 [label="unwind"];
    bb149__0_531 -> bb155__0_531 [label=""];
    bb150__0_531 -> bb151__0_531 [label="return"];
    bb150__0_531 -> bb419__0_531 [label="unwind"];
    bb151__0_531 -> bb152__0_531 [label="0"];
    bb151__0_531 -> bb153__0_531 [label="1"];
    bb151__0_531 -> bb5__0_531 [label="otherwise"];
    bb152__0_531 -> bb155__0_531 [label=""];
    bb153__0_531 -> bb154__0_531 [label="return"];
    bb153__0_531 -> bb419__0_531 [label="unwind"];
    bb154__0_531 -> bb381__0_531 [label=""];
    bb155__0_531 -> bb156__0_531 [label="return"];
    bb155__0_531 -> bb420__0_531 [label="unwind"];
    bb156__0_531 -> bb157__0_531 [label="return"];
    bb156__0_531 -> bb421__0_531 [label="unwind"];
    bb157__0_531 -> bb158__0_531 [label="return"];
    bb157__0_531 -> bb422__0_531 [label="unwind"];
    bb158__0_531 -> bb159__0_531 [label="return"];
    bb158__0_531 -> bb428__0_531 [label="unwind"];
    bb159__0_531 -> bb160__0_531 [label=""];
    bb160__0_531 -> bb161__0_531 [label="return"];
    bb160__0_531 -> bb428__0_531 [label="unwind"];
    bb161__0_531 -> bb162__0_531 [label="return"];
    bb161__0_531 -> bb428__0_531 [label="unwind"];
    bb162__0_531 -> bb163__0_531 [label="0"];
    bb162__0_531 -> bb164__0_531 [label="1"];
    bb162__0_531 -> bb5__0_531 [label="otherwise"];
    bb163__0_531 -> bb166__0_531 [label="return"];
    bb163__0_531 -> bb428__0_531 [label="unwind"];
    bb164__0_531 -> bb165__0_531 [label="return"];
    bb164__0_531 -> bb428__0_531 [label="unwind"];
    bb165__0_531 -> bb380__0_531 [label=""];
    bb166__0_531 -> bb167__0_531 [label="return"];
    bb166__0_531 -> bb428__0_531 [label="unwind"];
    bb167__0_531 -> bb168__0_531 [label="0"];
    bb167__0_531 -> bb169__0_531 [label="1"];
    bb167__0_531 -> bb5__0_531 [label="otherwise"];
    bb168__0_531 -> bb171__0_531 [label="return"];
    bb168__0_531 -> bb428__0_531 [label="unwind"];
    bb169__0_531 -> bb170__0_531 [label="return"];
    bb169__0_531 -> bb428__0_531 [label="unwind"];
    bb170__0_531 -> bb380__0_531 [label=""];
    bb171__0_531 -> bb172__0_531 [label="return"];
    bb171__0_531 -> bb428__0_531 [label="unwind"];
    bb172__0_531 -> bb173__0_531 [label="return"];
    bb172__0_531 -> bb428__0_531 [label="unwind"];
    bb173__0_531 -> bb174__0_531 [label="0"];
    bb173__0_531 -> bb175__0_531 [label="1"];
    bb173__0_531 -> bb5__0_531 [label="otherwise"];
    bb174__0_531 -> bb177__0_531 [label="return"];
    bb174__0_531 -> bb457__0_531 [label="unwind"];
    bb175__0_531 -> bb176__0_531 [label="return"];
    bb175__0_531 -> bb428__0_531 [label="unwind"];
    bb176__0_531 -> bb380__0_531 [label=""];
    bb177__0_531 -> bb54__0_531 [label=""];
    bb178__0_531 -> bb180__0_531 [label="0"];
    bb178__0_531 -> bb179__0_531 [label="otherwise"];
    bb179__0_531 -> bb194__0_531 [label=""];
    bb180__0_531 -> bb181__0_531 [label="return"];
    bb180__0_531 -> bb457__0_531 [label="unwind"];
    bb181__0_531 -> bb182__0_531 [label="return"];
    bb181__0_531 -> bb457__0_531 [label="unwind"];
    bb182__0_531 -> bb183__0_531 [label="return"];
    bb182__0_531 -> bb457__0_531 [label="unwind"];
    bb183__0_531 -> bb184__0_531 [label="return"];
    bb183__0_531 -> bb418__0_531 [label="unwind"];
    bb184__0_531 -> bb185__0_531 [label="return"];
    bb184__0_531 -> bb418__0_531 [label="unwind"];
    bb185__0_531 -> bb186__0_531 [label="return"];
    bb185__0_531 -> bb457__0_531 [label="unwind"];
    bb186__0_531 -> bb187__0_531 [label="return"];
    bb186__0_531 -> bb457__0_531 [label="unwind"];
    bb187__0_531 -> bb188__0_531 [label="return"];
    bb187__0_531 -> bb457__0_531 [label="unwind"];
    bb188__0_531 -> bb189__0_531 [label="return"];
    bb188__0_531 -> bb457__0_531 [label="unwind"];
    bb189__0_531 -> bb190__0_531 [label="return"];
    bb189__0_531 -> bb457__0_531 [label="unwind"];
    bb190__0_531 -> bb191__0_531 [label="return"];
    bb190__0_531 -> bb417__0_531 [label="unwind"];
    bb191__0_531 -> bb192__0_531 [label="return"];
    bb191__0_531 -> bb417__0_531 [label="unwind"];
    bb192__0_531 -> bb193__0_531 [label="return"];
    bb192__0_531 -> bb457__0_531 [label="unwind"];
    bb193__0_531 -> bb194__0_531 [label=""];
    bb194__0_531 -> bb195__0_531 [label="return"];
    bb194__0_531 -> bb457__0_531 [label="unwind"];
    bb195__0_531 -> bb196__0_531 [label="0"];
    bb195__0_531 -> bb197__0_531 [label="1"];
    bb195__0_531 -> bb5__0_531 [label="otherwise"];
    bb196__0_531 -> bb199__0_531 [label="return"];
    bb196__0_531 -> bb457__0_531 [label="unwind"];
    bb197__0_531 -> bb198__0_531 [label="return"];
    bb197__0_531 -> bb457__0_531 [label="unwind"];
    bb198__0_531 -> bb397__0_531 [label=""];
    bb199__0_531 -> bb200__0_531 [label="return"];
    bb199__0_531 -> bb457__0_531 [label="unwind"];
    bb200__0_531 -> bb201__0_531 [label="return"];
    bb200__0_531 -> bb457__0_531 [label="unwind"];
    bb201__0_531 -> bb203__0_531 [label="0"];
    bb201__0_531 -> bb202__0_531 [label="otherwise"];
    bb202__0_531 -> bb217__0_531 [label=""];
    bb203__0_531 -> bb204__0_531 [label="return"];
    bb203__0_531 -> bb457__0_531 [label="unwind"];
    bb204__0_531 -> bb205__0_531 [label="return"];
    bb204__0_531 -> bb457__0_531 [label="unwind"];
    bb205__0_531 -> bb206__0_531 [label="return"];
    bb205__0_531 -> bb457__0_531 [label="unwind"];
    bb206__0_531 -> bb207__0_531 [label="return"];
    bb206__0_531 -> bb416__0_531 [label="unwind"];
    bb207__0_531 -> bb208__0_531 [label="return"];
    bb207__0_531 -> bb416__0_531 [label="unwind"];
    bb208__0_531 -> bb209__0_531 [label="return"];
    bb208__0_531 -> bb457__0_531 [label="unwind"];
    bb209__0_531 -> bb210__0_531 [label="return"];
    bb209__0_531 -> bb457__0_531 [label="unwind"];
    bb210__0_531 -> bb211__0_531 [label="return"];
    bb210__0_531 -> bb457__0_531 [label="unwind"];
    bb211__0_531 -> bb212__0_531 [label="return"];
    bb211__0_531 -> bb457__0_531 [label="unwind"];
    bb212__0_531 -> bb213__0_531 [label="return"];
    bb212__0_531 -> bb457__0_531 [label="unwind"];
    bb213__0_531 -> bb214__0_531 [label="return"];
    bb213__0_531 -> bb415__0_531 [label="unwind"];
    bb214__0_531 -> bb215__0_531 [label="return"];
    bb214__0_531 -> bb415__0_531 [label="unwind"];
    bb215__0_531 -> bb216__0_531 [label="return"];
    bb215__0_531 -> bb457__0_531 [label="unwind"];
    bb216__0_531 -> bb217__0_531 [label=""];
    bb217__0_531 -> bb218__0_531 [label="return"];
    bb217__0_531 -> bb457__0_531 [label="unwind"];
    bb218__0_531 -> bb219__0_531 [label="0"];
    bb218__0_531 -> bb220__0_531 [label="1"];
    bb218__0_531 -> bb5__0_531 [label="otherwise"];
    bb219__0_531 -> bb222__0_531 [label="return"];
    bb219__0_531 -> bb457__0_531 [label="unwind"];
    bb220__0_531 -> bb221__0_531 [label="return"];
    bb220__0_531 -> bb457__0_531 [label="unwind"];
    bb221__0_531 -> bb379__0_531 [label=""];
    bb222__0_531 -> bb224__0_531 [label="0"];
    bb222__0_531 -> bb223__0_531 [label="otherwise"];
    bb223__0_531 -> bb261__0_531 [label=""];
    bb224__0_531 -> bb225__0_531 [label="return"];
    bb224__0_531 -> bb457__0_531 [label="unwind"];
    bb225__0_531 -> bb227__0_531 [label="0"];
    bb225__0_531 -> bb226__0_531 [label="otherwise"];
    bb226__0_531 -> bb229__0_531 [label=""];
    bb227__0_531 -> bb228__0_531 [label="success"];
    bb227__0_531 -> bb457__0_531 [label="unwind"];
    bb228__0_531 -> bb229__0_531 [label=""];
    bb229__0_531 -> bb231__0_531 [label="0"];
    bb229__0_531 -> bb230__0_531 [label="otherwise"];
    bb230__0_531 -> bb232__0_531 [label=""];
    bb231__0_531 -> bb232__0_531 [label=""];
    bb232__0_531 -> bb233__0_531 [label="return"];
    bb232__0_531 -> bb457__0_531 [label="unwind"];
    bb233__0_531 -> bb234__0_531 [label="return"];
    bb233__0_531 -> bb457__0_531 [label="unwind"];
    bb234__0_531 -> bb235__0_531 [label="return"];
    bb234__0_531 -> bb457__0_531 [label="unwind"];
    bb235__0_531 -> bb239__0_531 [label="0"];
    bb235__0_531 -> bb236__0_531 [label="otherwise"];
    bb236__0_531 -> bb237__0_531 [label="0"];
    bb236__0_531 -> bb239__0_531 [label="otherwise"];
    bb237__0_531 -> bb238__0_531 [label="return"];
    bb237__0_531 -> bb457__0_531 [label="unwind"];
    bb238__0_531 -> bb240__0_531 [label=""];
    bb239__0_531 -> bb240__0_531 [label=""];
    bb240__0_531 -> bb241__0_531 [label="return"];
    bb240__0_531 -> bb457__0_531 [label="unwind"];
    bb241__0_531 -> bb242__0_531 [label="return"];
    bb241__0_531 -> bb457__0_531 [label="unwind"];
    bb242__0_531 -> bb243__0_531 [label="0"];
    bb242__0_531 -> bb244__0_531 [label="1"];
    bb242__0_531 -> bb5__0_531 [label="otherwise"];
    bb243__0_531 -> bb246__0_531 [label="return"];
    bb243__0_531 -> bb457__0_531 [label="unwind"];
    bb244__0_531 -> bb245__0_531 [label="return"];
    bb244__0_531 -> bb457__0_531 [label="unwind"];
    bb245__0_531 -> bb378__0_531 [label=""];
    bb246__0_531 -> bb247__0_531 [label="return"];
    bb246__0_531 -> bb457__0_531 [label="unwind"];
    bb247__0_531 -> bb248__0_531 [label="0"];
    bb247__0_531 -> bb249__0_531 [label="1"];
    bb247__0_531 -> bb5__0_531 [label="otherwise"];
    bb248__0_531 -> bb251__0_531 [label="return"];
    bb248__0_531 -> bb457__0_531 [label="unwind"];
    bb249__0_531 -> bb250__0_531 [label="return"];
    bb249__0_531 -> bb457__0_531 [label="unwind"];
    bb250__0_531 -> bb378__0_531 [label=""];
    bb251__0_531 -> bb253__0_531 [label="0"];
    bb251__0_531 -> bb252__0_531 [label="otherwise"];
    bb252__0_531 -> bb261__0_531 [label=""];
    bb253__0_531 -> bb254__0_531 [label="return"];
    bb253__0_531 -> bb457__0_531 [label="unwind"];
    bb254__0_531 -> bb255__0_531 [label="return"];
    bb254__0_531 -> bb457__0_531 [label="unwind"];
    bb255__0_531 -> bb256__0_531 [label="return"];
    bb255__0_531 -> bb457__0_531 [label="unwind"];
    bb256__0_531 -> bb257__0_531 [label="return"];
    bb256__0_531 -> bb457__0_531 [label="unwind"];
    bb257__0_531 -> bb258__0_531 [label="return"];
    bb257__0_531 -> bb414__0_531 [label="unwind"];
    bb258__0_531 -> bb259__0_531 [label="return"];
    bb258__0_531 -> bb414__0_531 [label="unwind"];
    bb259__0_531 -> bb260__0_531 [label="return"];
    bb259__0_531 -> bb457__0_531 [label="unwind"];
    bb260__0_531 -> bb378__0_531 [label=""];
    bb261__0_531 -> bb262__0_531 [label="return"];
    bb261__0_531 -> bb457__0_531 [label="unwind"];
    bb262__0_531 -> bb263__0_531 [label=""];
    bb263__0_531 -> bb264__0_531 [label="return"];
    bb263__0_531 -> bb413__0_531 [label="unwind"];
    bb264__0_531 -> bb266__0_531 [label="0"];
    bb264__0_531 -> bb265__0_531 [label="1"];
    bb264__0_531 -> bb5__0_531 [label="otherwise"];
    bb265__0_531 -> bb267__0_531 [label="return"];
    bb265__0_531 -> bb413__0_531 [label="unwind"];
    bb266__0_531 -> bb345__0_531 [label="return"];
    bb266__0_531 -> bb457__0_531 [label="unwind"];
    bb267__0_531 -> bb268__0_531 [label="return"];
    bb267__0_531 -> bb413__0_531 [label="unwind"];
    bb268__0_531 -> bb269__0_531 [label="0"];
    bb268__0_531 -> bb270__0_531 [label="1"];
    bb268__0_531 -> bb5__0_531 [label="otherwise"];
    bb269__0_531 -> bb272__0_531 [label="return"];
    bb269__0_531 -> bb412__0_531 [label="unwind"];
    bb270__0_531 -> bb271__0_531 [label="return"];
    bb270__0_531 -> bb448__0_531 [label="unwind"];
    bb271__0_531 -> bb376__0_531 [label=""];
    bb272__0_531 -> bb273__0_531 [label="return"];
    bb272__0_531 -> bb412__0_531 [label="unwind"];
    bb273__0_531 -> bb275__0_531 [label="0"];
    bb273__0_531 -> bb274__0_531 [label="otherwise"];
    bb274__0_531 -> bb282__0_531 [label=""];
    bb275__0_531 -> bb276__0_531 [label="return"];
    bb275__0_531 -> bb412__0_531 [label="unwind"];
    bb276__0_531 -> bb277__0_531 [label="return"];
    bb276__0_531 -> bb412__0_531 [label="unwind"];
    bb277__0_531 -> bb278__0_531 [label="return"];
    bb277__0_531 -> bb412__0_531 [label="unwind"];
    bb278__0_531 -> bb279__0_531 [label="0"];
    bb278__0_531 -> bb280__0_531 [label="1"];
    bb278__0_531 -> bb5__0_531 [label="otherwise"];
    bb279__0_531 -> bb282__0_531 [label=""];
    bb280__0_531 -> bb281__0_531 [label="return"];
    bb280__0_531 -> bb447__0_531 [label="unwind"];
    bb281__0_531 -> bb375__0_531 [label=""];
    bb282__0_531 -> bb283__0_531 [label="return"];
    bb282__0_531 -> bb446__0_531 [label="unwind"];
    bb283__0_531 -> bb284__0_531 [label="return"];
    bb283__0_531 -> bb446__0_531 [label="unwind"];
    bb284__0_531 -> bb285__0_531 [label="return"];
    bb284__0_531 -> bb446__0_531 [label="unwind"];
    bb285__0_531 -> bb286__0_531 [label="0"];
    bb285__0_531 -> bb287__0_531 [label="1"];
    bb285__0_531 -> bb5__0_531 [label="otherwise"];
    bb286__0_531 -> bb289__0_531 [label="return"];
    bb286__0_531 -> bb446__0_531 [label="unwind"];
    bb287__0_531 -> bb288__0_531 [label="return"];
    bb287__0_531 -> bb446__0_531 [label="unwind"];
    bb288__0_531 -> bb440__0_531 [label=""];
    bb289__0_531 -> bb290__0_531 [label="success"];
    bb289__0_531 -> bb446__0_531 [label="unwind"];
    bb290__0_531 -> bb291__0_531 [label="return"];
    bb290__0_531 -> bb446__0_531 [label="unwind"];
    bb291__0_531 -> bb292__0_531 [label="return"];
    bb291__0_531 -> bb446__0_531 [label="unwind"];
    bb292__0_531 -> bb293__0_531 [label="return"];
    bb292__0_531 -> bb446__0_531 [label="unwind"];
    bb293__0_531 -> bb314__0_531 [label="0"];
    bb293__0_531 -> bb294__0_531 [label="otherwise"];
    bb294__0_531 -> bb295__0_531 [label="0"];
    bb294__0_531 -> bb296__0_531 [label="otherwise"];
    bb295__0_531 -> bb296__0_531 [label="0"];
    bb295__0_531 -> bb297__0_531 [label="otherwise"];
    bb296__0_531 -> bb305__0_531 [label=""];
    bb297__0_531 -> bb298__0_531 [label="return"];
    bb297__0_531 -> bb446__0_531 [label="unwind"];
    bb298__0_531 -> bb299__0_531 [label="return"];
    bb298__0_531 -> bb446__0_531 [label="unwind"];
    bb299__0_531 -> bb300__0_531 [label="return"];
    bb299__0_531 -> bb446__0_531 [label="unwind"];
    bb300__0_531 -> bb301__0_531 [label="return"];
    bb300__0_531 -> bb411__0_531 [label="unwind"];
    bb301__0_531 -> bb302__0_531 [label="return"];
    bb301__0_531 -> bb411__0_531 [label="unwind"];
    bb302__0_531 -> bb303__0_531 [label="return"];
    bb302__0_531 -> bb446__0_531 [label="unwind"];
    bb303__0_531 -> bb304__0_531 [label="return"];
    bb303__0_531 -> bb446__0_531 [label="unwind"];
    bb304__0_531 -> bb305__0_531 [label=""];
    bb305__0_531 -> bb306__0_531 [label="return"];
    bb305__0_531 -> bb446__0_531 [label="unwind"];
    bb306__0_531 -> bb307__0_531 [label="0"];
    bb306__0_531 -> bb308__0_531 [label="1"];
    bb306__0_531 -> bb5__0_531 [label="otherwise"];
    bb307__0_531 -> bb311__0_531 [label="0"];
    bb307__0_531 -> bb310__0_531 [label="otherwise"];
    bb308__0_531 -> bb309__0_531 [label="return"];
    bb308__0_531 -> bb446__0_531 [label="unwind"];
    bb309__0_531 -> bb374__0_531 [label=""];
    bb310__0_531 -> bb312__0_531 [label="return"];
    bb310__0_531 -> bb446__0_531 [label="unwind"];
    bb311__0_531 -> bb313__0_531 [label=""];
    bb312__0_531 -> bb313__0_531 [label=""];
    bb313__0_531 -> bb315__0_531 [label=""];
    bb314__0_531 -> bb315__0_531 [label=""];
    bb315__0_531 -> bb316__0_531 [label="return"];
    bb315__0_531 -> bb446__0_531 [label="unwind"];
    bb316__0_531 -> bb317__0_531 [label="return"];
    bb316__0_531 -> bb446__0_531 [label="unwind"];
    bb317__0_531 -> bb318__0_531 [label="return"];
    bb317__0_531 -> bb446__0_531 [label="unwind"];
    bb318__0_531 -> bb319__0_531 [label="0"];
    bb318__0_531 -> bb320__0_531 [label="1"];
    bb318__0_531 -> bb5__0_531 [label="otherwise"];
    bb319__0_531 -> bb323__0_531 [label="1"];
    bb319__0_531 -> bb322__0_531 [label="otherwise"];
    bb320__0_531 -> bb321__0_531 [label="return"];
    bb320__0_531 -> bb446__0_531 [label="unwind"];
    bb321__0_531 -> bb373__0_531 [label=""];
    bb322__0_531 -> bb332__0_531 [label=""];
    bb323__0_531 -> bb324__0_531 [label="return"];
    bb323__0_531 -> bb410__0_531 [label="unwind"];
    bb324__0_531 -> bb325__0_531 [label="return"];
    bb324__0_531 -> bb410__0_531 [label="unwind"];
    bb325__0_531 -> bb326__0_531 [label="return"];
    bb325__0_531 -> bb410__0_531 [label="unwind"];
    bb326__0_531 -> bb327__0_531 [label="return"];
    bb326__0_531 -> bb410__0_531 [label="unwind"];
    bb327__0_531 -> bb328__0_531 [label="0"];
    bb327__0_531 -> bb329__0_531 [label="1"];
    bb327__0_531 -> bb5__0_531 [label="otherwise"];
    bb328__0_531 -> bb331__0_531 [label="return"];
    bb328__0_531 -> bb446__0_531 [label="unwind"];
    bb329__0_531 -> bb330__0_531 [label="return"];
    bb329__0_531 -> bb410__0_531 [label="unwind"];
    bb330__0_531 -> bb372__0_531 [label="return"];
    bb330__0_531 -> bb446__0_531 [label="unwind"];
    bb331__0_531 -> bb332__0_531 [label=""];
    bb332__0_531 -> bb333__0_531 [label="return"];
    bb332__0_531 -> bb446__0_531 [label="unwind"];
    bb333__0_531 -> bb335__0_531 [label="0"];
    bb333__0_531 -> bb334__0_531 [label="otherwise"];
    bb334__0_531 -> bb435__0_531 [label="1"];
    bb334__0_531 -> bb434__0_531 [label="otherwise"];
    bb335__0_531 -> bb336__0_531 [label="return"];
    bb335__0_531 -> bb446__0_531 [label="unwind"];
    bb336__0_531 -> bb337__0_531 [label="return"];
    bb336__0_531 -> bb446__0_531 [label="unwind"];
    bb337__0_531 -> bb338__0_531 [label="return"];
    bb337__0_531 -> bb446__0_531 [label="unwind"];
    bb338__0_531 -> bb339__0_531 [label="return"];
    bb338__0_531 -> bb446__0_531 [label="unwind"];
    bb339__0_531 -> bb340__0_531 [label="return"];
    bb339__0_531 -> bb446__0_531 [label="unwind"];
    bb340__0_531 -> bb341__0_531 [label="return"];
    bb340__0_531 -> bb409__0_531 [label="unwind"];
    bb341__0_531 -> bb342__0_531 [label="return"];
    bb341__0_531 -> bb409__0_531 [label="unwind"];
    bb342__0_531 -> bb343__0_531 [label="return"];
    bb342__0_531 -> bb446__0_531 [label="unwind"];
    bb343__0_531 -> bb373__0_531 [label=""];
    bb344__0_531 -> bb263__0_531 [label=""];
    bb345__0_531 -> bb368__0_531 [label="0"];
    bb345__0_531 -> bb346__0_531 [label="otherwise"];
    bb346__0_531 -> bb347__0_531 [label="return"];
    bb346__0_531 -> bb457__0_531 [label="unwind"];
    bb347__0_531 -> bb348__0_531 [label="return"];
    bb347__0_531 -> bb457__0_531 [label="unwind"];
    bb348__0_531 -> bb349__0_531 [label="0"];
    bb348__0_531 -> bb350__0_531 [label="1"];
    bb348__0_531 -> bb5__0_531 [label="otherwise"];
    bb349__0_531 -> bb352__0_531 [label="return"];
    bb349__0_531 -> bb408__0_531 [label="unwind"];
    bb350__0_531 -> bb351__0_531 [label="return"];
    bb350__0_531 -> bb443__0_531 [label="unwind"];
    bb351__0_531 -> bb371__0_531 [label=""];
    bb352__0_531 -> bb353__0_531 [label="return"];
    bb352__0_531 -> bb408__0_531 [label="unwind"];
    bb353__0_531 -> bb437__0_531 [label="return"];
    bb353__0_531 -> bb443__0_531 [label="unwind"];
    bb354__0_531 -> bb363__0_531 [label=""];
    bb355__0_531 -> bb356__0_531 [label="return"];
    bb355__0_531 -> bb457__0_531 [label="unwind"];
    bb356__0_531 -> bb357__0_531 [label="return"];
    bb356__0_531 -> bb457__0_531 [label="unwind"];
    bb357__0_531 -> bb358__0_531 [label="return"];
    bb357__0_531 -> bb457__0_531 [label="unwind"];
    bb358__0_531 -> bb359__0_531 [label="return"];
    bb358__0_531 -> bb407__0_531 [label="unwind"];
    bb359__0_531 -> bb360__0_531 [label="return"];
    bb359__0_531 -> bb407__0_531 [label="unwind"];
    bb360__0_531 -> bb361__0_531 [label="return"];
    bb360__0_531 -> bb457__0_531 [label="unwind"];
    bb361__0_531 -> bb362__0_531 [label="return"];
    bb361__0_531 -> bb457__0_531 [label="unwind"];
    bb362__0_531 -> bb363__0_531 [label=""];
    bb363__0_531 -> bb364__0_531 [label="return"];
    bb363__0_531 -> bb457__0_531 [label="unwind"];
    bb364__0_531 -> bb365__0_531 [label="0"];
    bb364__0_531 -> bb366__0_531 [label="1"];
    bb364__0_531 -> bb5__0_531 [label="otherwise"];
    bb365__0_531 -> bb369__0_531 [label=""];
    bb366__0_531 -> bb367__0_531 [label="return"];
    bb366__0_531 -> bb457__0_531 [label="unwind"];
    bb367__0_531 -> bb371__0_531 [label=""];
    bb368__0_531 -> bb369__0_531 [label=""];
    bb369__0_531 -> bb370__0_531 [label="return"];
    bb369__0_531 -> bb461__0_531 [label="unwind"];
    bb370__0_531 -> bb406__0_531 [label=""];
    bb371__0_531 -> bb379__0_531 [label=""];
    bb372__0_531 -> bb373__0_531 [label=""];
    bb373__0_531 -> bb374__0_531 [label=""];
    bb374__0_531 -> bb440__0_531 [label=""];
    bb375__0_531 -> bb376__0_531 [label="return"];
    bb375__0_531 -> bb413__0_531 [label="unwind"];
    bb376__0_531 -> bb377__0_531 [label="return"];
    bb376__0_531 -> bb457__0_531 [label="unwind"];
    bb377__0_531 -> bb379__0_531 [label=""];
    bb378__0_531 -> bb379__0_531 [label=""];
    bb379__0_531 -> bb397__0_531 [label=""];
    bb380__0_531 -> bb395__0_531 [label=""];
    bb381__0_531 -> bb382__0_531 [label="return"];
    bb381__0_531 -> bb420__0_531 [label="unwind"];
    bb382__0_531 -> bb383__0_531 [label="return"];
    bb382__0_531 -> bb421__0_531 [label="unwind"];
    bb383__0_531 -> bb384__0_531 [label=""];
    bb384__0_531 -> bb385__0_531 [label="return"];
    bb384__0_531 -> bb422__0_531 [label="unwind"];
    bb385__0_531 -> bb386__0_531 [label="return"];
    bb385__0_531 -> bb428__0_531 [label="unwind"];
    bb386__0_531 -> bb394__0_531 [label=""];
    bb387__0_531 -> bb388__0_531 [label="return"];
    bb387__0_531 -> bb426__0_531 [label="unwind"];
    bb388__0_531 -> bb390__0_531 [label=""];
    bb389__0_531 -> bb390__0_531 [label=""];
    bb390__0_531 -> bb391__0_531 [label="return"];
    bb390__0_531 -> bb427__0_531 [label="unwind"];
    bb391__0_531 -> bb392__0_531 [label="return"];
    bb391__0_531 -> bb428__0_531 [label="unwind"];
    bb392__0_531 -> bb393__0_531 [label=""];
    bb393__0_531 -> bb394__0_531 [label=""];
    bb394__0_531 -> bb395__0_531 [label=""];
    bb395__0_531 -> bb396__0_531 [label="return"];
    bb395__0_531 -> bb457__0_531 [label="unwind"];
    bb396__0_531 -> bb397__0_531 [label=""];
    bb397__0_531 -> bb398__0_531 [label="0"];
    bb397__0_531 -> bb441__0_531 [label="otherwise"];
    bb398__0_531 -> bb399__0_531 [label=""];
    bb399__0_531 -> bb402__0_531 [label="return"];
    bb399__0_531 -> bb461__0_531 [label="unwind"];
    bb400__0_531 -> bb402__0_531 [label=""];
    bb401__0_531 -> bb402__0_531 [label=""];
    bb402__0_531 -> bb403__0_531 [label=""];
    bb403__0_531 -> bb404__0_531 [label="0"];
    bb403__0_531 -> bb442__0_531 [label="otherwise"];
    bb404__0_531 -> bb405__0_531 [label=""];
    bb405__0_531 -> bb406__0_531 [label=""];
    bb407__0_531 -> bb457__0_531 [label="return"];
    bb408__0_531 -> bb443__0_531 [label="return"];
    bb409__0_531 -> bb446__0_531 [label="return"];
    bb410__0_531 -> bb446__0_531 [label="return"];
    bb411__0_531 -> bb446__0_531 [label="return"];
    bb412__0_531 -> bb413__0_531 [label="return"];
    bb413__0_531 -> bb457__0_531 [label="return"];
    bb414__0_531 -> bb457__0_531 [label="return"];
    bb415__0_531 -> bb457__0_531 [label="return"];
    bb416__0_531 -> bb457__0_531 [label="return"];
    bb417__0_531 -> bb457__0_531 [label="return"];
    bb418__0_531 -> bb457__0_531 [label="return"];
    bb419__0_531 -> bb420__0_531 [label="return"];
    bb420__0_531 -> bb421__0_531 [label="return"];
    bb421__0_531 -> bb422__0_531 [label="return"];
    bb422__0_531 -> bb428__0_531 [label="return"];
    bb423__0_531 -> bb424__0_531 [label="return"];
    bb424__0_531 -> bb426__0_531 [label="return"];
    bb425__0_531 -> bb426__0_531 [label="return"];
    bb426__0_531 -> bb427__0_531 [label="return"];
    bb427__0_531 -> bb428__0_531 [label="return"];
    bb428__0_531 -> bb457__0_531 [label="return"];
    bb429__0_531 -> bb461__0_531 [label="return"];
    bb430__0_531 -> bb458__0_531 [label="return"];
    bb431__0_531 -> bb461__0_531 [label="return"];
    bb433__0_531 -> bb95__0_531 [label="return"];
    bb433__0_531 -> bb426__0_531 [label="unwind"];
    bb434__0_531 -> bb344__0_531 [label="return"];
    bb434__0_531 -> bb413__0_531 [label="unwind"];
    bb435__0_531 -> bb434__0_531 [label="0"];
    bb435__0_531 -> bb436__0_531 [label="otherwise"];
    bb436__0_531 -> bb434__0_531 [label="return"];
    bb436__0_531 -> bb412__0_531 [label="unwind"];
    bb437__0_531 -> bb355__0_531 [label="0"];
    bb437__0_531 -> bb354__0_531 [label="otherwise"];
    bb438__0_531 -> bb375__0_531 [label="0"];
    bb438__0_531 -> bb439__0_531 [label="otherwise"];
    bb439__0_531 -> bb375__0_531 [label="return"];
    bb439__0_531 -> bb412__0_531 [label="unwind"];
    bb440__0_531 -> bb438__0_531 [label="1"];
    bb440__0_531 -> bb375__0_531 [label="otherwise"];
    bb441__0_531 -> bb398__0_531 [label="return"];
    bb441__0_531 -> bb429__0_531 [label="unwind"];
    bb442__0_531 -> bb404__0_531 [label="return"];
    bb442__0_531 -> bb432__0_531 [label="unwind"];
    bb443__0_531 -> bb457__0_531 [label=""];
    bb444__0_531 -> bb412__0_531 [label="0"];
    bb444__0_531 -> bb445__0_531 [label="otherwise"];
    bb445__0_531 -> bb412__0_531 [label="return"];
    bb446__0_531 -> bb444__0_531 [label="1"];
    bb446__0_531 -> bb412__0_531 [label="otherwise"];
    bb447__0_531 -> bb412__0_531 [label=""];
    bb448__0_531 -> bb413__0_531 [label=""];
    bb449__0_531 -> bb421__0_531 [label=""];
    bb450__0_531 -> bb422__0_531 [label=""];
    bb451__0_531 -> bb428__0_531 [label=""];
    bb452__0_531 -> bb425__0_531 [label=""];
    bb453__0_531 -> bb426__0_531 [label=""];
    bb454__0_531 -> bb428__0_531 [label=""];
    bb455__0_531 -> bb457__0_531 [label=""];
    bb456__0_531 -> bb429__0_531 [label="return"];
    bb457__0_531 -> bb429__0_531 [label="0"];
    bb457__0_531 -> bb456__0_531 [label="otherwise"];
    bb458__0_531 -> bb461__0_531 [label=""];
    bb459__0_531 -> bb461__0_531 [label=""];
    bb460__0_531 -> bb432__0_531 [label="return"];
    bb461__0_531 -> bb432__0_531 [label="0"];
    bb461__0_531 -> bb460__0_531 [label="otherwise"];
    bb462__0_531 -> bb432__0_531 [label=""];
}
