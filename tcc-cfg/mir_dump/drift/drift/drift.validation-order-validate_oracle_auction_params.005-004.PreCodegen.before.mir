// MIR for `validate_oracle_auction_params` before PreCodegen

fn validate_oracle_auction_params(_1: &Order) -> std::result::Result<(), error::ErrorCode> {
    debug order => _1;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let _2: ();
    let mut _3: isize;
    let _4: ();
    let mut _5: bool;
    let mut _6: i64;
    let mut _7: i64;
    let mut _8: !;
    let _9: ();
    let mut _10: &str;
    let _11: &str;
    let mut _12: &std::string::String;
    let _13: &std::string::String;
    let _14: std::string::String;
    let _15: std::string::String;
    let mut _16: std::fmt::Arguments<'_>;
    let mut _17: &[&str];
    let mut _18: &[&str; 3];
    let _19: &[&str; 3];
    let _20: [&str; 3];
    let mut _21: &[core::fmt::rt::Argument<'_>];
    let mut _22: &[core::fmt::rt::Argument<'_>; 2];
    let _23: &[core::fmt::rt::Argument<'_>; 2];
    let _24: [core::fmt::rt::Argument<'_>; 2];
    let mut _25: core::fmt::rt::Argument<'_>;
    let mut _26: &i64;
    let _27: &i64;
    let mut _28: core::fmt::rt::Argument<'_>;
    let mut _29: &i64;
    let _30: &i64;
    let mut _31: error::ErrorCode;
    let mut _32: bool;
    let mut _33: state::user::Order;
    let mut _34: bool;
    let mut _35: i64;
    let mut _36: i64;
    let mut _37: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, i64>;
    let mut _38: std::result::Result<i64, error::ErrorCode>;
    let mut _39: i32;
    let mut _40: isize;
    let _41: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _42: !;
    let mut _43: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _44: i64;
    let mut _45: !;
    let _46: ();
    let mut _47: &str;
    let _48: &str;
    let mut _49: &std::string::String;
    let _50: &std::string::String;
    let _51: std::string::String;
    let _52: std::string::String;
    let mut _53: std::fmt::Arguments<'_>;
    let mut _54: &[&str];
    let mut _55: &[&str; 3];
    let _56: &[&str; 3];
    let _57: [&str; 3];
    let mut _58: &[core::fmt::rt::Argument<'_>];
    let mut _59: &[core::fmt::rt::Argument<'_>; 2];
    let _60: &[core::fmt::rt::Argument<'_>; 2];
    let _61: [core::fmt::rt::Argument<'_>; 2];
    let mut _62: core::fmt::rt::Argument<'_>;
    let mut _63: &i64;
    let _64: &i64;
    let mut _65: core::fmt::rt::Argument<'_>;
    let mut _66: &i32;
    let _67: &i32;
    let mut _68: error::ErrorCode;
    let _69: ();
    let mut _70: bool;
    let mut _71: i64;
    let mut _72: i64;
    let mut _73: !;
    let _74: ();
    let mut _75: &str;
    let _76: &str;
    let mut _77: &std::string::String;
    let _78: &std::string::String;
    let _79: std::string::String;
    let _80: std::string::String;
    let mut _81: std::fmt::Arguments<'_>;
    let mut _82: &[&str];
    let mut _83: &[&str; 3];
    let _84: &[&str; 3];
    let _85: [&str; 3];
    let mut _86: &[core::fmt::rt::Argument<'_>];
    let mut _87: &[core::fmt::rt::Argument<'_>; 2];
    let _88: &[core::fmt::rt::Argument<'_>; 2];
    let _89: [core::fmt::rt::Argument<'_>; 2];
    let mut _90: core::fmt::rt::Argument<'_>;
    let mut _91: &i64;
    let _92: &i64;
    let mut _93: core::fmt::rt::Argument<'_>;
    let mut _94: &i64;
    let _95: &i64;
    let mut _96: error::ErrorCode;
    let mut _97: bool;
    let mut _98: state::user::Order;
    let mut _99: bool;
    let mut _100: i64;
    let mut _101: i64;
    let mut _102: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, i64>;
    let mut _103: std::result::Result<i64, error::ErrorCode>;
    let mut _104: i32;
    let mut _105: isize;
    let _106: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _107: !;
    let mut _108: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _109: i64;
    let mut _110: !;
    let _111: ();
    let mut _112: &str;
    let _113: &str;
    let mut _114: &std::string::String;
    let _115: &std::string::String;
    let _116: std::string::String;
    let _117: std::string::String;
    let mut _118: std::fmt::Arguments<'_>;
    let mut _119: &[&str];
    let mut _120: &[&str; 3];
    let _121: &[&str; 3];
    let _122: [&str; 3];
    let mut _123: &[core::fmt::rt::Argument<'_>];
    let mut _124: &[core::fmt::rt::Argument<'_>; 2];
    let _125: &[core::fmt::rt::Argument<'_>; 2];
    let _126: [core::fmt::rt::Argument<'_>; 2];
    let mut _127: core::fmt::rt::Argument<'_>;
    let mut _128: &i64;
    let _129: &i64;
    let mut _130: core::fmt::rt::Argument<'_>;
    let mut _131: &i32;
    let _132: &i32;
    let mut _133: error::ErrorCode;
    let mut _134: ();
    let mut _135: &[&str; 3];
    let mut _136: &[&str; 3];
    let mut _137: &[&str; 3];
    let mut _138: &[&str; 3];
    scope 1 {
        debug res => _15;
    }
    scope 2 {
        debug residual => _41;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _44;
        scope 5 {
        }
    }
    scope 6 {
        debug res => _52;
    }
    scope 7 {
        debug res => _80;
    }
    scope 8 {
        debug residual => _106;
        scope 9 {
        }
    }
    scope 10 {
        debug val => _109;
        scope 11 {
        }
    }
    scope 12 {
        debug res => _117;
    }

    bb0: {
        StorageLive(_2);
        _3 = discriminant(((*_1).17: controller::position::PositionDirection));
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        _71 = ((*_1).6: i64);
        StorageLive(_72);
        _72 = ((*_1).7: i64);
        _70 = Lt(move _71, move _72);
        switchInt(move _70) -> [0: bb39, otherwise: bb31];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = ((*_1).6: i64);
        StorageLive(_7);
        _7 = ((*_1).7: i64);
        _5 = Gt(move _6, move _7);
        switchInt(move _5) -> [0: bb12, otherwise: bb4];
    }

    bb4: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _137 = const _;
        _19 = &(*_137);
        _18 = &(*_19);
        _17 = move _18 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_18);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &((*_1).6: i64);
        _26 = &(*_27);
        _25 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _26) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_26);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &((*_1).7: i64);
        _29 = &(*_30);
        _28 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _29) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_29);
        _24 = [move _25, move _28];
        StorageDead(_28);
        StorageDead(_25);
        _23 = &_24;
        _22 = &(*_23);
        _21 = move _22 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_22);
        _16 = Arguments::<'_>::new_v1(move _17, move _21) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_21);
        StorageDead(_17);
        _15 = format(move _16) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_16);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_19);
        _14 = move _15;
        StorageDead(_15);
        _13 = &_14;
        _12 = &(*_13);
        _11 = <String as Deref>::deref(move _12) -> [return: bb9, unwind: bb66];
    }

    bb9: {
        _10 = &(*_11);
        StorageDead(_12);
        _9 = solana_program::log::sol_log(move _10) -> [return: bb10, unwind: bb66];
    }

    bb10: {
        StorageDead(_10);
        drop(_14) -> [return: bb11, unwind: bb67];
    }

    bb11: {
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_9);
        StorageLive(_31);
        _31 = error::ErrorCode::InvalidOrderAuction;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _31);
        StorageDead(_31);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb61;
    }

    bb12: {
        StorageDead(_7);
        StorageDead(_6);
        _4 = const ();
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_32);
        StorageLive(_33);
        _33 = (*_1);
        _32 = Order::has_oracle_price_offset(move _33) -> [return: bb13, unwind continue];
    }

    bb13: {
        switchInt(move _32) -> [0: bb29, otherwise: bb14];
    }

    bb14: {
        StorageDead(_33);
        StorageLive(_34);
        StorageLive(_35);
        _35 = ((*_1).7: i64);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = ((*_1).9: i32);
        _38 = <i32 as Cast>::cast::<i64>(move _39) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_39);
        _37 = <std::result::Result<i64, error::ErrorCode> as Try>::branch(move _38) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_38);
        _40 = discriminant(_37);
        switchInt(move _40) -> [0: bb17, 1: bb18, otherwise: bb2];
    }

    bb17: {
        StorageLive(_44);
        _44 = ((_37 as Continue).0: i64);
        _36 = _44;
        StorageDead(_44);
        _34 = Gt(move _35, move _36);
        switchInt(move _34) -> [0: bb21, otherwise: bb20];
    }

    bb18: {
        StorageLive(_41);
        _41 = ((_37 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_43);
        _43 = _41;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _43) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        goto -> bb60;
    }

    bb20: {
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        StorageLive(_46);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        _138 = const _;
        _56 = &(*_138);
        _55 = &(*_56);
        _54 = move _55 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_55);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &((*_1).7: i64);
        _63 = &(*_64);
        _62 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _63) -> [return: bb22, unwind continue];
    }

    bb21: {
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        goto -> bb30;
    }

    bb22: {
        StorageDead(_63);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = &((*_1).9: i32);
        _66 = &(*_67);
        _65 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _66) -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageDead(_66);
        _61 = [move _62, move _65];
        StorageDead(_65);
        StorageDead(_62);
        _60 = &_61;
        _59 = &(*_60);
        _58 = move _59 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_59);
        _53 = Arguments::<'_>::new_v1(move _54, move _58) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_58);
        StorageDead(_54);
        _52 = format(move _53) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_53);
        StorageDead(_67);
        StorageDead(_64);
        StorageDead(_61);
        StorageDead(_60);
        StorageDead(_56);
        _51 = move _52;
        StorageDead(_52);
        _50 = &_51;
        _49 = &(*_50);
        _48 = <String as Deref>::deref(move _49) -> [return: bb26, unwind: bb65];
    }

    bb26: {
        _47 = &(*_48);
        StorageDead(_49);
        _46 = solana_program::log::sol_log(move _47) -> [return: bb27, unwind: bb65];
    }

    bb27: {
        StorageDead(_47);
        drop(_51) -> [return: bb28, unwind: bb67];
    }

    bb28: {
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_48);
        StorageDead(_46);
        StorageLive(_68);
        _68 = error::ErrorCode::InvalidOrderAuction;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _68);
        StorageDead(_68);
        goto -> bb60;
    }

    bb29: {
        StorageDead(_33);
        goto -> bb30;
    }

    bb30: {
        _2 = const ();
        StorageDead(_34);
        StorageDead(_32);
        goto -> bb58;
    }

    bb31: {
        StorageDead(_72);
        StorageDead(_71);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        _135 = const _;
        _84 = &(*_135);
        _83 = &(*_84);
        _82 = move _83 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_83);
        StorageLive(_86);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        _92 = &((*_1).6: i64);
        _91 = &(*_92);
        _90 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _91) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_91);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        _95 = &((*_1).7: i64);
        _94 = &(*_95);
        _93 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _94) -> [return: bb33, unwind continue];
    }

    bb33: {
        StorageDead(_94);
        _89 = [move _90, move _93];
        StorageDead(_93);
        StorageDead(_90);
        _88 = &_89;
        _87 = &(*_88);
        _86 = move _87 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_87);
        _81 = Arguments::<'_>::new_v1(move _82, move _86) -> [return: bb34, unwind continue];
    }

    bb34: {
        StorageDead(_86);
        StorageDead(_82);
        _80 = format(move _81) -> [return: bb35, unwind continue];
    }

    bb35: {
        StorageDead(_81);
        StorageDead(_95);
        StorageDead(_92);
        StorageDead(_89);
        StorageDead(_88);
        StorageDead(_84);
        _79 = move _80;
        StorageDead(_80);
        _78 = &_79;
        _77 = &(*_78);
        _76 = <String as Deref>::deref(move _77) -> [return: bb36, unwind: bb64];
    }

    bb36: {
        _75 = &(*_76);
        StorageDead(_77);
        _74 = solana_program::log::sol_log(move _75) -> [return: bb37, unwind: bb64];
    }

    bb37: {
        StorageDead(_75);
        drop(_79) -> [return: bb38, unwind: bb67];
    }

    bb38: {
        StorageDead(_79);
        StorageDead(_78);
        StorageDead(_76);
        StorageDead(_74);
        StorageLive(_96);
        _96 = error::ErrorCode::InvalidOrderAuction;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _96);
        StorageDead(_96);
        StorageDead(_70);
        StorageDead(_69);
        goto -> bb61;
    }

    bb39: {
        StorageDead(_72);
        StorageDead(_71);
        _69 = const ();
        StorageDead(_70);
        StorageDead(_69);
        StorageLive(_97);
        StorageLive(_98);
        _98 = (*_1);
        _97 = Order::has_oracle_price_offset(move _98) -> [return: bb40, unwind continue];
    }

    bb40: {
        switchInt(move _97) -> [0: bb56, otherwise: bb41];
    }

    bb41: {
        StorageDead(_98);
        StorageLive(_99);
        StorageLive(_100);
        _100 = ((*_1).7: i64);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        StorageLive(_104);
        _104 = ((*_1).9: i32);
        _103 = <i32 as Cast>::cast::<i64>(move _104) -> [return: bb42, unwind continue];
    }

    bb42: {
        StorageDead(_104);
        _102 = <std::result::Result<i64, error::ErrorCode> as Try>::branch(move _103) -> [return: bb43, unwind continue];
    }

    bb43: {
        StorageDead(_103);
        _105 = discriminant(_102);
        switchInt(move _105) -> [0: bb44, 1: bb45, otherwise: bb2];
    }

    bb44: {
        StorageLive(_109);
        _109 = ((_102 as Continue).0: i64);
        _101 = _109;
        StorageDead(_109);
        _99 = Lt(move _100, move _101);
        switchInt(move _99) -> [0: bb48, otherwise: bb47];
    }

    bb45: {
        StorageLive(_106);
        _106 = ((_102 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_108);
        _108 = _106;
        _0 = <std::result::Result<(), error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _108) -> [return: bb46, unwind continue];
    }

    bb46: {
        StorageDead(_108);
        StorageDead(_106);
        StorageDead(_102);
        StorageDead(_101);
        StorageDead(_100);
        goto -> bb59;
    }

    bb47: {
        StorageDead(_102);
        StorageDead(_101);
        StorageDead(_100);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        StorageLive(_120);
        StorageLive(_121);
        _136 = const _;
        _121 = &(*_136);
        _120 = &(*_121);
        _119 = move _120 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_120);
        StorageLive(_123);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        StorageLive(_128);
        StorageLive(_129);
        _129 = &((*_1).7: i64);
        _128 = &(*_129);
        _127 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _128) -> [return: bb49, unwind continue];
    }

    bb48: {
        StorageDead(_102);
        StorageDead(_101);
        StorageDead(_100);
        goto -> bb57;
    }

    bb49: {
        StorageDead(_128);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        _132 = &((*_1).9: i32);
        _131 = &(*_132);
        _130 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _131) -> [return: bb50, unwind continue];
    }

    bb50: {
        StorageDead(_131);
        _126 = [move _127, move _130];
        StorageDead(_130);
        StorageDead(_127);
        _125 = &_126;
        _124 = &(*_125);
        _123 = move _124 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_124);
        _118 = Arguments::<'_>::new_v1(move _119, move _123) -> [return: bb51, unwind continue];
    }

    bb51: {
        StorageDead(_123);
        StorageDead(_119);
        _117 = format(move _118) -> [return: bb52, unwind continue];
    }

    bb52: {
        StorageDead(_118);
        StorageDead(_132);
        StorageDead(_129);
        StorageDead(_126);
        StorageDead(_125);
        StorageDead(_121);
        _116 = move _117;
        StorageDead(_117);
        _115 = &_116;
        _114 = &(*_115);
        _113 = <String as Deref>::deref(move _114) -> [return: bb53, unwind: bb63];
    }

    bb53: {
        _112 = &(*_113);
        StorageDead(_114);
        _111 = solana_program::log::sol_log(move _112) -> [return: bb54, unwind: bb63];
    }

    bb54: {
        StorageDead(_112);
        drop(_116) -> [return: bb55, unwind: bb67];
    }

    bb55: {
        StorageDead(_116);
        StorageDead(_115);
        StorageDead(_113);
        StorageDead(_111);
        StorageLive(_133);
        _133 = error::ErrorCode::InvalidOrderAuction;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _133);
        StorageDead(_133);
        goto -> bb59;
    }

    bb56: {
        StorageDead(_98);
        goto -> bb57;
    }

    bb57: {
        _2 = const ();
        StorageDead(_99);
        StorageDead(_97);
        goto -> bb58;
    }

    bb58: {
        StorageDead(_2);
        StorageLive(_134);
        _134 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _134);
        StorageDead(_134);
        goto -> bb62;
    }

    bb59: {
        StorageDead(_99);
        StorageDead(_97);
        goto -> bb61;
    }

    bb60: {
        StorageDead(_34);
        StorageDead(_32);
        goto -> bb61;
    }

    bb61: {
        StorageDead(_2);
        goto -> bb62;
    }

    bb62: {
        return;
    }

    bb63 (cleanup): {
        drop(_116) -> [return: bb67, unwind terminate(cleanup)];
    }

    bb64 (cleanup): {
        drop(_79) -> [return: bb67, unwind terminate(cleanup)];
    }

    bb65 (cleanup): {
        drop(_51) -> [return: bb67, unwind terminate(cleanup)];
    }

    bb66 (cleanup): {
        drop(_14) -> [return: bb67, unwind terminate(cleanup)];
    }

    bb67 (cleanup): {
        resume;
    }
}
