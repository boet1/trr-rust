// MIR for `verify_and_decode_ed25519_msg::{closure#1}` after PreCodegen

fn verify_and_decode_ed25519_msg::{closure#1}(_1: {closure@programs/drift/src/validation/sig_verification.rs:110:18: 110:21}, _2: TryFromIntError) -> SignatureVerificationError {
    let mut _0: validation::sig_verification::SignatureVerificationError;

    bb0: {
        _0 = SignatureVerificationError::InvalidEd25519InstructionDataLength;
        return;
    }
}
