digraph Mir_0_2586 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::calculate_base_asset_amount_for_amm_to_fulfill(_1: &amp;ReErased state::user::Order, _2: &amp;ReErased state::perp_market::PerpMarket, _3: std::option::Option&lt;u64&gt;, _4: std::option::Option&lt;u64&gt;, _5: i64, _6: &amp;ReErased state::state::FeeTier) -&gt; std::result::Result&lt;(u64, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;<br align="left"/>let _7: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: u64;<br align="left"/>let _10: ();<br align="left"/>let mut _11: isize;<br align="left"/>let _12: u64;<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _21: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _22: controller::position::PositionDirection;<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _28: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _29: controller::position::PositionDirection;<br align="left"/>let mut _30: ();<br align="left"/>let _31: error::ErrorCode;<br align="left"/>let _32: ();<br align="left"/>let mut _33: &amp;ReErased str;<br align="left"/>let _34: &amp;ReErased str;<br align="left"/>let mut _35: &amp;ReErased std::string::String;<br align="left"/>let _36: &amp;ReErased std::string::String;<br align="left"/>let _37: std::string::String;<br align="left"/>let _38: std::string::String;<br align="left"/>let mut _39: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _42: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _43: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _47: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _48: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased error::ErrorCode;<br align="left"/>let _50: &amp;ReErased error::ErrorCode;<br align="left"/>let _51: ();<br align="left"/>let mut _52: &amp;ReErased str;<br align="left"/>let _53: &amp;ReErased str;<br align="left"/>let mut _54: &amp;ReErased std::string::String;<br align="left"/>let _55: &amp;ReErased std::string::String;<br align="left"/>let _56: std::string::String;<br align="left"/>let _57: std::string::String;<br align="left"/>let mut _58: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _61: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _62: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _63: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _64: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _65: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _66: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _67: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _68: &amp;ReErased u64;<br align="left"/>let _69: &amp;ReErased u64;<br align="left"/>let mut _70: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased u64;<br align="left"/>let _72: &amp;ReErased u64;<br align="left"/>let mut _73: error::ErrorCode;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: ();<br align="left"/>let mut _79: u64;<br align="left"/>let _80: ();<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: &amp;ReErased state::user::Order;<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: &amp;ReErased state::user::Order;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: (u64, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _87: std::option::Option&lt;u64&gt;;<br align="left"/>let _88: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;u64&gt;&gt;;<br align="left"/>let mut _90: std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _91: &amp;ReErased state::user::Order;<br align="left"/>let mut _92: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _93: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _94: i16;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: std::option::Option&lt;u64&gt;;<br align="left"/>let _100: u64;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _102: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _103: &amp;ReErased state::user::Order;<br align="left"/>let mut _104: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _105: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _106: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _107: i64;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: u64;<br align="left"/>let _113: u64;<br align="left"/>let mut _114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _115: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _116: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _117: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _118: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _119: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: u64;<br align="left"/>let mut _125: (u64, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _126: u64;<br align="left"/>let mut _127: u64;<br align="left"/>let mut _128: u64;<br align="left"/>let mut _129: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _130: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _131: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _132: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _133: &amp;ReErased controller::position::PositionDirection;<br align="left"/>debug order =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug limit_price =&gt; _3;<br align="left"/>debug override_fill_price =&gt; _4;<br align="left"/>debug existing_base_asset_amount =&gt; _5;<br align="left"/>debug fee_tier =&gt; _6;<br align="left"/>debug limit_price =&gt; _7;<br align="left"/>debug override_fill_price =&gt; _9;<br align="left"/>debug limit_price =&gt; _12;<br align="left"/>debug error_code =&gt; _31;<br align="left"/>debug res =&gt; _38;<br align="left"/>debug res =&gt; _57;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug limit_price_with_buffer =&gt; _88;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug base_asset_amount =&gt; _100;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug max_base_asset_amount =&gt; _113;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>>;
    bb0__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_4 as Some).0: u64)<br/>StorageLive(_10)<br/>_11 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb2__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_3 as Some).0: u64)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _12<br/>StorageLive(_18)<br/>_18 = _9<br/>_16 = Ge(move _17, move _18)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;((*_1).17: controller::position::PositionDirection)<br/>StorageLive(_21)<br/>_133 = const _<br/>_21 = &amp;(*_133)<br/></td></tr><tr><td align="left">_19 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _20, move _21)</td></tr></table>>];
    bb4__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb5__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _12<br/>StorageLive(_25)<br/>_25 = _9<br/>_23 = Le(move _24, move _25)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb9__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_1).17: controller::position::PositionDirection)<br/>StorageLive(_28)<br/>_132 = const _<br/>_28 = &amp;(*_132)<br/></td></tr><tr><td align="left">_26 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _27, move _28)</td></tr></table>>];
    bb10__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>_30 = ()<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _30)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = error::ErrorCode::InvalidAmmLimitPriceOverride<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_131 = const _<br/>_42 = &amp;(*_131)<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_31<br/>_49 = &amp;(*_50)<br/></td></tr><tr><td align="left">_48 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _49)</td></tr></table>>];
    bb15__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_47 = [move _48]<br/>StorageDead(_48)<br/>_46 = &amp;_47<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_39 = Arguments::&lt;'_&gt;::new_v1(move _40, move _44)</td></tr></table>>];
    bb16__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = format(move _39)</td></tr></table>>];
    bb17__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>_37 = move _38<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/></td></tr><tr><td align="left">_34 = &lt;String as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb18__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_33 = &amp;(*_34)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_32 = solana_program::log::sol_log(move _33)</td></tr></table>>];
    bb19__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb20__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_130 = const _<br/>_61 = &amp;(*_130)<br/>_60 = &amp;(*_61)<br/>_59 = move _60 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_9<br/>_68 = &amp;(*_69)<br/></td></tr><tr><td align="left">_67 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _68)</td></tr></table>>];
    bb21__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;_12<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _71)</td></tr></table>>];
    bb22__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_66 = [move _67, move _70]<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>_65 = &amp;_66<br/>_64 = &amp;(*_65)<br/>_63 = move _64 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_58 = Arguments::&lt;'_&gt;::new_v1(move _59, move _63)</td></tr></table>>];
    bb23__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = format(move _58)</td></tr></table>>];
    bb24__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>_56 = move _57<br/>StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = &lt;String as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb25__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_52 = &amp;(*_53)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_51 = solana_program::log::sol_log(move _52)</td></tr></table>>];
    bb26__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb27__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageLive(_73)<br/>_73 = _31<br/>_15 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _73)<br/>StorageDead(_73)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb29__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_74 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb30__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_14 as Continue).0: ())<br/>_13 = _78<br/>StorageDead(_78)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>_10 = const ()<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb32__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb33__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_10 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_79)<br/>_79 = _9<br/>_7 = Option::&lt;u64&gt;::Some(move _79)<br/>StorageDead(_79)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_7 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;(*_1)<br/></td></tr><tr><td align="left">_81 = Order::must_be_triggered(move _82)</td></tr></table>>];
    bb38__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb39__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(*_1)<br/></td></tr><tr><td align="left">_83 = Order::triggered(move _84)</td></tr></table>>];
    bb40__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb41__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _7<br/>_86 = (const 0_u64, move _87)<br/>StorageDead(_87)<br/>_0 = std::result::Result::&lt;(u64, Option&lt;u64&gt;), error::ErrorCode&gt;::Ok(move _86)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_80 = const ()<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_1)<br/>StorageLive(_92)<br/>_92 = _7<br/>StorageLive(_93)<br/>_93 = &amp;(*_6)<br/>StorageLive(_94)<br/>_94 = ((*_2).27: i16)<br/></td></tr><tr><td align="left">_90 = calculate_limit_price_with_buffer(move _91, move _92, move _93, move _94)</td></tr></table>>];
    bb45__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb46__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_95 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb47__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_89 as Continue).0: std::option::Option&lt;u64&gt;)<br/>_88 = _99<br/>StorageDead(_99)<br/>StorageDead(_89)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;(*_1)<br/>StorageLive(_104)<br/>_104 = &amp;(*_2)<br/>StorageLive(_105)<br/>_105 = _88<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = _5<br/>_106 = Option::&lt;i64&gt;::Some(move _107)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_102 = calculate_base_asset_amount_to_fill_up_to_limit_price(move _103, move _104, move _105, move _106)</td></tr></table>>];
    bb48__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb49__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb51__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_108 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb52__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_101 as Continue).0: u64)<br/>_100 = _112<br/>StorageDead(_112)<br/>StorageDead(_101)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;((*_2).1: state::perp_market::AMM)<br/>_116 = &amp;(*_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;((*_1).17: controller::position::PositionDirection)<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_115 = calculate_amm_available_liquidity(move _116, move _118)</td></tr></table>>];
    bb53__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb54__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_114 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _115)</td></tr></table>>];
    bb56__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_120 = discriminant(_114)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb57__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_114 as Continue).0: u64)<br/>_113 = _124<br/>StorageDead(_124)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = _100<br/>StorageLive(_128)<br/>_128 = _113<br/></td></tr><tr><td align="left">_126 = std::cmp::min::&lt;u64&gt;(move _127, move _128)</td></tr></table>>];
    bb58__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_114 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb59__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_129)<br/>_129 = _7<br/>_125 = (move _126, move _129)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>_0 = std::result::Result::&lt;(u64, Option&lt;u64&gt;), error::ErrorCode&gt;::Ok(move _125)<br/>StorageDead(_125)<br/>StorageDead(_113)<br/>StorageDead(_100)<br/>StorageDead(_88)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left">return</td></tr></table>>];
    bb65__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb66__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb67__0_2586 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2586 -> bb1__0_2586 [label="1"];
    bb0__0_2586 -> bb36__0_2586 [label="otherwise"];
    bb1__0_2586 -> bb2__0_2586 [label="1"];
    bb1__0_2586 -> bb34__0_2586 [label="otherwise"];
    bb2__0_2586 -> bb7__0_2586 [label="0"];
    bb2__0_2586 -> bb3__0_2586 [label="otherwise"];
    bb3__0_2586 -> bb4__0_2586 [label="return"];
    bb4__0_2586 -> bb6__0_2586 [label="0"];
    bb4__0_2586 -> bb5__0_2586 [label="otherwise"];
    bb5__0_2586 -> bb11__0_2586 [label=""];
    bb6__0_2586 -> bb8__0_2586 [label=""];
    bb7__0_2586 -> bb8__0_2586 [label=""];
    bb8__0_2586 -> bb13__0_2586 [label="0"];
    bb8__0_2586 -> bb9__0_2586 [label="otherwise"];
    bb9__0_2586 -> bb10__0_2586 [label="return"];
    bb10__0_2586 -> bb12__0_2586 [label="0"];
    bb10__0_2586 -> bb11__0_2586 [label="otherwise"];
    bb11__0_2586 -> bb28__0_2586 [label=""];
    bb12__0_2586 -> bb14__0_2586 [label=""];
    bb13__0_2586 -> bb14__0_2586 [label=""];
    bb14__0_2586 -> bb15__0_2586 [label="return"];
    bb15__0_2586 -> bb16__0_2586 [label="return"];
    bb16__0_2586 -> bb17__0_2586 [label="return"];
    bb17__0_2586 -> bb18__0_2586 [label="return"];
    bb17__0_2586 -> bb66__0_2586 [label="unwind"];
    bb18__0_2586 -> bb19__0_2586 [label="return"];
    bb18__0_2586 -> bb66__0_2586 [label="unwind"];
    bb19__0_2586 -> bb20__0_2586 [label="return"];
    bb19__0_2586 -> bb67__0_2586 [label="unwind"];
    bb20__0_2586 -> bb21__0_2586 [label="return"];
    bb21__0_2586 -> bb22__0_2586 [label="return"];
    bb22__0_2586 -> bb23__0_2586 [label="return"];
    bb23__0_2586 -> bb24__0_2586 [label="return"];
    bb24__0_2586 -> bb25__0_2586 [label="return"];
    bb24__0_2586 -> bb65__0_2586 [label="unwind"];
    bb25__0_2586 -> bb26__0_2586 [label="return"];
    bb25__0_2586 -> bb65__0_2586 [label="unwind"];
    bb26__0_2586 -> bb27__0_2586 [label="return"];
    bb26__0_2586 -> bb67__0_2586 [label="unwind"];
    bb27__0_2586 -> bb28__0_2586 [label=""];
    bb28__0_2586 -> bb29__0_2586 [label="return"];
    bb29__0_2586 -> bb30__0_2586 [label="0"];
    bb29__0_2586 -> bb32__0_2586 [label="1"];
    bb29__0_2586 -> bb31__0_2586 [label="otherwise"];
    bb30__0_2586 -> bb35__0_2586 [label=""];
    bb32__0_2586 -> bb33__0_2586 [label="return"];
    bb33__0_2586 -> bb63__0_2586 [label=""];
    bb34__0_2586 -> bb35__0_2586 [label=""];
    bb35__0_2586 -> bb37__0_2586 [label=""];
    bb36__0_2586 -> bb37__0_2586 [label=""];
    bb37__0_2586 -> bb38__0_2586 [label="return"];
    bb38__0_2586 -> bb43__0_2586 [label="0"];
    bb38__0_2586 -> bb39__0_2586 [label="otherwise"];
    bb39__0_2586 -> bb40__0_2586 [label="return"];
    bb40__0_2586 -> bb42__0_2586 [label="0"];
    bb40__0_2586 -> bb41__0_2586 [label="otherwise"];
    bb41__0_2586 -> bb44__0_2586 [label=""];
    bb42__0_2586 -> bb63__0_2586 [label=""];
    bb43__0_2586 -> bb44__0_2586 [label=""];
    bb44__0_2586 -> bb45__0_2586 [label="return"];
    bb45__0_2586 -> bb46__0_2586 [label="return"];
    bb46__0_2586 -> bb47__0_2586 [label="0"];
    bb46__0_2586 -> bb48__0_2586 [label="1"];
    bb46__0_2586 -> bb31__0_2586 [label="otherwise"];
    bb47__0_2586 -> bb50__0_2586 [label="return"];
    bb48__0_2586 -> bb49__0_2586 [label="return"];
    bb49__0_2586 -> bb62__0_2586 [label=""];
    bb50__0_2586 -> bb51__0_2586 [label="return"];
    bb51__0_2586 -> bb52__0_2586 [label="0"];
    bb51__0_2586 -> bb53__0_2586 [label="1"];
    bb51__0_2586 -> bb31__0_2586 [label="otherwise"];
    bb52__0_2586 -> bb55__0_2586 [label="return"];
    bb53__0_2586 -> bb54__0_2586 [label="return"];
    bb54__0_2586 -> bb61__0_2586 [label=""];
    bb55__0_2586 -> bb56__0_2586 [label="return"];
    bb56__0_2586 -> bb57__0_2586 [label="0"];
    bb56__0_2586 -> bb58__0_2586 [label="1"];
    bb56__0_2586 -> bb31__0_2586 [label="otherwise"];
    bb57__0_2586 -> bb60__0_2586 [label="return"];
    bb58__0_2586 -> bb59__0_2586 [label="return"];
    bb59__0_2586 -> bb61__0_2586 [label=""];
    bb60__0_2586 -> bb64__0_2586 [label=""];
    bb61__0_2586 -> bb62__0_2586 [label=""];
    bb62__0_2586 -> bb63__0_2586 [label=""];
    bb63__0_2586 -> bb64__0_2586 [label=""];
    bb65__0_2586 -> bb67__0_2586 [label="return"];
    bb66__0_2586 -> bb67__0_2586 [label="return"];
}
