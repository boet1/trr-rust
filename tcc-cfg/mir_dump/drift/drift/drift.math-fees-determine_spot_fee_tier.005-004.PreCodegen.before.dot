digraph Mir_0_2241 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn determine_spot_fee_tier(_1: &amp;ReErased state::user::UserStats, _2: &amp;ReErased state::state::FeeStructure) -&gt; std::result::Result&lt;&amp;ReErased state::state::FeeTier, error::ErrorCode&gt;<br align="left"/>let mut _3: &amp;ReErased state::state::FeeTier;<br align="left"/>let _4: &amp;ReErased state::state::FeeTier;<br align="left"/>let _5: usize;<br align="left"/>let mut _6: usize;<br align="left"/>let mut _7: bool;<br align="left"/>debug _user_stats =&gt; _1;<br align="left"/>debug fee_structure =&gt; _2;<br align="left"/>>;
    bb0__0_2241 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = const 0_usize<br/>_6 = Len(((*_2).0: [state::state::FeeTier; 10]))<br/>_7 = Lt(_5, _6)<br/></td></tr><tr><td align="left">assert(move _7, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _6, _5)</td></tr></table>>];
    bb1__0_2241 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = &amp;((*_2).0: [state::state::FeeTier; 10])[_5]<br/>_3 = &amp;(*_4)<br/>_0 = std::result::Result::&lt;&amp;state::state::FeeTier, error::ErrorCode&gt;::Ok(move _3)<br/>StorageDead(_3)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2241 -> bb1__0_2241 [label="success"];
}
