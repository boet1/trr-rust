digraph Mir_0_16178 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;PerpFulfillmentMethod as Debug&gt;::fmt(_1: &amp;ReErased state::fulfillment::PerpFulfillmentMethod, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: isize;<br align="left"/>let _4: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _5: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased str;<br align="left"/>let _7: &amp;ReErased str;<br align="left"/>let mut _8: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _9: &amp;ReErased &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _10: &amp;ReErased &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _11: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _12: &amp;ReErased u16;<br align="left"/>let _13: &amp;ReErased u64;<br align="left"/>let mut _14: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased str;<br align="left"/>let _16: &amp;ReErased str;<br align="left"/>let mut _17: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _20: &amp;ReErased u16;<br align="left"/>let mut _21: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _22: &amp;ReErased &amp;ReErased u64;<br align="left"/>let _23: &amp;ReErased &amp;ReErased u64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug __self_0 =&gt; _4;<br align="left"/>debug __self_0 =&gt; _11;<br align="left"/>debug __self_1 =&gt; _12;<br align="left"/>debug __self_2 =&gt; _13;<br align="left"/>>;
    bb0__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = &amp;(((*_1) as Match).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_12)<br/>_12 = &amp;(((*_1) as Match).1: u16)<br/>StorageLive(_13)<br/>_13 = &amp;(((*_1) as Match).2: u64)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_2)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = const &quot;Match&quot;<br/>_15 = &amp;(*_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_11)<br/>_17 = move _18 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_12)<br/>_19 = move _20 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;_13<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_tuple_field3_finish(move _14, move _15, move _17, move _19, move _21)</td></tr></table>>];
    bb2__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = &amp;(((*_1) as AMM).0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_5)<br/>_5 = &amp;mut (*_2)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = const &quot;AMM&quot;<br/>_6 = &amp;(*_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;_4<br/>_9 = &amp;(*_10)<br/>_8 = move _9 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_tuple_field1_finish(move _5, move _6, move _8)</td></tr></table>>];
    bb4__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_16178 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_16178 -> bb3__0_16178 [label="0"];
    bb0__0_16178 -> bb1__0_16178 [label="1"];
    bb0__0_16178 -> bb2__0_16178 [label="otherwise"];
    bb1__0_16178 -> bb5__0_16178 [label="return"];
    bb3__0_16178 -> bb4__0_16178 [label="return"];
    bb4__0_16178 -> bb6__0_16178 [label=""];
    bb5__0_16178 -> bb6__0_16178 [label=""];
}
