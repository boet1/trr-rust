digraph Mir_0_2666 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_base_asset_value_with_expiry_price(_1: &amp;ReErased state::user::PerpPosition, _2: i64) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i64;<br align="left"/>let mut _6: !;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _10: i128;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _13: i128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: i128;<br align="left"/>let mut _22: i128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: i128;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: i128;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: i128;<br align="left"/>debug market_position =&gt; _1;<br align="left"/>debug expiry_price =&gt; _2;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>>;
    bb0__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).1: i64)<br/>_4 = Eq(move _5, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(const 0_i64)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = ((*_1).1: i64)<br/></td></tr><tr><td align="left">_15 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _16)</td></tr></table>>];
    bb3__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb4__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_14 as Continue).0: i128)<br/>_13 = _21<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _2<br/></td></tr><tr><td align="left">_24 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _25)</td></tr></table>>];
    bb6__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb8__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb10__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_26 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_23 as Continue).0: i128)<br/>_22 = _30<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_12 = &lt;i128 as SafeMath&gt;::safe_mul(move _13, move _22)</td></tr></table>>];
    bb12__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb13__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb15__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_31 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_11 as Continue).0: i128)<br/>_10 = _35<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_9 = &lt;i128 as SafeMath&gt;::safe_div(move _10, const _)</td></tr></table>>];
    bb17__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb18__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb20__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_36 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb21__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_8 as Continue).0: i128)<br/>_7 = _40<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _7)</td></tr></table>>];
    bb22__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb23__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2666 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2666 -> bb2__0_2666 [label="0"];
    bb0__0_2666 -> bb1__0_2666 [label="otherwise"];
    bb1__0_2666 -> bb28__0_2666 [label=""];
    bb2__0_2666 -> bb3__0_2666 [label="return"];
    bb3__0_2666 -> bb4__0_2666 [label="return"];
    bb4__0_2666 -> bb5__0_2666 [label="0"];
    bb4__0_2666 -> bb7__0_2666 [label="1"];
    bb4__0_2666 -> bb6__0_2666 [label="otherwise"];
    bb5__0_2666 -> bb9__0_2666 [label="return"];
    bb7__0_2666 -> bb8__0_2666 [label="return"];
    bb8__0_2666 -> bb27__0_2666 [label=""];
    bb9__0_2666 -> bb10__0_2666 [label="return"];
    bb10__0_2666 -> bb11__0_2666 [label="0"];
    bb10__0_2666 -> bb12__0_2666 [label="1"];
    bb10__0_2666 -> bb6__0_2666 [label="otherwise"];
    bb11__0_2666 -> bb14__0_2666 [label="return"];
    bb12__0_2666 -> bb13__0_2666 [label="return"];
    bb13__0_2666 -> bb25__0_2666 [label=""];
    bb14__0_2666 -> bb15__0_2666 [label="return"];
    bb15__0_2666 -> bb16__0_2666 [label="0"];
    bb15__0_2666 -> bb17__0_2666 [label="1"];
    bb15__0_2666 -> bb6__0_2666 [label="otherwise"];
    bb16__0_2666 -> bb19__0_2666 [label="return"];
    bb17__0_2666 -> bb18__0_2666 [label="return"];
    bb18__0_2666 -> bb25__0_2666 [label=""];
    bb19__0_2666 -> bb20__0_2666 [label="return"];
    bb20__0_2666 -> bb21__0_2666 [label="0"];
    bb20__0_2666 -> bb22__0_2666 [label="1"];
    bb20__0_2666 -> bb6__0_2666 [label="otherwise"];
    bb21__0_2666 -> bb24__0_2666 [label="return"];
    bb22__0_2666 -> bb23__0_2666 [label="return"];
    bb23__0_2666 -> bb26__0_2666 [label=""];
    bb24__0_2666 -> bb28__0_2666 [label=""];
    bb25__0_2666 -> bb26__0_2666 [label=""];
    bb26__0_2666 -> bb27__0_2666 [label=""];
    bb27__0_2666 -> bb28__0_2666 [label=""];
}
