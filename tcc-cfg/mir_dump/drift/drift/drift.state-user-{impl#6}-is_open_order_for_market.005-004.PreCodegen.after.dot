digraph Mir_0_4389 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Order::is_open_order_for_market(_1: &amp;ReErased state::user::Order, _2: u16, _3: &amp;ReErased state::user::MarketType) -&gt; bool<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u16;<br align="left"/>let mut _6: u16;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _9: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _10: state::user::OrderStatus;<br align="left"/>let mut _11: &amp;ReErased &amp;ReErased state::user::MarketType;<br align="left"/>let _12: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _13: &amp;ReErased &amp;ReErased state::user::MarketType;<br align="left"/>let mut _14: &amp;ReErased state::user::OrderStatus;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug market_type =&gt; _3;<br align="left"/>>;
    bb0__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).11: u16)<br/>StorageLive(_6)<br/>_6 = _2<br/>_4 = Eq(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).12: state::user::OrderStatus)<br/>StorageLive(_9)<br/>_14 = const _<br/>_9 = &amp;(*_14)<br/></td></tr><tr><td align="left">_7 = &lt;OrderStatus as PartialEq&gt;::eq(move _8, move _9)</td></tr></table>>];
    bb2__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;((*_1).14: state::user::MarketType)<br/>_11 = &amp;_12<br/>StorageLive(_13)<br/>_13 = &amp;_3<br/></td></tr><tr><td align="left">_0 = &lt;&amp;state::user::MarketType as PartialEq&gt;::eq(move _11, move _13)</td></tr></table>>];
    bb4__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_4389 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4389 -> bb5__0_4389 [label="0"];
    bb0__0_4389 -> bb1__0_4389 [label="otherwise"];
    bb1__0_4389 -> bb2__0_4389 [label="return"];
    bb2__0_4389 -> bb4__0_4389 [label="0"];
    bb2__0_4389 -> bb3__0_4389 [label="otherwise"];
    bb3__0_4389 -> bb7__0_4389 [label="return"];
    bb4__0_4389 -> bb6__0_4389 [label=""];
    bb5__0_4389 -> bb6__0_4389 [label=""];
    bb6__0_4389 -> bb8__0_4389 [label=""];
    bb7__0_4389 -> bb8__0_4389 [label=""];
}
