digraph Mir_0_340 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::liquidate_spot_with_swap_begin(_1: u16, _2: u16, _3: u64, _4: &amp;ReErased mut state::user::User, _5: &amp;ReErased anchor_lang::prelude::Pubkey, _6: &amp;ReErased mut state::user::UserStats, _7: &amp;ReErased mut state::user::User, _8: &amp;ReErased anchor_lang::prelude::Pubkey, _9: &amp;ReErased mut state::user::UserStats, _10: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _11: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _12: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _13: i64, _14: u64, _15: &amp;ReErased state::state::State) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _16: u32;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: u16;<br align="left"/>let _19: u128;<br align="left"/>let mut _20: u8;<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _23: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: &amp;ReErased state::user::User;<br align="left"/>let mut _26: ();<br align="left"/>let _27: error::ErrorCode;<br align="left"/>let _28: ();<br align="left"/>let mut _29: &amp;ReErased str;<br align="left"/>let _30: &amp;ReErased str;<br align="left"/>let mut _31: &amp;ReErased std::string::String;<br align="left"/>let _32: &amp;ReErased std::string::String;<br align="left"/>let _33: std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let mut _35: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _38: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _39: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _43: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _44: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased error::ErrorCode;<br align="left"/>let _46: &amp;ReErased error::ErrorCode;<br align="left"/>let _47: ();<br align="left"/>let mut _48: &amp;ReErased str;<br align="left"/>let _49: &amp;ReErased str;<br align="left"/>let mut _50: &amp;ReErased std::string::String;<br align="left"/>let _51: &amp;ReErased std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _58: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _59: error::ErrorCode;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: ();<br align="left"/>let _65: ();<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _67: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _68: bool;<br align="left"/>let mut _69: &amp;ReErased state::user::User;<br align="left"/>let mut _70: ();<br align="left"/>let _71: error::ErrorCode;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: &amp;ReErased std::string::String;<br align="left"/>let _76: &amp;ReErased std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let mut _79: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased error::ErrorCode;<br align="left"/>let _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: &amp;ReErased std::string::String;<br align="left"/>let _95: &amp;ReErased std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let mut _98: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _101: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _102: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _103: error::ErrorCode;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: ();<br align="left"/>let _109: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _111: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _112: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased u16;<br align="left"/>let _114: &amp;ReErased u16;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _120: ();<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _122: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _123: bool;<br align="left"/>let mut _124: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _125: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _126: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _127: state::paused_operations::SpotOperation;<br align="left"/>let mut _128: ();<br align="left"/>let _129: error::ErrorCode;<br align="left"/>let _130: ();<br align="left"/>let mut _131: &amp;ReErased str;<br align="left"/>let _132: &amp;ReErased str;<br align="left"/>let mut _133: &amp;ReErased std::string::String;<br align="left"/>let _134: &amp;ReErased std::string::String;<br align="left"/>let _135: std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let mut _137: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _146: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _147: &amp;ReErased error::ErrorCode;<br align="left"/>let _148: &amp;ReErased error::ErrorCode;<br align="left"/>let _149: ();<br align="left"/>let mut _150: &amp;ReErased str;<br align="left"/>let _151: &amp;ReErased str;<br align="left"/>let mut _152: &amp;ReErased std::string::String;<br align="left"/>let _153: &amp;ReErased std::string::String;<br align="left"/>let _154: std::string::String;<br align="left"/>let _155: std::string::String;<br align="left"/>let mut _156: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _159: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _160: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _161: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _164: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _165: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _166: &amp;ReErased u16;<br align="left"/>let _167: &amp;ReErased u16;<br align="left"/>let mut _168: error::ErrorCode;<br align="left"/>let mut _169: isize;<br align="left"/>let _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _171: !;<br align="left"/>let mut _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _173: ();<br align="left"/>let _174: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _175: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _176: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _177: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _178: &amp;ReErased u16;<br align="left"/>let _179: &amp;ReErased u16;<br align="left"/>let mut _180: isize;<br align="left"/>let _181: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _182: !;<br align="left"/>let mut _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _184: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _185: ();<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _187: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _190: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _191: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _192: state::paused_operations::SpotOperation;<br align="left"/>let mut _193: ();<br align="left"/>let _194: error::ErrorCode;<br align="left"/>let _195: ();<br align="left"/>let mut _196: &amp;ReErased str;<br align="left"/>let _197: &amp;ReErased str;<br align="left"/>let mut _198: &amp;ReErased std::string::String;<br align="left"/>let _199: &amp;ReErased std::string::String;<br align="left"/>let _200: std::string::String;<br align="left"/>let _201: std::string::String;<br align="left"/>let mut _202: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _204: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _205: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _206: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _207: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _208: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _210: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _211: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _212: &amp;ReErased error::ErrorCode;<br align="left"/>let _213: &amp;ReErased error::ErrorCode;<br align="left"/>let _214: ();<br align="left"/>let mut _215: &amp;ReErased str;<br align="left"/>let _216: &amp;ReErased str;<br align="left"/>let mut _217: &amp;ReErased std::string::String;<br align="left"/>let _218: &amp;ReErased std::string::String;<br align="left"/>let _219: std::string::String;<br align="left"/>let _220: std::string::String;<br align="left"/>let mut _221: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _223: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _224: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _225: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _226: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _227: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _228: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _229: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _230: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _231: &amp;ReErased u16;<br align="left"/>let _232: &amp;ReErased u16;<br align="left"/>let mut _233: error::ErrorCode;<br align="left"/>let mut _234: isize;<br align="left"/>let _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _236: !;<br align="left"/>let mut _237: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _238: ();<br align="left"/>let _239: ();<br align="left"/>let mut _240: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _241: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _242: bool;<br align="left"/>let mut _243: u8;<br align="left"/>let mut _244: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _245: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _246: u8;<br align="left"/>let mut _247: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _248: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _249: ();<br align="left"/>let _250: error::ErrorCode;<br align="left"/>let _251: ();<br align="left"/>let mut _252: &amp;ReErased str;<br align="left"/>let _253: &amp;ReErased str;<br align="left"/>let mut _254: &amp;ReErased std::string::String;<br align="left"/>let _255: &amp;ReErased std::string::String;<br align="left"/>let _256: std::string::String;<br align="left"/>let _257: std::string::String;<br align="left"/>let mut _258: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _259: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _261: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _262: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _263: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _264: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _265: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _266: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _267: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _268: &amp;ReErased error::ErrorCode;<br align="left"/>let _269: &amp;ReErased error::ErrorCode;<br align="left"/>let _270: ();<br align="left"/>let mut _271: &amp;ReErased str;<br align="left"/>let _272: &amp;ReErased str;<br align="left"/>let mut _273: &amp;ReErased std::string::String;<br align="left"/>let _274: &amp;ReErased std::string::String;<br align="left"/>let _275: std::string::String;<br align="left"/>let _276: std::string::String;<br align="left"/>let mut _277: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _278: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _279: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _280: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _281: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _282: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _283: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _284: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _285: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _286: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _287: &amp;ReErased u8;<br align="left"/>let _288: &amp;ReErased u8;<br align="left"/>let _289: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _290: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _291: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _292: &amp;ReErased u8;<br align="left"/>let _293: &amp;ReErased u8;<br align="left"/>let _294: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _295: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _296: error::ErrorCode;<br align="left"/>let mut _297: isize;<br align="left"/>let _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _299: !;<br align="left"/>let mut _300: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _301: ();<br align="left"/>let _302: ();<br align="left"/>let mut _303: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _304: ();<br align="left"/>let mut _305: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _306: u128;<br align="left"/>let _307: i64;<br align="left"/>let _308: u32;<br align="left"/>let _309: u32;<br align="left"/>let _310: u8;<br align="left"/>let _311: i64;<br align="left"/>let mut _312: (u128, i64, u32, u32, u8, i64);<br align="left"/>let mut _313: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _314: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _315: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _316: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _317: &amp;ReErased u16;<br align="left"/>let _318: &amp;ReErased u16;<br align="left"/>let mut _319: isize;<br align="left"/>let _320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _321: !;<br align="left"/>let mut _322: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _323: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _324: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _325: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _326: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _327: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _328: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _329: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _330: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _331: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _332: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _333: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _334: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _335: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _336: isize;<br align="left"/>let _337: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _338: !;<br align="left"/>let mut _339: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _340: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _341: ();<br align="left"/>let mut _342: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _343: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _344: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _345: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _346: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _347: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _348: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _349: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _350: i64;<br align="left"/>let mut _351: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _352: math::oracle::DriftAction;<br align="left"/>let mut _353: isize;<br align="left"/>let _354: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _355: !;<br align="left"/>let mut _356: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _357: ();<br align="left"/>let _358: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _359: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _360: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _361: &amp;ReErased state::user::User;<br align="left"/>let mut _362: u16;<br align="left"/>let mut _363: isize;<br align="left"/>let _364: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _365: !;<br align="left"/>let mut _366: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _367: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _368: ();<br align="left"/>let mut _369: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _370: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _371: bool;<br align="left"/>let mut _372: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _373: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _374: state::spot_market::SpotBalanceType;<br align="left"/>let mut _375: ();<br align="left"/>let _376: error::ErrorCode;<br align="left"/>let _377: ();<br align="left"/>let mut _378: &amp;ReErased str;<br align="left"/>let _379: &amp;ReErased str;<br align="left"/>let mut _380: &amp;ReErased std::string::String;<br align="left"/>let _381: &amp;ReErased std::string::String;<br align="left"/>let _382: std::string::String;<br align="left"/>let _383: std::string::String;<br align="left"/>let mut _384: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _385: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _386: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _387: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _388: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _389: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _390: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _391: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _392: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _393: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _394: &amp;ReErased error::ErrorCode;<br align="left"/>let _395: &amp;ReErased error::ErrorCode;<br align="left"/>let _396: ();<br align="left"/>let mut _397: &amp;ReErased str;<br align="left"/>let _398: &amp;ReErased str;<br align="left"/>let mut _399: error::ErrorCode;<br align="left"/>let mut _400: isize;<br align="left"/>let _401: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _402: !;<br align="left"/>let mut _403: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _404: ();<br align="left"/>let _405: u128;<br align="left"/>let mut _406: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _407: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _408: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _409: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _410: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _411: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _412: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _413: isize;<br align="left"/>let _414: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _415: !;<br align="left"/>let mut _416: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _417: u128;<br align="left"/>let _418: ();<br align="left"/>let mut _419: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _420: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _421: bool;<br align="left"/>let mut _422: u128;<br align="left"/>let mut _423: ();<br align="left"/>let _424: error::ErrorCode;<br align="left"/>let _425: ();<br align="left"/>let mut _426: &amp;ReErased str;<br align="left"/>let _427: &amp;ReErased str;<br align="left"/>let mut _428: &amp;ReErased std::string::String;<br align="left"/>let _429: &amp;ReErased std::string::String;<br align="left"/>let _430: std::string::String;<br align="left"/>let _431: std::string::String;<br align="left"/>let mut _432: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _433: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _434: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _435: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _436: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _437: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _438: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _439: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _440: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _441: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _442: &amp;ReErased error::ErrorCode;<br align="left"/>let _443: &amp;ReErased error::ErrorCode;<br align="left"/>let _444: ();<br align="left"/>let mut _445: &amp;ReErased str;<br align="left"/>let _446: &amp;ReErased str;<br align="left"/>let mut _447: &amp;ReErased std::string::String;<br align="left"/>let _448: &amp;ReErased std::string::String;<br align="left"/>let _449: std::string::String;<br align="left"/>let _450: std::string::String;<br align="left"/>let mut _451: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _452: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _453: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _454: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _455: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _456: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _457: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _458: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _459: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _460: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _461: &amp;ReErased u16;<br align="left"/>let _462: &amp;ReErased u16;<br align="left"/>let mut _463: error::ErrorCode;<br align="left"/>let mut _464: isize;<br align="left"/>let _465: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _466: !;<br align="left"/>let mut _467: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _468: ();<br align="left"/>let _469: i64;<br align="left"/>let mut _470: u128;<br align="left"/>let mut _471: i64;<br align="left"/>let mut _472: u32;<br align="left"/>let mut _473: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _474: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _475: u32;<br align="left"/>let mut _476: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _477: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _478: u8;<br align="left"/>let mut _479: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _480: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _481: i64;<br align="left"/>let _482: i64;<br align="left"/>let _483: u32;<br align="left"/>let _484: u32;<br align="left"/>let _485: u32;<br align="left"/>let _486: u8;<br align="left"/>let _487: i64;<br align="left"/>let mut _488: (i64, u32, u32, u32, u8, i64);<br align="left"/>let mut _489: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _490: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _491: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _492: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _493: &amp;ReErased u16;<br align="left"/>let _494: &amp;ReErased u16;<br align="left"/>let mut _495: isize;<br align="left"/>let _496: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _497: !;<br align="left"/>let mut _498: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _499: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _500: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _501: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _502: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _503: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _504: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _505: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _506: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _507: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _508: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _509: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _510: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _511: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _512: isize;<br align="left"/>let _513: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _514: !;<br align="left"/>let mut _515: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _516: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _517: ();<br align="left"/>let mut _518: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _519: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _520: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _521: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _522: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _523: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _524: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _525: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _526: i64;<br align="left"/>let mut _527: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _528: math::oracle::DriftAction;<br align="left"/>let mut _529: isize;<br align="left"/>let _530: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _531: !;<br align="left"/>let mut _532: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _533: ();<br align="left"/>let _534: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _535: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _536: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _537: &amp;ReErased state::user::User;<br align="left"/>let mut _538: u16;<br align="left"/>let mut _539: isize;<br align="left"/>let _540: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _541: !;<br align="left"/>let mut _542: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _543: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _544: ();<br align="left"/>let mut _545: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _546: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _547: bool;<br align="left"/>let mut _548: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _549: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _550: state::spot_market::SpotBalanceType;<br align="left"/>let mut _551: ();<br align="left"/>let _552: error::ErrorCode;<br align="left"/>let _553: ();<br align="left"/>let mut _554: &amp;ReErased str;<br align="left"/>let _555: &amp;ReErased str;<br align="left"/>let mut _556: &amp;ReErased std::string::String;<br align="left"/>let _557: &amp;ReErased std::string::String;<br align="left"/>let _558: std::string::String;<br align="left"/>let _559: std::string::String;<br align="left"/>let mut _560: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _561: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _562: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _563: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _564: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _565: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _566: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _567: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _568: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _569: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _570: &amp;ReErased error::ErrorCode;<br align="left"/>let _571: &amp;ReErased error::ErrorCode;<br align="left"/>let _572: ();<br align="left"/>let mut _573: &amp;ReErased str;<br align="left"/>let _574: &amp;ReErased str;<br align="left"/>let mut _575: error::ErrorCode;<br align="left"/>let mut _576: isize;<br align="left"/>let _577: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _578: !;<br align="left"/>let mut _579: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _580: ();<br align="left"/>let _581: u128;<br align="left"/>let mut _582: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _583: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _584: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _585: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _586: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _587: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _588: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _589: isize;<br align="left"/>let _590: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _591: !;<br align="left"/>let mut _592: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _593: u128;<br align="left"/>let _594: ();<br align="left"/>let mut _595: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _596: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _597: bool;<br align="left"/>let mut _598: u128;<br align="left"/>let mut _599: ();<br align="left"/>let _600: error::ErrorCode;<br align="left"/>let _601: ();<br align="left"/>let mut _602: &amp;ReErased str;<br align="left"/>let _603: &amp;ReErased str;<br align="left"/>let mut _604: &amp;ReErased std::string::String;<br align="left"/>let _605: &amp;ReErased std::string::String;<br align="left"/>let _606: std::string::String;<br align="left"/>let _607: std::string::String;<br align="left"/>let mut _608: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _609: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _610: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _611: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _612: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _613: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _614: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _615: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _616: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _617: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _618: &amp;ReErased error::ErrorCode;<br align="left"/>let _619: &amp;ReErased error::ErrorCode;<br align="left"/>let _620: ();<br align="left"/>let mut _621: &amp;ReErased str;<br align="left"/>let _622: &amp;ReErased str;<br align="left"/>let mut _623: &amp;ReErased std::string::String;<br align="left"/>let _624: &amp;ReErased std::string::String;<br align="left"/>let _625: std::string::String;<br align="left"/>let _626: std::string::String;<br align="left"/>let mut _627: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _628: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _629: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _630: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _631: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _632: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _633: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _634: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _635: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _636: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _637: &amp;ReErased u16;<br align="left"/>let _638: &amp;ReErased u16;<br align="left"/>let mut _639: error::ErrorCode;<br align="left"/>let mut _640: isize;<br align="left"/>let _641: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _642: !;<br align="left"/>let mut _643: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _644: ();<br align="left"/>let _645: i64;<br align="left"/>let mut _646: i64;<br align="left"/>let mut _647: u32;<br align="left"/>let mut _648: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _649: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _650: u32;<br align="left"/>let mut _651: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _652: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _653: u32;<br align="left"/>let mut _654: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _655: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _656: u8;<br align="left"/>let mut _657: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _658: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _659: i64;<br align="left"/>let _660: ();<br align="left"/>let mut _661: bool;<br align="left"/>let mut _662: u8;<br align="left"/>let mut _663: bool;<br align="left"/>let mut _664: u8;<br align="left"/>let _665: ();<br align="left"/>let mut _666: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _667: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _668: bool;<br align="left"/>let mut _669: i64;<br align="left"/>let mut _670: bool;<br align="left"/>let mut _671: i64;<br align="left"/>let mut _672: ();<br align="left"/>let _673: error::ErrorCode;<br align="left"/>let _674: ();<br align="left"/>let mut _675: &amp;ReErased str;<br align="left"/>let _676: &amp;ReErased str;<br align="left"/>let mut _677: &amp;ReErased std::string::String;<br align="left"/>let _678: &amp;ReErased std::string::String;<br align="left"/>let _679: std::string::String;<br align="left"/>let _680: std::string::String;<br align="left"/>let mut _681: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _682: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _683: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _684: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _685: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _686: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _687: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _688: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _689: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _690: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _691: &amp;ReErased error::ErrorCode;<br align="left"/>let _692: &amp;ReErased error::ErrorCode;<br align="left"/>let _693: ();<br align="left"/>let mut _694: &amp;ReErased str;<br align="left"/>let _695: &amp;ReErased str;<br align="left"/>let mut _696: &amp;ReErased std::string::String;<br align="left"/>let _697: &amp;ReErased std::string::String;<br align="left"/>let _698: std::string::String;<br align="left"/>let _699: std::string::String;<br align="left"/>let mut _700: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _701: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _702: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _703: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _704: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _705: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _706: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _707: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _708: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _709: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _710: &amp;ReErased i64;<br align="left"/>let _711: &amp;ReErased i64;<br align="left"/>let mut _712: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _713: &amp;ReErased i64;<br align="left"/>let _714: &amp;ReErased i64;<br align="left"/>let mut _715: error::ErrorCode;<br align="left"/>let mut _716: isize;<br align="left"/>let _717: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _718: !;<br align="left"/>let mut _719: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _720: ();<br align="left"/>let _721: state::margin_calculation::MarginContext;<br align="left"/>let mut _722: state::margin_calculation::MarginContext;<br align="left"/>let mut _723: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _724: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _725: state::margin_calculation::MarginContext;<br align="left"/>let mut _726: u32;<br align="left"/>let mut _727: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _728: u16;<br align="left"/>let mut _729: isize;<br align="left"/>let _730: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _731: !;<br align="left"/>let mut _732: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _733: state::margin_calculation::MarginContext;<br align="left"/>let mut _734: &amp;ReErased state::user::User;<br align="left"/>let mut _735: i64;<br align="left"/>let _736: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _737: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _738: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _739: &amp;ReErased mut state::user::User;<br align="left"/>let mut _740: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _741: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _742: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _743: state::margin_calculation::MarginContext;<br align="left"/>let mut _744: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _745: i64;<br align="left"/>let mut _746: isize;<br align="left"/>let _747: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _748: !;<br align="left"/>let mut _749: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _750: state::margin_calculation::MarginCalculation;<br align="left"/>let _751: ();<br align="left"/>let mut _752: bool;<br align="left"/>let mut _753: &amp;ReErased state::user::User;<br align="left"/>let mut _754: bool;<br align="left"/>let mut _755: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _756: !;<br align="left"/>let _757: ();<br align="left"/>let mut _758: &amp;ReErased str;<br align="left"/>let _759: &amp;ReErased str;<br align="left"/>let mut _760: &amp;ReErased std::string::String;<br align="left"/>let _761: &amp;ReErased std::string::String;<br align="left"/>let _762: std::string::String;<br align="left"/>let _763: std::string::String;<br align="left"/>let mut _764: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _765: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _766: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _767: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _768: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _769: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _770: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _771: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _772: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _773: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _774: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _775: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _776: error::ErrorCode;<br align="left"/>let mut _777: bool;<br align="left"/>let mut _778: &amp;ReErased state::user::User;<br align="left"/>let mut _779: bool;<br align="left"/>let mut _780: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _781: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _782: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _783: isize;<br align="left"/>let _784: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _785: !;<br align="left"/>let mut _786: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _787: bool;<br align="left"/>let mut _788: !;<br align="left"/>let _789: ();<br align="left"/>let mut _790: &amp;ReErased str;<br align="left"/>let _791: &amp;ReErased str;<br align="left"/>let mut _792: &amp;ReErased std::string::String;<br align="left"/>let _793: &amp;ReErased std::string::String;<br align="left"/>let _794: std::string::String;<br align="left"/>let _795: std::string::String;<br align="left"/>let mut _796: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _797: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _798: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _799: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _800: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _801: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _802: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _803: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _804: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _805: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _806: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _807: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _808: error::ErrorCode;<br align="left"/>let _809: u16;<br align="left"/>let mut _810: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _811: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _812: &amp;ReErased mut state::user::User;<br align="left"/>let mut _813: u64;<br align="left"/>let mut _814: isize;<br align="left"/>let _815: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _816: !;<br align="left"/>let mut _817: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _818: u16;<br align="left"/>let _819: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _820: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _821: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _822: &amp;ReErased mut state::user::User;<br align="left"/>let mut _823: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _824: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _825: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _826: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _827: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _828: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _829: i64;<br align="left"/>let mut _830: u64;<br align="left"/>let mut _831: state::events::OrderActionExplanation;<br align="left"/>let mut _832: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _833: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _834: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _835: isize;<br align="left"/>let _836: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _837: !;<br align="left"/>let mut _838: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _839: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _840: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _841: bool;<br align="left"/>let mut _842: &amp;ReErased std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _843: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _844: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _845: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _846: &amp;ReErased state::user::User;<br align="left"/>let mut _847: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _848: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _849: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _850: state::margin_calculation::MarginContext;<br align="left"/>let mut _851: state::margin_calculation::MarginContext;<br align="left"/>let mut _852: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _853: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _854: state::margin_calculation::MarginContext;<br align="left"/>let mut _855: u32;<br align="left"/>let mut _856: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _857: u16;<br align="left"/>let mut _858: isize;<br align="left"/>let _859: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _860: !;<br align="left"/>let mut _861: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _862: state::margin_calculation::MarginContext;<br align="left"/>let mut _863: &amp;ReErased state::user::User;<br align="left"/>let mut _864: i64;<br align="left"/>let mut _865: isize;<br align="left"/>let _866: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _867: !;<br align="left"/>let mut _868: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _869: state::margin_calculation::MarginCalculation;<br align="left"/>let _870: u128;<br align="left"/>let mut _871: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _872: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _873: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _874: isize;<br align="left"/>let _875: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _876: !;<br align="left"/>let mut _877: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _878: u128;<br align="left"/>let _879: u128;<br align="left"/>let mut _880: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _881: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _882: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _883: isize;<br align="left"/>let _884: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _885: !;<br align="left"/>let mut _886: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _887: u128;<br align="left"/>let _888: u64;<br align="left"/>let mut _889: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _890: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _891: u128;<br align="left"/>let mut _892: u128;<br align="left"/>let mut _893: u128;<br align="left"/>let mut _894: isize;<br align="left"/>let _895: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _896: !;<br align="left"/>let mut _897: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _898: u64;<br align="left"/>let _899: ();<br align="left"/>let mut _900: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _901: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _902: &amp;ReErased mut state::user::User;<br align="left"/>let mut _903: u64;<br align="left"/>let mut _904: isize;<br align="left"/>let _905: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _906: !;<br align="left"/>let mut _907: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _908: ();<br align="left"/>let _909: ();<br align="left"/>let _910: ();<br align="left"/>let mut _911: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _912: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _913: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _914: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _915: &amp;ReErased [u8];<br align="left"/>let _916: &amp;ReErased [u8];<br align="left"/>let mut _917: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _918: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _919: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _920: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _921: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _922: state::events::LiquidationRecord;<br align="left"/>let mut _923: i64;<br align="left"/>let mut _924: u16;<br align="left"/>let mut _925: state::events::LiquidationType;<br align="left"/>let mut _926: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _927: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _928: u128;<br align="left"/>let mut _929: i128;<br align="left"/>let mut _930: bool;<br align="left"/>let mut _931: &amp;ReErased state::user::User;<br align="left"/>let mut _932: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _933: u64;<br align="left"/>let mut _934: state::events::LiquidateSpotRecord;<br align="left"/>let mut _935: u16;<br align="left"/>let mut _936: i64;<br align="left"/>let mut _937: u16;<br align="left"/>let mut _938: i64;<br align="left"/>let mut _939: state::events::LiquidationRecord;<br align="left"/>let _940: ();<br align="left"/>let mut _941: bool;<br align="left"/>let mut _942: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _943: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _944: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _945: isize;<br align="left"/>let _946: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _947: !;<br align="left"/>let mut _948: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _949: bool;<br align="left"/>let mut _950: !;<br align="left"/>let mut _951: error::ErrorCode;<br align="left"/>let _952: u128;<br align="left"/>let mut _953: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _954: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _955: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _956: isize;<br align="left"/>let _957: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _958: !;<br align="left"/>let mut _959: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _960: u128;<br align="left"/>let _961: u32;<br align="left"/>let mut _962: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _963: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _964: u32;<br align="left"/>let mut _965: u32;<br align="left"/>let mut _966: isize;<br align="left"/>let _967: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _968: !;<br align="left"/>let mut _969: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _970: u32;<br align="left"/>let _971: u128;<br align="left"/>let mut _972: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _973: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _974: u128;<br align="left"/>let mut _975: u32;<br align="left"/>let mut _976: u32;<br align="left"/>let mut _977: u32;<br align="left"/>let mut _978: i64;<br align="left"/>let mut _979: u32;<br align="left"/>let mut _980: isize;<br align="left"/>let _981: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _982: !;<br align="left"/>let mut _983: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _984: u128;<br align="left"/>let _985: u128;<br align="left"/>let mut _986: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _987: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _988: &amp;ReErased state::user::User;<br align="left"/>let mut _989: u128;<br align="left"/>let mut _990: u64;<br align="left"/>let mut _991: u128;<br align="left"/>let mut _992: u128;<br align="left"/>let mut _993: isize;<br align="left"/>let _994: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _995: !;<br align="left"/>let mut _996: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _997: u128;<br align="left"/>let _998: u128;<br align="left"/>let mut _999: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1000: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1001: u128;<br align="left"/>let mut _1002: u128;<br align="left"/>let mut _1003: u128;<br align="left"/>let mut _1004: isize;<br align="left"/>let _1005: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1006: !;<br align="left"/>let mut _1007: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1008: u128;<br align="left"/>let _1009: ();<br align="left"/>let mut _1010: bool;<br align="left"/>let mut _1011: u128;<br align="left"/>let mut _1012: !;<br align="left"/>let _1013: ();<br align="left"/>let mut _1014: &amp;ReErased str;<br align="left"/>let _1015: &amp;ReErased str;<br align="left"/>let mut _1016: error::ErrorCode;<br align="left"/>let _1017: u128;<br align="left"/>let mut _1018: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1019: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1020: u128;<br align="left"/>let mut _1021: u32;<br align="left"/>let mut _1022: i64;<br align="left"/>let mut _1023: u128;<br align="left"/>let mut _1024: u32;<br align="left"/>let mut _1025: i64;<br align="left"/>let mut _1026: isize;<br align="left"/>let _1027: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1028: !;<br align="left"/>let mut _1029: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1030: u128;<br align="left"/>let _1031: u128;<br align="left"/>let mut _1032: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1033: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1034: u128;<br align="left"/>let mut _1035: u128;<br align="left"/>let mut _1036: u128;<br align="left"/>let mut _1037: bool;<br align="left"/>let mut _1038: isize;<br align="left"/>let _1039: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1040: !;<br align="left"/>let mut _1041: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1042: u128;<br align="left"/>let _1043: ();<br align="left"/>let mut _1044: bool;<br align="left"/>let mut _1045: u128;<br align="left"/>let mut _1046: !;<br align="left"/>let _1047: ();<br align="left"/>let mut _1048: &amp;ReErased str;<br align="left"/>let _1049: &amp;ReErased str;<br align="left"/>let mut _1050: &amp;ReErased std::string::String;<br align="left"/>let _1051: &amp;ReErased std::string::String;<br align="left"/>let _1052: std::string::String;<br align="left"/>let _1053: std::string::String;<br align="left"/>let mut _1054: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1055: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1056: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1057: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1058: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1059: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1060: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1061: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1062: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1063: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1064: &amp;ReErased u16;<br align="left"/>let _1065: &amp;ReErased u16;<br align="left"/>let mut _1066: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1067: &amp;ReErased u16;<br align="left"/>let _1068: &amp;ReErased u16;<br align="left"/>let _1069: ();<br align="left"/>let mut _1070: &amp;ReErased str;<br align="left"/>let _1071: &amp;ReErased str;<br align="left"/>let mut _1072: &amp;ReErased std::string::String;<br align="left"/>let _1073: &amp;ReErased std::string::String;<br align="left"/>let _1074: std::string::String;<br align="left"/>let _1075: std::string::String;<br align="left"/>let mut _1076: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1077: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1078: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1079: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1080: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1081: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1082: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1083: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1084: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1085: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1086: &amp;ReErased u128;<br align="left"/>let _1087: &amp;ReErased u128;<br align="left"/>let mut _1088: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1089: &amp;ReErased u128;<br align="left"/>let _1090: &amp;ReErased u128;<br align="left"/>let _1091: ();<br align="left"/>let mut _1092: &amp;ReErased str;<br align="left"/>let _1093: &amp;ReErased str;<br align="left"/>let mut _1094: &amp;ReErased std::string::String;<br align="left"/>let _1095: &amp;ReErased std::string::String;<br align="left"/>let _1096: std::string::String;<br align="left"/>let _1097: std::string::String;<br align="left"/>let mut _1098: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1099: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1102: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1106: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1107: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1108: &amp;ReErased u128;<br align="left"/>let _1109: &amp;ReErased u128;<br align="left"/>let mut _1110: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1111: &amp;ReErased u128;<br align="left"/>let _1112: &amp;ReErased u128;<br align="left"/>let _1113: ();<br align="left"/>let mut _1114: &amp;ReErased str;<br align="left"/>let _1115: &amp;ReErased str;<br align="left"/>let mut _1116: &amp;ReErased std::string::String;<br align="left"/>let _1117: &amp;ReErased std::string::String;<br align="left"/>let _1118: std::string::String;<br align="left"/>let _1119: std::string::String;<br align="left"/>let mut _1120: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1121: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1122: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _1123: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _1124: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1128: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1129: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1130: &amp;ReErased u64;<br align="left"/>let _1131: &amp;ReErased u64;<br align="left"/>let mut _1132: error::ErrorCode;<br align="left"/>let _1133: ();<br align="left"/>let mut _1134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1135: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1136: bool;<br align="left"/>let mut _1137: u128;<br align="left"/>let mut _1138: u128;<br align="left"/>let mut _1139: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1140: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1141: u64;<br align="left"/>let mut _1142: isize;<br align="left"/>let _1143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1144: !;<br align="left"/>let mut _1145: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1146: u128;<br align="left"/>let mut _1147: ();<br align="left"/>let _1148: error::ErrorCode;<br align="left"/>let _1149: ();<br align="left"/>let mut _1150: &amp;ReErased str;<br align="left"/>let _1151: &amp;ReErased str;<br align="left"/>let mut _1152: &amp;ReErased std::string::String;<br align="left"/>let _1153: &amp;ReErased std::string::String;<br align="left"/>let _1154: std::string::String;<br align="left"/>let _1155: std::string::String;<br align="left"/>let mut _1156: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1157: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1158: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1159: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1160: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1161: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1164: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1165: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1166: &amp;ReErased error::ErrorCode;<br align="left"/>let _1167: &amp;ReErased error::ErrorCode;<br align="left"/>let _1168: ();<br align="left"/>let mut _1169: &amp;ReErased str;<br align="left"/>let _1170: &amp;ReErased str;<br align="left"/>let mut _1171: &amp;ReErased std::string::String;<br align="left"/>let _1172: &amp;ReErased std::string::String;<br align="left"/>let _1173: std::string::String;<br align="left"/>let _1174: std::string::String;<br align="left"/>let mut _1175: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1176: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1177: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1178: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1179: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1180: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1181: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1182: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1183: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1184: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1185: &amp;ReErased u64;<br align="left"/>let _1186: &amp;ReErased u64;<br align="left"/>let mut _1187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1188: &amp;ReErased u128;<br align="left"/>let _1189: &amp;ReErased u128;<br align="left"/>let mut _1190: error::ErrorCode;<br align="left"/>let mut _1191: isize;<br align="left"/>let _1192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1193: !;<br align="left"/>let mut _1194: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1195: ();<br align="left"/>let _1196: ();<br align="left"/>let mut _1197: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1198: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1199: bool;<br align="left"/>let mut _1200: u128;<br align="left"/>let mut _1201: u128;<br align="left"/>let mut _1202: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1203: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1204: u64;<br align="left"/>let mut _1205: isize;<br align="left"/>let _1206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1207: !;<br align="left"/>let mut _1208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1209: u128;<br align="left"/>let mut _1210: ();<br align="left"/>let _1211: error::ErrorCode;<br align="left"/>let _1212: ();<br align="left"/>let mut _1213: &amp;ReErased str;<br align="left"/>let _1214: &amp;ReErased str;<br align="left"/>let mut _1215: &amp;ReErased std::string::String;<br align="left"/>let _1216: &amp;ReErased std::string::String;<br align="left"/>let _1217: std::string::String;<br align="left"/>let _1218: std::string::String;<br align="left"/>let mut _1219: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1220: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1221: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1222: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1223: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1224: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1225: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1226: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1227: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1228: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1229: &amp;ReErased error::ErrorCode;<br align="left"/>let _1230: &amp;ReErased error::ErrorCode;<br align="left"/>let _1231: ();<br align="left"/>let mut _1232: &amp;ReErased str;<br align="left"/>let _1233: &amp;ReErased str;<br align="left"/>let mut _1234: &amp;ReErased std::string::String;<br align="left"/>let _1235: &amp;ReErased std::string::String;<br align="left"/>let _1236: std::string::String;<br align="left"/>let _1237: std::string::String;<br align="left"/>let mut _1238: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1239: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1240: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1241: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1242: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1243: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1244: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1245: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1246: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1247: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1248: &amp;ReErased u64;<br align="left"/>let _1249: &amp;ReErased u64;<br align="left"/>let mut _1250: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1251: &amp;ReErased u128;<br align="left"/>let _1252: &amp;ReErased u128;<br align="left"/>let mut _1253: error::ErrorCode;<br align="left"/>let mut _1254: isize;<br align="left"/>let _1255: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1256: !;<br align="left"/>let mut _1257: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1258: ();<br align="left"/>let _1259: bool;<br align="left"/>let mut _1260: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1261: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1262: i64;<br align="left"/>let mut _1263: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1264: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1265: i64;<br align="left"/>let mut _1266: isize;<br align="left"/>let _1267: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1268: !;<br align="left"/>let mut _1269: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1270: i64;<br align="left"/>let mut _1271: i64;<br align="left"/>let mut _1272: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1273: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1274: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1275: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1276: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1277: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1278: &amp;ReErased u16;<br align="left"/>let _1279: &amp;ReErased u16;<br align="left"/>let mut _1280: isize;<br align="left"/>let _1281: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1282: !;<br align="left"/>let mut _1283: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1284: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1285: i64;<br align="left"/>let mut _1286: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1287: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1288: u64;<br align="left"/>let mut _1289: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _1290: isize;<br align="left"/>let _1291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1292: !;<br align="left"/>let mut _1293: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1294: i64;<br align="left"/>let mut _1295: isize;<br align="left"/>let _1296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1297: !;<br align="left"/>let mut _1298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1299: bool;<br align="left"/>let _1300: ();<br align="left"/>let mut _1301: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1302: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1303: bool;<br align="left"/>let mut _1304: ();<br align="left"/>let _1305: error::ErrorCode;<br align="left"/>let _1306: ();<br align="left"/>let mut _1307: &amp;ReErased str;<br align="left"/>let _1308: &amp;ReErased str;<br align="left"/>let mut _1309: &amp;ReErased std::string::String;<br align="left"/>let _1310: &amp;ReErased std::string::String;<br align="left"/>let _1311: std::string::String;<br align="left"/>let _1312: std::string::String;<br align="left"/>let mut _1313: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1314: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1315: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1316: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1317: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1318: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1319: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1320: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1321: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1322: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1323: &amp;ReErased error::ErrorCode;<br align="left"/>let _1324: &amp;ReErased error::ErrorCode;<br align="left"/>let _1325: ();<br align="left"/>let mut _1326: &amp;ReErased str;<br align="left"/>let _1327: &amp;ReErased str;<br align="left"/>let mut _1328: error::ErrorCode;<br align="left"/>let mut _1329: isize;<br align="left"/>let _1330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1331: !;<br align="left"/>let mut _1332: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1333: ();<br align="left"/>let _1334: bool;<br align="left"/>let mut _1335: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1336: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1337: i64;<br align="left"/>let mut _1338: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1339: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1340: i64;<br align="left"/>let mut _1341: isize;<br align="left"/>let _1342: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1343: !;<br align="left"/>let mut _1344: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1345: i64;<br align="left"/>let mut _1346: i64;<br align="left"/>let mut _1347: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1348: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1349: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1350: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1351: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1352: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1353: &amp;ReErased u16;<br align="left"/>let _1354: &amp;ReErased u16;<br align="left"/>let mut _1355: isize;<br align="left"/>let _1356: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1357: !;<br align="left"/>let mut _1358: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1359: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1360: i64;<br align="left"/>let mut _1361: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1362: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1363: u64;<br align="left"/>let mut _1364: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _1365: isize;<br align="left"/>let _1366: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1367: !;<br align="left"/>let mut _1368: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1369: i64;<br align="left"/>let mut _1370: isize;<br align="left"/>let _1371: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1372: !;<br align="left"/>let mut _1373: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1374: bool;<br align="left"/>let _1375: ();<br align="left"/>let mut _1376: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1377: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1378: bool;<br align="left"/>let mut _1379: ();<br align="left"/>let _1380: error::ErrorCode;<br align="left"/>let _1381: ();<br align="left"/>let mut _1382: &amp;ReErased str;<br align="left"/>let _1383: &amp;ReErased str;<br align="left"/>let mut _1384: &amp;ReErased std::string::String;<br align="left"/>let _1385: &amp;ReErased std::string::String;<br align="left"/>let _1386: std::string::String;<br align="left"/>let _1387: std::string::String;<br align="left"/>let mut _1388: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1389: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1390: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1391: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1392: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1393: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1394: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1395: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1396: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1397: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1398: &amp;ReErased error::ErrorCode;<br align="left"/>let _1399: &amp;ReErased error::ErrorCode;<br align="left"/>let _1400: ();<br align="left"/>let mut _1401: &amp;ReErased str;<br align="left"/>let _1402: &amp;ReErased str;<br align="left"/>let mut _1403: error::ErrorCode;<br align="left"/>let mut _1404: isize;<br align="left"/>let _1405: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1406: !;<br align="left"/>let mut _1407: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1408: ();<br align="left"/>let mut _1409: ();<br align="left"/>let mut _1410: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1411: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1412: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1413: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1414: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1415: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1416: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1417: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1418: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1419: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1420: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1421: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1422: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1423: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1424: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1425: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1426: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1427: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1428: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1429: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1430: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1431: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1432: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1433: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1434: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1435: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1436: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1437: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1438: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1439: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1440: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1441: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1442: bool;<br align="left"/>let mut _1443: bool;<br align="left"/>let mut _1444: bool;<br align="left"/>let mut _1445: bool;<br align="left"/>let mut _1446: bool;<br align="left"/>let mut _1447: isize;<br align="left"/>let mut _1448: isize;<br align="left"/>let mut _1449: isize;<br align="left"/>let mut _1450: isize;<br align="left"/>let mut _1451: isize;<br align="left"/>let mut _1452: isize;<br align="left"/>let mut _1453: isize;<br align="left"/>let mut _1454: isize;<br align="left"/>let mut _1455: isize;<br align="left"/>let mut _1456: isize;<br align="left"/>let mut _1457: isize;<br align="left"/>let mut _1458: isize;<br align="left"/>let mut _1459: isize;<br align="left"/>let mut _1460: isize;<br align="left"/>let mut _1461: isize;<br align="left"/>let mut _1462: isize;<br align="left"/>let mut _1463: isize;<br align="left"/>let mut _1464: isize;<br align="left"/>let mut _1465: isize;<br align="left"/>let mut _1466: isize;<br align="left"/>let mut _1467: isize;<br align="left"/>let mut _1468: isize;<br align="left"/>let mut _1469: isize;<br align="left"/>let mut _1470: isize;<br align="left"/>let mut _1471: isize;<br align="left"/>let mut _1472: isize;<br align="left"/>let mut _1473: isize;<br align="left"/>let mut _1474: isize;<br align="left"/>let mut _1475: isize;<br align="left"/>let mut _1476: isize;<br align="left"/>let mut _1477: isize;<br align="left"/>let mut _1478: isize;<br align="left"/>let mut _1479: isize;<br align="left"/>let mut _1480: isize;<br align="left"/>let mut _1481: isize;<br align="left"/>debug asset_market_index =&gt; _1;<br align="left"/>debug liability_market_index =&gt; _2;<br align="left"/>debug swap_amount_in =&gt; _3;<br align="left"/>debug user =&gt; _4;<br align="left"/>debug user_key =&gt; _5;<br align="left"/>debug user_stats =&gt; _6;<br align="left"/>debug liquidator =&gt; _7;<br align="left"/>debug liquidator_key =&gt; _8;<br align="left"/>debug _liquidator_stats =&gt; _9;<br align="left"/>debug perp_market_map =&gt; _10;<br align="left"/>debug spot_market_map =&gt; _11;<br align="left"/>debug oracle_map =&gt; _12;<br align="left"/>debug now =&gt; _13;<br align="left"/>debug slot =&gt; _14;<br align="left"/>debug state =&gt; _15;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _16;<br align="left"/>debug initial_pct_to_liquidate =&gt; _17;<br align="left"/>debug liquidation_duration =&gt; _19;<br align="left"/>debug error_code =&gt; _27;<br align="left"/>debug res =&gt; _34;<br align="left"/>debug res =&gt; _53;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug error_code =&gt; _71;<br align="left"/>debug res =&gt; _78;<br align="left"/>debug res =&gt; _97;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug asset_spot_market =&gt; _109;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug error_code =&gt; _129;<br align="left"/>debug res =&gt; _136;<br align="left"/>debug res =&gt; _155;<br align="left"/>debug residual =&gt; _170;<br align="left"/>debug val =&gt; _173;<br align="left"/>debug liability_spot_market =&gt; _174;<br align="left"/>debug residual =&gt; _181;<br align="left"/>debug val =&gt; _184;<br align="left"/>debug error_code =&gt; _194;<br align="left"/>debug res =&gt; _201;<br align="left"/>debug res =&gt; _220;<br align="left"/>debug residual =&gt; _235;<br align="left"/>debug val =&gt; _238;<br align="left"/>debug error_code =&gt; _250;<br align="left"/>debug res =&gt; _257;<br align="left"/>debug res =&gt; _276;<br align="left"/>debug residual =&gt; _298;<br align="left"/>debug val =&gt; _301;<br align="left"/>debug asset_amount =&gt; _306;<br align="left"/>debug asset_price =&gt; _307;<br align="left"/>debug asset_decimals =&gt; _308;<br align="left"/>debug asset_weight =&gt; _309;<br align="left"/>debug asset_pool_id =&gt; _310;<br align="left"/>debug asset_oracle_delay =&gt; _311;<br align="left"/>debug asset_market =&gt; _313;<br align="left"/>debug residual =&gt; _320;<br align="left"/>debug val =&gt; _323;<br align="left"/>debug asset_price_data =&gt; _324;<br align="left"/>debug validity_guard_rails =&gt; _325;<br align="left"/>debug residual =&gt; _337;<br align="left"/>debug val =&gt; _340;<br align="left"/>debug residual =&gt; _354;<br align="left"/>debug val =&gt; _357;<br align="left"/>debug spot_deposit_position =&gt; _358;<br align="left"/>debug residual =&gt; _364;<br align="left"/>debug val =&gt; _367;<br align="left"/>debug error_code =&gt; _376;<br align="left"/>debug res =&gt; _383;<br align="left"/>debug residual =&gt; _401;<br align="left"/>debug val =&gt; _404;<br align="left"/>debug token_amount =&gt; _405;<br align="left"/>debug residual =&gt; _414;<br align="left"/>debug val =&gt; _417;<br align="left"/>debug error_code =&gt; _424;<br align="left"/>debug res =&gt; _431;<br align="left"/>debug res =&gt; _450;<br align="left"/>debug residual =&gt; _465;<br align="left"/>debug val =&gt; _468;<br align="left"/>debug asset_price =&gt; _469;<br align="left"/>debug liability_price =&gt; _482;<br align="left"/>debug liability_decimals =&gt; _483;<br align="left"/>debug liability_weight =&gt; _484;<br align="left"/>debug liability_if_fee =&gt; _485;<br align="left"/>debug liability_pool_id =&gt; _486;<br align="left"/>debug liability_oracle_delay =&gt; _487;<br align="left"/>debug liability_market =&gt; _489;<br align="left"/>debug residual =&gt; _496;<br align="left"/>debug val =&gt; _499;<br align="left"/>debug liability_price_data =&gt; _500;<br align="left"/>debug validity_guard_rails =&gt; _501;<br align="left"/>debug residual =&gt; _513;<br align="left"/>debug val =&gt; _516;<br align="left"/>debug residual =&gt; _530;<br align="left"/>debug val =&gt; _533;<br align="left"/>debug spot_position =&gt; _534;<br align="left"/>debug residual =&gt; _540;<br align="left"/>debug val =&gt; _543;<br align="left"/>debug error_code =&gt; _552;<br align="left"/>debug res =&gt; _559;<br align="left"/>debug residual =&gt; _577;<br align="left"/>debug val =&gt; _580;<br align="left"/>debug token_amount =&gt; _581;<br align="left"/>debug residual =&gt; _590;<br align="left"/>debug val =&gt; _593;<br align="left"/>debug error_code =&gt; _600;<br align="left"/>debug res =&gt; _607;<br align="left"/>debug res =&gt; _626;<br align="left"/>debug residual =&gt; _641;<br align="left"/>debug val =&gt; _644;<br align="left"/>debug liability_price =&gt; _645;<br align="left"/>debug error_code =&gt; _673;<br align="left"/>debug res =&gt; _680;<br align="left"/>debug res =&gt; _699;<br align="left"/>debug residual =&gt; _717;<br align="left"/>debug val =&gt; _720;<br align="left"/>debug margin_context =&gt; _721;<br align="left"/>debug residual =&gt; _730;<br align="left"/>debug val =&gt; _733;<br align="left"/>debug margin_calculation =&gt; _736;<br align="left"/>debug residual =&gt; _747;<br align="left"/>debug val =&gt; _750;<br align="left"/>debug res =&gt; _763;<br align="left"/>debug residual =&gt; _784;<br align="left"/>debug val =&gt; _787;<br align="left"/>debug res =&gt; _795;<br align="left"/>debug liquidation_id =&gt; _809;<br align="left"/>debug residual =&gt; _815;<br align="left"/>debug val =&gt; _818;<br align="left"/>debug canceled_order_ids =&gt; _819;<br align="left"/>debug residual =&gt; _836;<br align="left"/>debug val =&gt; _839;<br align="left"/>debug intermediate_margin_calculation =&gt; _840;<br align="left"/>debug intermediate_margin_calculation =&gt; _843;<br align="left"/>debug residual =&gt; _859;<br align="left"/>debug val =&gt; _862;<br align="left"/>debug residual =&gt; _866;<br align="left"/>debug val =&gt; _869;<br align="left"/>debug initial_margin_shortage =&gt; _870;<br align="left"/>debug residual =&gt; _875;<br align="left"/>debug val =&gt; _878;<br align="left"/>debug new_margin_shortage =&gt; _879;<br align="left"/>debug residual =&gt; _884;<br align="left"/>debug val =&gt; _887;<br align="left"/>debug margin_freed =&gt; _888;<br align="left"/>debug residual =&gt; _895;<br align="left"/>debug val =&gt; _898;<br align="left"/>debug residual =&gt; _905;<br align="left"/>debug val =&gt; _908;<br align="left"/>debug residual =&gt; _946;<br align="left"/>debug val =&gt; _949;<br align="left"/>debug margin_shortage =&gt; _952;<br align="left"/>debug residual =&gt; _957;<br align="left"/>debug val =&gt; _960;<br align="left"/>debug liability_weight_with_buffer =&gt; _961;<br align="left"/>debug residual =&gt; _967;<br align="left"/>debug val =&gt; _970;<br align="left"/>debug liability_transfer_to_cover_margin_shortage =&gt; _971;<br align="left"/>debug residual =&gt; _981;<br align="left"/>debug val =&gt; _984;<br align="left"/>debug max_pct_allowed =&gt; _985;<br align="left"/>debug residual =&gt; _994;<br align="left"/>debug val =&gt; _997;<br align="left"/>debug max_liability_allowed_to_be_transferred =&gt; _998;<br align="left"/>debug residual =&gt; _1005;<br align="left"/>debug val =&gt; _1008;<br align="left"/>debug asset_transfer_to_cover_margin_shortage =&gt; _1017;<br align="left"/>debug residual =&gt; _1027;<br align="left"/>debug val =&gt; _1030;<br align="left"/>debug max_asset_transfer =&gt; _1031;<br align="left"/>debug residual =&gt; _1039;<br align="left"/>debug val =&gt; _1042;<br align="left"/>debug res =&gt; _1053;<br align="left"/>debug res =&gt; _1075;<br align="left"/>debug res =&gt; _1097;<br align="left"/>debug res =&gt; _1119;<br align="left"/>debug residual =&gt; _1143;<br align="left"/>debug val =&gt; _1146;<br align="left"/>debug error_code =&gt; _1148;<br align="left"/>debug res =&gt; _1155;<br align="left"/>debug res =&gt; _1174;<br align="left"/>debug residual =&gt; _1192;<br align="left"/>debug val =&gt; _1195;<br align="left"/>debug residual =&gt; _1206;<br align="left"/>debug val =&gt; _1209;<br align="left"/>debug error_code =&gt; _1211;<br align="left"/>debug res =&gt; _1218;<br align="left"/>debug res =&gt; _1237;<br align="left"/>debug residual =&gt; _1255;<br align="left"/>debug val =&gt; _1258;<br align="left"/>debug liability_oracle_too_divergent =&gt; _1259;<br align="left"/>debug residual =&gt; _1267;<br align="left"/>debug val =&gt; _1270;<br align="left"/>debug residual =&gt; _1281;<br align="left"/>debug val =&gt; _1284;<br align="left"/>debug residual =&gt; _1291;<br align="left"/>debug val =&gt; _1294;<br align="left"/>debug residual =&gt; _1296;<br align="left"/>debug val =&gt; _1299;<br align="left"/>debug error_code =&gt; _1305;<br align="left"/>debug res =&gt; _1312;<br align="left"/>debug residual =&gt; _1330;<br align="left"/>debug val =&gt; _1333;<br align="left"/>debug asset_oracle_too_divergent =&gt; _1334;<br align="left"/>debug residual =&gt; _1342;<br align="left"/>debug val =&gt; _1345;<br align="left"/>debug residual =&gt; _1356;<br align="left"/>debug val =&gt; _1359;<br align="left"/>debug residual =&gt; _1366;<br align="left"/>debug val =&gt; _1369;<br align="left"/>debug residual =&gt; _1371;<br align="left"/>debug val =&gt; _1374;<br align="left"/>debug error_code =&gt; _1380;<br align="left"/>debug res =&gt; _1387;<br align="left"/>debug residual =&gt; _1405;<br align="left"/>debug val =&gt; _1408;<br align="left"/>>;
    bb0__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1446 = const false<br/>_1445 = const false<br/>_1442 = const false<br/>_1444 = const false<br/>_1443 = const false<br/>StorageLive(_16)<br/>_16 = ((*_15).11: u32)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_15).21: u16)<br/>_17 = move _18 as u128 (IntToInt)<br/>StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_15).20: u8)<br/>_19 = move _20 as u128 (IntToInt)<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_4)<br/></td></tr><tr><td align="left">_24 = User::is_bankrupt(move _25)</td></tr></table>>];
    bb1__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb2__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_27)<br/>_27 = error::ErrorCode::UserBankrupt<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_1441 = const _<br/>_38 = &amp;(*_1441)<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;_27<br/>_45 = &amp;(*_46)<br/></td></tr><tr><td align="left">_44 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _45)</td></tr></table>>];
    bb3__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>_26 = ()<br/>_23 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = [move _44]<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_35 = Arguments::&lt;'_&gt;::new_v1(move _36, move _40)</td></tr></table>>];
    bb5__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = format(move _35)</td></tr></table>>];
    bb6__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>_33 = move _34<br/>StorageDead(_34)<br/>_32 = &amp;_33<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = &lt;String as Deref&gt;::deref(move _31)</td></tr></table>>];
    bb7__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_29 = &amp;(*_30)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_28 = solana_program::log::sol_log(move _29)</td></tr></table>>];
    bb8__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb9__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_1440 = const _<br/>_57 = &amp;(*_1440)<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_const(move _55)</td></tr></table>>];
    bb10__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = format(move _54)</td></tr></table>>];
    bb11__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_57)<br/>_52 = move _53<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;String as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb12__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_47 = solana_program::log::sol_log(move _48)</td></tr></table>>];
    bb13__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb14__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageLive(_59)<br/>_59 = _27<br/>_23 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _59)<br/>StorageDead(_59)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb16__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_60 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb17__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_22 as Continue).0: ())<br/>_21 = _64<br/>StorageDead(_64)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_7)<br/></td></tr><tr><td align="left">_68 = User::is_bankrupt(move _69)</td></tr></table>>];
    bb18__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb20__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb22__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_71)<br/>_71 = error::ErrorCode::UserBankrupt<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_1439 = const _<br/>_82 = &amp;(*_1439)<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_71<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _89)</td></tr></table>>];
    bb23__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_70)<br/>_70 = ()<br/>_67 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _70)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_79 = Arguments::&lt;'_&gt;::new_v1(move _80, move _84)</td></tr></table>>];
    bb25__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = format(move _79)</td></tr></table>>];
    bb26__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>_77 = move _78<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = &lt;String as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb27__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb28__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb29__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_1438 = const _<br/>_101 = &amp;(*_1438)<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = Arguments::&lt;'_&gt;::new_const(move _99)</td></tr></table>>];
    bb30__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = format(move _98)</td></tr></table>>];
    bb31__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_101)<br/>_96 = move _97<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;String as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb32__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb33__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb34__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_103)<br/>_103 = _71<br/>_67 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _103)<br/>StorageDead(_103)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb36__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_104 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb37__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_66 as Continue).0: ())<br/>_65 = _108<br/>StorageDead(_108)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_11)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;_1<br/>_113 = &amp;(*_114)<br/></td></tr><tr><td align="left">_111 = SpotMarketMap::&lt;'_&gt;::get_ref(move _112, move _113)</td></tr></table>>];
    bb38__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb39__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb41__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_115 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb42__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = move ((_110 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1446 = const true<br/>_109 = move _119<br/>StorageDead(_119)<br/>_1449 = discriminant(_110)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;_109<br/></td></tr><tr><td align="left">_125 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _126)</td></tr></table>>];
    bb43__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb44__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>_1447 = discriminant(_110)<br/>StorageDead(_114)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_124 = &amp;(*_125)<br/>StorageDead(_126)<br/>StorageLive(_127)<br/>_127 = SpotOperation::Liquidation<br/></td></tr><tr><td align="left">_123 = SpotMarket::is_operation_paused(move _124, move _127)</td></tr></table>>];
    bb46__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb47__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_125)<br/>StorageLive(_129)<br/>_129 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_1437 = const _<br/>_140 = &amp;(*_1437)<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;_129<br/>_147 = &amp;(*_148)<br/></td></tr><tr><td align="left">_146 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _147)</td></tr></table>>];
    bb48__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>_128 = ()<br/>_122 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _128)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_145 = [move _146]<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_137 = Arguments::&lt;'_&gt;::new_v1(move _138, move _142)</td></tr></table>>];
    bb50__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = format(move _137)</td></tr></table>>];
    bb51__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>_135 = move _136<br/>StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;String as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb52__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_131 = &amp;(*_132)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_130 = solana_program::log::sol_log(move _131)</td></tr></table>>];
    bb53__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb54__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_1436 = const _<br/>_159 = &amp;(*_1436)<br/>_158 = &amp;(*_159)<br/>_157 = move _158 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_158)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;_1<br/>_166 = &amp;(*_167)<br/></td></tr><tr><td align="left">_165 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _166)</td></tr></table>>];
    bb55__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>_164 = [move _165]<br/>StorageDead(_165)<br/>_163 = &amp;_164<br/>_162 = &amp;(*_163)<br/>_161 = move _162 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_156 = Arguments::&lt;'_&gt;::new_v1(move _157, move _161)</td></tr></table>>];
    bb56__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = format(move _156)</td></tr></table>>];
    bb57__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_167)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/>StorageDead(_159)<br/>_154 = move _155<br/>StorageDead(_155)<br/>_153 = &amp;_154<br/>_152 = &amp;(*_153)<br/></td></tr><tr><td align="left">_151 = &lt;String as Deref&gt;::deref(move _152)</td></tr></table>>];
    bb58__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_150 = &amp;(*_151)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">_149 = solana_program::log::sol_log(move _150)</td></tr></table>>];
    bb59__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/></td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb60__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageLive(_168)<br/>_168 = _129<br/>_122 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _168)<br/>StorageDead(_168)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb62__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_169 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb63__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_121 as Continue).0: ())<br/>_120 = _173<br/>StorageDead(_173)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;(*_11)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = &amp;_2<br/>_178 = &amp;(*_179)<br/></td></tr><tr><td align="left">_176 = SpotMarketMap::&lt;'_&gt;::get_ref(move _177, move _178)</td></tr></table>>];
    bb64__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_172)<br/>_172 = _170<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _172)</td></tr></table>>];
    bb65__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_175 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _176)</td></tr></table>>];
    bb67__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>_180 = discriminant(_175)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb68__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = move ((_175 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1445 = const true<br/>_174 = move _184<br/>StorageDead(_184)<br/>_1453 = discriminant(_175)<br/>StorageDead(_179)<br/>StorageDead(_175)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_174<br/></td></tr><tr><td align="left">_190 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _191)</td></tr></table>>];
    bb69__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_181)<br/>_181 = ((_175 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_183)<br/>_183 = _181<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _183)</td></tr></table>>];
    bb70__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_181)<br/>_1451 = discriminant(_175)<br/>StorageDead(_179)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_189 = &amp;(*_190)<br/>StorageDead(_191)<br/>StorageLive(_192)<br/>_192 = SpotOperation::Liquidation<br/></td></tr><tr><td align="left">_188 = SpotMarket::is_operation_paused(move _189, move _192)</td></tr></table>>];
    bb72__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb73__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_189)<br/>StorageDead(_190)<br/>StorageLive(_194)<br/>_194 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_1435 = const _<br/>_205 = &amp;(*_1435)<br/>_204 = &amp;(*_205)<br/>_203 = move _204 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_204)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;_194<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_211 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _212)</td></tr></table>>];
    bb74__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_189)<br/>StorageDead(_190)<br/>StorageLive(_193)<br/>_193 = ()<br/>_187 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _193)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_210 = [move _211]<br/>StorageDead(_211)<br/>_209 = &amp;_210<br/>_208 = &amp;(*_209)<br/>_207 = move _208 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">_202 = Arguments::&lt;'_&gt;::new_v1(move _203, move _207)</td></tr></table>>];
    bb76__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_201 = format(move _202)</td></tr></table>>];
    bb77__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_209)<br/>StorageDead(_205)<br/>_200 = move _201<br/>StorageDead(_201)<br/>_199 = &amp;_200<br/>_198 = &amp;(*_199)<br/></td></tr><tr><td align="left">_197 = &lt;String as Deref&gt;::deref(move _198)</td></tr></table>>];
    bb78__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_196 = &amp;(*_197)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_195 = solana_program::log::sol_log(move _196)</td></tr></table>>];
    bb79__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/></td></tr><tr><td align="left">drop(_200)</td></tr></table>>];
    bb80__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_1434 = const _<br/>_224 = &amp;(*_1434)<br/>_223 = &amp;(*_224)<br/>_222 = move _223 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_223)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;_2<br/>_231 = &amp;(*_232)<br/></td></tr><tr><td align="left">_230 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _231)</td></tr></table>>];
    bb81__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>_229 = [move _230]<br/>StorageDead(_230)<br/>_228 = &amp;_229<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_221 = Arguments::&lt;'_&gt;::new_v1(move _222, move _226)</td></tr></table>>];
    bb82__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = format(move _221)</td></tr></table>>];
    bb83__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>_219 = move _220<br/>StorageDead(_220)<br/>_218 = &amp;_219<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_216 = &lt;String as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb84__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_215 = &amp;(*_216)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">_214 = solana_program::log::sol_log(move _215)</td></tr></table>>];
    bb85__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/></td></tr><tr><td align="left">drop(_219)</td></tr></table>>];
    bb86__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageLive(_233)<br/>_233 = _194<br/>_187 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _233)<br/>StorageDead(_233)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb88__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_234 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _234)</td></tr></table>>];
    bb89__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_238)<br/>_238 = ((_186 as Continue).0: ())<br/>_185 = _238<br/>StorageDead(_238)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = &amp;_109<br/></td></tr><tr><td align="left">_244 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _245)</td></tr></table>>];
    bb90__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_235)<br/>_235 = ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_237)<br/>_237 = _235<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _237)</td></tr></table>>];
    bb91__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageDead(_235)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>_243 = ((*_244).62: u8)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;_174<br/></td></tr><tr><td align="left">_247 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _248)</td></tr></table>>];
    bb93__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>_246 = ((*_247).62: u8)<br/>_242 = Eq(move _243, move _246)<br/></td></tr><tr><td align="left">switchInt(move _242)</td></tr></table>>];
    bb94__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_243)<br/>StorageLive(_249)<br/>_249 = ()<br/>_241 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _249)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_243)<br/>StorageLive(_250)<br/>_250 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_1433 = const _<br/>_261 = &amp;(*_1433)<br/>_260 = &amp;(*_261)<br/>_259 = move _260 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_260)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = &amp;_250<br/>_268 = &amp;(*_269)<br/></td></tr><tr><td align="left">_267 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _268)</td></tr></table>>];
    bb96__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_266 = [move _267]<br/>StorageDead(_267)<br/>_265 = &amp;_266<br/>_264 = &amp;(*_265)<br/>_263 = move _264 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">_258 = Arguments::&lt;'_&gt;::new_v1(move _259, move _263)</td></tr></table>>];
    bb97__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = format(move _258)</td></tr></table>>];
    bb98__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_261)<br/>_256 = move _257<br/>StorageDead(_257)<br/>_255 = &amp;_256<br/>_254 = &amp;(*_255)<br/></td></tr><tr><td align="left">_253 = &lt;String as Deref&gt;::deref(move _254)</td></tr></table>>];
    bb99__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_252 = &amp;(*_253)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">_251 = solana_program::log::sol_log(move _252)</td></tr></table>>];
    bb100__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">drop(_256)</td></tr></table>>];
    bb101__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_1432 = const _<br/>_280 = &amp;(*_1432)<br/>_279 = &amp;(*_280)<br/>_278 = move _279 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_279)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = &amp;_109<br/></td></tr><tr><td align="left">_289 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _290)</td></tr></table>>];
    bb102__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>_288 = &amp;((*_289).62: u8)<br/>_287 = &amp;(*_288)<br/></td></tr><tr><td align="left">_286 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _287)</td></tr></table>>];
    bb103__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = &amp;_174<br/></td></tr><tr><td align="left">_294 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _295)</td></tr></table>>];
    bb104__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>_293 = &amp;((*_294).62: u8)<br/>_292 = &amp;(*_293)<br/></td></tr><tr><td align="left">_291 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _292)</td></tr></table>>];
    bb105__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_285 = [move _286, move _291]<br/>StorageDead(_291)<br/>StorageDead(_286)<br/>_284 = &amp;_285<br/>_283 = &amp;(*_284)<br/>_282 = move _283 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_283)<br/></td></tr><tr><td align="left">_277 = Arguments::&lt;'_&gt;::new_v1(move _278, move _282)</td></tr></table>>];
    bb106__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">_276 = format(move _277)</td></tr></table>>];
    bb107__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_294)<br/>StorageDead(_293)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/>StorageDead(_280)<br/>_275 = move _276<br/>StorageDead(_276)<br/>_274 = &amp;_275<br/>_273 = &amp;(*_274)<br/></td></tr><tr><td align="left">_272 = &lt;String as Deref&gt;::deref(move _273)</td></tr></table>>];
    bb108__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_271 = &amp;(*_272)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">_270 = solana_program::log::sol_log(move _271)</td></tr></table>>];
    bb109__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/></td></tr><tr><td align="left">drop(_275)</td></tr></table>>];
    bb110__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageLive(_296)<br/>_296 = _250<br/>_241 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _296)<br/>StorageDead(_296)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/></td></tr><tr><td align="left">_240 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _241)</td></tr></table>>];
    bb112__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>_297 = discriminant(_240)<br/></td></tr><tr><td align="left">switchInt(move _297)</td></tr></table>>];
    bb113__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_301)<br/>_301 = ((_240 as Continue).0: ())<br/>_239 = _301<br/>StorageDead(_301)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_1446 = const false<br/>_303 = move _109<br/></td></tr><tr><td align="left">_302 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _303)</td></tr></table>>];
    bb114__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = ((_240 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_300)<br/>_300 = _298<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _300)</td></tr></table>>];
    bb115__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_298)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_302)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_1445 = const false<br/>_305 = move _174<br/></td></tr><tr><td align="left">_304 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _305)</td></tr></table>>];
    bb117__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_304)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_316 = &amp;(*_11)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;_1<br/>_317 = &amp;(*_318)<br/></td></tr><tr><td align="left">_315 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _316, move _317)</td></tr></table>>];
    bb118__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">_314 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _315)</td></tr></table>>];
    bb119__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_319 = discriminant(_314)<br/></td></tr><tr><td align="left">switchInt(move _319)</td></tr></table>>];
    bb120__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_323)<br/>_323 = move ((_314 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_313 = move _323<br/>StorageDead(_323)<br/>_1457 = discriminant(_314)<br/>StorageDead(_318)<br/>StorageDead(_314)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = &amp;mut (*_12)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = &amp;_313<br/></td></tr><tr><td align="left">_334 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _335)</td></tr></table>>];
    bb121__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_320)<br/>_320 = ((_314 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_322)<br/>_322 = _320<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _322)</td></tr></table>>];
    bb122__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>_1455 = discriminant(_314)<br/>StorageDead(_318)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_333 = &amp;(*_334)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_332 = SpotMarket::oracle_id(move _333)</td></tr></table>>];
    bb124__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>_331 = &amp;_332<br/>_330 = &amp;(*_331)<br/></td></tr><tr><td align="left">_328 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _329, move _330)</td></tr></table>>];
    bb125__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">_327 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _328)</td></tr></table>>];
    bb126__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_336 = discriminant(_327)<br/></td></tr><tr><td align="left">switchInt(move _336)</td></tr></table>>];
    bb127__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_340)<br/>_340 = ((_327 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_326 = _340<br/>StorageDead(_340)<br/>StorageLive(_324)<br/>_324 = (_326.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_325)<br/>_325 = (_326.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>_347 = &amp;mut _313<br/>_346 = &amp;mut (*_347)<br/></td></tr><tr><td align="left">_345 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _346)</td></tr></table>>];
    bb128__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_337)<br/>_337 = ((_327 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_339)<br/>_339 = _337<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _339)</td></tr></table>>];
    bb129__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_337)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_344 = &amp;mut (*_345)<br/>StorageDead(_346)<br/>StorageLive(_348)<br/>_348 = &amp;(*_324)<br/>StorageLive(_349)<br/>_349 = &amp;(*_325)<br/>StorageLive(_350)<br/>_350 = _13<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>_352 = DriftAction::Liquidate<br/>_351 = Option::&lt;DriftAction&gt;::Some(move _352)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">_343 = update_spot_market_and_check_validity(move _344, move _348, move _349, move _350, move _351)</td></tr></table>>];
    bb131__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_350)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">_342 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _343)</td></tr></table>>];
    bb132__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>_353 = discriminant(_342)<br/></td></tr><tr><td align="left">switchInt(move _353)</td></tr></table>>];
    bb133__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_357)<br/>_357 = ((_342 as Continue).0: ())<br/>_341 = _357<br/>StorageDead(_357)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_341)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>_361 = &amp;(*_4)<br/>StorageLive(_362)<br/>_362 = _1<br/></td></tr><tr><td align="left">_360 = User::get_spot_position(move _361, move _362)</td></tr></table>>];
    bb134__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_354)<br/>_354 = ((_342 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_356)<br/>_356 = _354<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _356)</td></tr></table>>];
    bb135__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_354)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_361)<br/></td></tr><tr><td align="left">_359 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _360)</td></tr></table>>];
    bb137__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/>_363 = discriminant(_359)<br/></td></tr><tr><td align="left">switchInt(move _363)</td></tr></table>>];
    bb138__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_367)<br/>_367 = ((_359 as Continue).0: &amp;state::user::SpotPosition)<br/>_358 = _367<br/>StorageDead(_367)<br/>StorageDead(_359)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;((*_358).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_373)<br/>_1431 = const _<br/>_373 = &amp;(*_1431)<br/></td></tr><tr><td align="left">_371 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _372, move _373)</td></tr></table>>];
    bb139__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_359 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_366)<br/>_366 = _364<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _366)</td></tr></table>>];
    bb140__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>StorageDead(_364)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left">switchInt(move _371)</td></tr></table>>];
    bb142__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageDead(_372)<br/>StorageLive(_375)<br/>_375 = ()<br/>_370 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _375)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageDead(_372)<br/>StorageLive(_376)<br/>_376 = error::ErrorCode::WrongSpotBalanceType<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_1430 = const _<br/>_387 = &amp;(*_1430)<br/>_386 = &amp;(*_387)<br/>_385 = move _386 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_386)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>_395 = &amp;_376<br/>_394 = &amp;(*_395)<br/></td></tr><tr><td align="left">_393 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _394)</td></tr></table>>];
    bb144__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>_392 = [move _393]<br/>StorageDead(_393)<br/>_391 = &amp;_392<br/>_390 = &amp;(*_391)<br/>_389 = move _390 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">_384 = Arguments::&lt;'_&gt;::new_v1(move _385, move _389)</td></tr></table>>];
    bb145__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_385)<br/></td></tr><tr><td align="left">_383 = format(move _384)</td></tr></table>>];
    bb146__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_395)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_387)<br/>_382 = move _383<br/>StorageDead(_383)<br/>_381 = &amp;_382<br/>_380 = &amp;(*_381)<br/></td></tr><tr><td align="left">_379 = &lt;String as Deref&gt;::deref(move _380)</td></tr></table>>];
    bb147__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_378 = &amp;(*_379)<br/>StorageDead(_380)<br/></td></tr><tr><td align="left">_377 = solana_program::log::sol_log(move _378)</td></tr></table>>];
    bb148__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/></td></tr><tr><td align="left">drop(_382)</td></tr></table>>];
    bb149__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_398 = const &quot;User did not have a deposit for the asset market index&quot;<br/>_397 = &amp;(*_398)<br/></td></tr><tr><td align="left">_396 = solana_program::log::sol_log(move _397)</td></tr></table>>];
    bb150__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_398)<br/>StorageDead(_396)<br/>StorageLive(_399)<br/>_399 = _376<br/>_370 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _399)<br/>StorageDead(_399)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/></td></tr><tr><td align="left">_369 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _370)</td></tr></table>>];
    bb152__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>_400 = discriminant(_369)<br/></td></tr><tr><td align="left">switchInt(move _400)</td></tr></table>>];
    bb153__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_404)<br/>_404 = ((_369 as Continue).0: ())<br/>_368 = _404<br/>StorageDead(_404)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = &amp;(*_358)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>_412 = &amp;_313<br/>_411 = &amp;(*_412)<br/></td></tr><tr><td align="left">_410 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _411)</td></tr></table>>];
    bb154__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_401)<br/>_401 = ((_369 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_403)<br/>_403 = _401<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _403)</td></tr></table>>];
    bb155__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_401)<br/>StorageDead(_369)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">_409 = &amp;(*_410)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">_407 = SpotPosition::get_token_amount(move _408, move _409)</td></tr></table>>];
    bb157__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">_406 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _407)</td></tr></table>>];
    bb158__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>_413 = discriminant(_406)<br/></td></tr><tr><td align="left">switchInt(move _413)</td></tr></table>>];
    bb159__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_417)<br/>_417 = ((_406 as Continue).0: u128)<br/>_405 = _417<br/>StorageDead(_417)<br/>StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_406)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>_422 = _405<br/>_421 = Ne(move _422, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _421)</td></tr></table>>];
    bb160__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_414)<br/>_414 = ((_406 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_416)<br/>_416 = _414<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _416)</td></tr></table>>];
    bb161__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_414)<br/>StorageDead(_412)<br/>StorageDead(_410)<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>StorageLive(_423)<br/>_423 = ()<br/>_420 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _423)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>StorageLive(_424)<br/>_424 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>_1429 = const _<br/>_435 = &amp;(*_1429)<br/>_434 = &amp;(*_435)<br/>_433 = move _434 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_434)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>_443 = &amp;_424<br/>_442 = &amp;(*_443)<br/></td></tr><tr><td align="left">_441 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _442)</td></tr></table>>];
    bb164__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>_440 = [move _441]<br/>StorageDead(_441)<br/>_439 = &amp;_440<br/>_438 = &amp;(*_439)<br/>_437 = move _438 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_438)<br/></td></tr><tr><td align="left">_432 = Arguments::&lt;'_&gt;::new_v1(move _433, move _437)</td></tr></table>>];
    bb165__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">_431 = format(move _432)</td></tr></table>>];
    bb166__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_443)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/>StorageDead(_435)<br/>_430 = move _431<br/>StorageDead(_431)<br/>_429 = &amp;_430<br/>_428 = &amp;(*_429)<br/></td></tr><tr><td align="left">_427 = &lt;String as Deref&gt;::deref(move _428)</td></tr></table>>];
    bb167__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_426 = &amp;(*_427)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">_425 = solana_program::log::sol_log(move _426)</td></tr></table>>];
    bb168__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/></td></tr><tr><td align="left">drop(_430)</td></tr></table>>];
    bb169__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>StorageDead(_429)<br/>StorageDead(_427)<br/>StorageDead(_425)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_1428 = const _<br/>_454 = &amp;(*_1428)<br/>_453 = &amp;(*_454)<br/>_452 = move _453 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_453)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>_462 = &amp;_1<br/>_461 = &amp;(*_462)<br/></td></tr><tr><td align="left">_460 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _461)</td></tr></table>>];
    bb170__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>_459 = [move _460]<br/>StorageDead(_460)<br/>_458 = &amp;_459<br/>_457 = &amp;(*_458)<br/>_456 = move _457 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_457)<br/></td></tr><tr><td align="left">_451 = Arguments::&lt;'_&gt;::new_v1(move _452, move _456)</td></tr></table>>];
    bb171__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">_450 = format(move _451)</td></tr></table>>];
    bb172__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>StorageDead(_462)<br/>StorageDead(_459)<br/>StorageDead(_458)<br/>StorageDead(_454)<br/>_449 = move _450<br/>StorageDead(_450)<br/>_448 = &amp;_449<br/>_447 = &amp;(*_448)<br/></td></tr><tr><td align="left">_446 = &lt;String as Deref&gt;::deref(move _447)</td></tr></table>>];
    bb173__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">_445 = &amp;(*_446)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">_444 = solana_program::log::sol_log(move _445)</td></tr></table>>];
    bb174__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/></td></tr><tr><td align="left">drop(_449)</td></tr></table>>];
    bb175__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageLive(_463)<br/>_463 = _424<br/>_420 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _463)<br/>StorageDead(_463)<br/>StorageDead(_424)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/></td></tr><tr><td align="left">_419 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _420)</td></tr></table>>];
    bb177__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>_464 = discriminant(_419)<br/></td></tr><tr><td align="left">switchInt(move _464)</td></tr></table>>];
    bb178__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_468)<br/>_468 = ((_419 as Continue).0: ())<br/>_418 = _468<br/>StorageDead(_468)<br/>StorageDead(_419)<br/>StorageDead(_418)<br/>StorageLive(_469)<br/>_469 = ((*_324).0: i64)<br/>StorageLive(_470)<br/>_470 = _405<br/>StorageLive(_471)<br/>_471 = _469<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>_474 = &amp;_313<br/></td></tr><tr><td align="left">_473 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _474)</td></tr></table>>];
    bb179__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_465)<br/>_465 = ((_419 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_467)<br/>_467 = _465<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _467)</td></tr></table>>];
    bb180__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_465)<br/>StorageDead(_419)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>_472 = ((*_473).41: u32)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>_477 = &amp;_313<br/></td></tr><tr><td align="left">_476 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _477)</td></tr></table>>];
    bb182__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>_475 = ((*_476).32: u32)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_480 = &amp;_313<br/></td></tr><tr><td align="left">_479 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _480)</td></tr></table>>];
    bb183__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>_478 = ((*_479).62: u8)<br/>StorageLive(_481)<br/>_481 = ((*_324).2: i64)<br/>_312 = (move _470, move _471, move _472, move _475, move _478, move _481)<br/>StorageDead(_481)<br/>StorageDead(_478)<br/>StorageDead(_475)<br/>StorageDead(_472)<br/>StorageDead(_471)<br/>StorageDead(_470)<br/>StorageDead(_469)<br/>StorageDead(_405)<br/>StorageDead(_358)<br/>StorageDead(_325)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">drop(_313)</td></tr></table>>];
    bb184__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageLive(_306)<br/>_306 = (_312.0: u128)<br/>StorageLive(_307)<br/>_307 = (_312.1: i64)<br/>StorageLive(_308)<br/>_308 = (_312.2: u32)<br/>StorageLive(_309)<br/>_309 = (_312.3: u32)<br/>StorageLive(_310)<br/>_310 = (_312.4: u8)<br/>StorageLive(_311)<br/>_311 = (_312.5: i64)<br/>StorageDead(_479)<br/>StorageDead(_476)<br/>StorageDead(_473)<br/>StorageDead(_312)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>_492 = &amp;(*_11)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>_494 = &amp;_2<br/>_493 = &amp;(*_494)<br/></td></tr><tr><td align="left">_491 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _492, move _493)</td></tr></table>>];
    bb185__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_492)<br/></td></tr><tr><td align="left">_490 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _491)</td></tr></table>>];
    bb186__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_495 = discriminant(_490)<br/></td></tr><tr><td align="left">switchInt(move _495)</td></tr></table>>];
    bb187__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageLive(_499)<br/>_499 = move ((_490 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_489 = move _499<br/>StorageDead(_499)<br/>_1461 = discriminant(_490)<br/>StorageDead(_494)<br/>StorageDead(_490)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = &amp;mut (*_12)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = &amp;_489<br/></td></tr><tr><td align="left">_510 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _511)</td></tr></table>>];
    bb188__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_496)<br/>_496 = ((_490 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_498)<br/>_498 = _496<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _498)</td></tr></table>>];
    bb189__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_498)<br/>StorageDead(_496)<br/>_1459 = discriminant(_490)<br/>StorageDead(_494)<br/>StorageDead(_490)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">_509 = &amp;(*_510)<br/>StorageDead(_511)<br/></td></tr><tr><td align="left">_508 = SpotMarket::oracle_id(move _509)</td></tr></table>>];
    bb191__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>_507 = &amp;_508<br/>_506 = &amp;(*_507)<br/></td></tr><tr><td align="left">_504 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _505, move _506)</td></tr></table>>];
    bb192__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_503 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _504)</td></tr></table>>];
    bb193__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>_512 = discriminant(_503)<br/></td></tr><tr><td align="left">switchInt(move _512)</td></tr></table>>];
    bb194__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_516)<br/>_516 = ((_503 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_502 = _516<br/>StorageDead(_516)<br/>StorageLive(_500)<br/>_500 = (_502.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_501)<br/>_501 = (_502.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_510)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>_523 = &amp;mut _489<br/>_522 = &amp;mut (*_523)<br/></td></tr><tr><td align="left">_521 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _522)</td></tr></table>>];
    bb195__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_513)<br/>_513 = ((_503 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_515)<br/>_515 = _513<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _515)</td></tr></table>>];
    bb196__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_510)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">_520 = &amp;mut (*_521)<br/>StorageDead(_522)<br/>StorageLive(_524)<br/>_524 = &amp;(*_500)<br/>StorageLive(_525)<br/>_525 = &amp;(*_501)<br/>StorageLive(_526)<br/>_526 = _13<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>_528 = DriftAction::Liquidate<br/>_527 = Option::&lt;DriftAction&gt;::Some(move _528)<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">_519 = update_spot_market_and_check_validity(move _520, move _524, move _525, move _526, move _527)</td></tr></table>>];
    bb198__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>StorageDead(_526)<br/>StorageDead(_525)<br/>StorageDead(_524)<br/>StorageDead(_520)<br/></td></tr><tr><td align="left">_518 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _519)</td></tr></table>>];
    bb199__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>_529 = discriminant(_518)<br/></td></tr><tr><td align="left">switchInt(move _529)</td></tr></table>>];
    bb200__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_533)<br/>_533 = ((_518 as Continue).0: ())<br/>_517 = _533<br/>StorageDead(_533)<br/>StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_518)<br/>StorageDead(_517)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>_537 = &amp;(*_4)<br/>StorageLive(_538)<br/>_538 = _2<br/></td></tr><tr><td align="left">_536 = User::get_spot_position(move _537, move _538)</td></tr></table>>];
    bb201__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_530)<br/>_530 = ((_518 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_532)<br/>_532 = _530<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _532)</td></tr></table>>];
    bb202__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_530)<br/>StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_518)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>StorageDead(_537)<br/></td></tr><tr><td align="left">_535 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _536)</td></tr></table>>];
    bb204__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>_539 = discriminant(_535)<br/></td></tr><tr><td align="left">switchInt(move _539)</td></tr></table>>];
    bb205__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_543)<br/>_543 = ((_535 as Continue).0: &amp;state::user::SpotPosition)<br/>_534 = _543<br/>StorageDead(_543)<br/>StorageDead(_535)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>_548 = &amp;((*_534).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_549)<br/>_1427 = const _<br/>_549 = &amp;(*_1427)<br/></td></tr><tr><td align="left">_547 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _548, move _549)</td></tr></table>>];
    bb206__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_540)<br/>_540 = ((_535 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_542)<br/>_542 = _540<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _542)</td></tr></table>>];
    bb207__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_535)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left">switchInt(move _547)</td></tr></table>>];
    bb209__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_548)<br/>StorageLive(_551)<br/>_551 = ()<br/>_546 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _551)<br/>StorageDead(_551)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_548)<br/>StorageLive(_552)<br/>_552 = error::ErrorCode::WrongSpotBalanceType<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>_1426 = const _<br/>_563 = &amp;(*_1426)<br/>_562 = &amp;(*_563)<br/>_561 = move _562 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_562)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>_571 = &amp;_552<br/>_570 = &amp;(*_571)<br/></td></tr><tr><td align="left">_569 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _570)</td></tr></table>>];
    bb211__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>_568 = [move _569]<br/>StorageDead(_569)<br/>_567 = &amp;_568<br/>_566 = &amp;(*_567)<br/>_565 = move _566 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_566)<br/></td></tr><tr><td align="left">_560 = Arguments::&lt;'_&gt;::new_v1(move _561, move _565)</td></tr></table>>];
    bb212__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageDead(_561)<br/></td></tr><tr><td align="left">_559 = format(move _560)</td></tr></table>>];
    bb213__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_560)<br/>StorageDead(_571)<br/>StorageDead(_568)<br/>StorageDead(_567)<br/>StorageDead(_563)<br/>_558 = move _559<br/>StorageDead(_559)<br/>_557 = &amp;_558<br/>_556 = &amp;(*_557)<br/></td></tr><tr><td align="left">_555 = &lt;String as Deref&gt;::deref(move _556)</td></tr></table>>];
    bb214__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_554 = &amp;(*_555)<br/>StorageDead(_556)<br/></td></tr><tr><td align="left">_553 = solana_program::log::sol_log(move _554)</td></tr></table>>];
    bb215__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/></td></tr><tr><td align="left">drop(_558)</td></tr></table>>];
    bb216__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/>StorageDead(_557)<br/>StorageDead(_555)<br/>StorageDead(_553)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = const &quot;User did not have a borrow for the liability market index&quot;<br/>_573 = &amp;(*_574)<br/></td></tr><tr><td align="left">_572 = solana_program::log::sol_log(move _573)</td></tr></table>>];
    bb217__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_573)<br/>StorageDead(_574)<br/>StorageDead(_572)<br/>StorageLive(_575)<br/>_575 = _552<br/>_546 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _575)<br/>StorageDead(_575)<br/>StorageDead(_552)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_547)<br/></td></tr><tr><td align="left">_545 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _546)</td></tr></table>>];
    bb219__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>_576 = discriminant(_545)<br/></td></tr><tr><td align="left">switchInt(move _576)</td></tr></table>>];
    bb220__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_580)<br/>_580 = ((_545 as Continue).0: ())<br/>_544 = _580<br/>StorageDead(_580)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>_584 = &amp;(*_534)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>_588 = &amp;_489<br/>_587 = &amp;(*_588)<br/></td></tr><tr><td align="left">_586 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _587)</td></tr></table>>];
    bb221__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_577)<br/>_577 = ((_545 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_579)<br/>_579 = _577<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _579)</td></tr></table>>];
    bb222__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_579)<br/>StorageDead(_577)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">_585 = &amp;(*_586)<br/>StorageDead(_587)<br/></td></tr><tr><td align="left">_583 = SpotPosition::get_token_amount(move _584, move _585)</td></tr></table>>];
    bb224__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_584)<br/></td></tr><tr><td align="left">_582 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _583)</td></tr></table>>];
    bb225__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>_589 = discriminant(_582)<br/></td></tr><tr><td align="left">switchInt(move _589)</td></tr></table>>];
    bb226__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageLive(_593)<br/>_593 = ((_582 as Continue).0: u128)<br/>_581 = _593<br/>StorageDead(_593)<br/>StorageDead(_588)<br/>StorageDead(_586)<br/>StorageDead(_582)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>_598 = _581<br/>_597 = Ne(move _598, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _597)</td></tr></table>>];
    bb227__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageLive(_590)<br/>_590 = ((_582 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_592)<br/>_592 = _590<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _592)</td></tr></table>>];
    bb228__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>StorageDead(_590)<br/>StorageDead(_588)<br/>StorageDead(_586)<br/>StorageDead(_582)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>StorageLive(_599)<br/>_599 = ()<br/>_596 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _599)<br/>StorageDead(_599)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>StorageLive(_600)<br/>_600 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>_1425 = const _<br/>_611 = &amp;(*_1425)<br/>_610 = &amp;(*_611)<br/>_609 = move _610 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_610)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>_619 = &amp;_600<br/>_618 = &amp;(*_619)<br/></td></tr><tr><td align="left">_617 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _618)</td></tr></table>>];
    bb231__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_618)<br/>_616 = [move _617]<br/>StorageDead(_617)<br/>_615 = &amp;_616<br/>_614 = &amp;(*_615)<br/>_613 = move _614 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_614)<br/></td></tr><tr><td align="left">_608 = Arguments::&lt;'_&gt;::new_v1(move _609, move _613)</td></tr></table>>];
    bb232__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/>StorageDead(_609)<br/></td></tr><tr><td align="left">_607 = format(move _608)</td></tr></table>>];
    bb233__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/>StorageDead(_619)<br/>StorageDead(_616)<br/>StorageDead(_615)<br/>StorageDead(_611)<br/>_606 = move _607<br/>StorageDead(_607)<br/>_605 = &amp;_606<br/>_604 = &amp;(*_605)<br/></td></tr><tr><td align="left">_603 = &lt;String as Deref&gt;::deref(move _604)</td></tr></table>>];
    bb234__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">_602 = &amp;(*_603)<br/>StorageDead(_604)<br/></td></tr><tr><td align="left">_601 = solana_program::log::sol_log(move _602)</td></tr></table>>];
    bb235__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/></td></tr><tr><td align="left">drop(_606)</td></tr></table>>];
    bb236__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_606)<br/>StorageDead(_605)<br/>StorageDead(_603)<br/>StorageDead(_601)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>_1424 = const _<br/>_630 = &amp;(*_1424)<br/>_629 = &amp;(*_630)<br/>_628 = move _629 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_629)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>_638 = &amp;_2<br/>_637 = &amp;(*_638)<br/></td></tr><tr><td align="left">_636 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _637)</td></tr></table>>];
    bb237__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_637)<br/>_635 = [move _636]<br/>StorageDead(_636)<br/>_634 = &amp;_635<br/>_633 = &amp;(*_634)<br/>_632 = move _633 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_633)<br/></td></tr><tr><td align="left">_627 = Arguments::&lt;'_&gt;::new_v1(move _628, move _632)</td></tr></table>>];
    bb238__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_628)<br/></td></tr><tr><td align="left">_626 = format(move _627)</td></tr></table>>];
    bb239__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_627)<br/>StorageDead(_638)<br/>StorageDead(_635)<br/>StorageDead(_634)<br/>StorageDead(_630)<br/>_625 = move _626<br/>StorageDead(_626)<br/>_624 = &amp;_625<br/>_623 = &amp;(*_624)<br/></td></tr><tr><td align="left">_622 = &lt;String as Deref&gt;::deref(move _623)</td></tr></table>>];
    bb240__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">_621 = &amp;(*_622)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">_620 = solana_program::log::sol_log(move _621)</td></tr></table>>];
    bb241__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/></td></tr><tr><td align="left">drop(_625)</td></tr></table>>];
    bb242__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_625)<br/>StorageDead(_624)<br/>StorageDead(_622)<br/>StorageDead(_620)<br/>StorageLive(_639)<br/>_639 = _600<br/>_596 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _639)<br/>StorageDead(_639)<br/>StorageDead(_600)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/></td></tr><tr><td align="left">_595 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _596)</td></tr></table>>];
    bb244__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/>_640 = discriminant(_595)<br/></td></tr><tr><td align="left">switchInt(move _640)</td></tr></table>>];
    bb245__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_644)<br/>_644 = ((_595 as Continue).0: ())<br/>_594 = _644<br/>StorageDead(_644)<br/>StorageDead(_595)<br/>StorageDead(_594)<br/>StorageLive(_645)<br/>_645 = ((*_500).0: i64)<br/>StorageLive(_646)<br/>_646 = _645<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>_649 = &amp;_489<br/></td></tr><tr><td align="left">_648 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _649)</td></tr></table>>];
    bb246__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_641)<br/>_641 = ((_595 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_643)<br/>_643 = _641<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _643)</td></tr></table>>];
    bb247__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_643)<br/>StorageDead(_641)<br/>StorageDead(_595)<br/>StorageDead(_594)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_649)<br/>_647 = ((*_648).41: u32)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>_652 = &amp;_489<br/></td></tr><tr><td align="left">_651 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _652)</td></tr></table>>];
    bb249__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>_650 = ((*_651).34: u32)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_655 = &amp;_489<br/></td></tr><tr><td align="left">_654 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _655)</td></tr></table>>];
    bb250__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_655)<br/>_653 = ((*_654).37: u32)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>_658 = &amp;_489<br/></td></tr><tr><td align="left">_657 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _658)</td></tr></table>>];
    bb251__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>_656 = ((*_657).62: u8)<br/>StorageLive(_659)<br/>_659 = ((*_500).2: i64)<br/>_488 = (move _646, move _647, move _650, move _653, move _656, move _659)<br/>StorageDead(_659)<br/>StorageDead(_656)<br/>StorageDead(_653)<br/>StorageDead(_650)<br/>StorageDead(_647)<br/>StorageDead(_646)<br/>StorageDead(_645)<br/>StorageDead(_581)<br/>StorageDead(_534)<br/>StorageDead(_501)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">drop(_489)</td></tr></table>>];
    bb252__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageLive(_482)<br/>_482 = (_488.0: i64)<br/>StorageLive(_483)<br/>_483 = (_488.1: u32)<br/>StorageLive(_484)<br/>_484 = (_488.2: u32)<br/>StorageLive(_485)<br/>_485 = (_488.3: u32)<br/>StorageLive(_486)<br/>_486 = (_488.4: u8)<br/>StorageLive(_487)<br/>_487 = (_488.5: i64)<br/>StorageDead(_657)<br/>StorageDead(_654)<br/>StorageDead(_651)<br/>StorageDead(_648)<br/>StorageDead(_488)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>_662 = _310<br/>_661 = Eq(move _662, const _)<br/></td></tr><tr><td align="left">switchInt(move _661)</td></tr></table>>];
    bb253__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>_664 = _486<br/>_663 = Eq(move _664, const _)<br/></td></tr><tr><td align="left">switchInt(move _663)</td></tr></table>>];
    bb254__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>_669 = _311<br/>_668 = Eq(move _669, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _668)</td></tr></table>>];
    bb255__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>_671 = _487<br/>_670 = Eq(move _671, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _670)</td></tr></table>>];
    bb256__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/>StorageLive(_672)<br/>_672 = ()<br/>_667 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _672)<br/>StorageDead(_672)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb257__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageLive(_673)<br/>_673 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>_1423 = const _<br/>_684 = &amp;(*_1423)<br/>_683 = &amp;(*_684)<br/>_682 = move _683 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_683)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>_692 = &amp;_673<br/>_691 = &amp;(*_692)<br/></td></tr><tr><td align="left">_690 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _691)</td></tr></table>>];
    bb260__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_691)<br/>_689 = [move _690]<br/>StorageDead(_690)<br/>_688 = &amp;_689<br/>_687 = &amp;(*_688)<br/>_686 = move _687 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_687)<br/></td></tr><tr><td align="left">_681 = Arguments::&lt;'_&gt;::new_v1(move _682, move _686)</td></tr></table>>];
    bb261__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageDead(_682)<br/></td></tr><tr><td align="left">_680 = format(move _681)</td></tr></table>>];
    bb262__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_681)<br/>StorageDead(_692)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageDead(_684)<br/>_679 = move _680<br/>StorageDead(_680)<br/>_678 = &amp;_679<br/>_677 = &amp;(*_678)<br/></td></tr><tr><td align="left">_676 = &lt;String as Deref&gt;::deref(move _677)</td></tr></table>>];
    bb263__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">_675 = &amp;(*_676)<br/>StorageDead(_677)<br/></td></tr><tr><td align="left">_674 = solana_program::log::sol_log(move _675)</td></tr></table>>];
    bb264__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/></td></tr><tr><td align="left">drop(_679)</td></tr></table>>];
    bb265__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_679)<br/>StorageDead(_678)<br/>StorageDead(_676)<br/>StorageDead(_674)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>_1422 = const _<br/>_703 = &amp;(*_1422)<br/>_702 = &amp;(*_703)<br/>_701 = move _702 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_702)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>StorageLive(_709)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>_711 = &amp;_311<br/>_710 = &amp;(*_711)<br/></td></tr><tr><td align="left">_709 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _710)</td></tr></table>>];
    bb266__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_710)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>_714 = &amp;_487<br/>_713 = &amp;(*_714)<br/></td></tr><tr><td align="left">_712 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _713)</td></tr></table>>];
    bb267__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_713)<br/>_708 = [move _709, move _712]<br/>StorageDead(_712)<br/>StorageDead(_709)<br/>_707 = &amp;_708<br/>_706 = &amp;(*_707)<br/>_705 = move _706 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_706)<br/></td></tr><tr><td align="left">_700 = Arguments::&lt;'_&gt;::new_v1(move _701, move _705)</td></tr></table>>];
    bb268__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_701)<br/></td></tr><tr><td align="left">_699 = format(move _700)</td></tr></table>>];
    bb269__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_700)<br/>StorageDead(_714)<br/>StorageDead(_711)<br/>StorageDead(_708)<br/>StorageDead(_707)<br/>StorageDead(_703)<br/>_698 = move _699<br/>StorageDead(_699)<br/>_697 = &amp;_698<br/>_696 = &amp;(*_697)<br/></td></tr><tr><td align="left">_695 = &lt;String as Deref&gt;::deref(move _696)</td></tr></table>>];
    bb270__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">_694 = &amp;(*_695)<br/>StorageDead(_696)<br/></td></tr><tr><td align="left">_693 = solana_program::log::sol_log(move _694)</td></tr></table>>];
    bb271__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/></td></tr><tr><td align="left">drop(_698)</td></tr></table>>];
    bb272__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_698)<br/>StorageDead(_697)<br/>StorageDead(_695)<br/>StorageDead(_693)<br/>StorageLive(_715)<br/>_715 = _673<br/>_667 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _715)<br/>StorageDead(_715)<br/>StorageDead(_673)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_670)<br/>StorageDead(_668)<br/></td></tr><tr><td align="left">_666 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _667)</td></tr></table>>];
    bb274__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>_716 = discriminant(_666)<br/></td></tr><tr><td align="left">switchInt(move _716)</td></tr></table>>];
    bb275__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageLive(_720)<br/>_720 = ((_666 as Continue).0: ())<br/>_665 = _720<br/>StorageDead(_720)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/>_660 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageLive(_717)<br/>_717 = ((_666 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_719)<br/>_719 = _717<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _719)</td></tr></table>>];
    bb277__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_719)<br/>StorageDead(_717)<br/>StorageDead(_666)<br/>StorageDead(_665)<br/>StorageDead(_663)<br/>StorageDead(_661)<br/>StorageDead(_660)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">_660 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/>StorageDead(_661)<br/>StorageDead(_660)<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>_726 = _16<br/></td></tr><tr><td align="left">_725 = MarginContext::liquidation(move _726)</td></tr></table>>];
    bb282__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>_728 = _2<br/></td></tr><tr><td align="left">_727 = MarketIdentifier::spot(move _728)</td></tr></table>>];
    bb283__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_728)<br/></td></tr><tr><td align="left">_724 = MarginContext::track_market_margin_requirement(move _725, move _727)</td></tr></table>>];
    bb284__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_727)<br/>StorageDead(_725)<br/></td></tr><tr><td align="left">_723 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _724)</td></tr></table>>];
    bb285__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_724)<br/>_729 = discriminant(_723)<br/></td></tr><tr><td align="left">switchInt(move _729)</td></tr></table>>];
    bb286__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageLive(_733)<br/>_733 = ((_723 as Continue).0: state::margin_calculation::MarginContext)<br/>_722 = _733<br/>StorageDead(_733)<br/>StorageLive(_734)<br/>_734 = &amp;(*_4)<br/>StorageLive(_735)<br/>_735 = _13<br/></td></tr><tr><td align="left">_721 = MarginContext::fuel_numerator(move _722, move _734, move _735)</td></tr></table>>];
    bb287__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageLive(_730)<br/>_730 = ((_723 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_732)<br/>_732 = _730<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _732)</td></tr></table>>];
    bb288__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>StorageDead(_730)<br/>StorageDead(_722)<br/>StorageDead(_723)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb289__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_735)<br/>StorageDead(_734)<br/>StorageDead(_722)<br/>StorageDead(_723)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>_739 = &amp;mut (*_4)<br/>StorageLive(_740)<br/>_740 = &amp;(*_10)<br/>StorageLive(_741)<br/>_741 = &amp;(*_11)<br/>StorageLive(_742)<br/>_742 = &amp;mut (*_12)<br/>StorageLive(_743)<br/>_743 = _721<br/>StorageLive(_744)<br/>_744 = &amp;mut (*_6)<br/>StorageLive(_745)<br/>_745 = _13<br/></td></tr><tr><td align="left">_738 = User::calculate_margin_and_increment_fuel_bonus(move _739, move _740, move _741, move _742, move _743, move _744, move _745)</td></tr></table>>];
    bb290__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_745)<br/>StorageDead(_744)<br/>StorageDead(_743)<br/>StorageDead(_742)<br/>StorageDead(_741)<br/>StorageDead(_740)<br/>StorageDead(_739)<br/></td></tr><tr><td align="left">_737 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _738)</td></tr></table>>];
    bb291__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>_746 = discriminant(_737)<br/></td></tr><tr><td align="left">switchInt(move _746)</td></tr></table>>];
    bb292__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageLive(_750)<br/>_750 = ((_737 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_736 = _750<br/>StorageDead(_750)<br/>StorageDead(_737)<br/>StorageLive(_751)<br/>StorageLive(_752)<br/>StorageLive(_753)<br/>_753 = &amp;(*_4)<br/></td></tr><tr><td align="left">_752 = User::is_being_liquidated(move _753)</td></tr></table>>];
    bb293__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageLive(_747)<br/>_747 = ((_737 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_749)<br/>_749 = _747<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _749)</td></tr></table>>];
    bb294__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_749)<br/>StorageDead(_747)<br/>StorageDead(_737)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left">switchInt(move _752)</td></tr></table>>];
    bb296__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_753)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_753)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>_755 = &amp;_736<br/></td></tr><tr><td align="left">_754 = MarginCalculation::meets_margin_requirement(move _755)</td></tr></table>>];
    bb298__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left">switchInt(move _754)</td></tr></table>>];
    bb299__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>StorageLive(_762)<br/>StorageLive(_763)<br/>StorageLive(_764)<br/>StorageLive(_765)<br/>StorageLive(_766)<br/>StorageLive(_767)<br/>_1421 = const _<br/>_767 = &amp;(*_1421)<br/>_766 = &amp;(*_767)<br/>_765 = move _766 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_766)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>_775 = &amp;_736<br/>_774 = &amp;(*_775)<br/></td></tr><tr><td align="left">_773 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;MarginCalculation&gt;(move _774)</td></tr></table>>];
    bb300__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_774)<br/>_772 = [move _773]<br/>StorageDead(_773)<br/>_771 = &amp;_772<br/>_770 = &amp;(*_771)<br/>_769 = move _770 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_770)<br/></td></tr><tr><td align="left">_764 = Arguments::&lt;'_&gt;::new_v1(move _765, move _769)</td></tr></table>>];
    bb301__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/>StorageDead(_765)<br/></td></tr><tr><td align="left">_763 = format(move _764)</td></tr></table>>];
    bb302__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_764)<br/>StorageDead(_775)<br/>StorageDead(_772)<br/>StorageDead(_771)<br/>StorageDead(_767)<br/>_762 = move _763<br/>StorageDead(_763)<br/>_761 = &amp;_762<br/>_760 = &amp;(*_761)<br/></td></tr><tr><td align="left">_759 = &lt;String as Deref&gt;::deref(move _760)</td></tr></table>>];
    bb303__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">_758 = &amp;(*_759)<br/>StorageDead(_760)<br/></td></tr><tr><td align="left">_757 = solana_program::log::sol_log(move _758)</td></tr></table>>];
    bb304__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_758)<br/></td></tr><tr><td align="left">drop(_762)</td></tr></table>>];
    bb305__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>StorageDead(_761)<br/>StorageDead(_759)<br/>StorageDead(_757)<br/>StorageLive(_776)<br/>_776 = error::ErrorCode::SufficientCollateral<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _776)<br/>StorageDead(_776)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb306__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageLive(_777)<br/>StorageLive(_778)<br/>_778 = &amp;(*_4)<br/></td></tr><tr><td align="left">_777 = User::is_being_liquidated(move _778)</td></tr></table>>];
    bb308__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left">switchInt(move _777)</td></tr></table>>];
    bb309__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_778)<br/>StorageLive(_779)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>_782 = &amp;_736<br/></td></tr><tr><td align="left">_781 = MarginCalculation::can_exit_liquidation(move _782)</td></tr></table>>];
    bb310__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_782)<br/></td></tr><tr><td align="left">_780 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _781)</td></tr></table>>];
    bb311__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_781)<br/>_783 = discriminant(_780)<br/></td></tr><tr><td align="left">switchInt(move _783)</td></tr></table>>];
    bb312__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageLive(_787)<br/>_787 = ((_780 as Continue).0: bool)<br/>_779 = _787<br/>StorageDead(_787)<br/></td></tr><tr><td align="left">switchInt(move _779)</td></tr></table>>];
    bb313__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageLive(_784)<br/>_784 = ((_780 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_786)<br/>_786 = _784<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _786)</td></tr></table>>];
    bb314__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_786)<br/>StorageDead(_784)<br/>StorageDead(_780)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>_1410 = const _<br/>_799 = &amp;(*_1410)<br/>_798 = &amp;(*_799)<br/>_797 = move _798 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_798)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>_807 = &amp;_736<br/>_806 = &amp;(*_807)<br/></td></tr><tr><td align="left">_805 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;MarginCalculation&gt;(move _806)</td></tr></table>>];
    bb316__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/>_804 = [move _805]<br/>StorageDead(_805)<br/>_803 = &amp;_804<br/>_802 = &amp;(*_803)<br/>_801 = move _802 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_802)<br/></td></tr><tr><td align="left">_796 = Arguments::&lt;'_&gt;::new_v1(move _797, move _801)</td></tr></table>>];
    bb318__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_797)<br/></td></tr><tr><td align="left">_795 = format(move _796)</td></tr></table>>];
    bb319__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_796)<br/>StorageDead(_807)<br/>StorageDead(_804)<br/>StorageDead(_803)<br/>StorageDead(_799)<br/>_794 = move _795<br/>StorageDead(_795)<br/>_793 = &amp;_794<br/>_792 = &amp;(*_793)<br/></td></tr><tr><td align="left">_791 = &lt;String as Deref&gt;::deref(move _792)</td></tr></table>>];
    bb320__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">_790 = &amp;(*_791)<br/>StorageDead(_792)<br/></td></tr><tr><td align="left">_789 = solana_program::log::sol_log(move _790)</td></tr></table>>];
    bb321__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/></td></tr><tr><td align="left">drop(_794)</td></tr></table>>];
    bb322__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>StorageDead(_793)<br/>StorageDead(_791)<br/>StorageDead(_789)<br/>StorageLive(_808)<br/>_808 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _808)<br/>StorageDead(_808)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb323__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_778)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb324__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">_751 = const ()<br/>StorageDead(_779)<br/>StorageDead(_777)<br/>StorageDead(_754)<br/>StorageDead(_752)<br/>StorageDead(_751)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>_812 = &amp;mut (*_4)<br/>StorageLive(_813)<br/>_813 = _14<br/></td></tr><tr><td align="left">_811 = User::enter_liquidation(move _812, move _813)</td></tr></table>>];
    bb325__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_813)<br/>StorageDead(_812)<br/></td></tr><tr><td align="left">_810 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _811)</td></tr></table>>];
    bb326__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>_814 = discriminant(_810)<br/></td></tr><tr><td align="left">switchInt(move _814)</td></tr></table>>];
    bb327__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageLive(_818)<br/>_818 = ((_810 as Continue).0: u16)<br/>_809 = _818<br/>StorageDead(_818)<br/>StorageDead(_810)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>_822 = &amp;mut (*_4)<br/>StorageLive(_823)<br/>_823 = &amp;(*_5)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>_825 = &amp;(*_8)<br/>_824 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _825)<br/>StorageDead(_825)<br/>StorageLive(_826)<br/>_826 = &amp;(*_10)<br/>StorageLive(_827)<br/>_827 = &amp;(*_11)<br/>StorageLive(_828)<br/>_828 = &amp;mut (*_12)<br/>StorageLive(_829)<br/>_829 = _13<br/>StorageLive(_830)<br/>_830 = _14<br/>StorageLive(_831)<br/>_831 = OrderActionExplanation::Liquidation<br/>StorageLive(_832)<br/>_832 = Option::&lt;state::user::MarketType&gt;::None<br/>StorageLive(_833)<br/>_833 = Option::&lt;u16&gt;::None<br/>StorageLive(_834)<br/>_834 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">_821 = controller::orders::cancel_orders(move _822, move _823, move _824, move _826, move _827, move _828, move _829, move _830, move _831, move _832, move _833, move _834)</td></tr></table>>];
    bb328__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_815)<br/>_815 = ((_810 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_817)<br/>_817 = _815<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _817)</td></tr></table>>];
    bb329__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/>StorageDead(_815)<br/>StorageDead(_810)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb330__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_834)<br/>StorageDead(_833)<br/>StorageDead(_832)<br/>StorageDead(_831)<br/>StorageDead(_830)<br/>StorageDead(_829)<br/>StorageDead(_828)<br/>StorageDead(_827)<br/>StorageDead(_826)<br/>StorageDead(_824)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/></td></tr><tr><td align="left">_820 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _821)</td></tr></table>>];
    bb331__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_821)<br/>_835 = discriminant(_820)<br/></td></tr><tr><td align="left">switchInt(move _835)</td></tr></table>>];
    bb332__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageLive(_839)<br/>_839 = move ((_820 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_1442 = const true<br/>_819 = move _839<br/>StorageDead(_839)<br/>_1465 = discriminant(_820)<br/>StorageDead(_820)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>_842 = &amp;_819<br/></td></tr><tr><td align="left">_841 = Vec::&lt;u32&gt;::is_empty(move _842)</td></tr></table>>];
    bb333__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageLive(_836)<br/>_836 = ((_820 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_838)<br/>_838 = _836<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _838)</td></tr></table>>];
    bb334__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_838)<br/>StorageDead(_836)<br/>_1463 = discriminant(_820)<br/>StorageDead(_820)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb335__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left">switchInt(move _841)</td></tr></table>>];
    bb336__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>_840 = _736<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb337__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>_846 = &amp;(*_4)<br/>StorageLive(_847)<br/>_847 = &amp;(*_10)<br/>StorageLive(_848)<br/>_848 = &amp;(*_11)<br/>StorageLive(_849)<br/>_849 = &amp;mut (*_12)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>_855 = _16<br/></td></tr><tr><td align="left">_854 = MarginContext::liquidation(move _855)</td></tr></table>>];
    bb338__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_855)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>_857 = _2<br/></td></tr><tr><td align="left">_856 = MarketIdentifier::spot(move _857)</td></tr></table>>];
    bb339__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/></td></tr><tr><td align="left">_853 = MarginContext::track_market_margin_requirement(move _854, move _856)</td></tr></table>>];
    bb340__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>StorageDead(_854)<br/></td></tr><tr><td align="left">_852 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _853)</td></tr></table>>];
    bb341__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/>_858 = discriminant(_852)<br/></td></tr><tr><td align="left">switchInt(move _858)</td></tr></table>>];
    bb342__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageLive(_862)<br/>_862 = ((_852 as Continue).0: state::margin_calculation::MarginContext)<br/>_851 = _862<br/>StorageDead(_862)<br/>StorageLive(_863)<br/>_863 = &amp;(*_4)<br/>StorageLive(_864)<br/>_864 = _13<br/></td></tr><tr><td align="left">_850 = MarginContext::fuel_numerator(move _851, move _863, move _864)</td></tr></table>>];
    bb343__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageLive(_859)<br/>_859 = ((_852 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_861)<br/>_861 = _859<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _861)</td></tr></table>>];
    bb344__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_861)<br/>StorageDead(_859)<br/>StorageDead(_851)<br/>StorageDead(_850)<br/>StorageDead(_849)<br/>StorageDead(_848)<br/>StorageDead(_847)<br/>StorageDead(_846)<br/>StorageDead(_845)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb345__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/>StorageDead(_863)<br/>StorageDead(_851)<br/></td></tr><tr><td align="left">_845 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _846, move _847, move _848, move _849, move _850)</td></tr></table>>];
    bb346__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_850)<br/>StorageDead(_849)<br/>StorageDead(_848)<br/>StorageDead(_847)<br/>StorageDead(_846)<br/></td></tr><tr><td align="left">_844 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _845)</td></tr></table>>];
    bb347__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_845)<br/>_865 = discriminant(_844)<br/></td></tr><tr><td align="left">switchInt(move _865)</td></tr></table>>];
    bb348__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageLive(_869)<br/>_869 = ((_844 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_843 = _869<br/>StorageDead(_869)<br/>StorageDead(_852)<br/>StorageDead(_844)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>_873 = &amp;_736<br/></td></tr><tr><td align="left">_872 = MarginCalculation::margin_shortage(move _873)</td></tr></table>>];
    bb349__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageLive(_866)<br/>_866 = ((_844 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_868)<br/>_868 = _866<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _868)</td></tr></table>>];
    bb350__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/>StorageDead(_866)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb351__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/></td></tr><tr><td align="left">_871 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _872)</td></tr></table>>];
    bb352__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_872)<br/>_874 = discriminant(_871)<br/></td></tr><tr><td align="left">switchInt(move _874)</td></tr></table>>];
    bb353__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageLive(_878)<br/>_878 = ((_871 as Continue).0: u128)<br/>_870 = _878<br/>StorageDead(_878)<br/>StorageDead(_871)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>_882 = &amp;_843<br/></td></tr><tr><td align="left">_881 = MarginCalculation::margin_shortage(move _882)</td></tr></table>>];
    bb354__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageLive(_875)<br/>_875 = ((_871 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_877)<br/>_877 = _875<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _877)</td></tr></table>>];
    bb355__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/>StorageDead(_875)<br/>StorageDead(_871)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb356__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_882)<br/></td></tr><tr><td align="left">_880 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _881)</td></tr></table>>];
    bb357__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_881)<br/>_883 = discriminant(_880)<br/></td></tr><tr><td align="left">switchInt(move _883)</td></tr></table>>];
    bb358__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_887)<br/>_887 = ((_880 as Continue).0: u128)<br/>_879 = _887<br/>StorageDead(_887)<br/>StorageDead(_880)<br/>StorageLive(_888)<br/>StorageLive(_889)<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>StorageLive(_892)<br/>_892 = _870<br/>StorageLive(_893)<br/>_893 = _879<br/></td></tr><tr><td align="left">_891 = core::num::&lt;impl u128&gt;::saturating_sub(move _892, move _893)</td></tr></table>>];
    bb359__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageLive(_884)<br/>_884 = ((_880 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_886)<br/>_886 = _884<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _886)</td></tr></table>>];
    bb360__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/>StorageDead(_884)<br/>StorageDead(_880)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb361__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_893)<br/>StorageDead(_892)<br/></td></tr><tr><td align="left">_890 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _891)</td></tr></table>>];
    bb362__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_891)<br/></td></tr><tr><td align="left">_889 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _890)</td></tr></table>>];
    bb363__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_890)<br/>_894 = discriminant(_889)<br/></td></tr><tr><td align="left">switchInt(move _894)</td></tr></table>>];
    bb364__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageLive(_898)<br/>_898 = ((_889 as Continue).0: u64)<br/>_888 = _898<br/>StorageDead(_898)<br/>StorageDead(_889)<br/>StorageLive(_899)<br/>StorageLive(_900)<br/>StorageLive(_901)<br/>StorageLive(_902)<br/>_902 = &amp;mut (*_4)<br/>StorageLive(_903)<br/>_903 = _888<br/></td></tr><tr><td align="left">_901 = User::increment_margin_freed(move _902, move _903)</td></tr></table>>];
    bb365__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_895)<br/>_895 = ((_889 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_897)<br/>_897 = _895<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _897)</td></tr></table>>];
    bb366__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/>StorageDead(_895)<br/>StorageDead(_889)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb367__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_903)<br/>StorageDead(_902)<br/></td></tr><tr><td align="left">_900 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _901)</td></tr></table>>];
    bb368__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_901)<br/>_904 = discriminant(_900)<br/></td></tr><tr><td align="left">switchInt(move _904)</td></tr></table>>];
    bb369__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageLive(_908)<br/>_908 = ((_900 as Continue).0: ())<br/>_899 = _908<br/>StorageDead(_908)<br/>StorageDead(_900)<br/>StorageDead(_899)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>StorageLive(_921)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>_923 = _13<br/>StorageLive(_924)<br/>_924 = _809<br/>StorageLive(_925)<br/>_925 = LiquidationType::LiquidateSpot<br/>StorageLive(_926)<br/>_926 = (*_5)<br/>StorageLive(_927)<br/>_927 = (*_8)<br/>StorageLive(_928)<br/>_928 = (_736.3: u128)<br/>StorageLive(_929)<br/>_929 = (_736.1: i128)<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>_931 = &amp;(*_4)<br/></td></tr><tr><td align="left">_930 = User::is_bankrupt(move _931)</td></tr></table>>];
    bb370__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageLive(_905)<br/>_905 = ((_900 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_907)<br/>_907 = _905<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _907)</td></tr></table>>];
    bb371__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_907)<br/>StorageDead(_905)<br/>StorageDead(_900)<br/>StorageDead(_899)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb372__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_931)<br/>StorageLive(_932)<br/>_1442 = const false<br/>_932 = move _819<br/>StorageLive(_933)<br/>_933 = _888<br/>StorageLive(_934)<br/>StorageLive(_935)<br/>_935 = _1<br/>StorageLive(_936)<br/>_936 = _307<br/>StorageLive(_937)<br/>_937 = _2<br/>StorageLive(_938)<br/>_938 = _482<br/>_934 = LiquidateSpotRecord { asset_market_index: move _935, asset_price: move _936, asset_transfer: const 0_u128, liability_market_index: move _937, liability_price: move _938, liability_transfer: const 0_u128, if_fee: const 0_u64 }<br/>StorageDead(_938)<br/>StorageDead(_937)<br/>StorageDead(_936)<br/>StorageDead(_935)<br/>StorageLive(_939)<br/></td></tr><tr><td align="left">_939 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb373__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">_922 = LiquidationRecord { ts: move _923, liquidation_type: move _925, user: move _926, liquidator: move _927, margin_requirement: move _928, total_collateral: move _929, margin_freed: move _933, liquidation_id: move _924, bankrupt: move _930, canceled_order_ids: move _932, liquidate_perp: move (_939.10: state::events::LiquidatePerpRecord), liquidate_spot: move _934, liquidate_borrow_for_perp_pnl: move (_939.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_939.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_939.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_939.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_934)<br/>StorageDead(_933)<br/>StorageDead(_932)<br/>StorageDead(_930)<br/>StorageDead(_929)<br/>StorageDead(_928)<br/>StorageDead(_927)<br/>StorageDead(_926)<br/>StorageDead(_925)<br/>StorageDead(_924)<br/>StorageDead(_923)<br/>_921 = &amp;_922<br/>_920 = &amp;(*_921)<br/></td></tr><tr><td align="left">_919 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _920)</td></tr></table>>];
    bb374__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_920)<br/>_918 = &amp;_919<br/>_917 = &amp;(*_918)<br/></td></tr><tr><td align="left">_916 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _917)</td></tr></table>>];
    bb375__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">_915 = &amp;(*_916)<br/>StorageDead(_917)<br/>_914 = [move _915]<br/>StorageDead(_915)<br/>_913 = &amp;_914<br/>_912 = &amp;(*_913)<br/>_911 = move _912 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_912)<br/></td></tr><tr><td align="left">_910 = solana_program::log::sol_log_data(move _911)</td></tr></table>>];
    bb376__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/></td></tr><tr><td align="left">drop(_919)</td></tr></table>>];
    bb377__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left">drop(_922)</td></tr></table>>];
    bb378__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb379__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_939)<br/>StorageDead(_922)<br/>StorageDead(_921)<br/>StorageDead(_919)<br/>StorageDead(_918)<br/>StorageDead(_916)<br/>StorageDead(_914)<br/>StorageDead(_913)<br/>StorageDead(_910)<br/>_909 = const ()<br/>StorageDead(_909)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>StorageLive(_942)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>_944 = &amp;_843<br/></td></tr><tr><td align="left">_943 = MarginCalculation::can_exit_liquidation(move _944)</td></tr></table>>];
    bb380__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_944)<br/></td></tr><tr><td align="left">_942 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _943)</td></tr></table>>];
    bb381__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_943)<br/>_945 = discriminant(_942)<br/></td></tr><tr><td align="left">switchInt(move _945)</td></tr></table>>];
    bb382__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_949)<br/>_949 = ((_942 as Continue).0: bool)<br/>_941 = _949<br/>StorageDead(_949)<br/></td></tr><tr><td align="left">switchInt(move _941)</td></tr></table>>];
    bb383__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_946)<br/>_946 = ((_942 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_948)<br/>_948 = _946<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _948)</td></tr></table>>];
    bb384__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_948)<br/>StorageDead(_946)<br/>StorageDead(_942)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_942)<br/>StorageLive(_951)<br/>_951 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _951)<br/>StorageDead(_951)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb386__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_942)<br/>_940 = const ()<br/>StorageDead(_941)<br/>StorageDead(_940)<br/>_840 = _843<br/>StorageDead(_888)<br/>StorageDead(_879)<br/>StorageDead(_870)<br/>StorageDead(_843)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>StorageLive(_952)<br/>StorageLive(_953)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>_955 = &amp;_840<br/></td></tr><tr><td align="left">_954 = MarginCalculation::margin_shortage(move _955)</td></tr></table>>];
    bb388__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_955)<br/></td></tr><tr><td align="left">_953 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _954)</td></tr></table>>];
    bb389__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_954)<br/>_956 = discriminant(_953)<br/></td></tr><tr><td align="left">switchInt(move _956)</td></tr></table>>];
    bb390__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageLive(_960)<br/>_960 = ((_953 as Continue).0: u128)<br/>_952 = _960<br/>StorageDead(_960)<br/>StorageDead(_953)<br/>StorageLive(_961)<br/>StorageLive(_962)<br/>StorageLive(_963)<br/>StorageLive(_964)<br/>_964 = _484<br/>StorageLive(_965)<br/>_965 = _16<br/></td></tr><tr><td align="left">_963 = &lt;u32 as SafeMath&gt;::safe_add(move _964, move _965)</td></tr></table>>];
    bb391__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageLive(_957)<br/>_957 = ((_953 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_959)<br/>_959 = _957<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _959)</td></tr></table>>];
    bb392__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_959)<br/>StorageDead(_957)<br/>StorageDead(_953)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb393__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_965)<br/>StorageDead(_964)<br/></td></tr><tr><td align="left">_962 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _963)</td></tr></table>>];
    bb394__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_963)<br/>_966 = discriminant(_962)<br/></td></tr><tr><td align="left">switchInt(move _966)</td></tr></table>>];
    bb395__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageLive(_970)<br/>_970 = ((_962 as Continue).0: u32)<br/>_961 = _970<br/>StorageDead(_970)<br/>StorageDead(_962)<br/>StorageLive(_971)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>StorageLive(_974)<br/>_974 = _952<br/>StorageLive(_975)<br/>_975 = _309<br/>StorageLive(_976)<br/>_976 = _961<br/>StorageLive(_977)<br/>_977 = _483<br/>StorageLive(_978)<br/>_978 = _482<br/>StorageLive(_979)<br/>_979 = _485<br/></td></tr><tr><td align="left">_973 = calculate_liability_transfer_to_cover_margin_shortage(move _974, move _975, const _, move _976, const _, move _977, move _978, move _979)</td></tr></table>>];
    bb396__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageLive(_967)<br/>_967 = ((_962 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_969)<br/>_969 = _967<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _969)</td></tr></table>>];
    bb397__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_969)<br/>StorageDead(_967)<br/>StorageDead(_962)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb398__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_979)<br/>StorageDead(_978)<br/>StorageDead(_977)<br/>StorageDead(_976)<br/>StorageDead(_975)<br/>StorageDead(_974)<br/></td></tr><tr><td align="left">_972 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _973)</td></tr></table>>];
    bb399__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_973)<br/>_980 = discriminant(_972)<br/></td></tr><tr><td align="left">switchInt(move _980)</td></tr></table>>];
    bb400__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageLive(_984)<br/>_984 = ((_972 as Continue).0: u128)<br/>_971 = _984<br/>StorageDead(_984)<br/>StorageDead(_972)<br/>StorageLive(_985)<br/>StorageLive(_986)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>_988 = &amp;(*_4)<br/>StorageLive(_989)<br/>_989 = _952<br/>StorageLive(_990)<br/>_990 = _14<br/>StorageLive(_991)<br/>_991 = _17<br/>StorageLive(_992)<br/>_992 = _19<br/></td></tr><tr><td align="left">_987 = calculate_max_pct_to_liquidate(move _988, move _989, move _990, move _991, move _992)</td></tr></table>>];
    bb401__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageLive(_981)<br/>_981 = ((_972 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_983)<br/>_983 = _981<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _983)</td></tr></table>>];
    bb402__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_983)<br/>StorageDead(_981)<br/>StorageDead(_972)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_991)<br/>StorageDead(_990)<br/>StorageDead(_989)<br/>StorageDead(_988)<br/></td></tr><tr><td align="left">_986 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _987)</td></tr></table>>];
    bb404__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/>_993 = discriminant(_986)<br/></td></tr><tr><td align="left">switchInt(move _993)</td></tr></table>>];
    bb405__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageLive(_997)<br/>_997 = ((_986 as Continue).0: u128)<br/>_985 = _997<br/>StorageDead(_997)<br/>StorageDead(_986)<br/>StorageLive(_998)<br/>StorageLive(_999)<br/>StorageLive(_1000)<br/>StorageLive(_1001)<br/>StorageLive(_1002)<br/>_1002 = _971<br/>StorageLive(_1003)<br/>_1003 = _985<br/></td></tr><tr><td align="left">_1001 = core::num::&lt;impl u128&gt;::saturating_mul(move _1002, move _1003)</td></tr></table>>];
    bb406__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageLive(_994)<br/>_994 = ((_986 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_996)<br/>_996 = _994<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _996)</td></tr></table>>];
    bb407__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_996)<br/>StorageDead(_994)<br/>StorageDead(_986)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb408__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_1003)<br/>StorageDead(_1002)<br/></td></tr><tr><td align="left">_1000 = &lt;u128 as SafeMath&gt;::safe_div(move _1001, const _)</td></tr></table>>];
    bb409__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_1001)<br/></td></tr><tr><td align="left">_999 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1000)</td></tr></table>>];
    bb410__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_1000)<br/>_1004 = discriminant(_999)<br/></td></tr><tr><td align="left">switchInt(move _1004)</td></tr></table>>];
    bb411__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageLive(_1008)<br/>_1008 = ((_999 as Continue).0: u128)<br/>_998 = _1008<br/>StorageDead(_1008)<br/>StorageDead(_999)<br/>StorageLive(_1009)<br/>StorageLive(_1010)<br/>StorageLive(_1011)<br/>_1011 = _998<br/>_1010 = Eq(move _1011, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1010)</td></tr></table>>];
    bb412__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageLive(_1005)<br/>_1005 = ((_999 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1007)<br/>_1007 = _1005<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1007)</td></tr></table>>];
    bb413__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_1007)<br/>StorageDead(_1005)<br/>StorageDead(_999)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb414__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_1011)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>_1015 = const &quot;max_liability_allowed_to_be_transferred == 0&quot;<br/>_1014 = &amp;(*_1015)<br/></td></tr><tr><td align="left">_1013 = solana_program::log::sol_log(move _1014)</td></tr></table>>];
    bb415__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_1011)<br/>_1009 = const ()<br/>StorageDead(_1010)<br/>StorageDead(_1009)<br/>StorageLive(_1017)<br/>StorageLive(_1018)<br/>StorageLive(_1019)<br/>StorageLive(_1020)<br/>_1020 = _306<br/>StorageLive(_1021)<br/>_1021 = _308<br/>StorageLive(_1022)<br/>_1022 = _307<br/>StorageLive(_1023)<br/>_1023 = _971<br/>StorageLive(_1024)<br/>_1024 = _483<br/>StorageLive(_1025)<br/>_1025 = _482<br/></td></tr><tr><td align="left">_1019 = calculate_asset_transfer_for_liability_transfer(move _1020, const _, move _1021, move _1022, move _1023, const _, move _1024, move _1025)</td></tr></table>>];
    bb416__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_1014)<br/>StorageDead(_1015)<br/>StorageDead(_1013)<br/>StorageLive(_1016)<br/>_1016 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1016)<br/>StorageDead(_1016)<br/>StorageDead(_1010)<br/>StorageDead(_1009)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_1025)<br/>StorageDead(_1024)<br/>StorageDead(_1023)<br/>StorageDead(_1022)<br/>StorageDead(_1021)<br/>StorageDead(_1020)<br/></td></tr><tr><td align="left">_1018 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1019)</td></tr></table>>];
    bb418__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_1019)<br/>_1026 = discriminant(_1018)<br/></td></tr><tr><td align="left">switchInt(move _1026)</td></tr></table>>];
    bb419__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageLive(_1030)<br/>_1030 = ((_1018 as Continue).0: u128)<br/>_1017 = _1030<br/>StorageDead(_1030)<br/>StorageDead(_1018)<br/>StorageLive(_1031)<br/>StorageLive(_1032)<br/>StorageLive(_1033)<br/>StorageLive(_1034)<br/>_1034 = _1017<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>_1036 = _1017<br/>_1037 = Eq(const 400_u128, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _1037, &quot;attempt to divide `{}` by zero&quot;, _1036)</td></tr></table>>];
    bb420__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageLive(_1027)<br/>_1027 = ((_1018 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1029)<br/>_1029 = _1027<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1029)</td></tr></table>>];
    bb421__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_1029)<br/>StorageDead(_1027)<br/>StorageDead(_1018)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">_1035 = Div(move _1036, const 400_u128)<br/>StorageDead(_1036)<br/></td></tr><tr><td align="left">_1033 = &lt;u128 as SafeMath&gt;::safe_add(move _1034, move _1035)</td></tr></table>>];
    bb423__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_1035)<br/>StorageDead(_1034)<br/></td></tr><tr><td align="left">_1032 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1033)</td></tr></table>>];
    bb424__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_1033)<br/>_1038 = discriminant(_1032)<br/></td></tr><tr><td align="left">switchInt(move _1038)</td></tr></table>>];
    bb425__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageLive(_1042)<br/>_1042 = ((_1032 as Continue).0: u128)<br/>_1031 = _1042<br/>StorageDead(_1042)<br/>StorageDead(_1032)<br/>StorageLive(_1043)<br/>StorageLive(_1044)<br/>StorageLive(_1045)<br/>_1045 = _1031<br/>_1044 = Eq(move _1045, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1044)</td></tr></table>>];
    bb426__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageLive(_1039)<br/>_1039 = ((_1032 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1041)<br/>_1041 = _1039<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1041)</td></tr></table>>];
    bb427__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_1041)<br/>StorageDead(_1039)<br/>StorageDead(_1032)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb428__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_1045)<br/>StorageLive(_1047)<br/>StorageLive(_1048)<br/>StorageLive(_1049)<br/>StorageLive(_1050)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>StorageLive(_1053)<br/>StorageLive(_1054)<br/>StorageLive(_1055)<br/>StorageLive(_1056)<br/>StorageLive(_1057)<br/>_1414 = const _<br/>_1057 = &amp;(*_1414)<br/>_1056 = &amp;(*_1057)<br/>_1055 = move _1056 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1056)<br/>StorageLive(_1059)<br/>StorageLive(_1060)<br/>StorageLive(_1061)<br/>StorageLive(_1062)<br/>StorageLive(_1063)<br/>StorageLive(_1064)<br/>StorageLive(_1065)<br/>_1065 = &amp;_1<br/>_1064 = &amp;(*_1065)<br/></td></tr><tr><td align="left">_1063 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1064)</td></tr></table>>];
    bb429__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_1045)<br/>_1043 = const ()<br/>StorageDead(_1044)<br/>StorageDead(_1043)<br/>StorageLive(_1133)<br/>StorageLive(_1134)<br/>StorageLive(_1135)<br/>StorageLive(_1136)<br/>StorageLive(_1137)<br/>_1137 = _1031<br/>StorageLive(_1138)<br/>StorageLive(_1139)<br/>StorageLive(_1140)<br/>StorageLive(_1141)<br/>_1141 = _3<br/></td></tr><tr><td align="left">_1140 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1141)</td></tr></table>>];
    bb430__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_1064)<br/>StorageLive(_1066)<br/>StorageLive(_1067)<br/>StorageLive(_1068)<br/>_1068 = &amp;_2<br/>_1067 = &amp;(*_1068)<br/></td></tr><tr><td align="left">_1066 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1067)</td></tr></table>>];
    bb431__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_1067)<br/>_1062 = [move _1063, move _1066]<br/>StorageDead(_1066)<br/>StorageDead(_1063)<br/>_1061 = &amp;_1062<br/>_1060 = &amp;(*_1061)<br/>_1059 = move _1060 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1060)<br/></td></tr><tr><td align="left">_1054 = Arguments::&lt;'_&gt;::new_v1(move _1055, move _1059)</td></tr></table>>];
    bb432__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_1059)<br/>StorageDead(_1055)<br/></td></tr><tr><td align="left">_1053 = format(move _1054)</td></tr></table>>];
    bb433__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_1054)<br/>StorageDead(_1068)<br/>StorageDead(_1065)<br/>StorageDead(_1062)<br/>StorageDead(_1061)<br/>StorageDead(_1057)<br/>_1052 = move _1053<br/>StorageDead(_1053)<br/>_1051 = &amp;_1052<br/>_1050 = &amp;(*_1051)<br/></td></tr><tr><td align="left">_1049 = &lt;String as Deref&gt;::deref(move _1050)</td></tr></table>>];
    bb434__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">_1048 = &amp;(*_1049)<br/>StorageDead(_1050)<br/></td></tr><tr><td align="left">_1047 = solana_program::log::sol_log(move _1048)</td></tr></table>>];
    bb435__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_1048)<br/></td></tr><tr><td align="left">drop(_1052)</td></tr></table>>];
    bb436__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_1052)<br/>StorageDead(_1051)<br/>StorageDead(_1049)<br/>StorageDead(_1047)<br/>StorageLive(_1069)<br/>StorageLive(_1070)<br/>StorageLive(_1071)<br/>StorageLive(_1072)<br/>StorageLive(_1073)<br/>StorageLive(_1074)<br/>StorageLive(_1075)<br/>StorageLive(_1076)<br/>StorageLive(_1077)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>_1413 = const _<br/>_1079 = &amp;(*_1413)<br/>_1078 = &amp;(*_1079)<br/>_1077 = move _1078 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1078)<br/>StorageLive(_1081)<br/>StorageLive(_1082)<br/>StorageLive(_1083)<br/>StorageLive(_1084)<br/>StorageLive(_1085)<br/>StorageLive(_1086)<br/>StorageLive(_1087)<br/>_1087 = &amp;_1031<br/>_1086 = &amp;(*_1087)<br/></td></tr><tr><td align="left">_1085 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1086)</td></tr></table>>];
    bb437__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_1086)<br/>StorageLive(_1088)<br/>StorageLive(_1089)<br/>StorageLive(_1090)<br/>_1090 = &amp;_971<br/>_1089 = &amp;(*_1090)<br/></td></tr><tr><td align="left">_1088 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1089)</td></tr></table>>];
    bb438__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_1089)<br/>_1084 = [move _1085, move _1088]<br/>StorageDead(_1088)<br/>StorageDead(_1085)<br/>_1083 = &amp;_1084<br/>_1082 = &amp;(*_1083)<br/>_1081 = move _1082 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1082)<br/></td></tr><tr><td align="left">_1076 = Arguments::&lt;'_&gt;::new_v1(move _1077, move _1081)</td></tr></table>>];
    bb439__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_1081)<br/>StorageDead(_1077)<br/></td></tr><tr><td align="left">_1075 = format(move _1076)</td></tr></table>>];
    bb440__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1076)<br/>StorageDead(_1090)<br/>StorageDead(_1087)<br/>StorageDead(_1084)<br/>StorageDead(_1083)<br/>StorageDead(_1079)<br/>_1074 = move _1075<br/>StorageDead(_1075)<br/>_1073 = &amp;_1074<br/>_1072 = &amp;(*_1073)<br/></td></tr><tr><td align="left">_1071 = &lt;String as Deref&gt;::deref(move _1072)</td></tr></table>>];
    bb441__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">_1070 = &amp;(*_1071)<br/>StorageDead(_1072)<br/></td></tr><tr><td align="left">_1069 = solana_program::log::sol_log(move _1070)</td></tr></table>>];
    bb442__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_1070)<br/></td></tr><tr><td align="left">drop(_1074)</td></tr></table>>];
    bb443__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_1074)<br/>StorageDead(_1073)<br/>StorageDead(_1071)<br/>StorageDead(_1069)<br/>StorageLive(_1091)<br/>StorageLive(_1092)<br/>StorageLive(_1093)<br/>StorageLive(_1094)<br/>StorageLive(_1095)<br/>StorageLive(_1096)<br/>StorageLive(_1097)<br/>StorageLive(_1098)<br/>StorageLive(_1099)<br/>StorageLive(_1100)<br/>StorageLive(_1101)<br/>_1412 = const _<br/>_1101 = &amp;(*_1412)<br/>_1100 = &amp;(*_1101)<br/>_1099 = move _1100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1100)<br/>StorageLive(_1103)<br/>StorageLive(_1104)<br/>StorageLive(_1105)<br/>StorageLive(_1106)<br/>StorageLive(_1107)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>_1109 = &amp;_998<br/>_1108 = &amp;(*_1109)<br/></td></tr><tr><td align="left">_1107 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1108)</td></tr></table>>];
    bb444__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_1108)<br/>StorageLive(_1110)<br/>StorageLive(_1111)<br/>StorageLive(_1112)<br/>_1112 = &amp;_971<br/>_1111 = &amp;(*_1112)<br/></td></tr><tr><td align="left">_1110 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1111)</td></tr></table>>];
    bb445__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1111)<br/>_1106 = [move _1107, move _1110]<br/>StorageDead(_1110)<br/>StorageDead(_1107)<br/>_1105 = &amp;_1106<br/>_1104 = &amp;(*_1105)<br/>_1103 = move _1104 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1104)<br/></td></tr><tr><td align="left">_1098 = Arguments::&lt;'_&gt;::new_v1(move _1099, move _1103)</td></tr></table>>];
    bb446__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_1103)<br/>StorageDead(_1099)<br/></td></tr><tr><td align="left">_1097 = format(move _1098)</td></tr></table>>];
    bb447__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_1098)<br/>StorageDead(_1112)<br/>StorageDead(_1109)<br/>StorageDead(_1106)<br/>StorageDead(_1105)<br/>StorageDead(_1101)<br/>_1096 = move _1097<br/>StorageDead(_1097)<br/>_1095 = &amp;_1096<br/>_1094 = &amp;(*_1095)<br/></td></tr><tr><td align="left">_1093 = &lt;String as Deref&gt;::deref(move _1094)</td></tr></table>>];
    bb448__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">_1092 = &amp;(*_1093)<br/>StorageDead(_1094)<br/></td></tr><tr><td align="left">_1091 = solana_program::log::sol_log(move _1092)</td></tr></table>>];
    bb449__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/></td></tr><tr><td align="left">drop(_1096)</td></tr></table>>];
    bb450__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageDead(_1096)<br/>StorageDead(_1095)<br/>StorageDead(_1093)<br/>StorageDead(_1091)<br/>StorageLive(_1113)<br/>StorageLive(_1114)<br/>StorageLive(_1115)<br/>StorageLive(_1116)<br/>StorageLive(_1117)<br/>StorageLive(_1118)<br/>StorageLive(_1119)<br/>StorageLive(_1120)<br/>StorageLive(_1121)<br/>StorageLive(_1122)<br/>StorageLive(_1123)<br/>_1411 = const _<br/>_1123 = &amp;(*_1411)<br/>_1122 = &amp;(*_1123)<br/>_1121 = move _1122 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1122)<br/>StorageLive(_1125)<br/>StorageLive(_1126)<br/>StorageLive(_1127)<br/>StorageLive(_1128)<br/>StorageLive(_1129)<br/>StorageLive(_1130)<br/>StorageLive(_1131)<br/>_1131 = &amp;_3<br/>_1130 = &amp;(*_1131)<br/></td></tr><tr><td align="left">_1129 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1130)</td></tr></table>>];
    bb451__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageDead(_1130)<br/>_1128 = [move _1129]<br/>StorageDead(_1129)<br/>_1127 = &amp;_1128<br/>_1126 = &amp;(*_1127)<br/>_1125 = move _1126 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1126)<br/></td></tr><tr><td align="left">_1120 = Arguments::&lt;'_&gt;::new_v1(move _1121, move _1125)</td></tr></table>>];
    bb452__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1125)<br/>StorageDead(_1121)<br/></td></tr><tr><td align="left">_1119 = format(move _1120)</td></tr></table>>];
    bb453__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1120)<br/>StorageDead(_1131)<br/>StorageDead(_1128)<br/>StorageDead(_1127)<br/>StorageDead(_1123)<br/>_1118 = move _1119<br/>StorageDead(_1119)<br/>_1117 = &amp;_1118<br/>_1116 = &amp;(*_1117)<br/></td></tr><tr><td align="left">_1115 = &lt;String as Deref&gt;::deref(move _1116)</td></tr></table>>];
    bb454__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">_1114 = &amp;(*_1115)<br/>StorageDead(_1116)<br/></td></tr><tr><td align="left">_1113 = solana_program::log::sol_log(move _1114)</td></tr></table>>];
    bb455__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1114)<br/></td></tr><tr><td align="left">drop(_1118)</td></tr></table>>];
    bb456__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageDead(_1118)<br/>StorageDead(_1117)<br/>StorageDead(_1115)<br/>StorageDead(_1113)<br/>StorageLive(_1132)<br/>_1132 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1132)<br/>StorageDead(_1132)<br/>StorageDead(_1044)<br/>StorageDead(_1043)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb457__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageDead(_1141)<br/></td></tr><tr><td align="left">_1139 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1140)</td></tr></table>>];
    bb458__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1140)<br/>_1142 = discriminant(_1139)<br/></td></tr><tr><td align="left">switchInt(move _1142)</td></tr></table>>];
    bb459__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageLive(_1146)<br/>_1146 = ((_1139 as Continue).0: u128)<br/>_1138 = _1146<br/>StorageDead(_1146)<br/>_1136 = Ge(move _1137, move _1138)<br/></td></tr><tr><td align="left">switchInt(move _1136)</td></tr></table>>];
    bb460__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageLive(_1143)<br/>_1143 = ((_1139 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1145)<br/>_1145 = _1143<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1145)</td></tr></table>>];
    bb461__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_1145)<br/>StorageDead(_1143)<br/>StorageDead(_1139)<br/>StorageDead(_1138)<br/>StorageDead(_1137)<br/>StorageDead(_1136)<br/>StorageDead(_1135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb462__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>StorageDead(_1138)<br/>StorageDead(_1137)<br/>StorageLive(_1147)<br/>_1147 = ()<br/>_1135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1147)<br/>StorageDead(_1147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb463__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>StorageDead(_1138)<br/>StorageDead(_1137)<br/>StorageLive(_1148)<br/>_1148 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_1149)<br/>StorageLive(_1150)<br/>StorageLive(_1151)<br/>StorageLive(_1152)<br/>StorageLive(_1153)<br/>StorageLive(_1154)<br/>StorageLive(_1155)<br/>StorageLive(_1156)<br/>StorageLive(_1157)<br/>StorageLive(_1158)<br/>StorageLive(_1159)<br/>_1420 = const _<br/>_1159 = &amp;(*_1420)<br/>_1158 = &amp;(*_1159)<br/>_1157 = move _1158 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1158)<br/>StorageLive(_1161)<br/>StorageLive(_1162)<br/>StorageLive(_1163)<br/>StorageLive(_1164)<br/>StorageLive(_1165)<br/>StorageLive(_1166)<br/>StorageLive(_1167)<br/>_1167 = &amp;_1148<br/>_1166 = &amp;(*_1167)<br/></td></tr><tr><td align="left">_1165 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1166)</td></tr></table>>];
    bb464__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1166)<br/>_1164 = [move _1165]<br/>StorageDead(_1165)<br/>_1163 = &amp;_1164<br/>_1162 = &amp;(*_1163)<br/>_1161 = move _1162 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1162)<br/></td></tr><tr><td align="left">_1156 = Arguments::&lt;'_&gt;::new_v1(move _1157, move _1161)</td></tr></table>>];
    bb465__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1161)<br/>StorageDead(_1157)<br/></td></tr><tr><td align="left">_1155 = format(move _1156)</td></tr></table>>];
    bb466__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_1156)<br/>StorageDead(_1167)<br/>StorageDead(_1164)<br/>StorageDead(_1163)<br/>StorageDead(_1159)<br/>_1154 = move _1155<br/>StorageDead(_1155)<br/>_1153 = &amp;_1154<br/>_1152 = &amp;(*_1153)<br/></td></tr><tr><td align="left">_1151 = &lt;String as Deref&gt;::deref(move _1152)</td></tr></table>>];
    bb467__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">_1150 = &amp;(*_1151)<br/>StorageDead(_1152)<br/></td></tr><tr><td align="left">_1149 = solana_program::log::sol_log(move _1150)</td></tr></table>>];
    bb468__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageDead(_1150)<br/></td></tr><tr><td align="left">drop(_1154)</td></tr></table>>];
    bb469__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1154)<br/>StorageDead(_1153)<br/>StorageDead(_1151)<br/>StorageDead(_1149)<br/>StorageLive(_1168)<br/>StorageLive(_1169)<br/>StorageLive(_1170)<br/>StorageLive(_1171)<br/>StorageLive(_1172)<br/>StorageLive(_1173)<br/>StorageLive(_1174)<br/>StorageLive(_1175)<br/>StorageLive(_1176)<br/>StorageLive(_1177)<br/>StorageLive(_1178)<br/>_1419 = const _<br/>_1178 = &amp;(*_1419)<br/>_1177 = &amp;(*_1178)<br/>_1176 = move _1177 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1177)<br/>StorageLive(_1180)<br/>StorageLive(_1181)<br/>StorageLive(_1182)<br/>StorageLive(_1183)<br/>StorageLive(_1184)<br/>StorageLive(_1185)<br/>StorageLive(_1186)<br/>_1186 = &amp;_3<br/>_1185 = &amp;(*_1186)<br/></td></tr><tr><td align="left">_1184 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1185)</td></tr></table>>];
    bb470__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1185)<br/>StorageLive(_1187)<br/>StorageLive(_1188)<br/>StorageLive(_1189)<br/>_1189 = &amp;_1031<br/>_1188 = &amp;(*_1189)<br/></td></tr><tr><td align="left">_1187 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1188)</td></tr></table>>];
    bb471__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1188)<br/>_1183 = [move _1184, move _1187]<br/>StorageDead(_1187)<br/>StorageDead(_1184)<br/>_1182 = &amp;_1183<br/>_1181 = &amp;(*_1182)<br/>_1180 = move _1181 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1181)<br/></td></tr><tr><td align="left">_1175 = Arguments::&lt;'_&gt;::new_v1(move _1176, move _1180)</td></tr></table>>];
    bb472__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageDead(_1180)<br/>StorageDead(_1176)<br/></td></tr><tr><td align="left">_1174 = format(move _1175)</td></tr></table>>];
    bb473__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1175)<br/>StorageDead(_1189)<br/>StorageDead(_1186)<br/>StorageDead(_1183)<br/>StorageDead(_1182)<br/>StorageDead(_1178)<br/>_1173 = move _1174<br/>StorageDead(_1174)<br/>_1172 = &amp;_1173<br/>_1171 = &amp;(*_1172)<br/></td></tr><tr><td align="left">_1170 = &lt;String as Deref&gt;::deref(move _1171)</td></tr></table>>];
    bb474__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">_1169 = &amp;(*_1170)<br/>StorageDead(_1171)<br/></td></tr><tr><td align="left">_1168 = solana_program::log::sol_log(move _1169)</td></tr></table>>];
    bb475__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1169)<br/></td></tr><tr><td align="left">drop(_1173)</td></tr></table>>];
    bb476__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1173)<br/>StorageDead(_1172)<br/>StorageDead(_1170)<br/>StorageDead(_1168)<br/>StorageLive(_1190)<br/>_1190 = _1148<br/>_1135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1190)<br/>StorageDead(_1190)<br/>StorageDead(_1148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb477__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1136)<br/></td></tr><tr><td align="left">_1134 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1135)</td></tr></table>>];
    bb478__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_1135)<br/>_1191 = discriminant(_1134)<br/></td></tr><tr><td align="left">switchInt(move _1191)</td></tr></table>>];
    bb479__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageLive(_1195)<br/>_1195 = ((_1134 as Continue).0: ())<br/>_1133 = _1195<br/>StorageDead(_1195)<br/>StorageDead(_1134)<br/>StorageDead(_1133)<br/>StorageLive(_1196)<br/>StorageLive(_1197)<br/>StorageLive(_1198)<br/>StorageLive(_1199)<br/>StorageLive(_1200)<br/>_1200 = _306<br/>StorageLive(_1201)<br/>StorageLive(_1202)<br/>StorageLive(_1203)<br/>StorageLive(_1204)<br/>_1204 = _3<br/></td></tr><tr><td align="left">_1203 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1204)</td></tr></table>>];
    bb480__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageLive(_1192)<br/>_1192 = ((_1134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1194)<br/>_1194 = _1192<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1194)</td></tr></table>>];
    bb481__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1194)<br/>StorageDead(_1192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb482__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1204)<br/></td></tr><tr><td align="left">_1202 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1203)</td></tr></table>>];
    bb483__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1203)<br/>_1205 = discriminant(_1202)<br/></td></tr><tr><td align="left">switchInt(move _1205)</td></tr></table>>];
    bb484__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageLive(_1209)<br/>_1209 = ((_1202 as Continue).0: u128)<br/>_1201 = _1209<br/>StorageDead(_1209)<br/>_1199 = Ge(move _1200, move _1201)<br/></td></tr><tr><td align="left">switchInt(move _1199)</td></tr></table>>];
    bb485__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageLive(_1206)<br/>_1206 = ((_1202 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1208)<br/>_1208 = _1206<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1208)</td></tr></table>>];
    bb486__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_1208)<br/>StorageDead(_1206)<br/>StorageDead(_1202)<br/>StorageDead(_1201)<br/>StorageDead(_1200)<br/>StorageDead(_1199)<br/>StorageDead(_1198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb487__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_1202)<br/>StorageDead(_1201)<br/>StorageDead(_1200)<br/>StorageLive(_1210)<br/>_1210 = ()<br/>_1198 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1210)<br/>StorageDead(_1210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb488__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_1202)<br/>StorageDead(_1201)<br/>StorageDead(_1200)<br/>StorageLive(_1211)<br/>_1211 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_1212)<br/>StorageLive(_1213)<br/>StorageLive(_1214)<br/>StorageLive(_1215)<br/>StorageLive(_1216)<br/>StorageLive(_1217)<br/>StorageLive(_1218)<br/>StorageLive(_1219)<br/>StorageLive(_1220)<br/>StorageLive(_1221)<br/>StorageLive(_1222)<br/>_1418 = const _<br/>_1222 = &amp;(*_1418)<br/>_1221 = &amp;(*_1222)<br/>_1220 = move _1221 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1221)<br/>StorageLive(_1224)<br/>StorageLive(_1225)<br/>StorageLive(_1226)<br/>StorageLive(_1227)<br/>StorageLive(_1228)<br/>StorageLive(_1229)<br/>StorageLive(_1230)<br/>_1230 = &amp;_1211<br/>_1229 = &amp;(*_1230)<br/></td></tr><tr><td align="left">_1228 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1229)</td></tr></table>>];
    bb489__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageDead(_1229)<br/>_1227 = [move _1228]<br/>StorageDead(_1228)<br/>_1226 = &amp;_1227<br/>_1225 = &amp;(*_1226)<br/>_1224 = move _1225 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1225)<br/></td></tr><tr><td align="left">_1219 = Arguments::&lt;'_&gt;::new_v1(move _1220, move _1224)</td></tr></table>>];
    bb490__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_1224)<br/>StorageDead(_1220)<br/></td></tr><tr><td align="left">_1218 = format(move _1219)</td></tr></table>>];
    bb491__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1219)<br/>StorageDead(_1230)<br/>StorageDead(_1227)<br/>StorageDead(_1226)<br/>StorageDead(_1222)<br/>_1217 = move _1218<br/>StorageDead(_1218)<br/>_1216 = &amp;_1217<br/>_1215 = &amp;(*_1216)<br/></td></tr><tr><td align="left">_1214 = &lt;String as Deref&gt;::deref(move _1215)</td></tr></table>>];
    bb492__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">_1213 = &amp;(*_1214)<br/>StorageDead(_1215)<br/></td></tr><tr><td align="left">_1212 = solana_program::log::sol_log(move _1213)</td></tr></table>>];
    bb493__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_1213)<br/></td></tr><tr><td align="left">drop(_1217)</td></tr></table>>];
    bb494__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_1217)<br/>StorageDead(_1216)<br/>StorageDead(_1214)<br/>StorageDead(_1212)<br/>StorageLive(_1231)<br/>StorageLive(_1232)<br/>StorageLive(_1233)<br/>StorageLive(_1234)<br/>StorageLive(_1235)<br/>StorageLive(_1236)<br/>StorageLive(_1237)<br/>StorageLive(_1238)<br/>StorageLive(_1239)<br/>StorageLive(_1240)<br/>StorageLive(_1241)<br/>_1417 = const _<br/>_1241 = &amp;(*_1417)<br/>_1240 = &amp;(*_1241)<br/>_1239 = move _1240 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1240)<br/>StorageLive(_1243)<br/>StorageLive(_1244)<br/>StorageLive(_1245)<br/>StorageLive(_1246)<br/>StorageLive(_1247)<br/>StorageLive(_1248)<br/>StorageLive(_1249)<br/>_1249 = &amp;_3<br/>_1248 = &amp;(*_1249)<br/></td></tr><tr><td align="left">_1247 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1248)</td></tr></table>>];
    bb495__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_1248)<br/>StorageLive(_1250)<br/>StorageLive(_1251)<br/>StorageLive(_1252)<br/>_1252 = &amp;_306<br/>_1251 = &amp;(*_1252)<br/></td></tr><tr><td align="left">_1250 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1251)</td></tr></table>>];
    bb496__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_1251)<br/>_1246 = [move _1247, move _1250]<br/>StorageDead(_1250)<br/>StorageDead(_1247)<br/>_1245 = &amp;_1246<br/>_1244 = &amp;(*_1245)<br/>_1243 = move _1244 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1244)<br/></td></tr><tr><td align="left">_1238 = Arguments::&lt;'_&gt;::new_v1(move _1239, move _1243)</td></tr></table>>];
    bb497__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageDead(_1243)<br/>StorageDead(_1239)<br/></td></tr><tr><td align="left">_1237 = format(move _1238)</td></tr></table>>];
    bb498__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_1238)<br/>StorageDead(_1252)<br/>StorageDead(_1249)<br/>StorageDead(_1246)<br/>StorageDead(_1245)<br/>StorageDead(_1241)<br/>_1236 = move _1237<br/>StorageDead(_1237)<br/>_1235 = &amp;_1236<br/>_1234 = &amp;(*_1235)<br/></td></tr><tr><td align="left">_1233 = &lt;String as Deref&gt;::deref(move _1234)</td></tr></table>>];
    bb499__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">_1232 = &amp;(*_1233)<br/>StorageDead(_1234)<br/></td></tr><tr><td align="left">_1231 = solana_program::log::sol_log(move _1232)</td></tr></table>>];
    bb500__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_1232)<br/></td></tr><tr><td align="left">drop(_1236)</td></tr></table>>];
    bb501__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageDead(_1236)<br/>StorageDead(_1235)<br/>StorageDead(_1233)<br/>StorageDead(_1231)<br/>StorageLive(_1253)<br/>_1253 = _1211<br/>_1198 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1253)<br/>StorageDead(_1253)<br/>StorageDead(_1211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb502__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_1199)<br/></td></tr><tr><td align="left">_1197 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1198)</td></tr></table>>];
    bb503__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_1198)<br/>_1254 = discriminant(_1197)<br/></td></tr><tr><td align="left">switchInt(move _1254)</td></tr></table>>];
    bb504__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageLive(_1258)<br/>_1258 = ((_1197 as Continue).0: ())<br/>_1196 = _1258<br/>StorageDead(_1258)<br/>StorageDead(_1197)<br/>StorageDead(_1196)<br/>StorageLive(_1259)<br/>StorageLive(_1260)<br/>StorageLive(_1261)<br/>StorageLive(_1262)<br/>StorageLive(_1263)<br/>StorageLive(_1264)<br/>StorageLive(_1265)<br/>_1265 = _482<br/></td></tr><tr><td align="left">_1264 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _1265)</td></tr></table>>];
    bb505__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageLive(_1255)<br/>_1255 = ((_1197 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1257)<br/>_1257 = _1255<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1257)</td></tr></table>>];
    bb506__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_1257)<br/>StorageDead(_1255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb507__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_1265)<br/></td></tr><tr><td align="left">_1263 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1264)</td></tr></table>>];
    bb508__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_1264)<br/>_1266 = discriminant(_1263)<br/></td></tr><tr><td align="left">switchInt(move _1266)</td></tr></table>>];
    bb509__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageLive(_1270)<br/>_1270 = ((_1263 as Continue).0: i64)<br/>_1262 = _1270<br/>StorageDead(_1270)<br/>StorageLive(_1271)<br/>StorageLive(_1272)<br/>StorageLive(_1273)<br/>StorageLive(_1274)<br/>StorageLive(_1275)<br/>StorageLive(_1276)<br/>StorageLive(_1277)<br/>_1277 = &amp;(*_11)<br/>StorageLive(_1278)<br/>StorageLive(_1279)<br/>_1279 = &amp;_2<br/>_1278 = &amp;(*_1279)<br/></td></tr><tr><td align="left">_1276 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1277, move _1278)</td></tr></table>>];
    bb510__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageLive(_1267)<br/>_1267 = ((_1263 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1269)<br/>_1269 = _1267<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1269)</td></tr></table>>];
    bb511__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_1269)<br/>StorageDead(_1267)<br/>StorageDead(_1262)<br/>StorageDead(_1261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb512__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_1278)<br/>StorageDead(_1277)<br/></td></tr><tr><td align="left">_1275 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1276)</td></tr></table>>];
    bb513__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">_1444 = const true<br/>StorageDead(_1276)<br/>_1280 = discriminant(_1275)<br/></td></tr><tr><td align="left">switchInt(move _1280)</td></tr></table>>];
    bb514__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageLive(_1284)<br/>_1284 = move ((_1275 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1274 = move _1284<br/>StorageDead(_1284)<br/>_1273 = &amp;_1274<br/></td></tr><tr><td align="left">_1272 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1273)</td></tr></table>>];
    bb515__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageLive(_1281)<br/>_1281 = ((_1275 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1283)<br/>_1283 = _1281<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1283)</td></tr></table>>];
    bb516__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageDead(_1283)<br/>StorageDead(_1281)<br/>StorageDead(_1273)<br/>StorageDead(_1271)<br/>StorageDead(_1262)<br/>StorageDead(_1261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb517__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_1273)<br/>_1271 = (((*_1272).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_1285)<br/>StorageLive(_1286)<br/>StorageLive(_1287)<br/>StorageLive(_1288)<br/>StorageLive(_1289)<br/>_1289 = &amp;((*_15).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_1288 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _1289)</td></tr></table>>];
    bb518__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_1289)<br/></td></tr><tr><td align="left">_1287 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _1288)</td></tr></table>>];
    bb519__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_1288)<br/></td></tr><tr><td align="left">_1286 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1287)</td></tr></table>>];
    bb520__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageDead(_1287)<br/>_1290 = discriminant(_1286)<br/></td></tr><tr><td align="left">switchInt(move _1290)</td></tr></table>>];
    bb521__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageLive(_1294)<br/>_1294 = ((_1286 as Continue).0: i64)<br/>_1285 = _1294<br/>StorageDead(_1294)<br/></td></tr><tr><td align="left">_1261 = math::orders::is_oracle_too_divergent_with_twap_5min(move _1262, move _1271, move _1285)</td></tr></table>>];
    bb522__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageLive(_1291)<br/>_1291 = ((_1286 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1293)<br/>_1293 = _1291<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1293)</td></tr></table>>];
    bb523__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_1293)<br/>StorageDead(_1291)<br/>StorageDead(_1285)<br/>StorageDead(_1271)<br/>StorageDead(_1262)<br/>StorageDead(_1261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb524__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_1285)<br/>StorageDead(_1271)<br/>StorageDead(_1262)<br/></td></tr><tr><td align="left">_1260 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1261)</td></tr></table>>];
    bb525__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageDead(_1261)<br/>_1295 = discriminant(_1260)<br/></td></tr><tr><td align="left">switchInt(move _1295)</td></tr></table>>];
    bb526__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageLive(_1299)<br/>_1299 = ((_1260 as Continue).0: bool)<br/>_1259 = _1299<br/>StorageDead(_1299)<br/>StorageDead(_1286)<br/></td></tr><tr><td align="left">drop(_1274)</td></tr></table>>];
    bb527__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageLive(_1296)<br/>_1296 = ((_1260 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1298)<br/>_1298 = _1296<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1298)</td></tr></table>>];
    bb528__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">StorageDead(_1298)<br/>StorageDead(_1296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb529__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageLive(_1304)<br/>_1304 = ()<br/>_1302 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1304)<br/>StorageDead(_1304)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb530__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageLive(_1305)<br/>_1305 = error::ErrorCode::PriceBandsBreached<br/>StorageLive(_1306)<br/>StorageLive(_1307)<br/>StorageLive(_1308)<br/>StorageLive(_1309)<br/>StorageLive(_1310)<br/>StorageLive(_1311)<br/>StorageLive(_1312)<br/>StorageLive(_1313)<br/>StorageLive(_1314)<br/>StorageLive(_1315)<br/>StorageLive(_1316)<br/>_1416 = const _<br/>_1316 = &amp;(*_1416)<br/>_1315 = &amp;(*_1316)<br/>_1314 = move _1315 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1315)<br/>StorageLive(_1318)<br/>StorageLive(_1319)<br/>StorageLive(_1320)<br/>StorageLive(_1321)<br/>StorageLive(_1322)<br/>StorageLive(_1323)<br/>StorageLive(_1324)<br/>_1324 = &amp;_1305<br/>_1323 = &amp;(*_1324)<br/></td></tr><tr><td align="left">_1322 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1323)</td></tr></table>>];
    bb531__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageDead(_1323)<br/>_1321 = [move _1322]<br/>StorageDead(_1322)<br/>_1320 = &amp;_1321<br/>_1319 = &amp;(*_1320)<br/>_1318 = move _1319 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1319)<br/></td></tr><tr><td align="left">_1313 = Arguments::&lt;'_&gt;::new_v1(move _1314, move _1318)</td></tr></table>>];
    bb532__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageDead(_1318)<br/>StorageDead(_1314)<br/></td></tr><tr><td align="left">_1312 = format(move _1313)</td></tr></table>>];
    bb533__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_1313)<br/>StorageDead(_1324)<br/>StorageDead(_1321)<br/>StorageDead(_1320)<br/>StorageDead(_1316)<br/>_1311 = move _1312<br/>StorageDead(_1312)<br/>_1310 = &amp;_1311<br/>_1309 = &amp;(*_1310)<br/></td></tr><tr><td align="left">_1308 = &lt;String as Deref&gt;::deref(move _1309)</td></tr></table>>];
    bb534__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">_1307 = &amp;(*_1308)<br/>StorageDead(_1309)<br/></td></tr><tr><td align="left">_1306 = solana_program::log::sol_log(move _1307)</td></tr></table>>];
    bb535__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_1307)<br/></td></tr><tr><td align="left">drop(_1311)</td></tr></table>>];
    bb536__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">StorageDead(_1311)<br/>StorageDead(_1310)<br/>StorageDead(_1308)<br/>StorageDead(_1306)<br/>StorageLive(_1325)<br/>StorageLive(_1326)<br/>StorageLive(_1327)<br/>_1327 = const &quot;liability oracle too divergent&quot;<br/>_1326 = &amp;(*_1327)<br/></td></tr><tr><td align="left">_1325 = solana_program::log::sol_log(move _1326)</td></tr></table>>];
    bb537__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageDead(_1326)<br/>StorageDead(_1327)<br/>StorageDead(_1325)<br/>StorageLive(_1328)<br/>_1328 = _1305<br/>_1302 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1328)<br/>StorageDead(_1328)<br/>StorageDead(_1305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb538__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageDead(_1303)<br/></td></tr><tr><td align="left">_1301 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1302)</td></tr></table>>];
    bb539__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">StorageDead(_1302)<br/>_1329 = discriminant(_1301)<br/></td></tr><tr><td align="left">switchInt(move _1329)</td></tr></table>>];
    bb540__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageLive(_1333)<br/>_1333 = ((_1301 as Continue).0: ())<br/>_1300 = _1333<br/>StorageDead(_1333)<br/>StorageDead(_1301)<br/>StorageDead(_1300)<br/>StorageLive(_1334)<br/>StorageLive(_1335)<br/>StorageLive(_1336)<br/>StorageLive(_1337)<br/>StorageLive(_1338)<br/>StorageLive(_1339)<br/>StorageLive(_1340)<br/>_1340 = _307<br/></td></tr><tr><td align="left">_1339 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _1340)</td></tr></table>>];
    bb541__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageLive(_1330)<br/>_1330 = ((_1301 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1332)<br/>_1332 = _1330<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1332)</td></tr></table>>];
    bb542__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageDead(_1332)<br/>StorageDead(_1330)<br/>StorageDead(_1301)<br/>StorageDead(_1300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb543__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageDead(_1340)<br/></td></tr><tr><td align="left">_1338 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1339)</td></tr></table>>];
    bb544__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageDead(_1339)<br/>_1341 = discriminant(_1338)<br/></td></tr><tr><td align="left">switchInt(move _1341)</td></tr></table>>];
    bb545__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">StorageLive(_1345)<br/>_1345 = ((_1338 as Continue).0: i64)<br/>_1337 = _1345<br/>StorageDead(_1345)<br/>StorageLive(_1346)<br/>StorageLive(_1347)<br/>StorageLive(_1348)<br/>StorageLive(_1349)<br/>StorageLive(_1350)<br/>StorageLive(_1351)<br/>StorageLive(_1352)<br/>_1352 = &amp;(*_11)<br/>StorageLive(_1353)<br/>StorageLive(_1354)<br/>_1354 = &amp;_1<br/>_1353 = &amp;(*_1354)<br/></td></tr><tr><td align="left">_1351 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1352, move _1353)</td></tr></table>>];
    bb546__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageLive(_1342)<br/>_1342 = ((_1338 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1344)<br/>_1344 = _1342<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1344)</td></tr></table>>];
    bb547__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageDead(_1344)<br/>StorageDead(_1342)<br/>StorageDead(_1337)<br/>StorageDead(_1336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb548__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">StorageDead(_1353)<br/>StorageDead(_1352)<br/></td></tr><tr><td align="left">_1350 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1351)</td></tr></table>>];
    bb549__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">_1443 = const true<br/>StorageDead(_1351)<br/>_1355 = discriminant(_1350)<br/></td></tr><tr><td align="left">switchInt(move _1355)</td></tr></table>>];
    bb550__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">StorageLive(_1359)<br/>_1359 = move ((_1350 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1349 = move _1359<br/>StorageDead(_1359)<br/>_1348 = &amp;_1349<br/></td></tr><tr><td align="left">_1347 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1348)</td></tr></table>>];
    bb551__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">StorageLive(_1356)<br/>_1356 = ((_1350 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1358)<br/>_1358 = _1356<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1358)</td></tr></table>>];
    bb552__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">StorageDead(_1358)<br/>StorageDead(_1356)<br/>StorageDead(_1348)<br/>StorageDead(_1346)<br/>StorageDead(_1337)<br/>StorageDead(_1336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb553__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageDead(_1348)<br/>_1346 = (((*_1347).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_1360)<br/>StorageLive(_1361)<br/>StorageLive(_1362)<br/>StorageLive(_1363)<br/>StorageLive(_1364)<br/>_1364 = &amp;((*_15).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_1363 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _1364)</td></tr></table>>];
    bb554__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">StorageDead(_1364)<br/></td></tr><tr><td align="left">_1362 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _1363)</td></tr></table>>];
    bb555__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageDead(_1363)<br/></td></tr><tr><td align="left">_1361 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1362)</td></tr></table>>];
    bb556__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">StorageDead(_1362)<br/>_1365 = discriminant(_1361)<br/></td></tr><tr><td align="left">switchInt(move _1365)</td></tr></table>>];
    bb557__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">StorageLive(_1369)<br/>_1369 = ((_1361 as Continue).0: i64)<br/>_1360 = _1369<br/>StorageDead(_1369)<br/></td></tr><tr><td align="left">_1336 = math::orders::is_oracle_too_divergent_with_twap_5min(move _1337, move _1346, move _1360)</td></tr></table>>];
    bb558__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageLive(_1366)<br/>_1366 = ((_1361 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1368)<br/>_1368 = _1366<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1368)</td></tr></table>>];
    bb559__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageDead(_1368)<br/>StorageDead(_1366)<br/>StorageDead(_1360)<br/>StorageDead(_1346)<br/>StorageDead(_1337)<br/>StorageDead(_1336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb560__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">StorageDead(_1360)<br/>StorageDead(_1346)<br/>StorageDead(_1337)<br/></td></tr><tr><td align="left">_1335 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1336)</td></tr></table>>];
    bb561__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left" balign="left">StorageDead(_1336)<br/>_1370 = discriminant(_1335)<br/></td></tr><tr><td align="left">switchInt(move _1370)</td></tr></table>>];
    bb562__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left" balign="left">StorageLive(_1374)<br/>_1374 = ((_1335 as Continue).0: bool)<br/>_1334 = _1374<br/>StorageDead(_1374)<br/>StorageDead(_1361)<br/></td></tr><tr><td align="left">drop(_1349)</td></tr></table>>];
    bb563__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left" balign="left">StorageLive(_1371)<br/>_1371 = ((_1335 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1373)<br/>_1373 = _1371<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1373)</td></tr></table>>];
    bb564__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left" balign="left">StorageDead(_1373)<br/>StorageDead(_1371)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb565__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left" balign="left">StorageLive(_1379)<br/>_1379 = ()<br/>_1377 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1379)<br/>StorageDead(_1379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb566__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left" balign="left">StorageLive(_1380)<br/>_1380 = error::ErrorCode::PriceBandsBreached<br/>StorageLive(_1381)<br/>StorageLive(_1382)<br/>StorageLive(_1383)<br/>StorageLive(_1384)<br/>StorageLive(_1385)<br/>StorageLive(_1386)<br/>StorageLive(_1387)<br/>StorageLive(_1388)<br/>StorageLive(_1389)<br/>StorageLive(_1390)<br/>StorageLive(_1391)<br/>_1415 = const _<br/>_1391 = &amp;(*_1415)<br/>_1390 = &amp;(*_1391)<br/>_1389 = move _1390 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1390)<br/>StorageLive(_1393)<br/>StorageLive(_1394)<br/>StorageLive(_1395)<br/>StorageLive(_1396)<br/>StorageLive(_1397)<br/>StorageLive(_1398)<br/>StorageLive(_1399)<br/>_1399 = &amp;_1380<br/>_1398 = &amp;(*_1399)<br/></td></tr><tr><td align="left">_1397 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1398)</td></tr></table>>];
    bb567__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">567</td></tr><tr><td align="left" balign="left">StorageDead(_1398)<br/>_1396 = [move _1397]<br/>StorageDead(_1397)<br/>_1395 = &amp;_1396<br/>_1394 = &amp;(*_1395)<br/>_1393 = move _1394 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1394)<br/></td></tr><tr><td align="left">_1388 = Arguments::&lt;'_&gt;::new_v1(move _1389, move _1393)</td></tr></table>>];
    bb568__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">568</td></tr><tr><td align="left" balign="left">StorageDead(_1393)<br/>StorageDead(_1389)<br/></td></tr><tr><td align="left">_1387 = format(move _1388)</td></tr></table>>];
    bb569__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">569</td></tr><tr><td align="left" balign="left">StorageDead(_1388)<br/>StorageDead(_1399)<br/>StorageDead(_1396)<br/>StorageDead(_1395)<br/>StorageDead(_1391)<br/>_1386 = move _1387<br/>StorageDead(_1387)<br/>_1385 = &amp;_1386<br/>_1384 = &amp;(*_1385)<br/></td></tr><tr><td align="left">_1383 = &lt;String as Deref&gt;::deref(move _1384)</td></tr></table>>];
    bb570__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">570</td></tr><tr><td align="left" balign="left">_1382 = &amp;(*_1383)<br/>StorageDead(_1384)<br/></td></tr><tr><td align="left">_1381 = solana_program::log::sol_log(move _1382)</td></tr></table>>];
    bb571__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">571</td></tr><tr><td align="left" balign="left">StorageDead(_1382)<br/></td></tr><tr><td align="left">drop(_1386)</td></tr></table>>];
    bb572__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">572</td></tr><tr><td align="left" balign="left">StorageDead(_1386)<br/>StorageDead(_1385)<br/>StorageDead(_1383)<br/>StorageDead(_1381)<br/>StorageLive(_1400)<br/>StorageLive(_1401)<br/>StorageLive(_1402)<br/>_1402 = const &quot;asset oracle too divergent&quot;<br/>_1401 = &amp;(*_1402)<br/></td></tr><tr><td align="left">_1400 = solana_program::log::sol_log(move _1401)</td></tr></table>>];
    bb573__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">573</td></tr><tr><td align="left" balign="left">StorageDead(_1401)<br/>StorageDead(_1402)<br/>StorageDead(_1400)<br/>StorageLive(_1403)<br/>_1403 = _1380<br/>_1377 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1403)<br/>StorageDead(_1403)<br/>StorageDead(_1380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb574__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">574</td></tr><tr><td align="left" balign="left">StorageDead(_1378)<br/></td></tr><tr><td align="left">_1376 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1377)</td></tr></table>>];
    bb575__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">575</td></tr><tr><td align="left" balign="left">StorageDead(_1377)<br/>_1404 = discriminant(_1376)<br/></td></tr><tr><td align="left">switchInt(move _1404)</td></tr></table>>];
    bb576__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">576</td></tr><tr><td align="left" balign="left">StorageLive(_1408)<br/>_1408 = ((_1376 as Continue).0: ())<br/>_1375 = _1408<br/>StorageDead(_1408)<br/>StorageDead(_1376)<br/>StorageDead(_1375)<br/>StorageLive(_1409)<br/>_1409 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1409)<br/>StorageDead(_1409)<br/>StorageDead(_1334)<br/>StorageDead(_1259)<br/>StorageDead(_1031)<br/>StorageDead(_1017)<br/>StorageDead(_998)<br/>StorageDead(_985)<br/>StorageDead(_971)<br/>StorageDead(_961)<br/>StorageDead(_952)<br/>StorageDead(_840)<br/></td></tr><tr><td align="left">switchInt(_1442)</td></tr></table>>];
    bb577__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">577</td></tr><tr><td align="left" balign="left">StorageLive(_1405)<br/>_1405 = ((_1376 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1407)<br/>_1407 = _1405<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1407)</td></tr></table>>];
    bb578__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">578</td></tr><tr><td align="left" balign="left">StorageDead(_1407)<br/>StorageDead(_1405)<br/>StorageDead(_1376)<br/>StorageDead(_1375)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb579__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">579</td></tr><tr><td align="left" balign="left">_1442 = const false<br/>StorageDead(_819)<br/>StorageDead(_809)<br/>StorageDead(_736)<br/>StorageDead(_721)<br/>StorageDead(_487)<br/>StorageDead(_486)<br/>StorageDead(_485)<br/>StorageDead(_484)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/>StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>_1445 = const false<br/>StorageDead(_174)<br/>_1446 = const false<br/>StorageDead(_109)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb580__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">580</td></tr><tr><td align="left" balign="left">StorageDead(_1361)<br/></td></tr><tr><td align="left">drop(_1349)</td></tr></table>>];
    bb581__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">581</td></tr><tr><td align="left" balign="left">StorageDead(_1338)<br/>StorageDead(_1335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb582__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">582</td></tr><tr><td align="left" balign="left">StorageDead(_1334)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb583__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">583</td></tr><tr><td align="left" balign="left">StorageDead(_1286)<br/></td></tr><tr><td align="left">drop(_1274)</td></tr></table>>];
    bb584__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">584</td></tr><tr><td align="left" balign="left">StorageDead(_1263)<br/>StorageDead(_1260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb585__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">585</td></tr><tr><td align="left" balign="left">StorageDead(_1259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb586__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">586</td></tr><tr><td align="left" balign="left">StorageDead(_1197)<br/>StorageDead(_1196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb587__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">587</td></tr><tr><td align="left" balign="left">StorageDead(_1134)<br/>StorageDead(_1133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb588__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">588</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb589__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left" balign="left">StorageDead(_1017)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb590__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">StorageDead(_998)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb591__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">StorageDead(_985)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb592__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb593__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left" balign="left">StorageDead(_961)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb594__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left" balign="left">StorageDead(_952)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb595__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left" balign="left">StorageDead(_941)<br/>StorageDead(_940)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb596__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">596</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb597__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">597</td></tr><tr><td align="left" balign="left">StorageDead(_879)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb598__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">598</td></tr><tr><td align="left" balign="left">StorageDead(_870)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb599__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">599</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb600__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">600</td></tr><tr><td align="left" balign="left">StorageDead(_843)<br/>StorageDead(_841)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb601__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">601</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/></td></tr><tr><td align="left">switchInt(_1442)</td></tr></table>>];
    bb602__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">602</td></tr><tr><td align="left" balign="left">_1442 = const false<br/>StorageDead(_819)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb603__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">603</td></tr><tr><td align="left" balign="left">StorageDead(_809)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb604__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">604</td></tr><tr><td align="left" balign="left">StorageDead(_779)<br/>StorageDead(_777)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb605__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">605</td></tr><tr><td align="left" balign="left">StorageDead(_754)<br/>StorageDead(_752)<br/>StorageDead(_751)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb606__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">606</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb607__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">607</td></tr><tr><td align="left" balign="left">StorageDead(_721)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb608__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">608</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/>StorageDead(_486)<br/>StorageDead(_485)<br/>StorageDead(_484)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb609__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">609</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb610__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">610</td></tr><tr><td align="left" balign="left">StorageDead(_534)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb611__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">611</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb612__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">612</td></tr><tr><td align="left">drop(_489)</td></tr></table>>];
    bb613__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">613</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb614__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">614</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb615__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">615</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb616__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">616</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb617__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">617</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb618__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">618</td></tr><tr><td align="left">drop(_313)</td></tr></table>>];
    bb619__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">619</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_312)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb620__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">620</td></tr><tr><td align="left" balign="left">_1445 = const false<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb621__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">621</td></tr><tr><td align="left" balign="left">_1446 = const false<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb622__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">622</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb623__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">623</td></tr><tr><td align="left">return</td></tr></table>>];
    bb624__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">624 (cleanup)</td></tr><tr><td align="left">drop(_1386)</td></tr></table>>];
    bb625__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">625 (cleanup)</td></tr><tr><td align="left">drop(_1349)</td></tr></table>>];
    bb626__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">626 (cleanup)</td></tr><tr><td align="left">drop(_1311)</td></tr></table>>];
    bb627__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">627 (cleanup)</td></tr><tr><td align="left">drop(_1274)</td></tr></table>>];
    bb628__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">628 (cleanup)</td></tr><tr><td align="left">drop(_1236)</td></tr></table>>];
    bb629__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">629 (cleanup)</td></tr><tr><td align="left">drop(_1217)</td></tr></table>>];
    bb630__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">630 (cleanup)</td></tr><tr><td align="left">drop(_1173)</td></tr></table>>];
    bb631__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">631 (cleanup)</td></tr><tr><td align="left">drop(_1154)</td></tr></table>>];
    bb632__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">632 (cleanup)</td></tr><tr><td align="left">drop(_1118)</td></tr></table>>];
    bb633__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">633 (cleanup)</td></tr><tr><td align="left">drop(_1096)</td></tr></table>>];
    bb634__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">634 (cleanup)</td></tr><tr><td align="left">drop(_1074)</td></tr></table>>];
    bb635__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">635 (cleanup)</td></tr><tr><td align="left">drop(_1052)</td></tr></table>>];
    bb636__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">636 (cleanup)</td></tr><tr><td align="left">drop(_919)</td></tr></table>>];
    bb637__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">637 (cleanup)</td></tr><tr><td align="left">drop(_922)</td></tr></table>>];
    bb638__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">638 (cleanup)</td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb639__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">639 (cleanup)</td></tr><tr><td align="left">drop(_932)</td></tr></table>>];
    bb640__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">640 (cleanup)</td></tr><tr><td align="left">drop(_794)</td></tr></table>>];
    bb641__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">641 (cleanup)</td></tr><tr><td align="left">drop(_762)</td></tr></table>>];
    bb642__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">642 (cleanup)</td></tr><tr><td align="left">drop(_698)</td></tr></table>>];
    bb643__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">643 (cleanup)</td></tr><tr><td align="left">drop(_679)</td></tr></table>>];
    bb644__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">644 (cleanup)</td></tr><tr><td align="left">drop(_625)</td></tr></table>>];
    bb645__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">645 (cleanup)</td></tr><tr><td align="left">drop(_606)</td></tr></table>>];
    bb646__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">646 (cleanup)</td></tr><tr><td align="left">drop(_558)</td></tr></table>>];
    bb647__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">647 (cleanup)</td></tr><tr><td align="left">drop(_489)</td></tr></table>>];
    bb648__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">648 (cleanup)</td></tr><tr><td align="left">drop(_449)</td></tr></table>>];
    bb649__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">649 (cleanup)</td></tr><tr><td align="left">drop(_430)</td></tr></table>>];
    bb650__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">650 (cleanup)</td></tr><tr><td align="left">drop(_382)</td></tr></table>>];
    bb651__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">651 (cleanup)</td></tr><tr><td align="left">drop(_313)</td></tr></table>>];
    bb652__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">652 (cleanup)</td></tr><tr><td align="left">drop(_275)</td></tr></table>>];
    bb653__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">653 (cleanup)</td></tr><tr><td align="left">drop(_256)</td></tr></table>>];
    bb654__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">654 (cleanup)</td></tr><tr><td align="left">drop(_219)</td></tr></table>>];
    bb655__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">655 (cleanup)</td></tr><tr><td align="left">drop(_200)</td></tr></table>>];
    bb656__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">656 (cleanup)</td></tr><tr><td align="left">drop(_154)</td></tr></table>>];
    bb657__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">657 (cleanup)</td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb658__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">658 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb659__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">659 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb660__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">660 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb661__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">661 (cleanup)</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb662__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">662 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb663__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">663</td></tr><tr><td align="left" balign="left">_1467 = discriminant(_1275)<br/>StorageDead(_1279)<br/>_1444 = const false<br/>StorageDead(_1275)<br/>StorageDead(_1274)<br/>StorageDead(_1272)<br/>StorageDead(_1263)<br/>StorageDead(_1260)<br/>StorageLive(_1300)<br/>StorageLive(_1301)<br/>StorageLive(_1302)<br/>StorageLive(_1303)<br/>_1303 = _1259<br/></td></tr><tr><td align="left">switchInt(move _1303)</td></tr></table>>];
    bb664__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">664</td></tr><tr><td align="left" balign="left">_1469 = discriminant(_1350)<br/>StorageDead(_1354)<br/>_1443 = const false<br/>StorageDead(_1350)<br/>StorageDead(_1349)<br/>StorageDead(_1347)<br/>StorageDead(_1338)<br/>StorageDead(_1335)<br/>StorageLive(_1375)<br/>StorageLive(_1376)<br/>StorageLive(_1377)<br/>StorageLive(_1378)<br/>_1378 = _1334<br/></td></tr><tr><td align="left">switchInt(move _1378)</td></tr></table>>];
    bb665__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">665</td></tr><tr><td align="left">drop(_819)</td></tr></table>>];
    bb666__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">666</td></tr><tr><td align="left" balign="left">_1471 = discriminant(_1350)<br/>StorageDead(_1354)<br/>_1443 = const false<br/>StorageDead(_1350)<br/>StorageDead(_1349)<br/>StorageDead(_1347)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb667__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">667</td></tr><tr><td align="left" balign="left">_1473 = discriminant(_1275)<br/>StorageDead(_1279)<br/>_1444 = const false<br/>StorageDead(_1275)<br/>StorageDead(_1274)<br/>StorageDead(_1272)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb668__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">668</td></tr><tr><td align="left">drop(_819)</td></tr></table>>];
    bb669__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">669</td></tr><tr><td align="left">drop(_174)</td></tr></table>>];
    bb670__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">670</td></tr><tr><td align="left">switchInt(_1445)</td></tr></table>>];
    bb671__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">671</td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb672__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">672</td></tr><tr><td align="left">switchInt(_1446)</td></tr></table>>];
    bb673__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">673 (cleanup)</td></tr><tr><td align="left" balign="left">_1475 = discriminant(_1350)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb674__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">674 (cleanup)</td></tr><tr><td align="left" balign="left">_1476 = discriminant(_1275)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb675__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">675 (cleanup)</td></tr><tr><td align="left">drop(_819)</td></tr></table>>];
    bb676__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">676 (cleanup)</td></tr><tr><td align="left">switchInt(_1442)</td></tr></table>>];
    bb677__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">677 (cleanup)</td></tr><tr><td align="left" balign="left">_1477 = discriminant(_820)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb678__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">678 (cleanup)</td></tr><tr><td align="left" balign="left">_1478 = discriminant(_490)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb679__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">679 (cleanup)</td></tr><tr><td align="left" balign="left">_1479 = discriminant(_314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb680__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">680 (cleanup)</td></tr><tr><td align="left">drop(_174)</td></tr></table>>];
    bb681__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">681 (cleanup)</td></tr><tr><td align="left">switchInt(_1445)</td></tr></table>>];
    bb682__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">682 (cleanup)</td></tr><tr><td align="left" balign="left">_1480 = discriminant(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb683__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">683 (cleanup)</td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb684__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">684 (cleanup)</td></tr><tr><td align="left">switchInt(_1446)</td></tr></table>>];
    bb685__0_340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">685 (cleanup)</td></tr><tr><td align="left" balign="left">_1481 = discriminant(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_340 -> bb1__0_340 [label="return"];
    bb1__0_340 -> bb3__0_340 [label="0"];
    bb1__0_340 -> bb2__0_340 [label="otherwise"];
    bb2__0_340 -> bb4__0_340 [label="return"];
    bb3__0_340 -> bb15__0_340 [label=""];
    bb4__0_340 -> bb5__0_340 [label="return"];
    bb5__0_340 -> bb6__0_340 [label="return"];
    bb6__0_340 -> bb7__0_340 [label="return"];
    bb6__0_340 -> bb661__0_340 [label="unwind"];
    bb7__0_340 -> bb8__0_340 [label="return"];
    bb7__0_340 -> bb661__0_340 [label="unwind"];
    bb8__0_340 -> bb9__0_340 [label="return"];
    bb8__0_340 -> bb662__0_340 [label="unwind"];
    bb9__0_340 -> bb10__0_340 [label="return"];
    bb10__0_340 -> bb11__0_340 [label="return"];
    bb11__0_340 -> bb12__0_340 [label="return"];
    bb11__0_340 -> bb660__0_340 [label="unwind"];
    bb12__0_340 -> bb13__0_340 [label="return"];
    bb12__0_340 -> bb660__0_340 [label="unwind"];
    bb13__0_340 -> bb14__0_340 [label="return"];
    bb13__0_340 -> bb662__0_340 [label="unwind"];
    bb14__0_340 -> bb15__0_340 [label=""];
    bb15__0_340 -> bb16__0_340 [label="return"];
    bb16__0_340 -> bb17__0_340 [label="0"];
    bb16__0_340 -> bb19__0_340 [label="1"];
    bb16__0_340 -> bb18__0_340 [label="otherwise"];
    bb17__0_340 -> bb21__0_340 [label="return"];
    bb19__0_340 -> bb20__0_340 [label="return"];
    bb20__0_340 -> bb622__0_340 [label=""];
    bb21__0_340 -> bb23__0_340 [label="0"];
    bb21__0_340 -> bb22__0_340 [label="otherwise"];
    bb22__0_340 -> bb24__0_340 [label="return"];
    bb23__0_340 -> bb35__0_340 [label=""];
    bb24__0_340 -> bb25__0_340 [label="return"];
    bb25__0_340 -> bb26__0_340 [label="return"];
    bb26__0_340 -> bb27__0_340 [label="return"];
    bb26__0_340 -> bb659__0_340 [label="unwind"];
    bb27__0_340 -> bb28__0_340 [label="return"];
    bb27__0_340 -> bb659__0_340 [label="unwind"];
    bb28__0_340 -> bb29__0_340 [label="return"];
    bb28__0_340 -> bb662__0_340 [label="unwind"];
    bb29__0_340 -> bb30__0_340 [label="return"];
    bb30__0_340 -> bb31__0_340 [label="return"];
    bb31__0_340 -> bb32__0_340 [label="return"];
    bb31__0_340 -> bb658__0_340 [label="unwind"];
    bb32__0_340 -> bb33__0_340 [label="return"];
    bb32__0_340 -> bb658__0_340 [label="unwind"];
    bb33__0_340 -> bb34__0_340 [label="return"];
    bb33__0_340 -> bb662__0_340 [label="unwind"];
    bb34__0_340 -> bb35__0_340 [label=""];
    bb35__0_340 -> bb36__0_340 [label="return"];
    bb36__0_340 -> bb37__0_340 [label="0"];
    bb36__0_340 -> bb38__0_340 [label="1"];
    bb36__0_340 -> bb18__0_340 [label="otherwise"];
    bb37__0_340 -> bb40__0_340 [label="return"];
    bb38__0_340 -> bb39__0_340 [label="return"];
    bb39__0_340 -> bb622__0_340 [label=""];
    bb40__0_340 -> bb41__0_340 [label="return"];
    bb40__0_340 -> bb662__0_340 [label="unwind"];
    bb41__0_340 -> bb42__0_340 [label="0"];
    bb41__0_340 -> bb43__0_340 [label="1"];
    bb41__0_340 -> bb18__0_340 [label="otherwise"];
    bb42__0_340 -> bb45__0_340 [label="return"];
    bb42__0_340 -> bb684__0_340 [label="unwind"];
    bb43__0_340 -> bb44__0_340 [label="return"];
    bb43__0_340 -> bb685__0_340 [label="unwind"];
    bb44__0_340 -> bb621__0_340 [label=""];
    bb45__0_340 -> bb46__0_340 [label="return"];
    bb45__0_340 -> bb684__0_340 [label="unwind"];
    bb46__0_340 -> bb48__0_340 [label="0"];
    bb46__0_340 -> bb47__0_340 [label="otherwise"];
    bb47__0_340 -> bb49__0_340 [label="return"];
    bb47__0_340 -> bb684__0_340 [label="unwind"];
    bb48__0_340 -> bb61__0_340 [label=""];
    bb49__0_340 -> bb50__0_340 [label="return"];
    bb49__0_340 -> bb684__0_340 [label="unwind"];
    bb50__0_340 -> bb51__0_340 [label="return"];
    bb50__0_340 -> bb684__0_340 [label="unwind"];
    bb51__0_340 -> bb52__0_340 [label="return"];
    bb51__0_340 -> bb657__0_340 [label="unwind"];
    bb52__0_340 -> bb53__0_340 [label="return"];
    bb52__0_340 -> bb657__0_340 [label="unwind"];
    bb53__0_340 -> bb54__0_340 [label="return"];
    bb53__0_340 -> bb684__0_340 [label="unwind"];
    bb54__0_340 -> bb55__0_340 [label="return"];
    bb54__0_340 -> bb684__0_340 [label="unwind"];
    bb55__0_340 -> bb56__0_340 [label="return"];
    bb55__0_340 -> bb684__0_340 [label="unwind"];
    bb56__0_340 -> bb57__0_340 [label="return"];
    bb56__0_340 -> bb684__0_340 [label="unwind"];
    bb57__0_340 -> bb58__0_340 [label="return"];
    bb57__0_340 -> bb656__0_340 [label="unwind"];
    bb58__0_340 -> bb59__0_340 [label="return"];
    bb58__0_340 -> bb656__0_340 [label="unwind"];
    bb59__0_340 -> bb60__0_340 [label="return"];
    bb59__0_340 -> bb684__0_340 [label="unwind"];
    bb60__0_340 -> bb61__0_340 [label=""];
    bb61__0_340 -> bb62__0_340 [label="return"];
    bb61__0_340 -> bb684__0_340 [label="unwind"];
    bb62__0_340 -> bb63__0_340 [label="0"];
    bb62__0_340 -> bb64__0_340 [label="1"];
    bb62__0_340 -> bb18__0_340 [label="otherwise"];
    bb63__0_340 -> bb66__0_340 [label="return"];
    bb63__0_340 -> bb684__0_340 [label="unwind"];
    bb64__0_340 -> bb65__0_340 [label="return"];
    bb64__0_340 -> bb684__0_340 [label="unwind"];
    bb65__0_340 -> bb672__0_340 [label=""];
    bb66__0_340 -> bb67__0_340 [label="return"];
    bb66__0_340 -> bb684__0_340 [label="unwind"];
    bb67__0_340 -> bb68__0_340 [label="0"];
    bb67__0_340 -> bb69__0_340 [label="1"];
    bb67__0_340 -> bb18__0_340 [label="otherwise"];
    bb68__0_340 -> bb71__0_340 [label="return"];
    bb68__0_340 -> bb681__0_340 [label="unwind"];
    bb69__0_340 -> bb70__0_340 [label="return"];
    bb69__0_340 -> bb682__0_340 [label="unwind"];
    bb70__0_340 -> bb620__0_340 [label=""];
    bb71__0_340 -> bb72__0_340 [label="return"];
    bb71__0_340 -> bb681__0_340 [label="unwind"];
    bb72__0_340 -> bb74__0_340 [label="0"];
    bb72__0_340 -> bb73__0_340 [label="otherwise"];
    bb73__0_340 -> bb75__0_340 [label="return"];
    bb73__0_340 -> bb681__0_340 [label="unwind"];
    bb74__0_340 -> bb87__0_340 [label=""];
    bb75__0_340 -> bb76__0_340 [label="return"];
    bb75__0_340 -> bb681__0_340 [label="unwind"];
    bb76__0_340 -> bb77__0_340 [label="return"];
    bb76__0_340 -> bb681__0_340 [label="unwind"];
    bb77__0_340 -> bb78__0_340 [label="return"];
    bb77__0_340 -> bb655__0_340 [label="unwind"];
    bb78__0_340 -> bb79__0_340 [label="return"];
    bb78__0_340 -> bb655__0_340 [label="unwind"];
    bb79__0_340 -> bb80__0_340 [label="return"];
    bb79__0_340 -> bb681__0_340 [label="unwind"];
    bb80__0_340 -> bb81__0_340 [label="return"];
    bb80__0_340 -> bb681__0_340 [label="unwind"];
    bb81__0_340 -> bb82__0_340 [label="return"];
    bb81__0_340 -> bb681__0_340 [label="unwind"];
    bb82__0_340 -> bb83__0_340 [label="return"];
    bb82__0_340 -> bb681__0_340 [label="unwind"];
    bb83__0_340 -> bb84__0_340 [label="return"];
    bb83__0_340 -> bb654__0_340 [label="unwind"];
    bb84__0_340 -> bb85__0_340 [label="return"];
    bb84__0_340 -> bb654__0_340 [label="unwind"];
    bb85__0_340 -> bb86__0_340 [label="return"];
    bb85__0_340 -> bb681__0_340 [label="unwind"];
    bb86__0_340 -> bb87__0_340 [label=""];
    bb87__0_340 -> bb88__0_340 [label="return"];
    bb87__0_340 -> bb681__0_340 [label="unwind"];
    bb88__0_340 -> bb89__0_340 [label="0"];
    bb88__0_340 -> bb90__0_340 [label="1"];
    bb88__0_340 -> bb18__0_340 [label="otherwise"];
    bb89__0_340 -> bb92__0_340 [label="return"];
    bb89__0_340 -> bb681__0_340 [label="unwind"];
    bb90__0_340 -> bb91__0_340 [label="return"];
    bb90__0_340 -> bb681__0_340 [label="unwind"];
    bb91__0_340 -> bb670__0_340 [label=""];
    bb92__0_340 -> bb93__0_340 [label="return"];
    bb92__0_340 -> bb681__0_340 [label="unwind"];
    bb93__0_340 -> bb95__0_340 [label="0"];
    bb93__0_340 -> bb94__0_340 [label="otherwise"];
    bb94__0_340 -> bb111__0_340 [label=""];
    bb95__0_340 -> bb96__0_340 [label="return"];
    bb95__0_340 -> bb681__0_340 [label="unwind"];
    bb96__0_340 -> bb97__0_340 [label="return"];
    bb96__0_340 -> bb681__0_340 [label="unwind"];
    bb97__0_340 -> bb98__0_340 [label="return"];
    bb97__0_340 -> bb681__0_340 [label="unwind"];
    bb98__0_340 -> bb99__0_340 [label="return"];
    bb98__0_340 -> bb653__0_340 [label="unwind"];
    bb99__0_340 -> bb100__0_340 [label="return"];
    bb99__0_340 -> bb653__0_340 [label="unwind"];
    bb100__0_340 -> bb101__0_340 [label="return"];
    bb100__0_340 -> bb681__0_340 [label="unwind"];
    bb101__0_340 -> bb102__0_340 [label="return"];
    bb101__0_340 -> bb681__0_340 [label="unwind"];
    bb102__0_340 -> bb103__0_340 [label="return"];
    bb102__0_340 -> bb681__0_340 [label="unwind"];
    bb103__0_340 -> bb104__0_340 [label="return"];
    bb103__0_340 -> bb681__0_340 [label="unwind"];
    bb104__0_340 -> bb105__0_340 [label="return"];
    bb104__0_340 -> bb681__0_340 [label="unwind"];
    bb105__0_340 -> bb106__0_340 [label="return"];
    bb105__0_340 -> bb681__0_340 [label="unwind"];
    bb106__0_340 -> bb107__0_340 [label="return"];
    bb106__0_340 -> bb681__0_340 [label="unwind"];
    bb107__0_340 -> bb108__0_340 [label="return"];
    bb107__0_340 -> bb652__0_340 [label="unwind"];
    bb108__0_340 -> bb109__0_340 [label="return"];
    bb108__0_340 -> bb652__0_340 [label="unwind"];
    bb109__0_340 -> bb110__0_340 [label="return"];
    bb109__0_340 -> bb681__0_340 [label="unwind"];
    bb110__0_340 -> bb111__0_340 [label=""];
    bb111__0_340 -> bb112__0_340 [label="return"];
    bb111__0_340 -> bb681__0_340 [label="unwind"];
    bb112__0_340 -> bb113__0_340 [label="0"];
    bb112__0_340 -> bb114__0_340 [label="1"];
    bb112__0_340 -> bb18__0_340 [label="otherwise"];
    bb113__0_340 -> bb116__0_340 [label="return"];
    bb113__0_340 -> bb681__0_340 [label="unwind"];
    bb114__0_340 -> bb115__0_340 [label="return"];
    bb114__0_340 -> bb681__0_340 [label="unwind"];
    bb115__0_340 -> bb670__0_340 [label=""];
    bb116__0_340 -> bb117__0_340 [label="return"];
    bb116__0_340 -> bb681__0_340 [label="unwind"];
    bb117__0_340 -> bb118__0_340 [label="return"];
    bb117__0_340 -> bb681__0_340 [label="unwind"];
    bb118__0_340 -> bb119__0_340 [label="return"];
    bb118__0_340 -> bb681__0_340 [label="unwind"];
    bb119__0_340 -> bb120__0_340 [label="0"];
    bb119__0_340 -> bb121__0_340 [label="1"];
    bb119__0_340 -> bb18__0_340 [label="otherwise"];
    bb120__0_340 -> bb123__0_340 [label="return"];
    bb120__0_340 -> bb651__0_340 [label="unwind"];
    bb121__0_340 -> bb122__0_340 [label="return"];
    bb121__0_340 -> bb679__0_340 [label="unwind"];
    bb122__0_340 -> bb619__0_340 [label=""];
    bb123__0_340 -> bb124__0_340 [label="return"];
    bb123__0_340 -> bb651__0_340 [label="unwind"];
    bb124__0_340 -> bb125__0_340 [label="return"];
    bb124__0_340 -> bb651__0_340 [label="unwind"];
    bb125__0_340 -> bb126__0_340 [label="return"];
    bb125__0_340 -> bb651__0_340 [label="unwind"];
    bb126__0_340 -> bb127__0_340 [label="0"];
    bb126__0_340 -> bb128__0_340 [label="1"];
    bb126__0_340 -> bb18__0_340 [label="otherwise"];
    bb127__0_340 -> bb130__0_340 [label="return"];
    bb127__0_340 -> bb651__0_340 [label="unwind"];
    bb128__0_340 -> bb129__0_340 [label="return"];
    bb128__0_340 -> bb651__0_340 [label="unwind"];
    bb129__0_340 -> bb618__0_340 [label=""];
    bb130__0_340 -> bb131__0_340 [label="return"];
    bb130__0_340 -> bb651__0_340 [label="unwind"];
    bb131__0_340 -> bb132__0_340 [label="return"];
    bb131__0_340 -> bb651__0_340 [label="unwind"];
    bb132__0_340 -> bb133__0_340 [label="0"];
    bb132__0_340 -> bb134__0_340 [label="1"];
    bb132__0_340 -> bb18__0_340 [label="otherwise"];
    bb133__0_340 -> bb136__0_340 [label="return"];
    bb133__0_340 -> bb651__0_340 [label="unwind"];
    bb134__0_340 -> bb135__0_340 [label="return"];
    bb134__0_340 -> bb651__0_340 [label="unwind"];
    bb135__0_340 -> bb617__0_340 [label=""];
    bb136__0_340 -> bb137__0_340 [label="return"];
    bb136__0_340 -> bb651__0_340 [label="unwind"];
    bb137__0_340 -> bb138__0_340 [label="0"];
    bb137__0_340 -> bb139__0_340 [label="1"];
    bb137__0_340 -> bb18__0_340 [label="otherwise"];
    bb138__0_340 -> bb141__0_340 [label="return"];
    bb138__0_340 -> bb651__0_340 [label="unwind"];
    bb139__0_340 -> bb140__0_340 [label="return"];
    bb139__0_340 -> bb651__0_340 [label="unwind"];
    bb140__0_340 -> bb616__0_340 [label=""];
    bb141__0_340 -> bb143__0_340 [label="0"];
    bb141__0_340 -> bb142__0_340 [label="otherwise"];
    bb142__0_340 -> bb151__0_340 [label=""];
    bb143__0_340 -> bb144__0_340 [label="return"];
    bb143__0_340 -> bb651__0_340 [label="unwind"];
    bb144__0_340 -> bb145__0_340 [label="return"];
    bb144__0_340 -> bb651__0_340 [label="unwind"];
    bb145__0_340 -> bb146__0_340 [label="return"];
    bb145__0_340 -> bb651__0_340 [label="unwind"];
    bb146__0_340 -> bb147__0_340 [label="return"];
    bb146__0_340 -> bb650__0_340 [label="unwind"];
    bb147__0_340 -> bb148__0_340 [label="return"];
    bb147__0_340 -> bb650__0_340 [label="unwind"];
    bb148__0_340 -> bb149__0_340 [label="return"];
    bb148__0_340 -> bb651__0_340 [label="unwind"];
    bb149__0_340 -> bb150__0_340 [label="return"];
    bb149__0_340 -> bb651__0_340 [label="unwind"];
    bb150__0_340 -> bb151__0_340 [label=""];
    bb151__0_340 -> bb152__0_340 [label="return"];
    bb151__0_340 -> bb651__0_340 [label="unwind"];
    bb152__0_340 -> bb153__0_340 [label="0"];
    bb152__0_340 -> bb154__0_340 [label="1"];
    bb152__0_340 -> bb18__0_340 [label="otherwise"];
    bb153__0_340 -> bb156__0_340 [label="return"];
    bb153__0_340 -> bb651__0_340 [label="unwind"];
    bb154__0_340 -> bb155__0_340 [label="return"];
    bb154__0_340 -> bb651__0_340 [label="unwind"];
    bb155__0_340 -> bb616__0_340 [label=""];
    bb156__0_340 -> bb157__0_340 [label="return"];
    bb156__0_340 -> bb651__0_340 [label="unwind"];
    bb157__0_340 -> bb158__0_340 [label="return"];
    bb157__0_340 -> bb651__0_340 [label="unwind"];
    bb158__0_340 -> bb159__0_340 [label="0"];
    bb158__0_340 -> bb160__0_340 [label="1"];
    bb158__0_340 -> bb18__0_340 [label="otherwise"];
    bb159__0_340 -> bb163__0_340 [label="0"];
    bb159__0_340 -> bb162__0_340 [label="otherwise"];
    bb160__0_340 -> bb161__0_340 [label="return"];
    bb160__0_340 -> bb651__0_340 [label="unwind"];
    bb161__0_340 -> bb615__0_340 [label=""];
    bb162__0_340 -> bb176__0_340 [label=""];
    bb163__0_340 -> bb164__0_340 [label="return"];
    bb163__0_340 -> bb651__0_340 [label="unwind"];
    bb164__0_340 -> bb165__0_340 [label="return"];
    bb164__0_340 -> bb651__0_340 [label="unwind"];
    bb165__0_340 -> bb166__0_340 [label="return"];
    bb165__0_340 -> bb651__0_340 [label="unwind"];
    bb166__0_340 -> bb167__0_340 [label="return"];
    bb166__0_340 -> bb649__0_340 [label="unwind"];
    bb167__0_340 -> bb168__0_340 [label="return"];
    bb167__0_340 -> bb649__0_340 [label="unwind"];
    bb168__0_340 -> bb169__0_340 [label="return"];
    bb168__0_340 -> bb651__0_340 [label="unwind"];
    bb169__0_340 -> bb170__0_340 [label="return"];
    bb169__0_340 -> bb651__0_340 [label="unwind"];
    bb170__0_340 -> bb171__0_340 [label="return"];
    bb170__0_340 -> bb651__0_340 [label="unwind"];
    bb171__0_340 -> bb172__0_340 [label="return"];
    bb171__0_340 -> bb651__0_340 [label="unwind"];
    bb172__0_340 -> bb173__0_340 [label="return"];
    bb172__0_340 -> bb648__0_340 [label="unwind"];
    bb173__0_340 -> bb174__0_340 [label="return"];
    bb173__0_340 -> bb648__0_340 [label="unwind"];
    bb174__0_340 -> bb175__0_340 [label="return"];
    bb174__0_340 -> bb651__0_340 [label="unwind"];
    bb175__0_340 -> bb176__0_340 [label=""];
    bb176__0_340 -> bb177__0_340 [label="return"];
    bb176__0_340 -> bb651__0_340 [label="unwind"];
    bb177__0_340 -> bb178__0_340 [label="0"];
    bb177__0_340 -> bb179__0_340 [label="1"];
    bb177__0_340 -> bb18__0_340 [label="otherwise"];
    bb178__0_340 -> bb181__0_340 [label="return"];
    bb178__0_340 -> bb651__0_340 [label="unwind"];
    bb179__0_340 -> bb180__0_340 [label="return"];
    bb179__0_340 -> bb651__0_340 [label="unwind"];
    bb180__0_340 -> bb615__0_340 [label=""];
    bb181__0_340 -> bb182__0_340 [label="return"];
    bb181__0_340 -> bb651__0_340 [label="unwind"];
    bb182__0_340 -> bb183__0_340 [label="return"];
    bb182__0_340 -> bb651__0_340 [label="unwind"];
    bb183__0_340 -> bb184__0_340 [label="return"];
    bb183__0_340 -> bb681__0_340 [label="unwind"];
    bb184__0_340 -> bb185__0_340 [label="return"];
    bb184__0_340 -> bb681__0_340 [label="unwind"];
    bb185__0_340 -> bb186__0_340 [label="return"];
    bb185__0_340 -> bb681__0_340 [label="unwind"];
    bb186__0_340 -> bb187__0_340 [label="0"];
    bb186__0_340 -> bb188__0_340 [label="1"];
    bb186__0_340 -> bb18__0_340 [label="otherwise"];
    bb187__0_340 -> bb190__0_340 [label="return"];
    bb187__0_340 -> bb647__0_340 [label="unwind"];
    bb188__0_340 -> bb189__0_340 [label="return"];
    bb188__0_340 -> bb678__0_340 [label="unwind"];
    bb189__0_340 -> bb613__0_340 [label=""];
    bb190__0_340 -> bb191__0_340 [label="return"];
    bb190__0_340 -> bb647__0_340 [label="unwind"];
    bb191__0_340 -> bb192__0_340 [label="return"];
    bb191__0_340 -> bb647__0_340 [label="unwind"];
    bb192__0_340 -> bb193__0_340 [label="return"];
    bb192__0_340 -> bb647__0_340 [label="unwind"];
    bb193__0_340 -> bb194__0_340 [label="0"];
    bb193__0_340 -> bb195__0_340 [label="1"];
    bb193__0_340 -> bb18__0_340 [label="otherwise"];
    bb194__0_340 -> bb197__0_340 [label="return"];
    bb194__0_340 -> bb647__0_340 [label="unwind"];
    bb195__0_340 -> bb196__0_340 [label="return"];
    bb195__0_340 -> bb647__0_340 [label="unwind"];
    bb196__0_340 -> bb612__0_340 [label=""];
    bb197__0_340 -> bb198__0_340 [label="return"];
    bb197__0_340 -> bb647__0_340 [label="unwind"];
    bb198__0_340 -> bb199__0_340 [label="return"];
    bb198__0_340 -> bb647__0_340 [label="unwind"];
    bb199__0_340 -> bb200__0_340 [label="0"];
    bb199__0_340 -> bb201__0_340 [label="1"];
    bb199__0_340 -> bb18__0_340 [label="otherwise"];
    bb200__0_340 -> bb203__0_340 [label="return"];
    bb200__0_340 -> bb647__0_340 [label="unwind"];
    bb201__0_340 -> bb202__0_340 [label="return"];
    bb201__0_340 -> bb647__0_340 [label="unwind"];
    bb202__0_340 -> bb611__0_340 [label=""];
    bb203__0_340 -> bb204__0_340 [label="return"];
    bb203__0_340 -> bb647__0_340 [label="unwind"];
    bb204__0_340 -> bb205__0_340 [label="0"];
    bb204__0_340 -> bb206__0_340 [label="1"];
    bb204__0_340 -> bb18__0_340 [label="otherwise"];
    bb205__0_340 -> bb208__0_340 [label="return"];
    bb205__0_340 -> bb647__0_340 [label="unwind"];
    bb206__0_340 -> bb207__0_340 [label="return"];
    bb206__0_340 -> bb647__0_340 [label="unwind"];
    bb207__0_340 -> bb610__0_340 [label=""];
    bb208__0_340 -> bb210__0_340 [label="0"];
    bb208__0_340 -> bb209__0_340 [label="otherwise"];
    bb209__0_340 -> bb218__0_340 [label=""];
    bb210__0_340 -> bb211__0_340 [label="return"];
    bb210__0_340 -> bb647__0_340 [label="unwind"];
    bb211__0_340 -> bb212__0_340 [label="return"];
    bb211__0_340 -> bb647__0_340 [label="unwind"];
    bb212__0_340 -> bb213__0_340 [label="return"];
    bb212__0_340 -> bb647__0_340 [label="unwind"];
    bb213__0_340 -> bb214__0_340 [label="return"];
    bb213__0_340 -> bb646__0_340 [label="unwind"];
    bb214__0_340 -> bb215__0_340 [label="return"];
    bb214__0_340 -> bb646__0_340 [label="unwind"];
    bb215__0_340 -> bb216__0_340 [label="return"];
    bb215__0_340 -> bb647__0_340 [label="unwind"];
    bb216__0_340 -> bb217__0_340 [label="return"];
    bb216__0_340 -> bb647__0_340 [label="unwind"];
    bb217__0_340 -> bb218__0_340 [label=""];
    bb218__0_340 -> bb219__0_340 [label="return"];
    bb218__0_340 -> bb647__0_340 [label="unwind"];
    bb219__0_340 -> bb220__0_340 [label="0"];
    bb219__0_340 -> bb221__0_340 [label="1"];
    bb219__0_340 -> bb18__0_340 [label="otherwise"];
    bb220__0_340 -> bb223__0_340 [label="return"];
    bb220__0_340 -> bb647__0_340 [label="unwind"];
    bb221__0_340 -> bb222__0_340 [label="return"];
    bb221__0_340 -> bb647__0_340 [label="unwind"];
    bb222__0_340 -> bb610__0_340 [label=""];
    bb223__0_340 -> bb224__0_340 [label="return"];
    bb223__0_340 -> bb647__0_340 [label="unwind"];
    bb224__0_340 -> bb225__0_340 [label="return"];
    bb224__0_340 -> bb647__0_340 [label="unwind"];
    bb225__0_340 -> bb226__0_340 [label="0"];
    bb225__0_340 -> bb227__0_340 [label="1"];
    bb225__0_340 -> bb18__0_340 [label="otherwise"];
    bb226__0_340 -> bb230__0_340 [label="0"];
    bb226__0_340 -> bb229__0_340 [label="otherwise"];
    bb227__0_340 -> bb228__0_340 [label="return"];
    bb227__0_340 -> bb647__0_340 [label="unwind"];
    bb228__0_340 -> bb609__0_340 [label=""];
    bb229__0_340 -> bb243__0_340 [label=""];
    bb230__0_340 -> bb231__0_340 [label="return"];
    bb230__0_340 -> bb647__0_340 [label="unwind"];
    bb231__0_340 -> bb232__0_340 [label="return"];
    bb231__0_340 -> bb647__0_340 [label="unwind"];
    bb232__0_340 -> bb233__0_340 [label="return"];
    bb232__0_340 -> bb647__0_340 [label="unwind"];
    bb233__0_340 -> bb234__0_340 [label="return"];
    bb233__0_340 -> bb645__0_340 [label="unwind"];
    bb234__0_340 -> bb235__0_340 [label="return"];
    bb234__0_340 -> bb645__0_340 [label="unwind"];
    bb235__0_340 -> bb236__0_340 [label="return"];
    bb235__0_340 -> bb647__0_340 [label="unwind"];
    bb236__0_340 -> bb237__0_340 [label="return"];
    bb236__0_340 -> bb647__0_340 [label="unwind"];
    bb237__0_340 -> bb238__0_340 [label="return"];
    bb237__0_340 -> bb647__0_340 [label="unwind"];
    bb238__0_340 -> bb239__0_340 [label="return"];
    bb238__0_340 -> bb647__0_340 [label="unwind"];
    bb239__0_340 -> bb240__0_340 [label="return"];
    bb239__0_340 -> bb644__0_340 [label="unwind"];
    bb240__0_340 -> bb241__0_340 [label="return"];
    bb240__0_340 -> bb644__0_340 [label="unwind"];
    bb241__0_340 -> bb242__0_340 [label="return"];
    bb241__0_340 -> bb647__0_340 [label="unwind"];
    bb242__0_340 -> bb243__0_340 [label=""];
    bb243__0_340 -> bb244__0_340 [label="return"];
    bb243__0_340 -> bb647__0_340 [label="unwind"];
    bb244__0_340 -> bb245__0_340 [label="0"];
    bb244__0_340 -> bb246__0_340 [label="1"];
    bb244__0_340 -> bb18__0_340 [label="otherwise"];
    bb245__0_340 -> bb248__0_340 [label="return"];
    bb245__0_340 -> bb647__0_340 [label="unwind"];
    bb246__0_340 -> bb247__0_340 [label="return"];
    bb246__0_340 -> bb647__0_340 [label="unwind"];
    bb247__0_340 -> bb609__0_340 [label=""];
    bb248__0_340 -> bb249__0_340 [label="return"];
    bb248__0_340 -> bb647__0_340 [label="unwind"];
    bb249__0_340 -> bb250__0_340 [label="return"];
    bb249__0_340 -> bb647__0_340 [label="unwind"];
    bb250__0_340 -> bb251__0_340 [label="return"];
    bb250__0_340 -> bb647__0_340 [label="unwind"];
    bb251__0_340 -> bb252__0_340 [label="return"];
    bb251__0_340 -> bb681__0_340 [label="unwind"];
    bb252__0_340 -> bb279__0_340 [label="0"];
    bb252__0_340 -> bb253__0_340 [label="otherwise"];
    bb253__0_340 -> bb278__0_340 [label="0"];
    bb253__0_340 -> bb254__0_340 [label="otherwise"];
    bb254__0_340 -> bb258__0_340 [label="0"];
    bb254__0_340 -> bb255__0_340 [label="otherwise"];
    bb255__0_340 -> bb257__0_340 [label="0"];
    bb255__0_340 -> bb256__0_340 [label="otherwise"];
    bb256__0_340 -> bb273__0_340 [label=""];
    bb257__0_340 -> bb259__0_340 [label=""];
    bb258__0_340 -> bb259__0_340 [label=""];
    bb259__0_340 -> bb260__0_340 [label="return"];
    bb259__0_340 -> bb681__0_340 [label="unwind"];
    bb260__0_340 -> bb261__0_340 [label="return"];
    bb260__0_340 -> bb681__0_340 [label="unwind"];
    bb261__0_340 -> bb262__0_340 [label="return"];
    bb261__0_340 -> bb681__0_340 [label="unwind"];
    bb262__0_340 -> bb263__0_340 [label="return"];
    bb262__0_340 -> bb643__0_340 [label="unwind"];
    bb263__0_340 -> bb264__0_340 [label="return"];
    bb263__0_340 -> bb643__0_340 [label="unwind"];
    bb264__0_340 -> bb265__0_340 [label="return"];
    bb264__0_340 -> bb681__0_340 [label="unwind"];
    bb265__0_340 -> bb266__0_340 [label="return"];
    bb265__0_340 -> bb681__0_340 [label="unwind"];
    bb266__0_340 -> bb267__0_340 [label="return"];
    bb266__0_340 -> bb681__0_340 [label="unwind"];
    bb267__0_340 -> bb268__0_340 [label="return"];
    bb267__0_340 -> bb681__0_340 [label="unwind"];
    bb268__0_340 -> bb269__0_340 [label="return"];
    bb268__0_340 -> bb681__0_340 [label="unwind"];
    bb269__0_340 -> bb270__0_340 [label="return"];
    bb269__0_340 -> bb642__0_340 [label="unwind"];
    bb270__0_340 -> bb271__0_340 [label="return"];
    bb270__0_340 -> bb642__0_340 [label="unwind"];
    bb271__0_340 -> bb272__0_340 [label="return"];
    bb271__0_340 -> bb681__0_340 [label="unwind"];
    bb272__0_340 -> bb273__0_340 [label=""];
    bb273__0_340 -> bb274__0_340 [label="return"];
    bb273__0_340 -> bb681__0_340 [label="unwind"];
    bb274__0_340 -> bb275__0_340 [label="0"];
    bb274__0_340 -> bb276__0_340 [label="1"];
    bb274__0_340 -> bb18__0_340 [label="otherwise"];
    bb275__0_340 -> bb281__0_340 [label=""];
    bb276__0_340 -> bb277__0_340 [label="return"];
    bb276__0_340 -> bb681__0_340 [label="unwind"];
    bb277__0_340 -> bb608__0_340 [label=""];
    bb278__0_340 -> bb280__0_340 [label=""];
    bb279__0_340 -> bb280__0_340 [label=""];
    bb280__0_340 -> bb281__0_340 [label=""];
    bb281__0_340 -> bb282__0_340 [label="return"];
    bb281__0_340 -> bb681__0_340 [label="unwind"];
    bb282__0_340 -> bb283__0_340 [label="return"];
    bb282__0_340 -> bb681__0_340 [label="unwind"];
    bb283__0_340 -> bb284__0_340 [label="return"];
    bb283__0_340 -> bb681__0_340 [label="unwind"];
    bb284__0_340 -> bb285__0_340 [label="return"];
    bb284__0_340 -> bb681__0_340 [label="unwind"];
    bb285__0_340 -> bb286__0_340 [label="0"];
    bb285__0_340 -> bb287__0_340 [label="1"];
    bb285__0_340 -> bb18__0_340 [label="otherwise"];
    bb286__0_340 -> bb289__0_340 [label="return"];
    bb286__0_340 -> bb681__0_340 [label="unwind"];
    bb287__0_340 -> bb288__0_340 [label="return"];
    bb287__0_340 -> bb681__0_340 [label="unwind"];
    bb288__0_340 -> bb607__0_340 [label=""];
    bb289__0_340 -> bb290__0_340 [label="return"];
    bb289__0_340 -> bb681__0_340 [label="unwind"];
    bb290__0_340 -> bb291__0_340 [label="return"];
    bb290__0_340 -> bb681__0_340 [label="unwind"];
    bb291__0_340 -> bb292__0_340 [label="0"];
    bb291__0_340 -> bb293__0_340 [label="1"];
    bb291__0_340 -> bb18__0_340 [label="otherwise"];
    bb292__0_340 -> bb295__0_340 [label="return"];
    bb292__0_340 -> bb681__0_340 [label="unwind"];
    bb293__0_340 -> bb294__0_340 [label="return"];
    bb293__0_340 -> bb681__0_340 [label="unwind"];
    bb294__0_340 -> bb606__0_340 [label=""];
    bb295__0_340 -> bb297__0_340 [label="0"];
    bb295__0_340 -> bb296__0_340 [label="otherwise"];
    bb296__0_340 -> bb307__0_340 [label=""];
    bb297__0_340 -> bb298__0_340 [label="return"];
    bb297__0_340 -> bb681__0_340 [label="unwind"];
    bb298__0_340 -> bb306__0_340 [label="0"];
    bb298__0_340 -> bb299__0_340 [label="otherwise"];
    bb299__0_340 -> bb300__0_340 [label="return"];
    bb299__0_340 -> bb681__0_340 [label="unwind"];
    bb300__0_340 -> bb301__0_340 [label="return"];
    bb300__0_340 -> bb681__0_340 [label="unwind"];
    bb301__0_340 -> bb302__0_340 [label="return"];
    bb301__0_340 -> bb681__0_340 [label="unwind"];
    bb302__0_340 -> bb303__0_340 [label="return"];
    bb302__0_340 -> bb641__0_340 [label="unwind"];
    bb303__0_340 -> bb304__0_340 [label="return"];
    bb303__0_340 -> bb641__0_340 [label="unwind"];
    bb304__0_340 -> bb305__0_340 [label="return"];
    bb304__0_340 -> bb681__0_340 [label="unwind"];
    bb305__0_340 -> bb605__0_340 [label=""];
    bb306__0_340 -> bb307__0_340 [label=""];
    bb307__0_340 -> bb308__0_340 [label="return"];
    bb307__0_340 -> bb681__0_340 [label="unwind"];
    bb308__0_340 -> bb323__0_340 [label="0"];
    bb308__0_340 -> bb309__0_340 [label="otherwise"];
    bb309__0_340 -> bb310__0_340 [label="return"];
    bb309__0_340 -> bb681__0_340 [label="unwind"];
    bb310__0_340 -> bb311__0_340 [label="return"];
    bb310__0_340 -> bb681__0_340 [label="unwind"];
    bb311__0_340 -> bb312__0_340 [label="0"];
    bb311__0_340 -> bb313__0_340 [label="1"];
    bb311__0_340 -> bb18__0_340 [label="otherwise"];
    bb312__0_340 -> bb316__0_340 [label="0"];
    bb312__0_340 -> bb315__0_340 [label="otherwise"];
    bb313__0_340 -> bb314__0_340 [label="return"];
    bb313__0_340 -> bb681__0_340 [label="unwind"];
    bb314__0_340 -> bb604__0_340 [label=""];
    bb315__0_340 -> bb317__0_340 [label="return"];
    bb315__0_340 -> bb681__0_340 [label="unwind"];
    bb316__0_340 -> bb324__0_340 [label=""];
    bb317__0_340 -> bb318__0_340 [label="return"];
    bb317__0_340 -> bb681__0_340 [label="unwind"];
    bb318__0_340 -> bb319__0_340 [label="return"];
    bb318__0_340 -> bb681__0_340 [label="unwind"];
    bb319__0_340 -> bb320__0_340 [label="return"];
    bb319__0_340 -> bb640__0_340 [label="unwind"];
    bb320__0_340 -> bb321__0_340 [label="return"];
    bb320__0_340 -> bb640__0_340 [label="unwind"];
    bb321__0_340 -> bb322__0_340 [label="return"];
    bb321__0_340 -> bb681__0_340 [label="unwind"];
    bb322__0_340 -> bb604__0_340 [label=""];
    bb323__0_340 -> bb324__0_340 [label=""];
    bb324__0_340 -> bb325__0_340 [label="return"];
    bb324__0_340 -> bb681__0_340 [label="unwind"];
    bb325__0_340 -> bb326__0_340 [label="return"];
    bb325__0_340 -> bb681__0_340 [label="unwind"];
    bb326__0_340 -> bb327__0_340 [label="0"];
    bb326__0_340 -> bb328__0_340 [label="1"];
    bb326__0_340 -> bb18__0_340 [label="otherwise"];
    bb327__0_340 -> bb330__0_340 [label="return"];
    bb327__0_340 -> bb681__0_340 [label="unwind"];
    bb328__0_340 -> bb329__0_340 [label="return"];
    bb328__0_340 -> bb681__0_340 [label="unwind"];
    bb329__0_340 -> bb603__0_340 [label=""];
    bb330__0_340 -> bb331__0_340 [label="return"];
    bb330__0_340 -> bb681__0_340 [label="unwind"];
    bb331__0_340 -> bb332__0_340 [label="0"];
    bb331__0_340 -> bb333__0_340 [label="1"];
    bb331__0_340 -> bb18__0_340 [label="otherwise"];
    bb332__0_340 -> bb335__0_340 [label="return"];
    bb332__0_340 -> bb676__0_340 [label="unwind"];
    bb333__0_340 -> bb334__0_340 [label="return"];
    bb333__0_340 -> bb677__0_340 [label="unwind"];
    bb334__0_340 -> bb602__0_340 [label=""];
    bb335__0_340 -> bb337__0_340 [label="0"];
    bb335__0_340 -> bb336__0_340 [label="otherwise"];
    bb336__0_340 -> bb387__0_340 [label=""];
    bb337__0_340 -> bb338__0_340 [label="return"];
    bb337__0_340 -> bb676__0_340 [label="unwind"];
    bb338__0_340 -> bb339__0_340 [label="return"];
    bb338__0_340 -> bb676__0_340 [label="unwind"];
    bb339__0_340 -> bb340__0_340 [label="return"];
    bb339__0_340 -> bb676__0_340 [label="unwind"];
    bb340__0_340 -> bb341__0_340 [label="return"];
    bb340__0_340 -> bb676__0_340 [label="unwind"];
    bb341__0_340 -> bb342__0_340 [label="0"];
    bb341__0_340 -> bb343__0_340 [label="1"];
    bb341__0_340 -> bb18__0_340 [label="otherwise"];
    bb342__0_340 -> bb345__0_340 [label="return"];
    bb342__0_340 -> bb676__0_340 [label="unwind"];
    bb343__0_340 -> bb344__0_340 [label="return"];
    bb343__0_340 -> bb676__0_340 [label="unwind"];
    bb344__0_340 -> bb599__0_340 [label=""];
    bb345__0_340 -> bb346__0_340 [label="return"];
    bb345__0_340 -> bb676__0_340 [label="unwind"];
    bb346__0_340 -> bb347__0_340 [label="return"];
    bb346__0_340 -> bb676__0_340 [label="unwind"];
    bb347__0_340 -> bb348__0_340 [label="0"];
    bb347__0_340 -> bb349__0_340 [label="1"];
    bb347__0_340 -> bb18__0_340 [label="otherwise"];
    bb348__0_340 -> bb351__0_340 [label="return"];
    bb348__0_340 -> bb676__0_340 [label="unwind"];
    bb349__0_340 -> bb350__0_340 [label="return"];
    bb349__0_340 -> bb676__0_340 [label="unwind"];
    bb350__0_340 -> bb599__0_340 [label=""];
    bb351__0_340 -> bb352__0_340 [label="return"];
    bb351__0_340 -> bb676__0_340 [label="unwind"];
    bb352__0_340 -> bb353__0_340 [label="0"];
    bb352__0_340 -> bb354__0_340 [label="1"];
    bb352__0_340 -> bb18__0_340 [label="otherwise"];
    bb353__0_340 -> bb356__0_340 [label="return"];
    bb353__0_340 -> bb676__0_340 [label="unwind"];
    bb354__0_340 -> bb355__0_340 [label="return"];
    bb354__0_340 -> bb676__0_340 [label="unwind"];
    bb355__0_340 -> bb598__0_340 [label=""];
    bb356__0_340 -> bb357__0_340 [label="return"];
    bb356__0_340 -> bb676__0_340 [label="unwind"];
    bb357__0_340 -> bb358__0_340 [label="0"];
    bb357__0_340 -> bb359__0_340 [label="1"];
    bb357__0_340 -> bb18__0_340 [label="otherwise"];
    bb358__0_340 -> bb361__0_340 [label="return"];
    bb358__0_340 -> bb676__0_340 [label="unwind"];
    bb359__0_340 -> bb360__0_340 [label="return"];
    bb359__0_340 -> bb676__0_340 [label="unwind"];
    bb360__0_340 -> bb597__0_340 [label=""];
    bb361__0_340 -> bb362__0_340 [label="return"];
    bb361__0_340 -> bb676__0_340 [label="unwind"];
    bb362__0_340 -> bb363__0_340 [label="return"];
    bb362__0_340 -> bb676__0_340 [label="unwind"];
    bb363__0_340 -> bb364__0_340 [label="0"];
    bb363__0_340 -> bb365__0_340 [label="1"];
    bb363__0_340 -> bb18__0_340 [label="otherwise"];
    bb364__0_340 -> bb367__0_340 [label="return"];
    bb364__0_340 -> bb676__0_340 [label="unwind"];
    bb365__0_340 -> bb366__0_340 [label="return"];
    bb365__0_340 -> bb676__0_340 [label="unwind"];
    bb366__0_340 -> bb596__0_340 [label=""];
    bb367__0_340 -> bb368__0_340 [label="return"];
    bb367__0_340 -> bb676__0_340 [label="unwind"];
    bb368__0_340 -> bb369__0_340 [label="0"];
    bb368__0_340 -> bb370__0_340 [label="1"];
    bb368__0_340 -> bb18__0_340 [label="otherwise"];
    bb369__0_340 -> bb372__0_340 [label="return"];
    bb369__0_340 -> bb676__0_340 [label="unwind"];
    bb370__0_340 -> bb371__0_340 [label="return"];
    bb370__0_340 -> bb676__0_340 [label="unwind"];
    bb371__0_340 -> bb596__0_340 [label=""];
    bb372__0_340 -> bb373__0_340 [label="return"];
    bb372__0_340 -> bb639__0_340 [label="unwind"];
    bb373__0_340 -> bb374__0_340 [label="return"];
    bb373__0_340 -> bb637__0_340 [label="unwind"];
    bb374__0_340 -> bb375__0_340 [label="return"];
    bb374__0_340 -> bb636__0_340 [label="unwind"];
    bb375__0_340 -> bb376__0_340 [label="return"];
    bb375__0_340 -> bb636__0_340 [label="unwind"];
    bb376__0_340 -> bb377__0_340 [label="return"];
    bb376__0_340 -> bb637__0_340 [label="unwind"];
    bb377__0_340 -> bb378__0_340 [label="return"];
    bb377__0_340 -> bb638__0_340 [label="unwind"];
    bb378__0_340 -> bb379__0_340 [label="return"];
    bb378__0_340 -> bb676__0_340 [label="unwind"];
    bb379__0_340 -> bb380__0_340 [label="return"];
    bb379__0_340 -> bb676__0_340 [label="unwind"];
    bb380__0_340 -> bb381__0_340 [label="return"];
    bb380__0_340 -> bb676__0_340 [label="unwind"];
    bb381__0_340 -> bb382__0_340 [label="0"];
    bb381__0_340 -> bb383__0_340 [label="1"];
    bb381__0_340 -> bb18__0_340 [label="otherwise"];
    bb382__0_340 -> bb386__0_340 [label="0"];
    bb382__0_340 -> bb385__0_340 [label="otherwise"];
    bb383__0_340 -> bb384__0_340 [label="return"];
    bb383__0_340 -> bb676__0_340 [label="unwind"];
    bb384__0_340 -> bb595__0_340 [label=""];
    bb385__0_340 -> bb595__0_340 [label=""];
    bb386__0_340 -> bb387__0_340 [label=""];
    bb387__0_340 -> bb388__0_340 [label="return"];
    bb387__0_340 -> bb676__0_340 [label="unwind"];
    bb388__0_340 -> bb389__0_340 [label="return"];
    bb388__0_340 -> bb676__0_340 [label="unwind"];
    bb389__0_340 -> bb390__0_340 [label="0"];
    bb389__0_340 -> bb391__0_340 [label="1"];
    bb389__0_340 -> bb18__0_340 [label="otherwise"];
    bb390__0_340 -> bb393__0_340 [label="return"];
    bb390__0_340 -> bb676__0_340 [label="unwind"];
    bb391__0_340 -> bb392__0_340 [label="return"];
    bb391__0_340 -> bb676__0_340 [label="unwind"];
    bb392__0_340 -> bb594__0_340 [label=""];
    bb393__0_340 -> bb394__0_340 [label="return"];
    bb393__0_340 -> bb676__0_340 [label="unwind"];
    bb394__0_340 -> bb395__0_340 [label="0"];
    bb394__0_340 -> bb396__0_340 [label="1"];
    bb394__0_340 -> bb18__0_340 [label="otherwise"];
    bb395__0_340 -> bb398__0_340 [label="return"];
    bb395__0_340 -> bb676__0_340 [label="unwind"];
    bb396__0_340 -> bb397__0_340 [label="return"];
    bb396__0_340 -> bb676__0_340 [label="unwind"];
    bb397__0_340 -> bb593__0_340 [label=""];
    bb398__0_340 -> bb399__0_340 [label="return"];
    bb398__0_340 -> bb676__0_340 [label="unwind"];
    bb399__0_340 -> bb400__0_340 [label="0"];
    bb399__0_340 -> bb401__0_340 [label="1"];
    bb399__0_340 -> bb18__0_340 [label="otherwise"];
    bb400__0_340 -> bb403__0_340 [label="return"];
    bb400__0_340 -> bb676__0_340 [label="unwind"];
    bb401__0_340 -> bb402__0_340 [label="return"];
    bb401__0_340 -> bb676__0_340 [label="unwind"];
    bb402__0_340 -> bb592__0_340 [label=""];
    bb403__0_340 -> bb404__0_340 [label="return"];
    bb403__0_340 -> bb676__0_340 [label="unwind"];
    bb404__0_340 -> bb405__0_340 [label="0"];
    bb404__0_340 -> bb406__0_340 [label="1"];
    bb404__0_340 -> bb18__0_340 [label="otherwise"];
    bb405__0_340 -> bb408__0_340 [label="return"];
    bb405__0_340 -> bb676__0_340 [label="unwind"];
    bb406__0_340 -> bb407__0_340 [label="return"];
    bb406__0_340 -> bb676__0_340 [label="unwind"];
    bb407__0_340 -> bb591__0_340 [label=""];
    bb408__0_340 -> bb409__0_340 [label="return"];
    bb408__0_340 -> bb676__0_340 [label="unwind"];
    bb409__0_340 -> bb410__0_340 [label="return"];
    bb409__0_340 -> bb676__0_340 [label="unwind"];
    bb410__0_340 -> bb411__0_340 [label="0"];
    bb410__0_340 -> bb412__0_340 [label="1"];
    bb410__0_340 -> bb18__0_340 [label="otherwise"];
    bb411__0_340 -> bb415__0_340 [label="0"];
    bb411__0_340 -> bb414__0_340 [label="otherwise"];
    bb412__0_340 -> bb413__0_340 [label="return"];
    bb412__0_340 -> bb676__0_340 [label="unwind"];
    bb413__0_340 -> bb590__0_340 [label=""];
    bb414__0_340 -> bb416__0_340 [label="return"];
    bb414__0_340 -> bb676__0_340 [label="unwind"];
    bb415__0_340 -> bb417__0_340 [label="return"];
    bb415__0_340 -> bb676__0_340 [label="unwind"];
    bb416__0_340 -> bb590__0_340 [label=""];
    bb417__0_340 -> bb418__0_340 [label="return"];
    bb417__0_340 -> bb676__0_340 [label="unwind"];
    bb418__0_340 -> bb419__0_340 [label="0"];
    bb418__0_340 -> bb420__0_340 [label="1"];
    bb418__0_340 -> bb18__0_340 [label="otherwise"];
    bb419__0_340 -> bb422__0_340 [label="success"];
    bb419__0_340 -> bb676__0_340 [label="unwind"];
    bb420__0_340 -> bb421__0_340 [label="return"];
    bb420__0_340 -> bb676__0_340 [label="unwind"];
    bb421__0_340 -> bb589__0_340 [label=""];
    bb422__0_340 -> bb423__0_340 [label="return"];
    bb422__0_340 -> bb676__0_340 [label="unwind"];
    bb423__0_340 -> bb424__0_340 [label="return"];
    bb423__0_340 -> bb676__0_340 [label="unwind"];
    bb424__0_340 -> bb425__0_340 [label="0"];
    bb424__0_340 -> bb426__0_340 [label="1"];
    bb424__0_340 -> bb18__0_340 [label="otherwise"];
    bb425__0_340 -> bb429__0_340 [label="0"];
    bb425__0_340 -> bb428__0_340 [label="otherwise"];
    bb426__0_340 -> bb427__0_340 [label="return"];
    bb426__0_340 -> bb676__0_340 [label="unwind"];
    bb427__0_340 -> bb588__0_340 [label=""];
    bb428__0_340 -> bb430__0_340 [label="return"];
    bb428__0_340 -> bb676__0_340 [label="unwind"];
    bb429__0_340 -> bb457__0_340 [label="return"];
    bb429__0_340 -> bb676__0_340 [label="unwind"];
    bb430__0_340 -> bb431__0_340 [label="return"];
    bb430__0_340 -> bb676__0_340 [label="unwind"];
    bb431__0_340 -> bb432__0_340 [label="return"];
    bb431__0_340 -> bb676__0_340 [label="unwind"];
    bb432__0_340 -> bb433__0_340 [label="return"];
    bb432__0_340 -> bb676__0_340 [label="unwind"];
    bb433__0_340 -> bb434__0_340 [label="return"];
    bb433__0_340 -> bb635__0_340 [label="unwind"];
    bb434__0_340 -> bb435__0_340 [label="return"];
    bb434__0_340 -> bb635__0_340 [label="unwind"];
    bb435__0_340 -> bb436__0_340 [label="return"];
    bb435__0_340 -> bb676__0_340 [label="unwind"];
    bb436__0_340 -> bb437__0_340 [label="return"];
    bb436__0_340 -> bb676__0_340 [label="unwind"];
    bb437__0_340 -> bb438__0_340 [label="return"];
    bb437__0_340 -> bb676__0_340 [label="unwind"];
    bb438__0_340 -> bb439__0_340 [label="return"];
    bb438__0_340 -> bb676__0_340 [label="unwind"];
    bb439__0_340 -> bb440__0_340 [label="return"];
    bb439__0_340 -> bb676__0_340 [label="unwind"];
    bb440__0_340 -> bb441__0_340 [label="return"];
    bb440__0_340 -> bb634__0_340 [label="unwind"];
    bb441__0_340 -> bb442__0_340 [label="return"];
    bb441__0_340 -> bb634__0_340 [label="unwind"];
    bb442__0_340 -> bb443__0_340 [label="return"];
    bb442__0_340 -> bb676__0_340 [label="unwind"];
    bb443__0_340 -> bb444__0_340 [label="return"];
    bb443__0_340 -> bb676__0_340 [label="unwind"];
    bb444__0_340 -> bb445__0_340 [label="return"];
    bb444__0_340 -> bb676__0_340 [label="unwind"];
    bb445__0_340 -> bb446__0_340 [label="return"];
    bb445__0_340 -> bb676__0_340 [label="unwind"];
    bb446__0_340 -> bb447__0_340 [label="return"];
    bb446__0_340 -> bb676__0_340 [label="unwind"];
    bb447__0_340 -> bb448__0_340 [label="return"];
    bb447__0_340 -> bb633__0_340 [label="unwind"];
    bb448__0_340 -> bb449__0_340 [label="return"];
    bb448__0_340 -> bb633__0_340 [label="unwind"];
    bb449__0_340 -> bb450__0_340 [label="return"];
    bb449__0_340 -> bb676__0_340 [label="unwind"];
    bb450__0_340 -> bb451__0_340 [label="return"];
    bb450__0_340 -> bb676__0_340 [label="unwind"];
    bb451__0_340 -> bb452__0_340 [label="return"];
    bb451__0_340 -> bb676__0_340 [label="unwind"];
    bb452__0_340 -> bb453__0_340 [label="return"];
    bb452__0_340 -> bb676__0_340 [label="unwind"];
    bb453__0_340 -> bb454__0_340 [label="return"];
    bb453__0_340 -> bb632__0_340 [label="unwind"];
    bb454__0_340 -> bb455__0_340 [label="return"];
    bb454__0_340 -> bb632__0_340 [label="unwind"];
    bb455__0_340 -> bb456__0_340 [label="return"];
    bb455__0_340 -> bb676__0_340 [label="unwind"];
    bb456__0_340 -> bb588__0_340 [label=""];
    bb457__0_340 -> bb458__0_340 [label="return"];
    bb457__0_340 -> bb676__0_340 [label="unwind"];
    bb458__0_340 -> bb459__0_340 [label="0"];
    bb458__0_340 -> bb460__0_340 [label="1"];
    bb458__0_340 -> bb18__0_340 [label="otherwise"];
    bb459__0_340 -> bb463__0_340 [label="0"];
    bb459__0_340 -> bb462__0_340 [label="otherwise"];
    bb460__0_340 -> bb461__0_340 [label="return"];
    bb460__0_340 -> bb676__0_340 [label="unwind"];
    bb461__0_340 -> bb587__0_340 [label=""];
    bb462__0_340 -> bb477__0_340 [label=""];
    bb463__0_340 -> bb464__0_340 [label="return"];
    bb463__0_340 -> bb676__0_340 [label="unwind"];
    bb464__0_340 -> bb465__0_340 [label="return"];
    bb464__0_340 -> bb676__0_340 [label="unwind"];
    bb465__0_340 -> bb466__0_340 [label="return"];
    bb465__0_340 -> bb676__0_340 [label="unwind"];
    bb466__0_340 -> bb467__0_340 [label="return"];
    bb466__0_340 -> bb631__0_340 [label="unwind"];
    bb467__0_340 -> bb468__0_340 [label="return"];
    bb467__0_340 -> bb631__0_340 [label="unwind"];
    bb468__0_340 -> bb469__0_340 [label="return"];
    bb468__0_340 -> bb676__0_340 [label="unwind"];
    bb469__0_340 -> bb470__0_340 [label="return"];
    bb469__0_340 -> bb676__0_340 [label="unwind"];
    bb470__0_340 -> bb471__0_340 [label="return"];
    bb470__0_340 -> bb676__0_340 [label="unwind"];
    bb471__0_340 -> bb472__0_340 [label="return"];
    bb471__0_340 -> bb676__0_340 [label="unwind"];
    bb472__0_340 -> bb473__0_340 [label="return"];
    bb472__0_340 -> bb676__0_340 [label="unwind"];
    bb473__0_340 -> bb474__0_340 [label="return"];
    bb473__0_340 -> bb630__0_340 [label="unwind"];
    bb474__0_340 -> bb475__0_340 [label="return"];
    bb474__0_340 -> bb630__0_340 [label="unwind"];
    bb475__0_340 -> bb476__0_340 [label="return"];
    bb475__0_340 -> bb676__0_340 [label="unwind"];
    bb476__0_340 -> bb477__0_340 [label=""];
    bb477__0_340 -> bb478__0_340 [label="return"];
    bb477__0_340 -> bb676__0_340 [label="unwind"];
    bb478__0_340 -> bb479__0_340 [label="0"];
    bb478__0_340 -> bb480__0_340 [label="1"];
    bb478__0_340 -> bb18__0_340 [label="otherwise"];
    bb479__0_340 -> bb482__0_340 [label="return"];
    bb479__0_340 -> bb676__0_340 [label="unwind"];
    bb480__0_340 -> bb481__0_340 [label="return"];
    bb480__0_340 -> bb676__0_340 [label="unwind"];
    bb481__0_340 -> bb587__0_340 [label=""];
    bb482__0_340 -> bb483__0_340 [label="return"];
    bb482__0_340 -> bb676__0_340 [label="unwind"];
    bb483__0_340 -> bb484__0_340 [label="0"];
    bb483__0_340 -> bb485__0_340 [label="1"];
    bb483__0_340 -> bb18__0_340 [label="otherwise"];
    bb484__0_340 -> bb488__0_340 [label="0"];
    bb484__0_340 -> bb487__0_340 [label="otherwise"];
    bb485__0_340 -> bb486__0_340 [label="return"];
    bb485__0_340 -> bb676__0_340 [label="unwind"];
    bb486__0_340 -> bb586__0_340 [label=""];
    bb487__0_340 -> bb502__0_340 [label=""];
    bb488__0_340 -> bb489__0_340 [label="return"];
    bb488__0_340 -> bb676__0_340 [label="unwind"];
    bb489__0_340 -> bb490__0_340 [label="return"];
    bb489__0_340 -> bb676__0_340 [label="unwind"];
    bb490__0_340 -> bb491__0_340 [label="return"];
    bb490__0_340 -> bb676__0_340 [label="unwind"];
    bb491__0_340 -> bb492__0_340 [label="return"];
    bb491__0_340 -> bb629__0_340 [label="unwind"];
    bb492__0_340 -> bb493__0_340 [label="return"];
    bb492__0_340 -> bb629__0_340 [label="unwind"];
    bb493__0_340 -> bb494__0_340 [label="return"];
    bb493__0_340 -> bb676__0_340 [label="unwind"];
    bb494__0_340 -> bb495__0_340 [label="return"];
    bb494__0_340 -> bb676__0_340 [label="unwind"];
    bb495__0_340 -> bb496__0_340 [label="return"];
    bb495__0_340 -> bb676__0_340 [label="unwind"];
    bb496__0_340 -> bb497__0_340 [label="return"];
    bb496__0_340 -> bb676__0_340 [label="unwind"];
    bb497__0_340 -> bb498__0_340 [label="return"];
    bb497__0_340 -> bb676__0_340 [label="unwind"];
    bb498__0_340 -> bb499__0_340 [label="return"];
    bb498__0_340 -> bb628__0_340 [label="unwind"];
    bb499__0_340 -> bb500__0_340 [label="return"];
    bb499__0_340 -> bb628__0_340 [label="unwind"];
    bb500__0_340 -> bb501__0_340 [label="return"];
    bb500__0_340 -> bb676__0_340 [label="unwind"];
    bb501__0_340 -> bb502__0_340 [label=""];
    bb502__0_340 -> bb503__0_340 [label="return"];
    bb502__0_340 -> bb676__0_340 [label="unwind"];
    bb503__0_340 -> bb504__0_340 [label="0"];
    bb503__0_340 -> bb505__0_340 [label="1"];
    bb503__0_340 -> bb18__0_340 [label="otherwise"];
    bb504__0_340 -> bb507__0_340 [label="return"];
    bb504__0_340 -> bb676__0_340 [label="unwind"];
    bb505__0_340 -> bb506__0_340 [label="return"];
    bb505__0_340 -> bb676__0_340 [label="unwind"];
    bb506__0_340 -> bb586__0_340 [label=""];
    bb507__0_340 -> bb508__0_340 [label="return"];
    bb507__0_340 -> bb676__0_340 [label="unwind"];
    bb508__0_340 -> bb509__0_340 [label="0"];
    bb508__0_340 -> bb510__0_340 [label="1"];
    bb508__0_340 -> bb18__0_340 [label="otherwise"];
    bb509__0_340 -> bb512__0_340 [label="return"];
    bb509__0_340 -> bb676__0_340 [label="unwind"];
    bb510__0_340 -> bb511__0_340 [label="return"];
    bb510__0_340 -> bb676__0_340 [label="unwind"];
    bb511__0_340 -> bb584__0_340 [label=""];
    bb512__0_340 -> bb513__0_340 [label="return"];
    bb512__0_340 -> bb676__0_340 [label="unwind"];
    bb513__0_340 -> bb514__0_340 [label="0"];
    bb513__0_340 -> bb515__0_340 [label="1"];
    bb513__0_340 -> bb18__0_340 [label="otherwise"];
    bb514__0_340 -> bb517__0_340 [label="return"];
    bb514__0_340 -> bb627__0_340 [label="unwind"];
    bb515__0_340 -> bb516__0_340 [label="return"];
    bb515__0_340 -> bb674__0_340 [label="unwind"];
    bb516__0_340 -> bb667__0_340 [label=""];
    bb517__0_340 -> bb518__0_340 [label="return"];
    bb517__0_340 -> bb627__0_340 [label="unwind"];
    bb518__0_340 -> bb519__0_340 [label="return"];
    bb518__0_340 -> bb627__0_340 [label="unwind"];
    bb519__0_340 -> bb520__0_340 [label="return"];
    bb519__0_340 -> bb627__0_340 [label="unwind"];
    bb520__0_340 -> bb521__0_340 [label="0"];
    bb520__0_340 -> bb522__0_340 [label="1"];
    bb520__0_340 -> bb18__0_340 [label="otherwise"];
    bb521__0_340 -> bb524__0_340 [label="return"];
    bb521__0_340 -> bb627__0_340 [label="unwind"];
    bb522__0_340 -> bb523__0_340 [label="return"];
    bb522__0_340 -> bb627__0_340 [label="unwind"];
    bb523__0_340 -> bb583__0_340 [label=""];
    bb524__0_340 -> bb525__0_340 [label="return"];
    bb524__0_340 -> bb627__0_340 [label="unwind"];
    bb525__0_340 -> bb526__0_340 [label="0"];
    bb525__0_340 -> bb527__0_340 [label="1"];
    bb525__0_340 -> bb18__0_340 [label="otherwise"];
    bb526__0_340 -> bb663__0_340 [label="return"];
    bb526__0_340 -> bb674__0_340 [label="unwind"];
    bb527__0_340 -> bb528__0_340 [label="return"];
    bb527__0_340 -> bb627__0_340 [label="unwind"];
    bb528__0_340 -> bb583__0_340 [label=""];
    bb529__0_340 -> bb538__0_340 [label=""];
    bb530__0_340 -> bb531__0_340 [label="return"];
    bb530__0_340 -> bb676__0_340 [label="unwind"];
    bb531__0_340 -> bb532__0_340 [label="return"];
    bb531__0_340 -> bb676__0_340 [label="unwind"];
    bb532__0_340 -> bb533__0_340 [label="return"];
    bb532__0_340 -> bb676__0_340 [label="unwind"];
    bb533__0_340 -> bb534__0_340 [label="return"];
    bb533__0_340 -> bb626__0_340 [label="unwind"];
    bb534__0_340 -> bb535__0_340 [label="return"];
    bb534__0_340 -> bb626__0_340 [label="unwind"];
    bb535__0_340 -> bb536__0_340 [label="return"];
    bb535__0_340 -> bb676__0_340 [label="unwind"];
    bb536__0_340 -> bb537__0_340 [label="return"];
    bb536__0_340 -> bb676__0_340 [label="unwind"];
    bb537__0_340 -> bb538__0_340 [label=""];
    bb538__0_340 -> bb539__0_340 [label="return"];
    bb538__0_340 -> bb676__0_340 [label="unwind"];
    bb539__0_340 -> bb540__0_340 [label="0"];
    bb539__0_340 -> bb541__0_340 [label="1"];
    bb539__0_340 -> bb18__0_340 [label="otherwise"];
    bb540__0_340 -> bb543__0_340 [label="return"];
    bb540__0_340 -> bb676__0_340 [label="unwind"];
    bb541__0_340 -> bb542__0_340 [label="return"];
    bb541__0_340 -> bb676__0_340 [label="unwind"];
    bb542__0_340 -> bb585__0_340 [label=""];
    bb543__0_340 -> bb544__0_340 [label="return"];
    bb543__0_340 -> bb676__0_340 [label="unwind"];
    bb544__0_340 -> bb545__0_340 [label="0"];
    bb544__0_340 -> bb546__0_340 [label="1"];
    bb544__0_340 -> bb18__0_340 [label="otherwise"];
    bb545__0_340 -> bb548__0_340 [label="return"];
    bb545__0_340 -> bb676__0_340 [label="unwind"];
    bb546__0_340 -> bb547__0_340 [label="return"];
    bb546__0_340 -> bb676__0_340 [label="unwind"];
    bb547__0_340 -> bb581__0_340 [label=""];
    bb548__0_340 -> bb549__0_340 [label="return"];
    bb548__0_340 -> bb676__0_340 [label="unwind"];
    bb549__0_340 -> bb550__0_340 [label="0"];
    bb549__0_340 -> bb551__0_340 [label="1"];
    bb549__0_340 -> bb18__0_340 [label="otherwise"];
    bb550__0_340 -> bb553__0_340 [label="return"];
    bb550__0_340 -> bb625__0_340 [label="unwind"];
    bb551__0_340 -> bb552__0_340 [label="return"];
    bb551__0_340 -> bb673__0_340 [label="unwind"];
    bb552__0_340 -> bb666__0_340 [label=""];
    bb553__0_340 -> bb554__0_340 [label="return"];
    bb553__0_340 -> bb625__0_340 [label="unwind"];
    bb554__0_340 -> bb555__0_340 [label="return"];
    bb554__0_340 -> bb625__0_340 [label="unwind"];
    bb555__0_340 -> bb556__0_340 [label="return"];
    bb555__0_340 -> bb625__0_340 [label="unwind"];
    bb556__0_340 -> bb557__0_340 [label="0"];
    bb556__0_340 -> bb558__0_340 [label="1"];
    bb556__0_340 -> bb18__0_340 [label="otherwise"];
    bb557__0_340 -> bb560__0_340 [label="return"];
    bb557__0_340 -> bb625__0_340 [label="unwind"];
    bb558__0_340 -> bb559__0_340 [label="return"];
    bb558__0_340 -> bb625__0_340 [label="unwind"];
    bb559__0_340 -> bb580__0_340 [label=""];
    bb560__0_340 -> bb561__0_340 [label="return"];
    bb560__0_340 -> bb625__0_340 [label="unwind"];
    bb561__0_340 -> bb562__0_340 [label="0"];
    bb561__0_340 -> bb563__0_340 [label="1"];
    bb561__0_340 -> bb18__0_340 [label="otherwise"];
    bb562__0_340 -> bb664__0_340 [label="return"];
    bb562__0_340 -> bb673__0_340 [label="unwind"];
    bb563__0_340 -> bb564__0_340 [label="return"];
    bb563__0_340 -> bb625__0_340 [label="unwind"];
    bb564__0_340 -> bb580__0_340 [label=""];
    bb565__0_340 -> bb574__0_340 [label=""];
    bb566__0_340 -> bb567__0_340 [label="return"];
    bb566__0_340 -> bb676__0_340 [label="unwind"];
    bb567__0_340 -> bb568__0_340 [label="return"];
    bb567__0_340 -> bb676__0_340 [label="unwind"];
    bb568__0_340 -> bb569__0_340 [label="return"];
    bb568__0_340 -> bb676__0_340 [label="unwind"];
    bb569__0_340 -> bb570__0_340 [label="return"];
    bb569__0_340 -> bb624__0_340 [label="unwind"];
    bb570__0_340 -> bb571__0_340 [label="return"];
    bb570__0_340 -> bb624__0_340 [label="unwind"];
    bb571__0_340 -> bb572__0_340 [label="return"];
    bb571__0_340 -> bb676__0_340 [label="unwind"];
    bb572__0_340 -> bb573__0_340 [label="return"];
    bb572__0_340 -> bb676__0_340 [label="unwind"];
    bb573__0_340 -> bb574__0_340 [label=""];
    bb574__0_340 -> bb575__0_340 [label="return"];
    bb574__0_340 -> bb676__0_340 [label="unwind"];
    bb575__0_340 -> bb576__0_340 [label="0"];
    bb575__0_340 -> bb577__0_340 [label="1"];
    bb575__0_340 -> bb18__0_340 [label="otherwise"];
    bb576__0_340 -> bb579__0_340 [label="0"];
    bb576__0_340 -> bb665__0_340 [label="otherwise"];
    bb577__0_340 -> bb578__0_340 [label="return"];
    bb577__0_340 -> bb676__0_340 [label="unwind"];
    bb578__0_340 -> bb582__0_340 [label=""];
    bb579__0_340 -> bb623__0_340 [label=""];
    bb580__0_340 -> bb666__0_340 [label="return"];
    bb580__0_340 -> bb673__0_340 [label="unwind"];
    bb581__0_340 -> bb582__0_340 [label=""];
    bb582__0_340 -> bb585__0_340 [label=""];
    bb583__0_340 -> bb667__0_340 [label="return"];
    bb583__0_340 -> bb674__0_340 [label="unwind"];
    bb584__0_340 -> bb585__0_340 [label=""];
    bb585__0_340 -> bb588__0_340 [label=""];
    bb586__0_340 -> bb588__0_340 [label=""];
    bb587__0_340 -> bb588__0_340 [label=""];
    bb588__0_340 -> bb589__0_340 [label=""];
    bb589__0_340 -> bb590__0_340 [label=""];
    bb590__0_340 -> bb591__0_340 [label=""];
    bb591__0_340 -> bb592__0_340 [label=""];
    bb592__0_340 -> bb593__0_340 [label=""];
    bb593__0_340 -> bb594__0_340 [label=""];
    bb594__0_340 -> bb601__0_340 [label=""];
    bb595__0_340 -> bb596__0_340 [label=""];
    bb596__0_340 -> bb597__0_340 [label=""];
    bb597__0_340 -> bb598__0_340 [label=""];
    bb598__0_340 -> bb600__0_340 [label=""];
    bb599__0_340 -> bb600__0_340 [label=""];
    bb600__0_340 -> bb601__0_340 [label=""];
    bb601__0_340 -> bb602__0_340 [label="0"];
    bb601__0_340 -> bb668__0_340 [label="otherwise"];
    bb602__0_340 -> bb603__0_340 [label=""];
    bb603__0_340 -> bb606__0_340 [label=""];
    bb604__0_340 -> bb605__0_340 [label=""];
    bb605__0_340 -> bb606__0_340 [label=""];
    bb606__0_340 -> bb607__0_340 [label=""];
    bb607__0_340 -> bb608__0_340 [label=""];
    bb608__0_340 -> bb614__0_340 [label=""];
    bb609__0_340 -> bb610__0_340 [label=""];
    bb610__0_340 -> bb611__0_340 [label=""];
    bb611__0_340 -> bb612__0_340 [label=""];
    bb612__0_340 -> bb613__0_340 [label="return"];
    bb612__0_340 -> bb681__0_340 [label="unwind"];
    bb613__0_340 -> bb614__0_340 [label=""];
    bb614__0_340 -> bb670__0_340 [label=""];
    bb615__0_340 -> bb616__0_340 [label=""];
    bb616__0_340 -> bb617__0_340 [label=""];
    bb617__0_340 -> bb618__0_340 [label=""];
    bb618__0_340 -> bb619__0_340 [label="return"];
    bb618__0_340 -> bb681__0_340 [label="unwind"];
    bb619__0_340 -> bb670__0_340 [label=""];
    bb620__0_340 -> bb672__0_340 [label=""];
    bb621__0_340 -> bb622__0_340 [label=""];
    bb622__0_340 -> bb623__0_340 [label=""];
    bb624__0_340 -> bb676__0_340 [label="return"];
    bb625__0_340 -> bb673__0_340 [label="return"];
    bb626__0_340 -> bb676__0_340 [label="return"];
    bb627__0_340 -> bb674__0_340 [label="return"];
    bb628__0_340 -> bb676__0_340 [label="return"];
    bb629__0_340 -> bb676__0_340 [label="return"];
    bb630__0_340 -> bb676__0_340 [label="return"];
    bb631__0_340 -> bb676__0_340 [label="return"];
    bb632__0_340 -> bb676__0_340 [label="return"];
    bb633__0_340 -> bb676__0_340 [label="return"];
    bb634__0_340 -> bb676__0_340 [label="return"];
    bb635__0_340 -> bb676__0_340 [label="return"];
    bb636__0_340 -> bb637__0_340 [label="return"];
    bb637__0_340 -> bb638__0_340 [label="return"];
    bb638__0_340 -> bb676__0_340 [label="return"];
    bb639__0_340 -> bb676__0_340 [label="return"];
    bb640__0_340 -> bb681__0_340 [label="return"];
    bb641__0_340 -> bb681__0_340 [label="return"];
    bb642__0_340 -> bb681__0_340 [label="return"];
    bb643__0_340 -> bb681__0_340 [label="return"];
    bb644__0_340 -> bb647__0_340 [label="return"];
    bb645__0_340 -> bb647__0_340 [label="return"];
    bb646__0_340 -> bb647__0_340 [label="return"];
    bb647__0_340 -> bb681__0_340 [label="return"];
    bb648__0_340 -> bb651__0_340 [label="return"];
    bb649__0_340 -> bb651__0_340 [label="return"];
    bb650__0_340 -> bb651__0_340 [label="return"];
    bb651__0_340 -> bb681__0_340 [label="return"];
    bb652__0_340 -> bb681__0_340 [label="return"];
    bb653__0_340 -> bb681__0_340 [label="return"];
    bb654__0_340 -> bb681__0_340 [label="return"];
    bb655__0_340 -> bb681__0_340 [label="return"];
    bb656__0_340 -> bb684__0_340 [label="return"];
    bb657__0_340 -> bb684__0_340 [label="return"];
    bb658__0_340 -> bb662__0_340 [label="return"];
    bb659__0_340 -> bb662__0_340 [label="return"];
    bb660__0_340 -> bb662__0_340 [label="return"];
    bb661__0_340 -> bb662__0_340 [label="return"];
    bb663__0_340 -> bb529__0_340 [label="0"];
    bb663__0_340 -> bb530__0_340 [label="otherwise"];
    bb664__0_340 -> bb565__0_340 [label="0"];
    bb664__0_340 -> bb566__0_340 [label="otherwise"];
    bb665__0_340 -> bb579__0_340 [label="return"];
    bb665__0_340 -> bb681__0_340 [label="unwind"];
    bb666__0_340 -> bb581__0_340 [label=""];
    bb667__0_340 -> bb584__0_340 [label=""];
    bb668__0_340 -> bb602__0_340 [label="return"];
    bb668__0_340 -> bb681__0_340 [label="unwind"];
    bb669__0_340 -> bb620__0_340 [label="return"];
    bb669__0_340 -> bb684__0_340 [label="unwind"];
    bb670__0_340 -> bb620__0_340 [label="0"];
    bb670__0_340 -> bb669__0_340 [label="otherwise"];
    bb671__0_340 -> bb621__0_340 [label="return"];
    bb671__0_340 -> bb662__0_340 [label="unwind"];
    bb672__0_340 -> bb621__0_340 [label="0"];
    bb672__0_340 -> bb671__0_340 [label="otherwise"];
    bb673__0_340 -> bb676__0_340 [label=""];
    bb674__0_340 -> bb676__0_340 [label=""];
    bb675__0_340 -> bb681__0_340 [label="return"];
    bb676__0_340 -> bb681__0_340 [label="0"];
    bb676__0_340 -> bb675__0_340 [label="otherwise"];
    bb677__0_340 -> bb681__0_340 [label=""];
    bb678__0_340 -> bb681__0_340 [label=""];
    bb679__0_340 -> bb681__0_340 [label=""];
    bb680__0_340 -> bb684__0_340 [label="return"];
    bb681__0_340 -> bb684__0_340 [label="0"];
    bb681__0_340 -> bb680__0_340 [label="otherwise"];
    bb682__0_340 -> bb684__0_340 [label=""];
    bb683__0_340 -> bb662__0_340 [label="return"];
    bb684__0_340 -> bb662__0_340 [label="0"];
    bb684__0_340 -> bb683__0_340 [label="otherwise"];
    bb685__0_340 -> bb662__0_340 [label=""];
}
