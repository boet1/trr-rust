digraph Mir_0_4297 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn User::get_order_index(_1: &amp;ReErased state::user::User, _2: u32) -&gt; std::result::Result&lt;usize, error::ErrorCode&gt;<br align="left"/>let mut _3: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _4: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _5: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _6: &amp;ReErased [state::user::Order];<br align="left"/>let mut _7: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let mut _8: Closure(DefId(0:4298 ~ drift[d311]::state::user::{impl#1}::get_order_index::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased u32,)]);<br align="left"/>let mut _9: &amp;ReErased u32;<br align="left"/>let mut _10: error::ErrorCode;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug order_id =&gt; _2;<br align="left"/>>;
    bb0__0_4297 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).5: [state::user::Order; 32])<br/>_6 = move _7 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = core::slice::&lt;impl [Order]&gt;::iter(move _6)</td></tr></table>>];
    bb1__0_4297 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_4 = &amp;mut _5<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;_2<br/>_8 = {closure@programs/drift/src/state/user.rs:263:23: 263:30} { order_id: move _9 }<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_3 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/state/user.rs:263:23: 263:30}&gt;(move _4, move _8)</td></tr></table>>];
    bb2__0_4297 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_4)<br/>StorageLive(_10)<br/>_10 = error::ErrorCode::OrderDoesNotExist<br/></td></tr><tr><td align="left">_0 = Option::&lt;usize&gt;::ok_or::&lt;error::ErrorCode&gt;(move _3, move _10)</td></tr></table>>];
    bb3__0_4297 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_3)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4297 -> bb1__0_4297 [label="return"];
    bb1__0_4297 -> bb2__0_4297 [label="return"];
    bb2__0_4297 -> bb3__0_4297 [label="return"];
}
