digraph Mir_0_2841 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_token_utilization_limits(_1: u128, _2: u128, _3: &amp;ReErased state::spot_market::SpotMarket) -&gt; std::result::Result&lt;(u128, u128), error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _8: u32;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: u128;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u64;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: u128;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: u128;<br align="left"/>let mut _28: u128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u128;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u128;<br align="left"/>let mut _61: u128;<br align="left"/>let mut _62: u128;<br align="left"/>let mut _63: u128;<br align="left"/>let mut _64: u128;<br align="left"/>let mut _65: u128;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _67: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: u128;<br align="left"/>let mut _74: u128;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _76: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _77: u128;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _79: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _80: u128;<br align="left"/>let mut _81: u128;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: u128;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: u128;<br align="left"/>let mut _92: u128;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: u128;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _96: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _97: u64;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: u128;<br align="left"/>let mut _103: (u128, u128);<br align="left"/>let mut _104: u128;<br align="left"/>let mut _105: u128;<br align="left"/>debug deposit_token_amount =&gt; _1;<br align="left"/>debug borrow_token_amount =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug max_withdraw_utilization =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug min_deposit_tokens_for_utilization =&gt; _43;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>debug max_borrow_tokens_for_utilization =&gt; _74;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>>;
    bb0__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_3).38: u32)<br/></td></tr><tr><td align="left">_7 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _8)</td></tr></table>>];
    bb1__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_6 as Continue).0: u128)<br/>_5 = _13<br/>StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_3).21: u64)<br/></td></tr><tr><td align="left">_19 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _20)</td></tr></table>>];
    bb4__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_21 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_18 as Continue).0: u128)<br/>_17 = _25<br/>StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = ((*_3).21: u64)<br/></td></tr><tr><td align="left">_30 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _31)</td></tr></table>>];
    bb10__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb11__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb13__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_32 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb14__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_29 as Continue).0: u128)<br/>_28 = _36<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_27 = core::num::&lt;impl u128&gt;::saturating_sub(const _, move _28)</td></tr></table>>];
    bb15__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb16__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_37 = Eq(const 2_u128, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _37, &quot;attempt to divide `{}` by zero&quot;, _27)</td></tr></table>>];
    bb18__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_26 = Div(move _27, const 2_u128)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_16 = &lt;u128 as SafeMath&gt;::safe_add(move _17, move _26)</td></tr></table>>];
    bb19__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb20__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_38 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_15 as Continue).0: u128)<br/>_14 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_4 = &lt;u128 as Ord&gt;::max(move _5, move _14)</td></tr></table>>];
    bb22__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb23__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_5)<br/>StorageDead(_29)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _2<br/></td></tr><tr><td align="left">_48 = &lt;u128 as SafeMath&gt;::safe_mul(move _49, const _)</td></tr></table>>];
    bb25__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb26__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_50 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb27__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_47 as Continue).0: u128)<br/>_46 = _54<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>_55 = _4<br/></td></tr><tr><td align="left">_45 = &lt;u128 as SafeMath&gt;::safe_div(move _46, move _55)</td></tr></table>>];
    bb28__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb29__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb31__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_56 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb32__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_44 as Continue).0: u128)<br/>_43 = _60<br/>StorageDead(_60)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _43<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _1<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = ((*_3).17: u64)<br/></td></tr><tr><td align="left">_67 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _68)</td></tr></table>>];
    bb33__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb34__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb36__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_69 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb37__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_66 as Continue).0: u128)<br/>_65 = _73<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_63 = core::num::&lt;impl u128&gt;::saturating_sub(move _64, move _65)</td></tr></table>>];
    bb38__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb39__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_61 = &lt;u128 as Ord&gt;::min(move _62, move _63)</td></tr></table>>];
    bb41__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>_43 = move _61<br/>StorageDead(_61)<br/>StorageDead(_66)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _4<br/>StorageLive(_81)<br/>_81 = _1<br/></td></tr><tr><td align="left">_79 = &lt;u128 as SafeMath&gt;::safe_mul(move _80, move _81)</td></tr></table>>];
    bb42__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb43__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_82 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb44__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_78 as Continue).0: u128)<br/>_77 = _86<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_76 = &lt;u128 as SafeMath&gt;::safe_div(move _77, const _)</td></tr></table>>];
    bb45__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb46__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb48__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_87 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb49__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_75 as Continue).0: u128)<br/>_74 = _91<br/>StorageDead(_91)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = _74<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = ((*_3).17: u64)<br/></td></tr><tr><td align="left">_96 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _97)</td></tr></table>>];
    bb50__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb51__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb53__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_98 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb54__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_95 as Continue).0: u128)<br/>_94 = _102<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_92 = &lt;u128 as Ord&gt;::max(move _93, move _94)</td></tr></table>>];
    bb55__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb56__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>_74 = move _92<br/>StorageDead(_92)<br/>StorageDead(_95)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = _43<br/>StorageLive(_105)<br/>_105 = _74<br/>_103 = (move _104, move _105)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Ok(move _103)<br/>StorageDead(_103)<br/>StorageDead(_74)<br/>StorageDead(_43)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_5)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2841 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2841 -> bb1__0_2841 [label="return"];
    bb1__0_2841 -> bb2__0_2841 [label="return"];
    bb2__0_2841 -> bb3__0_2841 [label="0"];
    bb2__0_2841 -> bb5__0_2841 [label="1"];
    bb2__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb3__0_2841 -> bb7__0_2841 [label="return"];
    bb5__0_2841 -> bb6__0_2841 [label="return"];
    bb6__0_2841 -> bb64__0_2841 [label=""];
    bb7__0_2841 -> bb8__0_2841 [label="return"];
    bb8__0_2841 -> bb9__0_2841 [label="0"];
    bb8__0_2841 -> bb10__0_2841 [label="1"];
    bb8__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb9__0_2841 -> bb12__0_2841 [label="return"];
    bb10__0_2841 -> bb11__0_2841 [label="return"];
    bb11__0_2841 -> bb63__0_2841 [label=""];
    bb12__0_2841 -> bb13__0_2841 [label="return"];
    bb13__0_2841 -> bb14__0_2841 [label="0"];
    bb13__0_2841 -> bb15__0_2841 [label="1"];
    bb13__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb14__0_2841 -> bb17__0_2841 [label="return"];
    bb15__0_2841 -> bb16__0_2841 [label="return"];
    bb16__0_2841 -> bb62__0_2841 [label=""];
    bb17__0_2841 -> bb18__0_2841 [label="success"];
    bb18__0_2841 -> bb19__0_2841 [label="return"];
    bb19__0_2841 -> bb20__0_2841 [label="return"];
    bb20__0_2841 -> bb21__0_2841 [label="0"];
    bb20__0_2841 -> bb22__0_2841 [label="1"];
    bb20__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb21__0_2841 -> bb24__0_2841 [label="return"];
    bb22__0_2841 -> bb23__0_2841 [label="return"];
    bb23__0_2841 -> bb62__0_2841 [label=""];
    bb24__0_2841 -> bb25__0_2841 [label="return"];
    bb25__0_2841 -> bb26__0_2841 [label="return"];
    bb26__0_2841 -> bb27__0_2841 [label="0"];
    bb26__0_2841 -> bb28__0_2841 [label="1"];
    bb26__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb27__0_2841 -> bb30__0_2841 [label="return"];
    bb28__0_2841 -> bb29__0_2841 [label="return"];
    bb29__0_2841 -> bb60__0_2841 [label=""];
    bb30__0_2841 -> bb31__0_2841 [label="return"];
    bb31__0_2841 -> bb32__0_2841 [label="0"];
    bb31__0_2841 -> bb33__0_2841 [label="1"];
    bb31__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb32__0_2841 -> bb35__0_2841 [label="return"];
    bb33__0_2841 -> bb34__0_2841 [label="return"];
    bb34__0_2841 -> bb60__0_2841 [label=""];
    bb35__0_2841 -> bb36__0_2841 [label="return"];
    bb36__0_2841 -> bb37__0_2841 [label="0"];
    bb36__0_2841 -> bb38__0_2841 [label="1"];
    bb36__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb37__0_2841 -> bb40__0_2841 [label="return"];
    bb38__0_2841 -> bb39__0_2841 [label="return"];
    bb39__0_2841 -> bb61__0_2841 [label=""];
    bb40__0_2841 -> bb41__0_2841 [label="return"];
    bb41__0_2841 -> bb42__0_2841 [label="return"];
    bb42__0_2841 -> bb43__0_2841 [label="return"];
    bb43__0_2841 -> bb44__0_2841 [label="0"];
    bb43__0_2841 -> bb45__0_2841 [label="1"];
    bb43__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb44__0_2841 -> bb47__0_2841 [label="return"];
    bb45__0_2841 -> bb46__0_2841 [label="return"];
    bb46__0_2841 -> bb58__0_2841 [label=""];
    bb47__0_2841 -> bb48__0_2841 [label="return"];
    bb48__0_2841 -> bb49__0_2841 [label="0"];
    bb48__0_2841 -> bb50__0_2841 [label="1"];
    bb48__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb49__0_2841 -> bb52__0_2841 [label="return"];
    bb50__0_2841 -> bb51__0_2841 [label="return"];
    bb51__0_2841 -> bb58__0_2841 [label=""];
    bb52__0_2841 -> bb53__0_2841 [label="return"];
    bb53__0_2841 -> bb54__0_2841 [label="0"];
    bb53__0_2841 -> bb55__0_2841 [label="1"];
    bb53__0_2841 -> bb4__0_2841 [label="otherwise"];
    bb54__0_2841 -> bb57__0_2841 [label="return"];
    bb55__0_2841 -> bb56__0_2841 [label="return"];
    bb56__0_2841 -> bb59__0_2841 [label=""];
    bb57__0_2841 -> bb66__0_2841 [label=""];
    bb58__0_2841 -> bb59__0_2841 [label=""];
    bb59__0_2841 -> bb61__0_2841 [label=""];
    bb60__0_2841 -> bb61__0_2841 [label=""];
    bb61__0_2841 -> bb65__0_2841 [label=""];
    bb62__0_2841 -> bb63__0_2841 [label=""];
    bb63__0_2841 -> bb64__0_2841 [label=""];
    bb64__0_2841 -> bb65__0_2841 [label=""];
    bb65__0_2841 -> bb66__0_2841 [label=""];
}
