digraph Mir_0_2621 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn find_bids_and_asks_from_users::{closure#0}(_1: &amp;ReErased mut Closure(DefId(0:2621 ~ drift[d311]::math::orders::find_bids_and_asks_from_users::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u64, u64, controller::position::PositionDirection)), []), (&amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;)]), _2: u64, _3: u64, _4: controller::position::PositionDirection) -&gt; ()<br align="left"/>let _5: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let mut _7: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _8: usize;<br align="left"/>let mut _9: std::result::Result&lt;usize, usize&gt;;<br align="left"/>let mut _10: &amp;ReErased [math::orders::Level];<br align="left"/>let _11: &amp;ReErased [math::orders::Level];<br align="left"/>let mut _12: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _13: Closure(DefId(0:2622 ~ drift[d311]::math::orders::find_bids_and_asks_from_users::{closure#0}::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased math::orders::Level,)) -&gt; std::cmp::Ordering, []), (&amp;ReErased controller::position::PositionDirection, &amp;ReErased u64)]);<br align="left"/>let mut _14: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _15: &amp;ReErased u64;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: usize;<br align="left"/>let _18: usize;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: usize;<br align="left"/>let mut _21: usize;<br align="left"/>let mut _22: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _23: ();<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: usize;<br align="left"/>let mut _26: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _27: usize;<br align="left"/>let mut _28: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _29: std::option::Option&lt;math::orders::Level&gt;;<br align="left"/>let mut _30: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _31: ();<br align="left"/>let mut _32: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: math::orders::Level;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _38: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>debug base_asset_amount =&gt; _2;<br align="left"/>debug price =&gt; _3;<br align="left"/>debug direction =&gt; _4;<br align="left"/>debug bids =&gt; (*((*_1).0: &amp;mut std::vec::Vec&lt;math::orders::Level&gt;));<br align="left"/>debug asks =&gt; (*((*_1).1: &amp;mut std::vec::Vec&lt;math::orders::Level&gt;));<br align="left"/>debug orders =&gt; _5;<br align="left"/>debug index =&gt; _8;<br align="left"/>debug index =&gt; _17;<br align="left"/>debug index =&gt; _18;<br align="left"/>>;
    bb0__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_6 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_37 = deref_copy ((*_1).1: &amp;mut std::vec::Vec&lt;math::orders::Level&gt;)<br/>_7 = &amp;mut (*_37)<br/>_5 = &amp;mut (*_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_38 = deref_copy ((*_1).0: &amp;mut std::vec::Vec&lt;math::orders::Level&gt;)<br/>_5 = &amp;mut (*_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_5)<br/></td></tr><tr><td align="left">_11 = &lt;Vec&lt;Level&gt; as Deref&gt;::deref(move _12)</td></tr></table>>];
    bb5__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_10 = &amp;(*_11)<br/>StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;_4<br/>StorageLive(_15)<br/>_15 = &amp;_3<br/>_13 = {closure@programs/drift/src/math/orders.rs:1241:51: 1241:58} { direction: move _14, price: move _15 }<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_9 = core::slice::&lt;impl [Level]&gt;::binary_search_by::&lt;'_, {closure@programs/drift/src/math/orders.rs:1241:51: 1241:58}&gt;(move _10, move _13)</td></tr></table>>];
    bb6__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_10)<br/>_16 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb7__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_9 as Err).0: usize)<br/>_8 = _18<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Ok).0: usize)<br/>_8 = _17<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _8<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_5)<br/></td></tr><tr><td align="left">_21 = Vec::&lt;Level&gt;::capacity(move _22)</td></tr></table>>];
    bb10__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_19 = Lt(move _20, move _21)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb11__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_5)<br/></td></tr><tr><td align="left">_25 = Vec::&lt;Level&gt;::len(move _26)</td></tr></table>>];
    bb12__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_5)<br/></td></tr><tr><td align="left">_27 = Vec::&lt;Level&gt;::capacity(move _28)</td></tr></table>>];
    bb13__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_24 = Eq(move _25, move _27)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb14__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_29 = Vec::&lt;Level&gt;::pop(move _30)</td></tr></table>>];
    bb15__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>_23 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_23 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;mut (*_5)<br/>StorageLive(_33)<br/>_33 = _8<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _3<br/>StorageLive(_36)<br/>_36 = _2<br/>_34 = Level { price: move _35, base_asset_amount: move _36 }<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_31 = Vec::&lt;Level&gt;::insert(move _32, move _33, move _34)</td></tr></table>>];
    bb18__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>_0 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>_0 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2621 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2621 -> bb3__0_2621 [label="0"];
    bb0__0_2621 -> bb1__0_2621 [label="1"];
    bb0__0_2621 -> bb2__0_2621 [label="otherwise"];
    bb1__0_2621 -> bb4__0_2621 [label=""];
    bb3__0_2621 -> bb4__0_2621 [label=""];
    bb4__0_2621 -> bb5__0_2621 [label="return"];
    bb5__0_2621 -> bb6__0_2621 [label="return"];
    bb6__0_2621 -> bb8__0_2621 [label="0"];
    bb6__0_2621 -> bb7__0_2621 [label="1"];
    bb6__0_2621 -> bb2__0_2621 [label="otherwise"];
    bb7__0_2621 -> bb9__0_2621 [label=""];
    bb8__0_2621 -> bb9__0_2621 [label=""];
    bb9__0_2621 -> bb10__0_2621 [label="return"];
    bb10__0_2621 -> bb19__0_2621 [label="0"];
    bb10__0_2621 -> bb11__0_2621 [label="otherwise"];
    bb11__0_2621 -> bb12__0_2621 [label="return"];
    bb12__0_2621 -> bb13__0_2621 [label="return"];
    bb13__0_2621 -> bb16__0_2621 [label="0"];
    bb13__0_2621 -> bb14__0_2621 [label="otherwise"];
    bb14__0_2621 -> bb15__0_2621 [label="return"];
    bb15__0_2621 -> bb17__0_2621 [label=""];
    bb16__0_2621 -> bb17__0_2621 [label=""];
    bb17__0_2621 -> bb18__0_2621 [label="return"];
    bb18__0_2621 -> bb20__0_2621 [label=""];
    bb19__0_2621 -> bb20__0_2621 [label=""];
}
