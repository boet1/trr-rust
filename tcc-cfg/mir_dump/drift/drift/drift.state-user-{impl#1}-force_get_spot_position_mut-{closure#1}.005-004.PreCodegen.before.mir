// MIR for `state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::force_get_spot_position_mut::{closure#1}` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::force_get_spot_position_mut::{closure#1}(_1: {closure@programs/drift/src/state/user.rs:235:18: 235:37}, _2: usize) -> &mut SpotPosition {
    debug market_index => _2;
    debug self => (_1.0: &mut state::user::User);
    let mut _0: &mut state::user::SpotPosition;
    let _3: usize;
    let mut _4: usize;
    let mut _5: bool;
    let mut _6: &mut state::user::User;
    let mut _7: &mut state::user::User;

    bb0: {
        StorageLive(_3);
        _3 = _2;
        _6 = deref_copy (_1.0: &mut state::user::User);
        _4 = Len(((*_6).3: [state::user::SpotPosition; 8]));
        _5 = Lt(_3, _4);
        assert(move _5, "index out of bounds: the length is {} but the index is {}", move _4, _3) -> [success: bb1, unwind continue];
    }

    bb1: {
        _7 = deref_copy (_1.0: &mut state::user::User);
        _0 = &mut ((*_7).3: [state::user::SpotPosition; 8])[_3];
        StorageDead(_3);
        return;
    }
}
