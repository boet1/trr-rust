digraph Mir_0_3130 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn compute_base_lot_size(_1: u64, _2: u64, _3: u64, _4: &amp;ReErased phoenix::program::MarketHeader) -&gt; std::result::Result&lt;phoenix::quantities::BaseLots, error::ErrorCode&gt;<br align="left"/>let mut _5: phoenix::quantities::BaseLots;<br align="left"/>let mut _6: phoenix::quantities::BaseLots;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::quantities::BaseLots&gt;;<br align="left"/>let mut _8: std::result::Result&lt;phoenix::quantities::BaseLots, error::ErrorCode&gt;;<br align="left"/>let mut _9: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: &amp;ReErased phoenix::quantities::BaseAtomsPerBaseLot;<br align="left"/>let _13: phoenix::quantities::BaseAtomsPerBaseLot;<br align="left"/>let mut _14: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: phoenix::quantities::BaseLots;<br align="left"/>let mut _20: phoenix::quantities::BaseLots;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::quantities::BaseLots&gt;;<br align="left"/>let mut _22: std::result::Result&lt;phoenix::quantities::BaseLots, error::ErrorCode&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u64;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: u32;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: u128;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: u128;<br align="left"/>let mut _58: u128;<br align="left"/>let mut _59: &amp;ReErased phoenix::quantities::BaseAtomsPerBaseLot;<br align="left"/>let _60: phoenix::quantities::BaseAtomsPerBaseLot;<br align="left"/>let mut _61: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: u128;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: phoenix::quantities::BaseLots;<br align="left"/>debug taker_base_asset_amount =&gt; _1;<br align="left"/>debug taker_max_quote_asset_amount =&gt; _2;<br align="left"/>debug taker_price =&gt; _3;<br align="left"/>debug header =&gt; _4;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>>;
    bb0__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _1<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_4)<br/></td></tr><tr><td align="left">_13 = MarketHeader::get_base_lot_size(move _14)</td></tr></table>>];
    bb1__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_12 = &amp;_13<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = &lt;BaseAtomsPerBaseLot as phoenix::quantities::WrapperU64&gt;::as_u64(move _12)</td></tr></table>>];
    bb2__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_9 = &lt;u64 as SafeMath&gt;::safe_div(move _10, move _11)</td></tr></table>>];
    bb3__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map::&lt;BaseLots, fn(u64) -&gt; BaseLots {&lt;BaseLots as phoenix::quantities::WrapperU64&gt;::new}&gt;(move _9, &lt;BaseLots as phoenix::quantities::WrapperU64&gt;::new)</td></tr></table>>];
    bb4__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb5__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_15 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb6__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_7 as Continue).0: phoenix::quantities::BaseLots)<br/>_6 = _19<br/>StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _2<br/></td></tr><tr><td align="left">_32 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _33)</td></tr></table>>];
    bb7__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb9__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb11__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb12__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: u128)<br/>_30 = _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = (((*_4).3: phoenix::program::TokenParams).0: u32)<br/></td></tr><tr><td align="left">_39 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _40)</td></tr></table>>];
    bb13__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb14__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_29 = &lt;u128 as SafeMath&gt;::safe_mul(move _30, move _39)</td></tr></table>>];
    bb16__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb17__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_41 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_28 as Continue).0: u128)<br/>_27 = _45<br/>StorageDead(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _3<br/></td></tr><tr><td align="left">_51 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _52)</td></tr></table>>];
    bb19__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb20__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb22__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_53 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb23__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_50 as Continue).0: u128)<br/>_49 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_4)<br/></td></tr><tr><td align="left">_60 = MarketHeader::get_base_lot_size(move _61)</td></tr></table>>];
    bb24__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb25__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_59 = &amp;_60<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = BaseAtomsPerBaseLot::as_u128(move _59)</td></tr></table>>];
    bb27__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_48 = &lt;u128 as SafeMath&gt;::safe_mul(move _49, move _58)</td></tr></table>>];
    bb28__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb29__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_62 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb30__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_47 as Continue).0: u128)<br/>_46 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_26 = &lt;u128 as SafeMath&gt;::safe_div(move _27, move _46)</td></tr></table>>];
    bb31__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb32__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_46)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb34__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_67 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb35__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_25 as Continue).0: u128)<br/>_24 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_23 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _24)</td></tr></table>>];
    bb36__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb37__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map::&lt;BaseLots, fn(u64) -&gt; BaseLots {&lt;BaseLots as phoenix::quantities::WrapperU64&gt;::new}&gt;(move _23, &lt;BaseLots as phoenix::quantities::WrapperU64&gt;::new)</td></tr></table>>];
    bb39__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb40__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_72 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb41__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_21 as Continue).0: phoenix::quantities::BaseLots)<br/>_20 = _76<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_5 = &lt;BaseLots as Ord&gt;::min(move _6, move _20)</td></tr></table>>];
    bb42__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb43__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_6)<br/>_0 = std::result::Result::&lt;BaseLots, error::ErrorCode&gt;::Ok(move _5)<br/>StorageDead(_5)<br/>StorageDead(_60)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_3130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3130 -> bb1__0_3130 [label="return"];
    bb1__0_3130 -> bb2__0_3130 [label="return"];
    bb2__0_3130 -> bb3__0_3130 [label="return"];
    bb3__0_3130 -> bb4__0_3130 [label="return"];
    bb4__0_3130 -> bb5__0_3130 [label="return"];
    bb5__0_3130 -> bb6__0_3130 [label="0"];
    bb5__0_3130 -> bb8__0_3130 [label="1"];
    bb5__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb6__0_3130 -> bb10__0_3130 [label="return"];
    bb8__0_3130 -> bb9__0_3130 [label="return"];
    bb9__0_3130 -> bb50__0_3130 [label=""];
    bb10__0_3130 -> bb11__0_3130 [label="return"];
    bb11__0_3130 -> bb12__0_3130 [label="0"];
    bb11__0_3130 -> bb13__0_3130 [label="1"];
    bb11__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb12__0_3130 -> bb15__0_3130 [label="return"];
    bb13__0_3130 -> bb14__0_3130 [label="return"];
    bb14__0_3130 -> bb48__0_3130 [label=""];
    bb15__0_3130 -> bb16__0_3130 [label="return"];
    bb16__0_3130 -> bb17__0_3130 [label="return"];
    bb17__0_3130 -> bb18__0_3130 [label="0"];
    bb17__0_3130 -> bb19__0_3130 [label="1"];
    bb17__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb18__0_3130 -> bb21__0_3130 [label="return"];
    bb19__0_3130 -> bb20__0_3130 [label="return"];
    bb20__0_3130 -> bb48__0_3130 [label=""];
    bb21__0_3130 -> bb22__0_3130 [label="return"];
    bb22__0_3130 -> bb23__0_3130 [label="0"];
    bb22__0_3130 -> bb24__0_3130 [label="1"];
    bb22__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb23__0_3130 -> bb26__0_3130 [label="return"];
    bb24__0_3130 -> bb25__0_3130 [label="return"];
    bb25__0_3130 -> bb47__0_3130 [label=""];
    bb26__0_3130 -> bb27__0_3130 [label="return"];
    bb27__0_3130 -> bb28__0_3130 [label="return"];
    bb28__0_3130 -> bb29__0_3130 [label="return"];
    bb29__0_3130 -> bb30__0_3130 [label="0"];
    bb29__0_3130 -> bb31__0_3130 [label="1"];
    bb29__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb30__0_3130 -> bb33__0_3130 [label="return"];
    bb31__0_3130 -> bb32__0_3130 [label="return"];
    bb32__0_3130 -> bb45__0_3130 [label=""];
    bb33__0_3130 -> bb34__0_3130 [label="return"];
    bb34__0_3130 -> bb35__0_3130 [label="0"];
    bb34__0_3130 -> bb36__0_3130 [label="1"];
    bb34__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb35__0_3130 -> bb38__0_3130 [label="return"];
    bb36__0_3130 -> bb37__0_3130 [label="return"];
    bb37__0_3130 -> bb45__0_3130 [label=""];
    bb38__0_3130 -> bb39__0_3130 [label="return"];
    bb39__0_3130 -> bb40__0_3130 [label="return"];
    bb40__0_3130 -> bb41__0_3130 [label="0"];
    bb40__0_3130 -> bb42__0_3130 [label="1"];
    bb40__0_3130 -> bb7__0_3130 [label="otherwise"];
    bb41__0_3130 -> bb44__0_3130 [label="return"];
    bb42__0_3130 -> bb43__0_3130 [label="return"];
    bb43__0_3130 -> bb46__0_3130 [label=""];
    bb44__0_3130 -> bb51__0_3130 [label=""];
    bb45__0_3130 -> bb46__0_3130 [label=""];
    bb46__0_3130 -> bb47__0_3130 [label=""];
    bb47__0_3130 -> bb49__0_3130 [label=""];
    bb48__0_3130 -> bb49__0_3130 [label=""];
    bb49__0_3130 -> bb50__0_3130 [label=""];
    bb50__0_3130 -> bb51__0_3130 [label=""];
}
