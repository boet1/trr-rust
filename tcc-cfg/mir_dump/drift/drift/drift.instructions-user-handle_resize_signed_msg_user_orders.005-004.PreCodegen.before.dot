digraph Mir_0_1691 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_resize_signed_msg_user_orders(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::ResizeSignedMsgUserOrders&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;, std::alloc::Global&gt;;<br align="left"/>let _4: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _9: Closure(DefId(0:11671 ~ drift[d311]::instructions::user::handle_resize_signed_msg_user_orders::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _15: ();<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _18: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _23: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _26: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _27: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _29: &amp;ReErased state::user::User;<br align="left"/>let mut _30: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _31: ();<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _33: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: usize;<br align="left"/>let mut _36: u16;<br align="left"/>let mut _37: usize;<br align="left"/>let mut _38: &amp;ReErased std::vec::Vec&lt;state::signed_msg_user::SignedMsgOrderId, std::alloc::Global&gt;;<br align="left"/>let _39: &amp;ReErased state::signed_msg_user::SignedMsgUserOrders;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;;<br align="left"/>let mut _41: ();<br align="left"/>let _42: error::ErrorCode;<br align="left"/>let _43: ();<br align="left"/>let mut _44: &amp;ReErased str;<br align="left"/>let _45: &amp;ReErased str;<br align="left"/>let mut _46: &amp;ReErased std::string::String;<br align="left"/>let _47: &amp;ReErased std::string::String;<br align="left"/>let _48: std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let mut _50: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _53: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _54: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _55: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _58: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _59: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased error::ErrorCode;<br align="left"/>let _61: &amp;ReErased error::ErrorCode;<br align="left"/>let _62: ();<br align="left"/>let mut _63: &amp;ReErased str;<br align="left"/>let _64: &amp;ReErased str;<br align="left"/>let mut _65: error::ErrorCode;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: ();<br align="left"/>let _71: ();<br align="left"/>let mut _72: &amp;ReErased mut std::vec::Vec&lt;state::signed_msg_user::SignedMsgOrderId, std::alloc::Global&gt;;<br align="left"/>let mut _73: &amp;ReErased mut state::signed_msg_user::SignedMsgUserOrders;<br align="left"/>let mut _74: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;;<br align="left"/>let mut _75: usize;<br align="left"/>let mut _76: u16;<br align="left"/>let _77: ();<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _79: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _80: &amp;ReErased state::signed_msg_user::SignedMsgUserOrders;<br align="left"/>let _81: &amp;ReErased state::signed_msg_user::SignedMsgUserOrders;<br align="left"/>let mut _82: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: ();<br align="left"/>let mut _88: ();<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _90: &amp;ReErased mut instructions::user::ResizeSignedMsgUserOrders&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased mut instructions::user::ResizeSignedMsgUserOrders&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased mut instructions::user::ResizeSignedMsgUserOrders&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased mut instructions::user::ResizeSignedMsgUserOrders&lt;ReErased&gt;;<br align="left"/>let mut _94: &amp;ReErased mut instructions::user::ResizeSignedMsgUserOrders&lt;ReErased&gt;;<br align="left"/>let mut _95: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _96: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _97: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: *const anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;;<br align="left"/>let mut _104: *const anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;;<br align="left"/>let mut _105: *const anchor_lang::prelude::Account&lt;ReErased, state::signed_msg_user::SignedMsgUserOrders&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug num_orders =&gt; _2;<br align="left"/>debug signed_msg_user_orders =&gt; _3;<br align="left"/>debug user =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug error_code =&gt; _42;<br align="left"/>debug res =&gt; _49;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>>;
    bb0__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_90 = deref_copy (_1.1: &amp;mut instructions::user::ResizeSignedMsgUserOrders&lt;'_&gt;)<br/>_3 = &amp;mut ((*_90).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_91 = deref_copy (_1.1: &amp;mut instructions::user::ResizeSignedMsgUserOrders&lt;'_&gt;)<br/>_8 = &amp;((*_91).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_7 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _8)</td></tr></table>>];
    bb1__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>_9 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_6 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _7, move _9)</td></tr></table>>];
    bb2__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb3__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_10 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_5 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_4 = move _14<br/>StorageDead(_14)<br/>_100 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_92 = deref_copy (_1.1: &amp;mut instructions::user::ResizeSignedMsgUserOrders&lt;'_&gt;)<br/>_19 = &amp;((*_92).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb5__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_98 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_17 = &amp;((*_18).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_20)<br/>_93 = deref_copy (_1.1: &amp;mut instructions::user::ResizeSignedMsgUserOrders&lt;'_&gt;)<br/>_20 = &amp;(((*_93).1: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_16 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _17, move _20)</td></tr></table>>];
    bb9__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb10__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_94 = deref_copy (_1.1: &amp;mut instructions::user::ResizeSignedMsgUserOrders&lt;'_&gt;)<br/>_24 = &amp;((*_94).3: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _24)</td></tr></table>>];
    bb11__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_22 = &amp;((*_23).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_4<br/></td></tr><tr><td align="left">_29 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _30)</td></tr></table>>];
    bb12__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_28 = &amp;((*_29).1: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_27 = &lt;anchor_lang::prelude::Pubkey as anchor_lang::Key&gt;::key(move _28)</td></tr></table>>];
    bb13__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;_26<br/></td></tr><tr><td align="left">_21 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _22, move _25)</td></tr></table>>];
    bb14__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb15__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _2<br/>_35 = move _36 as usize (IntToInt)<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_95 = deref_copy (*_3)<br/>_103 = (((_95.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;)<br/>_40 = &amp;(*_103)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::Account&lt;'_, SignedMsgUserOrders&gt; as Deref&gt;::deref(move _40)</td></tr></table>>];
    bb16__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = &amp;((*_39).2: std::vec::Vec&lt;state::signed_msg_user::SignedMsgOrderId&gt;)<br/></td></tr><tr><td align="left">_37 = Vec::&lt;SignedMsgOrderId&gt;::len(move _38)</td></tr></table>>];
    bb17__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_34 = Ge(move _35, move _37)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb18__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_41)<br/>_41 = ()<br/>_33 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _41)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_42)<br/>_42 = error::ErrorCode::InvalidSignedMsgUserOrdersResize<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_89 = const _<br/>_53 = &amp;(*_89)<br/>_52 = &amp;(*_53)<br/>_51 = move _52 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_52)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;_42<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _60)</td></tr></table>>];
    bb20__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_58 = [move _59]<br/>StorageDead(_59)<br/>_57 = &amp;_58<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_50 = Arguments::&lt;'_&gt;::new_v1(move _51, move _55)</td></tr></table>>];
    bb21__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = format(move _50)</td></tr></table>>];
    bb22__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>_48 = move _49<br/>StorageDead(_49)<br/>_47 = &amp;_48<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = &lt;String as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb23__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_44 = &amp;(*_45)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = solana_program::log::sol_log(move _44)</td></tr></table>>];
    bb24__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb25__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = const &quot;Invalid shrinking resize for payer != user authority or delegate&quot;<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = solana_program::log::sol_log(move _63)</td></tr></table>>];
    bb26__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageLive(_65)<br/>_65 = _42<br/>_33 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _65)<br/>StorageDead(_65)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb28__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_66 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb29__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_32 as Continue).0: ())<br/>_31 = _70<br/>StorageDead(_70)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb31__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_96 = deref_copy (*_3)<br/>_104 = (((_96.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;)<br/>_74 = &amp;mut (*_104)<br/></td></tr><tr><td align="left">_73 = &lt;anchor_lang::prelude::Account&lt;'_, SignedMsgUserOrders&gt; as DerefMut&gt;::deref_mut(move _74)</td></tr></table>>];
    bb36__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_72 = &amp;mut ((*_73).2: std::vec::Vec&lt;state::signed_msg_user::SignedMsgOrderId&gt;)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = _2<br/>_75 = move _76 as usize (IntToInt)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_71 = Vec::&lt;SignedMsgOrderId&gt;::resize_with::&lt;fn() -&gt; SignedMsgOrderId {&lt;SignedMsgOrderId as Default&gt;::default}&gt;(move _72, move _75, &lt;SignedMsgOrderId as Default&gt;::default)</td></tr></table>>];
    bb37__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_97 = deref_copy (*_3)<br/>_105 = (((_97.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::signed_msg_user::SignedMsgUserOrders&gt;)<br/>_82 = &amp;(*_105)<br/></td></tr><tr><td align="left">_81 = &lt;anchor_lang::prelude::Account&lt;'_, SignedMsgUserOrders&gt; as Deref&gt;::deref(move _82)</td></tr></table>>];
    bb38__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_80 = &amp;(*_81)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_79 = SignedMsgUserOrders::validate(move _80)</td></tr></table>>];
    bb39__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb40__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_83 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb41__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_78 as Continue).0: ())<br/>_77 = _87<br/>StorageDead(_87)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_88)<br/>_88 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _88)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb42__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb43__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb46__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">return</td></tr></table>>];
    bb48__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_48)</td></tr></table>>];
    bb49__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb50__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb51__0_1691 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left" balign="left">_102 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1691 -> bb1__0_1691 [label="return"];
    bb1__0_1691 -> bb2__0_1691 [label="return"];
    bb1__0_1691 -> bb50__0_1691 [label="unwind"];
    bb2__0_1691 -> bb3__0_1691 [label="return"];
    bb2__0_1691 -> bb50__0_1691 [label="unwind"];
    bb3__0_1691 -> bb4__0_1691 [label="0"];
    bb3__0_1691 -> bb6__0_1691 [label="1"];
    bb3__0_1691 -> bb5__0_1691 [label="otherwise"];
    bb4__0_1691 -> bb8__0_1691 [label="return"];
    bb4__0_1691 -> bb49__0_1691 [label="unwind"];
    bb6__0_1691 -> bb7__0_1691 [label="return"];
    bb6__0_1691 -> bb51__0_1691 [label="unwind"];
    bb7__0_1691 -> bb46__0_1691 [label=""];
    bb8__0_1691 -> bb9__0_1691 [label="return"];
    bb8__0_1691 -> bb49__0_1691 [label="unwind"];
    bb9__0_1691 -> bb33__0_1691 [label="0"];
    bb9__0_1691 -> bb10__0_1691 [label="otherwise"];
    bb10__0_1691 -> bb11__0_1691 [label="return"];
    bb10__0_1691 -> bb49__0_1691 [label="unwind"];
    bb11__0_1691 -> bb12__0_1691 [label="return"];
    bb11__0_1691 -> bb49__0_1691 [label="unwind"];
    bb12__0_1691 -> bb13__0_1691 [label="return"];
    bb12__0_1691 -> bb49__0_1691 [label="unwind"];
    bb13__0_1691 -> bb14__0_1691 [label="return"];
    bb13__0_1691 -> bb49__0_1691 [label="unwind"];
    bb14__0_1691 -> bb32__0_1691 [label="0"];
    bb14__0_1691 -> bb15__0_1691 [label="otherwise"];
    bb15__0_1691 -> bb16__0_1691 [label="return"];
    bb15__0_1691 -> bb49__0_1691 [label="unwind"];
    bb16__0_1691 -> bb17__0_1691 [label="return"];
    bb16__0_1691 -> bb49__0_1691 [label="unwind"];
    bb17__0_1691 -> bb19__0_1691 [label="0"];
    bb17__0_1691 -> bb18__0_1691 [label="otherwise"];
    bb18__0_1691 -> bb27__0_1691 [label=""];
    bb19__0_1691 -> bb20__0_1691 [label="return"];
    bb19__0_1691 -> bb49__0_1691 [label="unwind"];
    bb20__0_1691 -> bb21__0_1691 [label="return"];
    bb20__0_1691 -> bb49__0_1691 [label="unwind"];
    bb21__0_1691 -> bb22__0_1691 [label="return"];
    bb21__0_1691 -> bb49__0_1691 [label="unwind"];
    bb22__0_1691 -> bb23__0_1691 [label="return"];
    bb22__0_1691 -> bb48__0_1691 [label="unwind"];
    bb23__0_1691 -> bb24__0_1691 [label="return"];
    bb23__0_1691 -> bb48__0_1691 [label="unwind"];
    bb24__0_1691 -> bb25__0_1691 [label="return"];
    bb24__0_1691 -> bb49__0_1691 [label="unwind"];
    bb25__0_1691 -> bb26__0_1691 [label="return"];
    bb25__0_1691 -> bb49__0_1691 [label="unwind"];
    bb26__0_1691 -> bb27__0_1691 [label=""];
    bb27__0_1691 -> bb28__0_1691 [label="return"];
    bb27__0_1691 -> bb49__0_1691 [label="unwind"];
    bb28__0_1691 -> bb29__0_1691 [label="0"];
    bb28__0_1691 -> bb30__0_1691 [label="1"];
    bb28__0_1691 -> bb5__0_1691 [label="otherwise"];
    bb29__0_1691 -> bb35__0_1691 [label=""];
    bb30__0_1691 -> bb31__0_1691 [label="return"];
    bb30__0_1691 -> bb49__0_1691 [label="unwind"];
    bb31__0_1691 -> bb45__0_1691 [label=""];
    bb32__0_1691 -> bb34__0_1691 [label=""];
    bb33__0_1691 -> bb34__0_1691 [label=""];
    bb34__0_1691 -> bb35__0_1691 [label=""];
    bb35__0_1691 -> bb36__0_1691 [label="return"];
    bb35__0_1691 -> bb49__0_1691 [label="unwind"];
    bb36__0_1691 -> bb37__0_1691 [label="return"];
    bb36__0_1691 -> bb49__0_1691 [label="unwind"];
    bb37__0_1691 -> bb38__0_1691 [label="return"];
    bb37__0_1691 -> bb49__0_1691 [label="unwind"];
    bb38__0_1691 -> bb39__0_1691 [label="return"];
    bb38__0_1691 -> bb49__0_1691 [label="unwind"];
    bb39__0_1691 -> bb40__0_1691 [label="return"];
    bb39__0_1691 -> bb49__0_1691 [label="unwind"];
    bb40__0_1691 -> bb41__0_1691 [label="0"];
    bb40__0_1691 -> bb42__0_1691 [label="1"];
    bb40__0_1691 -> bb5__0_1691 [label="otherwise"];
    bb41__0_1691 -> bb44__0_1691 [label="return"];
    bb41__0_1691 -> bb50__0_1691 [label="unwind"];
    bb42__0_1691 -> bb43__0_1691 [label="return"];
    bb42__0_1691 -> bb49__0_1691 [label="unwind"];
    bb43__0_1691 -> bb45__0_1691 [label=""];
    bb44__0_1691 -> bb47__0_1691 [label=""];
    bb45__0_1691 -> bb46__0_1691 [label="return"];
    bb45__0_1691 -> bb50__0_1691 [label="unwind"];
    bb46__0_1691 -> bb47__0_1691 [label=""];
    bb48__0_1691 -> bb49__0_1691 [label="return"];
    bb49__0_1691 -> bb50__0_1691 [label="return"];
    bb51__0_1691 -> bb50__0_1691 [label=""];
}
