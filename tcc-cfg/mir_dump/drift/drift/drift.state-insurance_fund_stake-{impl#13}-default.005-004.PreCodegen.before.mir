// MIR for `insurance_fund_stake::<impl at programs/drift/src/state/insurance_fund_stake.rs:16:10: 16:17>::default` before PreCodegen

fn insurance_fund_stake::<impl at programs/drift/src/state/insurance_fund_stake.rs:16:10: 16:17>::default() -> InsuranceFundStake {
    let mut _0: state::insurance_fund_stake::InsuranceFundStake;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: u128;
    let mut _3: u128;
    let mut _4: u128;
    let mut _5: i64;
    let mut _6: u64;
    let mut _7: i64;
    let mut _8: i64;
    let mut _9: u16;
    let mut _10: [u8; 14];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u128 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u128 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u128 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <i64 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u64 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <i64 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <i64 as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <u16 as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <[u8; 14] as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        _0 = InsuranceFundStake { authority: move _1, if_shares: move _2, last_withdraw_request_shares: move _3, if_base: move _4, last_valid_ts: move _5, last_withdraw_request_value: move _6, last_withdraw_request_ts: move _7, cost_basis: move _8, market_index: move _9, padding: move _10 };
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
