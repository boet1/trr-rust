digraph Mir_0_3171 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;PhoenixFulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::get_best_bid_and_ask::{closure#2}(_1: Closure(DefId(0:3171 ~ drift[d311]::state::fulfillment_params::phoenix::{impl#6}::get_best_bid_and_ask::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(((&amp;ReErased phoenix::state::markets::FIFOOrderId, &amp;ReErased phoenix::state::markets::FIFORestingOrder),)) -&gt; std::option::Option&lt;u64&gt;, []), (&amp;ReErased &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased, &amp;ReErased &amp;ReErased phoenix::program::MarketHeader)]), _2: (&amp;ReErased phoenix::state::markets::FIFOOrderId, &amp;ReErased phoenix::state::markets::FIFORestingOrder)) -&gt; std::option::Option&lt;u64&gt;<br align="left"/>let _3: &amp;ReErased phoenix::state::markets::FIFOOrderId;<br align="left"/>let mut _4: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: &amp;ReErased phoenix::quantities::Ticks;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: &amp;ReErased phoenix::quantities::QuoteLotsPerBaseUnitPerTick;<br align="left"/>let _9: phoenix::quantities::QuoteLotsPerBaseUnitPerTick;<br align="left"/>let mut _10: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _11: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _12: &amp;ReErased &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _13: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _14: &amp;ReErased &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _15: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>debug market =&gt; (*(_1.0: &amp;&amp;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;));<br align="left"/>debug header =&gt; (*(_1.1: &amp;&amp;phoenix::program::MarketHeader));<br align="left"/>debug o =&gt; _3;<br align="left"/>>;
    bb0__0_3171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = (_2.0: &amp;phoenix::state::markets::FIFOOrderId)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_3).0: phoenix::quantities::Ticks)<br/></td></tr><tr><td align="left">_5 = &lt;Ticks as phoenix::quantities::WrapperU64&gt;::as_u64(move _6)</td></tr></table>>];
    bb1__0_3171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_12 = deref_copy (_1.0: &amp;&amp;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;)<br/>_13 = deref_copy (*_12)<br/>_10 = &amp;(*_13)<br/></td></tr><tr><td align="left">_9 = &lt;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt; as phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;&gt;::get_tick_size(move _10)</td></tr></table>>];
    bb2__0_3171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_8 = &amp;_9<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_7 = &lt;QuoteLotsPerBaseUnitPerTick as phoenix::quantities::WrapperU64&gt;::as_u64(move _8)</td></tr></table>>];
    bb3__0_3171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_11)<br/>_14 = deref_copy (_1.1: &amp;&amp;phoenix::program::MarketHeader)<br/>_15 = deref_copy (*_14)<br/>_11 = &amp;(*_15)<br/></td></tr><tr><td align="left">_4 = phoenix_price_in_ticks_to_taker_price(move _5, move _7, move _11)</td></tr></table>>];
    bb4__0_3171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::ok(move _4)</td></tr></table>>];
    bb5__0_3171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_9)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3171 -> bb1__0_3171 [label="return"];
    bb1__0_3171 -> bb2__0_3171 [label="return"];
    bb2__0_3171 -> bb3__0_3171 [label="return"];
    bb3__0_3171 -> bb4__0_3171 [label="return"];
    bb4__0_3171 -> bb5__0_3171 [label="return"];
}
