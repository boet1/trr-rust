digraph Mir_0_744 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_amm(_1: u16, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _4: &amp;ReErased state::state::State, _5: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _6: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _7: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _9: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _10: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased u16;<br align="left"/>let _12: &amp;ReErased u16;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _18: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _20: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _21: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _22: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _23: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _24: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _25: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _26: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _27: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _33: state::oracle::MMOraclePriceData;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::MMOraclePriceData&gt;;<br align="left"/>let mut _35: std::result::Result&lt;state::oracle::MMOraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _36: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _37: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _38: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _39: state::oracle::OraclePriceData;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _42: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: state::oracle::MMOraclePriceData;<br align="left"/>let _48: i128;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _50: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _51: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _52: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _53: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _54: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _55: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _56: &amp;ReErased state::state::State;<br align="left"/>let mut _57: i64;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: i128;<br align="left"/>let mut _64: i128;<br align="left"/>let mut _65: isize;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug oracle_map =&gt; _3;<br align="left"/>debug state =&gt; _4;<br align="left"/>debug clock =&gt; _5;<br align="left"/>debug market =&gt; _6;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug oracle_price_data =&gt; _18;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug mm_oracle_price_data =&gt; _33;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug cost_of_update =&gt; _48;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>>;
    bb0__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_2)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;_1<br/>_11 = &amp;(*_12)<br/></td></tr><tr><td align="left">_9 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _10, move _11)</td></tr></table>>];
    bb1__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_13 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_8 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_7 = move _17<br/>StorageDead(_17)<br/>_6 = &amp;mut _7<br/>_67 = discriminant(_8)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut (*_3)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_6)<br/></td></tr><tr><td align="left">_26 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb4__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>_65 = discriminant(_8)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = PerpMarket::oracle_id(move _25)</td></tr></table>>];
    bb8__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/></td></tr><tr><td align="left">_20 = OracleMap::&lt;'_&gt;::get_price_data(move _21, move _22)</td></tr></table>>];
    bb9__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb10__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_28 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb11__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_19 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_18 = _32<br/>StorageDead(_32)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_6)<br/></td></tr><tr><td align="left">_37 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _38)</td></tr></table>>];
    bb12__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb13__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_36 = &amp;(*_37)<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>_39 = (*_18)<br/>StorageLive(_40)<br/>_40 = ((*_5).0: u64)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;(((*_4).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_35 = PerpMarket::get_mm_oracle_price_data(move _36, move _39, move _40, move _41)</td></tr></table>>];
    bb15__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb16__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_43 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb17__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_34 as Continue).0: state::oracle::MMOraclePriceData)<br/>_33 = _47<br/>StorageDead(_47)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;mut (*_6)<br/></td></tr><tr><td align="left">_52 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _53)</td></tr></table>>];
    bb18__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb19__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_51 = &amp;mut (*_52)<br/>StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_33<br/>_54 = &amp;(*_55)<br/>StorageLive(_56)<br/>_56 = &amp;(*_4)<br/>StorageLive(_57)<br/>_57 = ((*_5).4: i64)<br/>StorageLive(_58)<br/>_58 = ((*_5).0: u64)<br/></td></tr><tr><td align="left">_50 = _update_amm(move _51, move _54, move _56, move _57, move _58)</td></tr></table>>];
    bb21__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb22__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_59 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb23__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_49 as Continue).0: i128)<br/>_48 = _63<br/>StorageDead(_63)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageLive(_64)<br/>_64 = _48<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _64)<br/>StorageDead(_64)<br/>StorageDead(_48)<br/>StorageDead(_33)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb24__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb25__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb29__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">return</td></tr></table>>];
    bb31__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb32__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb33__0_744 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left" balign="left">_69 = discriminant(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_744 -> bb1__0_744 [label="return"];
    bb1__0_744 -> bb2__0_744 [label="return"];
    bb1__0_744 -> bb32__0_744 [label="unwind"];
    bb2__0_744 -> bb3__0_744 [label="0"];
    bb2__0_744 -> bb5__0_744 [label="1"];
    bb2__0_744 -> bb4__0_744 [label="otherwise"];
    bb3__0_744 -> bb7__0_744 [label="return"];
    bb3__0_744 -> bb31__0_744 [label="unwind"];
    bb5__0_744 -> bb6__0_744 [label="return"];
    bb5__0_744 -> bb33__0_744 [label="unwind"];
    bb6__0_744 -> bb29__0_744 [label=""];
    bb7__0_744 -> bb8__0_744 [label="return"];
    bb7__0_744 -> bb31__0_744 [label="unwind"];
    bb8__0_744 -> bb9__0_744 [label="return"];
    bb8__0_744 -> bb31__0_744 [label="unwind"];
    bb9__0_744 -> bb10__0_744 [label="return"];
    bb9__0_744 -> bb31__0_744 [label="unwind"];
    bb10__0_744 -> bb11__0_744 [label="0"];
    bb10__0_744 -> bb12__0_744 [label="1"];
    bb10__0_744 -> bb4__0_744 [label="otherwise"];
    bb11__0_744 -> bb14__0_744 [label="return"];
    bb11__0_744 -> bb31__0_744 [label="unwind"];
    bb12__0_744 -> bb13__0_744 [label="return"];
    bb12__0_744 -> bb31__0_744 [label="unwind"];
    bb13__0_744 -> bb28__0_744 [label=""];
    bb14__0_744 -> bb15__0_744 [label="return"];
    bb14__0_744 -> bb31__0_744 [label="unwind"];
    bb15__0_744 -> bb16__0_744 [label="return"];
    bb15__0_744 -> bb31__0_744 [label="unwind"];
    bb16__0_744 -> bb17__0_744 [label="0"];
    bb16__0_744 -> bb18__0_744 [label="1"];
    bb16__0_744 -> bb4__0_744 [label="otherwise"];
    bb17__0_744 -> bb20__0_744 [label="return"];
    bb17__0_744 -> bb31__0_744 [label="unwind"];
    bb18__0_744 -> bb19__0_744 [label="return"];
    bb18__0_744 -> bb31__0_744 [label="unwind"];
    bb19__0_744 -> bb27__0_744 [label=""];
    bb20__0_744 -> bb21__0_744 [label="return"];
    bb20__0_744 -> bb31__0_744 [label="unwind"];
    bb21__0_744 -> bb22__0_744 [label="return"];
    bb21__0_744 -> bb31__0_744 [label="unwind"];
    bb22__0_744 -> bb23__0_744 [label="0"];
    bb22__0_744 -> bb24__0_744 [label="1"];
    bb22__0_744 -> bb4__0_744 [label="otherwise"];
    bb23__0_744 -> bb26__0_744 [label="return"];
    bb23__0_744 -> bb32__0_744 [label="unwind"];
    bb24__0_744 -> bb25__0_744 [label="return"];
    bb24__0_744 -> bb31__0_744 [label="unwind"];
    bb25__0_744 -> bb27__0_744 [label=""];
    bb26__0_744 -> bb30__0_744 [label=""];
    bb27__0_744 -> bb28__0_744 [label=""];
    bb28__0_744 -> bb29__0_744 [label="return"];
    bb28__0_744 -> bb32__0_744 [label="unwind"];
    bb29__0_744 -> bb30__0_744 [label=""];
    bb31__0_744 -> bb32__0_744 [label="return"];
    bb33__0_744 -> bb32__0_744 [label=""];
}
