digraph Mir_0_9224 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_user_stats_referrer_info(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdateUserStatsReferrerInfo&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _14: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _17: Closure(DefId(0:9227 ~ drift[d311]::instructions::keeper::handle_update_user_stats_referrer_info::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _23: ();<br align="left"/>let mut _24: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _25: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _26: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _27: ();<br align="left"/>let mut _28: &amp;ReErased mut instructions::keeper::UpdateUserStatsReferrerInfo&lt;ReErased&gt;;<br align="left"/>let mut _29: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _30: &amp;ReErased mut instructions::keeper::UpdateUserStatsReferrerInfo&lt;ReErased&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let mut _32: isize;<br align="left"/>let mut _33: isize;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>let mut _36: isize;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug user_stats =&gt; _12;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>>;
    bb0__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_28 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserStatsReferrerInfo&lt;'_&gt;)<br/>_6 = &amp;((*_28).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_29 = deref_copy (*_6)<br/>_41 = (((_29.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_41)<br/></td></tr><tr><td align="left">_4 = constraints::exchange_not_paused(move _5)</td></tr></table>>];
    bb1__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_31 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_30 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdateUserStatsReferrerInfo&lt;'_&gt;)<br/>_16 = &amp;((*_30).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_15 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _16)</td></tr></table>>];
    bb4__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_37 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>_17 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_14 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _15, move _17)</td></tr></table>>];
    bb8__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb9__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_18 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb10__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_13 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_12 = move _22<br/>StorageDead(_22)<br/>_35 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;mut _12<br/></td></tr><tr><td align="left">_25 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _26)</td></tr></table>>];
    bb11__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb12__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_33 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_24 = &amp;mut (*_25)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_23 = UserStats::update_referrer_status(move _24)</td></tr></table>>];
    bb14__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageLive(_27)<br/>_27 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb15__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb17__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb18__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb19__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left" balign="left">_39 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_9224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left" balign="left">_40 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9224 -> bb1__0_9224 [label="return"];
    bb1__0_9224 -> bb2__0_9224 [label="return"];
    bb1__0_9224 -> bb18__0_9224 [label="unwind"];
    bb2__0_9224 -> bb3__0_9224 [label="0"];
    bb2__0_9224 -> bb5__0_9224 [label="1"];
    bb2__0_9224 -> bb4__0_9224 [label="otherwise"];
    bb3__0_9224 -> bb7__0_9224 [label="return"];
    bb5__0_9224 -> bb6__0_9224 [label="return"];
    bb5__0_9224 -> bb20__0_9224 [label="unwind"];
    bb6__0_9224 -> bb16__0_9224 [label=""];
    bb7__0_9224 -> bb8__0_9224 [label="return"];
    bb7__0_9224 -> bb18__0_9224 [label="unwind"];
    bb8__0_9224 -> bb9__0_9224 [label="return"];
    bb8__0_9224 -> bb18__0_9224 [label="unwind"];
    bb9__0_9224 -> bb10__0_9224 [label="0"];
    bb9__0_9224 -> bb11__0_9224 [label="1"];
    bb9__0_9224 -> bb4__0_9224 [label="otherwise"];
    bb10__0_9224 -> bb13__0_9224 [label="return"];
    bb10__0_9224 -> bb17__0_9224 [label="unwind"];
    bb11__0_9224 -> bb12__0_9224 [label="return"];
    bb11__0_9224 -> bb19__0_9224 [label="unwind"];
    bb12__0_9224 -> bb16__0_9224 [label=""];
    bb13__0_9224 -> bb14__0_9224 [label="return"];
    bb13__0_9224 -> bb17__0_9224 [label="unwind"];
    bb14__0_9224 -> bb15__0_9224 [label="return"];
    bb14__0_9224 -> bb18__0_9224 [label="unwind"];
    bb15__0_9224 -> bb16__0_9224 [label=""];
    bb17__0_9224 -> bb18__0_9224 [label="return"];
    bb19__0_9224 -> bb18__0_9224 [label=""];
    bb20__0_9224 -> bb18__0_9224 [label=""];
}
