digraph Mir_0_2338 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_if_shares_lost(_1: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake, _2: &amp;ReErased state::spot_market::SpotMarket, _3: u64) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let _5: u64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u64;<br align="left"/>let _16: u128;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: u64;<br align="left"/>let _20: u128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _27: u128;<br align="left"/>let mut _28: u128;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: u128;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _36: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let _49: ();<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _51: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: ();<br align="left"/>let _56: error::ErrorCode;<br align="left"/>let _57: ();<br align="left"/>let mut _58: &amp;ReErased str;<br align="left"/>let _59: &amp;ReErased str;<br align="left"/>let mut _60: &amp;ReErased std::string::String;<br align="left"/>let _61: &amp;ReErased std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let mut _64: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _67: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _68: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _72: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _73: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased error::ErrorCode;<br align="left"/>let _75: &amp;ReErased error::ErrorCode;<br align="left"/>let _76: ();<br align="left"/>let mut _77: &amp;ReErased str;<br align="left"/>let _78: &amp;ReErased str;<br align="left"/>let mut _79: &amp;ReErased std::string::String;<br align="left"/>let _80: &amp;ReErased std::string::String;<br align="left"/>let _81: std::string::String;<br align="left"/>let _82: std::string::String;<br align="left"/>let mut _83: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _85: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _86: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _87: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _89: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _90: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _91: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _92: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased u128;<br align="left"/>let _94: &amp;ReErased u128;<br align="left"/>let mut _95: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased u128;<br align="left"/>let _97: &amp;ReErased u128;<br align="left"/>let mut _98: error::ErrorCode;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: ();<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _106: u128;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: u128;<br align="left"/>let mut _113: u128;<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _115: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug insurance_fund_stake =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug insurance_fund_vault_balance =&gt; _3;<br align="left"/>debug n_shares =&gt; _4;<br align="left"/>debug amount =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug if_shares_lost =&gt; _16;<br align="left"/>debug new_n_shares =&gt; _20;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug error_code =&gt; _56;<br align="left"/>debug res =&gt; _63;<br align="left"/>debug res =&gt; _82;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>>;
    bb0__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = ((*_1).2: u128)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _4<br/>StorageLive(_9)<br/>_9 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_10)<br/>_10 = _3<br/></td></tr><tr><td align="left">_7 = if_shares_to_vault_amount(move _8, move _9, move _10)</td></tr></table>>];
    bb1__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_6 as Continue).0: u64)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _5<br/>StorageLive(_19)<br/>_19 = ((*_1).5: u64)<br/>_17 = Gt(move _18, move _19)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb4__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = ((*_1).5: u64)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_28)<br/>_28 = _4<br/></td></tr><tr><td align="left">_26 = &lt;u128 as SafeMath&gt;::safe_sub(move _27, move _28)</td></tr></table>>];
    bb8__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>_16 = const 0_u128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb10__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_29 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb11__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_25 as Continue).0: u128)<br/>_24 = _33<br/>StorageDead(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _3<br/>StorageLive(_38)<br/>_38 = ((*_1).5: u64)<br/></td></tr><tr><td align="left">_36 = &lt;u64 as SafeMath&gt;::safe_sub(move _37, move _38)</td></tr></table>>];
    bb12__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb13__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb15__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_39 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb16__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_35 as Continue).0: u64)<br/>_34 = _43<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_22 = vault_amount_to_if_shares(move _23, move _24, move _34)</td></tr></table>>];
    bb17__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb18__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_34)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb20__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_44 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb21__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_21 as Continue).0: u128)<br/>_20 = _48<br/>StorageDead(_48)<br/>StorageDead(_35)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _20<br/>StorageLive(_54)<br/>_54 = _4<br/>_52 = Le(move _53, move _54)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb22__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb23__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_55)<br/>_55 = ()<br/>_51 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _55)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_56)<br/>_56 = error::ErrorCode::InvalidIFSharesDetected<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_115 = const _<br/>_67 = &amp;(*_115)<br/>_66 = &amp;(*_67)<br/>_65 = move _66 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;_56<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _74)</td></tr></table>>];
    bb26__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_72 = [move _73]<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/>_69 = move _70 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_64 = Arguments::&lt;'_&gt;::new_v1(move _65, move _69)</td></tr></table>>];
    bb27__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = format(move _64)</td></tr></table>>];
    bb28__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>_62 = move _63<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = &lt;String as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb29__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = solana_program::log::sol_log(move _58)</td></tr></table>>];
    bb30__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb31__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_114 = const _<br/>_86 = &amp;(*_114)<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_20<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _93)</td></tr></table>>];
    bb32__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;_4<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _96)</td></tr></table>>];
    bb33__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_91 = [move _92, move _95]<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>_90 = &amp;_91<br/>_89 = &amp;(*_90)<br/>_88 = move _89 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_83 = Arguments::&lt;'_&gt;::new_v1(move _84, move _88)</td></tr></table>>];
    bb34__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = format(move _83)</td></tr></table>>];
    bb35__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>_81 = move _82<br/>StorageDead(_82)<br/>_80 = &amp;_81<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = &lt;String as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb36__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_77 = &amp;(*_78)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_76 = solana_program::log::sol_log(move _77)</td></tr></table>>];
    bb37__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb38__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageLive(_98)<br/>_98 = _56<br/>_51 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _98)<br/>StorageDead(_98)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb40__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_99 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb41__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_50 as Continue).0: ())<br/>_49 = _103<br/>StorageDead(_103)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _4<br/>StorageLive(_107)<br/>_107 = _20<br/></td></tr><tr><td align="left">_105 = &lt;u128 as SafeMath&gt;::safe_sub(move _106, move _107)</td></tr></table>>];
    bb42__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb43__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb45__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_108 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb46__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_104 as Continue).0: u128)<br/>_16 = _112<br/>StorageDead(_112)<br/>StorageDead(_20)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb48__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_20)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_113)<br/>_113 = _16<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _113)<br/>StorageDead(_113)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">return</td></tr></table>>];
    bb56__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb57__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb58__0_2338 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2338 -> bb1__0_2338 [label="return"];
    bb1__0_2338 -> bb2__0_2338 [label="return"];
    bb2__0_2338 -> bb3__0_2338 [label="0"];
    bb2__0_2338 -> bb5__0_2338 [label="1"];
    bb2__0_2338 -> bb4__0_2338 [label="otherwise"];
    bb3__0_2338 -> bb8__0_2338 [label="0"];
    bb3__0_2338 -> bb7__0_2338 [label="otherwise"];
    bb5__0_2338 -> bb6__0_2338 [label="return"];
    bb6__0_2338 -> bb54__0_2338 [label=""];
    bb7__0_2338 -> bb9__0_2338 [label="return"];
    bb8__0_2338 -> bb49__0_2338 [label=""];
    bb9__0_2338 -> bb10__0_2338 [label="return"];
    bb10__0_2338 -> bb11__0_2338 [label="0"];
    bb10__0_2338 -> bb12__0_2338 [label="1"];
    bb10__0_2338 -> bb4__0_2338 [label="otherwise"];
    bb11__0_2338 -> bb14__0_2338 [label="return"];
    bb12__0_2338 -> bb13__0_2338 [label="return"];
    bb13__0_2338 -> bb51__0_2338 [label=""];
    bb14__0_2338 -> bb15__0_2338 [label="return"];
    bb15__0_2338 -> bb16__0_2338 [label="0"];
    bb15__0_2338 -> bb17__0_2338 [label="1"];
    bb15__0_2338 -> bb4__0_2338 [label="otherwise"];
    bb16__0_2338 -> bb19__0_2338 [label="return"];
    bb17__0_2338 -> bb18__0_2338 [label="return"];
    bb18__0_2338 -> bb50__0_2338 [label=""];
    bb19__0_2338 -> bb20__0_2338 [label="return"];
    bb20__0_2338 -> bb21__0_2338 [label="0"];
    bb20__0_2338 -> bb22__0_2338 [label="1"];
    bb20__0_2338 -> bb4__0_2338 [label="otherwise"];
    bb21__0_2338 -> bb25__0_2338 [label="0"];
    bb21__0_2338 -> bb24__0_2338 [label="otherwise"];
    bb22__0_2338 -> bb23__0_2338 [label="return"];
    bb23__0_2338 -> bb50__0_2338 [label=""];
    bb24__0_2338 -> bb39__0_2338 [label=""];
    bb25__0_2338 -> bb26__0_2338 [label="return"];
    bb26__0_2338 -> bb27__0_2338 [label="return"];
    bb27__0_2338 -> bb28__0_2338 [label="return"];
    bb28__0_2338 -> bb29__0_2338 [label="return"];
    bb28__0_2338 -> bb57__0_2338 [label="unwind"];
    bb29__0_2338 -> bb30__0_2338 [label="return"];
    bb29__0_2338 -> bb57__0_2338 [label="unwind"];
    bb30__0_2338 -> bb31__0_2338 [label="return"];
    bb30__0_2338 -> bb58__0_2338 [label="unwind"];
    bb31__0_2338 -> bb32__0_2338 [label="return"];
    bb32__0_2338 -> bb33__0_2338 [label="return"];
    bb33__0_2338 -> bb34__0_2338 [label="return"];
    bb34__0_2338 -> bb35__0_2338 [label="return"];
    bb35__0_2338 -> bb36__0_2338 [label="return"];
    bb35__0_2338 -> bb56__0_2338 [label="unwind"];
    bb36__0_2338 -> bb37__0_2338 [label="return"];
    bb36__0_2338 -> bb56__0_2338 [label="unwind"];
    bb37__0_2338 -> bb38__0_2338 [label="return"];
    bb37__0_2338 -> bb58__0_2338 [label="unwind"];
    bb38__0_2338 -> bb39__0_2338 [label=""];
    bb39__0_2338 -> bb40__0_2338 [label="return"];
    bb40__0_2338 -> bb41__0_2338 [label="0"];
    bb40__0_2338 -> bb42__0_2338 [label="1"];
    bb40__0_2338 -> bb4__0_2338 [label="otherwise"];
    bb41__0_2338 -> bb44__0_2338 [label="return"];
    bb42__0_2338 -> bb43__0_2338 [label="return"];
    bb43__0_2338 -> bb52__0_2338 [label=""];
    bb44__0_2338 -> bb45__0_2338 [label="return"];
    bb45__0_2338 -> bb46__0_2338 [label="0"];
    bb45__0_2338 -> bb47__0_2338 [label="1"];
    bb45__0_2338 -> bb4__0_2338 [label="otherwise"];
    bb46__0_2338 -> bb49__0_2338 [label=""];
    bb47__0_2338 -> bb48__0_2338 [label="return"];
    bb48__0_2338 -> bb53__0_2338 [label=""];
    bb49__0_2338 -> bb55__0_2338 [label=""];
    bb50__0_2338 -> bb51__0_2338 [label=""];
    bb51__0_2338 -> bb52__0_2338 [label=""];
    bb52__0_2338 -> bb53__0_2338 [label=""];
    bb53__0_2338 -> bb54__0_2338 [label=""];
    bb54__0_2338 -> bb55__0_2338 [label=""];
    bb56__0_2338 -> bb58__0_2338 [label="return"];
    bb57__0_2338 -> bb58__0_2338 [label="return"];
}
