digraph Mir_0_2795 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_spot_market_utilization(_1: &amp;ReErased state::spot_market::SpotMarket) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _2: u128;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _7: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _8: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _9: state::spot_market::SpotBalanceType;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u128;<br align="left"/>let _15: u128;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _20: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _21: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _22: state::spot_market::SpotBalanceType;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: u128;<br align="left"/>let _28: u128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: u128;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _40: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug deposit_token_amount =&gt; _2;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug borrow_token_amount =&gt; _15;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug utilization =&gt; _28;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>>;
    bb0__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).11: u128)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_40 = const _<br/>_8 = &amp;(*_40)<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_4 = get_token_amount(move _5, move _6, move _7)</td></tr></table>>];
    bb1__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_10 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_3 as Continue).0: u128)<br/>_2 = _14<br/>StorageDead(_14)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_1).12: u128)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_39 = const _<br/>_21 = &amp;(*_39)<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_17 = get_token_amount(move _18, move _19, move _20)</td></tr></table>>];
    bb4__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_23 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb9__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_16 as Continue).0: u128)<br/>_15 = _27<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _2<br/>StorageLive(_32)<br/>_32 = _15<br/></td></tr><tr><td align="left">_30 = calculate_utilization(move _31, move _32)</td></tr></table>>];
    bb10__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb11__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb13__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_33 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb14__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_29 as Continue).0: u128)<br/>_28 = _37<br/>StorageDead(_37)<br/>StorageDead(_29)<br/>StorageLive(_38)<br/>_38 = _28<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _38)<br/>StorageDead(_38)<br/>StorageDead(_28)<br/>StorageDead(_15)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb16__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2795 -> bb1__0_2795 [label="return"];
    bb1__0_2795 -> bb2__0_2795 [label="return"];
    bb2__0_2795 -> bb3__0_2795 [label="0"];
    bb2__0_2795 -> bb5__0_2795 [label="1"];
    bb2__0_2795 -> bb4__0_2795 [label="otherwise"];
    bb3__0_2795 -> bb7__0_2795 [label="return"];
    bb5__0_2795 -> bb6__0_2795 [label="return"];
    bb6__0_2795 -> bb18__0_2795 [label=""];
    bb7__0_2795 -> bb8__0_2795 [label="return"];
    bb8__0_2795 -> bb9__0_2795 [label="0"];
    bb8__0_2795 -> bb10__0_2795 [label="1"];
    bb8__0_2795 -> bb4__0_2795 [label="otherwise"];
    bb9__0_2795 -> bb12__0_2795 [label="return"];
    bb10__0_2795 -> bb11__0_2795 [label="return"];
    bb11__0_2795 -> bb17__0_2795 [label=""];
    bb12__0_2795 -> bb13__0_2795 [label="return"];
    bb13__0_2795 -> bb14__0_2795 [label="0"];
    bb13__0_2795 -> bb15__0_2795 [label="1"];
    bb13__0_2795 -> bb4__0_2795 [label="otherwise"];
    bb14__0_2795 -> bb19__0_2795 [label=""];
    bb15__0_2795 -> bb16__0_2795 [label="return"];
    bb16__0_2795 -> bb17__0_2795 [label=""];
    bb17__0_2795 -> bb18__0_2795 [label=""];
    bb18__0_2795 -> bb19__0_2795 [label=""];
}
