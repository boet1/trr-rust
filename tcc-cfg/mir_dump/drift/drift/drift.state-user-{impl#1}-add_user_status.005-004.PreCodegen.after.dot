digraph Mir_0_4276 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn User::add_user_status(_1: &amp;ReErased mut state::user::User, _2: state::user::UserStatus) -&gt; ()<br align="left"/>let mut _3: u8;<br align="left"/>let _4: state::user::UserStatus;<br align="left"/>let mut _5: isize;<br align="left"/>let mut _6: u8;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug status =&gt; _2;<br align="left"/>>;
    bb0__0_4276 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = _2<br/>_5 = discriminant(_4)<br/>_6 = _5 as u8 (IntToInt)<br/>_7 = Ge(_6, const 1_u8)<br/>_8 = Le(_6, const 16_u8)<br/>_9 = BitAnd(move _7, move _8)<br/>assume(move _9)<br/>_3 = move _5 as u8 (IntToInt)<br/>StorageDead(_4)<br/>((*_1).19: u8) = BitOr(((*_1).19: u8), move _3)<br/>StorageDead(_3)<br/>_0 = const ()<br/></td></tr><tr><td align="left">return</td></tr></table>>];
}
