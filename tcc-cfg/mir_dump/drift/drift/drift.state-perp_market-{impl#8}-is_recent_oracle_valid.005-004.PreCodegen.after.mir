// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:1269:1: 1269:9>::is_recent_oracle_valid` after PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:1269:1: 1269:9>::is_recent_oracle_valid(_1: &AMM, _2: u64) -> std::result::Result<bool, error::ErrorCode> {
    debug self => _1;
    debug current_slot => _2;
    let mut _0: std::result::Result<bool, error::ErrorCode>;
    let mut _3: bool;
    let mut _4: bool;
    let mut _5: u64;
    let mut _6: u64;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).73: bool);
        switchInt(move _4) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageLive(_5);
        _5 = _2;
        StorageLive(_6);
        _6 = ((*_1).47: u64);
        _3 = Eq(move _5, move _6);
        StorageDead(_6);
        StorageDead(_5);
        goto -> bb3;
    }

    bb2: {
        _3 = const false;
        goto -> bb3;
    }

    bb3: {
        StorageDead(_4);
        _0 = std::result::Result::<bool, error::ErrorCode>::Ok(move _3);
        StorageDead(_3);
        return;
    }
}
