digraph Mir_0_5555 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_reset_amm_oracle_twap(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::RepegCurve&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _14: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _23: ();<br align="left"/>let _24: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _25: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _30: Closure(DefId(0:5556 ~ drift[d311]::instructions::admin::handle_reset_amm_oracle_twap::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _36: ();<br align="left"/>let mut _37: &amp;ReErased str;<br align="left"/>let _38: &amp;ReErased str;<br align="left"/>let mut _39: &amp;ReErased std::string::String;<br align="left"/>let _40: &amp;ReErased std::string::String;<br align="left"/>let _41: std::string::String;<br align="left"/>let _42: std::string::String;<br align="left"/>let mut _43: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _46: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _47: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _51: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _52: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased u16;<br align="left"/>let _54: &amp;ReErased u16;<br align="left"/>let _55: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _56: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _57: ();<br align="left"/>let mut _58: &amp;ReErased str;<br align="left"/>let _59: &amp;ReErased str;<br align="left"/>let mut _60: &amp;ReErased std::string::String;<br align="left"/>let _61: &amp;ReErased std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let mut _64: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _67: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _68: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _72: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _73: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased i64;<br align="left"/>let _75: &amp;ReErased i64;<br align="left"/>let _76: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _77: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _78: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _79: &amp;ReErased i64;<br align="left"/>let _80: &amp;ReErased i64;<br align="left"/>let _81: i64;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _83: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _86: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: i64;<br align="left"/>let _92: ();<br align="left"/>let mut _93: &amp;ReErased str;<br align="left"/>let _94: &amp;ReErased str;<br align="left"/>let mut _95: &amp;ReErased std::string::String;<br align="left"/>let _96: &amp;ReErased std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let _98: std::string::String;<br align="left"/>let mut _99: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _103: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _107: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _108: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased i64;<br align="left"/>let _110: &amp;ReErased i64;<br align="left"/>let _111: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _112: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _113: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased i64;<br align="left"/>let _115: &amp;ReErased i64;<br align="left"/>let _116: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _117: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _118: i64;<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _120: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _121: u64;<br align="left"/>let mut _122: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _123: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: i64;<br align="left"/>let mut _129: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _130: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _131: i64;<br align="left"/>let mut _132: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _133: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _134: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _135: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _136: ();<br align="left"/>let mut _137: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _140: &amp;ReErased mut instructions::admin::RepegCurve&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased mut instructions::admin::RepegCurve&lt;ReErased&gt;;<br align="left"/>let mut _142: &amp;ReErased mut instructions::admin::RepegCurve&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased mut instructions::admin::RepegCurve&lt;ReErased&gt;;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug perp_market =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug res =&gt; _42;<br align="left"/>debug res =&gt; _63;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug res =&gt; _98;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>>;
    bb0__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_140 = deref_copy (_1.1: &amp;mut instructions::admin::RepegCurve&lt;'_&gt;)<br/>_6 = &amp;((*_140).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = constraints::perp_market_valid(move _5)</td></tr></table>>];
    bb1__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_144 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_141 = deref_copy (_1.1: &amp;mut instructions::admin::RepegCurve&lt;'_&gt;)<br/>_16 = &amp;((*_141).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_15 = &amp;(*_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_142 = deref_copy (_1.1: &amp;mut instructions::admin::RepegCurve&lt;'_&gt;)<br/>_18 = &amp;((*_142).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_14 = constraints::valid_oracle_for_perp_market(move _15, move _17)</td></tr></table>>];
    bb4__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_154 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_19 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_13 as Continue).0: ())<br/>_12 = _23<br/>StorageDead(_23)<br/>_146 = discriminant(_13)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_143 = deref_copy (_1.1: &amp;mut instructions::admin::RepegCurve&lt;'_&gt;)<br/>_29 = &amp;((*_143).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_28 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _29)</td></tr></table>>];
    bb10__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_152 = discriminant(_13)<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_27 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _28, move _30)</td></tr></table>>];
    bb13__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb14__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb15__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_26 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_25 = move _35<br/>StorageDead(_35)<br/>_24 = &amp;mut _25<br/>_150 = discriminant(_26)<br/>StorageDead(_26)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_139 = const _<br/>_46 = &amp;(*_139)<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;(*_24)<br/></td></tr><tr><td align="left">_55 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _56)</td></tr></table>>];
    bb16__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb17__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_148 = discriminant(_26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_54 = &amp;((*_55).21: u16)<br/>_53 = &amp;(*_54)<br/></td></tr><tr><td align="left">_52 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _53)</td></tr></table>>];
    bb19__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = [move _52]<br/>StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/>_48 = move _49 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_43 = Arguments::&lt;'_&gt;::new_v1(move _44, move _48)</td></tr></table>>];
    bb20__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = format(move _43)</td></tr></table>>];
    bb21__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>_41 = move _42<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = &lt;String as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb22__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_37 = &amp;(*_38)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_36 = solana_program::log::sol_log(move _37)</td></tr></table>>];
    bb23__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb24__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_138 = const _<br/>_67 = &amp;(*_138)<br/>_66 = &amp;(*_67)<br/>_65 = move _66 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_24)<br/></td></tr><tr><td align="left">_76 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _77)</td></tr></table>>];
    bb25__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_75 = &amp;((((*_76).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _74)</td></tr></table>>];
    bb26__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;(*_24)<br/></td></tr><tr><td align="left">_85 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb27__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_84 = (((*_85).1: state::perp_market::AMM).45: u64)<br/></td></tr><tr><td align="left">_83 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _84)</td></tr></table>>];
    bb28__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb29__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_87 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb30__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_82 as Continue).0: i64)<br/>_81 = _91<br/>StorageDead(_91)<br/>_80 = &amp;_81<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _79)</td></tr></table>>];
    bb31__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb32__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_72 = [move _73, move _78]<br/>StorageDead(_78)<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/>_69 = move _70 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_64 = Arguments::&lt;'_&gt;::new_v1(move _65, move _69)</td></tr></table>>];
    bb34__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = format(move _64)</td></tr></table>>];
    bb35__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>_62 = move _63<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = &lt;String as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb36__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = solana_program::log::sol_log(move _58)</td></tr></table>>];
    bb37__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb38__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_137 = const _<br/>_102 = &amp;(*_137)<br/>_101 = &amp;(*_102)<br/>_100 = move _101 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_101)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_24)<br/></td></tr><tr><td align="left">_111 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _112)</td></tr></table>>];
    bb39__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_110 = &amp;((((*_111).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).5: i64)<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _109)</td></tr></table>>];
    bb40__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;(*_24)<br/></td></tr><tr><td align="left">_116 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _117)</td></tr></table>>];
    bb41__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_115 = &amp;(((*_116).1: state::perp_market::AMM).62: i64)<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _114)</td></tr></table>>];
    bb42__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_107 = [move _108, move _113]<br/>StorageDead(_113)<br/>StorageDead(_108)<br/>_106 = &amp;_107<br/>_105 = &amp;(*_106)<br/>_104 = move _105 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_99 = Arguments::&lt;'_&gt;::new_v1(move _100, move _104)</td></tr></table>>];
    bb43__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = format(move _99)</td></tr></table>>];
    bb44__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>_97 = move _98<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = &lt;String as Deref&gt;::deref(move _95)</td></tr></table>>];
    bb45__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_93 = &amp;(*_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_92 = solana_program::log::sol_log(move _93)</td></tr></table>>];
    bb46__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb47__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;(*_24)<br/></td></tr><tr><td align="left">_122 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _123)</td></tr></table>>];
    bb48__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_121 = (((*_122).1: state::perp_market::AMM).45: u64)<br/></td></tr><tr><td align="left">_120 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _121)</td></tr></table>>];
    bb49__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb50__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_124 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb51__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_119 as Continue).0: i64)<br/>_118 = _128<br/>StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_129 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _130)</td></tr></table>>];
    bb52__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb53__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_118)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>((((*_129).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64) = move _118<br/>StorageDead(_118)<br/>StorageDead(_129)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;(*_24)<br/></td></tr><tr><td align="left">_132 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb55__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = (((*_132).1: state::perp_market::AMM).62: i64)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_134 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _135)</td></tr></table>>];
    bb56__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>((((*_134).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).5: i64) = move _131<br/>StorageDead(_131)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageLive(_136)<br/>_136 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _136)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb57__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb59__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left">return</td></tr></table>>];
    bb61__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb62__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb63__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb64__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb65__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb66__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_156 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_157 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_5555 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_158 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5555 -> bb1__0_5555 [label="return"];
    bb1__0_5555 -> bb2__0_5555 [label="return"];
    bb1__0_5555 -> bb65__0_5555 [label="unwind"];
    bb2__0_5555 -> bb3__0_5555 [label="0"];
    bb2__0_5555 -> bb5__0_5555 [label="1"];
    bb2__0_5555 -> bb4__0_5555 [label="otherwise"];
    bb3__0_5555 -> bb7__0_5555 [label="return"];
    bb5__0_5555 -> bb6__0_5555 [label="return"];
    bb5__0_5555 -> bb68__0_5555 [label="unwind"];
    bb6__0_5555 -> bb60__0_5555 [label=""];
    bb7__0_5555 -> bb8__0_5555 [label="return"];
    bb7__0_5555 -> bb65__0_5555 [label="unwind"];
    bb8__0_5555 -> bb9__0_5555 [label="0"];
    bb8__0_5555 -> bb10__0_5555 [label="1"];
    bb8__0_5555 -> bb4__0_5555 [label="otherwise"];
    bb9__0_5555 -> bb12__0_5555 [label="return"];
    bb10__0_5555 -> bb11__0_5555 [label="return"];
    bb10__0_5555 -> bb67__0_5555 [label="unwind"];
    bb11__0_5555 -> bb60__0_5555 [label=""];
    bb12__0_5555 -> bb13__0_5555 [label="return"];
    bb12__0_5555 -> bb65__0_5555 [label="unwind"];
    bb13__0_5555 -> bb14__0_5555 [label="return"];
    bb13__0_5555 -> bb65__0_5555 [label="unwind"];
    bb14__0_5555 -> bb15__0_5555 [label="0"];
    bb14__0_5555 -> bb16__0_5555 [label="1"];
    bb14__0_5555 -> bb4__0_5555 [label="otherwise"];
    bb15__0_5555 -> bb18__0_5555 [label="return"];
    bb15__0_5555 -> bb64__0_5555 [label="unwind"];
    bb16__0_5555 -> bb17__0_5555 [label="return"];
    bb16__0_5555 -> bb66__0_5555 [label="unwind"];
    bb17__0_5555 -> bb59__0_5555 [label=""];
    bb18__0_5555 -> bb19__0_5555 [label="return"];
    bb18__0_5555 -> bb64__0_5555 [label="unwind"];
    bb19__0_5555 -> bb20__0_5555 [label="return"];
    bb19__0_5555 -> bb64__0_5555 [label="unwind"];
    bb20__0_5555 -> bb21__0_5555 [label="return"];
    bb20__0_5555 -> bb64__0_5555 [label="unwind"];
    bb21__0_5555 -> bb22__0_5555 [label="return"];
    bb21__0_5555 -> bb63__0_5555 [label="unwind"];
    bb22__0_5555 -> bb23__0_5555 [label="return"];
    bb22__0_5555 -> bb63__0_5555 [label="unwind"];
    bb23__0_5555 -> bb24__0_5555 [label="return"];
    bb23__0_5555 -> bb64__0_5555 [label="unwind"];
    bb24__0_5555 -> bb25__0_5555 [label="return"];
    bb24__0_5555 -> bb64__0_5555 [label="unwind"];
    bb25__0_5555 -> bb26__0_5555 [label="return"];
    bb25__0_5555 -> bb64__0_5555 [label="unwind"];
    bb26__0_5555 -> bb27__0_5555 [label="return"];
    bb26__0_5555 -> bb64__0_5555 [label="unwind"];
    bb27__0_5555 -> bb28__0_5555 [label="return"];
    bb27__0_5555 -> bb64__0_5555 [label="unwind"];
    bb28__0_5555 -> bb29__0_5555 [label="return"];
    bb28__0_5555 -> bb64__0_5555 [label="unwind"];
    bb29__0_5555 -> bb30__0_5555 [label="0"];
    bb29__0_5555 -> bb31__0_5555 [label="1"];
    bb29__0_5555 -> bb4__0_5555 [label="otherwise"];
    bb30__0_5555 -> bb33__0_5555 [label="return"];
    bb30__0_5555 -> bb64__0_5555 [label="unwind"];
    bb31__0_5555 -> bb32__0_5555 [label="return"];
    bb31__0_5555 -> bb64__0_5555 [label="unwind"];
    bb32__0_5555 -> bb58__0_5555 [label=""];
    bb33__0_5555 -> bb34__0_5555 [label="return"];
    bb33__0_5555 -> bb64__0_5555 [label="unwind"];
    bb34__0_5555 -> bb35__0_5555 [label="return"];
    bb34__0_5555 -> bb64__0_5555 [label="unwind"];
    bb35__0_5555 -> bb36__0_5555 [label="return"];
    bb35__0_5555 -> bb62__0_5555 [label="unwind"];
    bb36__0_5555 -> bb37__0_5555 [label="return"];
    bb36__0_5555 -> bb62__0_5555 [label="unwind"];
    bb37__0_5555 -> bb38__0_5555 [label="return"];
    bb37__0_5555 -> bb64__0_5555 [label="unwind"];
    bb38__0_5555 -> bb39__0_5555 [label="return"];
    bb38__0_5555 -> bb64__0_5555 [label="unwind"];
    bb39__0_5555 -> bb40__0_5555 [label="return"];
    bb39__0_5555 -> bb64__0_5555 [label="unwind"];
    bb40__0_5555 -> bb41__0_5555 [label="return"];
    bb40__0_5555 -> bb64__0_5555 [label="unwind"];
    bb41__0_5555 -> bb42__0_5555 [label="return"];
    bb41__0_5555 -> bb64__0_5555 [label="unwind"];
    bb42__0_5555 -> bb43__0_5555 [label="return"];
    bb42__0_5555 -> bb64__0_5555 [label="unwind"];
    bb43__0_5555 -> bb44__0_5555 [label="return"];
    bb43__0_5555 -> bb64__0_5555 [label="unwind"];
    bb44__0_5555 -> bb45__0_5555 [label="return"];
    bb44__0_5555 -> bb61__0_5555 [label="unwind"];
    bb45__0_5555 -> bb46__0_5555 [label="return"];
    bb45__0_5555 -> bb61__0_5555 [label="unwind"];
    bb46__0_5555 -> bb47__0_5555 [label="return"];
    bb46__0_5555 -> bb64__0_5555 [label="unwind"];
    bb47__0_5555 -> bb48__0_5555 [label="return"];
    bb47__0_5555 -> bb64__0_5555 [label="unwind"];
    bb48__0_5555 -> bb49__0_5555 [label="return"];
    bb48__0_5555 -> bb64__0_5555 [label="unwind"];
    bb49__0_5555 -> bb50__0_5555 [label="return"];
    bb49__0_5555 -> bb64__0_5555 [label="unwind"];
    bb50__0_5555 -> bb51__0_5555 [label="0"];
    bb50__0_5555 -> bb52__0_5555 [label="1"];
    bb50__0_5555 -> bb4__0_5555 [label="otherwise"];
    bb51__0_5555 -> bb54__0_5555 [label="return"];
    bb51__0_5555 -> bb64__0_5555 [label="unwind"];
    bb52__0_5555 -> bb53__0_5555 [label="return"];
    bb52__0_5555 -> bb64__0_5555 [label="unwind"];
    bb53__0_5555 -> bb58__0_5555 [label=""];
    bb54__0_5555 -> bb55__0_5555 [label="return"];
    bb54__0_5555 -> bb64__0_5555 [label="unwind"];
    bb55__0_5555 -> bb56__0_5555 [label="return"];
    bb55__0_5555 -> bb64__0_5555 [label="unwind"];
    bb56__0_5555 -> bb57__0_5555 [label="return"];
    bb56__0_5555 -> bb65__0_5555 [label="unwind"];
    bb57__0_5555 -> bb60__0_5555 [label=""];
    bb58__0_5555 -> bb59__0_5555 [label="return"];
    bb58__0_5555 -> bb65__0_5555 [label="unwind"];
    bb59__0_5555 -> bb60__0_5555 [label=""];
    bb61__0_5555 -> bb64__0_5555 [label="return"];
    bb62__0_5555 -> bb64__0_5555 [label="return"];
    bb63__0_5555 -> bb64__0_5555 [label="return"];
    bb64__0_5555 -> bb65__0_5555 [label="return"];
    bb66__0_5555 -> bb65__0_5555 [label=""];
    bb67__0_5555 -> bb65__0_5555 [label=""];
    bb68__0_5555 -> bb65__0_5555 [label=""];
}
