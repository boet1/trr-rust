digraph Mir_0_1721 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_update_user_pool_id(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::UpdateUser&lt;ReErased&gt;&gt;, _2: u16, _3: u8) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _5: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _6: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _7: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _8: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _9: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _10: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _11: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _13: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _15: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _16: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _17: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _18: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _19: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _20: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: anchor_lang::prelude::Clock;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _24: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _29: anchor_lang::prelude::Clock;<br align="left"/>let mut _30: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _36: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _41: Closure(DefId(0:11793 ~ drift[d311]::instructions::user::handle_update_user_pool_id::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _47: u8;<br align="left"/>let mut _48: &amp;ReErased mut state::user::User;<br align="left"/>let mut _49: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _50: bool;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _52: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased state::user::User;<br align="left"/>let _54: &amp;ReErased state::user::User;<br align="left"/>let mut _55: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _56: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _57: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _58: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _59: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _60: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: bool;<br align="left"/>let mut _68: ();<br align="left"/>let mut _69: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _70: &amp;ReErased mut instructions::user::UpdateUser&lt;ReErased&gt;;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug _sub_account_id =&gt; _2;<br align="left"/>debug pool_id =&gt; _3;<br align="left"/>debug remaining_accounts_iter =&gt; _4;<br align="left"/>debug perp_market_map =&gt; _8;<br align="left"/>debug spot_market_map =&gt; _9;<br align="left"/>debug oracle_map =&gt; _10;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug user =&gt; _36;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>>;
    bb0__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_72 = const false<br/>_71 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_69 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_7 = &amp;(*_69)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _7)</td></tr></table>>];
    bb1__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _6)</td></tr></table>>];
    bb2__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = &amp;mut _5<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_4)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb3__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_16 = &amp;_17<br/>_15 = &amp;(*_16)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/></td></tr><tr><td align="left">_20 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb4__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_19 = &amp;_20<br/>_18 = &amp;(*_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb5__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb6__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_71 = const true<br/>_72 = const true<br/>StorageDead(_24)<br/>_25 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb7__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = move ((_23 as Continue).0: anchor_lang::prelude::Clock)<br/>_22 = move _29<br/>StorageDead(_29)<br/>_21 = (_22.0: u64)<br/>StorageLive(_30)<br/>_30 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_13 = load_maps(move _14, move _15, move _18, move _21, move _30)</td></tr></table>>];
    bb8__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_28)<br/>_28 = move _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb10__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb12__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_31 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb13__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_12 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_11 = move _35<br/>StorageDead(_35)<br/>StorageLive(_8)<br/>_8 = move (_11.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_9)<br/>_9 = move (_11.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_10)<br/>_10 = move (_11.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_75 = discriminant(_12)<br/>_77 = discriminant(_23)<br/>_71 = const false<br/>_72 = const false<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb14__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb15__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_73 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb17__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_70 = deref_copy (_1.1: &amp;mut instructions::user::UpdateUser&lt;'_&gt;)<br/>_40 = &amp;((*_70).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_39 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _40)</td></tr></table>>];
    bb18__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _39, move _41)</td></tr></table>>];
    bb19__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb20__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb21__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_37 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_36 = move _46<br/>StorageDead(_46)<br/>_81 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>_47 = _3<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;mut _36<br/></td></tr><tr><td align="left">_48 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _49)</td></tr></table>>];
    bb22__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb23__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_79 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>((*_48).27: u8) = move _47<br/>StorageDead(_47)<br/>StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_36<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb25__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_53 = &amp;(*_54)<br/>StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;_8<br/>_57 = &amp;(*_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;_9<br/>_59 = &amp;(*_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;mut _10<br/>_61 = &amp;mut (*_62)<br/></td></tr><tr><td align="left">_52 = math::margin::meets_initial_margin_requirement(move _53, move _57, move _59, move _61)</td></tr></table>>];
    bb26__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb27__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_63 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb28__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_51 as Continue).0: bool)<br/>_50 = _67<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_68)<br/>_68 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _68)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb29__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb30__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb31__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb32__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb33__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb34__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb36__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb37__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb38__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_83 = discriminant(_23)<br/>_71 = const false<br/>_72 = const false<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb40__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb41__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb45__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb46__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb47__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb48__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb49__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb50__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb51__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb52__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left" balign="left">_85 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left" balign="left">_88 = discriminant(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1721 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1721 -> bb1__0_1721 [label="return"];
    bb1__0_1721 -> bb2__0_1721 [label="return"];
    bb2__0_1721 -> bb3__0_1721 [label="return"];
    bb3__0_1721 -> bb4__0_1721 [label="return"];
    bb3__0_1721 -> bb50__0_1721 [label="unwind"];
    bb4__0_1721 -> bb5__0_1721 [label="return"];
    bb4__0_1721 -> bb49__0_1721 [label="unwind"];
    bb5__0_1721 -> bb6__0_1721 [label="return"];
    bb5__0_1721 -> bb49__0_1721 [label="unwind"];
    bb6__0_1721 -> bb7__0_1721 [label="0"];
    bb6__0_1721 -> bb9__0_1721 [label="1"];
    bb6__0_1721 -> bb8__0_1721 [label="otherwise"];
    bb7__0_1721 -> bb11__0_1721 [label="return"];
    bb7__0_1721 -> bb54__0_1721 [label="unwind"];
    bb9__0_1721 -> bb10__0_1721 [label="return"];
    bb9__0_1721 -> bb54__0_1721 [label="unwind"];
    bb10__0_1721 -> bb39__0_1721 [label=""];
    bb11__0_1721 -> bb12__0_1721 [label="return"];
    bb11__0_1721 -> bb54__0_1721 [label="unwind"];
    bb12__0_1721 -> bb13__0_1721 [label="0"];
    bb12__0_1721 -> bb14__0_1721 [label="1"];
    bb12__0_1721 -> bb8__0_1721 [label="otherwise"];
    bb13__0_1721 -> bb16__0_1721 [label="return"];
    bb13__0_1721 -> bb45__0_1721 [label="unwind"];
    bb14__0_1721 -> bb15__0_1721 [label="return"];
    bb14__0_1721 -> bb53__0_1721 [label="unwind"];
    bb15__0_1721 -> bb39__0_1721 [label=""];
    bb16__0_1721 -> bb17__0_1721 [label="return"];
    bb16__0_1721 -> bb46__0_1721 [label="unwind"];
    bb17__0_1721 -> bb18__0_1721 [label="return"];
    bb17__0_1721 -> bb46__0_1721 [label="unwind"];
    bb18__0_1721 -> bb19__0_1721 [label="return"];
    bb18__0_1721 -> bb46__0_1721 [label="unwind"];
    bb19__0_1721 -> bb20__0_1721 [label="return"];
    bb19__0_1721 -> bb46__0_1721 [label="unwind"];
    bb20__0_1721 -> bb21__0_1721 [label="0"];
    bb20__0_1721 -> bb22__0_1721 [label="1"];
    bb20__0_1721 -> bb8__0_1721 [label="otherwise"];
    bb21__0_1721 -> bb24__0_1721 [label="return"];
    bb21__0_1721 -> bb44__0_1721 [label="unwind"];
    bb22__0_1721 -> bb23__0_1721 [label="return"];
    bb22__0_1721 -> bb52__0_1721 [label="unwind"];
    bb23__0_1721 -> bb35__0_1721 [label=""];
    bb24__0_1721 -> bb25__0_1721 [label="return"];
    bb24__0_1721 -> bb44__0_1721 [label="unwind"];
    bb25__0_1721 -> bb26__0_1721 [label="return"];
    bb25__0_1721 -> bb44__0_1721 [label="unwind"];
    bb26__0_1721 -> bb27__0_1721 [label="return"];
    bb26__0_1721 -> bb44__0_1721 [label="unwind"];
    bb27__0_1721 -> bb28__0_1721 [label="0"];
    bb27__0_1721 -> bb29__0_1721 [label="1"];
    bb27__0_1721 -> bb8__0_1721 [label="otherwise"];
    bb28__0_1721 -> bb31__0_1721 [label="return"];
    bb28__0_1721 -> bb46__0_1721 [label="unwind"];
    bb29__0_1721 -> bb30__0_1721 [label="return"];
    bb29__0_1721 -> bb44__0_1721 [label="unwind"];
    bb30__0_1721 -> bb35__0_1721 [label="return"];
    bb30__0_1721 -> bb46__0_1721 [label="unwind"];
    bb31__0_1721 -> bb32__0_1721 [label="return"];
    bb31__0_1721 -> bb47__0_1721 [label="unwind"];
    bb32__0_1721 -> bb33__0_1721 [label="return"];
    bb32__0_1721 -> bb48__0_1721 [label="unwind"];
    bb33__0_1721 -> bb34__0_1721 [label="return"];
    bb33__0_1721 -> bb51__0_1721 [label="unwind"];
    bb34__0_1721 -> bb43__0_1721 [label=""];
    bb35__0_1721 -> bb36__0_1721 [label="return"];
    bb35__0_1721 -> bb47__0_1721 [label="unwind"];
    bb36__0_1721 -> bb37__0_1721 [label="return"];
    bb36__0_1721 -> bb48__0_1721 [label="unwind"];
    bb37__0_1721 -> bb38__0_1721 [label="return"];
    bb37__0_1721 -> bb51__0_1721 [label="unwind"];
    bb38__0_1721 -> bb42__0_1721 [label=""];
    bb39__0_1721 -> bb40__0_1721 [label="return"];
    bb39__0_1721 -> bb50__0_1721 [label="unwind"];
    bb40__0_1721 -> bb41__0_1721 [label="return"];
    bb40__0_1721 -> bb51__0_1721 [label="unwind"];
    bb41__0_1721 -> bb42__0_1721 [label=""];
    bb42__0_1721 -> bb43__0_1721 [label=""];
    bb44__0_1721 -> bb46__0_1721 [label="return"];
    bb45__0_1721 -> bb46__0_1721 [label="return"];
    bb46__0_1721 -> bb47__0_1721 [label="return"];
    bb47__0_1721 -> bb48__0_1721 [label="return"];
    bb48__0_1721 -> bb51__0_1721 [label="return"];
    bb49__0_1721 -> bb50__0_1721 [label="return"];
    bb50__0_1721 -> bb51__0_1721 [label="return"];
    bb52__0_1721 -> bb46__0_1721 [label=""];
    bb53__0_1721 -> bb54__0_1721 [label=""];
    bb54__0_1721 -> bb49__0_1721 [label=""];
}
