digraph Mir_0_2607 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::is_new_order_risk_increasing(_1: &amp;ReErased state::user::Order, _2: i64, _3: i64, _4: i64) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: i64;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _16: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _17: i64;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: i64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: i64;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: i64;<br align="left"/>let _34: ();<br align="left"/>let mut _35: bool;<br align="left"/>let mut _36: i64;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: i64;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _42: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _43: i64;<br align="left"/>let mut _44: i64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i64;<br align="left"/>let mut _58: i64;<br align="left"/>debug order =&gt; _1;<br align="left"/>debug position_base_asset_amount =&gt; _2;<br align="left"/>debug position_bids =&gt; _3;<br align="left"/>debug position_asks =&gt; _4;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>>;
    bb0__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).18: bool)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const false)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_8 = discriminant(((*_1).17: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _2<br/>_35 = Le(move _36, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb4__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _2<br/>_10 = Ge(move _11, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb6__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const true)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_9 = const ()<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _3<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ((*_1).2: u64)<br/></td></tr><tr><td align="left">_20 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _21)</td></tr></table>>];
    bb8__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb9__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_22 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_19 as Continue).0: i64)<br/>_18 = _26<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_16 = &lt;i64 as SafeMath&gt;::safe_add(move _17, move _18)</td></tr></table>>];
    bb11__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb12__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb14__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_27 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb15__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_15 as Continue).0: i64)<br/>_14 = _31<br/>StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _2<br/></td></tr><tr><td align="left">_32 = core::num::&lt;impl i64&gt;::abs(move _33)</td></tr></table>>];
    bb16__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb17__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_13 = Gt(move _14, move _32)<br/>StorageDead(_32)<br/>StorageDead(_14)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _13)<br/>StorageDead(_13)<br/>StorageDead(_19)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(const true)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = const ()<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _4<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = ((*_1).2: u64)<br/></td></tr><tr><td align="left">_46 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _47)</td></tr></table>>];
    bb21__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb22__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb23__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: i64)<br/>_44 = _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_42 = &lt;i64 as SafeMath&gt;::safe_sub(move _43, move _44)</td></tr></table>>];
    bb24__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb25__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb27__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_53 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb28__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_41 as Continue).0: i64)<br/>_40 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_39 = core::num::&lt;impl i64&gt;::abs(move _40)</td></tr></table>>];
    bb29__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb30__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_58)<br/>_58 = _2<br/>_38 = Gt(move _39, move _58)<br/>StorageDead(_58)<br/>StorageDead(_39)<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _38)<br/>StorageDead(_38)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_19)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2607 -> bb2__0_2607 [label="0"];
    bb0__0_2607 -> bb1__0_2607 [label="otherwise"];
    bb1__0_2607 -> bb34__0_2607 [label=""];
    bb2__0_2607 -> bb5__0_2607 [label="0"];
    bb2__0_2607 -> bb3__0_2607 [label="1"];
    bb2__0_2607 -> bb4__0_2607 [label="otherwise"];
    bb3__0_2607 -> bb20__0_2607 [label="0"];
    bb3__0_2607 -> bb19__0_2607 [label="otherwise"];
    bb5__0_2607 -> bb7__0_2607 [label="0"];
    bb5__0_2607 -> bb6__0_2607 [label="otherwise"];
    bb6__0_2607 -> bb34__0_2607 [label=""];
    bb7__0_2607 -> bb8__0_2607 [label="return"];
    bb8__0_2607 -> bb9__0_2607 [label="return"];
    bb9__0_2607 -> bb10__0_2607 [label="0"];
    bb9__0_2607 -> bb11__0_2607 [label="1"];
    bb9__0_2607 -> bb4__0_2607 [label="otherwise"];
    bb10__0_2607 -> bb13__0_2607 [label="return"];
    bb11__0_2607 -> bb12__0_2607 [label="return"];
    bb12__0_2607 -> bb33__0_2607 [label=""];
    bb13__0_2607 -> bb14__0_2607 [label="return"];
    bb14__0_2607 -> bb15__0_2607 [label="0"];
    bb14__0_2607 -> bb16__0_2607 [label="1"];
    bb14__0_2607 -> bb4__0_2607 [label="otherwise"];
    bb15__0_2607 -> bb18__0_2607 [label="return"];
    bb16__0_2607 -> bb17__0_2607 [label="return"];
    bb17__0_2607 -> bb33__0_2607 [label=""];
    bb18__0_2607 -> bb34__0_2607 [label=""];
    bb19__0_2607 -> bb34__0_2607 [label=""];
    bb20__0_2607 -> bb21__0_2607 [label="return"];
    bb21__0_2607 -> bb22__0_2607 [label="return"];
    bb22__0_2607 -> bb23__0_2607 [label="0"];
    bb22__0_2607 -> bb24__0_2607 [label="1"];
    bb22__0_2607 -> bb4__0_2607 [label="otherwise"];
    bb23__0_2607 -> bb26__0_2607 [label="return"];
    bb24__0_2607 -> bb25__0_2607 [label="return"];
    bb25__0_2607 -> bb32__0_2607 [label=""];
    bb26__0_2607 -> bb27__0_2607 [label="return"];
    bb27__0_2607 -> bb28__0_2607 [label="0"];
    bb27__0_2607 -> bb29__0_2607 [label="1"];
    bb27__0_2607 -> bb4__0_2607 [label="otherwise"];
    bb28__0_2607 -> bb31__0_2607 [label="return"];
    bb29__0_2607 -> bb30__0_2607 [label="return"];
    bb30__0_2607 -> bb32__0_2607 [label=""];
    bb31__0_2607 -> bb34__0_2607 [label=""];
    bb32__0_2607 -> bb34__0_2607 [label=""];
    bb33__0_2607 -> bb34__0_2607 [label=""];
}
