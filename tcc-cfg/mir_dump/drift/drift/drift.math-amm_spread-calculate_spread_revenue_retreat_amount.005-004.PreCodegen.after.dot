digraph Mir_0_1871 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_spread_revenue_retreat_amount(_1: u32, _2: u64, _3: i64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: i64;<br align="left"/>let _7: u64;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _9: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u64;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: i64;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: (i64, bool);<br align="left"/>let mut _20: u64;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _30: u32;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u64;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: i64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u64;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u64;<br align="left"/>let mut _49: u64;<br align="left"/>debug base_spread =&gt; _1;<br align="left"/>debug max_spread =&gt; _2;<br align="left"/>debug net_revenue_since_last_funding =&gt; _3;<br align="left"/>debug revenue_retreat_amount =&gt; _4;<br align="left"/>debug max_retreat =&gt; _7;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>>;
    bb0__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>_5 = Lt(move _6, const _)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/></td></tr><tr><td align="left">_9 = &lt;u64 as SafeMath&gt;::safe_div(move _10, const 10_u64)</td></tr></table>>];
    bb2__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb3__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: u64)<br/>_7 = _15<br/>StorageDead(_15)<br/>StorageDead(_8)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _3<br/>StorageLive(_18)<br/>_19 = CheckedMul(const _, const 1000_i64)<br/></td></tr><tr><td align="left">assert(!move (_19.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const _, const 1000_i64)</td></tr></table>>];
    bb5__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_18 = move (_19.0: i64)<br/>_16 = Ge(move _17, move _18)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>_20 = _7<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _1<br/></td></tr><tr><td align="left">_29 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _30)</td></tr></table>>];
    bb10__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb11__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb12__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_28 as Continue).0: u64)<br/>_27 = _35<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _3<br/></td></tr><tr><td align="left">_36 = core::num::&lt;impl i64&gt;::unsigned_abs(move _37)</td></tr></table>>];
    bb13__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb14__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_26 = &lt;u64 as SafeMath&gt;::safe_mul(move _27, move _36)</td></tr></table>>];
    bb16__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb17__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_38 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb18__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_25 as Continue).0: u64)<br/>_24 = _42<br/>StorageDead(_42)<br/>StorageLive(_43)<br/></td></tr><tr><td align="left">_43 = core::num::&lt;impl i64&gt;::unsigned_abs(const _)</td></tr></table>>];
    bb19__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb20__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">_23 = &lt;u64 as SafeMath&gt;::safe_div(move _24, move _43)</td></tr></table>>];
    bb22__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb23__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_44 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb24__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_22 as Continue).0: u64)<br/>_21 = _48<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_4 = std::cmp::min::&lt;u64&gt;(move _20, move _21)</td></tr></table>>];
    bb25__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb26__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>_4 = _7<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_49)<br/>_49 = _4<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _49)<br/>StorageDead(_49)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1871 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1871 -> bb30__0_1871 [label="0"];
    bb0__0_1871 -> bb1__0_1871 [label="otherwise"];
    bb1__0_1871 -> bb2__0_1871 [label="return"];
    bb2__0_1871 -> bb3__0_1871 [label="return"];
    bb3__0_1871 -> bb4__0_1871 [label="0"];
    bb3__0_1871 -> bb6__0_1871 [label="1"];
    bb3__0_1871 -> bb5__0_1871 [label="otherwise"];
    bb4__0_1871 -> bb8__0_1871 [label="success"];
    bb6__0_1871 -> bb7__0_1871 [label="return"];
    bb7__0_1871 -> bb34__0_1871 [label=""];
    bb8__0_1871 -> bb28__0_1871 [label="0"];
    bb8__0_1871 -> bb9__0_1871 [label="otherwise"];
    bb9__0_1871 -> bb10__0_1871 [label="return"];
    bb10__0_1871 -> bb11__0_1871 [label="return"];
    bb11__0_1871 -> bb12__0_1871 [label="0"];
    bb11__0_1871 -> bb13__0_1871 [label="1"];
    bb11__0_1871 -> bb5__0_1871 [label="otherwise"];
    bb12__0_1871 -> bb15__0_1871 [label="return"];
    bb13__0_1871 -> bb14__0_1871 [label="return"];
    bb14__0_1871 -> bb32__0_1871 [label=""];
    bb15__0_1871 -> bb16__0_1871 [label="return"];
    bb16__0_1871 -> bb17__0_1871 [label="return"];
    bb17__0_1871 -> bb18__0_1871 [label="0"];
    bb17__0_1871 -> bb19__0_1871 [label="1"];
    bb17__0_1871 -> bb5__0_1871 [label="otherwise"];
    bb18__0_1871 -> bb21__0_1871 [label="return"];
    bb19__0_1871 -> bb20__0_1871 [label="return"];
    bb20__0_1871 -> bb32__0_1871 [label=""];
    bb21__0_1871 -> bb22__0_1871 [label="return"];
    bb22__0_1871 -> bb23__0_1871 [label="return"];
    bb23__0_1871 -> bb24__0_1871 [label="0"];
    bb23__0_1871 -> bb25__0_1871 [label="1"];
    bb23__0_1871 -> bb5__0_1871 [label="otherwise"];
    bb24__0_1871 -> bb27__0_1871 [label="return"];
    bb25__0_1871 -> bb26__0_1871 [label="return"];
    bb26__0_1871 -> bb33__0_1871 [label=""];
    bb27__0_1871 -> bb29__0_1871 [label=""];
    bb28__0_1871 -> bb29__0_1871 [label=""];
    bb29__0_1871 -> bb31__0_1871 [label=""];
    bb30__0_1871 -> bb31__0_1871 [label=""];
    bb31__0_1871 -> bb35__0_1871 [label=""];
    bb32__0_1871 -> bb33__0_1871 [label=""];
    bb33__0_1871 -> bb34__0_1871 [label=""];
    bb34__0_1871 -> bb35__0_1871 [label=""];
}
