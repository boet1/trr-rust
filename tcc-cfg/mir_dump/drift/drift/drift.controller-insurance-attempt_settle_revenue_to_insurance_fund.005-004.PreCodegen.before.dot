digraph Mir_0_202 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn attempt_settle_revenue_to_insurance_fund(_1: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, _2: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: i64, _5: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, _6: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _7: &amp;ReErased state::state::State, _8: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, _9: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _10: bool;<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: i64;<br align="left"/>let _13: i64;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _16: i64;<br align="left"/>let mut _17: i64;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: i64;<br align="left"/>let mut _24: i64;<br align="left"/>let _25: u64;<br align="left"/>let mut _26: bool;<br align="left"/>let _27: u64;<br align="left"/>let mut _28: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _29: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _30: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _32: u64;<br align="left"/>let mut _33: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _34: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _35: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _36: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _37: u64;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _39: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _43: i64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u64;<br align="left"/>let _49: ();<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: u64;<br align="left"/>let _52: ();<br align="left"/>let mut _53: &amp;ReErased str;<br align="left"/>let _54: &amp;ReErased str;<br align="left"/>let mut _55: &amp;ReErased std::string::String;<br align="left"/>let _56: &amp;ReErased std::string::String;<br align="left"/>let _57: std::string::String;<br align="left"/>let _58: std::string::String;<br align="left"/>let mut _59: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _61: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _62: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _63: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _64: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _65: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _66: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _67: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _68: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased u16;<br align="left"/>let _70: &amp;ReErased u16;<br align="left"/>let mut _71: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased u64;<br align="left"/>let _73: &amp;ReErased u64;<br align="left"/>let _74: ();<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _76: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _78: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _79: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _80: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _81: u8;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u64;<br align="left"/>let mut _91: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _92: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _97: ();<br align="left"/>let mut _98: i64;<br align="left"/>let mut _99: ();<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>debug spot_market_vault =&gt; _1;<br align="left"/>debug insurance_fund_vault =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug token_program =&gt; _5;<br align="left"/>debug drift_signer =&gt; _6;<br align="left"/>debug state =&gt; _7;<br align="left"/>debug mint =&gt; _8;<br align="left"/>debug remaining_accounts =&gt; _9;<br align="left"/>debug valid_revenue_settle_time =&gt; _10;<br align="left"/>debug time_until_next_update =&gt; _13;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug _token_amount =&gt; _25;<br align="left"/>debug spot_market_vault_amount =&gt; _27;<br align="left"/>debug insurance_fund_vault_amount =&gt; _32;<br align="left"/>debug token_amount =&gt; _37;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug res =&gt; _58;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>>;
    bb0__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = (((*_3).9: state::spot_market::InsuranceFund).6: i64)<br/>_11 = Gt(move _12, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb1__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _4<br/>StorageLive(_17)<br/>_17 = (((*_3).9: state::spot_market::InsuranceFund).5: i64)<br/>StorageLive(_18)<br/>_18 = (((*_3).9: state::spot_market::InsuranceFund).6: i64)<br/></td></tr><tr><td align="left">_15 = on_the_hour_update(move _16, move _17, move _18)</td></tr></table>>];
    bb2__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb3__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_19 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb4__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_14 as Continue).0: i64)<br/>_13 = _23<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>StorageLive(_24)<br/>_24 = _13<br/>_10 = Eq(move _24, const 0_i64)<br/>StorageDead(_24)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb7__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_10 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _10<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;(*_1)<br/></td></tr><tr><td align="left">_30 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _31)</td></tr></table>>];
    bb11__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb12__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>_27 = ((*_28).2: u64)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;(*_2)<br/></td></tr><tr><td align="left">_35 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _36)</td></tr></table>>];
    bb13__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb14__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>_32 = ((*_33).2: u64)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _27<br/>StorageLive(_41)<br/>_41 = _32<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_3)<br/>StorageLive(_43)<br/>_43 = _4<br/></td></tr><tr><td align="left">_39 = controller::insurance::settle_revenue_to_insurance_fund(move _40, move _41, move _42, move _43, const false)</td></tr></table>>];
    bb15__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb16__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_44 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb17__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_38 as Continue).0: u64)<br/>_37 = _48<br/>StorageDead(_48)<br/>StorageDead(_38)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _37<br/>_50 = Gt(move _51, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb18__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb19__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_100 = const _<br/>_62 = &amp;(*_100)<br/>_61 = &amp;(*_62)<br/>_60 = move _61 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_61)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;((*_3).42: u16)<br/>_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _69)</td></tr></table>>];
    bb21__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_49 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_37<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _72)</td></tr></table>>];
    bb23__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_67 = [move _68, move _71]<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>_66 = &amp;_67<br/>_65 = &amp;(*_66)<br/>_64 = move _65 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_59 = Arguments::&lt;'_&gt;::new_v1(move _60, move _64)</td></tr></table>>];
    bb24__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = format(move _59)</td></tr></table>>];
    bb25__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>_57 = move _58<br/>StorageDead(_58)<br/>_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = &lt;String as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb26__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_53 = &amp;(*_54)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_52 = solana_program::log::sol_log(move _53)</td></tr></table>>];
    bb27__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb28__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;(*_5)<br/>StorageLive(_78)<br/>_78 = &amp;(*_1)<br/>StorageLive(_79)<br/>_79 = &amp;(*_2)<br/>StorageLive(_80)<br/>_80 = &amp;(*_6)<br/>StorageLive(_81)<br/>_81 = ((*_7).15: u8)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _37<br/></td></tr><tr><td align="left">_84 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _85)</td></tr></table>>];
    bb29__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb30__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_86 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb31__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_83 as Continue).0: u64)<br/>_82 = _90<br/>StorageDead(_90)<br/>StorageLive(_91)<br/>_91 = &amp;(*_8)<br/>StorageLive(_92)<br/>_92 = move _9<br/></td></tr><tr><td align="left">_76 = send_from_program_vault(move _77, move _78, move _79, move _80, move _81, move _82, move _91, move _92)</td></tr></table>>];
    bb32__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb33__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb35__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_93 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb36__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_75 as Continue).0: ())<br/>_74 = _97<br/>StorageDead(_97)<br/>_101 = discriminant(_75)<br/>StorageDead(_83)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>_49 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_96)<br/>_96 = move _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb38__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>_103 = discriminant(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_98)<br/>_98 = _4<br/>(((*_3).9: state::spot_market::InsuranceFund).5: i64) = move _98<br/>StorageDead(_98)<br/>_25 = _37<br/>StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_25 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_99)<br/>_99 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _99)<br/>StorageDead(_99)<br/>StorageDead(_25)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left">return</td></tr></table>>];
    bb46__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb47__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb48__0_202 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_105 = discriminant(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_202 -> bb8__0_202 [label="0"];
    bb0__0_202 -> bb1__0_202 [label="otherwise"];
    bb1__0_202 -> bb2__0_202 [label="return"];
    bb2__0_202 -> bb3__0_202 [label="return"];
    bb3__0_202 -> bb4__0_202 [label="0"];
    bb3__0_202 -> bb6__0_202 [label="1"];
    bb3__0_202 -> bb5__0_202 [label="otherwise"];
    bb4__0_202 -> bb9__0_202 [label=""];
    bb6__0_202 -> bb7__0_202 [label="return"];
    bb7__0_202 -> bb44__0_202 [label=""];
    bb8__0_202 -> bb9__0_202 [label=""];
    bb9__0_202 -> bb40__0_202 [label="0"];
    bb9__0_202 -> bb10__0_202 [label="otherwise"];
    bb10__0_202 -> bb11__0_202 [label="return"];
    bb11__0_202 -> bb12__0_202 [label="return"];
    bb12__0_202 -> bb13__0_202 [label="return"];
    bb13__0_202 -> bb14__0_202 [label="return"];
    bb14__0_202 -> bb15__0_202 [label="return"];
    bb15__0_202 -> bb16__0_202 [label="return"];
    bb16__0_202 -> bb17__0_202 [label="0"];
    bb16__0_202 -> bb18__0_202 [label="1"];
    bb16__0_202 -> bb5__0_202 [label="otherwise"];
    bb17__0_202 -> bb21__0_202 [label="0"];
    bb17__0_202 -> bb20__0_202 [label="otherwise"];
    bb18__0_202 -> bb19__0_202 [label="return"];
    bb19__0_202 -> bb43__0_202 [label=""];
    bb20__0_202 -> bb22__0_202 [label="return"];
    bb21__0_202 -> bb39__0_202 [label=""];
    bb22__0_202 -> bb23__0_202 [label="return"];
    bb23__0_202 -> bb24__0_202 [label="return"];
    bb24__0_202 -> bb25__0_202 [label="return"];
    bb25__0_202 -> bb26__0_202 [label="return"];
    bb25__0_202 -> bb46__0_202 [label="unwind"];
    bb26__0_202 -> bb27__0_202 [label="return"];
    bb26__0_202 -> bb46__0_202 [label="unwind"];
    bb27__0_202 -> bb28__0_202 [label="return"];
    bb27__0_202 -> bb47__0_202 [label="unwind"];
    bb28__0_202 -> bb29__0_202 [label="return"];
    bb29__0_202 -> bb30__0_202 [label="return"];
    bb30__0_202 -> bb31__0_202 [label="0"];
    bb30__0_202 -> bb32__0_202 [label="1"];
    bb30__0_202 -> bb5__0_202 [label="otherwise"];
    bb31__0_202 -> bb34__0_202 [label="return"];
    bb32__0_202 -> bb33__0_202 [label="return"];
    bb33__0_202 -> bb42__0_202 [label=""];
    bb34__0_202 -> bb35__0_202 [label="return"];
    bb34__0_202 -> bb47__0_202 [label="unwind"];
    bb35__0_202 -> bb36__0_202 [label="0"];
    bb35__0_202 -> bb37__0_202 [label="1"];
    bb35__0_202 -> bb5__0_202 [label="otherwise"];
    bb36__0_202 -> bb39__0_202 [label=""];
    bb37__0_202 -> bb38__0_202 [label="return"];
    bb37__0_202 -> bb48__0_202 [label="unwind"];
    bb38__0_202 -> bb42__0_202 [label=""];
    bb39__0_202 -> bb41__0_202 [label=""];
    bb40__0_202 -> bb41__0_202 [label=""];
    bb41__0_202 -> bb45__0_202 [label=""];
    bb42__0_202 -> bb43__0_202 [label=""];
    bb43__0_202 -> bb44__0_202 [label=""];
    bb44__0_202 -> bb45__0_202 [label=""];
    bb46__0_202 -> bb47__0_202 [label="return"];
    bb48__0_202 -> bb47__0_202 [label=""];
}
