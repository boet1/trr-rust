digraph Mir_0_5867 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::admin::DeleteInitializedSpotMarket&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: u16;<br align="left"/>let mut _8: &lt;instructions::admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::admin::DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, &lt;instructions::admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::admin::DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args&gt;;<br align="left"/>let mut _10: std::result::Result&lt;&lt;instructions::admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::admin::DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&lt;instructions::admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::admin::DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _14: Closure(DefId(0:5868 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _19: &lt;instructions::admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::admin::DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let _20: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let mut _27: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: Closure(DefId(0:5869 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _35: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _43: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _44: Closure(DefId(0:5870 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _49: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _59: Closure(DefId(0:5871 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _65: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _70: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [u8];<br align="left"/>let mut _72: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _73: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _74: Closure(DefId(0:5872 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _80: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _82: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _83: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [u8];<br align="left"/>let mut _87: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _88: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _89: Closure(DefId(0:5873 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _94: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _95: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _97: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _100: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _101: &amp;ReErased [u8];<br align="left"/>let mut _102: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _103: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _104: Closure(DefId(0:5874 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#6}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _109: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _110: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let mut _112: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _113: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _114: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _115: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _116: &amp;ReErased [u8];<br align="left"/>let mut _117: &amp;ReErased mut instructions::admin::DeleteInitializedSpotMarketBumps;<br align="left"/>let mut _118: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _119: Closure(DefId(0:5875 ~ drift[d311]::instructions::admin::{impl#23}::try_accounts::{closure#7}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _124: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _125: ();<br align="left"/>let mut _126: bool;<br align="left"/>let mut _127: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _129: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: anchor_lang::error::Error;<br align="left"/>let mut _132: anchor_lang::error::Error;<br align="left"/>let mut _133: anchor_lang::error::ErrorCode;<br align="left"/>let _134: ();<br align="left"/>let mut _135: bool;<br align="left"/>let mut _136: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _137: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _138: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _139: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _140: !;<br align="left"/>let mut _141: anchor_lang::error::Error;<br align="left"/>let mut _142: anchor_lang::error::Error;<br align="left"/>let mut _143: anchor_lang::error::ErrorCode;<br align="left"/>let _144: ();<br align="left"/>let _145: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _146: &amp;ReErased state::state::State;<br align="left"/>let mut _147: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _148: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _149: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _150: bool;<br align="left"/>let mut _151: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _152: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: anchor_lang::error::Error;<br align="left"/>let mut _155: anchor_lang::error::Error;<br align="left"/>let mut _156: anchor_lang::error::Error;<br align="left"/>let mut _157: anchor_lang::error::ErrorCode;<br align="left"/>let mut _158: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _159: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _160: anchor_lang::prelude::Pubkey;<br align="left"/>let _161: ();<br align="left"/>let mut _162: bool;<br align="left"/>let mut _163: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _165: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _166: !;<br align="left"/>let mut _167: anchor_lang::error::Error;<br align="left"/>let mut _168: anchor_lang::error::Error;<br align="left"/>let mut _169: anchor_lang::error::ErrorCode;<br align="left"/>let _170: ();<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _173: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _174: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _175: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _176: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _177: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _178: !;<br align="left"/>let mut _179: anchor_lang::error::Error;<br align="left"/>let mut _180: anchor_lang::error::Error;<br align="left"/>let mut _181: anchor_lang::error::ErrorCode;<br align="left"/>let _182: anchor_lang::prelude::Pubkey;<br align="left"/>let _183: u8;<br align="left"/>let mut _184: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _185: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _186: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _187: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _188: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _189: &amp;ReErased [u8];<br align="left"/>let _190: &amp;ReErased [u8];<br align="left"/>let mut _191: &amp;ReErased [u8; 17_usize];<br align="left"/>let _192: &amp;ReErased [u8; 17_usize];<br align="left"/>let mut _193: &amp;ReErased [u8];<br align="left"/>let _194: &amp;ReErased [u8];<br align="left"/>let mut _195: &amp;ReErased [u8; 2_usize];<br align="left"/>let _196: [u8; 2_usize];<br align="left"/>let mut _197: u16;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _199: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _200: u8;<br align="left"/>let _201: ();<br align="left"/>let mut _202: bool;<br align="left"/>let mut _203: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _204: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _205: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _206: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _207: !;<br align="left"/>let mut _208: anchor_lang::error::Error;<br align="left"/>let mut _209: anchor_lang::error::Error;<br align="left"/>let mut _210: anchor_lang::error::Error;<br align="left"/>let mut _211: anchor_lang::error::ErrorCode;<br align="left"/>let mut _212: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _213: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _215: anchor_lang::prelude::Pubkey;<br align="left"/>let _216: ();<br align="left"/>let mut _217: bool;<br align="left"/>let mut _218: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _219: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _220: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _221: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _222: !;<br align="left"/>let mut _223: anchor_lang::error::Error;<br align="left"/>let mut _224: anchor_lang::error::Error;<br align="left"/>let mut _225: anchor_lang::error::ErrorCode;<br align="left"/>let _226: anchor_lang::prelude::Pubkey;<br align="left"/>let _227: u8;<br align="left"/>let mut _228: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _229: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _230: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _231: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _232: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _233: &amp;ReErased [u8];<br align="left"/>let _234: &amp;ReErased [u8];<br align="left"/>let mut _235: &amp;ReErased [u8; 20_usize];<br align="left"/>let _236: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _237: &amp;ReErased [u8];<br align="left"/>let _238: &amp;ReErased [u8];<br align="left"/>let mut _239: &amp;ReErased [u8; 2_usize];<br align="left"/>let _240: [u8; 2_usize];<br align="left"/>let mut _241: u16;<br align="left"/>let mut _242: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _243: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _244: u8;<br align="left"/>let _245: ();<br align="left"/>let mut _246: bool;<br align="left"/>let mut _247: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _248: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _249: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _250: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: anchor_lang::error::Error;<br align="left"/>let mut _253: anchor_lang::error::Error;<br align="left"/>let mut _254: anchor_lang::error::Error;<br align="left"/>let mut _255: anchor_lang::error::ErrorCode;<br align="left"/>let mut _256: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _257: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _258: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _259: anchor_lang::prelude::Pubkey;<br align="left"/>let _260: ();<br align="left"/>let mut _261: bool;<br align="left"/>let mut _262: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _264: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _265: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _266: !;<br align="left"/>let mut _267: anchor_lang::error::Error;<br align="left"/>let mut _268: anchor_lang::error::Error;<br align="left"/>let mut _269: anchor_lang::error::ErrorCode;<br align="left"/>let mut _270: instructions::admin::DeleteInitializedSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _271: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _272: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _273: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _274: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _275: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _276: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _277: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _278: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _279: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _280: bool;<br align="left"/>let mut _281: bool;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: isize;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>let mut _300: isize;<br align="left"/>let mut _301: isize;<br align="left"/>let mut _302: isize;<br align="left"/>let mut _303: isize;<br align="left"/>let mut _304: isize;<br align="left"/>let mut _305: isize;<br align="left"/>let mut _306: isize;<br align="left"/>let mut _307: isize;<br align="left"/>let mut _308: isize;<br align="left"/>let mut _309: isize;<br align="left"/>let mut _310: isize;<br align="left"/>let mut _311: isize;<br align="left"/>let mut _312: isize;<br align="left"/>let mut _313: isize;<br align="left"/>let mut _314: isize;<br align="left"/>let mut _315: isize;<br align="left"/>let mut _316: isize;<br align="left"/>let mut _317: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _318: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _319: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _320: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _321: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug __ix_data =&gt; _6;<br align="left"/>debug market_index =&gt; _7;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug admin =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug state =&gt; _35;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug spot_market =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug spot_market_vault =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug insurance_fund_vault =&gt; _80;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug drift_signer =&gt; _95;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug token_program =&gt; _110;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug my_key =&gt; _145;<br align="left"/>debug target_key =&gt; _148;<br align="left"/>debug __pda_address =&gt; _182;<br align="left"/>debug __bump =&gt; _183;<br align="left"/>debug __pda_address =&gt; _226;<br align="left"/>debug __bump =&gt; _227;<br align="left"/>>;
    bb0__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_281 = const false<br/>_280 = const false<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _6<br/>_12 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_11 = &lt;&lt;admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args as BorshDeserialize&gt;::deserialize(move _12)</td></tr></table>>];
    bb1__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>_14 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_10 = std::result::Result::&lt;&lt;admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _11, move _14)</td></tr></table>>];
    bb2__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;&lt;admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_9 as Continue).0: &lt;instructions::admin::DeleteInitializedSpotMarket&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::admin::DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts::__Args)<br/>_8 = move _19<br/>StorageDead(_19)<br/>StorageLive(_7)<br/>_7 = (_8.0: u16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_2)<br/>StorageLive(_26)<br/>_26 = &amp;(*_6)<br/>StorageLive(_27)<br/>_27 = &amp;mut (*_4)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _24, move _25, move _26, move _27, move _28)</td></tr></table>>];
    bb5__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb7__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _23, move _29)</td></tr></table>>];
    bb9__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_30 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_21 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_20 = move _34<br/>StorageDead(_34)<br/>_282 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_1)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_2)<br/>StorageLive(_41)<br/>_41 = &amp;(*_6)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_4)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_38 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _39, move _40, move _41, move _42, move _43)</td></tr></table>>];
    bb12__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_308 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>_44 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _38, move _44)</td></tr></table>>];
    bb15__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_45 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb17__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_36 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_35 = move _49<br/>StorageDead(_49)<br/>_284 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = &amp;mut (*_2)<br/>StorageLive(_56)<br/>_56 = &amp;(*_6)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_4)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _54, move _55, move _56, move _57, move _58)</td></tr></table>>];
    bb18__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_48)<br/>_48 = move _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb19__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_306 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _53, move _59)</td></tr></table>>];
    bb21__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb22__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_60 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb23__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_51 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_50 = move _64<br/>StorageDead(_64)<br/>_286 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_1)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_2)<br/>StorageLive(_71)<br/>_71 = &amp;(*_6)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_4)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_68 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _69, move _70, move _71, move _72, move _73)</td></tr></table>>];
    bb24__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb25__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_304 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_74)<br/>_74 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_67 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _68, move _74)</td></tr></table>>];
    bb27__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb28__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_75 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb29__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_66 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_65 = move _79<br/>StorageDead(_79)<br/>_288 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(*_1)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_2)<br/>StorageLive(_86)<br/>_86 = &amp;(*_6)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_4)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_83 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _84, move _85, move _86, move _87, move _88)</td></tr></table>>];
    bb30__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb31__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_302 = discriminant(_66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_89)<br/>_89 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_82 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _83, move _89)</td></tr></table>>];
    bb33__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb34__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_90 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb35__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_81 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_80 = move _94<br/>StorageDead(_94)<br/>_290 = discriminant(_81)<br/>StorageDead(_81)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_1)<br/>StorageLive(_100)<br/>_100 = &amp;mut (*_2)<br/>StorageLive(_101)<br/>_101 = &amp;(*_6)<br/>StorageLive(_102)<br/>_102 = &amp;mut (*_4)<br/>StorageLive(_103)<br/>_103 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _99, move _100, move _101, move _102, move _103)</td></tr></table>>];
    bb36__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_93)<br/>_93 = move _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb37__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>_300 = discriminant(_81)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_104)<br/>_104 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_97 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _98, move _104)</td></tr></table>>];
    bb39__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb40__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_105 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb41__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_96 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_95 = move _109<br/>StorageDead(_109)<br/>_292 = discriminant(_96)<br/>StorageDead(_96)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;(*_1)<br/>StorageLive(_115)<br/>_115 = &amp;mut (*_2)<br/>StorageLive(_116)<br/>_116 = &amp;(*_6)<br/>StorageLive(_117)<br/>_117 = &amp;mut (*_4)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_113 = &lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt; as anchor_lang::Accounts&lt;'_, DeleteInitializedSpotMarketBumps&gt;&gt;::try_accounts(move _114, move _115, move _116, move _117, move _118)</td></tr></table>>];
    bb42__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = move ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_108)<br/>_108 = move _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb43__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>_298 = discriminant(_96)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_119)<br/>_119 = {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}<br/></td></tr><tr><td align="left">_112 = std::result::Result::&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:4986:10: 4986:18}&gt;(move _113, move _119)</td></tr></table>>];
    bb45__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb46__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_120 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb47__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = move ((_111 as Continue).0: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_110 = move _124<br/>StorageDead(_124)<br/>_294 = discriminant(_111)<br/>StorageDead(_111)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;_20<br/>_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _128)</td></tr></table>>];
    bb48__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = move ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_123)<br/>_123 = move _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb49__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_296 = discriminant(_111)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_126 = ((*_127).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb51__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_127)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = ConstraintMut<br/></td></tr><tr><td align="left">_132 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _133)</td></tr></table>>];
    bb52__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _132, const &quot;admin&quot;)</td></tr></table>>];
    bb53__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _131)<br/>StorageDead(_131)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_127)<br/>_125 = const ()<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_35<br/></td></tr><tr><td align="left">_138 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as AsRef&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;&gt;::as_ref(move _139)</td></tr></table>>];
    bb55__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_137 = &amp;(*_138)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_136 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _137)</td></tr></table>>];
    bb56__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_135 = ((*_136).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb57__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = ConstraintMut<br/></td></tr><tr><td align="left">_142 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _143)</td></tr></table>>];
    bb58__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _142, const &quot;state&quot;)</td></tr></table>>];
    bb59__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _141)<br/>StorageDead(_141)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>_134 = const ()<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_317 = (((_35.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_147 = &amp;(*_317)<br/></td></tr><tr><td align="left">_146 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _147)</td></tr></table>>];
    bb61__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_145 = ((*_146).0: anchor_lang::prelude::Pubkey)<br/>StorageDead(_146)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_20<br/></td></tr><tr><td align="left">_148 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _149)</td></tr></table>>];
    bb62__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_145<br/>StorageLive(_152)<br/>_152 = &amp;_148<br/></td></tr><tr><td align="left">_150 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _151, move _152)</td></tr></table>>];
    bb63__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb64__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = ConstraintHasOne<br/></td></tr><tr><td align="left">_156 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _157)</td></tr></table>>];
    bb65__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _156, const &quot;state&quot;)</td></tr></table>>];
    bb66__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = _145<br/>StorageLive(_160)<br/>_160 = _148<br/>_158 = (move _159, move _160)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_154 = anchor_lang::error::Error::with_pubkeys(move _155, move _158)</td></tr></table>>];
    bb67__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_155)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _154)<br/>StorageDead(_154)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>_144 = const ()<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_50<br/>_164 = &amp;(*_165)<br/></td></tr><tr><td align="left">_163 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _164)</td></tr></table>>];
    bb69__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_162 = ((*_163).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb70__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = ConstraintMut<br/></td></tr><tr><td align="left">_168 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _169)</td></tr></table>>];
    bb71__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/></td></tr><tr><td align="left">_167 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _168, const &quot;spot_market&quot;)</td></tr></table>>];
    bb72__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _167)<br/>StorageDead(_167)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>_161 = const ()<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_50<br/></td></tr><tr><td align="left">_173 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _174)</td></tr></table>>];
    bb74__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_172 = &amp;_173<br/>StorageDead(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;_20<br/></td></tr><tr><td align="left">_176 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _177)</td></tr></table>>];
    bb75__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_175 = &amp;_176<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_171 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _172, move _175)</td></tr></table>>];
    bb76__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb77__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = ConstraintClose<br/></td></tr><tr><td align="left">_180 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _181)</td></tr></table>>];
    bb78__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _180, const &quot;spot_market&quot;)</td></tr></table>>];
    bb79__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _179)<br/>StorageDead(_179)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>_170 = const ()<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = const b&quot;spot_market_vault&quot;<br/>_191 = &amp;(*_192)<br/></td></tr><tr><td align="left">_190 = &lt;[u8; 17] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _191)</td></tr></table>>];
    bb81__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_189 = &amp;(*_190)<br/>StorageDead(_191)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = _7<br/></td></tr><tr><td align="left">_196 = core::num::&lt;impl u16&gt;::to_le_bytes(move _197)</td></tr></table>>];
    bb82__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_195 = &amp;_196<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_194 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _195)</td></tr></table>>];
    bb83__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_193 = &amp;(*_194)<br/>StorageDead(_195)<br/>_188 = [move _189, move _193]<br/>StorageDead(_193)<br/>StorageDead(_189)<br/>_187 = &amp;_188<br/>_186 = &amp;(*_187)<br/>_185 = move _186 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_186)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;_1<br/>_278 = deref_copy (*_199)<br/>_198 = &amp;(*_278)<br/></td></tr><tr><td align="left">_184 = anchor_lang::prelude::Pubkey::find_program_address(move _185, move _198)</td></tr></table>>];
    bb84__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_185)<br/>StorageLive(_182)<br/>_182 = (_184.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_183)<br/>_183 = (_184.1: u8)<br/>StorageDead(_199)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageLive(_200)<br/>_200 = _183<br/>((*_4).0: u8) = move _200<br/>StorageDead(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_318 = (((_65.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_205 = &amp;(*_318)<br/></td></tr><tr><td align="left">_204 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _205)</td></tr></table>>];
    bb85__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_203 = &amp;_204<br/>StorageDead(_205)<br/>StorageLive(_206)<br/>_206 = &amp;_182<br/></td></tr><tr><td align="left">_202 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _203, move _206)</td></tr></table>>];
    bb86__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb87__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = ConstraintSeeds<br/></td></tr><tr><td align="left">_210 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _211)</td></tr></table>>];
    bb88__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">_209 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _210, const &quot;spot_market_vault&quot;)</td></tr></table>>];
    bb89__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_281 = const true<br/>StorageDead(_210)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_319 = (((_65.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_214 = &amp;(*_319)<br/></td></tr><tr><td align="left">_213 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _214)</td></tr></table>>];
    bb90__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageLive(_215)<br/>_215 = _182<br/>_212 = (move _213, move _215)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>_281 = const false<br/></td></tr><tr><td align="left">_208 = anchor_lang::error::Error::with_pubkeys(move _209, move _212)</td></tr></table>>];
    bb91__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_281 = const false<br/>StorageDead(_209)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _208)<br/>StorageDead(_208)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>_201 = const ()<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;_65<br/></td></tr><tr><td align="left">_220 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _221)</td></tr></table>>];
    bb93__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_218 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _219)</td></tr></table>>];
    bb94__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_217 = ((*_218).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _217)</td></tr></table>>];
    bb95__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_218)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = ConstraintMut<br/></td></tr><tr><td align="left">_224 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _225)</td></tr></table>>];
    bb96__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _224, const &quot;spot_market_vault&quot;)</td></tr></table>>];
    bb97__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _223)<br/>StorageDead(_223)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_218)<br/>_216 = const ()<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = const b&quot;insurance_fund_vault&quot;<br/>_235 = &amp;(*_236)<br/></td></tr><tr><td align="left">_234 = &lt;[u8; 20] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _235)</td></tr></table>>];
    bb99__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_233 = &amp;(*_234)<br/>StorageDead(_235)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = _7<br/></td></tr><tr><td align="left">_240 = core::num::&lt;impl u16&gt;::to_le_bytes(move _241)</td></tr></table>>];
    bb100__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_239 = &amp;_240<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_238 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _239)</td></tr></table>>];
    bb101__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_237 = &amp;(*_238)<br/>StorageDead(_239)<br/>_232 = [move _233, move _237]<br/>StorageDead(_237)<br/>StorageDead(_233)<br/>_231 = &amp;_232<br/>_230 = &amp;(*_231)<br/>_229 = move _230 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_230)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = &amp;_1<br/>_279 = deref_copy (*_243)<br/>_242 = &amp;(*_279)<br/></td></tr><tr><td align="left">_228 = anchor_lang::prelude::Pubkey::find_program_address(move _229, move _242)</td></tr></table>>];
    bb102__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_229)<br/>StorageLive(_226)<br/>_226 = (_228.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_227)<br/>_227 = (_228.1: u8)<br/>StorageDead(_243)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageLive(_244)<br/>_244 = _227<br/>((*_4).1: u8) = move _244<br/>StorageDead(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_320 = (((_80.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_249 = &amp;(*_320)<br/></td></tr><tr><td align="left">_248 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _249)</td></tr></table>>];
    bb103__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_247 = &amp;_248<br/>StorageDead(_249)<br/>StorageLive(_250)<br/>_250 = &amp;_226<br/></td></tr><tr><td align="left">_246 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _247, move _250)</td></tr></table>>];
    bb104__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left">switchInt(move _246)</td></tr></table>>];
    bb105__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = ConstraintSeeds<br/></td></tr><tr><td align="left">_254 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _255)</td></tr></table>>];
    bb106__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _254, const &quot;insurance_fund_vault&quot;)</td></tr></table>>];
    bb107__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_280 = const true<br/>StorageDead(_254)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_321 = (((_80.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_258 = &amp;(*_321)<br/></td></tr><tr><td align="left">_257 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _258)</td></tr></table>>];
    bb108__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageLive(_259)<br/>_259 = _226<br/>_256 = (move _257, move _259)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>_280 = const false<br/></td></tr><tr><td align="left">_252 = anchor_lang::error::Error::with_pubkeys(move _253, move _256)</td></tr></table>>];
    bb109__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_280 = const false<br/>StorageDead(_253)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _252)<br/>StorageDead(_252)<br/>StorageDead(_246)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/>_245 = const ()<br/>StorageDead(_246)<br/>StorageDead(_245)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;_80<br/></td></tr><tr><td align="left">_264 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _265)</td></tr></table>>];
    bb111__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_263 = &amp;(*_264)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_262 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _263)</td></tr></table>>];
    bb112__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>_261 = ((*_262).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _261)</td></tr></table>>];
    bb113__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_262)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = ConstraintMut<br/></td></tr><tr><td align="left">_268 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _269)</td></tr></table>>];
    bb114__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/></td></tr><tr><td align="left">_267 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _268, const &quot;insurance_fund_vault&quot;)</td></tr></table>>];
    bb115__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _267)<br/>StorageDead(_267)<br/>StorageDead(_261)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_262)<br/>_260 = const ()<br/>StorageDead(_261)<br/>StorageDead(_260)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = move _20<br/>StorageLive(_272)<br/>_272 = move _35<br/>StorageLive(_273)<br/>_273 = move _50<br/>StorageLive(_274)<br/>_274 = move _65<br/>StorageLive(_275)<br/>_275 = move _80<br/>StorageLive(_276)<br/>_276 = move _95<br/>StorageLive(_277)<br/>_277 = move _110<br/>_270 = admin::DeleteInitializedSpotMarket::&lt;'_&gt; { admin: move _271, state: move _272, spot_market: move _273, spot_market_vault: move _274, insurance_fund_vault: move _275, drift_signer: move _276, token_program: move _277 }<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_275)<br/>StorageDead(_274)<br/>StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>_0 = std::result::Result::&lt;admin::DeleteInitializedSpotMarket&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _270)<br/>StorageDead(_270)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_110)<br/>StorageDead(_95)<br/>StorageDead(_80)<br/>StorageDead(_65)<br/>StorageDead(_50)<br/>StorageDead(_35)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb120__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb121__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb122__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb124__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left">return</td></tr></table>>];
    bb128__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left">drop(_95)</td></tr></table>>];
    bb129__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb130__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb131__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb132__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb133__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left">drop(_253)</td></tr></table>>];
    bb134__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left">switchInt(_280)</td></tr></table>>];
    bb135__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">135 (cleanup)</td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb136__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">136 (cleanup)</td></tr><tr><td align="left">switchInt(_281)</td></tr></table>>];
    bb137__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">137 (cleanup)</td></tr><tr><td align="left" balign="left">_310 = discriminant(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left" balign="left">_311 = discriminant(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">139 (cleanup)</td></tr><tr><td align="left" balign="left">_312 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">140 (cleanup)</td></tr><tr><td align="left" balign="left">_313 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">141 (cleanup)</td></tr><tr><td align="left" balign="left">_314 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">142 (cleanup)</td></tr><tr><td align="left" balign="left">_315 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_5867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">143 (cleanup)</td></tr><tr><td align="left" balign="left">_316 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5867 -> bb1__0_5867 [label="return"];
    bb1__0_5867 -> bb2__0_5867 [label="return"];
    bb1__0_5867 -> bb132__0_5867 [label="unwind"];
    bb2__0_5867 -> bb3__0_5867 [label="return"];
    bb3__0_5867 -> bb4__0_5867 [label="0"];
    bb3__0_5867 -> bb6__0_5867 [label="1"];
    bb3__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb4__0_5867 -> bb8__0_5867 [label="return"];
    bb6__0_5867 -> bb7__0_5867 [label="return"];
    bb7__0_5867 -> bb126__0_5867 [label=""];
    bb8__0_5867 -> bb9__0_5867 [label="return"];
    bb8__0_5867 -> bb132__0_5867 [label="unwind"];
    bb9__0_5867 -> bb10__0_5867 [label="return"];
    bb9__0_5867 -> bb132__0_5867 [label="unwind"];
    bb10__0_5867 -> bb11__0_5867 [label="0"];
    bb10__0_5867 -> bb12__0_5867 [label="1"];
    bb10__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb11__0_5867 -> bb14__0_5867 [label="return"];
    bb12__0_5867 -> bb13__0_5867 [label="return"];
    bb12__0_5867 -> bb143__0_5867 [label="unwind"];
    bb13__0_5867 -> bb125__0_5867 [label=""];
    bb14__0_5867 -> bb15__0_5867 [label="return"];
    bb14__0_5867 -> bb132__0_5867 [label="unwind"];
    bb15__0_5867 -> bb16__0_5867 [label="return"];
    bb15__0_5867 -> bb132__0_5867 [label="unwind"];
    bb16__0_5867 -> bb17__0_5867 [label="0"];
    bb16__0_5867 -> bb18__0_5867 [label="1"];
    bb16__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb17__0_5867 -> bb20__0_5867 [label="return"];
    bb17__0_5867 -> bb131__0_5867 [label="unwind"];
    bb18__0_5867 -> bb19__0_5867 [label="return"];
    bb18__0_5867 -> bb142__0_5867 [label="unwind"];
    bb19__0_5867 -> bb124__0_5867 [label=""];
    bb20__0_5867 -> bb21__0_5867 [label="return"];
    bb20__0_5867 -> bb131__0_5867 [label="unwind"];
    bb21__0_5867 -> bb22__0_5867 [label="return"];
    bb21__0_5867 -> bb131__0_5867 [label="unwind"];
    bb22__0_5867 -> bb23__0_5867 [label="0"];
    bb22__0_5867 -> bb24__0_5867 [label="1"];
    bb22__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb23__0_5867 -> bb26__0_5867 [label="return"];
    bb23__0_5867 -> bb131__0_5867 [label="unwind"];
    bb24__0_5867 -> bb25__0_5867 [label="return"];
    bb24__0_5867 -> bb141__0_5867 [label="unwind"];
    bb25__0_5867 -> bb123__0_5867 [label=""];
    bb26__0_5867 -> bb27__0_5867 [label="return"];
    bb26__0_5867 -> bb131__0_5867 [label="unwind"];
    bb27__0_5867 -> bb28__0_5867 [label="return"];
    bb27__0_5867 -> bb131__0_5867 [label="unwind"];
    bb28__0_5867 -> bb29__0_5867 [label="0"];
    bb28__0_5867 -> bb30__0_5867 [label="1"];
    bb28__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb29__0_5867 -> bb32__0_5867 [label="return"];
    bb29__0_5867 -> bb130__0_5867 [label="unwind"];
    bb30__0_5867 -> bb31__0_5867 [label="return"];
    bb30__0_5867 -> bb140__0_5867 [label="unwind"];
    bb31__0_5867 -> bb122__0_5867 [label=""];
    bb32__0_5867 -> bb33__0_5867 [label="return"];
    bb32__0_5867 -> bb130__0_5867 [label="unwind"];
    bb33__0_5867 -> bb34__0_5867 [label="return"];
    bb33__0_5867 -> bb130__0_5867 [label="unwind"];
    bb34__0_5867 -> bb35__0_5867 [label="0"];
    bb34__0_5867 -> bb36__0_5867 [label="1"];
    bb34__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb35__0_5867 -> bb38__0_5867 [label="return"];
    bb35__0_5867 -> bb129__0_5867 [label="unwind"];
    bb36__0_5867 -> bb37__0_5867 [label="return"];
    bb36__0_5867 -> bb139__0_5867 [label="unwind"];
    bb37__0_5867 -> bb121__0_5867 [label=""];
    bb38__0_5867 -> bb39__0_5867 [label="return"];
    bb38__0_5867 -> bb129__0_5867 [label="unwind"];
    bb39__0_5867 -> bb40__0_5867 [label="return"];
    bb39__0_5867 -> bb129__0_5867 [label="unwind"];
    bb40__0_5867 -> bb41__0_5867 [label="0"];
    bb40__0_5867 -> bb42__0_5867 [label="1"];
    bb40__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb41__0_5867 -> bb44__0_5867 [label="return"];
    bb41__0_5867 -> bb128__0_5867 [label="unwind"];
    bb42__0_5867 -> bb43__0_5867 [label="return"];
    bb42__0_5867 -> bb138__0_5867 [label="unwind"];
    bb43__0_5867 -> bb120__0_5867 [label=""];
    bb44__0_5867 -> bb45__0_5867 [label="return"];
    bb44__0_5867 -> bb128__0_5867 [label="unwind"];
    bb45__0_5867 -> bb46__0_5867 [label="return"];
    bb45__0_5867 -> bb128__0_5867 [label="unwind"];
    bb46__0_5867 -> bb47__0_5867 [label="0"];
    bb46__0_5867 -> bb48__0_5867 [label="1"];
    bb46__0_5867 -> bb5__0_5867 [label="otherwise"];
    bb47__0_5867 -> bb50__0_5867 [label="return"];
    bb47__0_5867 -> bb128__0_5867 [label="unwind"];
    bb48__0_5867 -> bb49__0_5867 [label="return"];
    bb48__0_5867 -> bb137__0_5867 [label="unwind"];
    bb49__0_5867 -> bb119__0_5867 [label=""];
    bb50__0_5867 -> bb51__0_5867 [label="0"];
    bb50__0_5867 -> bb54__0_5867 [label="otherwise"];
    bb51__0_5867 -> bb52__0_5867 [label="return"];
    bb51__0_5867 -> bb128__0_5867 [label="unwind"];
    bb52__0_5867 -> bb53__0_5867 [label="return"];
    bb52__0_5867 -> bb128__0_5867 [label="unwind"];
    bb53__0_5867 -> bb119__0_5867 [label=""];
    bb54__0_5867 -> bb55__0_5867 [label="return"];
    bb54__0_5867 -> bb128__0_5867 [label="unwind"];
    bb55__0_5867 -> bb56__0_5867 [label="return"];
    bb55__0_5867 -> bb128__0_5867 [label="unwind"];
    bb56__0_5867 -> bb57__0_5867 [label="0"];
    bb56__0_5867 -> bb60__0_5867 [label="otherwise"];
    bb57__0_5867 -> bb58__0_5867 [label="return"];
    bb57__0_5867 -> bb128__0_5867 [label="unwind"];
    bb58__0_5867 -> bb59__0_5867 [label="return"];
    bb58__0_5867 -> bb128__0_5867 [label="unwind"];
    bb59__0_5867 -> bb119__0_5867 [label=""];
    bb60__0_5867 -> bb61__0_5867 [label="return"];
    bb60__0_5867 -> bb128__0_5867 [label="unwind"];
    bb61__0_5867 -> bb62__0_5867 [label="return"];
    bb61__0_5867 -> bb128__0_5867 [label="unwind"];
    bb62__0_5867 -> bb63__0_5867 [label="return"];
    bb62__0_5867 -> bb128__0_5867 [label="unwind"];
    bb63__0_5867 -> bb68__0_5867 [label="0"];
    bb63__0_5867 -> bb64__0_5867 [label="otherwise"];
    bb64__0_5867 -> bb65__0_5867 [label="return"];
    bb64__0_5867 -> bb128__0_5867 [label="unwind"];
    bb65__0_5867 -> bb66__0_5867 [label="return"];
    bb65__0_5867 -> bb128__0_5867 [label="unwind"];
    bb66__0_5867 -> bb67__0_5867 [label="return"];
    bb66__0_5867 -> bb128__0_5867 [label="unwind"];
    bb67__0_5867 -> bb119__0_5867 [label=""];
    bb68__0_5867 -> bb69__0_5867 [label="return"];
    bb68__0_5867 -> bb128__0_5867 [label="unwind"];
    bb69__0_5867 -> bb70__0_5867 [label="0"];
    bb69__0_5867 -> bb73__0_5867 [label="otherwise"];
    bb70__0_5867 -> bb71__0_5867 [label="return"];
    bb70__0_5867 -> bb128__0_5867 [label="unwind"];
    bb71__0_5867 -> bb72__0_5867 [label="return"];
    bb71__0_5867 -> bb128__0_5867 [label="unwind"];
    bb72__0_5867 -> bb119__0_5867 [label=""];
    bb73__0_5867 -> bb74__0_5867 [label="return"];
    bb73__0_5867 -> bb128__0_5867 [label="unwind"];
    bb74__0_5867 -> bb75__0_5867 [label="return"];
    bb74__0_5867 -> bb128__0_5867 [label="unwind"];
    bb75__0_5867 -> bb76__0_5867 [label="return"];
    bb75__0_5867 -> bb128__0_5867 [label="unwind"];
    bb76__0_5867 -> bb80__0_5867 [label="0"];
    bb76__0_5867 -> bb77__0_5867 [label="otherwise"];
    bb77__0_5867 -> bb78__0_5867 [label="return"];
    bb77__0_5867 -> bb128__0_5867 [label="unwind"];
    bb78__0_5867 -> bb79__0_5867 [label="return"];
    bb78__0_5867 -> bb128__0_5867 [label="unwind"];
    bb79__0_5867 -> bb119__0_5867 [label=""];
    bb80__0_5867 -> bb81__0_5867 [label="return"];
    bb80__0_5867 -> bb128__0_5867 [label="unwind"];
    bb81__0_5867 -> bb82__0_5867 [label="return"];
    bb81__0_5867 -> bb128__0_5867 [label="unwind"];
    bb82__0_5867 -> bb83__0_5867 [label="return"];
    bb82__0_5867 -> bb128__0_5867 [label="unwind"];
    bb83__0_5867 -> bb84__0_5867 [label="return"];
    bb83__0_5867 -> bb128__0_5867 [label="unwind"];
    bb84__0_5867 -> bb85__0_5867 [label="return"];
    bb84__0_5867 -> bb128__0_5867 [label="unwind"];
    bb85__0_5867 -> bb86__0_5867 [label="return"];
    bb85__0_5867 -> bb128__0_5867 [label="unwind"];
    bb86__0_5867 -> bb92__0_5867 [label="0"];
    bb86__0_5867 -> bb87__0_5867 [label="otherwise"];
    bb87__0_5867 -> bb88__0_5867 [label="return"];
    bb87__0_5867 -> bb128__0_5867 [label="unwind"];
    bb88__0_5867 -> bb89__0_5867 [label="return"];
    bb88__0_5867 -> bb128__0_5867 [label="unwind"];
    bb89__0_5867 -> bb90__0_5867 [label="return"];
    bb89__0_5867 -> bb136__0_5867 [label="unwind"];
    bb90__0_5867 -> bb91__0_5867 [label="return"];
    bb90__0_5867 -> bb136__0_5867 [label="unwind"];
    bb91__0_5867 -> bb118__0_5867 [label=""];
    bb92__0_5867 -> bb93__0_5867 [label="return"];
    bb92__0_5867 -> bb128__0_5867 [label="unwind"];
    bb93__0_5867 -> bb94__0_5867 [label="return"];
    bb93__0_5867 -> bb128__0_5867 [label="unwind"];
    bb94__0_5867 -> bb95__0_5867 [label="0"];
    bb94__0_5867 -> bb98__0_5867 [label="otherwise"];
    bb95__0_5867 -> bb96__0_5867 [label="return"];
    bb95__0_5867 -> bb128__0_5867 [label="unwind"];
    bb96__0_5867 -> bb97__0_5867 [label="return"];
    bb96__0_5867 -> bb128__0_5867 [label="unwind"];
    bb97__0_5867 -> bb118__0_5867 [label=""];
    bb98__0_5867 -> bb99__0_5867 [label="return"];
    bb98__0_5867 -> bb128__0_5867 [label="unwind"];
    bb99__0_5867 -> bb100__0_5867 [label="return"];
    bb99__0_5867 -> bb128__0_5867 [label="unwind"];
    bb100__0_5867 -> bb101__0_5867 [label="return"];
    bb100__0_5867 -> bb128__0_5867 [label="unwind"];
    bb101__0_5867 -> bb102__0_5867 [label="return"];
    bb101__0_5867 -> bb128__0_5867 [label="unwind"];
    bb102__0_5867 -> bb103__0_5867 [label="return"];
    bb102__0_5867 -> bb128__0_5867 [label="unwind"];
    bb103__0_5867 -> bb104__0_5867 [label="return"];
    bb103__0_5867 -> bb128__0_5867 [label="unwind"];
    bb104__0_5867 -> bb110__0_5867 [label="0"];
    bb104__0_5867 -> bb105__0_5867 [label="otherwise"];
    bb105__0_5867 -> bb106__0_5867 [label="return"];
    bb105__0_5867 -> bb128__0_5867 [label="unwind"];
    bb106__0_5867 -> bb107__0_5867 [label="return"];
    bb106__0_5867 -> bb128__0_5867 [label="unwind"];
    bb107__0_5867 -> bb108__0_5867 [label="return"];
    bb107__0_5867 -> bb134__0_5867 [label="unwind"];
    bb108__0_5867 -> bb109__0_5867 [label="return"];
    bb108__0_5867 -> bb134__0_5867 [label="unwind"];
    bb109__0_5867 -> bb117__0_5867 [label=""];
    bb110__0_5867 -> bb111__0_5867 [label="return"];
    bb110__0_5867 -> bb128__0_5867 [label="unwind"];
    bb111__0_5867 -> bb112__0_5867 [label="return"];
    bb111__0_5867 -> bb128__0_5867 [label="unwind"];
    bb112__0_5867 -> bb113__0_5867 [label="0"];
    bb112__0_5867 -> bb116__0_5867 [label="otherwise"];
    bb113__0_5867 -> bb114__0_5867 [label="return"];
    bb113__0_5867 -> bb128__0_5867 [label="unwind"];
    bb114__0_5867 -> bb115__0_5867 [label="return"];
    bb114__0_5867 -> bb128__0_5867 [label="unwind"];
    bb115__0_5867 -> bb117__0_5867 [label=""];
    bb116__0_5867 -> bb127__0_5867 [label=""];
    bb117__0_5867 -> bb118__0_5867 [label=""];
    bb118__0_5867 -> bb119__0_5867 [label=""];
    bb119__0_5867 -> bb120__0_5867 [label="return"];
    bb119__0_5867 -> bb129__0_5867 [label="unwind"];
    bb120__0_5867 -> bb121__0_5867 [label="return"];
    bb120__0_5867 -> bb130__0_5867 [label="unwind"];
    bb121__0_5867 -> bb122__0_5867 [label="return"];
    bb121__0_5867 -> bb131__0_5867 [label="unwind"];
    bb122__0_5867 -> bb123__0_5867 [label=""];
    bb123__0_5867 -> bb124__0_5867 [label="return"];
    bb123__0_5867 -> bb132__0_5867 [label="unwind"];
    bb124__0_5867 -> bb125__0_5867 [label=""];
    bb125__0_5867 -> bb126__0_5867 [label=""];
    bb126__0_5867 -> bb127__0_5867 [label=""];
    bb128__0_5867 -> bb129__0_5867 [label="return"];
    bb129__0_5867 -> bb130__0_5867 [label="return"];
    bb130__0_5867 -> bb131__0_5867 [label="return"];
    bb131__0_5867 -> bb132__0_5867 [label="return"];
    bb133__0_5867 -> bb128__0_5867 [label="return"];
    bb134__0_5867 -> bb128__0_5867 [label="0"];
    bb134__0_5867 -> bb133__0_5867 [label="otherwise"];
    bb135__0_5867 -> bb128__0_5867 [label="return"];
    bb136__0_5867 -> bb128__0_5867 [label="0"];
    bb136__0_5867 -> bb135__0_5867 [label="otherwise"];
    bb137__0_5867 -> bb128__0_5867 [label=""];
    bb138__0_5867 -> bb129__0_5867 [label=""];
    bb139__0_5867 -> bb130__0_5867 [label=""];
    bb140__0_5867 -> bb131__0_5867 [label=""];
    bb141__0_5867 -> bb131__0_5867 [label=""];
    bb142__0_5867 -> bb132__0_5867 [label=""];
    bb143__0_5867 -> bb132__0_5867 [label=""];
}
