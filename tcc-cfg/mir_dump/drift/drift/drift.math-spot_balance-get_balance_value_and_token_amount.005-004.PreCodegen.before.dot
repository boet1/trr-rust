digraph Mir_0_2798 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_balance_value_and_token_amount(_1: &amp;ReErased state::user::SpotPosition, _2: &amp;ReErased state::spot_market::SpotMarket, _3: &amp;ReErased state::oracle::OraclePriceData) -&gt; std::result::Result&lt;(u128, u128), error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _7: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _8: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _13: u128;<br align="left"/>let _14: u128;<br align="left"/>let mut _15: u32;<br align="left"/>let _16: u128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: u128;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u128;<br align="left"/>let mut _43: (u128, u128);<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: u128;<br align="left"/>debug spot_position =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug oracle_price_data =&gt; _3;<br align="left"/>debug token_amount =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug precision_decrease =&gt; _14;<br align="left"/>debug value =&gt; _16;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>>;
    bb0__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/>StorageLive(_8)<br/>_8 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = SpotPosition::get_token_amount(move _7, move _8)</td></tr></table>>];
    bb1__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: u128)<br/>_4 = _13<br/>StorageDead(_13)<br/>StorageDead(_5)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = ((*_2).41: u32)<br/></td></tr><tr><td align="left">_14 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _15)</td></tr></table>>];
    bb4__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_12)<br/>_12 = _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _4<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = ((*_3).0: i64)<br/></td></tr><tr><td align="left">_25 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _26)</td></tr></table>>];
    bb8__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb9__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb10__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_24 as Continue).0: u128)<br/>_23 = _31<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_21 = &lt;u128 as SafeMath&gt;::safe_mul(move _22, move _23)</td></tr></table>>];
    bb11__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb12__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb14__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_32 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb15__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_20 as Continue).0: u128)<br/>_19 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>_37 = _14<br/></td></tr><tr><td align="left">_18 = &lt;u128 as SafeMath&gt;::safe_div(move _19, move _37)</td></tr></table>>];
    bb16__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb17__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb19__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_38 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb20__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_17 as Continue).0: u128)<br/>_16 = _42<br/>StorageDead(_42)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _16<br/>StorageLive(_45)<br/>_45 = _4<br/>_43 = (move _44, move _45)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Ok(move _43)<br/>StorageDead(_43)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb22__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2798 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2798 -> bb1__0_2798 [label="return"];
    bb1__0_2798 -> bb2__0_2798 [label="return"];
    bb2__0_2798 -> bb3__0_2798 [label="0"];
    bb2__0_2798 -> bb5__0_2798 [label="1"];
    bb2__0_2798 -> bb4__0_2798 [label="otherwise"];
    bb3__0_2798 -> bb7__0_2798 [label="return"];
    bb5__0_2798 -> bb6__0_2798 [label="return"];
    bb6__0_2798 -> bb25__0_2798 [label=""];
    bb7__0_2798 -> bb8__0_2798 [label="return"];
    bb8__0_2798 -> bb9__0_2798 [label="return"];
    bb9__0_2798 -> bb10__0_2798 [label="0"];
    bb9__0_2798 -> bb11__0_2798 [label="1"];
    bb9__0_2798 -> bb4__0_2798 [label="otherwise"];
    bb10__0_2798 -> bb13__0_2798 [label="return"];
    bb11__0_2798 -> bb12__0_2798 [label="return"];
    bb12__0_2798 -> bb23__0_2798 [label=""];
    bb13__0_2798 -> bb14__0_2798 [label="return"];
    bb14__0_2798 -> bb15__0_2798 [label="0"];
    bb14__0_2798 -> bb16__0_2798 [label="1"];
    bb14__0_2798 -> bb4__0_2798 [label="otherwise"];
    bb15__0_2798 -> bb18__0_2798 [label="return"];
    bb16__0_2798 -> bb17__0_2798 [label="return"];
    bb17__0_2798 -> bb23__0_2798 [label=""];
    bb18__0_2798 -> bb19__0_2798 [label="return"];
    bb19__0_2798 -> bb20__0_2798 [label="0"];
    bb19__0_2798 -> bb21__0_2798 [label="1"];
    bb19__0_2798 -> bb4__0_2798 [label="otherwise"];
    bb20__0_2798 -> bb26__0_2798 [label=""];
    bb21__0_2798 -> bb22__0_2798 [label="return"];
    bb22__0_2798 -> bb24__0_2798 [label=""];
    bb23__0_2798 -> bb24__0_2798 [label=""];
    bb24__0_2798 -> bb25__0_2798 [label=""];
    bb25__0_2798 -> bb26__0_2798 [label=""];
}
