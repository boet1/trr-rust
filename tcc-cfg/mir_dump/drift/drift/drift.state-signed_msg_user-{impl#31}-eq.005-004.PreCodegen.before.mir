// MIR for `signed_msg_user::<impl at programs/drift/src/state/signed_msg_user.rs:51:23: 51:32>::eq` before PreCodegen

fn signed_msg_user::<impl at programs/drift/src/state/signed_msg_user.rs:51:23: 51:32>::eq(_1: &SignedMsgUserOrders, _2: &SignedMsgUserOrders) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: &anchor_lang::prelude::Pubkey;
    let mut _5: &anchor_lang::prelude::Pubkey;
    let mut _6: bool;
    let mut _7: u32;
    let mut _8: u32;
    let mut _9: &std::vec::Vec<state::signed_msg_user::SignedMsgOrderId>;
    let mut _10: &std::vec::Vec<state::signed_msg_user::SignedMsgOrderId>;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: anchor_lang::prelude::Pubkey);
        StorageLive(_5);
        _5 = &((*_2).0: anchor_lang::prelude::Pubkey);
        _3 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb5, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = ((*_1).1: u32);
        StorageLive(_8);
        _8 = ((*_2).1: u32);
        _6 = Eq(move _7, move _8);
        switchInt(move _6) -> [0: bb4, otherwise: bb3];
    }

    bb3: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        _9 = &((*_1).2: std::vec::Vec<state::signed_msg_user::SignedMsgOrderId>);
        StorageLive(_10);
        _10 = &((*_2).2: std::vec::Vec<state::signed_msg_user::SignedMsgOrderId>);
        _0 = <Vec<SignedMsgOrderId> as PartialEq>::eq(move _9, move _10) -> [return: bb7, unwind continue];
    }

    bb4: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb6;
    }

    bb5: {
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb6;
    }

    bb6: {
        _0 = const false;
        goto -> bb8;
    }

    bb7: {
        StorageDead(_10);
        StorageDead(_9);
        goto -> bb8;
    }

    bb8: {
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}
