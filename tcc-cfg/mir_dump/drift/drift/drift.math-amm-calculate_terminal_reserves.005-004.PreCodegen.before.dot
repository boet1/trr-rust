digraph Mir_0_1807 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_terminal_reserves(_1: &amp;ReErased state::perp_market::AMM) -&gt; std::result::Result&lt;(u128, u128), error::ErrorCode&gt;<br align="left"/>let _2: controller::amm::SwapDirection;<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: i128;<br align="left"/>let _5: u128;<br align="left"/>let _6: u128;<br align="left"/>let mut _7: (u128, u128);<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: i128;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: controller::amm::SwapDirection;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: (u128, u128);<br align="left"/>let mut _20: (u128, u128);<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: u128;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug swap_direction =&gt; _2;<br align="left"/>debug new_quote_asset_amount =&gt; _5;<br align="left"/>debug new_base_asset_amount =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>>;
    bb0__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = ((*_1).15: i128)<br/>_3 = Gt(move _4, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_2 = SwapDirection::Add<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_2 = SwapDirection::Remove<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_1).15: i128)<br/></td></tr><tr><td align="left">_10 = core::num::&lt;impl i128&gt;::unsigned_abs(move _11)</td></tr></table>>];
    bb4__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>_12 = ((*_1).5: u128)<br/>StorageLive(_13)<br/>_13 = _2<br/>StorageLive(_14)<br/>_14 = ((*_1).10: u128)<br/></td></tr><tr><td align="left">_9 = calculate_swap_output(move _10, move _12, move _13, move _14)</td></tr></table>>];
    bb5__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb6__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_15 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb7__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_8 as Continue).0: (u128, u128))<br/>_7 = _19<br/>StorageDead(_19)<br/>StorageLive(_5)<br/>_5 = (_7.0: u128)<br/>StorageLive(_6)<br/>_6 = (_7.1: u128)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _5<br/>StorageLive(_22)<br/>_22 = _6<br/>_20 = (move _21, move _22)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Ok(move _20)<br/>StorageDead(_20)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb10__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1807 -> bb2__0_1807 [label="0"];
    bb0__0_1807 -> bb1__0_1807 [label="otherwise"];
    bb1__0_1807 -> bb3__0_1807 [label=""];
    bb2__0_1807 -> bb3__0_1807 [label=""];
    bb3__0_1807 -> bb4__0_1807 [label="return"];
    bb4__0_1807 -> bb5__0_1807 [label="return"];
    bb5__0_1807 -> bb6__0_1807 [label="return"];
    bb6__0_1807 -> bb7__0_1807 [label="0"];
    bb6__0_1807 -> bb9__0_1807 [label="1"];
    bb6__0_1807 -> bb8__0_1807 [label="otherwise"];
    bb7__0_1807 -> bb11__0_1807 [label=""];
    bb9__0_1807 -> bb10__0_1807 [label="return"];
    bb10__0_1807 -> bb11__0_1807 [label=""];
}
