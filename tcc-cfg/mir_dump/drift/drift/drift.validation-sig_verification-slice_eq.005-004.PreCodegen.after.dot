digraph Mir_0_4637 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn slice_eq(_1: &amp;ReErased [u8], _2: &amp;ReErased [u8]) -&gt; bool<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: usize;<br align="left"/>let mut _5: &amp;ReErased [u8];<br align="left"/>let mut _6: usize;<br align="left"/>let mut _7: &amp;ReErased [u8];<br align="left"/>let mut _8: i32;<br align="left"/>let mut _9: &amp;ReErased [u8];<br align="left"/>let mut _10: &amp;ReErased [u8];<br align="left"/>let mut _11: usize;<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>debug a =&gt; _1;<br align="left"/>debug b =&gt; _2;<br align="left"/>>;
    bb0__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [u8]&gt;::len(move _5)</td></tr></table>>];
    bb1__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [u8]&gt;::len(move _7)</td></tr></table>>];
    bb2__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_3 = Eq(move _4, move _6)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb3__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_10 = &amp;(*_2)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_1)<br/></td></tr><tr><td align="left">_11 = core::slice::&lt;impl [u8]&gt;::len(move _12)</td></tr></table>>];
    bb4__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_8 = solana_program::program_memory::sol_memcmp(move _9, move _10, move _11)</td></tr></table>>];
    bb6__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_0 = Eq(move _8, const 0_i32)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4637 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4637 -> bb1__0_4637 [label="return"];
    bb1__0_4637 -> bb2__0_4637 [label="return"];
    bb2__0_4637 -> bb4__0_4637 [label="0"];
    bb2__0_4637 -> bb3__0_4637 [label="otherwise"];
    bb3__0_4637 -> bb5__0_4637 [label="return"];
    bb4__0_4637 -> bb7__0_4637 [label=""];
    bb5__0_4637 -> bb6__0_4637 [label="return"];
    bb6__0_4637 -> bb7__0_4637 [label=""];
}
