// MIR for `state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::update_last_active_slot` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::update_last_active_slot(_1: &mut User, _2: u64) -> () {
    debug self => _1;
    debug slot => _2;
    let mut _0: ();
    let _3: ();
    let mut _4: bool;
    let mut _5: &state::user::User;
    let mut _6: u64;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        _4 = User::is_being_liquidated(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _4) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        _3 = const ();
        goto -> bb4;
    }

    bb3: {
        StorageDead(_5);
        StorageLive(_6);
        _6 = _2;
        ((*_1).14: u64) = move _6;
        StorageDead(_6);
        _3 = const ();
        goto -> bb4;
    }

    bb4: {
        StorageDead(_4);
        StorageDead(_3);
        ((*_1).21: bool) = const false;
        _0 = const ();
        return;
    }
}
