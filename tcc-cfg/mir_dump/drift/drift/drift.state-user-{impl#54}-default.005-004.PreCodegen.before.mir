// MIR for `state::user::<impl at programs/drift/src/state/user.rs:681:10: 681:17>::default` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:681:10: 681:17>::default() -> SpotPosition {
    let mut _0: state::user::SpotPosition;
    let mut _1: u64;
    let mut _2: i64;
    let mut _3: i64;
    let mut _4: i64;
    let mut _5: u16;
    let mut _6: state::spot_market::SpotBalanceType;
    let mut _7: u8;
    let mut _8: [u8; 4];

    bb0: {
        StorageLive(_1);
        _1 = <u64 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <i64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <i64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <i64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u16 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <SpotBalanceType as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <u8 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <[u8; 4] as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        _0 = SpotPosition { scaled_balance: move _1, open_bids: move _2, open_asks: move _3, cumulative_deposits: move _4, market_index: move _5, balance_type: move _6, open_orders: move _7, padding: move _8 };
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
