digraph Mir_0_1214 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_end_insurance_fund_swap(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;&gt;, _2: u16, _3: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _5: anchor_lang::prelude::Clock;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _7: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _12: anchor_lang::prelude::Clock;<br align="left"/>let _13: u64;<br align="left"/>let _14: i64;<br align="left"/>let _15: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _16: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _17: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _18: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _19: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _20: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _21: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _22: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _24: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _25: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _27: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _28: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _29: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _30: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _31: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _32: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _33: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _34: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _35: usize;<br align="left"/>let mut _36: usize;<br align="left"/>let mut _37: *mut u8;<br align="left"/>let mut _38: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _39: u16;<br align="left"/>let mut _40: u16;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _43: state::state::OracleGuardRails;<br align="left"/>let mut _44: &amp;ReErased state::state::State;<br align="left"/>let mut _45: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _51: std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;&gt;;<br align="left"/>let mut _53: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _54: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let _60: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _62: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _63: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _69: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _71: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _72: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _73: isize;<br align="left"/>let _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _75: !;<br align="left"/>let mut _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _77: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _78: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _80: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _81: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased u16;<br align="left"/>let _83: &amp;ReErased u16;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _89: ();<br align="left"/>let mut _90: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _91: isize;<br align="left"/>let _92: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let _93: ();<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _95: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _96: bool;<br align="left"/>let mut _97: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _98: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _100: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _101: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _102: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _103: ();<br align="left"/>let _104: error::ErrorCode;<br align="left"/>let _105: ();<br align="left"/>let mut _106: &amp;ReErased str;<br align="left"/>let _107: &amp;ReErased str;<br align="left"/>let mut _108: &amp;ReErased std::string::String;<br align="left"/>let _109: &amp;ReErased std::string::String;<br align="left"/>let _110: std::string::String;<br align="left"/>let _111: std::string::String;<br align="left"/>let mut _112: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _115: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _116: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _120: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _121: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased error::ErrorCode;<br align="left"/>let _123: &amp;ReErased error::ErrorCode;<br align="left"/>let _124: ();<br align="left"/>let mut _125: &amp;ReErased str;<br align="left"/>let _126: &amp;ReErased str;<br align="left"/>let mut _127: error::ErrorCode;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: ();<br align="left"/>let _133: ();<br align="left"/>let mut _134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _135: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _136: bool;<br align="left"/>let mut _137: u64;<br align="left"/>let mut _138: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _139: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _140: ();<br align="left"/>let _141: error::ErrorCode;<br align="left"/>let _142: ();<br align="left"/>let mut _143: &amp;ReErased str;<br align="left"/>let _144: &amp;ReErased str;<br align="left"/>let mut _145: &amp;ReErased std::string::String;<br align="left"/>let _146: &amp;ReErased std::string::String;<br align="left"/>let _147: std::string::String;<br align="left"/>let _148: std::string::String;<br align="left"/>let mut _149: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _152: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _153: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _154: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _155: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _157: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _158: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _159: &amp;ReErased error::ErrorCode;<br align="left"/>let _160: &amp;ReErased error::ErrorCode;<br align="left"/>let _161: ();<br align="left"/>let mut _162: &amp;ReErased str;<br align="left"/>let _163: &amp;ReErased str;<br align="left"/>let mut _164: error::ErrorCode;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: ();<br align="left"/>let mut _170: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _171: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _172: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _173: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased u16;<br align="left"/>let _175: &amp;ReErased u16;<br align="left"/>let mut _176: isize;<br align="left"/>let _177: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _178: !;<br align="left"/>let mut _179: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _180: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _181: ();<br align="left"/>let mut _182: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _183: isize;<br align="left"/>let _184: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let _185: ();<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _187: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _190: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _191: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _192: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _193: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _194: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _195: ();<br align="left"/>let _196: error::ErrorCode;<br align="left"/>let _197: ();<br align="left"/>let mut _198: &amp;ReErased str;<br align="left"/>let _199: &amp;ReErased str;<br align="left"/>let mut _200: &amp;ReErased std::string::String;<br align="left"/>let _201: &amp;ReErased std::string::String;<br align="left"/>let _202: std::string::String;<br align="left"/>let _203: std::string::String;<br align="left"/>let mut _204: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _207: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _208: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _210: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _211: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _212: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _213: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _214: &amp;ReErased error::ErrorCode;<br align="left"/>let _215: &amp;ReErased error::ErrorCode;<br align="left"/>let _216: ();<br align="left"/>let mut _217: &amp;ReErased str;<br align="left"/>let _218: &amp;ReErased str;<br align="left"/>let mut _219: error::ErrorCode;<br align="left"/>let mut _220: isize;<br align="left"/>let _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _222: !;<br align="left"/>let mut _223: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _224: ();<br align="left"/>let _225: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _226: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _227: u64;<br align="left"/>let mut _228: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _229: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _230: ();<br align="left"/>let mut _231: bool;<br align="left"/>let mut _232: u64;<br align="left"/>let mut _233: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _234: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _235: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _236: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _237: u64;<br align="left"/>let mut _238: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _239: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _240: u64;<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _242: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _243: u64;<br align="left"/>let mut _244: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _245: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _246: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _247: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _248: u64;<br align="left"/>let mut _249: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _250: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _251: isize;<br align="left"/>let _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _253: !;<br align="left"/>let mut _254: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _255: u64;<br align="left"/>let _256: ();<br align="left"/>let mut _257: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _258: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _259: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _260: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _262: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _264: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _265: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _266: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _267: u64;<br align="left"/>let mut _268: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _269: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _270: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _271: bool;<br align="left"/>let mut _272: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _273: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _274: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _275: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _276: isize;<br align="left"/>let _277: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _278: !;<br align="left"/>let mut _279: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _280: ();<br align="left"/>let _281: ();<br align="left"/>let mut _282: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _283: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _284: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _285: isize;<br align="left"/>let _286: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _287: !;<br align="left"/>let mut _288: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _289: ();<br align="left"/>let _290: ();<br align="left"/>let mut _291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _292: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _293: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _294: isize;<br align="left"/>let _295: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _296: !;<br align="left"/>let mut _297: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _298: ();<br align="left"/>let mut _299: u64;<br align="left"/>let mut _300: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _301: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _302: u64;<br align="left"/>let mut _303: u64;<br align="left"/>let mut _304: isize;<br align="left"/>let _305: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _306: !;<br align="left"/>let mut _307: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _308: u64;<br align="left"/>let mut _309: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _310: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _311: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _312: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _313: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _314: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _315: u64;<br align="left"/>let _316: ();<br align="left"/>let mut _317: bool;<br align="left"/>let mut _318: u64;<br align="left"/>let mut _319: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _320: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _321: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _322: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _323: u64;<br align="left"/>let mut _324: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _325: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _326: u64;<br align="left"/>let mut _327: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _328: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _329: u64;<br align="left"/>let mut _330: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _331: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _332: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _333: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _334: u64;<br align="left"/>let mut _335: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _336: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _337: isize;<br align="left"/>let _338: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _339: !;<br align="left"/>let mut _340: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _341: u64;<br align="left"/>let _342: ();<br align="left"/>let mut _343: isize;<br align="left"/>let _344: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _345: ();<br align="left"/>let mut _346: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _347: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _348: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _349: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _350: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _351: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _352: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _353: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _354: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _355: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _356: u64;<br align="left"/>let mut _357: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _358: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _359: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _360: bool;<br align="left"/>let mut _361: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _362: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _363: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _364: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _365: isize;<br align="left"/>let _366: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _367: !;<br align="left"/>let mut _368: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _369: ();<br align="left"/>let _370: ();<br align="left"/>let mut _371: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _372: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _373: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _374: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _375: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _376: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _377: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _378: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _379: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _380: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _381: u64;<br align="left"/>let mut _382: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _383: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _384: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _385: bool;<br align="left"/>let mut _386: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _387: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _388: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _389: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _390: isize;<br align="left"/>let _391: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _392: !;<br align="left"/>let mut _393: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _394: ();<br align="left"/>let _395: ();<br align="left"/>let mut _396: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _397: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _398: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _399: isize;<br align="left"/>let _400: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _401: !;<br align="left"/>let mut _402: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _403: ();<br align="left"/>let _404: ();<br align="left"/>let mut _405: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _406: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _407: bool;<br align="left"/>let mut _408: u64;<br align="left"/>let mut _409: ();<br align="left"/>let _410: error::ErrorCode;<br align="left"/>let _411: ();<br align="left"/>let mut _412: &amp;ReErased str;<br align="left"/>let _413: &amp;ReErased str;<br align="left"/>let mut _414: &amp;ReErased std::string::String;<br align="left"/>let _415: &amp;ReErased std::string::String;<br align="left"/>let _416: std::string::String;<br align="left"/>let _417: std::string::String;<br align="left"/>let mut _418: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _419: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _420: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _421: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _422: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _423: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _424: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _425: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _426: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _427: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _428: &amp;ReErased error::ErrorCode;<br align="left"/>let _429: &amp;ReErased error::ErrorCode;<br align="left"/>let _430: ();<br align="left"/>let mut _431: &amp;ReErased str;<br align="left"/>let _432: &amp;ReErased str;<br align="left"/>let mut _433: error::ErrorCode;<br align="left"/>let mut _434: isize;<br align="left"/>let _435: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _436: !;<br align="left"/>let mut _437: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _438: ();<br align="left"/>let mut _439: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _440: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _441: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _442: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _443: ();<br align="left"/>let mut _444: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _445: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _446: bool;<br align="left"/>let mut _447: u64;<br align="left"/>let mut _448: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _449: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _450: bool;<br align="left"/>let mut _451: u64;<br align="left"/>let mut _452: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _453: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _454: ();<br align="left"/>let _455: error::ErrorCode;<br align="left"/>let _456: ();<br align="left"/>let mut _457: &amp;ReErased str;<br align="left"/>let _458: &amp;ReErased str;<br align="left"/>let mut _459: &amp;ReErased std::string::String;<br align="left"/>let _460: &amp;ReErased std::string::String;<br align="left"/>let _461: std::string::String;<br align="left"/>let _462: std::string::String;<br align="left"/>let mut _463: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _464: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _465: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _466: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _467: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _468: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _469: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _470: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _471: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _472: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _473: &amp;ReErased error::ErrorCode;<br align="left"/>let _474: &amp;ReErased error::ErrorCode;<br align="left"/>let _475: ();<br align="left"/>let mut _476: &amp;ReErased str;<br align="left"/>let _477: &amp;ReErased str;<br align="left"/>let mut _478: error::ErrorCode;<br align="left"/>let mut _479: isize;<br align="left"/>let _480: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _481: !;<br align="left"/>let mut _482: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _483: ();<br align="left"/>let _484: ();<br align="left"/>let mut _485: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _486: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _487: bool;<br align="left"/>let mut _488: u64;<br align="left"/>let mut _489: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _490: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _491: bool;<br align="left"/>let mut _492: u64;<br align="left"/>let mut _493: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _494: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _495: ();<br align="left"/>let _496: error::ErrorCode;<br align="left"/>let _497: ();<br align="left"/>let mut _498: &amp;ReErased str;<br align="left"/>let _499: &amp;ReErased str;<br align="left"/>let mut _500: &amp;ReErased std::string::String;<br align="left"/>let _501: &amp;ReErased std::string::String;<br align="left"/>let _502: std::string::String;<br align="left"/>let _503: std::string::String;<br align="left"/>let mut _504: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _505: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _506: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _507: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _508: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _509: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _510: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _511: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _512: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _513: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _514: &amp;ReErased error::ErrorCode;<br align="left"/>let _515: &amp;ReErased error::ErrorCode;<br align="left"/>let _516: ();<br align="left"/>let mut _517: &amp;ReErased str;<br align="left"/>let _518: &amp;ReErased str;<br align="left"/>let mut _519: error::ErrorCode;<br align="left"/>let mut _520: isize;<br align="left"/>let _521: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _522: !;<br align="left"/>let mut _523: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _524: ();<br align="left"/>let _525: i64;<br align="left"/>let mut _526: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _527: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _528: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _529: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _530: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _531: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _532: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _533: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _534: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _535: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _536: isize;<br align="left"/>let _537: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _538: !;<br align="left"/>let mut _539: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _540: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _541: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _542: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;&gt;;<br align="left"/>let mut _543: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _544: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _545: isize;<br align="left"/>let _546: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _547: !;<br align="left"/>let mut _548: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _549: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _550: ();<br align="left"/>let mut _551: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _552: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _553: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _554: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _555: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _556: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _557: u64;<br align="left"/>let mut _558: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _559: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _560: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _561: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _562: u64;<br align="left"/>let mut _563: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _564: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _565: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _566: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _567: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _568: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _569: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _570: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _571: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _572: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _573: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _574: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _575: u64;<br align="left"/>let mut _576: u64;<br align="left"/>let mut _577: u64;<br align="left"/>let mut _578: i64;<br align="left"/>let mut _579: i64;<br align="left"/>let mut _580: isize;<br align="left"/>let _581: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _582: !;<br align="left"/>let mut _583: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _584: ();<br align="left"/>let mut _585: ();<br align="left"/>let mut _586: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _587: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _588: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _589: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _590: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _591: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _592: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _593: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _594: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _595: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _596: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _597: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _598: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _599: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _600: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _601: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _602: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _603: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _604: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _605: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _606: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _607: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _608: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _609: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _610: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _611: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _612: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _613: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _614: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _615: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _616: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _617: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _618: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _619: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _620: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _621: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _622: isize;<br align="left"/>let mut _623: isize;<br align="left"/>let mut _624: isize;<br align="left"/>let mut _625: isize;<br align="left"/>let mut _626: isize;<br align="left"/>let mut _627: isize;<br align="left"/>let mut _628: isize;<br align="left"/>let mut _629: isize;<br align="left"/>let mut _630: isize;<br align="left"/>let mut _631: isize;<br align="left"/>let mut _632: isize;<br align="left"/>let mut _633: isize;<br align="left"/>let mut _634: isize;<br align="left"/>let mut _635: isize;<br align="left"/>let mut _636: isize;<br align="left"/>let mut _637: isize;<br align="left"/>let mut _638: isize;<br align="left"/>let mut _639: isize;<br align="left"/>let mut _640: isize;<br align="left"/>let mut _641: isize;<br align="left"/>let mut _642: isize;<br align="left"/>let mut _643: isize;<br align="left"/>let mut _644: isize;<br align="left"/>let mut _645: isize;<br align="left"/>let mut _646: isize;<br align="left"/>let mut _647: isize;<br align="left"/>let mut _648: isize;<br align="left"/>let mut _649: isize;<br align="left"/>let mut _650: isize;<br align="left"/>let mut _651: isize;<br align="left"/>let mut _652: isize;<br align="left"/>let mut _653: isize;<br align="left"/>let mut _654: isize;<br align="left"/>let mut _655: isize;<br align="left"/>let mut _656: isize;<br align="left"/>let mut _657: isize;<br align="left"/>let mut _658: isize;<br align="left"/>let mut _659: isize;<br align="left"/>let mut _660: isize;<br align="left"/>let mut _661: isize;<br align="left"/>let mut _662: isize;<br align="left"/>let mut _663: isize;<br align="left"/>let mut _664: isize;<br align="left"/>let mut _665: isize;<br align="left"/>let mut _666: isize;<br align="left"/>let mut _667: isize;<br align="left"/>let mut _668: isize;<br align="left"/>let mut _669: isize;<br align="left"/>let mut _670: isize;<br align="left"/>let mut _671: isize;<br align="left"/>let mut _672: isize;<br align="left"/>let mut _673: isize;<br align="left"/>let mut _674: isize;<br align="left"/>let mut _675: isize;<br align="left"/>let mut _676: isize;<br align="left"/>let mut _677: isize;<br align="left"/>let mut _678: *const [u16; 2_usize];<br align="left"/>let mut _679: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _680: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _681: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _682: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _683: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _684: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _685: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _686: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _687: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _688: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _689: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _690: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _691: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _692: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _693: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _694: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _695: *const ();<br align="left"/>let mut _696: usize;<br align="left"/>let mut _697: usize;<br align="left"/>let mut _698: usize;<br align="left"/>let mut _699: usize;<br align="left"/>let mut _700: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug in_market_index =&gt; _2;<br align="left"/>debug out_market_index =&gt; _3;<br align="left"/>debug state =&gt; _4;<br align="left"/>debug clock =&gt; _5;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug now =&gt; _14;<br align="left"/>debug remaining_accounts =&gt; _15;<br align="left"/>debug perp_market_map =&gt; _19;<br align="left"/>debug spot_market_map =&gt; _20;<br align="left"/>debug oracle_map =&gt; _21;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug out_token_program =&gt; _51;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug in_mint =&gt; _60;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug out_mint =&gt; _69;<br align="left"/>debug residual =&gt; _74;<br align="left"/>debug val =&gt; _77;<br align="left"/>debug in_spot_market =&gt; _78;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug in_mint =&gt; _92;<br align="left"/>debug error_code =&gt; _104;<br align="left"/>debug res =&gt; _111;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>debug error_code =&gt; _141;<br align="left"/>debug res =&gt; _148;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug out_spot_market =&gt; _170;<br align="left"/>debug residual =&gt; _177;<br align="left"/>debug val =&gt; _180;<br align="left"/>debug out_mint =&gt; _184;<br align="left"/>debug error_code =&gt; _196;<br align="left"/>debug res =&gt; _203;<br align="left"/>debug residual =&gt; _221;<br align="left"/>debug val =&gt; _224;<br align="left"/>debug in_vault =&gt; _225;<br align="left"/>debug in_token_account =&gt; _226;<br align="left"/>debug amount_in =&gt; _227;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug residual =&gt; _252;<br align="left"/>debug val =&gt; _255;<br align="left"/>debug residual =&gt; _277;<br align="left"/>debug val =&gt; _280;<br align="left"/>debug residual =&gt; _286;<br align="left"/>debug val =&gt; _289;<br align="left"/>debug residual =&gt; _295;<br align="left"/>debug val =&gt; _298;<br align="left"/>debug residual =&gt; _305;<br align="left"/>debug val =&gt; _308;<br align="left"/>debug out_vault =&gt; _313;<br align="left"/>debug out_token_account =&gt; _314;<br align="left"/>debug amount_out =&gt; _315;<br align="left"/>debug residual =&gt; _338;<br align="left"/>debug val =&gt; _341;<br align="left"/>debug token_interface =&gt; _344;<br align="left"/>debug residual =&gt; _366;<br align="left"/>debug val =&gt; _369;<br align="left"/>debug residual =&gt; _391;<br align="left"/>debug val =&gt; _394;<br align="left"/>debug residual =&gt; _400;<br align="left"/>debug val =&gt; _403;<br align="left"/>debug error_code =&gt; _410;<br align="left"/>debug res =&gt; _417;<br align="left"/>debug residual =&gt; _435;<br align="left"/>debug val =&gt; _438;<br align="left"/>debug error_code =&gt; _455;<br align="left"/>debug res =&gt; _462;<br align="left"/>debug residual =&gt; _480;<br align="left"/>debug val =&gt; _483;<br align="left"/>debug error_code =&gt; _496;<br align="left"/>debug res =&gt; _503;<br align="left"/>debug residual =&gt; _521;<br align="left"/>debug val =&gt; _524;<br align="left"/>debug out_oracle_price =&gt; _525;<br align="left"/>debug residual =&gt; _537;<br align="left"/>debug val =&gt; _540;<br align="left"/>debug if_rebalance_config =&gt; _541;<br align="left"/>debug residual =&gt; _546;<br align="left"/>debug val =&gt; _549;<br align="left"/>debug residual =&gt; _581;<br align="left"/>debug val =&gt; _584;<br align="left"/>>;
    bb0__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_592 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_4 = &amp;((*_592).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_8 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_6 as Continue).0: anchor_lang::prelude::Clock)<br/>_5 = move _12<br/>StorageDead(_12)<br/>_622 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_13)<br/>_13 = (_5.0: u64)<br/>StorageLive(_14)<br/>_14 = (_5.4: i64)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_593 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_18 = &amp;(*_593)<br/></td></tr><tr><td align="left">_17 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _18)</td></tr></table>>];
    bb4__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_664 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _17)</td></tr></table>>];
    bb8__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_15 = &amp;mut _16<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_15)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/></td></tr><tr><td align="left">_28 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb9__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_35 = SizeOf([u16; 2])<br/>_36 = AlignOf([u16; 2])<br/></td></tr><tr><td align="left">_37 = alloc::alloc::exchange_malloc(move _35, move _36)</td></tr></table>>];
    bb10__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ShallowInitBox(move _37, [u16; 2])<br/>StorageLive(_39)<br/>_39 = _2<br/>StorageLive(_40)<br/>_40 = _3<br/>_678 = (((_38.0: std::ptr::Unique&lt;[u16; 2]&gt;).0: std::ptr::NonNull&lt;[u16; 2]&gt;).0: *const [u16; 2])<br/>_695 = _678 as *const () (PtrToPtr)<br/>_696 = _695 as usize (Transmute)<br/>_697 = AlignOf([u16; 2])<br/>_698 = Sub(_697, const 1_usize)<br/>_699 = BitAnd(_696, _698)<br/>_700 = Eq(_699, const 0_usize)<br/></td></tr><tr><td align="left">assert(_700, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _697, _696)</td></tr></table>>];
    bb11__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = get_writable_spot_market_set_from_many(move _32)</td></tr></table>>];
    bb12__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = &amp;_31<br/>_29 = &amp;(*_30)<br/>StorageLive(_41)<br/>_41 = (_5.0: u64)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_594 = deref_copy (*_4)<br/>_679 = (((_594.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_45 = &amp;(*_679)<br/></td></tr><tr><td align="left">_44 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb13__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = ((*_44).7: state::state::OracleGuardRails)<br/>_42 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _43)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_24 = load_maps(move _25, move _26, move _29, move _41, move _42)</td></tr></table>>];
    bb14__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb15__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_46 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb16__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_23 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_22 = move _50<br/>StorageDead(_50)<br/>StorageLive(_19)<br/>_19 = move (_22.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_20)<br/>_20 = move (_22.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_21)<br/>_21 = move (_22.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_626 = discriminant(_23)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb17__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb18__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_624 = discriminant(_23)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb19__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb20__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_53 = get_token_interface(move _54)</td></tr></table>>];
    bb21__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb22__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_55 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb23__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_52 as Continue).0: std::option::Option&lt;anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;&gt;)<br/>_51 = move _59<br/>StorageDead(_59)<br/>StorageDead(_52)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_62 = get_token_mint(move _63)</td></tr></table>>];
    bb24__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb25__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb27__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_64 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb28__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = move ((_61 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_60 = move _68<br/>StorageDead(_68)<br/>StorageDead(_61)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_71 = get_token_mint(move _72)</td></tr></table>>];
    bb29__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb30__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb32__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_73 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb33__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_70 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_69 = move _77<br/>StorageDead(_77)<br/>StorageDead(_70)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_20<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;_2<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_80 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _81, move _82)</td></tr></table>>];
    bb34__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_76)<br/>_76 = _74<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _76)</td></tr></table>>];
    bb35__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb37__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_84 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb38__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = move ((_79 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_78 = move _88<br/>StorageDead(_88)<br/>_630 = discriminant(_79)<br/>StorageDead(_83)<br/>StorageDead(_79)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_60<br/>_91 = discriminant((*_90))<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb39__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb40__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>_628 = discriminant(_79)<br/>StorageDead(_83)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = &amp;(((*_90) as Some).0: anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_92)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as anchor_lang::Key&gt;::key(move _99)</td></tr></table>>];
    bb42__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_97 = &amp;_98<br/>StorageDead(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_78<br/></td></tr><tr><td align="left">_101 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb43__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_100 = &amp;((*_101).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_96 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _97, move _100)</td></tr></table>>];
    bb44__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb45__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_103)<br/>_103 = ()<br/>_95 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _103)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_104)<br/>_104 = error::ErrorCode::InvalidSwap<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_591 = const _<br/>_115 = &amp;(*_591)<br/>_114 = &amp;(*_115)<br/>_113 = move _114 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;_104<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _122)</td></tr></table>>];
    bb47__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = [move _121]<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/>_117 = move _118 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_112 = Arguments::&lt;'_&gt;::new_v1(move _113, move _117)</td></tr></table>>];
    bb48__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = format(move _112)</td></tr></table>>];
    bb49__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>_110 = move _111<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = &lt;String as Deref&gt;::deref(move _108)</td></tr></table>>];
    bb50__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_106 = &amp;(*_107)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_105 = solana_program::log::sol_log(move _106)</td></tr></table>>];
    bb51__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb52__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = const &quot;in_spot_market.mint mismatch&quot;<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = solana_program::log::sol_log(move _125)</td></tr></table>>];
    bb53__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>_127 = _104<br/>_95 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _127)<br/>StorageDead(_127)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb55__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_128 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb56__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_94 as Continue).0: ())<br/>_93 = _132<br/>StorageDead(_132)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>_89 = const ()<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb58__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_89 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_78<br/></td></tr><tr><td align="left">_138 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _139)</td></tr></table>>];
    bb61__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_137 = ((*_138).51: u64)<br/>_136 = Ne(move _137, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb62__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageLive(_140)<br/>_140 = ()<br/>_135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _140)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageLive(_141)<br/>_141 = error::ErrorCode::InvalidSwap<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_590 = const _<br/>_152 = &amp;(*_590)<br/>_151 = &amp;(*_152)<br/>_150 = move _151 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_151)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;_141<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _159)</td></tr></table>>];
    bb64__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_157 = [move _158]<br/>StorageDead(_158)<br/>_156 = &amp;_157<br/>_155 = &amp;(*_156)<br/>_154 = move _155 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_149 = Arguments::&lt;'_&gt;::new_v1(move _150, move _154)</td></tr></table>>];
    bb65__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_148 = format(move _149)</td></tr></table>>];
    bb66__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_152)<br/>_147 = move _148<br/>StorageDead(_148)<br/>_146 = &amp;_147<br/>_145 = &amp;(*_146)<br/></td></tr><tr><td align="left">_144 = &lt;String as Deref&gt;::deref(move _145)</td></tr></table>>];
    bb67__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_143 = &amp;(*_144)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_142 = solana_program::log::sol_log(move _143)</td></tr></table>>];
    bb68__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">drop(_147)</td></tr></table>>];
    bb69__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = const &quot;the in_spot_market must have a flash loan amount set&quot;<br/>_162 = &amp;(*_163)<br/></td></tr><tr><td align="left">_161 = solana_program::log::sol_log(move _162)</td></tr></table>>];
    bb70__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageLive(_164)<br/>_164 = _141<br/>_135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _164)<br/>StorageDead(_164)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _135)</td></tr></table>>];
    bb72__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_165 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb73__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_134 as Continue).0: ())<br/>_133 = _169<br/>StorageDead(_169)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = &amp;_20<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;_3<br/>_174 = &amp;(*_175)<br/></td></tr><tr><td align="left">_172 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _173, move _174)</td></tr></table>>];
    bb74__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb75__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _172)</td></tr></table>>];
    bb77__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_176 = discriminant(_171)<br/></td></tr><tr><td align="left">switchInt(move _176)</td></tr></table>>];
    bb78__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = move ((_171 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_170 = move _180<br/>StorageDead(_180)<br/>_634 = discriminant(_171)<br/>StorageDead(_175)<br/>StorageDead(_171)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = &amp;_69<br/>_183 = discriminant((*_182))<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb79__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_171 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_179)<br/>_179 = _177<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _179)</td></tr></table>>];
    bb80__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/>_632 = discriminant(_171)<br/>StorageDead(_175)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = &amp;(((*_182) as Some).0: anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;(*_184)<br/></td></tr><tr><td align="left">_190 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as anchor_lang::Key&gt;::key(move _191)</td></tr></table>>];
    bb82__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_189 = &amp;_190<br/>StorageDead(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = &amp;_170<br/></td></tr><tr><td align="left">_193 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _194)</td></tr></table>>];
    bb83__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_192 = &amp;((*_193).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_188 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _189, move _192)</td></tr></table>>];
    bb84__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb85__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageLive(_195)<br/>_195 = ()<br/>_187 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _195)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageLive(_196)<br/>_196 = error::ErrorCode::InvalidSwap<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_589 = const _<br/>_207 = &amp;(*_589)<br/>_206 = &amp;(*_207)<br/>_205 = move _206 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_206)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;_196<br/>_214 = &amp;(*_215)<br/></td></tr><tr><td align="left">_213 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _214)</td></tr></table>>];
    bb87__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_212 = [move _213]<br/>StorageDead(_213)<br/>_211 = &amp;_212<br/>_210 = &amp;(*_211)<br/>_209 = move _210 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_204 = Arguments::&lt;'_&gt;::new_v1(move _205, move _209)</td></tr></table>>];
    bb88__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = format(move _204)</td></tr></table>>];
    bb89__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageDead(_207)<br/>_202 = move _203<br/>StorageDead(_203)<br/>_201 = &amp;_202<br/>_200 = &amp;(*_201)<br/></td></tr><tr><td align="left">_199 = &lt;String as Deref&gt;::deref(move _200)</td></tr></table>>];
    bb90__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_198 = &amp;(*_199)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_197 = solana_program::log::sol_log(move _198)</td></tr></table>>];
    bb91__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb92__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = const &quot;out_spot_market.mint mismatch&quot;<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_216 = solana_program::log::sol_log(move _217)</td></tr></table>>];
    bb93__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_218)<br/>StorageDead(_216)<br/>StorageLive(_219)<br/>_219 = _196<br/>_187 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _219)<br/>StorageDead(_219)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb95__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_220 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _220)</td></tr></table>>];
    bb96__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_186 as Continue).0: ())<br/>_185 = _224<br/>StorageDead(_224)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>_181 = const ()<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_223)<br/>_223 = _221<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _223)</td></tr></table>>];
    bb98__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_181 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_181)<br/>StorageLive(_225)<br/>_595 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_225 = &amp;mut ((*_595).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_226)<br/>_596 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_226 = &amp;mut ((*_596).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_229 = &amp;_78<br/></td></tr><tr><td align="left">_228 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _229)</td></tr></table>>];
    bb101__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_227 = ((*_228).51: u64)<br/>StorageDead(_228)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_597 = deref_copy (*_226)<br/>_680 = (((_597.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_236 = &amp;(*_680)<br/></td></tr><tr><td align="left">_235 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _236)</td></tr></table>>];
    bb102__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_234 = &amp;(*_235)<br/></td></tr><tr><td align="left">_233 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _234)</td></tr></table>>];
    bb103__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>_232 = ((*_233).2: u64)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = &amp;_78<br/></td></tr><tr><td align="left">_238 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _239)</td></tr></table>>];
    bb104__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>_237 = ((*_238).52: u64)<br/>_231 = Gt(move _232, move _237)<br/></td></tr><tr><td align="left">switchInt(move _231)</td></tr></table>>];
    bb105__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_598 = deref_copy (*_226)<br/>_681 = (((_598.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_247 = &amp;(*_681)<br/></td></tr><tr><td align="left">_246 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _247)</td></tr></table>>];
    bb106__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_245 = &amp;(*_246)<br/></td></tr><tr><td align="left">_244 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _245)</td></tr></table>>];
    bb107__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_245)<br/>_243 = ((*_244).2: u64)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = &amp;_78<br/></td></tr><tr><td align="left">_249 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _250)</td></tr></table>>];
    bb108__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>_248 = ((*_249).52: u64)<br/></td></tr><tr><td align="left">_242 = &lt;u64 as SafeMath&gt;::safe_sub(move _243, move _248)</td></tr></table>>];
    bb109__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb110__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_251 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _251)</td></tr></table>>];
    bb111__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageLive(_255)<br/>_255 = ((_241 as Continue).0: u64)<br/>_240 = _255<br/>StorageDead(_255)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_599 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_260 = &amp;((*_599).7: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_259 = &amp;(*_260)<br/>StorageLive(_261)<br/>_600 = deref_copy (*_226)<br/>_682 = (((_600.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_261 = &amp;(*_682)<br/>StorageLive(_262)<br/>_601 = deref_copy (*_225)<br/>_683 = (((_601.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_262 = &amp;(*_683)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_602 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_266 = &amp;((*_602).1: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_265 = &amp;(*_266)<br/></td></tr><tr><td align="left">_264 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _265)</td></tr></table>>];
    bb112__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_252)<br/>_252 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_254)<br/>_254 = _252<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _254)</td></tr></table>>];
    bb113__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_263 = &amp;(*_264)<br/>StorageDead(_265)<br/>StorageLive(_267)<br/>_267 = _240<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = &amp;_60<br/>_268 = &amp;(*_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;_78<br/></td></tr><tr><td align="left">_273 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _274)</td></tr></table>>];
    bb115__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_272 = &amp;(*_273)<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">_271 = SpotMarket::has_transfer_hook(move _272)</td></tr></table>>];
    bb116__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left">switchInt(move _271)</td></tr></table>>];
    bb117__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_272)<br/>StorageLive(_275)<br/>_275 = &amp;mut (*_15)<br/>_270 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _275)<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_272)<br/>_270 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/></td></tr><tr><td align="left">_258 = receive(move _259, move _261, move _262, move _263, move _267, move _268, move _270)</td></tr></table>>];
    bb120__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_263)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _258)</td></tr></table>>];
    bb121__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_276 = discriminant(_257)<br/></td></tr><tr><td align="left">switchInt(move _276)</td></tr></table>>];
    bb122__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_280)<br/>_280 = ((_257 as Continue).0: ())<br/>_256 = _280<br/>StorageDead(_280)<br/>_636 = discriminant(_257)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_603 = deref_copy (*_226)<br/>_684 = (((_603.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_284 = &amp;mut (*_684)<br/></td></tr><tr><td align="left">_283 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _284)</td></tr></table>>];
    bb123__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_277)<br/>_277 = move ((_257 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_279)<br/>_279 = move _277<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _279)</td></tr></table>>];
    bb124__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_277)<br/>_662 = discriminant(_257)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/></td></tr><tr><td align="left">_282 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _283)</td></tr></table>>];
    bb126__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>_285 = discriminant(_282)<br/></td></tr><tr><td align="left">switchInt(move _285)</td></tr></table>>];
    bb127__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_282 as Continue).0: ())<br/>_281 = _289<br/>StorageDead(_289)<br/>_638 = discriminant(_282)<br/>StorageDead(_282)<br/>StorageDead(_281)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_604 = deref_copy (*_225)<br/>_685 = (((_604.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_293 = &amp;mut (*_685)<br/></td></tr><tr><td align="left">_292 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _293)</td></tr></table>>];
    bb128__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_286)<br/>_286 = move ((_282 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_288)<br/>_288 = move _286<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _288)</td></tr></table>>];
    bb129__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_286)<br/>_660 = discriminant(_282)<br/>StorageDead(_282)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/></td></tr><tr><td align="left">_291 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _292)</td></tr></table>>];
    bb131__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_294 = discriminant(_291)<br/></td></tr><tr><td align="left">switchInt(move _294)</td></tr></table>>];
    bb132__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = ((_291 as Continue).0: ())<br/>_290 = _298<br/>StorageDead(_298)<br/>_640 = discriminant(_291)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = _227<br/>StorageLive(_303)<br/>_303 = _240<br/></td></tr><tr><td align="left">_301 = &lt;u64 as SafeMath&gt;::safe_sub(move _302, move _303)</td></tr></table>>];
    bb133__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = move ((_291 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_297)<br/>_297 = move _295<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _297)</td></tr></table>>];
    bb134__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_295)<br/>_658 = discriminant(_291)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_300 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _301)</td></tr></table>>];
    bb136__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>_304 = discriminant(_300)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb137__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_300 as Continue).0: u64)<br/>_299 = _308<br/>StorageDead(_308)<br/>_227 = move _299<br/>StorageDead(_299)<br/>StorageDead(_300)<br/>_230 = const ()<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>_305 = ((_300 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_307)<br/>_307 = _305<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _307)</td></tr></table>>];
    bb139__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_305)<br/>StorageDead(_299)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>_230 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_230)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;mut _78<br/></td></tr><tr><td align="left">_309 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _310)</td></tr></table>>];
    bb142__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>((*_309).52: u64) = const 0_u64<br/>StorageDead(_309)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>_312 = &amp;mut _78<br/></td></tr><tr><td align="left">_311 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _312)</td></tr></table>>];
    bb143__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>((*_311).51: u64) = const 0_u64<br/>StorageDead(_311)<br/>StorageLive(_313)<br/>_605 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_313 = &amp;mut ((*_605).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_314)<br/>_606 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_314 = &amp;mut ((*_606).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_315)<br/>_315 = const 0_u64<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_607 = deref_copy (*_314)<br/>_686 = (((_607.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_322 = &amp;(*_686)<br/></td></tr><tr><td align="left">_321 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _322)</td></tr></table>>];
    bb144__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_320 = &amp;(*_321)<br/></td></tr><tr><td align="left">_319 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _320)</td></tr></table>>];
    bb145__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>_318 = ((*_319).2: u64)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;_170<br/></td></tr><tr><td align="left">_324 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _325)</td></tr></table>>];
    bb146__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>_323 = ((*_324).52: u64)<br/>_317 = Gt(move _318, move _323)<br/></td></tr><tr><td align="left">switchInt(move _317)</td></tr></table>>];
    bb147__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_323)<br/>StorageDead(_321)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>_608 = deref_copy (*_314)<br/>_687 = (((_608.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_333 = &amp;(*_687)<br/></td></tr><tr><td align="left">_332 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _333)</td></tr></table>>];
    bb148__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">_331 = &amp;(*_332)<br/></td></tr><tr><td align="left">_330 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _331)</td></tr></table>>];
    bb149__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_331)<br/>_329 = ((*_330).2: u64)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>_336 = &amp;_170<br/></td></tr><tr><td align="left">_335 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _336)</td></tr></table>>];
    bb150__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>_334 = ((*_335).52: u64)<br/></td></tr><tr><td align="left">_328 = &lt;u64 as SafeMath&gt;::safe_sub(move _329, move _334)</td></tr></table>>];
    bb151__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">_327 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _328)</td></tr></table>>];
    bb152__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_337 = discriminant(_327)<br/></td></tr><tr><td align="left">switchInt(move _337)</td></tr></table>>];
    bb153__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_341)<br/>_341 = ((_327 as Continue).0: u64)<br/>_326 = _341<br/>StorageDead(_341)<br/>_315 = move _326<br/>StorageDead(_326)<br/>StorageDead(_335)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_327)<br/>StorageLive(_342)<br/>_343 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _343)</td></tr></table>>];
    bb154__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_338)<br/>_338 = ((_327 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_340)<br/>_340 = _338<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _340)</td></tr></table>>];
    bb155__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_338)<br/>StorageDead(_326)<br/>StorageDead(_335)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>_609 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_374 = &amp;((*_609).7: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_373 = &amp;(*_374)<br/>StorageLive(_375)<br/>_610 = deref_copy (*_314)<br/>_688 = (((_610.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_375 = &amp;(*_688)<br/>StorageLive(_376)<br/>_611 = deref_copy (*_313)<br/>_689 = (((_611.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_376 = &amp;(*_689)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>_612 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_380 = &amp;((*_612).1: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_379 = &amp;(*_380)<br/></td></tr><tr><td align="left">_378 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _379)</td></tr></table>>];
    bb157__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = move ((_51 as Some).0: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>_349 = &amp;_344<br/>_348 = &amp;(*_349)<br/>StorageLive(_350)<br/>_613 = deref_copy (*_314)<br/>_690 = (((_613.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_350 = &amp;(*_690)<br/>StorageLive(_351)<br/>_614 = deref_copy (*_313)<br/>_691 = (((_614.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_351 = &amp;(*_691)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>_615 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_355 = &amp;((*_615).1: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_354 = &amp;(*_355)<br/></td></tr><tr><td align="left">_353 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _354)</td></tr></table>>];
    bb158__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">_352 = &amp;(*_353)<br/>StorageDead(_354)<br/>StorageLive(_356)<br/>_356 = _315<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = &amp;_69<br/>_357 = &amp;(*_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>_363 = &amp;_170<br/></td></tr><tr><td align="left">_362 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _363)</td></tr></table>>];
    bb159__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_361 = &amp;(*_362)<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">_360 = SpotMarket::has_transfer_hook(move _361)</td></tr></table>>];
    bb160__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left">switchInt(move _360)</td></tr></table>>];
    bb161__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_361)<br/>StorageLive(_364)<br/>_364 = &amp;mut (*_15)<br/>_359 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _364)<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_361)<br/>_359 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/></td></tr><tr><td align="left">_347 = receive(move _348, move _350, move _351, move _352, move _356, move _357, move _359)</td></tr></table>>];
    bb164__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_357)<br/>StorageDead(_356)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/>StorageDead(_348)<br/></td></tr><tr><td align="left">_346 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _347)</td></tr></table>>];
    bb165__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>_365 = discriminant(_346)<br/></td></tr><tr><td align="left">switchInt(move _365)</td></tr></table>>];
    bb166__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_369)<br/>_369 = ((_346 as Continue).0: ())<br/>_345 = _369<br/>StorageDead(_369)<br/>_642 = discriminant(_346)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/>StorageDead(_346)<br/>StorageDead(_345)<br/>_342 = const ()<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_366)<br/>_366 = move ((_346 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_368)<br/>_368 = move _366<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _368)</td></tr></table>>];
    bb168__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_366)<br/>_656 = discriminant(_346)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/>StorageDead(_346)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">_377 = &amp;(*_378)<br/>StorageDead(_379)<br/>StorageLive(_381)<br/>_381 = _315<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_383 = &amp;_69<br/>_382 = &amp;(*_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>_388 = &amp;_170<br/></td></tr><tr><td align="left">_387 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _388)</td></tr></table>>];
    bb170__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">_386 = &amp;(*_387)<br/>StorageDead(_388)<br/></td></tr><tr><td align="left">_385 = SpotMarket::has_transfer_hook(move _386)</td></tr></table>>];
    bb171__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb172__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>StorageDead(_386)<br/>StorageLive(_389)<br/>_389 = &amp;mut (*_15)<br/>_384 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _389)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>StorageDead(_386)<br/>_384 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/></td></tr><tr><td align="left">_372 = receive(move _373, move _375, move _376, move _377, move _381, move _382, move _384)</td></tr></table>>];
    bb175__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_382)<br/>StorageDead(_381)<br/>StorageDead(_377)<br/>StorageDead(_376)<br/>StorageDead(_375)<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">_371 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _372)</td></tr></table>>];
    bb176__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>_390 = discriminant(_371)<br/></td></tr><tr><td align="left">switchInt(move _390)</td></tr></table>>];
    bb177__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_394)<br/>_394 = ((_371 as Continue).0: ())<br/>_370 = _394<br/>StorageDead(_394)<br/>_644 = discriminant(_371)<br/>StorageDead(_383)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_374)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>_342 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_391)<br/>_391 = move ((_371 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_393)<br/>_393 = move _391<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _393)</td></tr></table>>];
    bb179__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_391)<br/>_654 = discriminant(_371)<br/>StorageDead(_383)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_374)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>_616 = deref_copy (*_313)<br/>_692 = (((_616.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_398 = &amp;mut (*_692)<br/></td></tr><tr><td align="left">_397 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _398)</td></tr></table>>];
    bb181__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/></td></tr><tr><td align="left">_396 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _397)</td></tr></table>>];
    bb182__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>_399 = discriminant(_396)<br/></td></tr><tr><td align="left">switchInt(move _399)</td></tr></table>>];
    bb183__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_403)<br/>_403 = ((_396 as Continue).0: ())<br/>_395 = _403<br/>StorageDead(_403)<br/>_646 = discriminant(_396)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>_316 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_400)<br/>_400 = move ((_396 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_402)<br/>_402 = move _400<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _402)</td></tr></table>>];
    bb185__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>StorageDead(_400)<br/>_652 = discriminant(_396)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_323)<br/>StorageDead(_321)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>_316 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = _315<br/>_407 = Ne(move _408, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _407)</td></tr></table>>];
    bb188__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageLive(_409)<br/>_409 = ()<br/>_406 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _409)<br/>StorageDead(_409)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageLive(_410)<br/>_410 = error::ErrorCode::InvalidSwap<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>_588 = const _<br/>_421 = &amp;(*_588)<br/>_420 = &amp;(*_421)<br/>_419 = move _420 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_420)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>_429 = &amp;_410<br/>_428 = &amp;(*_429)<br/></td></tr><tr><td align="left">_427 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _428)</td></tr></table>>];
    bb190__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>_426 = [move _427]<br/>StorageDead(_427)<br/>_425 = &amp;_426<br/>_424 = &amp;(*_425)<br/>_423 = move _424 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_424)<br/></td></tr><tr><td align="left">_418 = Arguments::&lt;'_&gt;::new_v1(move _419, move _423)</td></tr></table>>];
    bb191__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>StorageDead(_419)<br/></td></tr><tr><td align="left">_417 = format(move _418)</td></tr></table>>];
    bb192__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_421)<br/>_416 = move _417<br/>StorageDead(_417)<br/>_415 = &amp;_416<br/>_414 = &amp;(*_415)<br/></td></tr><tr><td align="left">_413 = &lt;String as Deref&gt;::deref(move _414)</td></tr></table>>];
    bb193__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">_412 = &amp;(*_413)<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">_411 = solana_program::log::sol_log(move _412)</td></tr></table>>];
    bb194__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/></td></tr><tr><td align="left">drop(_416)</td></tr></table>>];
    bb195__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_413)<br/>StorageDead(_411)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>_432 = const &quot;amount_out must be greater than 0&quot;<br/>_431 = &amp;(*_432)<br/></td></tr><tr><td align="left">_430 = solana_program::log::sol_log(move _431)</td></tr></table>>];
    bb196__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_432)<br/>StorageDead(_430)<br/>StorageLive(_433)<br/>_433 = _410<br/>_406 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _433)<br/>StorageDead(_433)<br/>StorageDead(_410)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/></td></tr><tr><td align="left">_405 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _406)</td></tr></table>>];
    bb198__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>_434 = discriminant(_405)<br/></td></tr><tr><td align="left">switchInt(move _434)</td></tr></table>>];
    bb199__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_438)<br/>_438 = ((_405 as Continue).0: ())<br/>_404 = _438<br/>StorageDead(_438)<br/>StorageDead(_405)<br/>StorageDead(_404)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = &amp;mut _170<br/></td></tr><tr><td align="left">_439 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _440)</td></tr></table>>];
    bb200__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_435)<br/>_435 = ((_405 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_437)<br/>_437 = _435<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _437)</td></tr></table>>];
    bb201__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_435)<br/>StorageDead(_405)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>((*_439).52: u64) = const 0_u64<br/>StorageDead(_439)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>_442 = &amp;mut _170<br/></td></tr><tr><td align="left">_441 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _442)</td></tr></table>>];
    bb203__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>((*_441).51: u64) = const 0_u64<br/>StorageDead(_441)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>_449 = &amp;_170<br/></td></tr><tr><td align="left">_448 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _449)</td></tr></table>>];
    bb204__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>_447 = ((*_448).52: u64)<br/>_446 = Eq(move _447, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _446)</td></tr></table>>];
    bb205__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_447)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>_453 = &amp;_170<br/></td></tr><tr><td align="left">_452 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _453)</td></tr></table>>];
    bb206__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>_451 = ((*_452).51: u64)<br/>_450 = Eq(move _451, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _450)</td></tr></table>>];
    bb207__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/>StorageDead(_451)<br/>StorageLive(_454)<br/>_454 = ()<br/>_445 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _454)<br/>StorageDead(_454)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageLive(_455)<br/>_455 = error::ErrorCode::InvalidSwap<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>_587 = const _<br/>_466 = &amp;(*_587)<br/>_465 = &amp;(*_466)<br/>_464 = move _465 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_465)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>_474 = &amp;_455<br/>_473 = &amp;(*_474)<br/></td></tr><tr><td align="left">_472 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _473)</td></tr></table>>];
    bb211__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>_471 = [move _472]<br/>StorageDead(_472)<br/>_470 = &amp;_471<br/>_469 = &amp;(*_470)<br/>_468 = move _469 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_469)<br/></td></tr><tr><td align="left">_463 = Arguments::&lt;'_&gt;::new_v1(move _464, move _468)</td></tr></table>>];
    bb212__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>StorageDead(_464)<br/></td></tr><tr><td align="left">_462 = format(move _463)</td></tr></table>>];
    bb213__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageDead(_474)<br/>StorageDead(_471)<br/>StorageDead(_470)<br/>StorageDead(_466)<br/>_461 = move _462<br/>StorageDead(_462)<br/>_460 = &amp;_461<br/>_459 = &amp;(*_460)<br/></td></tr><tr><td align="left">_458 = &lt;String as Deref&gt;::deref(move _459)</td></tr></table>>];
    bb214__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_457 = &amp;(*_458)<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">_456 = solana_program::log::sol_log(move _457)</td></tr></table>>];
    bb215__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/></td></tr><tr><td align="left">drop(_461)</td></tr></table>>];
    bb216__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_456)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>_477 = const &quot;end_swap ended in invalid state&quot;<br/>_476 = &amp;(*_477)<br/></td></tr><tr><td align="left">_475 = solana_program::log::sol_log(move _476)</td></tr></table>>];
    bb217__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>StorageDead(_477)<br/>StorageDead(_475)<br/>StorageLive(_478)<br/>_478 = _455<br/>_445 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _478)<br/>StorageDead(_478)<br/>StorageDead(_455)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">_444 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _445)</td></tr></table>>];
    bb219__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>_479 = discriminant(_444)<br/></td></tr><tr><td align="left">switchInt(move _479)</td></tr></table>>];
    bb220__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_483)<br/>_483 = ((_444 as Continue).0: ())<br/>_443 = _483<br/>StorageDead(_483)<br/>StorageDead(_444)<br/>StorageDead(_443)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>_490 = &amp;_78<br/></td></tr><tr><td align="left">_489 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _490)</td></tr></table>>];
    bb221__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_480)<br/>_480 = ((_444 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_482)<br/>_482 = _480<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _482)</td></tr></table>>];
    bb222__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>StorageDead(_480)<br/>StorageDead(_444)<br/>StorageDead(_443)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>_488 = ((*_489).52: u64)<br/>_487 = Eq(move _488, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _487)</td></tr></table>>];
    bb224__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageDead(_488)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>_494 = &amp;_78<br/></td></tr><tr><td align="left">_493 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _494)</td></tr></table>>];
    bb225__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>_492 = ((*_493).51: u64)<br/>_491 = Eq(move _492, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _491)</td></tr></table>>];
    bb226__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_492)<br/>StorageLive(_495)<br/>_495 = ()<br/>_486 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _495)<br/>StorageDead(_495)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_492)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_496)<br/>_496 = error::ErrorCode::InvalidSwap<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>_586 = const _<br/>_507 = &amp;(*_586)<br/>_506 = &amp;(*_507)<br/>_505 = move _506 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_506)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>_515 = &amp;_496<br/>_514 = &amp;(*_515)<br/></td></tr><tr><td align="left">_513 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _514)</td></tr></table>>];
    bb230__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_514)<br/>_512 = [move _513]<br/>StorageDead(_513)<br/>_511 = &amp;_512<br/>_510 = &amp;(*_511)<br/>_509 = move _510 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_510)<br/></td></tr><tr><td align="left">_504 = Arguments::&lt;'_&gt;::new_v1(move _505, move _509)</td></tr></table>>];
    bb231__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_503 = format(move _504)</td></tr></table>>];
    bb232__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_515)<br/>StorageDead(_512)<br/>StorageDead(_511)<br/>StorageDead(_507)<br/>_502 = move _503<br/>StorageDead(_503)<br/>_501 = &amp;_502<br/>_500 = &amp;(*_501)<br/></td></tr><tr><td align="left">_499 = &lt;String as Deref&gt;::deref(move _500)</td></tr></table>>];
    bb233__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">_498 = &amp;(*_499)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">_497 = solana_program::log::sol_log(move _498)</td></tr></table>>];
    bb234__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_498)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb235__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_501)<br/>StorageDead(_499)<br/>StorageDead(_497)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>_518 = const &quot;end_swap ended in invalid state&quot;<br/>_517 = &amp;(*_518)<br/></td></tr><tr><td align="left">_516 = solana_program::log::sol_log(move _517)</td></tr></table>>];
    bb236__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_518)<br/>StorageDead(_516)<br/>StorageLive(_519)<br/>_519 = _496<br/>_486 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _519)<br/>StorageDead(_519)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>StorageDead(_487)<br/></td></tr><tr><td align="left">_485 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _486)</td></tr></table>>];
    bb238__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>_520 = discriminant(_485)<br/></td></tr><tr><td align="left">switchInt(move _520)</td></tr></table>>];
    bb239__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageLive(_524)<br/>_524 = ((_485 as Continue).0: ())<br/>_484 = _524<br/>StorageDead(_524)<br/>StorageDead(_485)<br/>StorageDead(_484)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>_529 = &amp;mut _21<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>_535 = &amp;_170<br/></td></tr><tr><td align="left">_534 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _535)</td></tr></table>>];
    bb240__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageLive(_521)<br/>_521 = ((_485 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_523)<br/>_523 = _521<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _523)</td></tr></table>>];
    bb241__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_485)<br/>StorageDead(_484)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">_533 = &amp;(*_534)<br/>StorageDead(_535)<br/></td></tr><tr><td align="left">_532 = SpotMarket::oracle_id(move _533)</td></tr></table>>];
    bb243__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>_531 = &amp;_532<br/>_530 = &amp;(*_531)<br/></td></tr><tr><td align="left">_528 = OracleMap::&lt;'_&gt;::get_price_data(move _529, move _530)</td></tr></table>>];
    bb244__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>StorageDead(_529)<br/></td></tr><tr><td align="left">_527 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _528)</td></tr></table>>];
    bb245__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>_536 = discriminant(_527)<br/></td></tr><tr><td align="left">switchInt(move _536)</td></tr></table>>];
    bb246__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_540)<br/>_540 = ((_527 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_526 = _540<br/>StorageDead(_540)<br/>_525 = ((*_526).0: i64)<br/>StorageDead(_534)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>_617 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_544 = &amp;((*_617).6: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_543 = anchor_lang::prelude::AccountLoader::&lt;'_, IfRebalanceConfig&gt;::load_mut(move _544)</td></tr></table>>];
    bb247__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageLive(_537)<br/>_537 = ((_527 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_539)<br/>_539 = _537<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _539)</td></tr></table>>];
    bb248__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageDead(_537)<br/>StorageDead(_534)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_544)<br/></td></tr><tr><td align="left">_542 = &lt;std::result::Result&lt;RefMut&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _543)</td></tr></table>>];
    bb250__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>_545 = discriminant(_542)<br/></td></tr><tr><td align="left">switchInt(move _545)</td></tr></table>>];
    bb251__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageLive(_549)<br/>_549 = move ((_542 as Continue).0: std::cell::RefMut&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/>_541 = move _549<br/>StorageDead(_549)<br/>_648 = discriminant(_542)<br/>StorageDead(_542)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>_556 = &amp;mut _541<br/>_555 = &amp;mut (*_556)<br/></td></tr><tr><td align="left">_554 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _555)</td></tr></table>>];
    bb252__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageLive(_546)<br/>_546 = move ((_542 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_548)<br/>_548 = move _546<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _548)</td></tr></table>>];
    bb253__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>StorageDead(_546)<br/>_650 = discriminant(_542)<br/>StorageDead(_542)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb254__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">_553 = &amp;mut (*_554)<br/>StorageDead(_555)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>_618 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_619 = deref_copy ((*_618).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_693 = (((_619.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_561 = &amp;(*_693)<br/></td></tr><tr><td align="left">_560 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _561)</td></tr></table>>];
    bb255__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">_559 = &amp;(*_560)<br/></td></tr><tr><td align="left">_558 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _559)</td></tr></table>>];
    bb256__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>StorageDead(_559)<br/>_557 = ((*_558).2: u64)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>_620 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_621 = deref_copy ((*_620).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_694 = (((_621.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_566 = &amp;(*_694)<br/></td></tr><tr><td align="left">_565 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _566)</td></tr></table>>];
    bb257__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">_564 = &amp;(*_565)<br/></td></tr><tr><td align="left">_563 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _564)</td></tr></table>>];
    bb258__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/>StorageDead(_564)<br/>_562 = ((*_563).2: u64)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>_570 = &amp;mut _78<br/>_569 = &amp;mut (*_570)<br/></td></tr><tr><td align="left">_568 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _569)</td></tr></table>>];
    bb259__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">_567 = &amp;mut (*_568)<br/>StorageDead(_569)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = &amp;mut _170<br/>_573 = &amp;mut (*_574)<br/></td></tr><tr><td align="left">_572 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _573)</td></tr></table>>];
    bb260__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">_571 = &amp;mut (*_572)<br/>StorageDead(_573)<br/>StorageLive(_575)<br/>_575 = _227<br/>StorageLive(_576)<br/>_576 = _315<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>_578 = _525<br/></td></tr><tr><td align="left">_577 = core::num::&lt;impl i64&gt;::unsigned_abs(move _578)</td></tr></table>>];
    bb261__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageLive(_579)<br/>_579 = _14<br/></td></tr><tr><td align="left">_552 = handle_if_end_swap(move _553, move _557, move _562, move _567, move _571, move _575, move _576, move _577, move _579)</td></tr></table>>];
    bb262__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_579)<br/>StorageDead(_577)<br/>StorageDead(_576)<br/>StorageDead(_575)<br/>StorageDead(_571)<br/>StorageDead(_567)<br/>StorageDead(_562)<br/>StorageDead(_557)<br/>StorageDead(_553)<br/></td></tr><tr><td align="left">_551 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _552)</td></tr></table>>];
    bb263__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/>_580 = discriminant(_551)<br/></td></tr><tr><td align="left">switchInt(move _580)</td></tr></table>>];
    bb264__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_584)<br/>_584 = ((_551 as Continue).0: ())<br/>_550 = _584<br/>StorageDead(_584)<br/>StorageDead(_574)<br/>StorageDead(_572)<br/>StorageDead(_570)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_558)<br/>StorageDead(_556)<br/>StorageDead(_554)<br/>StorageDead(_551)<br/>StorageDead(_550)<br/>StorageLive(_585)<br/>_585 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _585)<br/>StorageDead(_585)<br/></td></tr><tr><td align="left">drop(_541)</td></tr></table>>];
    bb265__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageLive(_581)<br/>_581 = ((_551 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_583)<br/>_583 = _581<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _583)</td></tr></table>>];
    bb266__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>StorageDead(_581)<br/>StorageDead(_574)<br/>StorageDead(_572)<br/>StorageDead(_570)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_558)<br/>StorageDead(_556)<br/>StorageDead(_554)<br/>StorageDead(_551)<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">drop(_541)</td></tr></table>>];
    bb267__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_525)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_313)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb268__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb269__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_69)<br/>StorageDead(_60)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb270__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb271__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb272__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb281__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb283__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb285__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb286__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb287__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb288__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb289__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb290__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb291__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb292__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left">return</td></tr></table>>];
    bb295__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left">drop(_541)</td></tr></table>>];
    bb296__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb297__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left">drop(_461)</td></tr></table>>];
    bb298__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left">drop(_416)</td></tr></table>>];
    bb299__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb300__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb301__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">301 (cleanup)</td></tr><tr><td align="left">drop(_147)</td></tr></table>>];
    bb302__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">302 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb303__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb304__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb305__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">305 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb306__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">306 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb307__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">307 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb308__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">308 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb309__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">309 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb310__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">310 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb311__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">311 (cleanup)</td></tr><tr><td align="left" balign="left">_666 = discriminant(_542)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">312 (cleanup)</td></tr><tr><td align="left" balign="left">_667 = discriminant(_396)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">313 (cleanup)</td></tr><tr><td align="left" balign="left">_668 = discriminant(_371)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">314 (cleanup)</td></tr><tr><td align="left" balign="left">_669 = discriminant(_346)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">315 (cleanup)</td></tr><tr><td align="left" balign="left">_670 = discriminant(_291)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">316 (cleanup)</td></tr><tr><td align="left" balign="left">_671 = discriminant(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">317 (cleanup)</td></tr><tr><td align="left" balign="left">_672 = discriminant(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">318 (cleanup)</td></tr><tr><td align="left" balign="left">_673 = discriminant(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb319__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">319 (cleanup)</td></tr><tr><td align="left" balign="left">_674 = discriminant(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb320__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">320 (cleanup)</td></tr><tr><td align="left" balign="left">_676 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb321__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">321 (cleanup)</td></tr><tr><td align="left" balign="left">_677 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb322__0_1214 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">(*_678) = [move _39, move _40]<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>_34 = move _38<br/>_33 = move _34 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _33)</td></tr></table>>];
    bb0__0_1214 -> bb1__0_1214 [label="return"];
    bb1__0_1214 -> bb2__0_1214 [label="return"];
    bb1__0_1214 -> bb310__0_1214 [label="unwind"];
    bb2__0_1214 -> bb3__0_1214 [label="0"];
    bb2__0_1214 -> bb5__0_1214 [label="1"];
    bb2__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb3__0_1214 -> bb7__0_1214 [label="return"];
    bb5__0_1214 -> bb6__0_1214 [label="return"];
    bb5__0_1214 -> bb321__0_1214 [label="unwind"];
    bb6__0_1214 -> bb293__0_1214 [label=""];
    bb7__0_1214 -> bb8__0_1214 [label="return"];
    bb8__0_1214 -> bb9__0_1214 [label="return"];
    bb9__0_1214 -> bb10__0_1214 [label="return"];
    bb9__0_1214 -> bb309__0_1214 [label="unwind"];
    bb10__0_1214 -> bb322__0_1214 [label="success"];
    bb11__0_1214 -> bb12__0_1214 [label="return"];
    bb11__0_1214 -> bb309__0_1214 [label="unwind"];
    bb12__0_1214 -> bb13__0_1214 [label="return"];
    bb12__0_1214 -> bb308__0_1214 [label="unwind"];
    bb13__0_1214 -> bb14__0_1214 [label="return"];
    bb13__0_1214 -> bb308__0_1214 [label="unwind"];
    bb14__0_1214 -> bb15__0_1214 [label="return"];
    bb14__0_1214 -> bb308__0_1214 [label="unwind"];
    bb15__0_1214 -> bb16__0_1214 [label="0"];
    bb15__0_1214 -> bb17__0_1214 [label="1"];
    bb15__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb16__0_1214 -> bb19__0_1214 [label="return"];
    bb16__0_1214 -> bb304__0_1214 [label="unwind"];
    bb17__0_1214 -> bb18__0_1214 [label="return"];
    bb17__0_1214 -> bb320__0_1214 [label="unwind"];
    bb18__0_1214 -> bb290__0_1214 [label="return"];
    bb18__0_1214 -> bb309__0_1214 [label="unwind"];
    bb19__0_1214 -> bb20__0_1214 [label="return"];
    bb19__0_1214 -> bb305__0_1214 [label="unwind"];
    bb20__0_1214 -> bb21__0_1214 [label="return"];
    bb20__0_1214 -> bb305__0_1214 [label="unwind"];
    bb21__0_1214 -> bb22__0_1214 [label="return"];
    bb21__0_1214 -> bb305__0_1214 [label="unwind"];
    bb22__0_1214 -> bb23__0_1214 [label="0"];
    bb22__0_1214 -> bb24__0_1214 [label="1"];
    bb22__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb23__0_1214 -> bb26__0_1214 [label="return"];
    bb23__0_1214 -> bb305__0_1214 [label="unwind"];
    bb24__0_1214 -> bb25__0_1214 [label="return"];
    bb24__0_1214 -> bb305__0_1214 [label="unwind"];
    bb25__0_1214 -> bb286__0_1214 [label=""];
    bb26__0_1214 -> bb27__0_1214 [label="return"];
    bb26__0_1214 -> bb305__0_1214 [label="unwind"];
    bb27__0_1214 -> bb28__0_1214 [label="0"];
    bb27__0_1214 -> bb29__0_1214 [label="1"];
    bb27__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb28__0_1214 -> bb31__0_1214 [label="return"];
    bb28__0_1214 -> bb305__0_1214 [label="unwind"];
    bb29__0_1214 -> bb30__0_1214 [label="return"];
    bb29__0_1214 -> bb305__0_1214 [label="unwind"];
    bb30__0_1214 -> bb285__0_1214 [label=""];
    bb31__0_1214 -> bb32__0_1214 [label="return"];
    bb31__0_1214 -> bb305__0_1214 [label="unwind"];
    bb32__0_1214 -> bb33__0_1214 [label="0"];
    bb32__0_1214 -> bb34__0_1214 [label="1"];
    bb32__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb33__0_1214 -> bb36__0_1214 [label="return"];
    bb33__0_1214 -> bb305__0_1214 [label="unwind"];
    bb34__0_1214 -> bb35__0_1214 [label="return"];
    bb34__0_1214 -> bb305__0_1214 [label="unwind"];
    bb35__0_1214 -> bb284__0_1214 [label=""];
    bb36__0_1214 -> bb37__0_1214 [label="return"];
    bb36__0_1214 -> bb305__0_1214 [label="unwind"];
    bb37__0_1214 -> bb38__0_1214 [label="0"];
    bb37__0_1214 -> bb39__0_1214 [label="1"];
    bb37__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb38__0_1214 -> bb41__0_1214 [label="1"];
    bb38__0_1214 -> bb59__0_1214 [label="otherwise"];
    bb39__0_1214 -> bb40__0_1214 [label="return"];
    bb39__0_1214 -> bb319__0_1214 [label="unwind"];
    bb40__0_1214 -> bb283__0_1214 [label=""];
    bb41__0_1214 -> bb42__0_1214 [label="return"];
    bb41__0_1214 -> bb303__0_1214 [label="unwind"];
    bb42__0_1214 -> bb43__0_1214 [label="return"];
    bb42__0_1214 -> bb303__0_1214 [label="unwind"];
    bb43__0_1214 -> bb44__0_1214 [label="return"];
    bb43__0_1214 -> bb303__0_1214 [label="unwind"];
    bb44__0_1214 -> bb46__0_1214 [label="0"];
    bb44__0_1214 -> bb45__0_1214 [label="otherwise"];
    bb45__0_1214 -> bb54__0_1214 [label=""];
    bb46__0_1214 -> bb47__0_1214 [label="return"];
    bb46__0_1214 -> bb303__0_1214 [label="unwind"];
    bb47__0_1214 -> bb48__0_1214 [label="return"];
    bb47__0_1214 -> bb303__0_1214 [label="unwind"];
    bb48__0_1214 -> bb49__0_1214 [label="return"];
    bb48__0_1214 -> bb303__0_1214 [label="unwind"];
    bb49__0_1214 -> bb50__0_1214 [label="return"];
    bb49__0_1214 -> bb302__0_1214 [label="unwind"];
    bb50__0_1214 -> bb51__0_1214 [label="return"];
    bb50__0_1214 -> bb302__0_1214 [label="unwind"];
    bb51__0_1214 -> bb52__0_1214 [label="return"];
    bb51__0_1214 -> bb303__0_1214 [label="unwind"];
    bb52__0_1214 -> bb53__0_1214 [label="return"];
    bb52__0_1214 -> bb303__0_1214 [label="unwind"];
    bb53__0_1214 -> bb54__0_1214 [label=""];
    bb54__0_1214 -> bb55__0_1214 [label="return"];
    bb54__0_1214 -> bb303__0_1214 [label="unwind"];
    bb55__0_1214 -> bb56__0_1214 [label="0"];
    bb55__0_1214 -> bb57__0_1214 [label="1"];
    bb55__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb56__0_1214 -> bb60__0_1214 [label=""];
    bb57__0_1214 -> bb58__0_1214 [label="return"];
    bb57__0_1214 -> bb303__0_1214 [label="unwind"];
    bb58__0_1214 -> bb282__0_1214 [label=""];
    bb59__0_1214 -> bb60__0_1214 [label=""];
    bb60__0_1214 -> bb61__0_1214 [label="return"];
    bb60__0_1214 -> bb303__0_1214 [label="unwind"];
    bb61__0_1214 -> bb63__0_1214 [label="0"];
    bb61__0_1214 -> bb62__0_1214 [label="otherwise"];
    bb62__0_1214 -> bb71__0_1214 [label=""];
    bb63__0_1214 -> bb64__0_1214 [label="return"];
    bb63__0_1214 -> bb303__0_1214 [label="unwind"];
    bb64__0_1214 -> bb65__0_1214 [label="return"];
    bb64__0_1214 -> bb303__0_1214 [label="unwind"];
    bb65__0_1214 -> bb66__0_1214 [label="return"];
    bb65__0_1214 -> bb303__0_1214 [label="unwind"];
    bb66__0_1214 -> bb67__0_1214 [label="return"];
    bb66__0_1214 -> bb301__0_1214 [label="unwind"];
    bb67__0_1214 -> bb68__0_1214 [label="return"];
    bb67__0_1214 -> bb301__0_1214 [label="unwind"];
    bb68__0_1214 -> bb69__0_1214 [label="return"];
    bb68__0_1214 -> bb303__0_1214 [label="unwind"];
    bb69__0_1214 -> bb70__0_1214 [label="return"];
    bb69__0_1214 -> bb303__0_1214 [label="unwind"];
    bb70__0_1214 -> bb71__0_1214 [label=""];
    bb71__0_1214 -> bb72__0_1214 [label="return"];
    bb71__0_1214 -> bb303__0_1214 [label="unwind"];
    bb72__0_1214 -> bb73__0_1214 [label="0"];
    bb72__0_1214 -> bb74__0_1214 [label="1"];
    bb72__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb73__0_1214 -> bb76__0_1214 [label="return"];
    bb73__0_1214 -> bb303__0_1214 [label="unwind"];
    bb74__0_1214 -> bb75__0_1214 [label="return"];
    bb74__0_1214 -> bb303__0_1214 [label="unwind"];
    bb75__0_1214 -> bb282__0_1214 [label=""];
    bb76__0_1214 -> bb77__0_1214 [label="return"];
    bb76__0_1214 -> bb303__0_1214 [label="unwind"];
    bb77__0_1214 -> bb78__0_1214 [label="0"];
    bb77__0_1214 -> bb79__0_1214 [label="1"];
    bb77__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb78__0_1214 -> bb81__0_1214 [label="1"];
    bb78__0_1214 -> bb99__0_1214 [label="otherwise"];
    bb79__0_1214 -> bb80__0_1214 [label="return"];
    bb79__0_1214 -> bb318__0_1214 [label="unwind"];
    bb80__0_1214 -> bb281__0_1214 [label=""];
    bb81__0_1214 -> bb82__0_1214 [label="return"];
    bb81__0_1214 -> bb300__0_1214 [label="unwind"];
    bb82__0_1214 -> bb83__0_1214 [label="return"];
    bb82__0_1214 -> bb300__0_1214 [label="unwind"];
    bb83__0_1214 -> bb84__0_1214 [label="return"];
    bb83__0_1214 -> bb300__0_1214 [label="unwind"];
    bb84__0_1214 -> bb86__0_1214 [label="0"];
    bb84__0_1214 -> bb85__0_1214 [label="otherwise"];
    bb85__0_1214 -> bb94__0_1214 [label=""];
    bb86__0_1214 -> bb87__0_1214 [label="return"];
    bb86__0_1214 -> bb300__0_1214 [label="unwind"];
    bb87__0_1214 -> bb88__0_1214 [label="return"];
    bb87__0_1214 -> bb300__0_1214 [label="unwind"];
    bb88__0_1214 -> bb89__0_1214 [label="return"];
    bb88__0_1214 -> bb300__0_1214 [label="unwind"];
    bb89__0_1214 -> bb90__0_1214 [label="return"];
    bb89__0_1214 -> bb299__0_1214 [label="unwind"];
    bb90__0_1214 -> bb91__0_1214 [label="return"];
    bb90__0_1214 -> bb299__0_1214 [label="unwind"];
    bb91__0_1214 -> bb92__0_1214 [label="return"];
    bb91__0_1214 -> bb300__0_1214 [label="unwind"];
    bb92__0_1214 -> bb93__0_1214 [label="return"];
    bb92__0_1214 -> bb300__0_1214 [label="unwind"];
    bb93__0_1214 -> bb94__0_1214 [label=""];
    bb94__0_1214 -> bb95__0_1214 [label="return"];
    bb94__0_1214 -> bb300__0_1214 [label="unwind"];
    bb95__0_1214 -> bb96__0_1214 [label="0"];
    bb95__0_1214 -> bb97__0_1214 [label="1"];
    bb95__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb96__0_1214 -> bb100__0_1214 [label=""];
    bb97__0_1214 -> bb98__0_1214 [label="return"];
    bb97__0_1214 -> bb300__0_1214 [label="unwind"];
    bb98__0_1214 -> bb280__0_1214 [label=""];
    bb99__0_1214 -> bb100__0_1214 [label=""];
    bb100__0_1214 -> bb101__0_1214 [label="return"];
    bb100__0_1214 -> bb300__0_1214 [label="unwind"];
    bb101__0_1214 -> bb102__0_1214 [label="return"];
    bb101__0_1214 -> bb300__0_1214 [label="unwind"];
    bb102__0_1214 -> bb103__0_1214 [label="return"];
    bb102__0_1214 -> bb300__0_1214 [label="unwind"];
    bb103__0_1214 -> bb104__0_1214 [label="return"];
    bb103__0_1214 -> bb300__0_1214 [label="unwind"];
    bb104__0_1214 -> bb140__0_1214 [label="0"];
    bb104__0_1214 -> bb105__0_1214 [label="otherwise"];
    bb105__0_1214 -> bb106__0_1214 [label="return"];
    bb105__0_1214 -> bb300__0_1214 [label="unwind"];
    bb106__0_1214 -> bb107__0_1214 [label="return"];
    bb106__0_1214 -> bb300__0_1214 [label="unwind"];
    bb107__0_1214 -> bb108__0_1214 [label="return"];
    bb107__0_1214 -> bb300__0_1214 [label="unwind"];
    bb108__0_1214 -> bb109__0_1214 [label="return"];
    bb108__0_1214 -> bb300__0_1214 [label="unwind"];
    bb109__0_1214 -> bb110__0_1214 [label="return"];
    bb109__0_1214 -> bb300__0_1214 [label="unwind"];
    bb110__0_1214 -> bb111__0_1214 [label="0"];
    bb110__0_1214 -> bb112__0_1214 [label="1"];
    bb110__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb111__0_1214 -> bb114__0_1214 [label="return"];
    bb111__0_1214 -> bb300__0_1214 [label="unwind"];
    bb112__0_1214 -> bb113__0_1214 [label="return"];
    bb112__0_1214 -> bb300__0_1214 [label="unwind"];
    bb113__0_1214 -> bb278__0_1214 [label=""];
    bb114__0_1214 -> bb115__0_1214 [label="return"];
    bb114__0_1214 -> bb300__0_1214 [label="unwind"];
    bb115__0_1214 -> bb116__0_1214 [label="return"];
    bb115__0_1214 -> bb300__0_1214 [label="unwind"];
    bb116__0_1214 -> bb118__0_1214 [label="0"];
    bb116__0_1214 -> bb117__0_1214 [label="otherwise"];
    bb117__0_1214 -> bb119__0_1214 [label=""];
    bb118__0_1214 -> bb119__0_1214 [label=""];
    bb119__0_1214 -> bb120__0_1214 [label="return"];
    bb119__0_1214 -> bb300__0_1214 [label="unwind"];
    bb120__0_1214 -> bb121__0_1214 [label="return"];
    bb120__0_1214 -> bb300__0_1214 [label="unwind"];
    bb121__0_1214 -> bb122__0_1214 [label="0"];
    bb121__0_1214 -> bb123__0_1214 [label="1"];
    bb121__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb122__0_1214 -> bb125__0_1214 [label="return"];
    bb122__0_1214 -> bb300__0_1214 [label="unwind"];
    bb123__0_1214 -> bb124__0_1214 [label="return"];
    bb123__0_1214 -> bb317__0_1214 [label="unwind"];
    bb124__0_1214 -> bb278__0_1214 [label=""];
    bb125__0_1214 -> bb126__0_1214 [label="return"];
    bb125__0_1214 -> bb300__0_1214 [label="unwind"];
    bb126__0_1214 -> bb127__0_1214 [label="0"];
    bb126__0_1214 -> bb128__0_1214 [label="1"];
    bb126__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb127__0_1214 -> bb130__0_1214 [label="return"];
    bb127__0_1214 -> bb300__0_1214 [label="unwind"];
    bb128__0_1214 -> bb129__0_1214 [label="return"];
    bb128__0_1214 -> bb316__0_1214 [label="unwind"];
    bb129__0_1214 -> bb278__0_1214 [label=""];
    bb130__0_1214 -> bb131__0_1214 [label="return"];
    bb130__0_1214 -> bb300__0_1214 [label="unwind"];
    bb131__0_1214 -> bb132__0_1214 [label="0"];
    bb131__0_1214 -> bb133__0_1214 [label="1"];
    bb131__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb132__0_1214 -> bb135__0_1214 [label="return"];
    bb132__0_1214 -> bb300__0_1214 [label="unwind"];
    bb133__0_1214 -> bb134__0_1214 [label="return"];
    bb133__0_1214 -> bb315__0_1214 [label="unwind"];
    bb134__0_1214 -> bb278__0_1214 [label=""];
    bb135__0_1214 -> bb136__0_1214 [label="return"];
    bb135__0_1214 -> bb300__0_1214 [label="unwind"];
    bb136__0_1214 -> bb137__0_1214 [label="0"];
    bb136__0_1214 -> bb138__0_1214 [label="1"];
    bb136__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb137__0_1214 -> bb141__0_1214 [label=""];
    bb138__0_1214 -> bb139__0_1214 [label="return"];
    bb138__0_1214 -> bb300__0_1214 [label="unwind"];
    bb139__0_1214 -> bb278__0_1214 [label=""];
    bb140__0_1214 -> bb141__0_1214 [label=""];
    bb141__0_1214 -> bb142__0_1214 [label="return"];
    bb141__0_1214 -> bb300__0_1214 [label="unwind"];
    bb142__0_1214 -> bb143__0_1214 [label="return"];
    bb142__0_1214 -> bb300__0_1214 [label="unwind"];
    bb143__0_1214 -> bb144__0_1214 [label="return"];
    bb143__0_1214 -> bb300__0_1214 [label="unwind"];
    bb144__0_1214 -> bb145__0_1214 [label="return"];
    bb144__0_1214 -> bb300__0_1214 [label="unwind"];
    bb145__0_1214 -> bb146__0_1214 [label="return"];
    bb145__0_1214 -> bb300__0_1214 [label="unwind"];
    bb146__0_1214 -> bb186__0_1214 [label="0"];
    bb146__0_1214 -> bb147__0_1214 [label="otherwise"];
    bb147__0_1214 -> bb148__0_1214 [label="return"];
    bb147__0_1214 -> bb300__0_1214 [label="unwind"];
    bb148__0_1214 -> bb149__0_1214 [label="return"];
    bb148__0_1214 -> bb300__0_1214 [label="unwind"];
    bb149__0_1214 -> bb150__0_1214 [label="return"];
    bb149__0_1214 -> bb300__0_1214 [label="unwind"];
    bb150__0_1214 -> bb151__0_1214 [label="return"];
    bb150__0_1214 -> bb300__0_1214 [label="unwind"];
    bb151__0_1214 -> bb152__0_1214 [label="return"];
    bb151__0_1214 -> bb300__0_1214 [label="unwind"];
    bb152__0_1214 -> bb153__0_1214 [label="0"];
    bb152__0_1214 -> bb154__0_1214 [label="1"];
    bb152__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb153__0_1214 -> bb157__0_1214 [label="1"];
    bb153__0_1214 -> bb156__0_1214 [label="otherwise"];
    bb154__0_1214 -> bb155__0_1214 [label="return"];
    bb154__0_1214 -> bb300__0_1214 [label="unwind"];
    bb155__0_1214 -> bb276__0_1214 [label=""];
    bb156__0_1214 -> bb169__0_1214 [label="return"];
    bb156__0_1214 -> bb300__0_1214 [label="unwind"];
    bb157__0_1214 -> bb158__0_1214 [label="return"];
    bb157__0_1214 -> bb300__0_1214 [label="unwind"];
    bb158__0_1214 -> bb159__0_1214 [label="return"];
    bb158__0_1214 -> bb300__0_1214 [label="unwind"];
    bb159__0_1214 -> bb160__0_1214 [label="return"];
    bb159__0_1214 -> bb300__0_1214 [label="unwind"];
    bb160__0_1214 -> bb162__0_1214 [label="0"];
    bb160__0_1214 -> bb161__0_1214 [label="otherwise"];
    bb161__0_1214 -> bb163__0_1214 [label=""];
    bb162__0_1214 -> bb163__0_1214 [label=""];
    bb163__0_1214 -> bb164__0_1214 [label="return"];
    bb163__0_1214 -> bb300__0_1214 [label="unwind"];
    bb164__0_1214 -> bb165__0_1214 [label="return"];
    bb164__0_1214 -> bb300__0_1214 [label="unwind"];
    bb165__0_1214 -> bb166__0_1214 [label="0"];
    bb165__0_1214 -> bb167__0_1214 [label="1"];
    bb165__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb166__0_1214 -> bb180__0_1214 [label=""];
    bb167__0_1214 -> bb168__0_1214 [label="return"];
    bb167__0_1214 -> bb314__0_1214 [label="unwind"];
    bb168__0_1214 -> bb275__0_1214 [label=""];
    bb169__0_1214 -> bb170__0_1214 [label="return"];
    bb169__0_1214 -> bb300__0_1214 [label="unwind"];
    bb170__0_1214 -> bb171__0_1214 [label="return"];
    bb170__0_1214 -> bb300__0_1214 [label="unwind"];
    bb171__0_1214 -> bb173__0_1214 [label="0"];
    bb171__0_1214 -> bb172__0_1214 [label="otherwise"];
    bb172__0_1214 -> bb174__0_1214 [label=""];
    bb173__0_1214 -> bb174__0_1214 [label=""];
    bb174__0_1214 -> bb175__0_1214 [label="return"];
    bb174__0_1214 -> bb300__0_1214 [label="unwind"];
    bb175__0_1214 -> bb176__0_1214 [label="return"];
    bb175__0_1214 -> bb300__0_1214 [label="unwind"];
    bb176__0_1214 -> bb177__0_1214 [label="0"];
    bb176__0_1214 -> bb178__0_1214 [label="1"];
    bb176__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb177__0_1214 -> bb180__0_1214 [label=""];
    bb178__0_1214 -> bb179__0_1214 [label="return"];
    bb178__0_1214 -> bb313__0_1214 [label="unwind"];
    bb179__0_1214 -> bb275__0_1214 [label=""];
    bb180__0_1214 -> bb181__0_1214 [label="return"];
    bb180__0_1214 -> bb300__0_1214 [label="unwind"];
    bb181__0_1214 -> bb182__0_1214 [label="return"];
    bb181__0_1214 -> bb300__0_1214 [label="unwind"];
    bb182__0_1214 -> bb183__0_1214 [label="0"];
    bb182__0_1214 -> bb184__0_1214 [label="1"];
    bb182__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb183__0_1214 -> bb187__0_1214 [label=""];
    bb184__0_1214 -> bb185__0_1214 [label="return"];
    bb184__0_1214 -> bb312__0_1214 [label="unwind"];
    bb185__0_1214 -> bb276__0_1214 [label=""];
    bb186__0_1214 -> bb187__0_1214 [label=""];
    bb187__0_1214 -> bb189__0_1214 [label="0"];
    bb187__0_1214 -> bb188__0_1214 [label="otherwise"];
    bb188__0_1214 -> bb197__0_1214 [label=""];
    bb189__0_1214 -> bb190__0_1214 [label="return"];
    bb189__0_1214 -> bb300__0_1214 [label="unwind"];
    bb190__0_1214 -> bb191__0_1214 [label="return"];
    bb190__0_1214 -> bb300__0_1214 [label="unwind"];
    bb191__0_1214 -> bb192__0_1214 [label="return"];
    bb191__0_1214 -> bb300__0_1214 [label="unwind"];
    bb192__0_1214 -> bb193__0_1214 [label="return"];
    bb192__0_1214 -> bb298__0_1214 [label="unwind"];
    bb193__0_1214 -> bb194__0_1214 [label="return"];
    bb193__0_1214 -> bb298__0_1214 [label="unwind"];
    bb194__0_1214 -> bb195__0_1214 [label="return"];
    bb194__0_1214 -> bb300__0_1214 [label="unwind"];
    bb195__0_1214 -> bb196__0_1214 [label="return"];
    bb195__0_1214 -> bb300__0_1214 [label="unwind"];
    bb196__0_1214 -> bb197__0_1214 [label=""];
    bb197__0_1214 -> bb198__0_1214 [label="return"];
    bb197__0_1214 -> bb300__0_1214 [label="unwind"];
    bb198__0_1214 -> bb199__0_1214 [label="0"];
    bb198__0_1214 -> bb200__0_1214 [label="1"];
    bb198__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb199__0_1214 -> bb202__0_1214 [label="return"];
    bb199__0_1214 -> bb300__0_1214 [label="unwind"];
    bb200__0_1214 -> bb201__0_1214 [label="return"];
    bb200__0_1214 -> bb300__0_1214 [label="unwind"];
    bb201__0_1214 -> bb277__0_1214 [label=""];
    bb202__0_1214 -> bb203__0_1214 [label="return"];
    bb202__0_1214 -> bb300__0_1214 [label="unwind"];
    bb203__0_1214 -> bb204__0_1214 [label="return"];
    bb203__0_1214 -> bb300__0_1214 [label="unwind"];
    bb204__0_1214 -> bb209__0_1214 [label="0"];
    bb204__0_1214 -> bb205__0_1214 [label="otherwise"];
    bb205__0_1214 -> bb206__0_1214 [label="return"];
    bb205__0_1214 -> bb300__0_1214 [label="unwind"];
    bb206__0_1214 -> bb208__0_1214 [label="0"];
    bb206__0_1214 -> bb207__0_1214 [label="otherwise"];
    bb207__0_1214 -> bb218__0_1214 [label=""];
    bb208__0_1214 -> bb210__0_1214 [label=""];
    bb209__0_1214 -> bb210__0_1214 [label=""];
    bb210__0_1214 -> bb211__0_1214 [label="return"];
    bb210__0_1214 -> bb300__0_1214 [label="unwind"];
    bb211__0_1214 -> bb212__0_1214 [label="return"];
    bb211__0_1214 -> bb300__0_1214 [label="unwind"];
    bb212__0_1214 -> bb213__0_1214 [label="return"];
    bb212__0_1214 -> bb300__0_1214 [label="unwind"];
    bb213__0_1214 -> bb214__0_1214 [label="return"];
    bb213__0_1214 -> bb297__0_1214 [label="unwind"];
    bb214__0_1214 -> bb215__0_1214 [label="return"];
    bb214__0_1214 -> bb297__0_1214 [label="unwind"];
    bb215__0_1214 -> bb216__0_1214 [label="return"];
    bb215__0_1214 -> bb300__0_1214 [label="unwind"];
    bb216__0_1214 -> bb217__0_1214 [label="return"];
    bb216__0_1214 -> bb300__0_1214 [label="unwind"];
    bb217__0_1214 -> bb218__0_1214 [label=""];
    bb218__0_1214 -> bb219__0_1214 [label="return"];
    bb218__0_1214 -> bb300__0_1214 [label="unwind"];
    bb219__0_1214 -> bb220__0_1214 [label="0"];
    bb219__0_1214 -> bb221__0_1214 [label="1"];
    bb219__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb220__0_1214 -> bb223__0_1214 [label="return"];
    bb220__0_1214 -> bb300__0_1214 [label="unwind"];
    bb221__0_1214 -> bb222__0_1214 [label="return"];
    bb221__0_1214 -> bb300__0_1214 [label="unwind"];
    bb222__0_1214 -> bb277__0_1214 [label=""];
    bb223__0_1214 -> bb228__0_1214 [label="0"];
    bb223__0_1214 -> bb224__0_1214 [label="otherwise"];
    bb224__0_1214 -> bb225__0_1214 [label="return"];
    bb224__0_1214 -> bb300__0_1214 [label="unwind"];
    bb225__0_1214 -> bb227__0_1214 [label="0"];
    bb225__0_1214 -> bb226__0_1214 [label="otherwise"];
    bb226__0_1214 -> bb237__0_1214 [label=""];
    bb227__0_1214 -> bb229__0_1214 [label=""];
    bb228__0_1214 -> bb229__0_1214 [label=""];
    bb229__0_1214 -> bb230__0_1214 [label="return"];
    bb229__0_1214 -> bb300__0_1214 [label="unwind"];
    bb230__0_1214 -> bb231__0_1214 [label="return"];
    bb230__0_1214 -> bb300__0_1214 [label="unwind"];
    bb231__0_1214 -> bb232__0_1214 [label="return"];
    bb231__0_1214 -> bb300__0_1214 [label="unwind"];
    bb232__0_1214 -> bb233__0_1214 [label="return"];
    bb232__0_1214 -> bb296__0_1214 [label="unwind"];
    bb233__0_1214 -> bb234__0_1214 [label="return"];
    bb233__0_1214 -> bb296__0_1214 [label="unwind"];
    bb234__0_1214 -> bb235__0_1214 [label="return"];
    bb234__0_1214 -> bb300__0_1214 [label="unwind"];
    bb235__0_1214 -> bb236__0_1214 [label="return"];
    bb235__0_1214 -> bb300__0_1214 [label="unwind"];
    bb236__0_1214 -> bb237__0_1214 [label=""];
    bb237__0_1214 -> bb238__0_1214 [label="return"];
    bb237__0_1214 -> bb300__0_1214 [label="unwind"];
    bb238__0_1214 -> bb239__0_1214 [label="0"];
    bb238__0_1214 -> bb240__0_1214 [label="1"];
    bb238__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb239__0_1214 -> bb242__0_1214 [label="return"];
    bb239__0_1214 -> bb300__0_1214 [label="unwind"];
    bb240__0_1214 -> bb241__0_1214 [label="return"];
    bb240__0_1214 -> bb300__0_1214 [label="unwind"];
    bb241__0_1214 -> bb277__0_1214 [label=""];
    bb242__0_1214 -> bb243__0_1214 [label="return"];
    bb242__0_1214 -> bb300__0_1214 [label="unwind"];
    bb243__0_1214 -> bb244__0_1214 [label="return"];
    bb243__0_1214 -> bb300__0_1214 [label="unwind"];
    bb244__0_1214 -> bb245__0_1214 [label="return"];
    bb244__0_1214 -> bb300__0_1214 [label="unwind"];
    bb245__0_1214 -> bb246__0_1214 [label="0"];
    bb245__0_1214 -> bb247__0_1214 [label="1"];
    bb245__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb246__0_1214 -> bb249__0_1214 [label="return"];
    bb246__0_1214 -> bb300__0_1214 [label="unwind"];
    bb247__0_1214 -> bb248__0_1214 [label="return"];
    bb247__0_1214 -> bb300__0_1214 [label="unwind"];
    bb248__0_1214 -> bb274__0_1214 [label=""];
    bb249__0_1214 -> bb250__0_1214 [label="return"];
    bb249__0_1214 -> bb300__0_1214 [label="unwind"];
    bb250__0_1214 -> bb251__0_1214 [label="0"];
    bb250__0_1214 -> bb252__0_1214 [label="1"];
    bb250__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb251__0_1214 -> bb254__0_1214 [label="return"];
    bb251__0_1214 -> bb295__0_1214 [label="unwind"];
    bb252__0_1214 -> bb253__0_1214 [label="return"];
    bb252__0_1214 -> bb311__0_1214 [label="unwind"];
    bb253__0_1214 -> bb273__0_1214 [label=""];
    bb254__0_1214 -> bb255__0_1214 [label="return"];
    bb254__0_1214 -> bb295__0_1214 [label="unwind"];
    bb255__0_1214 -> bb256__0_1214 [label="return"];
    bb255__0_1214 -> bb295__0_1214 [label="unwind"];
    bb256__0_1214 -> bb257__0_1214 [label="return"];
    bb256__0_1214 -> bb295__0_1214 [label="unwind"];
    bb257__0_1214 -> bb258__0_1214 [label="return"];
    bb257__0_1214 -> bb295__0_1214 [label="unwind"];
    bb258__0_1214 -> bb259__0_1214 [label="return"];
    bb258__0_1214 -> bb295__0_1214 [label="unwind"];
    bb259__0_1214 -> bb260__0_1214 [label="return"];
    bb259__0_1214 -> bb295__0_1214 [label="unwind"];
    bb260__0_1214 -> bb261__0_1214 [label="return"];
    bb260__0_1214 -> bb295__0_1214 [label="unwind"];
    bb261__0_1214 -> bb262__0_1214 [label="return"];
    bb261__0_1214 -> bb295__0_1214 [label="unwind"];
    bb262__0_1214 -> bb263__0_1214 [label="return"];
    bb262__0_1214 -> bb295__0_1214 [label="unwind"];
    bb263__0_1214 -> bb264__0_1214 [label="0"];
    bb263__0_1214 -> bb265__0_1214 [label="1"];
    bb263__0_1214 -> bb4__0_1214 [label="otherwise"];
    bb264__0_1214 -> bb267__0_1214 [label="return"];
    bb264__0_1214 -> bb300__0_1214 [label="unwind"];
    bb265__0_1214 -> bb266__0_1214 [label="return"];
    bb265__0_1214 -> bb295__0_1214 [label="unwind"];
    bb266__0_1214 -> bb273__0_1214 [label="return"];
    bb266__0_1214 -> bb300__0_1214 [label="unwind"];
    bb267__0_1214 -> bb268__0_1214 [label="return"];
    bb267__0_1214 -> bb303__0_1214 [label="unwind"];
    bb268__0_1214 -> bb269__0_1214 [label="return"];
    bb268__0_1214 -> bb305__0_1214 [label="unwind"];
    bb269__0_1214 -> bb270__0_1214 [label="return"];
    bb269__0_1214 -> bb306__0_1214 [label="unwind"];
    bb270__0_1214 -> bb271__0_1214 [label="return"];
    bb270__0_1214 -> bb307__0_1214 [label="unwind"];
    bb271__0_1214 -> bb272__0_1214 [label="return"];
    bb271__0_1214 -> bb310__0_1214 [label="unwind"];
    bb272__0_1214 -> bb294__0_1214 [label=""];
    bb273__0_1214 -> bb274__0_1214 [label=""];
    bb274__0_1214 -> bb277__0_1214 [label=""];
    bb275__0_1214 -> bb276__0_1214 [label=""];
    bb276__0_1214 -> bb277__0_1214 [label=""];
    bb277__0_1214 -> bb279__0_1214 [label=""];
    bb278__0_1214 -> bb279__0_1214 [label=""];
    bb279__0_1214 -> bb280__0_1214 [label=""];
    bb280__0_1214 -> bb281__0_1214 [label="return"];
    bb280__0_1214 -> bb303__0_1214 [label="unwind"];
    bb281__0_1214 -> bb282__0_1214 [label=""];
    bb282__0_1214 -> bb283__0_1214 [label="return"];
    bb282__0_1214 -> bb305__0_1214 [label="unwind"];
    bb283__0_1214 -> bb284__0_1214 [label=""];
    bb284__0_1214 -> bb285__0_1214 [label=""];
    bb285__0_1214 -> bb286__0_1214 [label=""];
    bb286__0_1214 -> bb287__0_1214 [label="return"];
    bb286__0_1214 -> bb306__0_1214 [label="unwind"];
    bb287__0_1214 -> bb288__0_1214 [label="return"];
    bb287__0_1214 -> bb307__0_1214 [label="unwind"];
    bb288__0_1214 -> bb289__0_1214 [label="return"];
    bb288__0_1214 -> bb310__0_1214 [label="unwind"];
    bb289__0_1214 -> bb292__0_1214 [label=""];
    bb290__0_1214 -> bb291__0_1214 [label="return"];
    bb290__0_1214 -> bb310__0_1214 [label="unwind"];
    bb291__0_1214 -> bb292__0_1214 [label=""];
    bb292__0_1214 -> bb293__0_1214 [label=""];
    bb293__0_1214 -> bb294__0_1214 [label=""];
    bb295__0_1214 -> bb300__0_1214 [label="return"];
    bb296__0_1214 -> bb300__0_1214 [label="return"];
    bb297__0_1214 -> bb300__0_1214 [label="return"];
    bb298__0_1214 -> bb300__0_1214 [label="return"];
    bb299__0_1214 -> bb300__0_1214 [label="return"];
    bb300__0_1214 -> bb303__0_1214 [label="return"];
    bb301__0_1214 -> bb303__0_1214 [label="return"];
    bb302__0_1214 -> bb303__0_1214 [label="return"];
    bb303__0_1214 -> bb305__0_1214 [label="return"];
    bb304__0_1214 -> bb305__0_1214 [label="return"];
    bb305__0_1214 -> bb306__0_1214 [label="return"];
    bb306__0_1214 -> bb307__0_1214 [label="return"];
    bb307__0_1214 -> bb310__0_1214 [label="return"];
    bb308__0_1214 -> bb309__0_1214 [label="return"];
    bb309__0_1214 -> bb310__0_1214 [label="return"];
    bb311__0_1214 -> bb300__0_1214 [label=""];
    bb312__0_1214 -> bb300__0_1214 [label=""];
    bb313__0_1214 -> bb300__0_1214 [label=""];
    bb314__0_1214 -> bb300__0_1214 [label=""];
    bb315__0_1214 -> bb300__0_1214 [label=""];
    bb316__0_1214 -> bb300__0_1214 [label=""];
    bb317__0_1214 -> bb300__0_1214 [label=""];
    bb318__0_1214 -> bb303__0_1214 [label=""];
    bb319__0_1214 -> bb305__0_1214 [label=""];
    bb320__0_1214 -> bb308__0_1214 [label=""];
    bb321__0_1214 -> bb310__0_1214 [label=""];
    bb322__0_1214 -> bb11__0_1214 [label="return"];
    bb322__0_1214 -> bb309__0_1214 [label="unwind"];
}
