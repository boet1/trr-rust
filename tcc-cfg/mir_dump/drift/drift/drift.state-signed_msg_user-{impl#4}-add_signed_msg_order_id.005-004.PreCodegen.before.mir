// MIR for `signed_msg_user::<impl at programs/drift/src/state/signed_msg_user.rs:112:1: 112:44>::add_signed_msg_order_id` before PreCodegen

fn signed_msg_user::<impl at programs/drift/src/state/signed_msg_user.rs:112:1: 112:44>::add_signed_msg_order_id(_1: &mut SignedMsgUserOrdersZeroCopyMut<'_>, _2: SignedMsgOrderId) -> std::result::Result<(), error::ErrorCode> {
    debug self => _1;
    debug signed_msg_order_id => _2;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let _3: ();
    let mut _4: bool;
    let mut _5: u64;
    let mut _6: bool;
    let mut _7: u32;
    let mut _8: bool;
    let mut _9: &[u8; 8];
    let mut _10: &[u8; 8];
    let _11: [u8; 8];
    let mut _12: !;
    let mut _13: error::ErrorCode;
    let mut _14: error::ErrorCode;
    let _15: ();
    let mut _16: std::ops::Range<u32>;
    let mut _17: std::ops::Range<u32>;
    let mut _18: u32;
    let mut _19: &state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut<'_>;
    let mut _20: std::ops::Range<u32>;
    let mut _21: ();
    let _22: ();
    let mut _23: std::option::Option<u32>;
    let mut _24: &mut std::ops::Range<u32>;
    let mut _25: &mut std::ops::Range<u32>;
    let mut _26: isize;
    let mut _27: !;
    let mut _29: bool;
    let mut _30: u64;
    let mut _31: &mut state::signed_msg_user::SignedMsgOrderId;
    let mut _32: &mut state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut<'_>;
    let mut _33: u32;
    let mut _34: !;
    let mut _35: state::signed_msg_user::SignedMsgOrderId;
    let mut _36: &mut state::signed_msg_user::SignedMsgOrderId;
    let mut _37: &mut state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut<'_>;
    let mut _38: u32;
    let mut _39: ();
    let mut _40: error::ErrorCode;
    let mut _41: error::ErrorCode;
    let mut _42: &[u8; 8];
    scope 1 {
        debug iter => _20;
        let _28: u32;
        scope 2 {
            debug i => _28;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = (_2.1: u64);
        _4 = Eq(move _5, const 0_u64);
        switchInt(move _4) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_5);
        goto -> bb3;
    }

    bb2: {
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = (_2.2: u32);
        _6 = Eq(move _7, const 0_u32);
        switchInt(move _6) -> [0: bb4, otherwise: bb3];
    }

    bb3: {
        StorageDead(_7);
        goto -> bb6;
    }

    bb4: {
        StorageDead(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &(_2.0: [u8; 8]);
        StorageLive(_10);
        _42 = const _;
        _10 = &(*_42);
        _8 = <[u8; 8] as PartialEq>::eq(move _9, move _10) -> [return: bb5, unwind continue];
    }

    bb5: {
        switchInt(move _8) -> [0: bb8, otherwise: bb6];
    }

    bb6: {
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_13);
        StorageLive(_14);
        _14 = error::ErrorCode::InvalidSignedMsgOrderId;
        _13 = <error::ErrorCode as Into<error::ErrorCode>>::into(move _14) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_14);
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _13);
        StorageDead(_13);
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb21;
    }

    bb8: {
        StorageDead(_10);
        StorageDead(_9);
        _3 = const ();
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &(*_1);
        _18 = SignedMsgUserOrdersZeroCopyMut::<'_>::len(move _19) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_19);
        _17 = std::ops::Range::<u32> { start: const 0_u32, end: move _18 };
        StorageDead(_18);
        _16 = <std::ops::Range<u32> as IntoIterator>::into_iter(move _17) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_17);
        StorageLive(_20);
        _20 = move _16;
        goto -> bb11;
    }

    bb11: {
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &mut _20;
        _24 = &mut (*_25);
        _23 = <std::ops::Range<u32> as Iterator>::next(move _24) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_24);
        _26 = discriminant(_23);
        switchInt(move _26) -> [0: bb15, 1: bb13, otherwise: bb14];
    }

    bb13: {
        StorageLive(_28);
        _28 = ((_23 as Some).0: u32);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _32 = &mut (*_1);
        StorageLive(_33);
        _33 = _28;
        _31 = SignedMsgUserOrdersZeroCopyMut::<'_>::get_mut(move _32, move _33) -> [return: bb16, unwind continue];
    }

    bb14: {
        unreachable;
    }

    bb15: {
        _15 = const ();
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_20);
        StorageDead(_16);
        StorageDead(_15);
        StorageLive(_40);
        StorageLive(_41);
        _41 = error::ErrorCode::SignedMsgUserOrdersAccountFull;
        _40 = <error::ErrorCode as Into<error::ErrorCode>>::into(move _41) -> [return: bb20, unwind continue];
    }

    bb16: {
        StorageDead(_33);
        StorageDead(_32);
        _30 = ((*_31).1: u64);
        _29 = Eq(move _30, const 0_u64);
        switchInt(move _29) -> [0: bb19, otherwise: bb17];
    }

    bb17: {
        StorageDead(_31);
        StorageDead(_30);
        StorageLive(_35);
        _35 = _2;
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut (*_1);
        StorageLive(_38);
        _38 = _28;
        _36 = SignedMsgUserOrdersZeroCopyMut::<'_>::get_mut(move _37, move _38) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_38);
        StorageDead(_37);
        (*_36) = move _35;
        StorageDead(_35);
        StorageDead(_36);
        StorageLive(_39);
        _39 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _39);
        StorageDead(_39);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_20);
        StorageDead(_16);
        StorageDead(_15);
        goto -> bb21;
    }

    bb19: {
        StorageDead(_31);
        StorageDead(_30);
        _22 = const ();
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_22);
        _21 = const ();
        goto -> bb11;
    }

    bb20: {
        StorageDead(_41);
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _40);
        StorageDead(_40);
        goto -> bb21;
    }

    bb21: {
        return;
    }
}
