digraph Mir_0_5579 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_spot_market_if_factor(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;&gt;, _2: u16, _3: u32, _4: u32) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _16: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _21: Closure(DefId(0:5580 ~ drift[d311]::instructions::admin::handle_update_spot_market_if_factor::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _27: ();<br align="left"/>let mut _28: &amp;ReErased str;<br align="left"/>let _29: &amp;ReErased str;<br align="left"/>let mut _30: &amp;ReErased std::string::String;<br align="left"/>let _31: &amp;ReErased std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let _33: std::string::String;<br align="left"/>let mut _34: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _37: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _38: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _42: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _43: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased u16;<br align="left"/>let _45: &amp;ReErased u16;<br align="left"/>let _46: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _47: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _48: ();<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: u16;<br align="left"/>let mut _53: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _55: u16;<br align="left"/>let mut _56: ();<br align="left"/>let _57: error::ErrorCode;<br align="left"/>let _58: ();<br align="left"/>let mut _59: &amp;ReErased str;<br align="left"/>let _60: &amp;ReErased str;<br align="left"/>let mut _61: &amp;ReErased std::string::String;<br align="left"/>let _62: &amp;ReErased std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let mut _65: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _68: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _69: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _73: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _74: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased error::ErrorCode;<br align="left"/>let _76: &amp;ReErased error::ErrorCode;<br align="left"/>let _77: ();<br align="left"/>let mut _78: &amp;ReErased str;<br align="left"/>let _79: &amp;ReErased str;<br align="left"/>let mut _80: error::ErrorCode;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: ();<br align="left"/>let _86: ();<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _88: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _89: bool;<br align="left"/>let mut _90: u32;<br align="left"/>let mut _91: u32;<br align="left"/>let mut _92: ();<br align="left"/>let _93: error::ErrorCode;<br align="left"/>let _94: ();<br align="left"/>let mut _95: &amp;ReErased str;<br align="left"/>let _96: &amp;ReErased str;<br align="left"/>let mut _97: &amp;ReErased std::string::String;<br align="left"/>let _98: &amp;ReErased std::string::String;<br align="left"/>let _99: std::string::String;<br align="left"/>let _100: std::string::String;<br align="left"/>let mut _101: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _103: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _104: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _105: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _108: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _109: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _110: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased error::ErrorCode;<br align="left"/>let _112: &amp;ReErased error::ErrorCode;<br align="left"/>let _113: ();<br align="left"/>let mut _114: &amp;ReErased str;<br align="left"/>let _115: &amp;ReErased str;<br align="left"/>let mut _116: error::ErrorCode;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: ();<br align="left"/>let _122: ();<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _124: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _125: bool;<br align="left"/>let mut _126: u32;<br align="left"/>let mut _127: u32;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _129: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: u32;<br align="left"/>let mut _135: ();<br align="left"/>let _136: error::ErrorCode;<br align="left"/>let _137: ();<br align="left"/>let mut _138: &amp;ReErased str;<br align="left"/>let _139: &amp;ReErased str;<br align="left"/>let mut _140: &amp;ReErased std::string::String;<br align="left"/>let _141: &amp;ReErased std::string::String;<br align="left"/>let _142: std::string::String;<br align="left"/>let _143: std::string::String;<br align="left"/>let mut _144: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _145: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _146: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _148: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _149: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _150: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _151: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _152: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _153: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _154: &amp;ReErased error::ErrorCode;<br align="left"/>let _155: &amp;ReErased error::ErrorCode;<br align="left"/>let _156: ();<br align="left"/>let mut _157: &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: error::ErrorCode;<br align="left"/>let mut _160: isize;<br align="left"/>let _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _162: !;<br align="left"/>let mut _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _164: ();<br align="left"/>let _165: ();<br align="left"/>let mut _166: &amp;ReErased str;<br align="left"/>let _167: &amp;ReErased str;<br align="left"/>let mut _168: &amp;ReErased std::string::String;<br align="left"/>let _169: &amp;ReErased std::string::String;<br align="left"/>let _170: std::string::String;<br align="left"/>let _171: std::string::String;<br align="left"/>let mut _172: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _174: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _175: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _176: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _177: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _178: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _179: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _180: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _181: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased u32;<br align="left"/>let _183: &amp;ReErased u32;<br align="left"/>let _184: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _185: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _186: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _187: &amp;ReErased u32;<br align="left"/>let _188: &amp;ReErased u32;<br align="left"/>let _189: ();<br align="left"/>let mut _190: &amp;ReErased str;<br align="left"/>let _191: &amp;ReErased str;<br align="left"/>let mut _192: &amp;ReErased std::string::String;<br align="left"/>let _193: &amp;ReErased std::string::String;<br align="left"/>let _194: std::string::String;<br align="left"/>let _195: std::string::String;<br align="left"/>let mut _196: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _197: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _198: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _199: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _200: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _201: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _202: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _203: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _204: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _205: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _206: &amp;ReErased u32;<br align="left"/>let _207: &amp;ReErased u32;<br align="left"/>let _208: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _209: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _210: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _211: &amp;ReErased u32;<br align="left"/>let _212: &amp;ReErased u32;<br align="left"/>let mut _213: u32;<br align="left"/>let mut _214: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _215: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _216: u32;<br align="left"/>let mut _217: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _218: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _219: ();<br align="left"/>let mut _220: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _221: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _222: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _223: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _224: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _225: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _226: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _227: &amp;ReErased mut instructions::admin::AdminUpdateSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _228: isize;<br align="left"/>let mut _229: isize;<br align="left"/>let mut _230: isize;<br align="left"/>let mut _231: isize;<br align="left"/>let mut _232: isize;<br align="left"/>let mut _233: isize;<br align="left"/>let mut _234: isize;<br align="left"/>let mut _235: isize;<br align="left"/>let mut _236: isize;<br align="left"/>let mut _237: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug spot_market_index =&gt; _2;<br align="left"/>debug user_if_factor =&gt; _3;<br align="left"/>debug total_if_factor =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug spot_market =&gt; _15;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug res =&gt; _33;<br align="left"/>debug error_code =&gt; _57;<br align="left"/>debug res =&gt; _64;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug error_code =&gt; _93;<br align="left"/>debug res =&gt; _100;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>debug error_code =&gt; _136;<br align="left"/>debug res =&gt; _143;<br align="left"/>debug residual =&gt; _161;<br align="left"/>debug val =&gt; _164;<br align="left"/>debug res =&gt; _171;<br align="left"/>debug res =&gt; _195;<br align="left"/>>;
    bb0__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_226 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_9 = &amp;((*_226).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = constraints::spot_market_valid(move _8)</td></tr></table>>];
    bb1__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_228 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_227 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdateSpotMarket&lt;'_&gt;)<br/>_20 = &amp;((*_227).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_19 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _20)</td></tr></table>>];
    bb4__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_234 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>_21 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_18 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _19, move _21)</td></tr></table>>];
    bb8__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb9__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_22 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_17 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_16 = move _26<br/>StorageDead(_26)<br/>_15 = &amp;mut _16<br/>_232 = discriminant(_17)<br/>StorageDead(_17)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_225 = const _<br/>_37 = &amp;(*_225)<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;(*_15)<br/></td></tr><tr><td align="left">_46 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb11__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb12__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>_230 = discriminant(_17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = &amp;((*_46).42: u16)<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _44)</td></tr></table>>];
    bb14__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = [move _43]<br/>StorageDead(_43)<br/>_41 = &amp;_42<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_34 = Arguments::&lt;'_&gt;::new_v1(move _35, move _39)</td></tr></table>>];
    bb15__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = format(move _34)</td></tr></table>>];
    bb16__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>_32 = move _33<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = &lt;String as Deref&gt;::deref(move _30)</td></tr></table>>];
    bb17__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_28 = &amp;(*_29)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_27 = solana_program::log::sol_log(move _28)</td></tr></table>>];
    bb18__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb19__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_15)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb20__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = ((*_53).42: u16)<br/>StorageLive(_55)<br/>_55 = _2<br/>_51 = Eq(move _52, move _55)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb21__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_56)<br/>_56 = ()<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_57)<br/>_57 = error::ErrorCode::DefaultError<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_224 = const _<br/>_68 = &amp;(*_224)<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_57<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _75)</td></tr></table>>];
    bb23__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = [move _74]<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_65 = Arguments::&lt;'_&gt;::new_v1(move _66, move _70)</td></tr></table>>];
    bb24__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = format(move _65)</td></tr></table>>];
    bb25__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>_63 = move _64<br/>StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = &lt;String as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb26__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = solana_program::log::sol_log(move _59)</td></tr></table>>];
    bb27__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb28__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = const &quot;spot_market_index dne spot_market.index&quot;<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = solana_program::log::sol_log(move _78)</td></tr></table>>];
    bb29__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>_80 = _57<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _80)<br/>StorageDead(_80)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb31__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_81 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb32__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_49 as Continue).0: ())<br/>_48 = _85<br/>StorageDead(_85)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = _3<br/>StorageLive(_91)<br/>_91 = _4<br/>_89 = Le(move _90, move _91)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb33__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb34__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_92)<br/>_92 = ()<br/>_88 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _92)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>_93 = error::ErrorCode::DefaultError<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_223 = const _<br/>_104 = &amp;(*_223)<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;_93<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _111)</td></tr></table>>];
    bb37__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_109 = [move _110]<br/>StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/>_106 = move _107 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_101 = Arguments::&lt;'_&gt;::new_v1(move _102, move _106)</td></tr></table>>];
    bb38__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = format(move _101)</td></tr></table>>];
    bb39__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>_99 = move _100<br/>StorageDead(_100)<br/>_98 = &amp;_99<br/>_97 = &amp;(*_98)<br/></td></tr><tr><td align="left">_96 = &lt;String as Deref&gt;::deref(move _97)</td></tr></table>>];
    bb40__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_95 = &amp;(*_96)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_94 = solana_program::log::sol_log(move _95)</td></tr></table>>];
    bb41__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb42__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = const &quot;user_if_factor must be &lt;= total_if_factor&quot;<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = solana_program::log::sol_log(move _114)</td></tr></table>>];
    bb43__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageLive(_116)<br/>_116 = _93<br/>_88 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _116)<br/>StorageDead(_116)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb45__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_117 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb46__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_87 as Continue).0: ())<br/>_86 = _121<br/>StorageDead(_121)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = _4<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/></td></tr><tr><td align="left">_129 = &lt;u128 as Cast&gt;::cast::&lt;u32&gt;(const _)</td></tr></table>>];
    bb47__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb48__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb50__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_130 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb51__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_128 as Continue).0: u32)<br/>_127 = _134<br/>StorageDead(_134)<br/>_125 = Le(move _126, move _127)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb52__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb53__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_135)<br/>_135 = ()<br/>_124 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _135)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_136)<br/>_136 = error::ErrorCode::DefaultError<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_222 = const _<br/>_147 = &amp;(*_222)<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;_136<br/>_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_153 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _154)</td></tr></table>>];
    bb56__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_152 = [move _153]<br/>StorageDead(_153)<br/>_151 = &amp;_152<br/>_150 = &amp;(*_151)<br/>_149 = move _150 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_144 = Arguments::&lt;'_&gt;::new_v1(move _145, move _149)</td></tr></table>>];
    bb57__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = format(move _144)</td></tr></table>>];
    bb58__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_155)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_147)<br/>_142 = move _143<br/>StorageDead(_143)<br/>_141 = &amp;_142<br/>_140 = &amp;(*_141)<br/></td></tr><tr><td align="left">_139 = &lt;String as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb59__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_138 = &amp;(*_139)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_137 = solana_program::log::sol_log(move _138)</td></tr></table>>];
    bb60__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb61__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = const &quot;total_if_factor must be &lt;= 100%&quot;<br/>_157 = &amp;(*_158)<br/></td></tr><tr><td align="left">_156 = solana_program::log::sol_log(move _157)</td></tr></table>>];
    bb62__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageLive(_159)<br/>_159 = _136<br/>_124 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _159)<br/>StorageDead(_159)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb64__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_160 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb65__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_123 as Continue).0: ())<br/>_122 = _164<br/>StorageDead(_164)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_221 = const _<br/>_175 = &amp;(*_221)<br/>_174 = &amp;(*_175)<br/>_173 = move _174 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_174)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = &amp;(*_15)<br/></td></tr><tr><td align="left">_184 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _185)</td></tr></table>>];
    bb66__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_163)<br/>_163 = _161<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _163)</td></tr></table>>];
    bb67__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_183 = &amp;(((*_184).9: state::spot_market::InsuranceFund).8: u32)<br/>_182 = &amp;(*_183)<br/></td></tr><tr><td align="left">_181 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _182)</td></tr></table>>];
    bb69__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_3<br/>_187 = &amp;(*_188)<br/></td></tr><tr><td align="left">_186 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _187)</td></tr></table>>];
    bb70__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_180 = [move _181, move _186]<br/>StorageDead(_186)<br/>StorageDead(_181)<br/>_179 = &amp;_180<br/>_178 = &amp;(*_179)<br/>_177 = move _178 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_172 = Arguments::&lt;'_&gt;::new_v1(move _173, move _177)</td></tr></table>>];
    bb71__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = format(move _172)</td></tr></table>>];
    bb72__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_188)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_175)<br/>_170 = move _171<br/>StorageDead(_171)<br/>_169 = &amp;_170<br/>_168 = &amp;(*_169)<br/></td></tr><tr><td align="left">_167 = &lt;String as Deref&gt;::deref(move _168)</td></tr></table>>];
    bb73__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_166 = &amp;(*_167)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_165 = solana_program::log::sol_log(move _166)</td></tr></table>>];
    bb74__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/></td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb75__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_220 = const _<br/>_199 = &amp;(*_220)<br/>_198 = &amp;(*_199)<br/>_197 = move _198 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_198)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;(*_15)<br/></td></tr><tr><td align="left">_208 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb76__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>_207 = &amp;(((*_208).9: state::spot_market::InsuranceFund).7: u32)<br/>_206 = &amp;(*_207)<br/></td></tr><tr><td align="left">_205 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _206)</td></tr></table>>];
    bb77__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_4<br/>_211 = &amp;(*_212)<br/></td></tr><tr><td align="left">_210 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u32&gt;(move _211)</td></tr></table>>];
    bb78__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_204 = [move _205, move _210]<br/>StorageDead(_210)<br/>StorageDead(_205)<br/>_203 = &amp;_204<br/>_202 = &amp;(*_203)<br/>_201 = move _202 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_196 = Arguments::&lt;'_&gt;::new_v1(move _197, move _201)</td></tr></table>>];
    bb79__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_195 = format(move _196)</td></tr></table>>];
    bb80__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_212)<br/>StorageDead(_208)<br/>StorageDead(_207)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_199)<br/>_194 = move _195<br/>StorageDead(_195)<br/>_193 = &amp;_194<br/>_192 = &amp;(*_193)<br/></td></tr><tr><td align="left">_191 = &lt;String as Deref&gt;::deref(move _192)</td></tr></table>>];
    bb81__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_190 = &amp;(*_191)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">_189 = solana_program::log::sol_log(move _190)</td></tr></table>>];
    bb82__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">drop(_194)</td></tr></table>>];
    bb83__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageLive(_213)<br/>_213 = _3<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_214 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _215)</td></tr></table>>];
    bb84__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>(((*_214).9: state::spot_market::InsuranceFund).8: u32) = move _213<br/>StorageDead(_213)<br/>StorageDead(_214)<br/>StorageLive(_216)<br/>_216 = _4<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_217 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _218)</td></tr></table>>];
    bb85__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>(((*_217).9: state::spot_market::InsuranceFund).7: u32) = move _216<br/>StorageDead(_216)<br/>StorageDead(_217)<br/>StorageLive(_219)<br/>_219 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _219)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb86__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb89__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left">return</td></tr></table>>];
    bb91__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">drop(_194)</td></tr></table>>];
    bb92__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb93__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">drop(_142)</td></tr></table>>];
    bb94__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb95__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb96__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb97__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb98__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb99__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left" balign="left">_236 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_5579 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left" balign="left">_237 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5579 -> bb1__0_5579 [label="return"];
    bb1__0_5579 -> bb2__0_5579 [label="return"];
    bb1__0_5579 -> bb98__0_5579 [label="unwind"];
    bb2__0_5579 -> bb3__0_5579 [label="0"];
    bb2__0_5579 -> bb5__0_5579 [label="1"];
    bb2__0_5579 -> bb4__0_5579 [label="otherwise"];
    bb3__0_5579 -> bb7__0_5579 [label="return"];
    bb5__0_5579 -> bb6__0_5579 [label="return"];
    bb5__0_5579 -> bb100__0_5579 [label="unwind"];
    bb6__0_5579 -> bb90__0_5579 [label=""];
    bb7__0_5579 -> bb8__0_5579 [label="return"];
    bb7__0_5579 -> bb98__0_5579 [label="unwind"];
    bb8__0_5579 -> bb9__0_5579 [label="return"];
    bb8__0_5579 -> bb98__0_5579 [label="unwind"];
    bb9__0_5579 -> bb10__0_5579 [label="0"];
    bb9__0_5579 -> bb11__0_5579 [label="1"];
    bb9__0_5579 -> bb4__0_5579 [label="otherwise"];
    bb10__0_5579 -> bb13__0_5579 [label="return"];
    bb10__0_5579 -> bb97__0_5579 [label="unwind"];
    bb11__0_5579 -> bb12__0_5579 [label="return"];
    bb11__0_5579 -> bb99__0_5579 [label="unwind"];
    bb12__0_5579 -> bb89__0_5579 [label=""];
    bb13__0_5579 -> bb14__0_5579 [label="return"];
    bb13__0_5579 -> bb97__0_5579 [label="unwind"];
    bb14__0_5579 -> bb15__0_5579 [label="return"];
    bb14__0_5579 -> bb97__0_5579 [label="unwind"];
    bb15__0_5579 -> bb16__0_5579 [label="return"];
    bb15__0_5579 -> bb97__0_5579 [label="unwind"];
    bb16__0_5579 -> bb17__0_5579 [label="return"];
    bb16__0_5579 -> bb96__0_5579 [label="unwind"];
    bb17__0_5579 -> bb18__0_5579 [label="return"];
    bb17__0_5579 -> bb96__0_5579 [label="unwind"];
    bb18__0_5579 -> bb19__0_5579 [label="return"];
    bb18__0_5579 -> bb97__0_5579 [label="unwind"];
    bb19__0_5579 -> bb20__0_5579 [label="return"];
    bb19__0_5579 -> bb97__0_5579 [label="unwind"];
    bb20__0_5579 -> bb22__0_5579 [label="0"];
    bb20__0_5579 -> bb21__0_5579 [label="otherwise"];
    bb21__0_5579 -> bb30__0_5579 [label=""];
    bb22__0_5579 -> bb23__0_5579 [label="return"];
    bb22__0_5579 -> bb97__0_5579 [label="unwind"];
    bb23__0_5579 -> bb24__0_5579 [label="return"];
    bb23__0_5579 -> bb97__0_5579 [label="unwind"];
    bb24__0_5579 -> bb25__0_5579 [label="return"];
    bb24__0_5579 -> bb97__0_5579 [label="unwind"];
    bb25__0_5579 -> bb26__0_5579 [label="return"];
    bb25__0_5579 -> bb95__0_5579 [label="unwind"];
    bb26__0_5579 -> bb27__0_5579 [label="return"];
    bb26__0_5579 -> bb95__0_5579 [label="unwind"];
    bb27__0_5579 -> bb28__0_5579 [label="return"];
    bb27__0_5579 -> bb97__0_5579 [label="unwind"];
    bb28__0_5579 -> bb29__0_5579 [label="return"];
    bb28__0_5579 -> bb97__0_5579 [label="unwind"];
    bb29__0_5579 -> bb30__0_5579 [label=""];
    bb30__0_5579 -> bb31__0_5579 [label="return"];
    bb30__0_5579 -> bb97__0_5579 [label="unwind"];
    bb31__0_5579 -> bb32__0_5579 [label="0"];
    bb31__0_5579 -> bb33__0_5579 [label="1"];
    bb31__0_5579 -> bb4__0_5579 [label="otherwise"];
    bb32__0_5579 -> bb36__0_5579 [label="0"];
    bb32__0_5579 -> bb35__0_5579 [label="otherwise"];
    bb33__0_5579 -> bb34__0_5579 [label="return"];
    bb33__0_5579 -> bb97__0_5579 [label="unwind"];
    bb34__0_5579 -> bb88__0_5579 [label=""];
    bb35__0_5579 -> bb44__0_5579 [label=""];
    bb36__0_5579 -> bb37__0_5579 [label="return"];
    bb36__0_5579 -> bb97__0_5579 [label="unwind"];
    bb37__0_5579 -> bb38__0_5579 [label="return"];
    bb37__0_5579 -> bb97__0_5579 [label="unwind"];
    bb38__0_5579 -> bb39__0_5579 [label="return"];
    bb38__0_5579 -> bb97__0_5579 [label="unwind"];
    bb39__0_5579 -> bb40__0_5579 [label="return"];
    bb39__0_5579 -> bb94__0_5579 [label="unwind"];
    bb40__0_5579 -> bb41__0_5579 [label="return"];
    bb40__0_5579 -> bb94__0_5579 [label="unwind"];
    bb41__0_5579 -> bb42__0_5579 [label="return"];
    bb41__0_5579 -> bb97__0_5579 [label="unwind"];
    bb42__0_5579 -> bb43__0_5579 [label="return"];
    bb42__0_5579 -> bb97__0_5579 [label="unwind"];
    bb43__0_5579 -> bb44__0_5579 [label=""];
    bb44__0_5579 -> bb45__0_5579 [label="return"];
    bb44__0_5579 -> bb97__0_5579 [label="unwind"];
    bb45__0_5579 -> bb46__0_5579 [label="0"];
    bb45__0_5579 -> bb47__0_5579 [label="1"];
    bb45__0_5579 -> bb4__0_5579 [label="otherwise"];
    bb46__0_5579 -> bb49__0_5579 [label="return"];
    bb46__0_5579 -> bb97__0_5579 [label="unwind"];
    bb47__0_5579 -> bb48__0_5579 [label="return"];
    bb47__0_5579 -> bb97__0_5579 [label="unwind"];
    bb48__0_5579 -> bb88__0_5579 [label=""];
    bb49__0_5579 -> bb50__0_5579 [label="return"];
    bb49__0_5579 -> bb97__0_5579 [label="unwind"];
    bb50__0_5579 -> bb51__0_5579 [label="0"];
    bb50__0_5579 -> bb52__0_5579 [label="1"];
    bb50__0_5579 -> bb4__0_5579 [label="otherwise"];
    bb51__0_5579 -> bb55__0_5579 [label="0"];
    bb51__0_5579 -> bb54__0_5579 [label="otherwise"];
    bb52__0_5579 -> bb53__0_5579 [label="return"];
    bb52__0_5579 -> bb97__0_5579 [label="unwind"];
    bb53__0_5579 -> bb87__0_5579 [label=""];
    bb54__0_5579 -> bb63__0_5579 [label=""];
    bb55__0_5579 -> bb56__0_5579 [label="return"];
    bb55__0_5579 -> bb97__0_5579 [label="unwind"];
    bb56__0_5579 -> bb57__0_5579 [label="return"];
    bb56__0_5579 -> bb97__0_5579 [label="unwind"];
    bb57__0_5579 -> bb58__0_5579 [label="return"];
    bb57__0_5579 -> bb97__0_5579 [label="unwind"];
    bb58__0_5579 -> bb59__0_5579 [label="return"];
    bb58__0_5579 -> bb93__0_5579 [label="unwind"];
    bb59__0_5579 -> bb60__0_5579 [label="return"];
    bb59__0_5579 -> bb93__0_5579 [label="unwind"];
    bb60__0_5579 -> bb61__0_5579 [label="return"];
    bb60__0_5579 -> bb97__0_5579 [label="unwind"];
    bb61__0_5579 -> bb62__0_5579 [label="return"];
    bb61__0_5579 -> bb97__0_5579 [label="unwind"];
    bb62__0_5579 -> bb63__0_5579 [label=""];
    bb63__0_5579 -> bb64__0_5579 [label="return"];
    bb63__0_5579 -> bb97__0_5579 [label="unwind"];
    bb64__0_5579 -> bb65__0_5579 [label="0"];
    bb64__0_5579 -> bb66__0_5579 [label="1"];
    bb64__0_5579 -> bb4__0_5579 [label="otherwise"];
    bb65__0_5579 -> bb68__0_5579 [label="return"];
    bb65__0_5579 -> bb97__0_5579 [label="unwind"];
    bb66__0_5579 -> bb67__0_5579 [label="return"];
    bb66__0_5579 -> bb97__0_5579 [label="unwind"];
    bb67__0_5579 -> bb87__0_5579 [label=""];
    bb68__0_5579 -> bb69__0_5579 [label="return"];
    bb68__0_5579 -> bb97__0_5579 [label="unwind"];
    bb69__0_5579 -> bb70__0_5579 [label="return"];
    bb69__0_5579 -> bb97__0_5579 [label="unwind"];
    bb70__0_5579 -> bb71__0_5579 [label="return"];
    bb70__0_5579 -> bb97__0_5579 [label="unwind"];
    bb71__0_5579 -> bb72__0_5579 [label="return"];
    bb71__0_5579 -> bb97__0_5579 [label="unwind"];
    bb72__0_5579 -> bb73__0_5579 [label="return"];
    bb72__0_5579 -> bb92__0_5579 [label="unwind"];
    bb73__0_5579 -> bb74__0_5579 [label="return"];
    bb73__0_5579 -> bb92__0_5579 [label="unwind"];
    bb74__0_5579 -> bb75__0_5579 [label="return"];
    bb74__0_5579 -> bb97__0_5579 [label="unwind"];
    bb75__0_5579 -> bb76__0_5579 [label="return"];
    bb75__0_5579 -> bb97__0_5579 [label="unwind"];
    bb76__0_5579 -> bb77__0_5579 [label="return"];
    bb76__0_5579 -> bb97__0_5579 [label="unwind"];
    bb77__0_5579 -> bb78__0_5579 [label="return"];
    bb77__0_5579 -> bb97__0_5579 [label="unwind"];
    bb78__0_5579 -> bb79__0_5579 [label="return"];
    bb78__0_5579 -> bb97__0_5579 [label="unwind"];
    bb79__0_5579 -> bb80__0_5579 [label="return"];
    bb79__0_5579 -> bb97__0_5579 [label="unwind"];
    bb80__0_5579 -> bb81__0_5579 [label="return"];
    bb80__0_5579 -> bb91__0_5579 [label="unwind"];
    bb81__0_5579 -> bb82__0_5579 [label="return"];
    bb81__0_5579 -> bb91__0_5579 [label="unwind"];
    bb82__0_5579 -> bb83__0_5579 [label="return"];
    bb82__0_5579 -> bb97__0_5579 [label="unwind"];
    bb83__0_5579 -> bb84__0_5579 [label="return"];
    bb83__0_5579 -> bb97__0_5579 [label="unwind"];
    bb84__0_5579 -> bb85__0_5579 [label="return"];
    bb84__0_5579 -> bb97__0_5579 [label="unwind"];
    bb85__0_5579 -> bb86__0_5579 [label="return"];
    bb85__0_5579 -> bb98__0_5579 [label="unwind"];
    bb86__0_5579 -> bb90__0_5579 [label=""];
    bb87__0_5579 -> bb88__0_5579 [label=""];
    bb88__0_5579 -> bb89__0_5579 [label="return"];
    bb88__0_5579 -> bb98__0_5579 [label="unwind"];
    bb89__0_5579 -> bb90__0_5579 [label=""];
    bb91__0_5579 -> bb97__0_5579 [label="return"];
    bb92__0_5579 -> bb97__0_5579 [label="return"];
    bb93__0_5579 -> bb97__0_5579 [label="return"];
    bb94__0_5579 -> bb97__0_5579 [label="return"];
    bb95__0_5579 -> bb97__0_5579 [label="return"];
    bb96__0_5579 -> bb97__0_5579 [label="return"];
    bb97__0_5579 -> bb98__0_5579 [label="return"];
    bb99__0_5579 -> bb98__0_5579 [label=""];
    bb100__0_5579 -> bb98__0_5579 [label=""];
}
