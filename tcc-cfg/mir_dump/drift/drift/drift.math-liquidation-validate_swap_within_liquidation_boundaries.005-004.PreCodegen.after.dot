digraph Mir_0_2402 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_swap_within_liquidation_boundaries(_1: u128, _2: u128, _3: u32, _4: u32, _5: i64, _6: i64, _7: u32, _8: u32) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _9: u128;<br align="left"/>let mut _10: u32;<br align="left"/>let _11: u128;<br align="left"/>let mut _12: u32;<br align="left"/>let _13: u128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _16: u128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _25: u128;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u128;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let _49: u128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _52: u128;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _54: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _58: u128;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _60: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _61: u128;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _63: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: u128;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: u128;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _77: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _78: u32;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: u128;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: u128;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _91: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _92: i64;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: u128;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: u128;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _106: u32;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u128;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u128;<br align="left"/>let _117: ();<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _119: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _120: bool;<br align="left"/>let mut _121: u128;<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: ();<br align="left"/>let _124: error::ErrorCode;<br align="left"/>let _125: ();<br align="left"/>let mut _126: &amp;ReErased str;<br align="left"/>let _127: &amp;ReErased str;<br align="left"/>let mut _128: &amp;ReErased std::string::String;<br align="left"/>let _129: &amp;ReErased std::string::String;<br align="left"/>let _130: std::string::String;<br align="left"/>let _131: std::string::String;<br align="left"/>let mut _132: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _136: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _137: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _140: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _141: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _142: &amp;ReErased error::ErrorCode;<br align="left"/>let _143: &amp;ReErased error::ErrorCode;<br align="left"/>let _144: ();<br align="left"/>let mut _145: &amp;ReErased str;<br align="left"/>let _146: &amp;ReErased str;<br align="left"/>let mut _147: &amp;ReErased std::string::String;<br align="left"/>let _148: &amp;ReErased std::string::String;<br align="left"/>let _149: std::string::String;<br align="left"/>let _150: std::string::String;<br align="left"/>let mut _151: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _152: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _153: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _154: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _155: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _157: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _158: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _159: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _160: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _161: &amp;ReErased u128;<br align="left"/>let _162: &amp;ReErased u128;<br align="left"/>let mut _163: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased u128;<br align="left"/>let _165: &amp;ReErased u128;<br align="left"/>let mut _166: error::ErrorCode;<br align="left"/>let mut _167: isize;<br align="left"/>let _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _169: !;<br align="left"/>let mut _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _171: ();<br align="left"/>let mut _172: ();<br align="left"/>let mut _173: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _174: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug asset_transfer =&gt; _1;<br align="left"/>debug liability_transfer =&gt; _2;<br align="left"/>debug asset_decimals =&gt; _3;<br align="left"/>debug liability_decimals =&gt; _4;<br align="left"/>debug asset_price =&gt; _5;<br align="left"/>debug liability_price =&gt; _6;<br align="left"/>debug asset_liquidation_multiplier =&gt; _7;<br align="left"/>debug liability_liquidation_multiplier =&gt; _8;<br align="left"/>debug asset_precision =&gt; _9;<br align="left"/>debug liability_precision =&gt; _11;<br align="left"/>debug swap_price =&gt; _13;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug worst_case_price =&gt; _49;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug error_code =&gt; _124;<br align="left"/>debug res =&gt; _131;<br align="left"/>debug res =&gt; _150;<br align="left"/>debug residual =&gt; _168;<br align="left"/>debug val =&gt; _171;<br align="left"/>>;
    bb0__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _3<br/></td></tr><tr><td align="left">_9 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _10)</td></tr></table>>];
    bb1__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _4<br/></td></tr><tr><td align="left">_11 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _12)</td></tr></table>>];
    bb2__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _2<br/></td></tr><tr><td align="left">_24 = &lt;u128 as SafeMath&gt;::safe_mul(move _25, const _)</td></tr></table>>];
    bb3__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb4__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_26 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb5__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_23 as Continue).0: u128)<br/>_22 = _30<br/>StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = _11<br/></td></tr><tr><td align="left">_21 = &lt;u128 as SafeMath&gt;::safe_div(move _22, move _31)</td></tr></table>>];
    bb6__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb8__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb10__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_32 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb11__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_20 as Continue).0: u128)<br/>_19 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>_37 = _9<br/></td></tr><tr><td align="left">_18 = &lt;u128 as SafeMath&gt;::safe_mul(move _19, move _37)</td></tr></table>>];
    bb12__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb13__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb15__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_38 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb16__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_17 as Continue).0: u128)<br/>_16 = _42<br/>StorageDead(_42)<br/>StorageLive(_43)<br/>_43 = _1<br/></td></tr><tr><td align="left">_15 = &lt;u128 as SafeMath&gt;::safe_div(move _16, move _43)</td></tr></table>>];
    bb17__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb18__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb20__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_44 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb21__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_14 as Continue).0: u128)<br/>_13 = _48<br/>StorageDead(_48)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _5<br/></td></tr><tr><td align="left">_63 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _64)</td></tr></table>>];
    bb22__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb23__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb25__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_65 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb26__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_62 as Continue).0: u128)<br/>_61 = _69<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_60 = &lt;u128 as SafeMath&gt;::safe_mul(move _61, const _)</td></tr></table>>];
    bb27__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb28__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb30__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_70 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb31__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_59 as Continue).0: u128)<br/>_58 = _74<br/>StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _8<br/></td></tr><tr><td align="left">_77 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _78)</td></tr></table>>];
    bb32__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb33__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb35__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_79 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb36__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_76 as Continue).0: u128)<br/>_75 = _83<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_57 = &lt;u128 as SafeMath&gt;::safe_mul(move _58, move _75)</td></tr></table>>];
    bb37__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb38__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb40__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_84 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb41__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_56 as Continue).0: u128)<br/>_55 = _88<br/>StorageDead(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = _6<br/></td></tr><tr><td align="left">_91 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _92)</td></tr></table>>];
    bb42__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb43__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb45__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_93 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb46__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_90 as Continue).0: u128)<br/>_89 = _97<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_54 = &lt;u128 as SafeMath&gt;::safe_div(move _55, move _89)</td></tr></table>>];
    bb47__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb48__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_89)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb50__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_98 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb51__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_53 as Continue).0: u128)<br/>_52 = _102<br/>StorageDead(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _7<br/></td></tr><tr><td align="left">_105 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _106)</td></tr></table>>];
    bb52__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb53__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb55__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_107 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb56__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_104 as Continue).0: u128)<br/>_103 = _111<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_51 = &lt;u128 as SafeMath&gt;::safe_div(move _52, move _103)</td></tr></table>>];
    bb57__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb58__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_103)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb60__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_112 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb61__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_50 as Continue).0: u128)<br/>_49 = _116<br/>StorageDead(_116)<br/>StorageDead(_104)<br/>StorageDead(_90)<br/>StorageDead(_76)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = _13<br/>StorageLive(_122)<br/>_122 = _49<br/>_120 = Ge(move _121, move _122)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb62__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb63__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_123)<br/>_123 = ()<br/>_119 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _123)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_124)<br/>_124 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_174 = const _<br/>_135 = &amp;(*_174)<br/>_134 = &amp;(*_135)<br/>_133 = move _134 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_134)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = &amp;_124<br/>_142 = &amp;(*_143)<br/></td></tr><tr><td align="left">_141 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _142)</td></tr></table>>];
    bb66__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = [move _141]<br/>StorageDead(_141)<br/>_139 = &amp;_140<br/>_138 = &amp;(*_139)<br/>_137 = move _138 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_132 = Arguments::&lt;'_&gt;::new_v1(move _133, move _137)</td></tr></table>>];
    bb67__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = format(move _132)</td></tr></table>>];
    bb68__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_135)<br/>_130 = move _131<br/>StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = &lt;String as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb69__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_126 = &amp;(*_127)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_125 = solana_program::log::sol_log(move _126)</td></tr></table>>];
    bb70__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb71__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_173 = const _<br/>_154 = &amp;(*_173)<br/>_153 = &amp;(*_154)<br/>_152 = move _153 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_153)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_13<br/>_161 = &amp;(*_162)<br/></td></tr><tr><td align="left">_160 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _161)</td></tr></table>>];
    bb72__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_49<br/>_164 = &amp;(*_165)<br/></td></tr><tr><td align="left">_163 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _164)</td></tr></table>>];
    bb73__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>_159 = [move _160, move _163]<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>_158 = &amp;_159<br/>_157 = &amp;(*_158)<br/>_156 = move _157 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_151 = Arguments::&lt;'_&gt;::new_v1(move _152, move _156)</td></tr></table>>];
    bb74__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = format(move _151)</td></tr></table>>];
    bb75__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_165)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_154)<br/>_149 = move _150<br/>StorageDead(_150)<br/>_148 = &amp;_149<br/>_147 = &amp;(*_148)<br/></td></tr><tr><td align="left">_146 = &lt;String as Deref&gt;::deref(move _147)</td></tr></table>>];
    bb76__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_145 = &amp;(*_146)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_144 = solana_program::log::sol_log(move _145)</td></tr></table>>];
    bb77__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/></td></tr><tr><td align="left">drop(_149)</td></tr></table>>];
    bb78__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageLive(_166)<br/>_166 = _124<br/>_119 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _166)<br/>StorageDead(_166)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb80__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_167 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _167)</td></tr></table>>];
    bb81__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_118 as Continue).0: ())<br/>_117 = _171<br/>StorageDead(_171)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_172)<br/>_172 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _172)<br/>StorageDead(_172)<br/>StorageDead(_49)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_170)<br/>_170 = _168<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _170)</td></tr></table>>];
    bb83__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left">return</td></tr></table>>];
    bb97__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left">drop(_149)</td></tr></table>>];
    bb98__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb99__0_2402 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2402 -> bb1__0_2402 [label="return"];
    bb1__0_2402 -> bb2__0_2402 [label="return"];
    bb2__0_2402 -> bb3__0_2402 [label="return"];
    bb3__0_2402 -> bb4__0_2402 [label="return"];
    bb4__0_2402 -> bb5__0_2402 [label="0"];
    bb4__0_2402 -> bb7__0_2402 [label="1"];
    bb4__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb5__0_2402 -> bb9__0_2402 [label="return"];
    bb7__0_2402 -> bb8__0_2402 [label="return"];
    bb8__0_2402 -> bb92__0_2402 [label=""];
    bb9__0_2402 -> bb10__0_2402 [label="return"];
    bb10__0_2402 -> bb11__0_2402 [label="0"];
    bb10__0_2402 -> bb12__0_2402 [label="1"];
    bb10__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb11__0_2402 -> bb14__0_2402 [label="return"];
    bb12__0_2402 -> bb13__0_2402 [label="return"];
    bb13__0_2402 -> bb92__0_2402 [label=""];
    bb14__0_2402 -> bb15__0_2402 [label="return"];
    bb15__0_2402 -> bb16__0_2402 [label="0"];
    bb15__0_2402 -> bb17__0_2402 [label="1"];
    bb15__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb16__0_2402 -> bb19__0_2402 [label="return"];
    bb17__0_2402 -> bb18__0_2402 [label="return"];
    bb18__0_2402 -> bb93__0_2402 [label=""];
    bb19__0_2402 -> bb20__0_2402 [label="return"];
    bb20__0_2402 -> bb21__0_2402 [label="0"];
    bb20__0_2402 -> bb22__0_2402 [label="1"];
    bb20__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb21__0_2402 -> bb24__0_2402 [label="return"];
    bb22__0_2402 -> bb23__0_2402 [label="return"];
    bb23__0_2402 -> bb94__0_2402 [label=""];
    bb24__0_2402 -> bb25__0_2402 [label="return"];
    bb25__0_2402 -> bb26__0_2402 [label="0"];
    bb25__0_2402 -> bb27__0_2402 [label="1"];
    bb25__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb26__0_2402 -> bb29__0_2402 [label="return"];
    bb27__0_2402 -> bb28__0_2402 [label="return"];
    bb28__0_2402 -> bb89__0_2402 [label=""];
    bb29__0_2402 -> bb30__0_2402 [label="return"];
    bb30__0_2402 -> bb31__0_2402 [label="0"];
    bb30__0_2402 -> bb32__0_2402 [label="1"];
    bb30__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb31__0_2402 -> bb34__0_2402 [label="return"];
    bb32__0_2402 -> bb33__0_2402 [label="return"];
    bb33__0_2402 -> bb89__0_2402 [label=""];
    bb34__0_2402 -> bb35__0_2402 [label="return"];
    bb35__0_2402 -> bb36__0_2402 [label="0"];
    bb35__0_2402 -> bb37__0_2402 [label="1"];
    bb35__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb36__0_2402 -> bb39__0_2402 [label="return"];
    bb37__0_2402 -> bb38__0_2402 [label="return"];
    bb38__0_2402 -> bb87__0_2402 [label=""];
    bb39__0_2402 -> bb40__0_2402 [label="return"];
    bb40__0_2402 -> bb41__0_2402 [label="0"];
    bb40__0_2402 -> bb42__0_2402 [label="1"];
    bb40__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb41__0_2402 -> bb44__0_2402 [label="return"];
    bb42__0_2402 -> bb43__0_2402 [label="return"];
    bb43__0_2402 -> bb87__0_2402 [label=""];
    bb44__0_2402 -> bb45__0_2402 [label="return"];
    bb45__0_2402 -> bb46__0_2402 [label="0"];
    bb45__0_2402 -> bb47__0_2402 [label="1"];
    bb45__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb46__0_2402 -> bb49__0_2402 [label="return"];
    bb47__0_2402 -> bb48__0_2402 [label="return"];
    bb48__0_2402 -> bb85__0_2402 [label=""];
    bb49__0_2402 -> bb50__0_2402 [label="return"];
    bb50__0_2402 -> bb51__0_2402 [label="0"];
    bb50__0_2402 -> bb52__0_2402 [label="1"];
    bb50__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb51__0_2402 -> bb54__0_2402 [label="return"];
    bb52__0_2402 -> bb53__0_2402 [label="return"];
    bb53__0_2402 -> bb85__0_2402 [label=""];
    bb54__0_2402 -> bb55__0_2402 [label="return"];
    bb55__0_2402 -> bb56__0_2402 [label="0"];
    bb55__0_2402 -> bb57__0_2402 [label="1"];
    bb55__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb56__0_2402 -> bb59__0_2402 [label="return"];
    bb57__0_2402 -> bb58__0_2402 [label="return"];
    bb58__0_2402 -> bb84__0_2402 [label=""];
    bb59__0_2402 -> bb60__0_2402 [label="return"];
    bb60__0_2402 -> bb61__0_2402 [label="0"];
    bb60__0_2402 -> bb62__0_2402 [label="1"];
    bb60__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb61__0_2402 -> bb65__0_2402 [label="0"];
    bb61__0_2402 -> bb64__0_2402 [label="otherwise"];
    bb62__0_2402 -> bb63__0_2402 [label="return"];
    bb63__0_2402 -> bb84__0_2402 [label=""];
    bb64__0_2402 -> bb79__0_2402 [label=""];
    bb65__0_2402 -> bb66__0_2402 [label="return"];
    bb66__0_2402 -> bb67__0_2402 [label="return"];
    bb67__0_2402 -> bb68__0_2402 [label="return"];
    bb68__0_2402 -> bb69__0_2402 [label="return"];
    bb68__0_2402 -> bb98__0_2402 [label="unwind"];
    bb69__0_2402 -> bb70__0_2402 [label="return"];
    bb69__0_2402 -> bb98__0_2402 [label="unwind"];
    bb70__0_2402 -> bb71__0_2402 [label="return"];
    bb70__0_2402 -> bb99__0_2402 [label="unwind"];
    bb71__0_2402 -> bb72__0_2402 [label="return"];
    bb72__0_2402 -> bb73__0_2402 [label="return"];
    bb73__0_2402 -> bb74__0_2402 [label="return"];
    bb74__0_2402 -> bb75__0_2402 [label="return"];
    bb75__0_2402 -> bb76__0_2402 [label="return"];
    bb75__0_2402 -> bb97__0_2402 [label="unwind"];
    bb76__0_2402 -> bb77__0_2402 [label="return"];
    bb76__0_2402 -> bb97__0_2402 [label="unwind"];
    bb77__0_2402 -> bb78__0_2402 [label="return"];
    bb77__0_2402 -> bb99__0_2402 [label="unwind"];
    bb78__0_2402 -> bb79__0_2402 [label=""];
    bb79__0_2402 -> bb80__0_2402 [label="return"];
    bb80__0_2402 -> bb81__0_2402 [label="0"];
    bb80__0_2402 -> bb82__0_2402 [label="1"];
    bb80__0_2402 -> bb6__0_2402 [label="otherwise"];
    bb81__0_2402 -> bb96__0_2402 [label=""];
    bb82__0_2402 -> bb83__0_2402 [label="return"];
    bb83__0_2402 -> bb91__0_2402 [label=""];
    bb84__0_2402 -> bb86__0_2402 [label=""];
    bb85__0_2402 -> bb86__0_2402 [label=""];
    bb86__0_2402 -> bb88__0_2402 [label=""];
    bb87__0_2402 -> bb88__0_2402 [label=""];
    bb88__0_2402 -> bb90__0_2402 [label=""];
    bb89__0_2402 -> bb90__0_2402 [label=""];
    bb90__0_2402 -> bb91__0_2402 [label=""];
    bb91__0_2402 -> bb95__0_2402 [label=""];
    bb92__0_2402 -> bb93__0_2402 [label=""];
    bb93__0_2402 -> bb94__0_2402 [label=""];
    bb94__0_2402 -> bb95__0_2402 [label=""];
    bb95__0_2402 -> bb96__0_2402 [label=""];
    bb97__0_2402 -> bb99__0_2402 [label="return"];
    bb98__0_2402 -> bb99__0_2402 [label="return"];
}
