// MIR for `openbook_v2::<impl at programs/drift/src/state/fulfillment_params/openbook_v2.rs:36:34: 36:39>::fmt` after PreCodegen

fn openbook_v2::<impl at programs/drift/src/state/fulfillment_params/openbook_v2.rs:36:34: 36:39>::fmt(_1: &OpenbookV2FulfillmentConfig, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &[&str; 13];
    let _4: &[&str; 13];
    let _5: [&str; 13];
    let mut _6: &str;
    let _7: &str;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &str;
    let _17: &str;
    let mut _18: &str;
    let _19: &str;
    let mut _20: &str;
    let _21: &str;
    let mut _22: &str;
    let _23: &str;
    let mut _24: &str;
    let _25: &str;
    let mut _26: &str;
    let _27: &str;
    let mut _28: &str;
    let _29: &str;
    let mut _31: &[&dyn std::fmt::Debug; 13];
    let _32: &[&dyn std::fmt::Debug; 13];
    let _33: [&dyn std::fmt::Debug; 13];
    let mut _34: &dyn std::fmt::Debug;
    let mut _35: &anchor_lang::prelude::Pubkey;
    let _36: &anchor_lang::prelude::Pubkey;
    let mut _37: &dyn std::fmt::Debug;
    let mut _38: &anchor_lang::prelude::Pubkey;
    let _39: &anchor_lang::prelude::Pubkey;
    let mut _40: &dyn std::fmt::Debug;
    let mut _41: &anchor_lang::prelude::Pubkey;
    let _42: &anchor_lang::prelude::Pubkey;
    let mut _43: &dyn std::fmt::Debug;
    let mut _44: &anchor_lang::prelude::Pubkey;
    let _45: &anchor_lang::prelude::Pubkey;
    let mut _46: &dyn std::fmt::Debug;
    let mut _47: &anchor_lang::prelude::Pubkey;
    let _48: &anchor_lang::prelude::Pubkey;
    let mut _49: &dyn std::fmt::Debug;
    let mut _50: &anchor_lang::prelude::Pubkey;
    let _51: &anchor_lang::prelude::Pubkey;
    let mut _52: &dyn std::fmt::Debug;
    let mut _53: &anchor_lang::prelude::Pubkey;
    let _54: &anchor_lang::prelude::Pubkey;
    let mut _55: &dyn std::fmt::Debug;
    let mut _56: &anchor_lang::prelude::Pubkey;
    let _57: &anchor_lang::prelude::Pubkey;
    let mut _58: &dyn std::fmt::Debug;
    let mut _59: &anchor_lang::prelude::Pubkey;
    let _60: &anchor_lang::prelude::Pubkey;
    let mut _61: &dyn std::fmt::Debug;
    let mut _62: &u16;
    let _63: &u16;
    let mut _64: &dyn std::fmt::Debug;
    let mut _65: &instructions::keeper::SpotFulfillmentType;
    let _66: &instructions::keeper::SpotFulfillmentType;
    let mut _67: &dyn std::fmt::Debug;
    let mut _68: &state::spot_market::SpotFulfillmentConfigStatus;
    let _69: &state::spot_market::SpotFulfillmentConfigStatus;
    let mut _70: &dyn std::fmt::Debug;
    let mut _71: &&[u8; 4];
    let _72: &&[u8; 4];
    let _73: &[u8; 4];
    let mut _74: &mut std::fmt::Formatter<'_>;
    let mut _75: &str;
    let _76: &str;
    let mut _77: &[&str];
    let mut _78: &[&str; 13];
    let mut _79: &[&dyn std::fmt::Debug];
    let mut _80: &[&str; 13];
    scope 1 {
        debug names => _3;
        let _30: &[&dyn std::fmt::Debug];
        scope 2 {
            debug values => _30;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _80 = const _;
        _4 = &(*_80);
        _3 = &(*_4);
        StorageDead(_4);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = &((*_1).0: anchor_lang::prelude::Pubkey);
        _35 = &(*_36);
        _34 = move _35 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_35);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &((*_1).1: anchor_lang::prelude::Pubkey);
        _38 = &(*_39);
        _37 = move _38 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_38);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &((*_1).2: anchor_lang::prelude::Pubkey);
        _41 = &(*_42);
        _40 = move _41 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_41);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &((*_1).3: anchor_lang::prelude::Pubkey);
        _44 = &(*_45);
        _43 = move _44 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_44);
        StorageLive(_46);
        StorageLive(_47);
        StorageLive(_48);
        _48 = &((*_1).4: anchor_lang::prelude::Pubkey);
        _47 = &(*_48);
        _46 = move _47 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_47);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = &((*_1).5: anchor_lang::prelude::Pubkey);
        _50 = &(*_51);
        _49 = move _50 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_50);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = &((*_1).6: anchor_lang::prelude::Pubkey);
        _53 = &(*_54);
        _52 = move _53 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_53);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        _57 = &((*_1).7: anchor_lang::prelude::Pubkey);
        _56 = &(*_57);
        _55 = move _56 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_56);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        _60 = &((*_1).8: anchor_lang::prelude::Pubkey);
        _59 = &(*_60);
        _58 = move _59 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_59);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = &((*_1).9: u16);
        _62 = &(*_63);
        _61 = move _62 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_62);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        _66 = &((*_1).10: instructions::keeper::SpotFulfillmentType);
        _65 = &(*_66);
        _64 = move _65 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_65);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        _69 = &((*_1).11: state::spot_market::SpotFulfillmentConfigStatus);
        _68 = &(*_69);
        _67 = move _68 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_68);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &((*_1).12: [u8; 4]);
        _72 = &_73;
        _71 = &(*_72);
        _70 = move _71 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_71);
        _33 = [move _34, move _37, move _40, move _43, move _46, move _49, move _52, move _55, move _58, move _61, move _64, move _67, move _70];
        StorageDead(_70);
        StorageDead(_67);
        StorageDead(_64);
        StorageDead(_61);
        StorageDead(_58);
        StorageDead(_55);
        StorageDead(_52);
        StorageDead(_49);
        StorageDead(_46);
        StorageDead(_43);
        StorageDead(_40);
        StorageDead(_37);
        StorageDead(_34);
        _32 = &_33;
        _31 = &(*_32);
        _30 = move _31 as &[&dyn std::fmt::Debug] (PointerCoercion(Unsize));
        StorageDead(_31);
        StorageDead(_72);
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_63);
        StorageDead(_60);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_32);
        StorageLive(_74);
        _74 = &mut (*_2);
        StorageLive(_75);
        StorageLive(_76);
        _76 = const "OpenbookV2FulfillmentConfig";
        _75 = &(*_76);
        StorageLive(_77);
        StorageLive(_78);
        _78 = &(*_3);
        _77 = move _78 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_78);
        StorageLive(_79);
        _79 = &(*_30);
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _74, move _75, move _77, move _79) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_79);
        StorageDead(_77);
        StorageDead(_75);
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_3);
        StorageDead(_76);
        return;
    }
}
