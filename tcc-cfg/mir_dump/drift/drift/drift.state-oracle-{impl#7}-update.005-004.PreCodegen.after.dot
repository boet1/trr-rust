digraph Mir_0_3543 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PrelaunchOracle::update(_1: &amp;ReErased mut state::oracle::PrelaunchOracle, _2: &amp;ReErased state::perp_market::PerpMarket, _3: u64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: i64;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _12: i64;<br align="left"/>let _13: i64;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: i64;<br align="left"/>let mut _16: i64;<br align="left"/>let _17: ();<br align="left"/>let mut _18: &amp;ReErased str;<br align="left"/>let _19: &amp;ReErased str;<br align="left"/>let mut _20: &amp;ReErased std::string::String;<br align="left"/>let _21: &amp;ReErased std::string::String;<br align="left"/>let _22: std::string::String;<br align="left"/>let _23: std::string::String;<br align="left"/>let mut _24: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _26: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _27: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _28: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _32: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _33: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased i64;<br align="left"/>let _35: &amp;ReErased i64;<br align="left"/>let mut _36: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased i64;<br align="left"/>let _38: &amp;ReErased i64;<br align="left"/>let mut _39: i64;<br align="left"/>let _40: u64;<br align="left"/>let mut _41: i64;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _43: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _44: i64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i64;<br align="left"/>let mut _53: i64;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: i64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let _67: u64;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: u64;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: u64;<br align="left"/>let _73: ();<br align="left"/>let mut _74: &amp;ReErased str;<br align="left"/>let _75: &amp;ReErased str;<br align="left"/>let mut _76: &amp;ReErased std::string::String;<br align="left"/>let _77: &amp;ReErased std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let _79: std::string::String;<br align="left"/>let mut _80: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _84: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _88: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _89: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased i64;<br align="left"/>let _91: &amp;ReErased i64;<br align="left"/>let mut _92: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased u64;<br align="left"/>let _94: &amp;ReErased u64;<br align="left"/>let mut _95: ();<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug perp_market =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug last_twap =&gt; _4;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug new_price =&gt; _13;<br align="left"/>debug res =&gt; _23;<br align="left"/>debug spread_twap =&gt; _40;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug mark_std =&gt; _67;<br align="left"/>debug res =&gt; _79;<br align="left"/>>;
    bb0__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = (((*_2).1: state::perp_market::AMM).45: u64)<br/></td></tr><tr><td align="left">_6 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _7)</td></tr></table>>];
    bb1__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_8 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_5 as Continue).0: i64)<br/>_4 = _12<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = ((*_1).1: i64)<br/>StorageLive(_16)<br/>_16 = _4<br/>_14 = Le(move _15, move _16)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb4__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_97 = const _<br/>_27 = &amp;(*_97)<br/>_26 = &amp;(*_27)<br/>_25 = move _26 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;_4<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _34)</td></tr></table>>];
    bb8__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>_13 = _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;((*_1).1: i64)<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _37)</td></tr></table>>];
    bb10__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_32 = [move _33, move _36]<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_24 = Arguments::&lt;'_&gt;::new_v1(move _25, move _29)</td></tr></table>>];
    bb11__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = format(move _24)</td></tr></table>>];
    bb12__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>_22 = move _23<br/>StorageDead(_23)<br/>_21 = &amp;_22<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_19 = &lt;String as Deref&gt;::deref(move _20)</td></tr></table>>];
    bb13__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_18 = &amp;(*_19)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = solana_program::log::sol_log(move _18)</td></tr></table>>];
    bb14__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb15__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>_13 = ((*_1).1: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_39)<br/>_39 = _13<br/>((*_1).0: i64) = move _39<br/>StorageDead(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = (((*_2).1: state::perp_market::AMM).44: u64)<br/></td></tr><tr><td align="left">_46 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _47)</td></tr></table>>];
    bb17__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb18__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb19__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: i64)<br/>_44 = _52<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = (((*_2).1: state::perp_market::AMM).43: u64)<br/></td></tr><tr><td align="left">_55 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _56)</td></tr></table>>];
    bb20__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb21__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb23__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb24__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: i64)<br/>_53 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_43 = &lt;i64 as SafeMath&gt;::safe_sub(move _44, move _53)</td></tr></table>>];
    bb25__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb26__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb28__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_62 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb29__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_42 as Continue).0: i64)<br/>_41 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_40 = core::num::&lt;impl i64&gt;::unsigned_abs(move _41)</td></tr></table>>];
    bb30__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb31__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_54)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageLive(_67)<br/>_67 = (((*_2).1: state::perp_market::AMM).60: u64)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _40<br/>StorageLive(_70)<br/>_70 = _67<br/></td></tr><tr><td align="left">_68 = &lt;u64 as Ord&gt;::max(move _69, move _70)</td></tr></table>>];
    bb33__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>((*_1).2: u64) = move _68<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>_71 = (((*_2).1: state::perp_market::AMM).47: u64)<br/>((*_1).4: u64) = move _71<br/>StorageDead(_71)<br/>StorageLive(_72)<br/>_72 = _3<br/>((*_1).3: u64) = move _72<br/>StorageDead(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_96 = const _<br/>_83 = &amp;(*_96)<br/>_82 = &amp;(*_83)<br/>_81 = move _82 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;((*_1).0: i64)<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _90)</td></tr></table>>];
    bb34__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;((*_1).2: u64)<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _93)</td></tr></table>>];
    bb35__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_88 = [move _89, move _92]<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>_87 = &amp;_88<br/>_86 = &amp;(*_87)<br/>_85 = move _86 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_80 = Arguments::&lt;'_&gt;::new_v1(move _81, move _85)</td></tr></table>>];
    bb36__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = format(move _80)</td></tr></table>>];
    bb37__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>_78 = move _79<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = &lt;String as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb38__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = solana_program::log::sol_log(move _74)</td></tr></table>>];
    bb39__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb40__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_95)<br/>_95 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _95)<br/>StorageDead(_95)<br/>StorageDead(_67)<br/>StorageDead(_40)<br/>StorageDead(_13)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">return</td></tr></table>>];
    bb45__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb46__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb47__0_3543 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3543 -> bb1__0_3543 [label="return"];
    bb1__0_3543 -> bb2__0_3543 [label="return"];
    bb2__0_3543 -> bb3__0_3543 [label="0"];
    bb2__0_3543 -> bb5__0_3543 [label="1"];
    bb2__0_3543 -> bb4__0_3543 [label="otherwise"];
    bb3__0_3543 -> bb8__0_3543 [label="0"];
    bb3__0_3543 -> bb7__0_3543 [label="otherwise"];
    bb5__0_3543 -> bb6__0_3543 [label="return"];
    bb6__0_3543 -> bb43__0_3543 [label=""];
    bb7__0_3543 -> bb9__0_3543 [label="return"];
    bb8__0_3543 -> bb16__0_3543 [label=""];
    bb9__0_3543 -> bb10__0_3543 [label="return"];
    bb10__0_3543 -> bb11__0_3543 [label="return"];
    bb11__0_3543 -> bb12__0_3543 [label="return"];
    bb12__0_3543 -> bb13__0_3543 [label="return"];
    bb12__0_3543 -> bb46__0_3543 [label="unwind"];
    bb13__0_3543 -> bb14__0_3543 [label="return"];
    bb13__0_3543 -> bb46__0_3543 [label="unwind"];
    bb14__0_3543 -> bb15__0_3543 [label="return"];
    bb14__0_3543 -> bb47__0_3543 [label="unwind"];
    bb15__0_3543 -> bb16__0_3543 [label=""];
    bb16__0_3543 -> bb17__0_3543 [label="return"];
    bb17__0_3543 -> bb18__0_3543 [label="return"];
    bb18__0_3543 -> bb19__0_3543 [label="0"];
    bb18__0_3543 -> bb20__0_3543 [label="1"];
    bb18__0_3543 -> bb4__0_3543 [label="otherwise"];
    bb19__0_3543 -> bb22__0_3543 [label="return"];
    bb20__0_3543 -> bb21__0_3543 [label="return"];
    bb21__0_3543 -> bb42__0_3543 [label=""];
    bb22__0_3543 -> bb23__0_3543 [label="return"];
    bb23__0_3543 -> bb24__0_3543 [label="0"];
    bb23__0_3543 -> bb25__0_3543 [label="1"];
    bb23__0_3543 -> bb4__0_3543 [label="otherwise"];
    bb24__0_3543 -> bb27__0_3543 [label="return"];
    bb25__0_3543 -> bb26__0_3543 [label="return"];
    bb26__0_3543 -> bb41__0_3543 [label=""];
    bb27__0_3543 -> bb28__0_3543 [label="return"];
    bb28__0_3543 -> bb29__0_3543 [label="0"];
    bb28__0_3543 -> bb30__0_3543 [label="1"];
    bb28__0_3543 -> bb4__0_3543 [label="otherwise"];
    bb29__0_3543 -> bb32__0_3543 [label="return"];
    bb30__0_3543 -> bb31__0_3543 [label="return"];
    bb31__0_3543 -> bb41__0_3543 [label=""];
    bb32__0_3543 -> bb33__0_3543 [label="return"];
    bb33__0_3543 -> bb34__0_3543 [label="return"];
    bb34__0_3543 -> bb35__0_3543 [label="return"];
    bb35__0_3543 -> bb36__0_3543 [label="return"];
    bb36__0_3543 -> bb37__0_3543 [label="return"];
    bb37__0_3543 -> bb38__0_3543 [label="return"];
    bb37__0_3543 -> bb45__0_3543 [label="unwind"];
    bb38__0_3543 -> bb39__0_3543 [label="return"];
    bb38__0_3543 -> bb45__0_3543 [label="unwind"];
    bb39__0_3543 -> bb40__0_3543 [label="return"];
    bb39__0_3543 -> bb47__0_3543 [label="unwind"];
    bb40__0_3543 -> bb44__0_3543 [label=""];
    bb41__0_3543 -> bb42__0_3543 [label=""];
    bb42__0_3543 -> bb43__0_3543 [label=""];
    bb43__0_3543 -> bb44__0_3543 [label=""];
    bb45__0_3543 -> bb47__0_3543 [label="return"];
    bb46__0_3543 -> bb47__0_3543 [label="return"];
}
