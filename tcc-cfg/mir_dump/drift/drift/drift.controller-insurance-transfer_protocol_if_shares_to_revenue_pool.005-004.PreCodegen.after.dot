digraph Mir_0_208 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::insurance::transfer_protocol_if_shares_to_revenue_pool(_1: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig, _2: &amp;ReErased mut state::spot_market::SpotMarket, _3: u64, _4: u64, _5: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: u128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: u128;<br align="left"/>let _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: &amp;ReErased state::spot_market::InsuranceFund;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let _36: ();<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _38: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: ();<br align="left"/>let _43: error::ErrorCode;<br align="left"/>let _44: ();<br align="left"/>let mut _45: &amp;ReErased str;<br align="left"/>let _46: &amp;ReErased str;<br align="left"/>let mut _47: &amp;ReErased std::string::String;<br align="left"/>let _48: &amp;ReErased std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let _50: std::string::String;<br align="left"/>let mut _51: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _54: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _55: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _56: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _59: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _60: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased error::ErrorCode;<br align="left"/>let _62: &amp;ReErased error::ErrorCode;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased u128;<br align="left"/>let _81: &amp;ReErased u128;<br align="left"/>let mut _82: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased u128;<br align="left"/>let _84: &amp;ReErased u128;<br align="left"/>let mut _85: error::ErrorCode;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: ();<br align="left"/>let _91: ();<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _93: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: u64;<br align="left"/>let mut _96: u64;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _98: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _99: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: u64;<br align="left"/>let mut _105: ();<br align="left"/>let _106: error::ErrorCode;<br align="left"/>let _107: ();<br align="left"/>let mut _108: &amp;ReErased str;<br align="left"/>let _109: &amp;ReErased str;<br align="left"/>let mut _110: &amp;ReErased std::string::String;<br align="left"/>let _111: &amp;ReErased std::string::String;<br align="left"/>let _112: std::string::String;<br align="left"/>let _113: std::string::String;<br align="left"/>let mut _114: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _115: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _116: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _117: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _118: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _120: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _121: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _122: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _123: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased error::ErrorCode;<br align="left"/>let _125: &amp;ReErased error::ErrorCode;<br align="left"/>let _126: ();<br align="left"/>let mut _127: &amp;ReErased str;<br align="left"/>let _128: &amp;ReErased str;<br align="left"/>let mut _129: &amp;ReErased std::string::String;<br align="left"/>let _130: &amp;ReErased std::string::String;<br align="left"/>let _131: std::string::String;<br align="left"/>let _132: std::string::String;<br align="left"/>let mut _133: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _136: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _137: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _140: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _141: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _142: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased u64;<br align="left"/>let _144: &amp;ReErased u64;<br align="left"/>let mut _145: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _146: &amp;ReErased u64;<br align="left"/>let _147: &amp;ReErased u64;<br align="left"/>let _148: u64;<br align="left"/>let mut _149: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _150: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _151: &amp;ReErased state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _152: isize;<br align="left"/>let _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _154: !;<br align="left"/>let mut _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _156: u64;<br align="left"/>let mut _157: error::ErrorCode;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _162: ();<br align="left"/>let mut _163: u128;<br align="left"/>let mut _164: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _165: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _166: u128;<br align="left"/>let mut _167: u128;<br align="left"/>let mut _168: isize;<br align="left"/>let _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _170: !;<br align="left"/>let mut _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _172: u128;<br align="left"/>let _173: ();<br align="left"/>let mut _174: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _175: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _176: u128;<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _178: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _179: u64;<br align="left"/>let mut _180: isize;<br align="left"/>let _181: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _182: !;<br align="left"/>let mut _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _184: u128;<br align="left"/>let mut _185: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _186: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _187: state::spot_market::SpotBalanceType;<br align="left"/>let mut _188: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _193: ();<br align="left"/>let mut _194: u64;<br align="left"/>let mut _195: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _196: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _197: u64;<br align="left"/>let mut _198: u64;<br align="left"/>let mut _199: isize;<br align="left"/>let _200: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _203: u64;<br align="left"/>let _204: ();<br align="left"/>let _205: ();<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _207: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _208: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _209: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _210: &amp;ReErased [u8];<br align="left"/>let _211: &amp;ReErased [u8];<br align="left"/>let mut _212: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _213: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _214: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _215: &amp;ReErased state::events::TransferProtocolIfSharesToRevenuePoolRecord;<br align="left"/>let _216: &amp;ReErased state::events::TransferProtocolIfSharesToRevenuePoolRecord;<br align="left"/>let _217: state::events::TransferProtocolIfSharesToRevenuePoolRecord;<br align="left"/>let mut _218: i64;<br align="left"/>let mut _219: u16;<br align="left"/>let mut _220: u64;<br align="left"/>let mut _221: u128;<br align="left"/>let mut _222: u64;<br align="left"/>let mut _223: u128;<br align="left"/>let mut _224: u64;<br align="left"/>let mut _225: ();<br align="left"/>let mut _226: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _227: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _228: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _229: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _230: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug if_rebalance_config =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug insurance_fund_vault_amount_before =&gt; _3;<br align="left"/>debug amount =&gt; _4;<br align="left"/>debug now =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug shares =&gt; _16;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug protocol_shares =&gt; _27;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug error_code =&gt; _43;<br align="left"/>debug res =&gt; _50;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug error_code =&gt; _106;<br align="left"/>debug res =&gt; _113;<br align="left"/>debug res =&gt; _132;<br align="left"/>debug residual =&gt; _153;<br align="left"/>debug val =&gt; _156;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug residual =&gt; _169;<br align="left"/>debug val =&gt; _172;<br align="left"/>debug residual =&gt; _181;<br align="left"/>debug val =&gt; _184;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug residual =&gt; _200;<br align="left"/>debug val =&gt; _203;<br align="left"/>>;
    bb0__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _3<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_8 = apply_rebase_to_insurance_fund(move _9, move _10)</td></tr></table>>];
    bb1__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: ())<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _4<br/>StorageLive(_20)<br/>_20 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_21)<br/>_21 = _3<br/></td></tr><tr><td align="left">_18 = vault_amount_to_if_shares(move _19, move _20, move _21)</td></tr></table>>];
    bb4__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_22 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb9__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_17 as Continue).0: u128)<br/>_16 = _26<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;((*_2).9: state::spot_market::InsuranceFund)<br/></td></tr><tr><td align="left">_29 = InsuranceFund::get_protocol_shares(move _30)</td></tr></table>>];
    bb10__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb11__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb13__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_28 as Continue).0: u128)<br/>_27 = _35<br/>StorageDead(_35)<br/>StorageDead(_28)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _16<br/>StorageLive(_41)<br/>_41 = _27<br/>_39 = Le(move _40, move _41)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb15__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_42)<br/>_42 = ()<br/>_38 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>_43 = error::ErrorCode::InsufficientIFShares<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_230 = const _<br/>_54 = &amp;(*_230)<br/>_53 = &amp;(*_54)<br/>_52 = move _53 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_53)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_43<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _61)</td></tr></table>>];
    bb19__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = [move _60]<br/>StorageDead(_60)<br/>_58 = &amp;_59<br/>_57 = &amp;(*_58)<br/>_56 = move _57 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_51 = Arguments::&lt;'_&gt;::new_v1(move _52, move _56)</td></tr></table>>];
    bb20__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = format(move _51)</td></tr></table>>];
    bb21__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/>_49 = move _50<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = &lt;String as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb22__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_45 = &amp;(*_46)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_44 = solana_program::log::sol_log(move _45)</td></tr></table>>];
    bb23__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb24__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_229 = const _<br/>_73 = &amp;(*_229)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_16<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _80)</td></tr></table>>];
    bb25__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;_27<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _83)</td></tr></table>>];
    bb26__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_78 = [move _79, move _82]<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1(move _71, move _75)</td></tr></table>>];
    bb27__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb28__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb29__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb30__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb31__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_85)<br/>_85 = _43<br/>_38 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _85)<br/>StorageDead(_85)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb33__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_86 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb34__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_37 as Continue).0: ())<br/>_36 = _90<br/>StorageDead(_90)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = _4<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_1)<br/></td></tr><tr><td align="left">_98 = IfRebalanceConfig::max_transfer_amount(move _99)</td></tr></table>>];
    bb35__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb36__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb38__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_100 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb39__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_97 as Continue).0: u64)<br/>_96 = _104<br/>StorageDead(_104)<br/>_94 = Le(move _95, move _96)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb40__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb41__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_105)<br/>_105 = ()<br/>_93 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _105)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_106)<br/>_106 = error::ErrorCode::DefaultError<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_228 = const _<br/>_117 = &amp;(*_228)<br/>_116 = &amp;(*_117)<br/>_115 = move _116 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_116)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;_106<br/>_124 = &amp;(*_125)<br/></td></tr><tr><td align="left">_123 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _124)</td></tr></table>>];
    bb44__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_122 = [move _123]<br/>StorageDead(_123)<br/>_121 = &amp;_122<br/>_120 = &amp;(*_121)<br/>_119 = move _120 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_114 = Arguments::&lt;'_&gt;::new_v1(move _115, move _119)</td></tr></table>>];
    bb45__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = format(move _114)</td></tr></table>>];
    bb46__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_117)<br/>_112 = move _113<br/>StorageDead(_113)<br/>_111 = &amp;_112<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = &lt;String as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb47__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_107 = solana_program::log::sol_log(move _108)</td></tr></table>>];
    bb48__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/></td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb49__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_227 = const _<br/>_136 = &amp;(*_227)<br/>_135 = &amp;(*_136)<br/>_134 = move _135 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_135)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;_4<br/>_143 = &amp;(*_144)<br/></td></tr><tr><td align="left">_142 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _143)</td></tr></table>>];
    bb50__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;(*_1)<br/></td></tr><tr><td align="left">_150 = IfRebalanceConfig::max_transfer_amount(move _151)</td></tr></table>>];
    bb51__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">_149 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _150)</td></tr></table>>];
    bb52__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_152 = discriminant(_149)<br/></td></tr><tr><td align="left">switchInt(move _152)</td></tr></table>>];
    bb53__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_149 as Continue).0: u64)<br/>_148 = _156<br/>StorageDead(_156)<br/>_147 = &amp;_148<br/>_146 = &amp;(*_147)<br/></td></tr><tr><td align="left">_145 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _146)</td></tr></table>>];
    bb54__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_149 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_155)<br/>_155 = _153<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _155)</td></tr></table>>];
    bb55__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_141 = [move _142, move _145]<br/>StorageDead(_145)<br/>StorageDead(_142)<br/>_140 = &amp;_141<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_133 = Arguments::&lt;'_&gt;::new_v1(move _134, move _138)</td></tr></table>>];
    bb57__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = format(move _133)</td></tr></table>>];
    bb58__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>_131 = move _132<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/></td></tr><tr><td align="left">_128 = &lt;String as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb59__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_127 = &amp;(*_128)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_126 = solana_program::log::sol_log(move _127)</td></tr></table>>];
    bb60__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb61__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageLive(_157)<br/>_157 = _106<br/>_93 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _157)<br/>StorageDead(_157)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb63__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_158 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb64__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_92 as Continue).0: ())<br/>_91 = _162<br/>StorageDead(_162)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = (((*_2).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_167)<br/>_167 = _16<br/></td></tr><tr><td align="left">_165 = &lt;u128 as SafeMath&gt;::safe_sub(move _166, move _167)</td></tr></table>>];
    bb65__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_161)<br/>_161 = _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb66__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">_164 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _165)</td></tr></table>>];
    bb68__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>_168 = discriminant(_164)<br/></td></tr><tr><td align="left">switchInt(move _168)</td></tr></table>>];
    bb69__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_164 as Continue).0: u128)<br/>_163 = _172<br/>StorageDead(_172)<br/>(((*_2).9: state::spot_market::InsuranceFund).1: u128) = move _163<br/>StorageDead(_163)<br/>StorageDead(_164)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = _4<br/></td></tr><tr><td align="left">_178 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _179)</td></tr></table>>];
    bb70__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_164 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_171)<br/>_171 = _169<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _171)</td></tr></table>>];
    bb71__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_163)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb73__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_180 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _180)</td></tr></table>>];
    bb74__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_184)<br/>_184 = ((_177 as Continue).0: u128)<br/>_176 = _184<br/>StorageDead(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_226 = const _<br/>_186 = &amp;(*_226)<br/>_185 = &amp;(*_186)<br/>StorageLive(_188)<br/>_188 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_175 = update_revenue_pool_balances(move _176, move _185, move _188)</td></tr></table>>];
    bb75__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_181)<br/>_181 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_183)<br/>_183 = _181<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _183)</td></tr></table>>];
    bb76__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_181)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_174 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _175)</td></tr></table>>];
    bb78__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_189 = discriminant(_174)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb79__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_174 as Continue).0: ())<br/>_173 = _193<br/>StorageDead(_193)<br/>StorageDead(_186)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = ((*_1).4: u64)<br/>StorageLive(_198)<br/>_198 = _4<br/></td></tr><tr><td align="left">_196 = &lt;u64 as SafeMath&gt;::safe_add(move _197, move _198)</td></tr></table>>];
    bb80__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_174 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb81__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_195 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _196)</td></tr></table>>];
    bb83__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_199 = discriminant(_195)<br/></td></tr><tr><td align="left">switchInt(move _199)</td></tr></table>>];
    bb84__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_195 as Continue).0: u64)<br/>_194 = _203<br/>StorageDead(_203)<br/>((*_1).4: u64) = move _194<br/>StorageDead(_194)<br/>StorageDead(_195)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = _5<br/>StorageLive(_219)<br/>_219 = ((*_2).42: u16)<br/>StorageLive(_220)<br/>_220 = _4<br/>StorageLive(_221)<br/>_221 = _16<br/>StorageLive(_222)<br/>_222 = _3<br/>StorageLive(_223)<br/>_223 = _27<br/>StorageLive(_224)<br/>_224 = _4<br/>_217 = TransferProtocolIfSharesToRevenuePoolRecord { ts: move _218, market_index: move _219, amount: move _220, shares: move _221, if_vault_amount_before: move _222, protocol_shares_before: move _223, transfer_amount: move _224 }<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>_216 = &amp;_217<br/>_215 = &amp;(*_216)<br/></td></tr><tr><td align="left">_214 = &lt;TransferProtocolIfSharesToRevenuePoolRecord as anchor_lang::Event&gt;::data(move _215)</td></tr></table>>];
    bb85__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_195 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_202)<br/>_202 = _200<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _202)</td></tr></table>>];
    bb86__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_194)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>_213 = &amp;_214<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_211 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _212)</td></tr></table>>];
    bb88__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_210 = &amp;(*_211)<br/>StorageDead(_212)<br/>_209 = [move _210]<br/>StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/>_206 = move _207 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = solana_program::log::sol_log_data(move _206)</td></tr></table>>];
    bb89__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/></td></tr><tr><td align="left">drop(_214)</td></tr></table>>];
    bb90__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_216)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>_204 = const ()<br/>StorageDead(_204)<br/>StorageLive(_225)<br/>_225 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _225)<br/>StorageDead(_225)<br/>StorageDead(_27)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left">return</td></tr></table>>];
    bb97__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left">drop(_214)</td></tr></table>>];
    bb98__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb99__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb100__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb101__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb102__0_208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_208 -> bb1__0_208 [label="return"];
    bb1__0_208 -> bb2__0_208 [label="return"];
    bb2__0_208 -> bb3__0_208 [label="0"];
    bb2__0_208 -> bb5__0_208 [label="1"];
    bb2__0_208 -> bb4__0_208 [label="otherwise"];
    bb3__0_208 -> bb7__0_208 [label="return"];
    bb5__0_208 -> bb6__0_208 [label="return"];
    bb6__0_208 -> bb96__0_208 [label=""];
    bb7__0_208 -> bb8__0_208 [label="return"];
    bb8__0_208 -> bb9__0_208 [label="0"];
    bb8__0_208 -> bb10__0_208 [label="1"];
    bb8__0_208 -> bb4__0_208 [label="otherwise"];
    bb9__0_208 -> bb12__0_208 [label="return"];
    bb10__0_208 -> bb11__0_208 [label="return"];
    bb11__0_208 -> bb95__0_208 [label=""];
    bb12__0_208 -> bb13__0_208 [label="return"];
    bb13__0_208 -> bb14__0_208 [label="0"];
    bb13__0_208 -> bb15__0_208 [label="1"];
    bb13__0_208 -> bb4__0_208 [label="otherwise"];
    bb14__0_208 -> bb18__0_208 [label="0"];
    bb14__0_208 -> bb17__0_208 [label="otherwise"];
    bb15__0_208 -> bb16__0_208 [label="return"];
    bb16__0_208 -> bb94__0_208 [label=""];
    bb17__0_208 -> bb32__0_208 [label=""];
    bb18__0_208 -> bb19__0_208 [label="return"];
    bb19__0_208 -> bb20__0_208 [label="return"];
    bb20__0_208 -> bb21__0_208 [label="return"];
    bb21__0_208 -> bb22__0_208 [label="return"];
    bb21__0_208 -> bb101__0_208 [label="unwind"];
    bb22__0_208 -> bb23__0_208 [label="return"];
    bb22__0_208 -> bb101__0_208 [label="unwind"];
    bb23__0_208 -> bb24__0_208 [label="return"];
    bb23__0_208 -> bb102__0_208 [label="unwind"];
    bb24__0_208 -> bb25__0_208 [label="return"];
    bb25__0_208 -> bb26__0_208 [label="return"];
    bb26__0_208 -> bb27__0_208 [label="return"];
    bb27__0_208 -> bb28__0_208 [label="return"];
    bb28__0_208 -> bb29__0_208 [label="return"];
    bb28__0_208 -> bb100__0_208 [label="unwind"];
    bb29__0_208 -> bb30__0_208 [label="return"];
    bb29__0_208 -> bb100__0_208 [label="unwind"];
    bb30__0_208 -> bb31__0_208 [label="return"];
    bb30__0_208 -> bb102__0_208 [label="unwind"];
    bb31__0_208 -> bb32__0_208 [label=""];
    bb32__0_208 -> bb33__0_208 [label="return"];
    bb33__0_208 -> bb34__0_208 [label="0"];
    bb33__0_208 -> bb35__0_208 [label="1"];
    bb33__0_208 -> bb4__0_208 [label="otherwise"];
    bb34__0_208 -> bb37__0_208 [label="return"];
    bb35__0_208 -> bb36__0_208 [label="return"];
    bb36__0_208 -> bb94__0_208 [label=""];
    bb37__0_208 -> bb38__0_208 [label="return"];
    bb38__0_208 -> bb39__0_208 [label="0"];
    bb38__0_208 -> bb40__0_208 [label="1"];
    bb38__0_208 -> bb4__0_208 [label="otherwise"];
    bb39__0_208 -> bb43__0_208 [label="0"];
    bb39__0_208 -> bb42__0_208 [label="otherwise"];
    bb40__0_208 -> bb41__0_208 [label="return"];
    bb41__0_208 -> bb92__0_208 [label=""];
    bb42__0_208 -> bb62__0_208 [label=""];
    bb43__0_208 -> bb44__0_208 [label="return"];
    bb44__0_208 -> bb45__0_208 [label="return"];
    bb45__0_208 -> bb46__0_208 [label="return"];
    bb46__0_208 -> bb47__0_208 [label="return"];
    bb46__0_208 -> bb99__0_208 [label="unwind"];
    bb47__0_208 -> bb48__0_208 [label="return"];
    bb47__0_208 -> bb99__0_208 [label="unwind"];
    bb48__0_208 -> bb49__0_208 [label="return"];
    bb48__0_208 -> bb102__0_208 [label="unwind"];
    bb49__0_208 -> bb50__0_208 [label="return"];
    bb50__0_208 -> bb51__0_208 [label="return"];
    bb51__0_208 -> bb52__0_208 [label="return"];
    bb52__0_208 -> bb53__0_208 [label="0"];
    bb52__0_208 -> bb54__0_208 [label="1"];
    bb52__0_208 -> bb4__0_208 [label="otherwise"];
    bb53__0_208 -> bb56__0_208 [label="return"];
    bb54__0_208 -> bb55__0_208 [label="return"];
    bb55__0_208 -> bb92__0_208 [label=""];
    bb56__0_208 -> bb57__0_208 [label="return"];
    bb57__0_208 -> bb58__0_208 [label="return"];
    bb58__0_208 -> bb59__0_208 [label="return"];
    bb58__0_208 -> bb98__0_208 [label="unwind"];
    bb59__0_208 -> bb60__0_208 [label="return"];
    bb59__0_208 -> bb98__0_208 [label="unwind"];
    bb60__0_208 -> bb61__0_208 [label="return"];
    bb60__0_208 -> bb102__0_208 [label="unwind"];
    bb61__0_208 -> bb62__0_208 [label=""];
    bb62__0_208 -> bb63__0_208 [label="return"];
    bb63__0_208 -> bb64__0_208 [label="0"];
    bb63__0_208 -> bb65__0_208 [label="1"];
    bb63__0_208 -> bb4__0_208 [label="otherwise"];
    bb64__0_208 -> bb67__0_208 [label="return"];
    bb65__0_208 -> bb66__0_208 [label="return"];
    bb66__0_208 -> bb93__0_208 [label=""];
    bb67__0_208 -> bb68__0_208 [label="return"];
    bb68__0_208 -> bb69__0_208 [label="0"];
    bb68__0_208 -> bb70__0_208 [label="1"];
    bb68__0_208 -> bb4__0_208 [label="otherwise"];
    bb69__0_208 -> bb72__0_208 [label="return"];
    bb70__0_208 -> bb71__0_208 [label="return"];
    bb71__0_208 -> bb94__0_208 [label=""];
    bb72__0_208 -> bb73__0_208 [label="return"];
    bb73__0_208 -> bb74__0_208 [label="0"];
    bb73__0_208 -> bb75__0_208 [label="1"];
    bb73__0_208 -> bb4__0_208 [label="otherwise"];
    bb74__0_208 -> bb77__0_208 [label="return"];
    bb75__0_208 -> bb76__0_208 [label="return"];
    bb76__0_208 -> bb91__0_208 [label=""];
    bb77__0_208 -> bb78__0_208 [label="return"];
    bb78__0_208 -> bb79__0_208 [label="0"];
    bb78__0_208 -> bb80__0_208 [label="1"];
    bb78__0_208 -> bb4__0_208 [label="otherwise"];
    bb79__0_208 -> bb82__0_208 [label="return"];
    bb80__0_208 -> bb81__0_208 [label="return"];
    bb81__0_208 -> bb91__0_208 [label=""];
    bb82__0_208 -> bb83__0_208 [label="return"];
    bb83__0_208 -> bb84__0_208 [label="0"];
    bb83__0_208 -> bb85__0_208 [label="1"];
    bb83__0_208 -> bb4__0_208 [label="otherwise"];
    bb84__0_208 -> bb87__0_208 [label="return"];
    bb85__0_208 -> bb86__0_208 [label="return"];
    bb86__0_208 -> bb94__0_208 [label=""];
    bb87__0_208 -> bb88__0_208 [label="return"];
    bb87__0_208 -> bb97__0_208 [label="unwind"];
    bb88__0_208 -> bb89__0_208 [label="return"];
    bb88__0_208 -> bb97__0_208 [label="unwind"];
    bb89__0_208 -> bb90__0_208 [label="return"];
    bb89__0_208 -> bb102__0_208 [label="unwind"];
    bb90__0_208 -> bb96__0_208 [label=""];
    bb91__0_208 -> bb94__0_208 [label=""];
    bb92__0_208 -> bb93__0_208 [label=""];
    bb93__0_208 -> bb94__0_208 [label=""];
    bb94__0_208 -> bb95__0_208 [label=""];
    bb95__0_208 -> bb96__0_208 [label=""];
    bb97__0_208 -> bb102__0_208 [label="return"];
    bb98__0_208 -> bb102__0_208 [label="return"];
    bb99__0_208 -> bb102__0_208 [label="return"];
    bb100__0_208 -> bb102__0_208 [label="return"];
    bb101__0_208 -> bb102__0_208 [label="return"];
}
