digraph Mir_0_3598 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OracleMap::&lt;'a&gt;::get_price_data(_1: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _2: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource)) -&gt; std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _10: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _14: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _17: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _18: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _19: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _20: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _21: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _23: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let _27: ();<br align="left"/>let mut _28: &amp;ReErased str;<br align="left"/>let _29: &amp;ReErased str;<br align="left"/>let mut _30: &amp;ReErased std::string::String;<br align="left"/>let _31: &amp;ReErased std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let _33: std::string::String;<br align="left"/>let mut _34: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _37: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _38: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _42: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _43: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _45: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _46: error::ErrorCode;<br align="left"/>let _47: state::oracle::OraclePriceData;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _49: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _51: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _52: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: state::oracle::OraclePriceData;<br align="left"/>let _59: std::option::Option&lt;state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _60: &amp;ReErased mut std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _61: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _62: state::oracle::OraclePriceData;<br align="left"/>let mut _63: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _64: &amp;ReErased std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData, std::alloc::Global&gt;;<br align="left"/>let mut _65: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug id =&gt; _2;<br align="left"/>debug account_info =&gt; _19;<br align="left"/>debug account_info =&gt; _25;<br align="left"/>debug res =&gt; _33;<br align="left"/>debug price_data =&gt; _47;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>>;
    bb0__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_2).0: anchor_lang::prelude::Pubkey)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_4 = OracleMap::&lt;'_&gt;::should_get_quote_asset_price_data(move _5, move _6)</td></tr></table>>];
    bb1__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).5: state::oracle::OraclePriceData)<br/>_9 = &amp;(*_10)<br/>_0 = std::result::Result::&lt;&amp;OraclePriceData, error::ErrorCode&gt;::Ok(move _9)<br/>StorageDead(_9)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_14)<br/>_14 = &amp;(*_2)<br/></td></tr><tr><td align="left">_12 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::contains_key::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _13, move _14)</td></tr></table>>];
    bb4__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb5__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_18)<br/>_18 = &amp;(*_2)<br/></td></tr><tr><td align="left">_16 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::get::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _17, move _18)</td></tr></table>>];
    bb6__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_0 = &lt;Option&lt;&amp;OraclePriceData&gt; as SafeUnwrap&gt;::safe_unwrap(move _16)</td></tr></table>>];
    bb7__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>_11 = const ()<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;((*_2).0: anchor_lang::prelude::Pubkey)<br/>_22 = &amp;(*_23)<br/></td></tr><tr><td align="left">_20 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;::get::&lt;anchor_lang::prelude::Pubkey&gt;(move _21, move _22)</td></tr></table>>];
    bb9__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>_24 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb10__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_66 = const _<br/>_37 = &amp;(*_66)<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;((*_2).0: anchor_lang::prelude::Pubkey)<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _44)</td></tr></table>>];
    bb11__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_20 as Some).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_19 = _25<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;((*_2).1: state::oracle::OracleSource)<br/>_50 = &amp;(*_51)<br/>StorageLive(_52)<br/>_52 = &amp;(*_19)<br/>StorageLive(_53)<br/>_53 = ((*_1).3: u64)<br/></td></tr><tr><td align="left">_49 = get_oracle_price(move _50, move _52, move _53)</td></tr></table>>];
    bb13__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = [move _43]<br/>StorageDead(_43)<br/>_41 = &amp;_42<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_34 = Arguments::&lt;'_&gt;::new_v1(move _35, move _39)</td></tr></table>>];
    bb14__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = format(move _34)</td></tr></table>>];
    bb15__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>_32 = move _33<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = &lt;String as Deref&gt;::deref(move _30)</td></tr></table>>];
    bb16__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_28 = &amp;(*_29)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_27 = solana_program::log::sol_log(move _28)</td></tr></table>>];
    bb17__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb18__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageLive(_46)<br/>_46 = error::ErrorCode::OracleNotFound<br/>_0 = std::result::Result::&lt;&amp;OraclePriceData, error::ErrorCode&gt;::Err(move _46)<br/>StorageDead(_46)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb20__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_54 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb21__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_48 as Continue).0: state::oracle::OraclePriceData)<br/>_47 = _58<br/>StorageDead(_58)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;mut ((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_61)<br/>_61 = (*_2)<br/>StorageLive(_62)<br/>_62 = _47<br/></td></tr><tr><td align="left">_59 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::insert(move _60, move _61, move _62)</td></tr></table>>];
    bb22__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb23__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;((*_1).1: std::collections::BTreeMap&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), state::oracle::OraclePriceData&gt;)<br/>StorageLive(_65)<br/>_65 = &amp;(*_2)<br/></td></tr><tr><td align="left">_63 = BTreeMap::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource), OraclePriceData&gt;::get::&lt;(anchor_lang::prelude::Pubkey, state::oracle::OracleSource)&gt;(move _64, move _65)</td></tr></table>>];
    bb25__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_0 = &lt;Option&lt;&amp;OraclePriceData&gt; as SafeUnwrap&gt;::safe_unwrap(move _63)</td></tr></table>>];
    bb26__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_47)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left">return</td></tr></table>>];
    bb29__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb30__0_3598 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3598 -> bb1__0_3598 [label="return"];
    bb1__0_3598 -> bb3__0_3598 [label="0"];
    bb1__0_3598 -> bb2__0_3598 [label="otherwise"];
    bb2__0_3598 -> bb28__0_3598 [label=""];
    bb3__0_3598 -> bb4__0_3598 [label="return"];
    bb4__0_3598 -> bb8__0_3598 [label="0"];
    bb4__0_3598 -> bb5__0_3598 [label="otherwise"];
    bb5__0_3598 -> bb6__0_3598 [label="return"];
    bb6__0_3598 -> bb7__0_3598 [label="return"];
    bb7__0_3598 -> bb28__0_3598 [label=""];
    bb8__0_3598 -> bb9__0_3598 [label="return"];
    bb9__0_3598 -> bb10__0_3598 [label="0"];
    bb9__0_3598 -> bb12__0_3598 [label="1"];
    bb9__0_3598 -> bb11__0_3598 [label="otherwise"];
    bb10__0_3598 -> bb13__0_3598 [label="return"];
    bb12__0_3598 -> bb19__0_3598 [label="return"];
    bb13__0_3598 -> bb14__0_3598 [label="return"];
    bb14__0_3598 -> bb15__0_3598 [label="return"];
    bb15__0_3598 -> bb16__0_3598 [label="return"];
    bb15__0_3598 -> bb29__0_3598 [label="unwind"];
    bb16__0_3598 -> bb17__0_3598 [label="return"];
    bb16__0_3598 -> bb29__0_3598 [label="unwind"];
    bb17__0_3598 -> bb18__0_3598 [label="return"];
    bb17__0_3598 -> bb30__0_3598 [label="unwind"];
    bb18__0_3598 -> bb27__0_3598 [label=""];
    bb19__0_3598 -> bb20__0_3598 [label="return"];
    bb20__0_3598 -> bb21__0_3598 [label="0"];
    bb20__0_3598 -> bb22__0_3598 [label="1"];
    bb20__0_3598 -> bb11__0_3598 [label="otherwise"];
    bb21__0_3598 -> bb24__0_3598 [label="return"];
    bb22__0_3598 -> bb23__0_3598 [label="return"];
    bb23__0_3598 -> bb27__0_3598 [label=""];
    bb24__0_3598 -> bb25__0_3598 [label="return"];
    bb25__0_3598 -> bb26__0_3598 [label="return"];
    bb26__0_3598 -> bb28__0_3598 [label=""];
    bb27__0_3598 -> bb28__0_3598 [label=""];
    bb29__0_3598 -> bb30__0_3598 [label="return"];
}
