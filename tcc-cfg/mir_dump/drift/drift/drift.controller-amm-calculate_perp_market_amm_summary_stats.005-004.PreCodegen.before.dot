digraph Mir_0_96 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_perp_market_amm_summary_stats(_1: &amp;ReErased state::perp_market::PerpMarket, _2: &amp;ReErased state::spot_market::SpotMarket, _3: i64, _4: bool) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _5: u128;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _10: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _11: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _12: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: u128;<br align="left"/>let _18: u128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _23: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _24: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _25: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: u128;<br align="left"/>let _31: i128;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _33: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _34: u128;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _36: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: i128;<br align="left"/>let _49: i128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _52: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _53: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _54: i64;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: i128;<br align="left"/>let mut _60: i128;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _62: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _63: i128;<br align="left"/>let mut _64: i128;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: i128;<br align="left"/>let _70: ();<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: i128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _75: i128;<br align="left"/>let mut _76: i128;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _78: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: i128;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: i128;<br align="left"/>let mut _90: i128;<br align="left"/>debug perp_market =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug perp_market_oracle_price =&gt; _3;<br align="left"/>debug exclude_liquidation_fee =&gt; _4;<br align="left"/>debug pnl_pool_token_amount =&gt; _5;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug fee_pool_token_amount =&gt; _18;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug pnl_tokens_available =&gt; _31;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug net_user_pnl =&gt; _49;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug new_total_fee_minus_distributions =&gt; _60;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>>;
    bb0__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = (((*_1).2: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;((*_1).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_11 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _12)</td></tr></table>>];
    bb1__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_10 = &amp;(*_11)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_7 = get_token_amount(move _8, move _9, move _10)</td></tr></table>>];
    bb2__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb3__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_13 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb4__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_6 as Continue).0: u128)<br/>_5 = _17<br/>StorageDead(_17)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ((((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(((*_1).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_24 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _25)</td></tr></table>>];
    bb5__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb7__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_23 = &amp;(*_24)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_20 = get_token_amount(move _21, move _22, move _23)</td></tr></table>>];
    bb9__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb10__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_26 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb11__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_19 as Continue).0: u128)<br/>_18 = _30<br/>StorageDead(_30)<br/>StorageDead(_24)<br/>StorageDead(_19)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _5<br/>StorageLive(_38)<br/>_38 = _18<br/></td></tr><tr><td align="left">_36 = &lt;u128 as SafeMath&gt;::safe_add(move _37, move _38)</td></tr></table>>];
    bb12__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb13__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb15__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_39 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb16__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_35 as Continue).0: u128)<br/>_34 = _43<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_33 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _34)</td></tr></table>>];
    bb17__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb18__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb20__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_44 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb21__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_32 as Continue).0: i128)<br/>_31 = _48<br/>StorageDead(_48)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;((*_1).1: state::perp_market::AMM)<br/>_52 = &amp;(*_53)<br/>StorageLive(_54)<br/>_54 = _3<br/></td></tr><tr><td align="left">_51 = calculate_net_user_pnl(move _52, move _54)</td></tr></table>>];
    bb22__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb23__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb25__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_55 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb26__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_50 as Continue).0: i128)<br/>_49 = _59<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _31<br/>StorageLive(_64)<br/>_64 = _49<br/></td></tr><tr><td align="left">_62 = &lt;i128 as SafeMath&gt;::safe_sub(move _63, move _64)</td></tr></table>>];
    bb27__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb28__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb30__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_65 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb31__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_61 as Continue).0: i128)<br/>_60 = _69<br/>StorageDead(_69)<br/>StorageDead(_61)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _4<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb32__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb33__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _60<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = (((*_1).1: state::perp_market::AMM).33: u128)<br/></td></tr><tr><td align="left">_78 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _79)</td></tr></table>>];
    bb35__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_70 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb37__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_80 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb38__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_77 as Continue).0: i128)<br/>_76 = _84<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_74 = &lt;i128 as SafeMath&gt;::safe_sub(move _75, move _76)</td></tr></table>>];
    bb39__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb40__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb42__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_85 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb43__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_73 as Continue).0: i128)<br/>_72 = _89<br/>StorageDead(_89)<br/>_60 = move _72<br/>StorageDead(_72)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_70 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb45__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_90)<br/>_90 = _60<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _90)<br/>StorageDead(_90)<br/>StorageDead(_60)<br/>StorageDead(_49)<br/>StorageDead(_31)<br/>StorageDead(_18)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_96 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_96 -> bb1__0_96 [label="return"];
    bb1__0_96 -> bb2__0_96 [label="return"];
    bb2__0_96 -> bb3__0_96 [label="return"];
    bb3__0_96 -> bb4__0_96 [label="0"];
    bb3__0_96 -> bb6__0_96 [label="1"];
    bb3__0_96 -> bb5__0_96 [label="otherwise"];
    bb4__0_96 -> bb8__0_96 [label="return"];
    bb6__0_96 -> bb7__0_96 [label="return"];
    bb7__0_96 -> bb53__0_96 [label=""];
    bb8__0_96 -> bb9__0_96 [label="return"];
    bb9__0_96 -> bb10__0_96 [label="return"];
    bb10__0_96 -> bb11__0_96 [label="0"];
    bb10__0_96 -> bb12__0_96 [label="1"];
    bb10__0_96 -> bb5__0_96 [label="otherwise"];
    bb11__0_96 -> bb14__0_96 [label="return"];
    bb12__0_96 -> bb13__0_96 [label="return"];
    bb13__0_96 -> bb52__0_96 [label=""];
    bb14__0_96 -> bb15__0_96 [label="return"];
    bb15__0_96 -> bb16__0_96 [label="0"];
    bb15__0_96 -> bb17__0_96 [label="1"];
    bb15__0_96 -> bb5__0_96 [label="otherwise"];
    bb16__0_96 -> bb19__0_96 [label="return"];
    bb17__0_96 -> bb18__0_96 [label="return"];
    bb18__0_96 -> bb50__0_96 [label=""];
    bb19__0_96 -> bb20__0_96 [label="return"];
    bb20__0_96 -> bb21__0_96 [label="0"];
    bb20__0_96 -> bb22__0_96 [label="1"];
    bb20__0_96 -> bb5__0_96 [label="otherwise"];
    bb21__0_96 -> bb24__0_96 [label="return"];
    bb22__0_96 -> bb23__0_96 [label="return"];
    bb23__0_96 -> bb50__0_96 [label=""];
    bb24__0_96 -> bb25__0_96 [label="return"];
    bb25__0_96 -> bb26__0_96 [label="0"];
    bb25__0_96 -> bb27__0_96 [label="1"];
    bb25__0_96 -> bb5__0_96 [label="otherwise"];
    bb26__0_96 -> bb29__0_96 [label="return"];
    bb27__0_96 -> bb28__0_96 [label="return"];
    bb28__0_96 -> bb49__0_96 [label=""];
    bb29__0_96 -> bb30__0_96 [label="return"];
    bb30__0_96 -> bb31__0_96 [label="0"];
    bb30__0_96 -> bb32__0_96 [label="1"];
    bb30__0_96 -> bb5__0_96 [label="otherwise"];
    bb31__0_96 -> bb35__0_96 [label="0"];
    bb31__0_96 -> bb34__0_96 [label="otherwise"];
    bb32__0_96 -> bb33__0_96 [label="return"];
    bb33__0_96 -> bb48__0_96 [label=""];
    bb34__0_96 -> bb36__0_96 [label="return"];
    bb35__0_96 -> bb46__0_96 [label=""];
    bb36__0_96 -> bb37__0_96 [label="return"];
    bb37__0_96 -> bb38__0_96 [label="0"];
    bb37__0_96 -> bb39__0_96 [label="1"];
    bb37__0_96 -> bb5__0_96 [label="otherwise"];
    bb38__0_96 -> bb41__0_96 [label="return"];
    bb39__0_96 -> bb40__0_96 [label="return"];
    bb40__0_96 -> bb47__0_96 [label=""];
    bb41__0_96 -> bb42__0_96 [label="return"];
    bb42__0_96 -> bb43__0_96 [label="0"];
    bb42__0_96 -> bb44__0_96 [label="1"];
    bb42__0_96 -> bb5__0_96 [label="otherwise"];
    bb43__0_96 -> bb46__0_96 [label=""];
    bb44__0_96 -> bb45__0_96 [label="return"];
    bb45__0_96 -> bb47__0_96 [label=""];
    bb46__0_96 -> bb54__0_96 [label=""];
    bb47__0_96 -> bb48__0_96 [label=""];
    bb48__0_96 -> bb49__0_96 [label=""];
    bb49__0_96 -> bb51__0_96 [label=""];
    bb50__0_96 -> bb51__0_96 [label=""];
    bb51__0_96 -> bb52__0_96 [label=""];
    bb52__0_96 -> bb53__0_96 [label=""];
    bb53__0_96 -> bb54__0_96 [label=""];
}
