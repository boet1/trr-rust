// MIR for `verify_and_decode_ed25519_msg::{closure#3}` before PreCodegen

fn verify_and_decode_ed25519_msg::{closure#3}(_1: {closure@programs/drift/src/validation/sig_verification.rs:233:38: 233:41}, _2: hex::FromHexError) -> SignatureVerificationError {
    let mut _0: validation::sig_verification::SignatureVerificationError;

    bb0: {
        _0 = SignatureVerificationError::InvalidMessageHex;
        return;
    }
}
