digraph Mir_0_4426 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn UserStats::update_referrer_status(_1: &amp;ReErased mut state::user::UserStats) -&gt; ()<br align="left"/>let mut _2: bool;<br align="left"/>let mut _3: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _6: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: u8;<br align="left"/>let mut _8: u8;<br align="left"/>let mut _9: (u8, bool);<br align="left"/>let mut _10: u8;<br align="left"/>let mut _11: u8;<br align="left"/>let mut _12: u8;<br align="left"/>let mut _13: (u8, bool);<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = &amp;((*_1).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb1__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = &amp;_6<br/>_4 = &amp;(*_5)<br/></td></tr><tr><td align="left">_2 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _3, move _4)</td></tr></table>>];
    bb2__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _2)</td></tr></table>>];
    bb3__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_13 = CheckedAdd(const _, const 0_u8)<br/></td></tr><tr><td align="left">assert(!move (_13.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_u8)</td></tr></table>>];
    bb4__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_9 = CheckedAdd(const _, const 0_u8)<br/></td></tr><tr><td align="left">assert(!move (_9.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_u8)</td></tr></table>>];
    bb5__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_8 = move (_9.0: u8)<br/>_7 = move _8 as u8 (IntToInt)<br/>StorageDead(_8)<br/>((*_1).13: u8) = BitOr(((*_1).13: u8), move _7)<br/>StorageDead(_7)<br/>_0 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_12 = move (_13.0: u8)<br/>_11 = move _12 as u8 (IntToInt)<br/>StorageDead(_12)<br/>_10 = Not(move _11)<br/>StorageDead(_11)<br/>((*_1).13: u8) = BitAnd(((*_1).13: u8), move _10)<br/>StorageDead(_10)<br/>_0 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4426 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4426 -> bb1__0_4426 [label="return"];
    bb1__0_4426 -> bb2__0_4426 [label="return"];
    bb2__0_4426 -> bb4__0_4426 [label="0"];
    bb2__0_4426 -> bb3__0_4426 [label="otherwise"];
    bb3__0_4426 -> bb6__0_4426 [label="success"];
    bb4__0_4426 -> bb5__0_4426 [label="success"];
    bb5__0_4426 -> bb7__0_4426 [label=""];
    bb6__0_4426 -> bb7__0_4426 [label=""];
}
