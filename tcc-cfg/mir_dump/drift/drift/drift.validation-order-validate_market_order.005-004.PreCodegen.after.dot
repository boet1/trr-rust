digraph Mir_0_4557 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_market_order(_1: &amp;ReErased state::user::Order, _2: u64, _3: u64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _7: &amp;ReErased state::user::Order;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: ();<br align="left"/>let _24: error::ErrorCode;<br align="left"/>let _25: ();<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::string::String;<br align="left"/>let _29: &amp;ReErased std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _36: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased error::ErrorCode;<br align="left"/>let _43: &amp;ReErased error::ErrorCode;<br align="left"/>let _44: ();<br align="left"/>let mut _45: &amp;ReErased str;<br align="left"/>let _46: &amp;ReErased str;<br align="left"/>let mut _47: error::ErrorCode;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: ();<br align="left"/>let _53: ();<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _55: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _56: &amp;ReErased state::user::Order;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: ();<br align="left"/>let _62: ();<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: !;<br align="left"/>let _66: ();<br align="left"/>let mut _67: &amp;ReErased str;<br align="left"/>let _68: &amp;ReErased str;<br align="left"/>let mut _69: error::ErrorCode;<br align="left"/>let _70: ();<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: !;<br align="left"/>let _73: ();<br align="left"/>let mut _74: &amp;ReErased str;<br align="left"/>let _75: &amp;ReErased str;<br align="left"/>let mut _76: error::ErrorCode;<br align="left"/>let _77: ();<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: state::user::Order;<br align="left"/>let mut _80: !;<br align="left"/>let _81: ();<br align="left"/>let mut _82: &amp;ReErased str;<br align="left"/>let _83: &amp;ReErased str;<br align="left"/>let mut _84: error::ErrorCode;<br align="left"/>let _85: ();<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: !;<br align="left"/>let _88: ();<br align="left"/>let mut _89: &amp;ReErased str;<br align="left"/>let _90: &amp;ReErased str;<br align="left"/>let mut _91: error::ErrorCode;<br align="left"/>let mut _92: ();<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug order =&gt; _1;<br align="left"/>debug step_size =&gt; _2;<br align="left"/>debug min_order_size =&gt; _3;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug error_code =&gt; _24;<br align="left"/>debug res =&gt; _31;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>>;
    bb0__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/>StorageLive(_8)<br/>_8 = _2<br/>StorageLive(_9)<br/>_9 = _3<br/>StorageLive(_10)<br/>_10 = ((*_1).18: bool)<br/></td></tr><tr><td align="left">_6 = validate_base_asset_amount(move _7, move _8, move _9, move _10)</td></tr></table>>];
    bb1__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_11 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_5 as Continue).0: ())<br/>_4 = _15<br/>StorageDead(_15)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_1).6: i64)<br/>_19 = Gt(move _20, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb4__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = ((*_1).7: i64)<br/>_21 = Gt(move _22, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb8__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = ()<br/>_18 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _23)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = error::ErrorCode::InvalidOrderAuction<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_93 = const _<br/>_35 = &amp;(*_93)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_24<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _42)</td></tr></table>>];
    bb12__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_v1(move _33, move _37)</td></tr></table>>];
    bb13__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = format(move _32)</td></tr></table>>];
    bb14__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>_30 = move _31<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;String as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb15__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = solana_program::log::sol_log(move _26)</td></tr></table>>];
    bb16__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb17__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = const &quot;Auction start and end price must be greater than 0&quot;<br/>_45 = &amp;(*_46)<br/></td></tr><tr><td align="left">_44 = solana_program::log::sol_log(move _45)</td></tr></table>>];
    bb18__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageLive(_47)<br/>_47 = _24<br/>_18 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _47)<br/>StorageDead(_47)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb20__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_48 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb21__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_17 as Continue).0: ())<br/>_16 = _52<br/>StorageDead(_52)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;(*_1)<br/></td></tr><tr><td align="left">_55 = validate_auction_params(move _56)</td></tr></table>>];
    bb22__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb23__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb25__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb26__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: ())<br/>_53 = _61<br/>StorageDead(_61)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = ((*_1).5: u64)<br/>_63 = Gt(move _64, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb27__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb28__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = const &quot;Market should not have trigger price&quot;<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = solana_program::log::sol_log(move _67)</td></tr></table>>];
    bb30__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = const ()<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = ((*_1).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb31__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>_69 = error::ErrorCode::InvalidOrderTrigger<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _69)<br/>StorageDead(_69)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = const &quot;Market order can not be post only&quot;<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = solana_program::log::sol_log(move _74)</td></tr></table>>];
    bb33__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_70 = const ()<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = (*_1)<br/></td></tr><tr><td align="left">_78 = Order::has_oracle_price_offset(move _79)</td></tr></table>>];
    bb34__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_76)<br/>_76 = error::ErrorCode::InvalidOrderPostOnly<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _76)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb36__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = const &quot;Market order can not have oracle offset&quot;<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_81 = solana_program::log::sol_log(move _82)</td></tr></table>>];
    bb37__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>_84 = error::ErrorCode::InvalidOrderOracleOffset<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _84)<br/>StorageDead(_84)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = const ()<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = ((*_1).20: bool)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb39__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = const &quot;Market order can not be immediate or cancel&quot;<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = solana_program::log::sol_log(move _89)</td></tr></table>>];
    bb40__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_85 = const ()<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_92)<br/>_92 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _92)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageLive(_91)<br/>_91 = error::ErrorCode::InvalidOrderIOC<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _91)<br/>StorageDead(_91)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb43__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb44__0_4557 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4557 -> bb1__0_4557 [label="return"];
    bb1__0_4557 -> bb2__0_4557 [label="return"];
    bb2__0_4557 -> bb3__0_4557 [label="0"];
    bb2__0_4557 -> bb5__0_4557 [label="1"];
    bb2__0_4557 -> bb4__0_4557 [label="otherwise"];
    bb3__0_4557 -> bb8__0_4557 [label="0"];
    bb3__0_4557 -> bb7__0_4557 [label="otherwise"];
    bb5__0_4557 -> bb6__0_4557 [label="return"];
    bb6__0_4557 -> bb42__0_4557 [label=""];
    bb7__0_4557 -> bb10__0_4557 [label="0"];
    bb7__0_4557 -> bb9__0_4557 [label="otherwise"];
    bb8__0_4557 -> bb11__0_4557 [label=""];
    bb9__0_4557 -> bb19__0_4557 [label=""];
    bb10__0_4557 -> bb11__0_4557 [label=""];
    bb11__0_4557 -> bb12__0_4557 [label="return"];
    bb12__0_4557 -> bb13__0_4557 [label="return"];
    bb13__0_4557 -> bb14__0_4557 [label="return"];
    bb14__0_4557 -> bb15__0_4557 [label="return"];
    bb14__0_4557 -> bb43__0_4557 [label="unwind"];
    bb15__0_4557 -> bb16__0_4557 [label="return"];
    bb15__0_4557 -> bb43__0_4557 [label="unwind"];
    bb16__0_4557 -> bb17__0_4557 [label="return"];
    bb16__0_4557 -> bb44__0_4557 [label="unwind"];
    bb17__0_4557 -> bb18__0_4557 [label="return"];
    bb18__0_4557 -> bb19__0_4557 [label=""];
    bb19__0_4557 -> bb20__0_4557 [label="return"];
    bb20__0_4557 -> bb21__0_4557 [label="0"];
    bb20__0_4557 -> bb22__0_4557 [label="1"];
    bb20__0_4557 -> bb4__0_4557 [label="otherwise"];
    bb21__0_4557 -> bb24__0_4557 [label="return"];
    bb22__0_4557 -> bb23__0_4557 [label="return"];
    bb23__0_4557 -> bb42__0_4557 [label=""];
    bb24__0_4557 -> bb25__0_4557 [label="return"];
    bb25__0_4557 -> bb26__0_4557 [label="0"];
    bb25__0_4557 -> bb27__0_4557 [label="1"];
    bb25__0_4557 -> bb4__0_4557 [label="otherwise"];
    bb26__0_4557 -> bb30__0_4557 [label="0"];
    bb26__0_4557 -> bb29__0_4557 [label="otherwise"];
    bb27__0_4557 -> bb28__0_4557 [label="return"];
    bb28__0_4557 -> bb42__0_4557 [label=""];
    bb29__0_4557 -> bb31__0_4557 [label="return"];
    bb30__0_4557 -> bb33__0_4557 [label="0"];
    bb30__0_4557 -> bb32__0_4557 [label="otherwise"];
    bb31__0_4557 -> bb42__0_4557 [label=""];
    bb32__0_4557 -> bb34__0_4557 [label="return"];
    bb33__0_4557 -> bb35__0_4557 [label="return"];
    bb34__0_4557 -> bb42__0_4557 [label=""];
    bb35__0_4557 -> bb38__0_4557 [label="0"];
    bb35__0_4557 -> bb36__0_4557 [label="otherwise"];
    bb36__0_4557 -> bb37__0_4557 [label="return"];
    bb37__0_4557 -> bb42__0_4557 [label=""];
    bb38__0_4557 -> bb40__0_4557 [label="0"];
    bb38__0_4557 -> bb39__0_4557 [label="otherwise"];
    bb39__0_4557 -> bb41__0_4557 [label="return"];
    bb40__0_4557 -> bb42__0_4557 [label=""];
    bb41__0_4557 -> bb42__0_4557 [label=""];
    bb43__0_4557 -> bb44__0_4557 [label="return"];
}
