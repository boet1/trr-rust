digraph Mir_0_4415 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn UserStats::update_maker_volume_30d(_1: &amp;ReErased mut state::user::UserStats, _2: u8, _3: u64, _4: i64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: i64;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i64;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _20: u8;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: u64;<br align="left"/>let mut _38: i64;<br align="left"/>let mut _39: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug fuel_boost =&gt; _2;<br align="left"/>debug quote_asset_amount =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug since_last =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>>;
    bb0__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _4<br/>StorageLive(_10)<br/>_10 = ((*_1).7: i64)<br/></td></tr><tr><td align="left">_8 = &lt;i64 as SafeMath&gt;::safe_sub(move _9, move _10)</td></tr></table>>];
    bb1__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: i64)<br/>_6 = _15<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_5 = std::cmp::max::&lt;i64&gt;(const 1_i64, move _6)</td></tr></table>>];
    bb4__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_1)<br/>StorageLive(_20)<br/>_20 = _2<br/>StorageLive(_21)<br/>_21 = _3<br/></td></tr><tr><td align="left">_18 = UserStats::update_fuel_maker_bonus(move _19, move _20, move _21)</td></tr></table>>];
    bb8__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb9__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_22 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_17 as Continue).0: ())<br/>_16 = _26<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = ((*_1).4: u64)<br/>StorageLive(_31)<br/>_31 = _3<br/>StorageLive(_32)<br/>_32 = _5<br/></td></tr><tr><td align="left">_29 = calculate_rolling_sum(move _30, move _31, move _32, const _)</td></tr></table>>];
    bb11__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb12__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb14__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_33 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb15__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_28 as Continue).0: u64)<br/>_27 = _37<br/>StorageDead(_37)<br/>((*_1).4: u64) = move _27<br/>StorageDead(_27)<br/>StorageDead(_28)<br/>StorageLive(_38)<br/>_38 = _4<br/>((*_1).7: i64) = move _38<br/>StorageDead(_38)<br/>StorageLive(_39)<br/>_39 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _39)<br/>StorageDead(_39)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb17__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_4415 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4415 -> bb1__0_4415 [label="return"];
    bb1__0_4415 -> bb2__0_4415 [label="return"];
    bb2__0_4415 -> bb3__0_4415 [label="0"];
    bb2__0_4415 -> bb5__0_4415 [label="1"];
    bb2__0_4415 -> bb4__0_4415 [label="otherwise"];
    bb3__0_4415 -> bb7__0_4415 [label="return"];
    bb5__0_4415 -> bb6__0_4415 [label="return"];
    bb6__0_4415 -> bb18__0_4415 [label=""];
    bb7__0_4415 -> bb8__0_4415 [label="return"];
    bb8__0_4415 -> bb9__0_4415 [label="return"];
    bb9__0_4415 -> bb10__0_4415 [label="0"];
    bb9__0_4415 -> bb11__0_4415 [label="1"];
    bb9__0_4415 -> bb4__0_4415 [label="otherwise"];
    bb10__0_4415 -> bb13__0_4415 [label="return"];
    bb11__0_4415 -> bb12__0_4415 [label="return"];
    bb12__0_4415 -> bb18__0_4415 [label=""];
    bb13__0_4415 -> bb14__0_4415 [label="return"];
    bb14__0_4415 -> bb15__0_4415 [label="0"];
    bb14__0_4415 -> bb16__0_4415 [label="1"];
    bb14__0_4415 -> bb4__0_4415 [label="otherwise"];
    bb15__0_4415 -> bb19__0_4415 [label=""];
    bb16__0_4415 -> bb17__0_4415 [label="return"];
    bb17__0_4415 -> bb18__0_4415 [label=""];
    bb18__0_4415 -> bb19__0_4415 [label=""];
}
