digraph Mir_0_329 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::liquidate_perp(_1: u16, _2: u64, _3: std::option::Option&lt;u64&gt;, _4: &amp;ReErased mut state::user::User, _5: &amp;ReErased anchor_lang::prelude::Pubkey, _6: &amp;ReErased mut state::user::UserStats, _7: &amp;ReErased mut state::user::User, _8: &amp;ReErased anchor_lang::prelude::Pubkey, _9: &amp;ReErased mut state::user::UserStats, _10: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _11: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _12: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _13: u64, _14: i64, _15: &amp;ReErased state::state::State) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _16: u32;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: u16;<br align="left"/>let _19: u128;<br align="left"/>let mut _20: u8;<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _23: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _24: bool;<br align="left"/>let mut _25: &amp;ReErased state::user::User;<br align="left"/>let mut _26: ();<br align="left"/>let _27: error::ErrorCode;<br align="left"/>let _28: ();<br align="left"/>let mut _29: &amp;ReErased str;<br align="left"/>let _30: &amp;ReErased str;<br align="left"/>let mut _31: &amp;ReErased std::string::String;<br align="left"/>let _32: &amp;ReErased std::string::String;<br align="left"/>let _33: std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let mut _35: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _38: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _39: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _43: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _44: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased error::ErrorCode;<br align="left"/>let _46: &amp;ReErased error::ErrorCode;<br align="left"/>let _47: ();<br align="left"/>let mut _48: &amp;ReErased str;<br align="left"/>let _49: &amp;ReErased str;<br align="left"/>let mut _50: &amp;ReErased std::string::String;<br align="left"/>let _51: &amp;ReErased std::string::String;<br align="left"/>let _52: std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _58: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _59: error::ErrorCode;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: ();<br align="left"/>let _65: ();<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _67: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _68: bool;<br align="left"/>let mut _69: &amp;ReErased state::user::User;<br align="left"/>let mut _70: ();<br align="left"/>let _71: error::ErrorCode;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: &amp;ReErased std::string::String;<br align="left"/>let _76: &amp;ReErased std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let mut _79: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased error::ErrorCode;<br align="left"/>let _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: &amp;ReErased std::string::String;<br align="left"/>let _95: &amp;ReErased std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let mut _98: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _101: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _102: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _103: error::ErrorCode;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: ();<br align="left"/>let _109: ();<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _111: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _112: bool;<br align="left"/>let mut _113: u8;<br align="left"/>let mut _114: ();<br align="left"/>let _115: error::ErrorCode;<br align="left"/>let _116: ();<br align="left"/>let mut _117: &amp;ReErased str;<br align="left"/>let _118: &amp;ReErased str;<br align="left"/>let mut _119: &amp;ReErased std::string::String;<br align="left"/>let _120: &amp;ReErased std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let _122: std::string::String;<br align="left"/>let mut _123: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _125: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _126: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _127: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _131: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _132: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased error::ErrorCode;<br align="left"/>let _134: &amp;ReErased error::ErrorCode;<br align="left"/>let _135: ();<br align="left"/>let mut _136: &amp;ReErased str;<br align="left"/>let _137: &amp;ReErased str;<br align="left"/>let mut _138: &amp;ReErased std::string::String;<br align="left"/>let _139: &amp;ReErased std::string::String;<br align="left"/>let _140: std::string::String;<br align="left"/>let _141: std::string::String;<br align="left"/>let mut _142: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _144: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _145: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _146: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _148: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _149: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _150: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _151: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _152: &amp;ReErased u8;<br align="left"/>let _153: &amp;ReErased u8;<br align="left"/>let mut _154: error::ErrorCode;<br align="left"/>let mut _155: isize;<br align="left"/>let _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _157: !;<br align="left"/>let mut _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _159: ();<br align="left"/>let _160: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _162: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _163: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased u16;<br align="left"/>let _165: &amp;ReErased u16;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _171: ();<br align="left"/>let mut _172: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _173: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _174: bool;<br align="left"/>let mut _175: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _176: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _177: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _178: state::paused_operations::PerpOperation;<br align="left"/>let mut _179: ();<br align="left"/>let _180: error::ErrorCode;<br align="left"/>let _181: ();<br align="left"/>let mut _182: &amp;ReErased str;<br align="left"/>let _183: &amp;ReErased str;<br align="left"/>let mut _184: &amp;ReErased std::string::String;<br align="left"/>let _185: &amp;ReErased std::string::String;<br align="left"/>let _186: std::string::String;<br align="left"/>let _187: std::string::String;<br align="left"/>let mut _188: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _189: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _190: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _191: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _192: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _193: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _194: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _195: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _196: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _197: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _198: &amp;ReErased error::ErrorCode;<br align="left"/>let _199: &amp;ReErased error::ErrorCode;<br align="left"/>let _200: ();<br align="left"/>let mut _201: &amp;ReErased str;<br align="left"/>let _202: &amp;ReErased str;<br align="left"/>let mut _203: &amp;ReErased std::string::String;<br align="left"/>let _204: &amp;ReErased std::string::String;<br align="left"/>let _205: std::string::String;<br align="left"/>let _206: std::string::String;<br align="left"/>let mut _207: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _208: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _209: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _210: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _211: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _212: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _213: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _214: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _215: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _216: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _217: &amp;ReErased u16;<br align="left"/>let _218: &amp;ReErased u16;<br align="left"/>let mut _219: error::ErrorCode;<br align="left"/>let mut _220: isize;<br align="left"/>let _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _222: !;<br align="left"/>let mut _223: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _224: ();<br align="left"/>let _225: ();<br align="left"/>let mut _226: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _227: ();<br align="left"/>let mut _228: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _229: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _230: &amp;ReErased mut state::user::User;<br align="left"/>let mut _231: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _232: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _233: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _234: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _235: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _236: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _237: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _238: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _239: &amp;ReErased u16;<br align="left"/>let _240: &amp;ReErased u16;<br align="left"/>let mut _241: isize;<br align="left"/>let _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _243: !;<br align="left"/>let mut _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _245: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _246: i64;<br align="left"/>let mut _247: isize;<br align="left"/>let _248: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _249: !;<br align="left"/>let mut _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _251: ();<br align="left"/>let _252: ();<br align="left"/>let mut _253: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _254: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _255: &amp;ReErased mut state::user::User;<br align="left"/>let mut _256: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _257: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _258: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _259: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _260: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _261: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _262: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _263: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _264: &amp;ReErased u16;<br align="left"/>let _265: &amp;ReErased u16;<br align="left"/>let mut _266: isize;<br align="left"/>let _267: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _268: !;<br align="left"/>let mut _269: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _270: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _271: i64;<br align="left"/>let mut _272: isize;<br align="left"/>let _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _274: !;<br align="left"/>let mut _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _276: ();<br align="left"/>let _277: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _278: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _279: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _280: &amp;ReErased state::user::User;<br align="left"/>let mut _281: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _282: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _283: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _284: state::margin_calculation::MarginContext;<br align="left"/>let mut _285: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _286: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _287: state::margin_calculation::MarginContext;<br align="left"/>let mut _288: u32;<br align="left"/>let mut _289: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _290: u16;<br align="left"/>let mut _291: isize;<br align="left"/>let _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _293: !;<br align="left"/>let mut _294: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _295: state::margin_calculation::MarginContext;<br align="left"/>let mut _296: isize;<br align="left"/>let _297: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _298: !;<br align="left"/>let mut _299: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _300: state::margin_calculation::MarginCalculation;<br align="left"/>let _301: ();<br align="left"/>let mut _302: bool;<br align="left"/>let mut _303: &amp;ReErased state::user::User;<br align="left"/>let mut _304: bool;<br align="left"/>let mut _305: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _306: !;<br align="left"/>let _307: ();<br align="left"/>let mut _308: &amp;ReErased str;<br align="left"/>let _309: &amp;ReErased str;<br align="left"/>let mut _310: &amp;ReErased std::string::String;<br align="left"/>let _311: &amp;ReErased std::string::String;<br align="left"/>let _312: std::string::String;<br align="left"/>let _313: std::string::String;<br align="left"/>let mut _314: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _315: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _316: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _317: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _318: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _319: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _320: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _321: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _322: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _323: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _324: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _325: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _326: error::ErrorCode;<br align="left"/>let mut _327: bool;<br align="left"/>let mut _328: &amp;ReErased state::user::User;<br align="left"/>let mut _329: bool;<br align="left"/>let mut _330: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _331: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _332: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _333: isize;<br align="left"/>let _334: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _335: !;<br align="left"/>let mut _336: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _337: bool;<br align="left"/>let mut _338: !;<br align="left"/>let _339: ();<br align="left"/>let mut _340: &amp;ReErased mut state::user::User;<br align="left"/>let mut _341: ();<br align="left"/>let _342: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _343: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _344: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _345: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _346: &amp;ReErased state::user::User;<br align="left"/>let mut _347: u16;<br align="left"/>let mut _348: Closure(DefId(0:330 ~ drift[d311]::controller::liquidation::liquidate_perp::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _349: &amp;ReErased u16;<br align="left"/>let mut _350: isize;<br align="left"/>let _351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _352: !;<br align="left"/>let mut _353: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _354: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _355: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _356: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _357: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _358: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _359: &amp;ReErased mut state::user::User;<br align="left"/>let mut _360: u16;<br align="left"/>let mut _361: Closure(DefId(0:331 ~ drift[d311]::controller::liquidation::liquidate_perp::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _362: &amp;ReErased u16;<br align="left"/>let mut _363: isize;<br align="left"/>let _364: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _365: !;<br align="left"/>let mut _366: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _367: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _368: u16;<br align="left"/>let mut _369: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _370: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _371: &amp;ReErased mut state::user::User;<br align="left"/>let mut _372: u64;<br align="left"/>let mut _373: isize;<br align="left"/>let _374: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _375: !;<br align="left"/>let mut _376: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _377: u16;<br align="left"/>let mut _378: u64;<br align="left"/>let _379: usize;<br align="left"/>let mut _380: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _381: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _382: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _383: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _384: u16;<br align="left"/>let mut _385: isize;<br align="left"/>let _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _387: !;<br align="left"/>let mut _388: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _389: usize;<br align="left"/>let _390: ();<br align="left"/>let mut _391: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _392: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _393: bool;<br align="left"/>let mut _394: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _395: usize;<br align="left"/>let mut _396: usize;<br align="left"/>let mut _397: bool;<br align="left"/>let mut _398: bool;<br align="left"/>let mut _399: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _400: usize;<br align="left"/>let mut _401: usize;<br align="left"/>let mut _402: bool;<br align="left"/>let mut _403: ();<br align="left"/>let _404: error::ErrorCode;<br align="left"/>let _405: ();<br align="left"/>let mut _406: &amp;ReErased str;<br align="left"/>let _407: &amp;ReErased str;<br align="left"/>let mut _408: &amp;ReErased std::string::String;<br align="left"/>let _409: &amp;ReErased std::string::String;<br align="left"/>let _410: std::string::String;<br align="left"/>let _411: std::string::String;<br align="left"/>let mut _412: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _413: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _414: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _415: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _416: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _417: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _418: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _419: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _420: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _421: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _422: &amp;ReErased error::ErrorCode;<br align="left"/>let _423: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _424: error::ErrorCode;<br align="left"/>let mut _425: isize;<br align="left"/>let _426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _427: !;<br align="left"/>let mut _428: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _429: ();<br align="left"/>let _430: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _431: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _432: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _433: &amp;ReErased mut state::user::User;<br align="left"/>let mut _434: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _435: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _436: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _437: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _438: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _439: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _440: i64;<br align="left"/>let mut _441: u64;<br align="left"/>let mut _442: state::events::OrderActionExplanation;<br align="left"/>let mut _443: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _444: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _445: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _446: isize;<br align="left"/>let _447: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _448: !;<br align="left"/>let mut _449: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _450: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _451: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _452: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _453: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _454: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _455: &amp;ReErased u16;<br align="left"/>let _456: &amp;ReErased u16;<br align="left"/>let mut _457: isize;<br align="left"/>let _458: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _459: !;<br align="left"/>let mut _460: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _461: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _462: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _463: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _464: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _465: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _467: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _468: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _469: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _470: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _471: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _472: isize;<br align="left"/>let _473: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _474: !;<br align="left"/>let mut _475: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _476: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _477: state::oracle::MMOraclePriceData;<br align="left"/>let mut _478: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::MMOraclePriceData&gt;;<br align="left"/>let mut _479: std::result::Result&lt;state::oracle::MMOraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _480: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _481: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _482: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _483: state::oracle::OraclePriceData;<br align="left"/>let mut _484: u64;<br align="left"/>let mut _485: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _486: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _487: isize;<br align="left"/>let _488: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _489: !;<br align="left"/>let mut _490: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _491: state::oracle::MMOraclePriceData;<br align="left"/>let _492: ();<br align="left"/>let mut _493: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _494: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _495: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _496: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _497: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _498: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _499: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _500: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _501: &amp;ReErased state::state::State;<br align="left"/>let mut _502: i64;<br align="left"/>let mut _503: u64;<br align="left"/>let mut _504: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _505: math::oracle::DriftAction;<br align="left"/>let mut _506: isize;<br align="left"/>let _507: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _508: !;<br align="left"/>let mut _509: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _510: ();<br align="left"/>let _511: i64;<br align="left"/>let mut _512: bool;<br align="left"/>let mut _513: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _514: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _515: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _516: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _517: state::perp_market::MarketStatus;<br align="left"/>let mut _518: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _519: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _520: ();<br align="left"/>let mut _521: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _522: u64;<br align="left"/>let _523: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _524: bool;<br align="left"/>let mut _525: &amp;ReErased std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _526: bool;<br align="left"/>let mut _527: u64;<br align="left"/>let _528: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _529: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _530: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _531: &amp;ReErased state::user::User;<br align="left"/>let mut _532: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _533: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _534: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _535: state::margin_calculation::MarginContext;<br align="left"/>let mut _536: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _537: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _538: state::margin_calculation::MarginContext;<br align="left"/>let mut _539: u32;<br align="left"/>let mut _540: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _541: u16;<br align="left"/>let mut _542: isize;<br align="left"/>let _543: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _544: !;<br align="left"/>let mut _545: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _546: state::margin_calculation::MarginContext;<br align="left"/>let mut _547: isize;<br align="left"/>let _548: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _549: !;<br align="left"/>let mut _550: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _551: state::margin_calculation::MarginCalculation;<br align="left"/>let _552: u128;<br align="left"/>let mut _553: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _554: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _555: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _556: isize;<br align="left"/>let _557: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _558: !;<br align="left"/>let mut _559: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _560: u128;<br align="left"/>let _561: u128;<br align="left"/>let mut _562: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _563: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _564: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _565: isize;<br align="left"/>let _566: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _567: !;<br align="left"/>let mut _568: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _569: u128;<br align="left"/>let mut _570: u64;<br align="left"/>let mut _571: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _572: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _573: u128;<br align="left"/>let mut _574: u128;<br align="left"/>let mut _575: u128;<br align="left"/>let mut _576: isize;<br align="left"/>let _577: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _578: !;<br align="left"/>let mut _579: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _580: u64;<br align="left"/>let _581: ();<br align="left"/>let mut _582: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _583: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _584: &amp;ReErased mut state::user::User;<br align="left"/>let mut _585: u64;<br align="left"/>let mut _586: isize;<br align="left"/>let _587: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _588: !;<br align="left"/>let mut _589: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _590: ();<br align="left"/>let _591: ();<br align="left"/>let mut _592: bool;<br align="left"/>let mut _593: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _594: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _595: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _596: isize;<br align="left"/>let _597: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _598: !;<br align="left"/>let mut _599: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _600: bool;<br align="left"/>let mut _601: !;<br align="left"/>let _602: ();<br align="left"/>let _603: ();<br align="left"/>let mut _604: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _605: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _606: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _607: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _608: &amp;ReErased [u8];<br align="left"/>let _609: &amp;ReErased [u8];<br align="left"/>let mut _610: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _611: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _612: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _613: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _614: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _615: state::events::LiquidationRecord;<br align="left"/>let mut _616: i64;<br align="left"/>let mut _617: u16;<br align="left"/>let mut _618: state::events::LiquidationType;<br align="left"/>let mut _619: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _620: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _621: u128;<br align="left"/>let mut _622: i128;<br align="left"/>let mut _623: bool;<br align="left"/>let mut _624: &amp;ReErased state::user::User;<br align="left"/>let mut _625: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _626: u64;<br align="left"/>let mut _627: state::events::LiquidatePerpRecord;<br align="left"/>let mut _628: u16;<br align="left"/>let mut _629: i64;<br align="left"/>let mut _630: u64;<br align="left"/>let mut _631: state::events::LiquidatePerpRecord;<br align="left"/>let mut _632: state::events::LiquidationRecord;<br align="left"/>let _633: ();<br align="left"/>let mut _634: &amp;ReErased mut state::user::User;<br align="left"/>let mut _635: ();<br align="left"/>let _636: ();<br align="left"/>let mut _637: bool;<br align="left"/>let mut _638: i64;<br align="left"/>let _639: usize;<br align="left"/>let mut _640: usize;<br align="left"/>let mut _641: bool;<br align="left"/>let mut _642: !;<br align="left"/>let _643: ();<br align="left"/>let mut _644: &amp;ReErased str;<br align="left"/>let _645: &amp;ReErased str;<br align="left"/>let mut _646: ();<br align="left"/>let _647: u64;<br align="left"/>let mut _648: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _649: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _650: u64;<br align="left"/>let mut _651: u64;<br align="left"/>let mut _652: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _653: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _654: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _655: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _656: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _657: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _658: &amp;ReErased u16;<br align="left"/>let _659: &amp;ReErased u16;<br align="left"/>let mut _660: isize;<br align="left"/>let _661: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _662: !;<br align="left"/>let mut _663: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _664: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _665: isize;<br align="left"/>let _666: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _667: !;<br align="left"/>let mut _668: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _669: u64;<br align="left"/>let _670: ();<br align="left"/>let mut _671: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _672: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _673: bool;<br align="left"/>let mut _674: u64;<br align="left"/>let mut _675: ();<br align="left"/>let _676: error::ErrorCode;<br align="left"/>let _677: ();<br align="left"/>let mut _678: &amp;ReErased str;<br align="left"/>let _679: &amp;ReErased str;<br align="left"/>let mut _680: &amp;ReErased std::string::String;<br align="left"/>let _681: &amp;ReErased std::string::String;<br align="left"/>let _682: std::string::String;<br align="left"/>let _683: std::string::String;<br align="left"/>let mut _684: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _685: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _686: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _687: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _688: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _689: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _690: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _691: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _692: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _693: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _694: &amp;ReErased error::ErrorCode;<br align="left"/>let _695: &amp;ReErased error::ErrorCode;<br align="left"/>let _696: ();<br align="left"/>let mut _697: &amp;ReErased str;<br align="left"/>let _698: &amp;ReErased str;<br align="left"/>let mut _699: &amp;ReErased std::string::String;<br align="left"/>let _700: &amp;ReErased std::string::String;<br align="left"/>let _701: std::string::String;<br align="left"/>let _702: std::string::String;<br align="left"/>let mut _703: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _704: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _705: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _706: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _707: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _708: error::ErrorCode;<br align="left"/>let mut _709: isize;<br align="left"/>let _710: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _711: !;<br align="left"/>let mut _712: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _713: ();<br align="left"/>let _714: ();<br align="left"/>let _715: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _716: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _717: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _718: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _719: &amp;ReErased u16;<br align="left"/>let _720: &amp;ReErased u16;<br align="left"/>let mut _721: isize;<br align="left"/>let _722: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _723: !;<br align="left"/>let mut _724: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _725: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _726: bool;<br align="left"/>let mut _727: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _728: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _729: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _730: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _731: state::perp_market::MarketStatus;<br align="left"/>let _732: bool;<br align="left"/>let mut _733: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _734: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _735: i64;<br align="left"/>let mut _736: i64;<br align="left"/>let mut _737: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _738: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _739: i64;<br align="left"/>let mut _740: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _741: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _742: u64;<br align="left"/>let mut _743: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _744: isize;<br align="left"/>let _745: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _746: !;<br align="left"/>let mut _747: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _748: i64;<br align="left"/>let mut _749: isize;<br align="left"/>let _750: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _751: !;<br align="left"/>let mut _752: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _753: bool;<br align="left"/>let _754: ();<br align="left"/>let mut _755: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _756: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _757: bool;<br align="left"/>let mut _758: ();<br align="left"/>let _759: error::ErrorCode;<br align="left"/>let _760: ();<br align="left"/>let mut _761: &amp;ReErased str;<br align="left"/>let _762: &amp;ReErased str;<br align="left"/>let mut _763: &amp;ReErased std::string::String;<br align="left"/>let _764: &amp;ReErased std::string::String;<br align="left"/>let _765: std::string::String;<br align="left"/>let _766: std::string::String;<br align="left"/>let mut _767: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _768: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _769: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _770: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _771: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _772: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _773: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _774: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _775: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _776: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _777: &amp;ReErased error::ErrorCode;<br align="left"/>let _778: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _779: error::ErrorCode;<br align="left"/>let mut _780: isize;<br align="left"/>let _781: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _782: !;<br align="left"/>let mut _783: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _784: ();<br align="left"/>let _785: u64;<br align="left"/>let mut _786: i64;<br align="left"/>let _787: usize;<br align="left"/>let mut _788: usize;<br align="left"/>let mut _789: bool;<br align="left"/>let _790: u32;<br align="left"/>let mut _791: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _792: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _793: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _794: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _795: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _796: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _797: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _798: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _799: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _800: &amp;ReErased u16;<br align="left"/>let _801: &amp;ReErased u16;<br align="left"/>let mut _802: isize;<br align="left"/>let _803: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _804: !;<br align="left"/>let mut _805: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _806: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _807: u128;<br align="left"/>let mut _808: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _809: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _810: u64;<br align="left"/>let mut _811: isize;<br align="left"/>let _812: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _813: !;<br align="left"/>let mut _814: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _815: u128;<br align="left"/>let mut _816: math::margin::MarginRequirementType;<br align="left"/>let mut _817: bool;<br align="left"/>let mut _818: &amp;ReErased state::user::User;<br align="left"/>let mut _819: math::margin::MarginRequirementType;<br align="left"/>let mut _820: isize;<br align="left"/>let _821: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _822: !;<br align="left"/>let mut _823: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _824: u32;<br align="left"/>let _825: u32;<br align="left"/>let mut _826: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _827: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _828: u32;<br align="left"/>let mut _829: u32;<br align="left"/>let mut _830: isize;<br align="left"/>let _831: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _832: !;<br align="left"/>let mut _833: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _834: u32;<br align="left"/>let _835: u128;<br align="left"/>let mut _836: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _837: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _838: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _839: isize;<br align="left"/>let _840: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _841: !;<br align="left"/>let mut _842: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _843: u128;<br align="left"/>let _844: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _845: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _846: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _847: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _848: &amp;ReErased u16;<br align="left"/>let _849: &amp;ReErased u16;<br align="left"/>let mut _850: isize;<br align="left"/>let _851: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _852: !;<br align="left"/>let mut _853: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _854: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _855: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _856: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _857: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _858: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _859: &amp;ReErased u16;<br align="left"/>let _860: &amp;ReErased u16;<br align="left"/>let _861: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _862: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _863: isize;<br align="left"/>let _864: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _865: !;<br align="left"/>let mut _866: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _867: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _868: i64;<br align="left"/>let mut _869: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _870: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _871: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _872: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _873: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _874: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _875: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _876: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _877: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _878: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _879: isize;<br align="left"/>let _880: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _881: !;<br align="left"/>let mut _882: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _883: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _884: u32;<br align="left"/>let mut _885: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _886: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _887: u32;<br align="left"/>let mut _888: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _889: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _890: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _891: bool;<br align="left"/>let mut _892: &amp;ReErased state::user::User;<br align="left"/>let mut _893: math::margin::MarginRequirementType;<br align="left"/>let mut _894: u32;<br align="left"/>let mut _895: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _896: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _897: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _898: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _899: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _900: isize;<br align="left"/>let _901: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _902: !;<br align="left"/>let mut _903: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _904: u32;<br align="left"/>let mut _905: u64;<br align="left"/>let mut _906: u64;<br align="left"/>let mut _907: isize;<br align="left"/>let _908: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _909: !;<br align="left"/>let mut _910: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _911: u32;<br align="left"/>let _912: u32;<br align="left"/>let mut _913: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _914: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _915: u128;<br align="left"/>let mut _916: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _917: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _918: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _919: u128;<br align="left"/>let mut _920: isize;<br align="left"/>let _921: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _922: !;<br align="left"/>let mut _923: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _924: u128;<br align="left"/>let mut _925: u64;<br align="left"/>let mut _926: u32;<br align="left"/>let mut _927: u32;<br align="left"/>let mut _928: i64;<br align="left"/>let mut _929: i64;<br align="left"/>let mut _930: u32;<br align="left"/>let mut _931: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _932: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _933: isize;<br align="left"/>let _934: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _935: !;<br align="left"/>let mut _936: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _937: u32;<br align="left"/>let mut _938: u64;<br align="left"/>let mut _939: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _940: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _941: u128;<br align="left"/>let mut _942: u32;<br align="left"/>let mut _943: u32;<br align="left"/>let mut _944: u32;<br align="left"/>let mut _945: i64;<br align="left"/>let mut _946: i64;<br align="left"/>let mut _947: isize;<br align="left"/>let _948: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _949: !;<br align="left"/>let mut _950: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _951: u64;<br align="left"/>let _952: ();<br align="left"/>let mut _953: bool;<br align="left"/>let mut _954: u64;<br align="left"/>let mut _955: u64;<br align="left"/>let mut _956: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _957: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _958: u64;<br align="left"/>let mut _959: u64;<br align="left"/>let mut _960: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _961: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _962: isize;<br align="left"/>let _963: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _964: !;<br align="left"/>let mut _965: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _966: u64;<br align="left"/>let _967: ();<br align="left"/>let mut _968: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _969: ();<br align="left"/>let mut _970: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _971: u128;<br align="left"/>let mut _972: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _973: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _974: &amp;ReErased state::user::User;<br align="left"/>let mut _975: u128;<br align="left"/>let mut _976: u64;<br align="left"/>let mut _977: u128;<br align="left"/>let mut _978: u128;<br align="left"/>let mut _979: isize;<br align="left"/>let _980: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _981: !;<br align="left"/>let mut _982: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _983: u128;<br align="left"/>let _984: u64;<br align="left"/>let mut _985: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _986: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _987: u128;<br align="left"/>let mut _988: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _989: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _990: u128;<br align="left"/>let mut _991: u128;<br align="left"/>let mut _992: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _993: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _994: u64;<br align="left"/>let mut _995: isize;<br align="left"/>let _996: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _997: !;<br align="left"/>let mut _998: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _999: u128;<br align="left"/>let mut _1000: u128;<br align="left"/>let mut _1001: isize;<br align="left"/>let _1002: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1003: !;<br align="left"/>let mut _1004: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1005: u128;<br align="left"/>let mut _1006: isize;<br align="left"/>let _1007: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1008: !;<br align="left"/>let mut _1009: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1010: u64;<br align="left"/>let _1011: ();<br align="left"/>let mut _1012: bool;<br align="left"/>let mut _1013: u64;<br align="left"/>let mut _1014: !;<br align="left"/>let _1015: ();<br align="left"/>let mut _1016: &amp;ReErased str;<br align="left"/>let _1017: &amp;ReErased str;<br align="left"/>let mut _1018: ();<br align="left"/>let _1019: u64;<br align="left"/>let mut _1020: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1021: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1022: u128;<br align="left"/>let mut _1023: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1024: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1025: i128;<br align="left"/>let mut _1026: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1027: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1028: u64;<br align="left"/>let mut _1029: isize;<br align="left"/>let _1030: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1031: !;<br align="left"/>let mut _1032: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1033: i128;<br align="left"/>let mut _1034: i64;<br align="left"/>let mut _1035: isize;<br align="left"/>let _1036: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1037: !;<br align="left"/>let mut _1038: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1039: u128;<br align="left"/>let mut _1040: isize;<br align="left"/>let _1041: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1042: !;<br align="left"/>let mut _1043: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1044: u64;<br align="left"/>let _1045: u64;<br align="left"/>let mut _1046: bool;<br align="left"/>let mut _1047: u64;<br align="left"/>let mut _1048: u64;<br align="left"/>let mut _1049: (u64, bool);<br align="left"/>let _1050: u64;<br align="left"/>let mut _1051: u64;<br align="left"/>let mut _1052: u64;<br align="left"/>let mut _1053: u64;<br align="left"/>let mut _1054: u64;<br align="left"/>let mut _1055: u64;<br align="left"/>let mut _1056: u64;<br align="left"/>let _1057: u64;<br align="left"/>let mut _1058: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1059: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1060: u64;<br align="left"/>let mut _1061: u64;<br align="left"/>let mut _1062: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1063: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1064: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1065: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1066: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1067: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1068: &amp;ReErased u16;<br align="left"/>let _1069: &amp;ReErased u16;<br align="left"/>let mut _1070: isize;<br align="left"/>let _1071: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1072: !;<br align="left"/>let mut _1073: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1074: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1075: isize;<br align="left"/>let _1076: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1077: !;<br align="left"/>let mut _1078: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1079: u64;<br align="left"/>let _1080: ();<br align="left"/>let mut _1081: isize;<br align="left"/>let _1082: u64;<br align="left"/>let _1083: u128;<br align="left"/>let mut _1084: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1085: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1086: i64;<br align="left"/>let mut _1087: isize;<br align="left"/>let _1088: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1089: !;<br align="left"/>let mut _1090: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1091: u128;<br align="left"/>let _1092: u128;<br align="left"/>let mut _1093: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1094: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1095: u128;<br align="left"/>let mut _1096: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1097: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1098: u128;<br align="left"/>let mut _1099: u128;<br align="left"/>let mut _1100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1101: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1102: u32;<br align="left"/>let mut _1103: isize;<br align="left"/>let _1104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1105: !;<br align="left"/>let mut _1106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1107: u128;<br align="left"/>let mut _1108: isize;<br align="left"/>let _1109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1110: !;<br align="left"/>let mut _1111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1112: u128;<br align="left"/>let mut _1113: isize;<br align="left"/>let _1114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1115: !;<br align="left"/>let mut _1116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1117: u128;<br align="left"/>let mut _1118: controller::position::PositionDirection;<br align="left"/>let mut _1119: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1120: usize;<br align="left"/>let mut _1121: usize;<br align="left"/>let mut _1122: bool;<br align="left"/>let mut _1123: isize;<br align="left"/>let _1124: u128;<br align="left"/>let mut _1125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1126: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1127: u128;<br align="left"/>let mut _1128: u128;<br align="left"/>let mut _1129: isize;<br align="left"/>let _1130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1131: !;<br align="left"/>let mut _1132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1133: u128;<br align="left"/>let mut _1134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1135: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1136: bool;<br align="left"/>let mut _1137: u128;<br align="left"/>let mut _1138: u128;<br align="left"/>let mut _1139: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1140: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1141: u64;<br align="left"/>let mut _1142: isize;<br align="left"/>let _1143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1144: !;<br align="left"/>let mut _1145: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1146: u128;<br align="left"/>let mut _1147: ();<br align="left"/>let _1148: error::ErrorCode;<br align="left"/>let _1149: ();<br align="left"/>let mut _1150: &amp;ReErased str;<br align="left"/>let _1151: &amp;ReErased str;<br align="left"/>let mut _1152: &amp;ReErased std::string::String;<br align="left"/>let _1153: &amp;ReErased std::string::String;<br align="left"/>let _1154: std::string::String;<br align="left"/>let _1155: std::string::String;<br align="left"/>let mut _1156: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1157: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1158: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1159: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1160: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1161: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1164: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1165: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1166: &amp;ReErased error::ErrorCode;<br align="left"/>let _1167: &amp;ReErased error::ErrorCode;<br align="left"/>let _1168: ();<br align="left"/>let mut _1169: &amp;ReErased str;<br align="left"/>let _1170: &amp;ReErased str;<br align="left"/>let mut _1171: &amp;ReErased std::string::String;<br align="left"/>let _1172: &amp;ReErased std::string::String;<br align="left"/>let _1173: std::string::String;<br align="left"/>let _1174: std::string::String;<br align="left"/>let mut _1175: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1176: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1177: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1178: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1179: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1180: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1181: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1182: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1183: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1184: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1185: &amp;ReErased u64;<br align="left"/>let _1186: &amp;ReErased u64;<br align="left"/>let mut _1187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1188: &amp;ReErased u128;<br align="left"/>let _1189: &amp;ReErased u128;<br align="left"/>let mut _1190: error::ErrorCode;<br align="left"/>let mut _1191: isize;<br align="left"/>let _1192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1193: !;<br align="left"/>let mut _1194: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1195: ();<br align="left"/>let _1196: u128;<br align="left"/>let mut _1197: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1198: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1199: u128;<br align="left"/>let mut _1200: u128;<br align="left"/>let mut _1201: isize;<br align="left"/>let _1202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1203: !;<br align="left"/>let mut _1204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1205: u128;<br align="left"/>let mut _1206: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1207: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1208: bool;<br align="left"/>let mut _1209: u128;<br align="left"/>let mut _1210: u128;<br align="left"/>let mut _1211: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1212: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1213: u64;<br align="left"/>let mut _1214: isize;<br align="left"/>let _1215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1216: !;<br align="left"/>let mut _1217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1218: u128;<br align="left"/>let mut _1219: ();<br align="left"/>let _1220: error::ErrorCode;<br align="left"/>let _1221: ();<br align="left"/>let mut _1222: &amp;ReErased str;<br align="left"/>let _1223: &amp;ReErased str;<br align="left"/>let mut _1224: &amp;ReErased std::string::String;<br align="left"/>let _1225: &amp;ReErased std::string::String;<br align="left"/>let _1226: std::string::String;<br align="left"/>let _1227: std::string::String;<br align="left"/>let mut _1228: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1229: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1230: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1231: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1232: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1233: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1234: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1235: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1236: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1237: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1238: &amp;ReErased error::ErrorCode;<br align="left"/>let _1239: &amp;ReErased error::ErrorCode;<br align="left"/>let _1240: ();<br align="left"/>let mut _1241: &amp;ReErased str;<br align="left"/>let _1242: &amp;ReErased str;<br align="left"/>let mut _1243: &amp;ReErased std::string::String;<br align="left"/>let _1244: &amp;ReErased std::string::String;<br align="left"/>let _1245: std::string::String;<br align="left"/>let _1246: std::string::String;<br align="left"/>let mut _1247: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1248: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1249: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1250: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1251: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1252: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1253: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1254: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1255: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1256: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1257: &amp;ReErased u64;<br align="left"/>let _1258: &amp;ReErased u64;<br align="left"/>let mut _1259: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1260: &amp;ReErased u128;<br align="left"/>let _1261: &amp;ReErased u128;<br align="left"/>let mut _1262: error::ErrorCode;<br align="left"/>let mut _1263: isize;<br align="left"/>let _1264: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1265: !;<br align="left"/>let mut _1266: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1267: ();<br align="left"/>let _1268: u64;<br align="left"/>let mut _1269: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1270: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1271: u128;<br align="left"/>let mut _1272: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1273: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1274: i128;<br align="left"/>let mut _1275: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1276: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1277: u64;<br align="left"/>let mut _1278: isize;<br align="left"/>let _1279: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1280: !;<br align="left"/>let mut _1281: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1282: i128;<br align="left"/>let mut _1283: i64;<br align="left"/>let mut _1284: isize;<br align="left"/>let _1285: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1286: !;<br align="left"/>let mut _1287: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1288: u128;<br align="left"/>let mut _1289: isize;<br align="left"/>let _1290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1291: !;<br align="left"/>let mut _1292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1293: u64;<br align="left"/>let _1294: i64;<br align="left"/>let mut _1295: i64;<br align="left"/>let mut _1296: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1297: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1298: u128;<br align="left"/>let mut _1299: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1300: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1301: u128;<br align="left"/>let mut _1302: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1303: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1304: u128;<br align="left"/>let mut _1305: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1306: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1307: u64;<br align="left"/>let mut _1308: isize;<br align="left"/>let _1309: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1310: !;<br align="left"/>let mut _1311: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1312: u128;<br align="left"/>let mut _1313: u128;<br align="left"/>let mut _1314: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1315: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1316: u32;<br align="left"/>let mut _1317: isize;<br align="left"/>let _1318: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1319: !;<br align="left"/>let mut _1320: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1321: u128;<br align="left"/>let mut _1322: isize;<br align="left"/>let _1323: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1324: !;<br align="left"/>let mut _1325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1326: u128;<br align="left"/>let mut _1327: isize;<br align="left"/>let _1328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1329: !;<br align="left"/>let mut _1330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1331: u128;<br align="left"/>let mut _1332: isize;<br align="left"/>let _1333: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1334: !;<br align="left"/>let mut _1335: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1336: i64;<br align="left"/>let mut _1337: bool;<br align="left"/>let _1338: i64;<br align="left"/>let mut _1339: i64;<br align="left"/>let mut _1340: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1341: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1342: u128;<br align="left"/>let mut _1343: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1344: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1345: u128;<br align="left"/>let mut _1346: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1347: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1348: u128;<br align="left"/>let mut _1349: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1350: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1351: u64;<br align="left"/>let mut _1352: isize;<br align="left"/>let _1353: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1354: !;<br align="left"/>let mut _1355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1356: u128;<br align="left"/>let mut _1357: u128;<br align="left"/>let mut _1358: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1359: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1360: u32;<br align="left"/>let mut _1361: isize;<br align="left"/>let _1362: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1363: !;<br align="left"/>let mut _1364: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1365: u128;<br align="left"/>let mut _1366: isize;<br align="left"/>let _1367: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1368: !;<br align="left"/>let mut _1369: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1370: u128;<br align="left"/>let mut _1371: isize;<br align="left"/>let _1372: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1373: !;<br align="left"/>let mut _1374: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1375: u128;<br align="left"/>let mut _1376: isize;<br align="left"/>let _1377: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1378: !;<br align="left"/>let mut _1379: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1380: i64;<br align="left"/>let mut _1381: bool;<br align="left"/>let _1382: ();<br align="left"/>let mut _1383: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1384: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1385: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _1386: u8;<br align="left"/>let mut _1387: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1388: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1389: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1390: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1391: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1392: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1393: &amp;ReErased u16;<br align="left"/>let _1394: &amp;ReErased u16;<br align="left"/>let mut _1395: isize;<br align="left"/>let _1396: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1397: !;<br align="left"/>let mut _1398: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1399: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1400: u64;<br align="left"/>let mut _1401: i64;<br align="left"/>let mut _1402: isize;<br align="left"/>let _1403: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1404: !;<br align="left"/>let mut _1405: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1406: ();<br align="left"/>let _1407: ();<br align="left"/>let mut _1408: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1409: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1410: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _1411: u8;<br align="left"/>let mut _1412: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1413: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1414: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1415: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1416: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1417: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1418: &amp;ReErased u16;<br align="left"/>let _1419: &amp;ReErased u16;<br align="left"/>let mut _1420: isize;<br align="left"/>let _1421: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1422: !;<br align="left"/>let mut _1423: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1424: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1425: u64;<br align="left"/>let mut _1426: i64;<br align="left"/>let mut _1427: isize;<br align="left"/>let _1428: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1429: !;<br align="left"/>let mut _1430: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1431: ();<br align="left"/>let _1432: controller::position::PositionDelta;<br align="left"/>let mut _1433: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, controller::position::PositionDelta&gt;;<br align="left"/>let mut _1434: std::result::Result&lt;controller::position::PositionDelta, error::ErrorCode&gt;;<br align="left"/>let mut _1435: u64;<br align="left"/>let mut _1436: u64;<br align="left"/>let mut _1437: controller::position::PositionDirection;<br align="left"/>let mut _1438: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1439: usize;<br align="left"/>let mut _1440: usize;<br align="left"/>let mut _1441: bool;<br align="left"/>let mut _1442: isize;<br align="left"/>let _1443: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1444: !;<br align="left"/>let mut _1445: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1446: controller::position::PositionDelta;<br align="left"/>let _1447: controller::position::PositionDelta;<br align="left"/>let mut _1448: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, controller::position::PositionDelta&gt;;<br align="left"/>let mut _1449: std::result::Result&lt;controller::position::PositionDelta, error::ErrorCode&gt;;<br align="left"/>let mut _1450: u64;<br align="left"/>let mut _1451: u64;<br align="left"/>let mut _1452: controller::position::PositionDirection;<br align="left"/>let mut _1453: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1454: usize;<br align="left"/>let mut _1455: usize;<br align="left"/>let mut _1456: bool;<br align="left"/>let mut _1457: isize;<br align="left"/>let _1458: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1459: !;<br align="left"/>let mut _1460: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1461: controller::position::PositionDelta;<br align="left"/>let _1462: controller::position::PositionDirection;<br align="left"/>let _1463: controller::position::PositionDirection;<br align="left"/>let _1464: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let _1465: controller::position::PositionDirection;<br align="left"/>let _1466: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _1467: (controller::position::PositionDirection, controller::position::PositionDirection, std::option::Option&lt;(u64, u64)&gt;, controller::position::PositionDirection, std::option::Option&lt;(u64, u64)&gt;);<br align="left"/>let mut _1468: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1469: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1470: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1471: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1472: &amp;ReErased u16;<br align="left"/>let _1473: &amp;ReErased u16;<br align="left"/>let mut _1474: isize;<br align="left"/>let _1475: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1476: !;<br align="left"/>let mut _1477: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1478: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1479: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1480: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _1481: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1482: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1483: u16;<br align="left"/>let mut _1484: isize;<br align="left"/>let _1485: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1486: !;<br align="left"/>let mut _1487: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1488: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _1489: controller::position::PositionDirection;<br align="left"/>let mut _1490: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1491: controller::position::PositionDirection;<br align="left"/>let mut _1492: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1493: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _1494: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _1495: controller::position::PositionDirection;<br align="left"/>let _1496: i64;<br align="left"/>let mut _1497: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1498: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1499: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1500: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1501: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1502: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1503: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1504: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let _1505: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let mut _1506: isize;<br align="left"/>let _1507: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1508: !;<br align="left"/>let mut _1509: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1510: i64;<br align="left"/>let _1511: ();<br align="left"/>let mut _1512: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1513: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1514: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1515: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1516: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1517: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1518: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1519: i64;<br align="left"/>let mut _1520: isize;<br align="left"/>let _1521: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1522: !;<br align="left"/>let mut _1523: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1524: ();<br align="left"/>let _1525: ();<br align="left"/>let mut _1526: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1527: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1528: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1529: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1530: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1531: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1532: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1533: i64;<br align="left"/>let mut _1534: isize;<br align="left"/>let _1535: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1536: !;<br align="left"/>let mut _1537: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1538: ();<br align="left"/>let _1539: ();<br align="left"/>let mut _1540: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1541: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1542: bool;<br align="left"/>let mut _1543: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1544: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1545: u64;<br align="left"/>let mut _1546: i64;<br align="left"/>let mut _1547: u64;<br align="left"/>let mut _1548: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1549: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1550: isize;<br align="left"/>let _1551: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1552: !;<br align="left"/>let mut _1553: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1554: bool;<br align="left"/>let mut _1555: ();<br align="left"/>let _1556: error::ErrorCode;<br align="left"/>let _1557: ();<br align="left"/>let mut _1558: &amp;ReErased str;<br align="left"/>let _1559: &amp;ReErased str;<br align="left"/>let mut _1560: &amp;ReErased std::string::String;<br align="left"/>let _1561: &amp;ReErased std::string::String;<br align="left"/>let _1562: std::string::String;<br align="left"/>let _1563: std::string::String;<br align="left"/>let mut _1564: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1565: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1566: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1567: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1568: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1569: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1570: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1571: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1572: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1573: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1574: &amp;ReErased error::ErrorCode;<br align="left"/>let _1575: &amp;ReErased error::ErrorCode;<br align="left"/>let _1576: ();<br align="left"/>let mut _1577: &amp;ReErased str;<br align="left"/>let _1578: &amp;ReErased str;<br align="left"/>let mut _1579: &amp;ReErased std::string::String;<br align="left"/>let _1580: &amp;ReErased std::string::String;<br align="left"/>let _1581: std::string::String;<br align="left"/>let _1582: std::string::String;<br align="left"/>let mut _1583: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1584: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1585: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1586: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1587: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1588: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1589: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1590: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1591: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1592: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1593: &amp;ReErased i64;<br align="left"/>let _1594: &amp;ReErased i64;<br align="left"/>let mut _1595: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1596: &amp;ReErased u64;<br align="left"/>let _1597: &amp;ReErased u64;<br align="left"/>let _1598: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1599: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1600: error::ErrorCode;<br align="left"/>let mut _1601: isize;<br align="left"/>let _1602: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1603: !;<br align="left"/>let mut _1604: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1605: ();<br align="left"/>let _1606: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1607: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::PerpPosition&gt;;<br align="left"/>let mut _1608: std::result::Result&lt;&amp;ReErased mut state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1609: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1610: u16;<br align="left"/>let mut _1611: isize;<br align="left"/>let _1612: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1613: !;<br align="left"/>let mut _1614: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1615: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _1616: controller::position::PositionDirection;<br align="left"/>let mut _1617: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _1618: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _1619: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _1620: controller::position::PositionDirection;<br align="left"/>let _1621: i64;<br align="left"/>let mut _1622: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1623: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1624: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1625: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1626: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1627: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1628: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1629: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let _1630: &amp;ReErased controller::position::PositionDelta;<br align="left"/>let mut _1631: isize;<br align="left"/>let _1632: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1633: !;<br align="left"/>let mut _1634: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1635: i64;<br align="left"/>let _1636: ();<br align="left"/>let mut _1637: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1638: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1639: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _1640: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1641: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1642: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1643: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1644: i64;<br align="left"/>let mut _1645: i64;<br align="left"/>let mut _1646: bool;<br align="left"/>let mut _1647: isize;<br align="left"/>let _1648: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1649: !;<br align="left"/>let mut _1650: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1651: ();<br align="left"/>let _1652: ();<br align="left"/>let mut _1653: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1654: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1655: bool;<br align="left"/>let mut _1656: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1657: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1658: u64;<br align="left"/>let mut _1659: i64;<br align="left"/>let mut _1660: u64;<br align="left"/>let mut _1661: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1662: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1663: isize;<br align="left"/>let _1664: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1665: !;<br align="left"/>let mut _1666: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1667: bool;<br align="left"/>let mut _1668: ();<br align="left"/>let _1669: error::ErrorCode;<br align="left"/>let _1670: ();<br align="left"/>let mut _1671: &amp;ReErased str;<br align="left"/>let _1672: &amp;ReErased str;<br align="left"/>let mut _1673: &amp;ReErased std::string::String;<br align="left"/>let _1674: &amp;ReErased std::string::String;<br align="left"/>let _1675: std::string::String;<br align="left"/>let _1676: std::string::String;<br align="left"/>let mut _1677: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1678: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1679: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1680: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1681: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1682: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1683: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1684: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1685: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1686: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1687: &amp;ReErased error::ErrorCode;<br align="left"/>let _1688: &amp;ReErased error::ErrorCode;<br align="left"/>let _1689: ();<br align="left"/>let mut _1690: &amp;ReErased str;<br align="left"/>let _1691: &amp;ReErased str;<br align="left"/>let mut _1692: &amp;ReErased std::string::String;<br align="left"/>let _1693: &amp;ReErased std::string::String;<br align="left"/>let _1694: std::string::String;<br align="left"/>let _1695: std::string::String;<br align="left"/>let mut _1696: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1697: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1698: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1699: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1700: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1701: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1702: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1703: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1704: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1705: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1706: &amp;ReErased i64;<br align="left"/>let _1707: &amp;ReErased i64;<br align="left"/>let mut _1708: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1709: &amp;ReErased u64;<br align="left"/>let _1710: &amp;ReErased u64;<br align="left"/>let _1711: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1712: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1713: error::ErrorCode;<br align="left"/>let mut _1714: isize;<br align="left"/>let _1715: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1716: !;<br align="left"/>let mut _1717: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1718: ();<br align="left"/>let mut _1719: u128;<br align="left"/>let mut _1720: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1721: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1722: u128;<br align="left"/>let mut _1723: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1724: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1725: u128;<br align="left"/>let mut _1726: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1727: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1728: u64;<br align="left"/>let mut _1729: i64;<br align="left"/>let mut _1730: isize;<br align="left"/>let _1731: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1732: !;<br align="left"/>let mut _1733: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1734: u128;<br align="left"/>let mut _1735: isize;<br align="left"/>let _1736: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1737: !;<br align="left"/>let mut _1738: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1739: u128;<br align="left"/>let mut _1740: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1741: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1742: controller::position::PositionDirection;<br align="left"/>let mut _1743: controller::position::PositionDirection;<br align="left"/>let mut _1744: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _1745: controller::position::PositionDirection;<br align="left"/>let mut _1746: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let _1747: u64;<br align="left"/>let mut _1748: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1749: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, state::margin_calculation::MarginCalculation)&gt;;<br align="left"/>let mut _1750: std::result::Result&lt;(u64, state::margin_calculation::MarginCalculation), error::ErrorCode&gt;;<br align="left"/>let mut _1751: &amp;ReErased state::user::User;<br align="left"/>let mut _1752: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1753: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1754: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1755: u32;<br align="left"/>let mut _1756: u128;<br align="left"/>let mut _1757: isize;<br align="left"/>let _1758: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1759: !;<br align="left"/>let mut _1760: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1761: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1762: u64;<br align="left"/>let mut _1763: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1764: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1765: u64;<br align="left"/>let mut _1766: u64;<br align="left"/>let mut _1767: isize;<br align="left"/>let _1768: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1769: !;<br align="left"/>let mut _1770: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1771: u64;<br align="left"/>let _1772: ();<br align="left"/>let mut _1773: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1774: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1775: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1776: u64;<br align="left"/>let mut _1777: isize;<br align="left"/>let _1778: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1779: !;<br align="left"/>let mut _1780: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1781: ();<br align="left"/>let _1782: ();<br align="left"/>let mut _1783: bool;<br align="left"/>let mut _1784: u64;<br align="left"/>let mut _1785: u64;<br align="left"/>let _1786: ();<br align="left"/>let mut _1787: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1788: bool;<br align="left"/>let mut _1789: &amp;ReErased state::user::User;<br align="left"/>let _1790: ();<br align="left"/>let mut _1791: &amp;ReErased mut state::user::User;<br align="left"/>let _1792: bool;<br align="left"/>let mut _1793: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1794: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1795: &amp;ReErased state::user::User;<br align="left"/>let mut _1796: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1797: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1798: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1799: isize;<br align="left"/>let _1800: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1801: !;<br align="left"/>let mut _1802: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1803: bool;<br align="left"/>let _1804: ();<br align="left"/>let mut _1805: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1806: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1807: bool;<br align="left"/>let mut _1808: ();<br align="left"/>let _1809: error::ErrorCode;<br align="left"/>let _1810: ();<br align="left"/>let mut _1811: &amp;ReErased str;<br align="left"/>let _1812: &amp;ReErased str;<br align="left"/>let mut _1813: &amp;ReErased std::string::String;<br align="left"/>let _1814: &amp;ReErased std::string::String;<br align="left"/>let _1815: std::string::String;<br align="left"/>let _1816: std::string::String;<br align="left"/>let mut _1817: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1818: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1819: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1820: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1821: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1822: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1823: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1824: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1825: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1826: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1827: &amp;ReErased error::ErrorCode;<br align="left"/>let _1828: &amp;ReErased error::ErrorCode;<br align="left"/>let _1829: ();<br align="left"/>let mut _1830: &amp;ReErased str;<br align="left"/>let _1831: &amp;ReErased str;<br align="left"/>let mut _1832: error::ErrorCode;<br align="left"/>let mut _1833: isize;<br align="left"/>let _1834: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1835: !;<br align="left"/>let mut _1836: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1837: ();<br align="left"/>let _1838: u32;<br align="left"/>let _1839: u32;<br align="left"/>let mut _1840: u32;<br align="left"/>let mut _1841: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1842: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1843: u32;<br align="left"/>let mut _1844: std::option::Option&lt;u32&gt;;<br align="left"/>let _1845: u32;<br align="left"/>let _1846: u32;<br align="left"/>let mut _1847: u32;<br align="left"/>let mut _1848: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1849: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1850: u32;<br align="left"/>let mut _1851: std::option::Option&lt;u32&gt;;<br align="left"/>let _1852: u64;<br align="left"/>let mut _1853: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1854: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _1855: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1856: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1857: &amp;ReErased u16;<br align="left"/>let _1858: &amp;ReErased u16;<br align="left"/>let mut _1859: isize;<br align="left"/>let _1860: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1861: !;<br align="left"/>let mut _1862: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1863: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1864: u64;<br align="left"/>let mut _1865: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _1866: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _1867: u64;<br align="left"/>let mut _1868: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1869: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1870: u64;<br align="left"/>let mut _1871: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1872: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _1873: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _1874: state::user::Order;<br align="left"/>let mut _1875: u64;<br align="left"/>let mut _1876: u64;<br align="left"/>let mut _1877: u32;<br align="left"/>let mut _1878: u16;<br align="left"/>let mut _1879: state::user::OrderStatus;<br align="left"/>let mut _1880: state::user::OrderType;<br align="left"/>let mut _1881: state::user::MarketType;<br align="left"/>let mut _1882: controller::position::PositionDirection;<br align="left"/>let mut _1883: controller::position::PositionDirection;<br align="left"/>let mut _1884: state::user::Order;<br align="left"/>let _1885: ();<br align="left"/>let _1886: ();<br align="left"/>let mut _1887: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _1888: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1889: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1890: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _1891: &amp;ReErased [u8];<br align="left"/>let _1892: &amp;ReErased [u8];<br align="left"/>let mut _1893: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1894: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1895: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _1896: &amp;ReErased state::events::OrderRecord;<br align="left"/>let _1897: &amp;ReErased state::events::OrderRecord;<br align="left"/>let _1898: state::events::OrderRecord;<br align="left"/>let mut _1899: i64;<br align="left"/>let mut _1900: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1901: state::user::Order;<br align="left"/>let _1902: state::user::Order;<br align="left"/>let mut _1903: u64;<br align="left"/>let mut _1904: u64;<br align="left"/>let mut _1905: isize;<br align="left"/>let _1906: u64;<br align="left"/>let mut _1907: u64;<br align="left"/>let mut _1908: u32;<br align="left"/>let mut _1909: u16;<br align="left"/>let mut _1910: state::user::OrderStatus;<br align="left"/>let mut _1911: state::user::OrderType;<br align="left"/>let mut _1912: bool;<br align="left"/>let mut _1913: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1914: state::user::MarketType;<br align="left"/>let mut _1915: controller::position::PositionDirection;<br align="left"/>let mut _1916: controller::position::PositionDirection;<br align="left"/>let mut _1917: state::user::Order;<br align="left"/>let _1918: ();<br align="left"/>let _1919: ();<br align="left"/>let mut _1920: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _1921: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1922: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1923: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _1924: &amp;ReErased [u8];<br align="left"/>let _1925: &amp;ReErased [u8];<br align="left"/>let mut _1926: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1927: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1928: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _1929: &amp;ReErased state::events::OrderRecord;<br align="left"/>let _1930: &amp;ReErased state::events::OrderRecord;<br align="left"/>let _1931: state::events::OrderRecord;<br align="left"/>let mut _1932: i64;<br align="left"/>let mut _1933: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1934: state::user::Order;<br align="left"/>let _1935: std::option::Option&lt;u64&gt;;<br align="left"/>let _1936: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1937: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _1938: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;)&gt;;<br align="left"/>let mut _1939: std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _1940: u64;<br align="left"/>let mut _1941: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _1942: isize;<br align="left"/>let _1943: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1944: !;<br align="left"/>let mut _1945: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1946: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let _1947: std::option::Option&lt;u64&gt;;<br align="left"/>let _1948: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1949: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _1950: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;)&gt;;<br align="left"/>let mut _1951: std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _1952: u64;<br align="left"/>let mut _1953: std::option::Option&lt;(u64, u64)&gt;;<br align="left"/>let mut _1954: isize;<br align="left"/>let _1955: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1956: !;<br align="left"/>let mut _1957: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1958: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let _1959: state::events::OrderActionRecord;<br align="left"/>let mut _1960: i64;<br align="left"/>let mut _1961: state::events::OrderAction;<br align="left"/>let mut _1962: state::events::OrderActionExplanation;<br align="left"/>let mut _1963: u16;<br align="left"/>let mut _1964: state::user::MarketType;<br align="left"/>let mut _1965: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _1966: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1967: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1968: u64;<br align="left"/>let mut _1969: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1970: u64;<br align="left"/>let mut _1971: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1972: u64;<br align="left"/>let mut _1973: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1974: u64;<br align="left"/>let mut _1975: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1976: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1977: u64;<br align="left"/>let mut _1978: i64;<br align="left"/>let mut _1979: u64;<br align="left"/>let mut _1980: i64;<br align="left"/>let mut _1981: isize;<br align="left"/>let _1982: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1983: !;<br align="left"/>let mut _1984: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1985: u64;<br align="left"/>let mut _1986: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _1987: i64;<br align="left"/>let mut _1988: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1989: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _1990: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1991: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _1992: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1993: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _1994: u32;<br align="left"/>let mut _1995: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _1996: controller::position::PositionDirection;<br align="left"/>let mut _1997: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1998: u64;<br align="left"/>let mut _1999: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2000: u64;<br align="left"/>let mut _2001: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2002: u64;<br align="left"/>let mut _2003: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _2004: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _2005: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _2006: u32;<br align="left"/>let mut _2007: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _2008: controller::position::PositionDirection;<br align="left"/>let mut _2009: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2010: u64;<br align="left"/>let mut _2011: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2012: u64;<br align="left"/>let mut _2013: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2014: u64;<br align="left"/>let mut _2015: i64;<br align="left"/>let mut _2016: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2017: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2018: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2019: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _2020: std::option::Option&lt;u64&gt;;<br align="left"/>let _2021: ();<br align="left"/>let _2022: ();<br align="left"/>let mut _2023: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _2024: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _2025: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _2026: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _2027: &amp;ReErased [u8];<br align="left"/>let _2028: &amp;ReErased [u8];<br align="left"/>let mut _2029: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _2030: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _2031: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _2032: &amp;ReErased state::events::OrderActionRecord;<br align="left"/>let _2033: &amp;ReErased state::events::OrderActionRecord;<br align="left"/>let _2034: ();<br align="left"/>let _2035: ();<br align="left"/>let mut _2036: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _2037: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _2038: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _2039: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _2040: &amp;ReErased [u8];<br align="left"/>let _2041: &amp;ReErased [u8];<br align="left"/>let mut _2042: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _2043: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _2044: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _2045: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _2046: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _2047: state::events::LiquidationRecord;<br align="left"/>let mut _2048: i64;<br align="left"/>let mut _2049: u16;<br align="left"/>let mut _2050: state::events::LiquidationType;<br align="left"/>let mut _2051: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _2052: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _2053: u128;<br align="left"/>let mut _2054: i128;<br align="left"/>let mut _2055: bool;<br align="left"/>let mut _2056: &amp;ReErased state::user::User;<br align="left"/>let mut _2057: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _2058: u64;<br align="left"/>let mut _2059: state::events::LiquidatePerpRecord;<br align="left"/>let mut _2060: u16;<br align="left"/>let mut _2061: i64;<br align="left"/>let mut _2062: i64;<br align="left"/>let mut _2063: i64;<br align="left"/>let mut _2064: u64;<br align="left"/>let mut _2065: u32;<br align="left"/>let mut _2066: u32;<br align="left"/>let mut _2067: u64;<br align="left"/>let mut _2068: u64;<br align="left"/>let mut _2069: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _2070: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _2071: i64;<br align="left"/>let mut _2072: i64;<br align="left"/>let mut _2073: isize;<br align="left"/>let _2074: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _2075: !;<br align="left"/>let mut _2076: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _2077: u64;<br align="left"/>let mut _2078: u64;<br align="left"/>let mut _2079: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _2080: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _2081: i64;<br align="left"/>let mut _2082: i64;<br align="left"/>let mut _2083: isize;<br align="left"/>let _2084: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _2085: !;<br align="left"/>let mut _2086: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _2087: u64;<br align="left"/>let mut _2088: state::events::LiquidationRecord;<br align="left"/>let mut _2089: ();<br align="left"/>let mut _2090: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2091: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2092: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2093: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2094: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2095: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _2096: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2097: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _2098: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2099: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2100: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _2101: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _2102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2103: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _2104: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2105: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _2106: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _2107: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2108: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2109: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2110: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _2111: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2112: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _2113: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _2114: bool;<br align="left"/>let mut _2115: bool;<br align="left"/>let mut _2116: bool;<br align="left"/>let mut _2117: bool;<br align="left"/>let mut _2118: bool;<br align="left"/>let mut _2119: bool;<br align="left"/>let mut _2120: bool;<br align="left"/>let mut _2121: bool;<br align="left"/>let mut _2122: bool;<br align="left"/>let mut _2123: bool;<br align="left"/>let mut _2124: bool;<br align="left"/>let mut _2125: bool;<br align="left"/>let mut _2126: isize;<br align="left"/>let mut _2127: isize;<br align="left"/>let mut _2128: isize;<br align="left"/>let mut _2129: isize;<br align="left"/>let mut _2130: isize;<br align="left"/>let mut _2131: isize;<br align="left"/>let mut _2132: isize;<br align="left"/>let mut _2133: isize;<br align="left"/>let mut _2134: isize;<br align="left"/>let mut _2135: isize;<br align="left"/>let mut _2136: isize;<br align="left"/>let mut _2137: isize;<br align="left"/>let mut _2138: isize;<br align="left"/>let mut _2139: isize;<br align="left"/>let mut _2140: isize;<br align="left"/>let mut _2141: isize;<br align="left"/>let mut _2142: isize;<br align="left"/>let mut _2143: isize;<br align="left"/>let mut _2144: isize;<br align="left"/>let mut _2145: isize;<br align="left"/>let mut _2146: isize;<br align="left"/>let mut _2147: isize;<br align="left"/>let mut _2148: isize;<br align="left"/>let mut _2149: isize;<br align="left"/>let mut _2150: isize;<br align="left"/>let mut _2151: isize;<br align="left"/>let mut _2152: isize;<br align="left"/>let mut _2153: isize;<br align="left"/>let mut _2154: isize;<br align="left"/>let mut _2155: isize;<br align="left"/>let mut _2156: isize;<br align="left"/>let mut _2157: isize;<br align="left"/>let mut _2158: isize;<br align="left"/>let mut _2159: isize;<br align="left"/>let mut _2160: isize;<br align="left"/>let mut _2161: isize;<br align="left"/>let mut _2162: isize;<br align="left"/>let mut _2163: isize;<br align="left"/>let mut _2164: isize;<br align="left"/>let mut _2165: isize;<br align="left"/>let mut _2166: isize;<br align="left"/>let mut _2167: isize;<br align="left"/>let mut _2168: isize;<br align="left"/>let mut _2169: isize;<br align="left"/>let mut _2170: isize;<br align="left"/>let mut _2171: isize;<br align="left"/>let mut _2172: isize;<br align="left"/>let mut _2173: isize;<br align="left"/>let mut _2174: isize;<br align="left"/>let mut _2175: isize;<br align="left"/>let mut _2176: isize;<br align="left"/>let mut _2177: isize;<br align="left"/>let mut _2178: isize;<br align="left"/>let mut _2179: isize;<br align="left"/>let mut _2180: isize;<br align="left"/>let mut _2181: isize;<br align="left"/>let mut _2182: isize;<br align="left"/>let mut _2183: isize;<br align="left"/>let mut _2184: isize;<br align="left"/>let mut _2185: isize;<br align="left"/>let mut _2186: isize;<br align="left"/>let mut _2187: isize;<br align="left"/>let mut _2188: isize;<br align="left"/>let mut _2189: isize;<br align="left"/>let mut _2190: isize;<br align="left"/>let mut _2191: isize;<br align="left"/>let mut _2192: isize;<br align="left"/>let mut _2193: isize;<br align="left"/>let mut _2194: isize;<br align="left"/>let mut _2195: isize;<br align="left"/>let mut _2196: isize;<br align="left"/>let mut _2197: isize;<br align="left"/>let mut _2198: isize;<br align="left"/>let mut _2199: isize;<br align="left"/>let mut _2200: isize;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug liquidator_max_base_asset_amount =&gt; _2;<br align="left"/>debug limit_price =&gt; _3;<br align="left"/>debug user =&gt; _4;<br align="left"/>debug user_key =&gt; _5;<br align="left"/>debug user_stats =&gt; _6;<br align="left"/>debug liquidator =&gt; _7;<br align="left"/>debug liquidator_key =&gt; _8;<br align="left"/>debug liquidator_stats =&gt; _9;<br align="left"/>debug perp_market_map =&gt; _10;<br align="left"/>debug spot_market_map =&gt; _11;<br align="left"/>debug oracle_map =&gt; _12;<br align="left"/>debug slot =&gt; _13;<br align="left"/>debug now =&gt; _14;<br align="left"/>debug state =&gt; _15;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _16;<br align="left"/>debug initial_pct_to_liquidate =&gt; _17;<br align="left"/>debug liquidation_duration =&gt; _19;<br align="left"/>debug error_code =&gt; _27;<br align="left"/>debug res =&gt; _34;<br align="left"/>debug res =&gt; _53;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug error_code =&gt; _71;<br align="left"/>debug res =&gt; _78;<br align="left"/>debug res =&gt; _97;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug error_code =&gt; _115;<br align="left"/>debug res =&gt; _122;<br align="left"/>debug res =&gt; _141;<br align="left"/>debug residual =&gt; _156;<br align="left"/>debug val =&gt; _159;<br align="left"/>debug market =&gt; _160;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug error_code =&gt; _180;<br align="left"/>debug res =&gt; _187;<br align="left"/>debug res =&gt; _206;<br align="left"/>debug residual =&gt; _221;<br align="left"/>debug val =&gt; _224;<br align="left"/>debug residual =&gt; _242;<br align="left"/>debug val =&gt; _245;<br align="left"/>debug residual =&gt; _248;<br align="left"/>debug val =&gt; _251;<br align="left"/>debug residual =&gt; _267;<br align="left"/>debug val =&gt; _270;<br align="left"/>debug residual =&gt; _273;<br align="left"/>debug val =&gt; _276;<br align="left"/>debug margin_calculation =&gt; _277;<br align="left"/>debug residual =&gt; _292;<br align="left"/>debug val =&gt; _295;<br align="left"/>debug residual =&gt; _297;<br align="left"/>debug val =&gt; _300;<br align="left"/>debug res =&gt; _313;<br align="left"/>debug residual =&gt; _334;<br align="left"/>debug val =&gt; _337;<br align="left"/>debug residual =&gt; _351;<br align="left"/>debug val =&gt; _354;<br align="left"/>debug residual =&gt; _364;<br align="left"/>debug val =&gt; _367;<br align="left"/>debug liquidation_id =&gt; _368;<br align="left"/>debug residual =&gt; _374;<br align="left"/>debug val =&gt; _377;<br align="left"/>debug margin_freed =&gt; _378;<br align="left"/>debug position_index =&gt; _379;<br align="left"/>debug residual =&gt; _386;<br align="left"/>debug val =&gt; _389;<br align="left"/>debug error_code =&gt; _404;<br align="left"/>debug res =&gt; _411;<br align="left"/>debug residual =&gt; _426;<br align="left"/>debug val =&gt; _429;<br align="left"/>debug canceled_order_ids =&gt; _430;<br align="left"/>debug residual =&gt; _447;<br align="left"/>debug val =&gt; _450;<br align="left"/>debug market =&gt; _451;<br align="left"/>debug residual =&gt; _458;<br align="left"/>debug val =&gt; _461;<br align="left"/>debug oracle_price_data =&gt; _462;<br align="left"/>debug residual =&gt; _473;<br align="left"/>debug val =&gt; _476;<br align="left"/>debug mm_oracle_price_data =&gt; _477;<br align="left"/>debug residual =&gt; _488;<br align="left"/>debug val =&gt; _491;<br align="left"/>debug residual =&gt; _507;<br align="left"/>debug val =&gt; _510;<br align="left"/>debug oracle_price =&gt; _511;<br align="left"/>debug lp_shares =&gt; _522;<br align="left"/>debug intermediate_margin_calculation =&gt; _523;<br align="left"/>debug intermediate_margin_calculation =&gt; _528;<br align="left"/>debug residual =&gt; _543;<br align="left"/>debug val =&gt; _546;<br align="left"/>debug residual =&gt; _548;<br align="left"/>debug val =&gt; _551;<br align="left"/>debug initial_margin_shortage =&gt; _552;<br align="left"/>debug residual =&gt; _557;<br align="left"/>debug val =&gt; _560;<br align="left"/>debug new_margin_shortage =&gt; _561;<br align="left"/>debug residual =&gt; _566;<br align="left"/>debug val =&gt; _569;<br align="left"/>debug residual =&gt; _577;<br align="left"/>debug val =&gt; _580;<br align="left"/>debug residual =&gt; _587;<br align="left"/>debug val =&gt; _590;<br align="left"/>debug residual =&gt; _597;<br align="left"/>debug val =&gt; _600;<br align="left"/>debug liquidator_max_base_asset_amount =&gt; _647;<br align="left"/>debug residual =&gt; _661;<br align="left"/>debug val =&gt; _664;<br align="left"/>debug residual =&gt; _666;<br align="left"/>debug val =&gt; _669;<br align="left"/>debug error_code =&gt; _676;<br align="left"/>debug res =&gt; _683;<br align="left"/>debug res =&gt; _702;<br align="left"/>debug residual =&gt; _710;<br align="left"/>debug val =&gt; _713;<br align="left"/>debug perp_market =&gt; _715;<br align="left"/>debug residual =&gt; _722;<br align="left"/>debug val =&gt; _725;<br align="left"/>debug oracle_price_too_divergent =&gt; _732;<br align="left"/>debug residual =&gt; _745;<br align="left"/>debug val =&gt; _748;<br align="left"/>debug residual =&gt; _750;<br align="left"/>debug val =&gt; _753;<br align="left"/>debug error_code =&gt; _759;<br align="left"/>debug res =&gt; _766;<br align="left"/>debug residual =&gt; _781;<br align="left"/>debug val =&gt; _784;<br align="left"/>debug user_base_asset_amount =&gt; _785;<br align="left"/>debug margin_ratio =&gt; _790;<br align="left"/>debug residual =&gt; _803;<br align="left"/>debug val =&gt; _806;<br align="left"/>debug residual =&gt; _812;<br align="left"/>debug val =&gt; _815;<br align="left"/>debug residual =&gt; _821;<br align="left"/>debug val =&gt; _824;<br align="left"/>debug margin_ratio_with_buffer =&gt; _825;<br align="left"/>debug residual =&gt; _831;<br align="left"/>debug val =&gt; _834;<br align="left"/>debug margin_shortage =&gt; _835;<br align="left"/>debug residual =&gt; _840;<br align="left"/>debug val =&gt; _843;<br align="left"/>debug market =&gt; _844;<br align="left"/>debug residual =&gt; _851;<br align="left"/>debug val =&gt; _854;<br align="left"/>debug quote_spot_market =&gt; _855;<br align="left"/>debug residual =&gt; _864;<br align="left"/>debug val =&gt; _867;<br align="left"/>debug quote_oracle_price =&gt; _868;<br align="left"/>debug residual =&gt; _880;<br align="left"/>debug val =&gt; _883;<br align="left"/>debug liquidator_fee =&gt; _884;<br align="left"/>debug residual =&gt; _901;<br align="left"/>debug val =&gt; _904;<br align="left"/>debug residual =&gt; _908;<br align="left"/>debug val =&gt; _911;<br align="left"/>debug if_liquidation_fee =&gt; _912;<br align="left"/>debug residual =&gt; _921;<br align="left"/>debug val =&gt; _924;<br align="left"/>debug residual =&gt; _934;<br align="left"/>debug val =&gt; _937;<br align="left"/>debug base_asset_amount_to_cover_margin_shortage =&gt; _938;<br align="left"/>debug residual =&gt; _948;<br align="left"/>debug val =&gt; _951;<br align="left"/>debug residual =&gt; _963;<br align="left"/>debug val =&gt; _966;<br align="left"/>debug max_pct_allowed =&gt; _971;<br align="left"/>debug residual =&gt; _980;<br align="left"/>debug val =&gt; _983;<br align="left"/>debug max_base_asset_amount_allowed_to_be_transferred =&gt; _984;<br align="left"/>debug residual =&gt; _996;<br align="left"/>debug val =&gt; _999;<br align="left"/>debug residual =&gt; _1002;<br align="left"/>debug val =&gt; _1005;<br align="left"/>debug residual =&gt; _1007;<br align="left"/>debug val =&gt; _1010;<br align="left"/>debug base_asset_value =&gt; _1019;<br align="left"/>debug residual =&gt; _1030;<br align="left"/>debug val =&gt; _1033;<br align="left"/>debug residual =&gt; _1036;<br align="left"/>debug val =&gt; _1039;<br align="left"/>debug residual =&gt; _1041;<br align="left"/>debug val =&gt; _1044;<br align="left"/>debug min_base_asset_amount =&gt; _1045;<br align="left"/>debug base_asset_amount =&gt; _1050;<br align="left"/>debug base_asset_amount =&gt; _1057;<br align="left"/>debug residual =&gt; _1071;<br align="left"/>debug val =&gt; _1074;<br align="left"/>debug residual =&gt; _1076;<br align="left"/>debug val =&gt; _1079;<br align="left"/>debug limit_price =&gt; _1082;<br align="left"/>debug oracle_price_u128 =&gt; _1083;<br align="left"/>debug residual =&gt; _1088;<br align="left"/>debug val =&gt; _1091;<br align="left"/>debug fee =&gt; _1092;<br align="left"/>debug residual =&gt; _1104;<br align="left"/>debug val =&gt; _1107;<br align="left"/>debug residual =&gt; _1109;<br align="left"/>debug val =&gt; _1112;<br align="left"/>debug residual =&gt; _1114;<br align="left"/>debug val =&gt; _1117;<br align="left"/>debug transfer_price =&gt; _1124;<br align="left"/>debug residual =&gt; _1130;<br align="left"/>debug val =&gt; _1133;<br align="left"/>debug residual =&gt; _1143;<br align="left"/>debug val =&gt; _1146;<br align="left"/>debug error_code =&gt; _1148;<br align="left"/>debug res =&gt; _1155;<br align="left"/>debug res =&gt; _1174;<br align="left"/>debug residual =&gt; _1192;<br align="left"/>debug val =&gt; _1195;<br align="left"/>debug transfer_price =&gt; _1196;<br align="left"/>debug residual =&gt; _1202;<br align="left"/>debug val =&gt; _1205;<br align="left"/>debug residual =&gt; _1215;<br align="left"/>debug val =&gt; _1218;<br align="left"/>debug error_code =&gt; _1220;<br align="left"/>debug res =&gt; _1227;<br align="left"/>debug res =&gt; _1246;<br align="left"/>debug residual =&gt; _1264;<br align="left"/>debug val =&gt; _1267;<br align="left"/>debug base_asset_value =&gt; _1268;<br align="left"/>debug residual =&gt; _1279;<br align="left"/>debug val =&gt; _1282;<br align="left"/>debug residual =&gt; _1285;<br align="left"/>debug val =&gt; _1288;<br align="left"/>debug residual =&gt; _1290;<br align="left"/>debug val =&gt; _1293;<br align="left"/>debug liquidator_fee =&gt; _1294;<br align="left"/>debug residual =&gt; _1309;<br align="left"/>debug val =&gt; _1312;<br align="left"/>debug residual =&gt; _1318;<br align="left"/>debug val =&gt; _1321;<br align="left"/>debug residual =&gt; _1323;<br align="left"/>debug val =&gt; _1326;<br align="left"/>debug residual =&gt; _1328;<br align="left"/>debug val =&gt; _1331;<br align="left"/>debug residual =&gt; _1333;<br align="left"/>debug val =&gt; _1336;<br align="left"/>debug if_fee =&gt; _1338;<br align="left"/>debug residual =&gt; _1353;<br align="left"/>debug val =&gt; _1356;<br align="left"/>debug residual =&gt; _1362;<br align="left"/>debug val =&gt; _1365;<br align="left"/>debug residual =&gt; _1367;<br align="left"/>debug val =&gt; _1370;<br align="left"/>debug residual =&gt; _1372;<br align="left"/>debug val =&gt; _1375;<br align="left"/>debug residual =&gt; _1377;<br align="left"/>debug val =&gt; _1380;<br align="left"/>debug residual =&gt; _1396;<br align="left"/>debug val =&gt; _1399;<br align="left"/>debug residual =&gt; _1403;<br align="left"/>debug val =&gt; _1406;<br align="left"/>debug residual =&gt; _1421;<br align="left"/>debug val =&gt; _1424;<br align="left"/>debug residual =&gt; _1428;<br align="left"/>debug val =&gt; _1431;<br align="left"/>debug user_position_delta =&gt; _1432;<br align="left"/>debug residual =&gt; _1443;<br align="left"/>debug val =&gt; _1446;<br align="left"/>debug liquidator_position_delta =&gt; _1447;<br align="left"/>debug residual =&gt; _1458;<br align="left"/>debug val =&gt; _1461;<br align="left"/>debug user_existing_position_direction =&gt; _1462;<br align="left"/>debug user_position_direction_to_close =&gt; _1463;<br align="left"/>debug user_existing_position_params_for_order_action =&gt; _1464;<br align="left"/>debug liquidator_existing_position_direction =&gt; _1465;<br align="left"/>debug liquidator_existing_position_params_for_order_action =&gt; _1466;<br align="left"/>debug market =&gt; _1468;<br align="left"/>debug residual =&gt; _1475;<br align="left"/>debug val =&gt; _1478;<br align="left"/>debug user_position =&gt; _1479;<br align="left"/>debug residual =&gt; _1485;<br align="left"/>debug val =&gt; _1488;<br align="left"/>debug user_existing_position_direction =&gt; _1489;<br align="left"/>debug user_position_direction_to_close =&gt; _1491;<br align="left"/>debug user_existing_position_params =&gt; _1493;<br align="left"/>debug residual =&gt; _1507;<br align="left"/>debug val =&gt; _1510;<br align="left"/>debug residual =&gt; _1521;<br align="left"/>debug val =&gt; _1524;<br align="left"/>debug residual =&gt; _1535;<br align="left"/>debug val =&gt; _1538;<br align="left"/>debug residual =&gt; _1551;<br align="left"/>debug val =&gt; _1554;<br align="left"/>debug error_code =&gt; _1556;<br align="left"/>debug res =&gt; _1563;<br align="left"/>debug res =&gt; _1582;<br align="left"/>debug residual =&gt; _1602;<br align="left"/>debug val =&gt; _1605;<br align="left"/>debug liquidator_position =&gt; _1606;<br align="left"/>debug residual =&gt; _1612;<br align="left"/>debug val =&gt; _1615;<br align="left"/>debug liquidator_existing_position_direction =&gt; _1616;<br align="left"/>debug liquidator_existing_position_params =&gt; _1618;<br align="left"/>debug residual =&gt; _1632;<br align="left"/>debug val =&gt; _1635;<br align="left"/>debug residual =&gt; _1648;<br align="left"/>debug val =&gt; _1651;<br align="left"/>debug residual =&gt; _1664;<br align="left"/>debug val =&gt; _1667;<br align="left"/>debug error_code =&gt; _1669;<br align="left"/>debug res =&gt; _1676;<br align="left"/>debug res =&gt; _1695;<br align="left"/>debug residual =&gt; _1715;<br align="left"/>debug val =&gt; _1718;<br align="left"/>debug residual =&gt; _1731;<br align="left"/>debug val =&gt; _1734;<br align="left"/>debug residual =&gt; _1736;<br align="left"/>debug val =&gt; _1739;<br align="left"/>debug margin_freed_for_perp_position =&gt; _1747;<br align="left"/>debug residual =&gt; _1758;<br align="left"/>debug val =&gt; _1761;<br align="left"/>debug residual =&gt; _1768;<br align="left"/>debug val =&gt; _1771;<br align="left"/>debug residual =&gt; _1778;<br align="left"/>debug val =&gt; _1781;<br align="left"/>debug liquidator_meets_initial_margin_requirement =&gt; _1792;<br align="left"/>debug residual =&gt; _1800;<br align="left"/>debug val =&gt; _1803;<br align="left"/>debug error_code =&gt; _1809;<br align="left"/>debug res =&gt; _1816;<br align="left"/>debug residual =&gt; _1834;<br align="left"/>debug val =&gt; _1837;<br align="left"/>debug user_order_id =&gt; _1838;<br align="left"/>debug current_id =&gt; _1839;<br align="left"/>debug liquidator_order_id =&gt; _1845;<br align="left"/>debug current_id =&gt; _1846;<br align="left"/>debug fill_record_id =&gt; _1852;<br align="left"/>debug market =&gt; _1853;<br align="left"/>debug residual =&gt; _1860;<br align="left"/>debug val =&gt; _1863;<br align="left"/>debug current_id =&gt; _1864;<br align="left"/>debug user_order =&gt; _1874;<br align="left"/>debug liquidator_order =&gt; _1902;<br align="left"/>debug price =&gt; _1906;<br align="left"/>debug taker_existing_quote_entry_amount =&gt; _1935;<br align="left"/>debug taker_existing_base_asset_amount =&gt; _1936;<br align="left"/>debug residual =&gt; _1943;<br align="left"/>debug val =&gt; _1946;<br align="left"/>debug maker_existing_quote_entry_amount =&gt; _1947;<br align="left"/>debug maker_existing_base_asset_amount =&gt; _1948;<br align="left"/>debug residual =&gt; _1955;<br align="left"/>debug val =&gt; _1958;<br align="left"/>debug fill_record =&gt; _1959;<br align="left"/>debug residual =&gt; _1982;<br align="left"/>debug val =&gt; _1985;<br align="left"/>debug residual =&gt; _2074;<br align="left"/>debug val =&gt; _2077;<br align="left"/>debug residual =&gt; _2084;<br align="left"/>debug val =&gt; _2087;<br align="left"/>>;
    bb0__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_2125 = const false<br/>_2122 = const false<br/>_2121 = const false<br/>_2118 = const false<br/>_2117 = const false<br/>_2124 = const false<br/>_2123 = const false<br/>_2120 = const false<br/>_2119 = const false<br/>_2116 = const false<br/>_2115 = const false<br/>_2114 = const false<br/>StorageLive(_16)<br/>_16 = ((*_15).11: u32)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = ((*_15).21: u16)<br/>_17 = move _18 as u128 (IntToInt)<br/>StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_15).20: u8)<br/>_19 = move _20 as u128 (IntToInt)<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_4)<br/></td></tr><tr><td align="left">_24 = User::is_bankrupt(move _25)</td></tr></table>>];
    bb1__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb2__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_27)<br/>_27 = error::ErrorCode::UserBankrupt<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_2113 = const _<br/>_38 = &amp;(*_2113)<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;_27<br/>_45 = &amp;(*_46)<br/></td></tr><tr><td align="left">_44 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _45)</td></tr></table>>];
    bb3__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>_26 = ()<br/>_23 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = [move _44]<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/>_40 = move _41 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_35 = Arguments::&lt;'_&gt;::new_v1(move _36, move _40)</td></tr></table>>];
    bb5__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = format(move _35)</td></tr></table>>];
    bb6__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>_33 = move _34<br/>StorageDead(_34)<br/>_32 = &amp;_33<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_30 = &lt;String as Deref&gt;::deref(move _31)</td></tr></table>>];
    bb7__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_29 = &amp;(*_30)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_28 = solana_program::log::sol_log(move _29)</td></tr></table>>];
    bb8__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb9__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_28)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_2112 = const _<br/>_57 = &amp;(*_2112)<br/>_56 = &amp;(*_57)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_const(move _55)</td></tr></table>>];
    bb10__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = format(move _54)</td></tr></table>>];
    bb11__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_57)<br/>_52 = move _53<br/>StorageDead(_53)<br/>_51 = &amp;_52<br/>_50 = &amp;(*_51)<br/></td></tr><tr><td align="left">_49 = &lt;String as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb12__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_47 = solana_program::log::sol_log(move _48)</td></tr></table>>];
    bb13__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb14__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageLive(_59)<br/>_59 = _27<br/>_23 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _59)<br/>StorageDead(_59)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb16__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_60 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb17__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_22 as Continue).0: ())<br/>_21 = _64<br/>StorageDead(_64)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_7)<br/></td></tr><tr><td align="left">_68 = User::is_bankrupt(move _69)</td></tr></table>>];
    bb18__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb20__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb22__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_71)<br/>_71 = error::ErrorCode::UserBankrupt<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_2111 = const _<br/>_82 = &amp;(*_2111)<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_71<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _89)</td></tr></table>>];
    bb23__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_70)<br/>_70 = ()<br/>_67 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _70)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_79 = Arguments::&lt;'_&gt;::new_v1(move _80, move _84)</td></tr></table>>];
    bb25__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = format(move _79)</td></tr></table>>];
    bb26__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>_77 = move _78<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = &lt;String as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb27__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb28__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb29__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_2110 = const _<br/>_101 = &amp;(*_2110)<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = Arguments::&lt;'_&gt;::new_const(move _99)</td></tr></table>>];
    bb30__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = format(move _98)</td></tr></table>>];
    bb31__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_101)<br/>_96 = move _97<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;String as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb32__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb33__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb34__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_103)<br/>_103 = _71<br/>_67 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _103)<br/>StorageDead(_103)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb36__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_104 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb37__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_66 as Continue).0: ())<br/>_65 = _108<br/>StorageDead(_108)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = ((*_7).27: u8)<br/>_112 = Eq(move _113, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb38__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb39__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageLive(_114)<br/>_114 = ()<br/>_111 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _114)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageLive(_115)<br/>_115 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_2109 = const _<br/>_126 = &amp;(*_2109)<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;_115<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _133)</td></tr></table>>];
    bb42__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = [move _132]<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/>_128 = move _129 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_123 = Arguments::&lt;'_&gt;::new_v1(move _124, move _128)</td></tr></table>>];
    bb43__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = format(move _123)</td></tr></table>>];
    bb44__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>_121 = move _122<br/>StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_118 = &lt;String as Deref&gt;::deref(move _119)</td></tr></table>>];
    bb45__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_117 = &amp;(*_118)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_116 = solana_program::log::sol_log(move _117)</td></tr></table>>];
    bb46__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb47__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_2108 = const _<br/>_145 = &amp;(*_2108)<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;((*_7).27: u8)<br/>_152 = &amp;(*_153)<br/></td></tr><tr><td align="left">_151 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _152)</td></tr></table>>];
    bb48__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>_150 = [move _151]<br/>StorageDead(_151)<br/>_149 = &amp;_150<br/>_148 = &amp;(*_149)<br/>_147 = move _148 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_142 = Arguments::&lt;'_&gt;::new_v1(move _143, move _147)</td></tr></table>>];
    bb49__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = format(move _142)</td></tr></table>>];
    bb50__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>_140 = move _141<br/>StorageDead(_141)<br/>_139 = &amp;_140<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = &lt;String as Deref&gt;::deref(move _138)</td></tr></table>>];
    bb51__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_136 = &amp;(*_137)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_135 = solana_program::log::sol_log(move _136)</td></tr></table>>];
    bb52__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb53__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageLive(_154)<br/>_154 = _115<br/>_111 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _154)<br/>StorageDead(_154)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb55__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_155 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb56__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_110 as Continue).0: ())<br/>_109 = _159<br/>StorageDead(_159)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;(*_10)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_1<br/>_164 = &amp;(*_165)<br/></td></tr><tr><td align="left">_162 = PerpMarketMap::&lt;'_&gt;::get_ref(move _163, move _164)</td></tr></table>>];
    bb57__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_158)<br/>_158 = _156<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _158)</td></tr></table>>];
    bb58__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb60__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_166 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb61__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = move ((_161 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_2125 = const true<br/>_160 = move _170<br/>StorageDead(_170)<br/>_2128 = discriminant(_161)<br/>StorageDead(_165)<br/>StorageDead(_161)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;_160<br/></td></tr><tr><td align="left">_176 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb62__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb63__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>_2126 = discriminant(_161)<br/>StorageDead(_165)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/>StorageLive(_178)<br/>_178 = PerpOperation::Liquidation<br/></td></tr><tr><td align="left">_174 = PerpMarket::is_operation_paused(move _175, move _178)</td></tr></table>>];
    bb65__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left">switchInt(move _174)</td></tr></table>>];
    bb66__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_176)<br/>StorageLive(_180)<br/>_180 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_2107 = const _<br/>_191 = &amp;(*_2107)<br/>_190 = &amp;(*_191)<br/>_189 = move _190 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_190)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;_180<br/>_198 = &amp;(*_199)<br/></td></tr><tr><td align="left">_197 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _198)</td></tr></table>>];
    bb67__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_176)<br/>StorageLive(_179)<br/>_179 = ()<br/>_173 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _179)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>_196 = [move _197]<br/>StorageDead(_197)<br/>_195 = &amp;_196<br/>_194 = &amp;(*_195)<br/>_193 = move _194 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_188 = Arguments::&lt;'_&gt;::new_v1(move _189, move _193)</td></tr></table>>];
    bb69__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = format(move _188)</td></tr></table>>];
    bb70__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_199)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_191)<br/>_186 = move _187<br/>StorageDead(_187)<br/>_185 = &amp;_186<br/>_184 = &amp;(*_185)<br/></td></tr><tr><td align="left">_183 = &lt;String as Deref&gt;::deref(move _184)</td></tr></table>>];
    bb71__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_182 = &amp;(*_183)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_181 = solana_program::log::sol_log(move _182)</td></tr></table>>];
    bb72__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb73__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_181)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_2106 = const _<br/>_210 = &amp;(*_2106)<br/>_209 = &amp;(*_210)<br/>_208 = move _209 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_209)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = &amp;_1<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_216 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _217)</td></tr></table>>];
    bb74__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_215 = [move _216]<br/>StorageDead(_216)<br/>_214 = &amp;_215<br/>_213 = &amp;(*_214)<br/>_212 = move _213 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_207 = Arguments::&lt;'_&gt;::new_v1(move _208, move _212)</td></tr></table>>];
    bb75__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">_206 = format(move _207)</td></tr></table>>];
    bb76__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_210)<br/>_205 = move _206<br/>StorageDead(_206)<br/>_204 = &amp;_205<br/>_203 = &amp;(*_204)<br/></td></tr><tr><td align="left">_202 = &lt;String as Deref&gt;::deref(move _203)</td></tr></table>>];
    bb77__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_201 = &amp;(*_202)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_200 = solana_program::log::sol_log(move _201)</td></tr></table>>];
    bb78__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/></td></tr><tr><td align="left">drop(_205)</td></tr></table>>];
    bb79__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageLive(_219)<br/>_219 = _180<br/>_173 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _219)<br/>StorageDead(_219)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/></td></tr><tr><td align="left">_172 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _173)</td></tr></table>>];
    bb81__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_220 = discriminant(_172)<br/></td></tr><tr><td align="left">switchInt(move _220)</td></tr></table>>];
    bb82__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_172 as Continue).0: ())<br/>_171 = _224<br/>StorageDead(_224)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_2125 = const false<br/>_226 = move _160<br/></td></tr><tr><td align="left">_225 = std::mem::drop::&lt;Ref&lt;'_, PerpMarket&gt;&gt;(move _226)</td></tr></table>>];
    bb83__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ((_172 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_223)<br/>_223 = _221<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _223)</td></tr></table>>];
    bb84__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = &amp;mut (*_4)<br/>StorageLive(_231)<br/>_231 = &amp;(*_5)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = &amp;(*_10)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = &amp;_1<br/>_239 = &amp;(*_240)<br/></td></tr><tr><td align="left">_237 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _238, move _239)</td></tr></table>>];
    bb86__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">_236 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _237)</td></tr></table>>];
    bb87__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_2124 = const true<br/>StorageDead(_237)<br/>_241 = discriminant(_236)<br/></td></tr><tr><td align="left">switchInt(move _241)</td></tr></table>>];
    bb88__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = move ((_236 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_235 = move _245<br/>StorageDead(_245)<br/>_234 = &amp;mut _235<br/></td></tr><tr><td align="left">_233 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _234)</td></tr></table>>];
    bb89__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = ((_236 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_244)<br/>_244 = _242<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _244)</td></tr></table>>];
    bb90__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_242)<br/>StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_232 = &amp;mut (*_233)<br/>StorageDead(_234)<br/>StorageLive(_246)<br/>_246 = _14<br/></td></tr><tr><td align="left">_229 = controller::funding::settle_funding_payment(move _230, move _231, move _232, move _246)</td></tr></table>>];
    bb92__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_228 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _229)</td></tr></table>>];
    bb93__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_247 = discriminant(_228)<br/></td></tr><tr><td align="left">switchInt(move _247)</td></tr></table>>];
    bb94__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_251)<br/>_251 = ((_228 as Continue).0: ())<br/>_227 = _251<br/>StorageDead(_251)<br/></td></tr><tr><td align="left">drop(_235)</td></tr></table>>];
    bb95__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = ((_228 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_250)<br/>_250 = _248<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _250)</td></tr></table>>];
    bb96__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">drop(_235)</td></tr></table>>];
    bb97__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_263)<br/></td></tr><tr><td align="left">_261 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _262)</td></tr></table>>];
    bb98__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_2123 = const true<br/>StorageDead(_262)<br/>_266 = discriminant(_261)<br/></td></tr><tr><td align="left">switchInt(move _266)</td></tr></table>>];
    bb99__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_270)<br/>_270 = move ((_261 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_260 = move _270<br/>StorageDead(_270)<br/>_259 = &amp;mut _260<br/></td></tr><tr><td align="left">_258 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _259)</td></tr></table>>];
    bb100__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_267)<br/>_267 = ((_261 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_269)<br/>_269 = _267<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _269)</td></tr></table>>];
    bb101__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_267)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_257 = &amp;mut (*_258)<br/>StorageDead(_259)<br/>StorageLive(_271)<br/>_271 = _14<br/></td></tr><tr><td align="left">_254 = controller::funding::settle_funding_payment(move _255, move _256, move _257, move _271)</td></tr></table>>];
    bb103__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _254)</td></tr></table>>];
    bb104__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>_272 = discriminant(_253)<br/></td></tr><tr><td align="left">switchInt(move _272)</td></tr></table>>];
    bb105__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_253 as Continue).0: ())<br/>_252 = _276<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb106__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_253 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_275)<br/>_275 = _273<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _275)</td></tr></table>>];
    bb107__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb108__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = _1<br/></td></tr><tr><td align="left">_289 = MarketIdentifier::perp(move _290)</td></tr></table>>];
    bb109__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/></td></tr><tr><td align="left">_286 = MarginContext::track_market_margin_requirement(move _287, move _289)</td></tr></table>>];
    bb110__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">_285 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _286)</td></tr></table>>];
    bb111__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>_291 = discriminant(_285)<br/></td></tr><tr><td align="left">switchInt(move _291)</td></tr></table>>];
    bb112__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = ((_285 as Continue).0: state::margin_calculation::MarginContext)<br/>_284 = _295<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_279 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _280, move _281, move _282, move _283, move _284)</td></tr></table>>];
    bb113__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_285 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_294)<br/>_294 = _292<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _294)</td></tr></table>>];
    bb114__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">_278 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _279)</td></tr></table>>];
    bb116__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>_296 = discriminant(_278)<br/></td></tr><tr><td align="left">switchInt(move _296)</td></tr></table>>];
    bb117__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_300)<br/>_300 = ((_278 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_277 = _300<br/>StorageDead(_300)<br/>StorageDead(_285)<br/>StorageDead(_278)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = &amp;(*_4)<br/></td></tr><tr><td align="left">_302 = User::is_being_liquidated(move _303)</td></tr></table>>];
    bb118__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_297)<br/>_297 = ((_278 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_299)<br/>_299 = _297<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _299)</td></tr></table>>];
    bb119__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left">switchInt(move _302)</td></tr></table>>];
    bb121__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = &amp;_277<br/></td></tr><tr><td align="left">_304 = MarginCalculation::meets_margin_requirement(move _305)</td></tr></table>>];
    bb123__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb124__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>_2105 = const _<br/>_317 = &amp;(*_2105)<br/>_316 = &amp;(*_317)<br/>_315 = move _316 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_316)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;_277<br/>_324 = &amp;(*_325)<br/></td></tr><tr><td align="left">_323 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;MarginCalculation&gt;(move _324)</td></tr></table>>];
    bb125__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_322 = [move _323]<br/>StorageDead(_323)<br/>_321 = &amp;_322<br/>_320 = &amp;(*_321)<br/>_319 = move _320 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">_314 = Arguments::&lt;'_&gt;::new_v1(move _315, move _319)</td></tr></table>>];
    bb126__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">_313 = format(move _314)</td></tr></table>>];
    bb127__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_325)<br/>StorageDead(_322)<br/>StorageDead(_321)<br/>StorageDead(_317)<br/>_312 = move _313<br/>StorageDead(_313)<br/>_311 = &amp;_312<br/>_310 = &amp;(*_311)<br/></td></tr><tr><td align="left">_309 = &lt;String as Deref&gt;::deref(move _310)</td></tr></table>>];
    bb128__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">_308 = &amp;(*_309)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">_307 = solana_program::log::sol_log(move _308)</td></tr></table>>];
    bb129__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/></td></tr><tr><td align="left">drop(_312)</td></tr></table>>];
    bb130__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_311)<br/>StorageDead(_309)<br/>StorageDead(_307)<br/>StorageLive(_326)<br/>_326 = error::ErrorCode::SufficientCollateral<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _326)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>StorageLive(_328)<br/>_328 = &amp;(*_4)<br/></td></tr><tr><td align="left">_327 = User::is_being_liquidated(move _328)</td></tr></table>>];
    bb133__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left">switchInt(move _327)</td></tr></table>>];
    bb134__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_332 = &amp;_277<br/></td></tr><tr><td align="left">_331 = MarginCalculation::can_exit_liquidation(move _332)</td></tr></table>>];
    bb135__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/></td></tr><tr><td align="left">_330 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _331)</td></tr></table>>];
    bb136__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>_333 = discriminant(_330)<br/></td></tr><tr><td align="left">switchInt(move _333)</td></tr></table>>];
    bb137__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_337)<br/>_337 = ((_330 as Continue).0: bool)<br/>_329 = _337<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb138__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_334)<br/>_334 = ((_330 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_336)<br/>_336 = _334<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _336)</td></tr></table>>];
    bb139__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_340 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_339 = User::exit_liquidation(move _340)</td></tr></table>>];
    bb141__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_339)<br/>StorageLive(_341)<br/>_341 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _341)<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_301 = const ()<br/>StorageDead(_329)<br/>StorageDead(_327)<br/>StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = &amp;(*_4)<br/>StorageLive(_347)<br/>_347 = _1<br/></td></tr><tr><td align="left">_345 = User::get_perp_position(move _346, move _347)</td></tr></table>>];
    bb145__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_346)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>_349 = &amp;_1<br/>_348 = {closure@programs/drift/src/controller/liquidation.rs:159:50: 159:53} { market_index: move _349 }<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">_344 = std::result::Result::&lt;&amp;PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:159:50: 159:53}&gt;(move _345, move _348)</td></tr></table>>];
    bb146__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">_343 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _344)</td></tr></table>>];
    bb147__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_344)<br/>_350 = discriminant(_343)<br/></td></tr><tr><td align="left">switchInt(move _350)</td></tr></table>>];
    bb148__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_354)<br/>_354 = ((_343 as Continue).0: &amp;state::user::PerpPosition)<br/>_342 = _354<br/>StorageDead(_354)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = &amp;mut (*_7)<br/>StorageLive(_360)<br/>_360 = _1<br/></td></tr><tr><td align="left">_358 = User::force_get_perp_position_mut(move _359, move _360)</td></tr></table>>];
    bb149__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageLive(_351)<br/>_351 = ((_343 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_353)<br/>_353 = _351<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _353)</td></tr></table>>];
    bb150__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageDead(_351)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/>StorageDead(_359)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;_1<br/>_361 = {closure@programs/drift/src/controller/liquidation.rs:169:18: 169:21} { market_index: move _362 }<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">_357 = std::result::Result::&lt;&amp;mut PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:169:18: 169:21}&gt;(move _358, move _361)</td></tr></table>>];
    bb152__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>StorageDead(_358)<br/></td></tr><tr><td align="left">_356 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _357)</td></tr></table>>];
    bb153__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>_363 = discriminant(_356)<br/></td></tr><tr><td align="left">switchInt(move _363)</td></tr></table>>];
    bb154__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_367)<br/>_367 = move ((_356 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_355 = move _367<br/>StorageDead(_367)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>_371 = &amp;mut (*_4)<br/>StorageLive(_372)<br/>_372 = _13<br/></td></tr><tr><td align="left">_370 = User::enter_liquidation(move _371, move _372)</td></tr></table>>];
    bb155__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_356 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_366)<br/>_366 = _364<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _366)</td></tr></table>>];
    bb156__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>StorageDead(_364)<br/>StorageDead(_356)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_371)<br/></td></tr><tr><td align="left">_369 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _370)</td></tr></table>>];
    bb158__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>_373 = discriminant(_369)<br/></td></tr><tr><td align="left">switchInt(move _373)</td></tr></table>>];
    bb159__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_377)<br/>_377 = ((_369 as Continue).0: u16)<br/>_368 = _377<br/>StorageDead(_377)<br/>StorageDead(_369)<br/>StorageLive(_378)<br/>_378 = const 0_u64<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_383 = &amp;((*_4).4: [state::user::PerpPosition; 8])<br/>_382 = &amp;(*_383)<br/>StorageLive(_384)<br/>_384 = _1<br/></td></tr><tr><td align="left">_381 = get_position_index(move _382, move _384)</td></tr></table>>];
    bb160__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_374)<br/>_374 = ((_369 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_376)<br/>_376 = _374<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _376)</td></tr></table>>];
    bb161__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>StorageDead(_374)<br/>StorageDead(_369)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">_380 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _381)</td></tr></table>>];
    bb163__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>_385 = discriminant(_380)<br/></td></tr><tr><td align="left">switchInt(move _385)</td></tr></table>>];
    bb164__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_389)<br/>_389 = ((_380 as Continue).0: usize)<br/>_379 = _389<br/>StorageDead(_389)<br/>StorageDead(_383)<br/>StorageDead(_380)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>_395 = _379<br/>_396 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_397 = Lt(_395, _396)<br/></td></tr><tr><td align="left">assert(move _397, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _396, _395)</td></tr></table>>];
    bb165__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = ((_380 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_388)<br/>_388 = _386<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _388)</td></tr></table>>];
    bb166__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_386)<br/>StorageDead(_383)<br/>StorageDead(_380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_394 = &amp;((*_4).4: [state::user::PerpPosition; 8])[_395]<br/></td></tr><tr><td align="left">_393 = PerpPosition::is_open_position(move _394)</td></tr></table>>];
    bb168__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left">switchInt(move _393)</td></tr></table>>];
    bb169__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_394)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_394)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = _379<br/>_401 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_402 = Lt(_400, _401)<br/></td></tr><tr><td align="left">assert(move _402, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _401, _400)</td></tr></table>>];
    bb171__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">_399 = &amp;((*_4).4: [state::user::PerpPosition; 8])[_400]<br/></td></tr><tr><td align="left">_398 = PerpPosition::has_open_order(move _399)</td></tr></table>>];
    bb172__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left">switchInt(move _398)</td></tr></table>>];
    bb173__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_399)<br/>StorageLive(_403)<br/>_403 = ()<br/>_392 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _403)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_399)<br/>StorageLive(_404)<br/>_404 = error::ErrorCode::PositionDoesntHaveOpenPositionOrOrders<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>_2104 = const _<br/>_415 = &amp;(*_2104)<br/>_414 = &amp;(*_415)<br/>_413 = move _414 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_414)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = &amp;_404<br/>_422 = &amp;(*_423)<br/></td></tr><tr><td align="left">_421 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _422)</td></tr></table>>];
    bb175__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>_420 = [move _421]<br/>StorageDead(_421)<br/>_419 = &amp;_420<br/>_418 = &amp;(*_419)<br/>_417 = move _418 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">_412 = Arguments::&lt;'_&gt;::new_v1(move _413, move _417)</td></tr></table>>];
    bb176__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">_411 = format(move _412)</td></tr></table>>];
    bb177__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_412)<br/>StorageDead(_423)<br/>StorageDead(_420)<br/>StorageDead(_419)<br/>StorageDead(_415)<br/>_410 = move _411<br/>StorageDead(_411)<br/>_409 = &amp;_410<br/>_408 = &amp;(*_409)<br/></td></tr><tr><td align="left">_407 = &lt;String as Deref&gt;::deref(move _408)</td></tr></table>>];
    bb178__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">_406 = &amp;(*_407)<br/>StorageDead(_408)<br/></td></tr><tr><td align="left">_405 = solana_program::log::sol_log(move _406)</td></tr></table>>];
    bb179__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/></td></tr><tr><td align="left">drop(_410)</td></tr></table>>];
    bb180__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_409)<br/>StorageDead(_407)<br/>StorageDead(_405)<br/>StorageLive(_424)<br/>_424 = _404<br/>_392 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _424)<br/>StorageDead(_424)<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">_391 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _392)</td></tr></table>>];
    bb182__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>_425 = discriminant(_391)<br/></td></tr><tr><td align="left">switchInt(move _425)</td></tr></table>>];
    bb183__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_429)<br/>_429 = ((_391 as Continue).0: ())<br/>_390 = _429<br/>StorageDead(_429)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>_433 = &amp;mut (*_4)<br/>StorageLive(_434)<br/>_434 = &amp;(*_5)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;(*_8)<br/>_435 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _436)<br/>StorageDead(_436)<br/>StorageLive(_437)<br/>_437 = &amp;(*_10)<br/>StorageLive(_438)<br/>_438 = &amp;(*_11)<br/>StorageLive(_439)<br/>_439 = &amp;mut (*_12)<br/>StorageLive(_440)<br/>_440 = _14<br/>StorageLive(_441)<br/>_441 = _13<br/>StorageLive(_442)<br/>_442 = OrderActionExplanation::Liquidation<br/>StorageLive(_443)<br/>_443 = Option::&lt;state::user::MarketType&gt;::None<br/>StorageLive(_444)<br/>_444 = Option::&lt;u16&gt;::None<br/>StorageLive(_445)<br/>_445 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">_432 = controller::orders::cancel_orders(move _433, move _434, move _435, move _437, move _438, move _439, move _440, move _441, move _442, move _443, move _444, move _445)</td></tr></table>>];
    bb184__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_426)<br/>_426 = ((_391 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_428)<br/>_428 = _426<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _428)</td></tr></table>>];
    bb185__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>StorageDead(_426)<br/>StorageDead(_391)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_444)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/>StorageDead(_441)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/>StorageDead(_437)<br/>StorageDead(_435)<br/>StorageDead(_434)<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">_431 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _432)</td></tr></table>>];
    bb187__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>_446 = discriminant(_431)<br/></td></tr><tr><td align="left">switchInt(move _446)</td></tr></table>>];
    bb188__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_450)<br/>_450 = move ((_431 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_2122 = const true<br/>_430 = move _450<br/>StorageDead(_450)<br/>_2136 = discriminant(_431)<br/>StorageDead(_431)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = &amp;(*_10)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = &amp;_1<br/>_455 = &amp;(*_456)<br/></td></tr><tr><td align="left">_453 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _454, move _455)</td></tr></table>>];
    bb189__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_447)<br/>_447 = ((_431 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_449)<br/>_449 = _447<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _449)</td></tr></table>>];
    bb190__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_447)<br/>_2134 = discriminant(_431)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_454)<br/></td></tr><tr><td align="left">_452 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _453)</td></tr></table>>];
    bb192__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>_457 = discriminant(_452)<br/></td></tr><tr><td align="left">switchInt(move _457)</td></tr></table>>];
    bb193__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageLive(_461)<br/>_461 = move ((_452 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_2121 = const true<br/>_451 = move _461<br/>StorageDead(_461)<br/>_2140 = discriminant(_452)<br/>StorageDead(_456)<br/>StorageDead(_452)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>_465 = &amp;mut (*_12)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>_471 = &amp;_451<br/></td></tr><tr><td align="left">_470 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _471)</td></tr></table>>];
    bb194__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_458)<br/>_458 = ((_452 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_460)<br/>_460 = _458<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _460)</td></tr></table>>];
    bb195__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageDead(_458)<br/>_2138 = discriminant(_452)<br/>StorageDead(_456)<br/>StorageDead(_452)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">_469 = &amp;(*_470)<br/>StorageDead(_471)<br/></td></tr><tr><td align="left">_468 = PerpMarket::oracle_id(move _469)</td></tr></table>>];
    bb197__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>_467 = &amp;_468<br/>_466 = &amp;(*_467)<br/></td></tr><tr><td align="left">_464 = OracleMap::&lt;'_&gt;::get_price_data(move _465, move _466)</td></tr></table>>];
    bb198__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/>StorageDead(_465)<br/></td></tr><tr><td align="left">_463 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _464)</td></tr></table>>];
    bb199__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>_472 = discriminant(_463)<br/></td></tr><tr><td align="left">switchInt(move _472)</td></tr></table>>];
    bb200__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_476)<br/>_476 = ((_463 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_462 = _476<br/>StorageDead(_476)<br/>StorageDead(_470)<br/>StorageDead(_468)<br/>StorageDead(_467)<br/>StorageDead(_463)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>_482 = &amp;_451<br/></td></tr><tr><td align="left">_481 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _482)</td></tr></table>>];
    bb201__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_473)<br/>_473 = ((_463 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_475)<br/>_475 = _473<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _475)</td></tr></table>>];
    bb202__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_473)<br/>StorageDead(_470)<br/>StorageDead(_468)<br/>StorageDead(_467)<br/>StorageDead(_463)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">_480 = &amp;(*_481)<br/>StorageDead(_482)<br/>StorageLive(_483)<br/>_483 = (*_462)<br/>StorageLive(_484)<br/>_484 = _13<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>_486 = &amp;(((*_15).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_485 = &amp;(*_486)<br/></td></tr><tr><td align="left">_479 = PerpMarket::get_mm_oracle_price_data(move _480, move _483, move _484, move _485)</td></tr></table>>];
    bb204__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>StorageDead(_484)<br/>StorageDead(_483)<br/>StorageDead(_480)<br/></td></tr><tr><td align="left">_478 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _479)</td></tr></table>>];
    bb205__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>_487 = discriminant(_478)<br/></td></tr><tr><td align="left">switchInt(move _487)</td></tr></table>>];
    bb206__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_491)<br/>_491 = ((_478 as Continue).0: state::oracle::MMOraclePriceData)<br/>_477 = _491<br/>StorageDead(_491)<br/>StorageDead(_486)<br/>StorageDead(_481)<br/>StorageDead(_478)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>_498 = &amp;mut _451<br/>_497 = &amp;mut (*_498)<br/></td></tr><tr><td align="left">_496 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _497)</td></tr></table>>];
    bb207__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageLive(_488)<br/>_488 = ((_478 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_490)<br/>_490 = _488<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _490)</td></tr></table>>];
    bb208__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_488)<br/>StorageDead(_486)<br/>StorageDead(_481)<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">_495 = &amp;mut (*_496)<br/>StorageDead(_497)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>_500 = &amp;_477<br/>_499 = &amp;(*_500)<br/>StorageLive(_501)<br/>_501 = &amp;(*_15)<br/>StorageLive(_502)<br/>_502 = _14<br/>StorageLive(_503)<br/>_503 = _13<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = DriftAction::Liquidate<br/>_504 = Option::&lt;DriftAction&gt;::Some(move _505)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_494 = update_amm_and_check_validity(move _495, move _499, move _501, move _502, move _503, move _504)</td></tr></table>>];
    bb210__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/>StorageDead(_501)<br/>StorageDead(_499)<br/>StorageDead(_495)<br/></td></tr><tr><td align="left">_493 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _494)</td></tr></table>>];
    bb211__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>_506 = discriminant(_493)<br/></td></tr><tr><td align="left">switchInt(move _506)</td></tr></table>>];
    bb212__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_510)<br/>_510 = ((_493 as Continue).0: ())<br/>_492 = _510<br/>StorageDead(_510)<br/>StorageDead(_500)<br/>StorageDead(_498)<br/>StorageDead(_496)<br/>StorageDead(_493)<br/>StorageDead(_492)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>_515 = &amp;_451<br/></td></tr><tr><td align="left">_514 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _515)</td></tr></table>>];
    bb213__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageLive(_507)<br/>_507 = ((_493 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_509)<br/>_509 = _507<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _509)</td></tr></table>>];
    bb214__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>StorageDead(_507)<br/>StorageDead(_500)<br/>StorageDead(_498)<br/>StorageDead(_496)<br/>StorageDead(_493)<br/>StorageDead(_492)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>_513 = &amp;((*_514).22: state::perp_market::MarketStatus)<br/>StorageLive(_516)<br/>_2103 = const _<br/>_516 = &amp;(*_2103)<br/></td></tr><tr><td align="left">_512 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _513, move _516)</td></tr></table>>];
    bb216__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left">switchInt(move _512)</td></tr></table>>];
    bb217__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>_519 = &amp;_451<br/></td></tr><tr><td align="left">_518 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _519)</td></tr></table>>];
    bb218__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>_511 = ((*_518).7: i64)<br/>StorageDead(_518)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/>_511 = ((*_462).0: i64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>_2121 = const false<br/>_521 = move _451<br/></td></tr><tr><td align="left">_520 = std::mem::drop::&lt;RefMut&lt;'_, PerpMarket&gt;&gt;(move _521)</td></tr></table>>];
    bb221__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/>StorageDead(_520)<br/>StorageLive(_522)<br/>_522 = const 0_u64<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>_525 = &amp;_430<br/></td></tr><tr><td align="left">_524 = Vec::&lt;u32&gt;::is_empty(move _525)</td></tr></table>>];
    bb222__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left">switchInt(move _524)</td></tr></table>>];
    bb223__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>_527 = _522<br/>_526 = Gt(move _527, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _526)</td></tr></table>>];
    bb224__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>_531 = &amp;(*_4)<br/>StorageLive(_532)<br/>_532 = &amp;(*_10)<br/>StorageLive(_533)<br/>_533 = &amp;(*_11)<br/>StorageLive(_534)<br/>_534 = &amp;mut (*_12)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>_539 = _16<br/></td></tr><tr><td align="left">_538 = MarginContext::liquidation(move _539)</td></tr></table>>];
    bb226__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>_523 = _277<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>_541 = _1<br/></td></tr><tr><td align="left">_540 = MarketIdentifier::perp(move _541)</td></tr></table>>];
    bb228__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/></td></tr><tr><td align="left">_537 = MarginContext::track_market_margin_requirement(move _538, move _540)</td></tr></table>>];
    bb229__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>StorageDead(_538)<br/></td></tr><tr><td align="left">_536 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _537)</td></tr></table>>];
    bb230__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/>_542 = discriminant(_536)<br/></td></tr><tr><td align="left">switchInt(move _542)</td></tr></table>>];
    bb231__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_546)<br/>_546 = ((_536 as Continue).0: state::margin_calculation::MarginContext)<br/>_535 = _546<br/>StorageDead(_546)<br/></td></tr><tr><td align="left">_530 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _531, move _532, move _533, move _534, move _535)</td></tr></table>>];
    bb232__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageLive(_543)<br/>_543 = ((_536 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_545)<br/>_545 = _543<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _545)</td></tr></table>>];
    bb233__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_543)<br/>StorageDead(_535)<br/>StorageDead(_534)<br/>StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/>StorageDead(_530)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_535)<br/>StorageDead(_534)<br/>StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/></td></tr><tr><td align="left">_529 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _530)</td></tr></table>>];
    bb235__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>_547 = discriminant(_529)<br/></td></tr><tr><td align="left">switchInt(move _547)</td></tr></table>>];
    bb236__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_551)<br/>_551 = ((_529 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_528 = _551<br/>StorageDead(_551)<br/>StorageDead(_536)<br/>StorageDead(_529)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>_555 = &amp;_277<br/></td></tr><tr><td align="left">_554 = MarginCalculation::margin_shortage(move _555)</td></tr></table>>];
    bb237__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_548)<br/>_548 = ((_529 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_550)<br/>_550 = _548<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _550)</td></tr></table>>];
    bb238__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>StorageDead(_548)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/></td></tr><tr><td align="left">_553 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _554)</td></tr></table>>];
    bb240__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>_556 = discriminant(_553)<br/></td></tr><tr><td align="left">switchInt(move _556)</td></tr></table>>];
    bb241__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageLive(_560)<br/>_560 = ((_553 as Continue).0: u128)<br/>_552 = _560<br/>StorageDead(_560)<br/>StorageDead(_553)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>_564 = &amp;_528<br/></td></tr><tr><td align="left">_563 = MarginCalculation::margin_shortage(move _564)</td></tr></table>>];
    bb242__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_557)<br/>_557 = ((_553 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_559)<br/>_559 = _557<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _559)</td></tr></table>>];
    bb243__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_559)<br/>StorageDead(_557)<br/>StorageDead(_553)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_564)<br/></td></tr><tr><td align="left">_562 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _563)</td></tr></table>>];
    bb245__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_563)<br/>_565 = discriminant(_562)<br/></td></tr><tr><td align="left">switchInt(move _565)</td></tr></table>>];
    bb246__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_569)<br/>_569 = ((_562 as Continue).0: u128)<br/>_561 = _569<br/>StorageDead(_569)<br/>StorageDead(_562)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = _552<br/>StorageLive(_575)<br/>_575 = _561<br/></td></tr><tr><td align="left">_573 = core::num::&lt;impl u128&gt;::saturating_sub(move _574, move _575)</td></tr></table>>];
    bb247__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageLive(_566)<br/>_566 = ((_562 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_568)<br/>_568 = _566<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _568)</td></tr></table>>];
    bb248__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_568)<br/>StorageDead(_566)<br/>StorageDead(_562)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>StorageDead(_574)<br/></td></tr><tr><td align="left">_572 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _573)</td></tr></table>>];
    bb250__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_573)<br/></td></tr><tr><td align="left">_571 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _572)</td></tr></table>>];
    bb251__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_572)<br/>_576 = discriminant(_571)<br/></td></tr><tr><td align="left">switchInt(move _576)</td></tr></table>>];
    bb252__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageLive(_580)<br/>_580 = ((_571 as Continue).0: u64)<br/>_570 = _580<br/>StorageDead(_580)<br/>_378 = move _570<br/>StorageDead(_570)<br/>StorageDead(_571)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>_584 = &amp;mut (*_4)<br/>StorageLive(_585)<br/>_585 = _378<br/></td></tr><tr><td align="left">_583 = User::increment_margin_freed(move _584, move _585)</td></tr></table>>];
    bb253__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageLive(_577)<br/>_577 = ((_571 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_579)<br/>_579 = _577<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _579)</td></tr></table>>];
    bb254__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_579)<br/>StorageDead(_577)<br/>StorageDead(_570)<br/>StorageDead(_571)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb255__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_584)<br/></td></tr><tr><td align="left">_582 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _583)</td></tr></table>>];
    bb256__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_583)<br/>_586 = discriminant(_582)<br/></td></tr><tr><td align="left">switchInt(move _586)</td></tr></table>>];
    bb257__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageLive(_590)<br/>_590 = ((_582 as Continue).0: ())<br/>_581 = _590<br/>StorageDead(_590)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>_595 = &amp;_528<br/></td></tr><tr><td align="left">_594 = MarginCalculation::can_exit_liquidation(move _595)</td></tr></table>>];
    bb258__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageLive(_587)<br/>_587 = ((_582 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_589)<br/>_589 = _587<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _589)</td></tr></table>>];
    bb259__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_589)<br/>StorageDead(_587)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/></td></tr><tr><td align="left">_593 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _594)</td></tr></table>>];
    bb261__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/>_596 = discriminant(_593)<br/></td></tr><tr><td align="left">switchInt(move _596)</td></tr></table>>];
    bb262__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageLive(_600)<br/>_600 = ((_593 as Continue).0: bool)<br/>_592 = _600<br/>StorageDead(_600)<br/></td></tr><tr><td align="left">switchInt(move _592)</td></tr></table>>];
    bb263__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_597)<br/>_597 = ((_593 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_599)<br/>_599 = _597<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _599)</td></tr></table>>];
    bb264__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageDead(_597)<br/>StorageDead(_593)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb265__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>_616 = _14<br/>StorageLive(_617)<br/>_617 = _368<br/>StorageLive(_618)<br/>_618 = LiquidationType::LiquidatePerp<br/>StorageLive(_619)<br/>_619 = (*_5)<br/>StorageLive(_620)<br/>_620 = (*_8)<br/>StorageLive(_621)<br/>_621 = (_277.3: u128)<br/>StorageLive(_622)<br/>_622 = (_277.1: i128)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>_624 = &amp;(*_4)<br/></td></tr><tr><td align="left">_623 = User::is_bankrupt(move _624)</td></tr></table>>];
    bb266__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>_591 = const ()<br/>StorageDead(_592)<br/>StorageDead(_591)<br/>_523 = _528<br/>StorageDead(_561)<br/>StorageDead(_552)<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>StorageLive(_625)<br/>_2122 = const false<br/>_625 = move _430<br/>StorageLive(_626)<br/>_626 = _378<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>_628 = _1<br/>StorageLive(_629)<br/>_629 = _511<br/>StorageLive(_630)<br/>_630 = _522<br/>StorageLive(_631)<br/></td></tr><tr><td align="left">_631 = &lt;LiquidatePerpRecord as Default&gt;::default()</td></tr></table>>];
    bb268__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">_627 = LiquidatePerpRecord { market_index: move _628, oracle_price: move _629, base_asset_amount: (_631.2: i64), quote_asset_amount: (_631.3: i64), lp_shares: move _630, fill_record_id: (_631.5: u64), user_order_id: (_631.6: u32), liquidator_order_id: (_631.7: u32), liquidator_fee: (_631.8: u64), if_fee: (_631.9: u64) }<br/>StorageDead(_630)<br/>StorageDead(_629)<br/>StorageDead(_628)<br/>StorageLive(_632)<br/></td></tr><tr><td align="left">_632 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb269__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">_615 = LiquidationRecord { ts: move _616, liquidation_type: move _618, user: move _619, liquidator: move _620, margin_requirement: move _621, total_collateral: move _622, margin_freed: move _626, liquidation_id: move _617, bankrupt: move _623, canceled_order_ids: move _625, liquidate_perp: move _627, liquidate_spot: move (_632.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move (_632.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_632.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_632.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_632.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_627)<br/>StorageDead(_626)<br/>StorageDead(_625)<br/>StorageDead(_623)<br/>StorageDead(_622)<br/>StorageDead(_621)<br/>StorageDead(_620)<br/>StorageDead(_619)<br/>StorageDead(_618)<br/>StorageDead(_617)<br/>StorageDead(_616)<br/>_614 = &amp;_615<br/>_613 = &amp;(*_614)<br/></td></tr><tr><td align="left">_612 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _613)</td></tr></table>>];
    bb270__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/>_611 = &amp;_612<br/>_610 = &amp;(*_611)<br/></td></tr><tr><td align="left">_609 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _610)</td></tr></table>>];
    bb271__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">_608 = &amp;(*_609)<br/>StorageDead(_610)<br/>_607 = [move _608]<br/>StorageDead(_608)<br/>_606 = &amp;_607<br/>_605 = &amp;(*_606)<br/>_604 = move _605 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_605)<br/></td></tr><tr><td align="left">_603 = solana_program::log::sol_log_data(move _604)</td></tr></table>>];
    bb272__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_604)<br/></td></tr><tr><td align="left">drop(_612)</td></tr></table>>];
    bb273__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left">drop(_615)</td></tr></table>>];
    bb274__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left">drop(_632)</td></tr></table>>];
    bb275__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_631)<br/>StorageDead(_615)<br/>StorageDead(_614)<br/>StorageDead(_612)<br/>StorageDead(_611)<br/>StorageDead(_609)<br/>StorageDead(_607)<br/>StorageDead(_606)<br/>StorageDead(_603)<br/>_602 = const ()<br/>StorageDead(_602)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>_634 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_633 = User::exit_liquidation(move _634)</td></tr></table>>];
    bb276__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_634)<br/>StorageDead(_633)<br/>StorageLive(_635)<br/>_635 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _635)<br/>StorageDead(_635)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_524)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_639 = _379<br/>_640 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_641 = Lt(_639, _640)<br/></td></tr><tr><td align="left">assert(move _641, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _640, _639)</td></tr></table>>];
    bb278__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">_638 = (((*_4).4: [state::user::PerpPosition; 8])[_639].1: i64)<br/>_637 = Eq(move _638, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _637)</td></tr></table>>];
    bb279__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>StorageDead(_638)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>StorageLive(_645)<br/>_645 = const &quot;User has no base asset amount&quot;<br/>_644 = &amp;(*_645)<br/></td></tr><tr><td align="left">_643 = solana_program::log::sol_log(move _644)</td></tr></table>>];
    bb280__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageDead(_645)<br/>StorageDead(_643)<br/>StorageLive(_646)<br/>_646 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _646)<br/>StorageDead(_646)<br/>StorageDead(_637)<br/>StorageDead(_636)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>StorageDead(_638)<br/>_636 = const ()<br/>StorageDead(_637)<br/>StorageDead(_636)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>_650 = _2<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>_657 = &amp;(*_10)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = &amp;_1<br/>_658 = &amp;(*_659)<br/></td></tr><tr><td align="left">_656 = PerpMarketMap::&lt;'_&gt;::get_ref(move _657, move _658)</td></tr></table>>];
    bb282__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>StorageDead(_657)<br/></td></tr><tr><td align="left">_655 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _656)</td></tr></table>>];
    bb283__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">_2120 = const true<br/>StorageDead(_656)<br/>_660 = discriminant(_655)<br/></td></tr><tr><td align="left">switchInt(move _660)</td></tr></table>>];
    bb284__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageLive(_664)<br/>_664 = move ((_655 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_654 = move _664<br/>StorageDead(_664)<br/>_653 = &amp;_654<br/></td></tr><tr><td align="left">_652 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _653)</td></tr></table>>];
    bb285__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageLive(_661)<br/>_661 = ((_655 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_663)<br/>_663 = _661<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _663)</td></tr></table>>];
    bb286__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/>StorageDead(_661)<br/>StorageDead(_653)<br/>StorageDead(_651)<br/>StorageDead(_650)<br/>StorageDead(_649)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>_651 = (((*_652).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_649 = math::orders::standardize_base_asset_amount(move _650, move _651)</td></tr></table>>];
    bb288__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_651)<br/>StorageDead(_650)<br/></td></tr><tr><td align="left">_648 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _649)</td></tr></table>>];
    bb289__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_649)<br/>_665 = discriminant(_648)<br/></td></tr><tr><td align="left">switchInt(move _665)</td></tr></table>>];
    bb290__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageLive(_669)<br/>_669 = ((_648 as Continue).0: u64)<br/>_647 = _669<br/>StorageDead(_669)<br/></td></tr><tr><td align="left">drop(_654)</td></tr></table>>];
    bb291__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageLive(_666)<br/>_666 = ((_648 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_668)<br/>_668 = _666<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _668)</td></tr></table>>];
    bb292__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_668)<br/>StorageDead(_666)<br/></td></tr><tr><td align="left">drop(_654)</td></tr></table>>];
    bb293__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/>StorageLive(_675)<br/>_675 = ()<br/>_672 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _675)<br/>StorageDead(_675)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/>StorageLive(_676)<br/>_676 = error::ErrorCode::InvalidBaseAssetAmountForLiquidatePerp<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>_2102 = const _<br/>_687 = &amp;(*_2102)<br/>_686 = &amp;(*_687)<br/>_685 = move _686 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_686)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>_695 = &amp;_676<br/>_694 = &amp;(*_695)<br/></td></tr><tr><td align="left">_693 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _694)</td></tr></table>>];
    bb295__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/>_692 = [move _693]<br/>StorageDead(_693)<br/>_691 = &amp;_692<br/>_690 = &amp;(*_691)<br/>_689 = move _690 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_690)<br/></td></tr><tr><td align="left">_684 = Arguments::&lt;'_&gt;::new_v1(move _685, move _689)</td></tr></table>>];
    bb296__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_689)<br/>StorageDead(_685)<br/></td></tr><tr><td align="left">_683 = format(move _684)</td></tr></table>>];
    bb297__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_684)<br/>StorageDead(_695)<br/>StorageDead(_692)<br/>StorageDead(_691)<br/>StorageDead(_687)<br/>_682 = move _683<br/>StorageDead(_683)<br/>_681 = &amp;_682<br/>_680 = &amp;(*_681)<br/></td></tr><tr><td align="left">_679 = &lt;String as Deref&gt;::deref(move _680)</td></tr></table>>];
    bb298__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">_678 = &amp;(*_679)<br/>StorageDead(_680)<br/></td></tr><tr><td align="left">_677 = solana_program::log::sol_log(move _678)</td></tr></table>>];
    bb299__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/></td></tr><tr><td align="left">drop(_682)</td></tr></table>>];
    bb300__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/>StorageDead(_681)<br/>StorageDead(_679)<br/>StorageDead(_677)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>_2101 = const _<br/>_706 = &amp;(*_2101)<br/>_705 = &amp;(*_706)<br/>_704 = move _705 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_705)<br/></td></tr><tr><td align="left">_703 = Arguments::&lt;'_&gt;::new_const(move _704)</td></tr></table>>];
    bb301__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_704)<br/></td></tr><tr><td align="left">_702 = format(move _703)</td></tr></table>>];
    bb302__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>StorageDead(_706)<br/>_701 = move _702<br/>StorageDead(_702)<br/>_700 = &amp;_701<br/>_699 = &amp;(*_700)<br/></td></tr><tr><td align="left">_698 = &lt;String as Deref&gt;::deref(move _699)</td></tr></table>>];
    bb303__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">_697 = &amp;(*_698)<br/>StorageDead(_699)<br/></td></tr><tr><td align="left">_696 = solana_program::log::sol_log(move _697)</td></tr></table>>];
    bb304__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/></td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb305__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageDead(_700)<br/>StorageDead(_698)<br/>StorageDead(_696)<br/>StorageLive(_708)<br/>_708 = _676<br/>_672 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _708)<br/>StorageDead(_708)<br/>StorageDead(_676)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb306__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_673)<br/></td></tr><tr><td align="left">_671 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _672)</td></tr></table>>];
    bb307__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>_709 = discriminant(_671)<br/></td></tr><tr><td align="left">switchInt(move _709)</td></tr></table>>];
    bb308__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageLive(_713)<br/>_713 = ((_671 as Continue).0: ())<br/>_670 = _713<br/>StorageDead(_713)<br/>StorageDead(_671)<br/>StorageDead(_670)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>_718 = &amp;(*_10)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>_720 = &amp;_1<br/>_719 = &amp;(*_720)<br/></td></tr><tr><td align="left">_717 = PerpMarketMap::&lt;'_&gt;::get_ref(move _718, move _719)</td></tr></table>>];
    bb309__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageLive(_710)<br/>_710 = ((_671 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_712)<br/>_712 = _710<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _712)</td></tr></table>>];
    bb310__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/>StorageDead(_710)<br/>StorageDead(_671)<br/>StorageDead(_670)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_719)<br/>StorageDead(_718)<br/></td></tr><tr><td align="left">_716 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _717)</td></tr></table>>];
    bb312__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>_721 = discriminant(_716)<br/></td></tr><tr><td align="left">switchInt(move _721)</td></tr></table>>];
    bb313__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageLive(_725)<br/>_725 = move ((_716 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_715 = move _725<br/>StorageDead(_725)<br/>_2146 = discriminant(_716)<br/>StorageDead(_720)<br/>StorageDead(_716)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>_729 = &amp;_715<br/></td></tr><tr><td align="left">_728 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _729)</td></tr></table>>];
    bb314__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageLive(_722)<br/>_722 = ((_716 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_724)<br/>_724 = _722<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _724)</td></tr></table>>];
    bb315__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_724)<br/>StorageDead(_722)<br/>_2144 = discriminant(_716)<br/>StorageDead(_720)<br/>StorageDead(_716)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_729)<br/>_727 = &amp;((*_728).22: state::perp_market::MarketStatus)<br/>StorageLive(_730)<br/>_2100 = const _<br/>_730 = &amp;(*_2100)<br/></td></tr><tr><td align="left">_726 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::ne(move _727, move _730)</td></tr></table>>];
    bb317__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left">switchInt(move _726)</td></tr></table>>];
    bb318__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_728)<br/>StorageDead(_727)<br/>StorageLive(_732)<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_735 = _511<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>_738 = &amp;_715<br/></td></tr><tr><td align="left">_737 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _738)</td></tr></table>>];
    bb319__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>_736 = ((((*_737).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>_743 = &amp;((*_15).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_742 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _743)</td></tr></table>>];
    bb320__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_743)<br/></td></tr><tr><td align="left">_741 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _742)</td></tr></table>>];
    bb321__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_742)<br/></td></tr><tr><td align="left">_740 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _741)</td></tr></table>>];
    bb322__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_741)<br/>_744 = discriminant(_740)<br/></td></tr><tr><td align="left">switchInt(move _744)</td></tr></table>>];
    bb323__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageLive(_748)<br/>_748 = ((_740 as Continue).0: i64)<br/>_739 = _748<br/>StorageDead(_748)<br/></td></tr><tr><td align="left">_734 = math::orders::is_oracle_too_divergent_with_twap_5min(move _735, move _736, move _739)</td></tr></table>>];
    bb324__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageLive(_745)<br/>_745 = ((_740 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_747)<br/>_747 = _745<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _747)</td></tr></table>>];
    bb325__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_747)<br/>StorageDead(_745)<br/>StorageDead(_739)<br/>StorageDead(_736)<br/>StorageDead(_735)<br/>StorageDead(_734)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb326__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_739)<br/>StorageDead(_736)<br/>StorageDead(_735)<br/></td></tr><tr><td align="left">_733 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _734)</td></tr></table>>];
    bb327__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_734)<br/>_749 = discriminant(_733)<br/></td></tr><tr><td align="left">switchInt(move _749)</td></tr></table>>];
    bb328__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_753)<br/>_753 = ((_733 as Continue).0: bool)<br/>_732 = _753<br/>StorageDead(_753)<br/>StorageDead(_740)<br/>StorageDead(_737)<br/>StorageDead(_733)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>_757 = _732<br/></td></tr><tr><td align="left">switchInt(move _757)</td></tr></table>>];
    bb329__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageLive(_750)<br/>_750 = ((_733 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_752)<br/>_752 = _750<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _752)</td></tr></table>>];
    bb330__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_752)<br/>StorageDead(_750)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageLive(_759)<br/>_759 = error::ErrorCode::PriceBandsBreached<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>StorageLive(_762)<br/>StorageLive(_763)<br/>StorageLive(_764)<br/>StorageLive(_765)<br/>StorageLive(_766)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>_2099 = const _<br/>_770 = &amp;(*_2099)<br/>_769 = &amp;(*_770)<br/>_768 = move _769 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_769)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>StorageLive(_776)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>_778 = &amp;_759<br/>_777 = &amp;(*_778)<br/></td></tr><tr><td align="left">_776 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _777)</td></tr></table>>];
    bb332__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageLive(_758)<br/>_758 = ()<br/>_756 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _758)<br/>StorageDead(_758)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb333__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_777)<br/>_775 = [move _776]<br/>StorageDead(_776)<br/>_774 = &amp;_775<br/>_773 = &amp;(*_774)<br/>_772 = move _773 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_773)<br/></td></tr><tr><td align="left">_767 = Arguments::&lt;'_&gt;::new_v1(move _768, move _772)</td></tr></table>>];
    bb334__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/>StorageDead(_768)<br/></td></tr><tr><td align="left">_766 = format(move _767)</td></tr></table>>];
    bb335__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_767)<br/>StorageDead(_778)<br/>StorageDead(_775)<br/>StorageDead(_774)<br/>StorageDead(_770)<br/>_765 = move _766<br/>StorageDead(_766)<br/>_764 = &amp;_765<br/>_763 = &amp;(*_764)<br/></td></tr><tr><td align="left">_762 = &lt;String as Deref&gt;::deref(move _763)</td></tr></table>>];
    bb336__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">_761 = &amp;(*_762)<br/>StorageDead(_763)<br/></td></tr><tr><td align="left">_760 = solana_program::log::sol_log(move _761)</td></tr></table>>];
    bb337__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_761)<br/></td></tr><tr><td align="left">drop(_765)</td></tr></table>>];
    bb338__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_765)<br/>StorageDead(_764)<br/>StorageDead(_762)<br/>StorageDead(_760)<br/>StorageLive(_779)<br/>_779 = _759<br/>_756 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _779)<br/>StorageDead(_779)<br/>StorageDead(_759)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_757)<br/></td></tr><tr><td align="left">_755 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _756)</td></tr></table>>];
    bb340__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_756)<br/>_780 = discriminant(_755)<br/></td></tr><tr><td align="left">switchInt(move _780)</td></tr></table>>];
    bb341__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_784)<br/>_784 = ((_755 as Continue).0: ())<br/>_754 = _784<br/>StorageDead(_784)<br/>StorageDead(_755)<br/>StorageDead(_754)<br/>_714 = const ()<br/>StorageDead(_732)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb342__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageLive(_781)<br/>_781 = ((_755 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_783)<br/>_783 = _781<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _783)</td></tr></table>>];
    bb343__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_783)<br/>StorageDead(_781)<br/>StorageDead(_755)<br/>StorageDead(_754)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_728)<br/>StorageDead(_727)<br/>_714 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb345__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_726)<br/></td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb346__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>StorageDead(_714)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>StorageLive(_787)<br/>_787 = _379<br/>_788 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_789 = Lt(_787, _788)<br/></td></tr><tr><td align="left">assert(move _789, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _788, _787)</td></tr></table>>];
    bb347__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">_786 = (((*_4).4: [state::user::PerpPosition; 8])[_787].1: i64)<br/></td></tr><tr><td align="left">_785 = core::num::&lt;impl i64&gt;::unsigned_abs(move _786)</td></tr></table>>];
    bb348__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_786)<br/>StorageDead(_787)<br/>StorageLive(_790)<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>_799 = &amp;(*_10)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>_801 = &amp;_1<br/>_800 = &amp;(*_801)<br/></td></tr><tr><td align="left">_798 = PerpMarketMap::&lt;'_&gt;::get_ref(move _799, move _800)</td></tr></table>>];
    bb349__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_800)<br/>StorageDead(_799)<br/></td></tr><tr><td align="left">_797 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _798)</td></tr></table>>];
    bb350__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">_2119 = const true<br/>StorageDead(_798)<br/>_802 = discriminant(_797)<br/></td></tr><tr><td align="left">switchInt(move _802)</td></tr></table>>];
    bb351__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageLive(_806)<br/>_806 = move ((_797 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_796 = move _806<br/>StorageDead(_806)<br/>_795 = &amp;_796<br/></td></tr><tr><td align="left">_794 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _795)</td></tr></table>>];
    bb352__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageLive(_803)<br/>_803 = ((_797 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_805)<br/>_805 = _803<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _805)</td></tr></table>>];
    bb353__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_805)<br/>StorageDead(_803)<br/>StorageDead(_795)<br/>StorageDead(_793)<br/>StorageDead(_792)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb354__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">_793 = &amp;(*_794)<br/>StorageDead(_795)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>_810 = _785<br/></td></tr><tr><td align="left">_809 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _810)</td></tr></table>>];
    bb355__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/></td></tr><tr><td align="left">_808 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _809)</td></tr></table>>];
    bb356__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_809)<br/>_811 = discriminant(_808)<br/></td></tr><tr><td align="left">switchInt(move _811)</td></tr></table>>];
    bb357__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_815)<br/>_815 = ((_808 as Continue).0: u128)<br/>_807 = _815<br/>StorageDead(_815)<br/>StorageLive(_816)<br/>_816 = math::margin::MarginRequirementType::Maintenance<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>_818 = &amp;(*_4)<br/>StorageLive(_819)<br/>_819 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">_817 = User::is_high_leverage_mode(move _818, move _819)</td></tr></table>>];
    bb358__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_812)<br/>_812 = ((_808 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_814)<br/>_814 = _812<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _814)</td></tr></table>>];
    bb359__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_814)<br/>StorageDead(_812)<br/>StorageDead(_807)<br/>StorageDead(_793)<br/>StorageDead(_792)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb360__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_819)<br/>StorageDead(_818)<br/></td></tr><tr><td align="left">_792 = PerpMarket::get_margin_ratio(move _793, move _807, move _816, move _817)</td></tr></table>>];
    bb361__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/>StorageDead(_816)<br/>StorageDead(_807)<br/>StorageDead(_793)<br/></td></tr><tr><td align="left">_791 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _792)</td></tr></table>>];
    bb362__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_792)<br/>_820 = discriminant(_791)<br/></td></tr><tr><td align="left">switchInt(move _820)</td></tr></table>>];
    bb363__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageLive(_824)<br/>_824 = ((_791 as Continue).0: u32)<br/>_790 = _824<br/>StorageDead(_824)<br/>StorageDead(_808)<br/></td></tr><tr><td align="left">drop(_796)</td></tr></table>>];
    bb364__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageLive(_821)<br/>_821 = ((_791 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_823)<br/>_823 = _821<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _823)</td></tr></table>>];
    bb365__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageDead(_821)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb366__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_829)<br/>StorageDead(_828)<br/></td></tr><tr><td align="left">_826 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _827)</td></tr></table>>];
    bb367__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>_830 = discriminant(_826)<br/></td></tr><tr><td align="left">switchInt(move _830)</td></tr></table>>];
    bb368__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageLive(_834)<br/>_834 = ((_826 as Continue).0: u32)<br/>_825 = _834<br/>StorageDead(_834)<br/>StorageDead(_826)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>StorageLive(_837)<br/>StorageLive(_838)<br/>_838 = &amp;_523<br/></td></tr><tr><td align="left">_837 = MarginCalculation::margin_shortage(move _838)</td></tr></table>>];
    bb369__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageLive(_831)<br/>_831 = ((_826 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_833)<br/>_833 = _831<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _833)</td></tr></table>>];
    bb370__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_833)<br/>StorageDead(_831)<br/>StorageDead(_826)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb371__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_838)<br/></td></tr><tr><td align="left">_836 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _837)</td></tr></table>>];
    bb372__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_837)<br/>_839 = discriminant(_836)<br/></td></tr><tr><td align="left">switchInt(move _839)</td></tr></table>>];
    bb373__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageLive(_843)<br/>_843 = ((_836 as Continue).0: u128)<br/>_835 = _843<br/>StorageDead(_843)<br/>StorageDead(_836)<br/>StorageLive(_844)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>StorageLive(_847)<br/>_847 = &amp;(*_10)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>_849 = &amp;_1<br/>_848 = &amp;(*_849)<br/></td></tr><tr><td align="left">_846 = PerpMarketMap::&lt;'_&gt;::get_ref(move _847, move _848)</td></tr></table>>];
    bb374__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageLive(_840)<br/>_840 = ((_836 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_842)<br/>_842 = _840<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _842)</td></tr></table>>];
    bb375__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageDead(_840)<br/>StorageDead(_836)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb376__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_848)<br/>StorageDead(_847)<br/></td></tr><tr><td align="left">_845 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _846)</td></tr></table>>];
    bb377__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/>_850 = discriminant(_845)<br/></td></tr><tr><td align="left">switchInt(move _850)</td></tr></table>>];
    bb378__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageLive(_854)<br/>_854 = move ((_845 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_2118 = const true<br/>_844 = move _854<br/>StorageDead(_854)<br/>_2152 = discriminant(_845)<br/>StorageDead(_849)<br/>StorageDead(_845)<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>_858 = &amp;(*_11)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>_862 = &amp;_844<br/></td></tr><tr><td align="left">_861 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _862)</td></tr></table>>];
    bb379__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageLive(_851)<br/>_851 = ((_845 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_853)<br/>_853 = _851<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _853)</td></tr></table>>];
    bb380__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/>StorageDead(_851)<br/>_2150 = discriminant(_845)<br/>StorageDead(_849)<br/>StorageDead(_845)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb381__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_862)<br/>_860 = &amp;((*_861).26: u16)<br/>_859 = &amp;(*_860)<br/></td></tr><tr><td align="left">_857 = SpotMarketMap::&lt;'_&gt;::get_ref(move _858, move _859)</td></tr></table>>];
    bb382__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">_856 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _857)</td></tr></table>>];
    bb383__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>_863 = discriminant(_856)<br/></td></tr><tr><td align="left">switchInt(move _863)</td></tr></table>>];
    bb384__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageLive(_867)<br/>_867 = move ((_856 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_2117 = const true<br/>_855 = move _867<br/>StorageDead(_867)<br/>_2156 = discriminant(_856)<br/>StorageDead(_861)<br/>StorageDead(_860)<br/>StorageDead(_856)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>_872 = &amp;mut (*_12)<br/>StorageLive(_873)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>StorageLive(_877)<br/>StorageLive(_878)<br/>_878 = &amp;_855<br/></td></tr><tr><td align="left">_877 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _878)</td></tr></table>>];
    bb385__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageLive(_864)<br/>_864 = ((_856 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_866)<br/>_866 = _864<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _866)</td></tr></table>>];
    bb386__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/>StorageDead(_864)<br/>_2154 = discriminant(_856)<br/>StorageDead(_861)<br/>StorageDead(_860)<br/>StorageDead(_856)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">_876 = &amp;(*_877)<br/>StorageDead(_878)<br/></td></tr><tr><td align="left">_875 = SpotMarket::oracle_id(move _876)</td></tr></table>>];
    bb388__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_876)<br/>_874 = &amp;_875<br/>_873 = &amp;(*_874)<br/></td></tr><tr><td align="left">_871 = OracleMap::&lt;'_&gt;::get_price_data(move _872, move _873)</td></tr></table>>];
    bb389__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/>StorageDead(_872)<br/></td></tr><tr><td align="left">_870 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _871)</td></tr></table>>];
    bb390__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_871)<br/>_879 = discriminant(_870)<br/></td></tr><tr><td align="left">switchInt(move _879)</td></tr></table>>];
    bb391__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageLive(_883)<br/>_883 = ((_870 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_869 = _883<br/>StorageDead(_883)<br/>_868 = ((*_869).0: i64)<br/>StorageDead(_877)<br/>StorageDead(_875)<br/>StorageDead(_874)<br/>StorageDead(_870)<br/>StorageDead(_869)<br/>StorageLive(_884)<br/>StorageLive(_885)<br/>StorageLive(_886)<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>StorageLive(_889)<br/>StorageLive(_890)<br/>_890 = &amp;_844<br/></td></tr><tr><td align="left">_889 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _890)</td></tr></table>>];
    bb392__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageLive(_880)<br/>_880 = ((_870 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_882)<br/>_882 = _880<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _882)</td></tr></table>>];
    bb393__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_882)<br/>StorageDead(_880)<br/>StorageDead(_877)<br/>StorageDead(_875)<br/>StorageDead(_874)<br/>StorageDead(_870)<br/>StorageDead(_869)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb394__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">_888 = &amp;(*_889)<br/>StorageDead(_890)<br/>StorageLive(_891)<br/>StorageLive(_892)<br/>_892 = &amp;(*_4)<br/>StorageLive(_893)<br/>_893 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">_891 = User::is_high_leverage_mode(move _892, move _893)</td></tr></table>>];
    bb395__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_893)<br/>StorageDead(_892)<br/></td></tr><tr><td align="left">_887 = PerpMarket::get_base_liquidator_fee(move _888, move _891)</td></tr></table>>];
    bb396__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_891)<br/>StorageDead(_888)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>StorageLive(_899)<br/>_899 = &amp;_844<br/></td></tr><tr><td align="left">_898 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _899)</td></tr></table>>];
    bb397__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">_897 = &amp;(*_898)<br/>StorageDead(_899)<br/></td></tr><tr><td align="left">_896 = PerpMarket::get_max_liquidation_fee(move _897)</td></tr></table>>];
    bb398__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/></td></tr><tr><td align="left">_895 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _896)</td></tr></table>>];
    bb399__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>_900 = discriminant(_895)<br/></td></tr><tr><td align="left">switchInt(move _900)</td></tr></table>>];
    bb400__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageLive(_904)<br/>_904 = ((_895 as Continue).0: u32)<br/>_894 = _904<br/>StorageDead(_904)<br/>StorageLive(_905)<br/>_905 = ((*_4).14: u64)<br/>StorageLive(_906)<br/>_906 = _13<br/></td></tr><tr><td align="left">_886 = get_liquidation_fee(move _887, move _894, move _905, move _906)</td></tr></table>>];
    bb401__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageLive(_901)<br/>_901 = ((_895 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_903)<br/>_903 = _901<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _903)</td></tr></table>>];
    bb402__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_903)<br/>StorageDead(_901)<br/>StorageDead(_894)<br/>StorageDead(_887)<br/>StorageDead(_886)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb403__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_906)<br/>StorageDead(_905)<br/>StorageDead(_894)<br/>StorageDead(_887)<br/></td></tr><tr><td align="left">_885 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _886)</td></tr></table>>];
    bb404__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/>_907 = discriminant(_885)<br/></td></tr><tr><td align="left">switchInt(move _907)</td></tr></table>>];
    bb405__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageLive(_911)<br/>_911 = ((_885 as Continue).0: u32)<br/>_884 = _911<br/>StorageDead(_911)<br/>StorageDead(_898)<br/>StorageDead(_895)<br/>StorageDead(_889)<br/>StorageDead(_885)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>_918 = &amp;_523<br/>StorageLive(_919)<br/>_919 = _835<br/></td></tr><tr><td align="left">_917 = MarginCalculation::tracked_market_margin_shortage(move _918, move _919)</td></tr></table>>];
    bb406__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageLive(_908)<br/>_908 = ((_885 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_910)<br/>_910 = _908<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _910)</td></tr></table>>];
    bb407__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_910)<br/>StorageDead(_908)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb408__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_919)<br/>StorageDead(_918)<br/></td></tr><tr><td align="left">_916 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _917)</td></tr></table>>];
    bb409__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_917)<br/>_920 = discriminant(_916)<br/></td></tr><tr><td align="left">switchInt(move _920)</td></tr></table>>];
    bb410__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageLive(_924)<br/>_924 = ((_916 as Continue).0: u128)<br/>_915 = _924<br/>StorageDead(_924)<br/>StorageLive(_925)<br/>_925 = _785<br/>StorageLive(_926)<br/>_926 = _825<br/>StorageLive(_927)<br/>_927 = _884<br/>StorageLive(_928)<br/>_928 = _511<br/>StorageLive(_929)<br/>_929 = _868<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>StorageLive(_932)<br/>_932 = &amp;_844<br/></td></tr><tr><td align="left">_931 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _932)</td></tr></table>>];
    bb411__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageLive(_921)<br/>_921 = ((_916 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_923)<br/>_923 = _921<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _923)</td></tr></table>>];
    bb412__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_923)<br/>StorageDead(_921)<br/>StorageDead(_915)<br/>StorageDead(_914)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb413__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_932)<br/>_930 = ((*_931).14: u32)<br/></td></tr><tr><td align="left">_914 = calculate_perp_if_fee(move _915, move _925, move _926, move _927, move _928, move _929, move _930)</td></tr></table>>];
    bb414__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_930)<br/>StorageDead(_929)<br/>StorageDead(_928)<br/>StorageDead(_927)<br/>StorageDead(_926)<br/>StorageDead(_925)<br/>StorageDead(_915)<br/></td></tr><tr><td align="left">_913 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _914)</td></tr></table>>];
    bb415__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_914)<br/>_933 = discriminant(_913)<br/></td></tr><tr><td align="left">switchInt(move _933)</td></tr></table>>];
    bb416__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageLive(_937)<br/>_937 = ((_913 as Continue).0: u32)<br/>_912 = _937<br/>StorageDead(_937)<br/>StorageDead(_931)<br/>StorageDead(_916)<br/>StorageDead(_913)<br/>StorageLive(_938)<br/>StorageLive(_939)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>_941 = _835<br/>StorageLive(_942)<br/>_942 = _825<br/>StorageLive(_943)<br/>_943 = _884<br/>StorageLive(_944)<br/>_944 = _912<br/>StorageLive(_945)<br/>_945 = _511<br/>StorageLive(_946)<br/>_946 = _868<br/></td></tr><tr><td align="left">_940 = calculate_base_asset_amount_to_cover_margin_shortage(move _941, move _942, move _943, move _944, move _945, move _946)</td></tr></table>>];
    bb417__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageLive(_934)<br/>_934 = ((_913 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_936)<br/>_936 = _934<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _936)</td></tr></table>>];
    bb418__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_936)<br/>StorageDead(_934)<br/>StorageDead(_931)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb419__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_946)<br/>StorageDead(_945)<br/>StorageDead(_944)<br/>StorageDead(_943)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/></td></tr><tr><td align="left">_939 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _940)</td></tr></table>>];
    bb420__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_940)<br/>_947 = discriminant(_939)<br/></td></tr><tr><td align="left">switchInt(move _947)</td></tr></table>>];
    bb421__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageLive(_951)<br/>_951 = ((_939 as Continue).0: u64)<br/>_938 = _951<br/>StorageDead(_951)<br/>StorageDead(_939)<br/>StorageLive(_952)<br/>StorageLive(_953)<br/>StorageLive(_954)<br/>_954 = _938<br/>_953 = Ne(move _954, const _)<br/></td></tr><tr><td align="left">switchInt(move _953)</td></tr></table>>];
    bb422__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageLive(_948)<br/>_948 = ((_939 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_950)<br/>_950 = _948<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _950)</td></tr></table>>];
    bb423__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_950)<br/>StorageDead(_948)<br/>StorageDead(_939)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb424__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_954)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>StorageLive(_957)<br/>StorageLive(_958)<br/>_958 = _938<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>StorageLive(_961)<br/>_961 = &amp;_844<br/></td></tr><tr><td align="left">_960 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _961)</td></tr></table>>];
    bb425__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_954)<br/>_952 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb426__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_961)<br/>_959 = (((*_960).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_957 = standardize_base_asset_amount_ceil(move _958, move _959)</td></tr></table>>];
    bb427__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_959)<br/>StorageDead(_958)<br/></td></tr><tr><td align="left">_956 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _957)</td></tr></table>>];
    bb428__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_957)<br/>_962 = discriminant(_956)<br/></td></tr><tr><td align="left">switchInt(move _962)</td></tr></table>>];
    bb429__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageLive(_966)<br/>_966 = ((_956 as Continue).0: u64)<br/>_955 = _966<br/>StorageDead(_966)<br/>_938 = move _955<br/>StorageDead(_955)<br/>StorageDead(_960)<br/>StorageDead(_956)<br/>_952 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb430__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageLive(_963)<br/>_963 = ((_956 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_965)<br/>_965 = _963<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _965)</td></tr></table>>];
    bb431__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_965)<br/>StorageDead(_963)<br/>StorageDead(_955)<br/>StorageDead(_960)<br/>StorageDead(_956)<br/>StorageDead(_953)<br/>StorageDead(_952)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb432__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_953)<br/>StorageDead(_952)<br/>StorageLive(_967)<br/>StorageLive(_968)<br/>_2118 = const false<br/>_968 = move _844<br/></td></tr><tr><td align="left">_967 = std::mem::drop::&lt;Ref&lt;'_, PerpMarket&gt;&gt;(move _968)</td></tr></table>>];
    bb433__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_968)<br/>StorageDead(_967)<br/>StorageLive(_969)<br/>StorageLive(_970)<br/>_2117 = const false<br/>_970 = move _855<br/></td></tr><tr><td align="left">_969 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _970)</td></tr></table>>];
    bb434__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_970)<br/>StorageDead(_969)<br/>StorageLive(_971)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>StorageLive(_974)<br/>_974 = &amp;(*_4)<br/>StorageLive(_975)<br/>_975 = _835<br/>StorageLive(_976)<br/>_976 = _13<br/>StorageLive(_977)<br/>_977 = _17<br/>StorageLive(_978)<br/>_978 = _19<br/></td></tr><tr><td align="left">_973 = calculate_max_pct_to_liquidate(move _974, move _975, move _976, move _977, move _978)</td></tr></table>>];
    bb435__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_978)<br/>StorageDead(_977)<br/>StorageDead(_976)<br/>StorageDead(_975)<br/>StorageDead(_974)<br/></td></tr><tr><td align="left">_972 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _973)</td></tr></table>>];
    bb436__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_973)<br/>_979 = discriminant(_972)<br/></td></tr><tr><td align="left">switchInt(move _979)</td></tr></table>>];
    bb437__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageLive(_983)<br/>_983 = ((_972 as Continue).0: u128)<br/>_971 = _983<br/>StorageDead(_983)<br/>StorageDead(_972)<br/>StorageLive(_984)<br/>StorageLive(_985)<br/>StorageLive(_986)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>StorageLive(_991)<br/>StorageLive(_992)<br/>StorageLive(_993)<br/>StorageLive(_994)<br/>_994 = _938<br/></td></tr><tr><td align="left">_993 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _994)</td></tr></table>>];
    bb438__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageLive(_980)<br/>_980 = ((_972 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_982)<br/>_982 = _980<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _982)</td></tr></table>>];
    bb439__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_982)<br/>StorageDead(_980)<br/>StorageDead(_972)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb440__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_994)<br/></td></tr><tr><td align="left">_992 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _993)</td></tr></table>>];
    bb441__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_993)<br/>_995 = discriminant(_992)<br/></td></tr><tr><td align="left">switchInt(move _995)</td></tr></table>>];
    bb442__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageLive(_999)<br/>_999 = ((_992 as Continue).0: u128)<br/>_991 = _999<br/>StorageDead(_999)<br/>StorageLive(_1000)<br/>_1000 = _971<br/></td></tr><tr><td align="left">_990 = core::num::&lt;impl u128&gt;::saturating_mul(move _991, move _1000)</td></tr></table>>];
    bb443__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageLive(_996)<br/>_996 = ((_992 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_998)<br/>_998 = _996<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _998)</td></tr></table>>];
    bb444__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_998)<br/>StorageDead(_996)<br/>StorageDead(_991)<br/>StorageDead(_990)<br/>StorageDead(_989)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb445__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1000)<br/>StorageDead(_991)<br/></td></tr><tr><td align="left">_989 = &lt;u128 as SafeMath&gt;::safe_div(move _990, const _)</td></tr></table>>];
    bb446__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_990)<br/></td></tr><tr><td align="left">_988 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _989)</td></tr></table>>];
    bb447__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_989)<br/>_1001 = discriminant(_988)<br/></td></tr><tr><td align="left">switchInt(move _1001)</td></tr></table>>];
    bb448__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageLive(_1005)<br/>_1005 = ((_988 as Continue).0: u128)<br/>_987 = _1005<br/>StorageDead(_1005)<br/></td></tr><tr><td align="left">_986 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _987)</td></tr></table>>];
    bb449__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageLive(_1002)<br/>_1002 = ((_988 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1004)<br/>_1004 = _1002<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1004)</td></tr></table>>];
    bb450__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>StorageDead(_1002)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb451__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/></td></tr><tr><td align="left">_985 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _986)</td></tr></table>>];
    bb452__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_986)<br/>_1006 = discriminant(_985)<br/></td></tr><tr><td align="left">switchInt(move _1006)</td></tr></table>>];
    bb453__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageLive(_1010)<br/>_1010 = ((_985 as Continue).0: u64)<br/>_984 = _1010<br/>StorageDead(_1010)<br/>StorageDead(_992)<br/>StorageDead(_988)<br/>StorageDead(_985)<br/>StorageLive(_1011)<br/>StorageLive(_1012)<br/>StorageLive(_1013)<br/>_1013 = _984<br/>_1012 = Eq(move _1013, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _1012)</td></tr></table>>];
    bb454__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageLive(_1007)<br/>_1007 = ((_985 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1009)<br/>_1009 = _1007<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1009)</td></tr></table>>];
    bb455__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1009)<br/>StorageDead(_1007)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb456__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>StorageLive(_1017)<br/>_1017 = const &quot;max_base_asset_amount_allowed_to_be_transferred == 0&quot;<br/>_1016 = &amp;(*_1017)<br/></td></tr><tr><td align="left">_1015 = solana_program::log::sol_log(move _1016)</td></tr></table>>];
    bb457__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/>_1011 = const ()<br/>StorageDead(_1012)<br/>StorageDead(_1011)<br/>StorageLive(_1019)<br/>StorageLive(_1020)<br/>StorageLive(_1021)<br/>StorageLive(_1022)<br/>StorageLive(_1023)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>StorageLive(_1026)<br/>StorageLive(_1027)<br/>StorageLive(_1028)<br/>_1028 = _785<br/></td></tr><tr><td align="left">_1027 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _1028)</td></tr></table>>];
    bb458__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1016)<br/>StorageDead(_1017)<br/>StorageDead(_1015)<br/>StorageLive(_1018)<br/>_1018 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1018)<br/>StorageDead(_1018)<br/>StorageDead(_1012)<br/>StorageDead(_1011)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb459__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1028)<br/></td></tr><tr><td align="left">_1026 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1027)</td></tr></table>>];
    bb460__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_1027)<br/>_1029 = discriminant(_1026)<br/></td></tr><tr><td align="left">switchInt(move _1029)</td></tr></table>>];
    bb461__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageLive(_1033)<br/>_1033 = ((_1026 as Continue).0: i128)<br/>_1025 = _1033<br/>StorageDead(_1033)<br/>StorageLive(_1034)<br/>_1034 = _511<br/></td></tr><tr><td align="left">_1024 = calculate_base_asset_value_with_oracle_price(move _1025, move _1034)</td></tr></table>>];
    bb462__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageLive(_1030)<br/>_1030 = ((_1026 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1032)<br/>_1032 = _1030<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1032)</td></tr></table>>];
    bb463__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_1032)<br/>StorageDead(_1030)<br/>StorageDead(_1025)<br/>StorageDead(_1024)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb464__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1034)<br/>StorageDead(_1025)<br/></td></tr><tr><td align="left">_1023 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1024)</td></tr></table>>];
    bb465__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1024)<br/>_1035 = discriminant(_1023)<br/></td></tr><tr><td align="left">switchInt(move _1035)</td></tr></table>>];
    bb466__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageLive(_1039)<br/>_1039 = ((_1023 as Continue).0: u128)<br/>_1022 = _1039<br/>StorageDead(_1039)<br/></td></tr><tr><td align="left">_1021 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _1022)</td></tr></table>>];
    bb467__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageLive(_1036)<br/>_1036 = ((_1023 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1038)<br/>_1038 = _1036<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1038)</td></tr></table>>];
    bb468__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageDead(_1038)<br/>StorageDead(_1036)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb469__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1022)<br/></td></tr><tr><td align="left">_1020 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1021)</td></tr></table>>];
    bb470__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1021)<br/>_1040 = discriminant(_1020)<br/></td></tr><tr><td align="left">switchInt(move _1040)</td></tr></table>>];
    bb471__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageLive(_1044)<br/>_1044 = ((_1020 as Continue).0: u64)<br/>_1019 = _1044<br/>StorageDead(_1044)<br/>StorageDead(_1026)<br/>StorageDead(_1023)<br/>StorageDead(_1020)<br/>StorageLive(_1045)<br/>StorageLive(_1046)<br/>StorageLive(_1047)<br/>_1047 = _1019<br/>StorageLive(_1048)<br/>_1049 = CheckedMul(const 50_u64, const _)<br/></td></tr><tr><td align="left">assert(!move (_1049.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 50_u64, const _)</td></tr></table>>];
    bb472__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageLive(_1041)<br/>_1041 = ((_1020 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1043)<br/>_1043 = _1041<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1043)</td></tr></table>>];
    bb473__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1043)<br/>StorageDead(_1041)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb474__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">_1048 = move (_1049.0: u64)<br/>_1046 = Gt(move _1047, move _1048)<br/></td></tr><tr><td align="left">switchInt(move _1046)</td></tr></table>>];
    bb475__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1048)<br/>StorageDead(_1047)<br/>_1045 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb476__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1048)<br/>StorageDead(_1047)<br/>_1045 = _785<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb477__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1046)<br/>StorageLive(_1050)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>_1052 = _785<br/>StorageLive(_1053)<br/>_1053 = _647<br/></td></tr><tr><td align="left">_1051 = &lt;u64 as Ord&gt;::min(move _1052, move _1053)</td></tr></table>>];
    bb478__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_1053)<br/>StorageDead(_1052)<br/>StorageLive(_1054)<br/>StorageLive(_1055)<br/>_1055 = _984<br/>StorageLive(_1056)<br/>_1056 = _1045<br/></td></tr><tr><td align="left">_1054 = &lt;u64 as Ord&gt;::max(move _1055, move _1056)</td></tr></table>>];
    bb479__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageDead(_1056)<br/>StorageDead(_1055)<br/></td></tr><tr><td align="left">_1050 = &lt;u64 as Ord&gt;::min(move _1051, move _1054)</td></tr></table>>];
    bb480__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_1054)<br/>StorageDead(_1051)<br/>StorageLive(_1057)<br/>StorageLive(_1058)<br/>StorageLive(_1059)<br/>StorageLive(_1060)<br/>_1060 = _1050<br/>StorageLive(_1061)<br/>StorageLive(_1062)<br/>StorageLive(_1063)<br/>StorageLive(_1064)<br/>StorageLive(_1065)<br/>StorageLive(_1066)<br/>StorageLive(_1067)<br/>_1067 = &amp;(*_10)<br/>StorageLive(_1068)<br/>StorageLive(_1069)<br/>_1069 = &amp;_1<br/>_1068 = &amp;(*_1069)<br/></td></tr><tr><td align="left">_1066 = PerpMarketMap::&lt;'_&gt;::get_ref(move _1067, move _1068)</td></tr></table>>];
    bb481__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1068)<br/>StorageDead(_1067)<br/></td></tr><tr><td align="left">_1065 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1066)</td></tr></table>>];
    bb482__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">_2116 = const true<br/>StorageDead(_1066)<br/>_1070 = discriminant(_1065)<br/></td></tr><tr><td align="left">switchInt(move _1070)</td></tr></table>>];
    bb483__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageLive(_1074)<br/>_1074 = move ((_1065 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1064 = move _1074<br/>StorageDead(_1074)<br/>_1063 = &amp;_1064<br/></td></tr><tr><td align="left">_1062 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1063)</td></tr></table>>];
    bb484__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageLive(_1071)<br/>_1071 = ((_1065 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1073)<br/>_1073 = _1071<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1073)</td></tr></table>>];
    bb485__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1073)<br/>StorageDead(_1071)<br/>StorageDead(_1063)<br/>StorageDead(_1061)<br/>StorageDead(_1060)<br/>StorageDead(_1059)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb486__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_1063)<br/>_1061 = (((*_1062).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_1059 = standardize_base_asset_amount_ceil(move _1060, move _1061)</td></tr></table>>];
    bb487__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_1061)<br/>StorageDead(_1060)<br/></td></tr><tr><td align="left">_1058 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1059)</td></tr></table>>];
    bb488__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_1059)<br/>_1075 = discriminant(_1058)<br/></td></tr><tr><td align="left">switchInt(move _1075)</td></tr></table>>];
    bb489__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageLive(_1079)<br/>_1079 = ((_1058 as Continue).0: u64)<br/>_1057 = _1079<br/>StorageDead(_1079)<br/></td></tr><tr><td align="left">drop(_1064)</td></tr></table>>];
    bb490__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageLive(_1076)<br/>_1076 = ((_1058 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1078)<br/>_1078 = _1076<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1078)</td></tr></table>>];
    bb491__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1078)<br/>StorageDead(_1076)<br/></td></tr><tr><td align="left">drop(_1064)</td></tr></table>>];
    bb492__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageLive(_1082)<br/>_1082 = ((_3 as Some).0: u64)<br/>StorageLive(_1083)<br/>StorageLive(_1084)<br/>StorageLive(_1085)<br/>StorageLive(_1086)<br/>_1086 = _511<br/></td></tr><tr><td align="left">_1085 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _1086)</td></tr></table>>];
    bb493__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_1086)<br/></td></tr><tr><td align="left">_1084 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1085)</td></tr></table>>];
    bb494__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_1085)<br/>_1087 = discriminant(_1084)<br/></td></tr><tr><td align="left">switchInt(move _1087)</td></tr></table>>];
    bb495__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageLive(_1091)<br/>_1091 = ((_1084 as Continue).0: u128)<br/>_1083 = _1091<br/>StorageDead(_1091)<br/>StorageDead(_1084)<br/>StorageLive(_1092)<br/>StorageLive(_1093)<br/>StorageLive(_1094)<br/>StorageLive(_1095)<br/>StorageLive(_1096)<br/>StorageLive(_1097)<br/>StorageLive(_1098)<br/>_1098 = _1083<br/>StorageLive(_1099)<br/>StorageLive(_1100)<br/>StorageLive(_1101)<br/>StorageLive(_1102)<br/>_1102 = _884<br/></td></tr><tr><td align="left">_1101 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _1102)</td></tr></table>>];
    bb496__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageLive(_1088)<br/>_1088 = ((_1084 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1090)<br/>_1090 = _1088<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1090)</td></tr></table>>];
    bb497__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageDead(_1090)<br/>StorageDead(_1088)<br/>StorageDead(_1084)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb498__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_1102)<br/></td></tr><tr><td align="left">_1100 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1101)</td></tr></table>>];
    bb499__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">StorageDead(_1101)<br/>_1103 = discriminant(_1100)<br/></td></tr><tr><td align="left">switchInt(move _1103)</td></tr></table>>];
    bb500__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageLive(_1107)<br/>_1107 = ((_1100 as Continue).0: u128)<br/>_1099 = _1107<br/>StorageDead(_1107)<br/></td></tr><tr><td align="left">_1097 = &lt;u128 as SafeMath&gt;::safe_mul(move _1098, move _1099)</td></tr></table>>];
    bb501__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageLive(_1104)<br/>_1104 = ((_1100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1106)<br/>_1106 = _1104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1106)</td></tr></table>>];
    bb502__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_1106)<br/>StorageDead(_1104)<br/>StorageDead(_1099)<br/>StorageDead(_1098)<br/>StorageDead(_1097)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb503__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_1099)<br/>StorageDead(_1098)<br/></td></tr><tr><td align="left">_1096 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1097)</td></tr></table>>];
    bb504__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_1097)<br/>_1108 = discriminant(_1096)<br/></td></tr><tr><td align="left">switchInt(move _1108)</td></tr></table>>];
    bb505__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageLive(_1112)<br/>_1112 = ((_1096 as Continue).0: u128)<br/>_1095 = _1112<br/>StorageDead(_1112)<br/></td></tr><tr><td align="left">_1094 = &lt;u128 as SafeMath&gt;::safe_div(move _1095, const _)</td></tr></table>>];
    bb506__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageLive(_1109)<br/>_1109 = ((_1096 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1111)<br/>_1111 = _1109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1111)</td></tr></table>>];
    bb507__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_1111)<br/>StorageDead(_1109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb508__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_1095)<br/></td></tr><tr><td align="left">_1093 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1094)</td></tr></table>>];
    bb509__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageDead(_1094)<br/>_1113 = discriminant(_1093)<br/></td></tr><tr><td align="left">switchInt(move _1113)</td></tr></table>>];
    bb510__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageLive(_1117)<br/>_1117 = ((_1093 as Continue).0: u128)<br/>_1092 = _1117<br/>StorageDead(_1117)<br/>StorageDead(_1100)<br/>StorageDead(_1096)<br/>StorageDead(_1093)<br/>StorageLive(_1118)<br/>StorageLive(_1119)<br/>StorageLive(_1120)<br/>_1120 = _379<br/>_1121 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_1122 = Lt(_1120, _1121)<br/></td></tr><tr><td align="left">assert(move _1122, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _1121, _1120)</td></tr></table>>];
    bb511__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageLive(_1114)<br/>_1114 = ((_1093 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1116)<br/>_1116 = _1114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1116)</td></tr></table>>];
    bb512__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_1116)<br/>StorageDead(_1114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb513__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">_1119 = &amp;((*_4).4: [state::user::PerpPosition; 8])[_1120]<br/></td></tr><tr><td align="left">_1118 = PerpPosition::get_direction(move _1119)</td></tr></table>>];
    bb514__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_1119)<br/>_1123 = discriminant(_1118)<br/></td></tr><tr><td align="left">switchInt(move _1123)</td></tr></table>>];
    bb515__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageLive(_1196)<br/>StorageLive(_1197)<br/>StorageLive(_1198)<br/>StorageLive(_1199)<br/>_1199 = _1083<br/>StorageLive(_1200)<br/>_1200 = _1092<br/></td></tr><tr><td align="left">_1198 = &lt;u128 as SafeMath&gt;::safe_add(move _1199, move _1200)</td></tr></table>>];
    bb516__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageLive(_1124)<br/>StorageLive(_1125)<br/>StorageLive(_1126)<br/>StorageLive(_1127)<br/>_1127 = _1083<br/>StorageLive(_1128)<br/>_1128 = _1092<br/></td></tr><tr><td align="left">_1126 = &lt;u128 as SafeMath&gt;::safe_sub(move _1127, move _1128)</td></tr></table>>];
    bb517__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_1128)<br/>StorageDead(_1127)<br/></td></tr><tr><td align="left">_1125 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1126)</td></tr></table>>];
    bb518__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_1126)<br/>_1129 = discriminant(_1125)<br/></td></tr><tr><td align="left">switchInt(move _1129)</td></tr></table>>];
    bb519__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageLive(_1133)<br/>_1133 = ((_1125 as Continue).0: u128)<br/>_1124 = _1133<br/>StorageDead(_1133)<br/>StorageDead(_1125)<br/>StorageLive(_1134)<br/>StorageLive(_1135)<br/>StorageLive(_1136)<br/>StorageLive(_1137)<br/>_1137 = _1124<br/>StorageLive(_1138)<br/>StorageLive(_1139)<br/>StorageLive(_1140)<br/>StorageLive(_1141)<br/>_1141 = _1082<br/></td></tr><tr><td align="left">_1140 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1141)</td></tr></table>>];
    bb520__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageLive(_1130)<br/>_1130 = ((_1125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1132)<br/>_1132 = _1130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1132)</td></tr></table>>];
    bb521__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageDead(_1132)<br/>StorageDead(_1130)<br/>StorageDead(_1125)<br/>StorageDead(_1124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb522__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_1141)<br/></td></tr><tr><td align="left">_1139 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1140)</td></tr></table>>];
    bb523__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_1140)<br/>_1142 = discriminant(_1139)<br/></td></tr><tr><td align="left">switchInt(move _1142)</td></tr></table>>];
    bb524__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageLive(_1146)<br/>_1146 = ((_1139 as Continue).0: u128)<br/>_1138 = _1146<br/>StorageDead(_1146)<br/>_1136 = Le(move _1137, move _1138)<br/></td></tr><tr><td align="left">switchInt(move _1136)</td></tr></table>>];
    bb525__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageLive(_1143)<br/>_1143 = ((_1139 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1145)<br/>_1145 = _1143<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1145)</td></tr></table>>];
    bb526__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageDead(_1145)<br/>StorageDead(_1143)<br/>StorageDead(_1139)<br/>StorageDead(_1138)<br/>StorageDead(_1137)<br/>StorageDead(_1136)<br/>StorageDead(_1135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb527__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>StorageDead(_1138)<br/>StorageDead(_1137)<br/>StorageLive(_1147)<br/>_1147 = ()<br/>_1135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1147)<br/>StorageDead(_1147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb528__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">StorageDead(_1139)<br/>StorageDead(_1138)<br/>StorageDead(_1137)<br/>StorageLive(_1148)<br/>_1148 = error::ErrorCode::LiquidationDoesntSatisfyLimitPrice<br/>StorageLive(_1149)<br/>StorageLive(_1150)<br/>StorageLive(_1151)<br/>StorageLive(_1152)<br/>StorageLive(_1153)<br/>StorageLive(_1154)<br/>StorageLive(_1155)<br/>StorageLive(_1156)<br/>StorageLive(_1157)<br/>StorageLive(_1158)<br/>StorageLive(_1159)<br/>_2098 = const _<br/>_1159 = &amp;(*_2098)<br/>_1158 = &amp;(*_1159)<br/>_1157 = move _1158 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1158)<br/>StorageLive(_1161)<br/>StorageLive(_1162)<br/>StorageLive(_1163)<br/>StorageLive(_1164)<br/>StorageLive(_1165)<br/>StorageLive(_1166)<br/>StorageLive(_1167)<br/>_1167 = &amp;_1148<br/>_1166 = &amp;(*_1167)<br/></td></tr><tr><td align="left">_1165 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1166)</td></tr></table>>];
    bb529__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageDead(_1166)<br/>_1164 = [move _1165]<br/>StorageDead(_1165)<br/>_1163 = &amp;_1164<br/>_1162 = &amp;(*_1163)<br/>_1161 = move _1162 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1162)<br/></td></tr><tr><td align="left">_1156 = Arguments::&lt;'_&gt;::new_v1(move _1157, move _1161)</td></tr></table>>];
    bb530__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_1161)<br/>StorageDead(_1157)<br/></td></tr><tr><td align="left">_1155 = format(move _1156)</td></tr></table>>];
    bb531__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageDead(_1156)<br/>StorageDead(_1167)<br/>StorageDead(_1164)<br/>StorageDead(_1163)<br/>StorageDead(_1159)<br/>_1154 = move _1155<br/>StorageDead(_1155)<br/>_1153 = &amp;_1154<br/>_1152 = &amp;(*_1153)<br/></td></tr><tr><td align="left">_1151 = &lt;String as Deref&gt;::deref(move _1152)</td></tr></table>>];
    bb532__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">_1150 = &amp;(*_1151)<br/>StorageDead(_1152)<br/></td></tr><tr><td align="left">_1149 = solana_program::log::sol_log(move _1150)</td></tr></table>>];
    bb533__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_1150)<br/></td></tr><tr><td align="left">drop(_1154)</td></tr></table>>];
    bb534__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">StorageDead(_1154)<br/>StorageDead(_1153)<br/>StorageDead(_1151)<br/>StorageDead(_1149)<br/>StorageLive(_1168)<br/>StorageLive(_1169)<br/>StorageLive(_1170)<br/>StorageLive(_1171)<br/>StorageLive(_1172)<br/>StorageLive(_1173)<br/>StorageLive(_1174)<br/>StorageLive(_1175)<br/>StorageLive(_1176)<br/>StorageLive(_1177)<br/>StorageLive(_1178)<br/>_2097 = const _<br/>_1178 = &amp;(*_2097)<br/>_1177 = &amp;(*_1178)<br/>_1176 = move _1177 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1177)<br/>StorageLive(_1180)<br/>StorageLive(_1181)<br/>StorageLive(_1182)<br/>StorageLive(_1183)<br/>StorageLive(_1184)<br/>StorageLive(_1185)<br/>StorageLive(_1186)<br/>_1186 = &amp;_1082<br/>_1185 = &amp;(*_1186)<br/></td></tr><tr><td align="left">_1184 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1185)</td></tr></table>>];
    bb535__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_1185)<br/>StorageLive(_1187)<br/>StorageLive(_1188)<br/>StorageLive(_1189)<br/>_1189 = &amp;_1124<br/>_1188 = &amp;(*_1189)<br/></td></tr><tr><td align="left">_1187 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1188)</td></tr></table>>];
    bb536__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">StorageDead(_1188)<br/>_1183 = [move _1184, move _1187]<br/>StorageDead(_1187)<br/>StorageDead(_1184)<br/>_1182 = &amp;_1183<br/>_1181 = &amp;(*_1182)<br/>_1180 = move _1181 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1181)<br/></td></tr><tr><td align="left">_1175 = Arguments::&lt;'_&gt;::new_v1(move _1176, move _1180)</td></tr></table>>];
    bb537__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageDead(_1180)<br/>StorageDead(_1176)<br/></td></tr><tr><td align="left">_1174 = format(move _1175)</td></tr></table>>];
    bb538__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageDead(_1175)<br/>StorageDead(_1189)<br/>StorageDead(_1186)<br/>StorageDead(_1183)<br/>StorageDead(_1182)<br/>StorageDead(_1178)<br/>_1173 = move _1174<br/>StorageDead(_1174)<br/>_1172 = &amp;_1173<br/>_1171 = &amp;(*_1172)<br/></td></tr><tr><td align="left">_1170 = &lt;String as Deref&gt;::deref(move _1171)</td></tr></table>>];
    bb539__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">_1169 = &amp;(*_1170)<br/>StorageDead(_1171)<br/></td></tr><tr><td align="left">_1168 = solana_program::log::sol_log(move _1169)</td></tr></table>>];
    bb540__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageDead(_1169)<br/></td></tr><tr><td align="left">drop(_1173)</td></tr></table>>];
    bb541__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageDead(_1173)<br/>StorageDead(_1172)<br/>StorageDead(_1170)<br/>StorageDead(_1168)<br/>StorageLive(_1190)<br/>_1190 = _1148<br/>_1135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1190)<br/>StorageDead(_1190)<br/>StorageDead(_1148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb542__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageDead(_1136)<br/></td></tr><tr><td align="left">_1134 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1135)</td></tr></table>>];
    bb543__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageDead(_1135)<br/>_1191 = discriminant(_1134)<br/></td></tr><tr><td align="left">switchInt(move _1191)</td></tr></table>>];
    bb544__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageLive(_1195)<br/>_1195 = ((_1134 as Continue).0: ())<br/>_1080 = _1195<br/>StorageDead(_1195)<br/>StorageDead(_1124)<br/>StorageDead(_1134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb545__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">StorageLive(_1192)<br/>_1192 = ((_1134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1194)<br/>_1194 = _1192<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1194)</td></tr></table>>];
    bb546__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageDead(_1194)<br/>StorageDead(_1192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb547__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageDead(_1200)<br/>StorageDead(_1199)<br/></td></tr><tr><td align="left">_1197 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1198)</td></tr></table>>];
    bb548__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">StorageDead(_1198)<br/>_1201 = discriminant(_1197)<br/></td></tr><tr><td align="left">switchInt(move _1201)</td></tr></table>>];
    bb549__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">StorageLive(_1205)<br/>_1205 = ((_1197 as Continue).0: u128)<br/>_1196 = _1205<br/>StorageDead(_1205)<br/>StorageDead(_1197)<br/>StorageLive(_1206)<br/>StorageLive(_1207)<br/>StorageLive(_1208)<br/>StorageLive(_1209)<br/>_1209 = _1196<br/>StorageLive(_1210)<br/>StorageLive(_1211)<br/>StorageLive(_1212)<br/>StorageLive(_1213)<br/>_1213 = _1082<br/></td></tr><tr><td align="left">_1212 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1213)</td></tr></table>>];
    bb550__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">StorageLive(_1202)<br/>_1202 = ((_1197 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1204)<br/>_1204 = _1202<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1204)</td></tr></table>>];
    bb551__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">StorageDead(_1204)<br/>StorageDead(_1202)<br/>StorageDead(_1197)<br/>StorageDead(_1196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb552__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">StorageDead(_1213)<br/></td></tr><tr><td align="left">_1211 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1212)</td></tr></table>>];
    bb553__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageDead(_1212)<br/>_1214 = discriminant(_1211)<br/></td></tr><tr><td align="left">switchInt(move _1214)</td></tr></table>>];
    bb554__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">StorageLive(_1218)<br/>_1218 = ((_1211 as Continue).0: u128)<br/>_1210 = _1218<br/>StorageDead(_1218)<br/>_1208 = Ge(move _1209, move _1210)<br/></td></tr><tr><td align="left">switchInt(move _1208)</td></tr></table>>];
    bb555__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageLive(_1215)<br/>_1215 = ((_1211 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1217)<br/>_1217 = _1215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1217)</td></tr></table>>];
    bb556__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">StorageDead(_1217)<br/>StorageDead(_1215)<br/>StorageDead(_1211)<br/>StorageDead(_1210)<br/>StorageDead(_1209)<br/>StorageDead(_1208)<br/>StorageDead(_1207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb557__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">StorageDead(_1211)<br/>StorageDead(_1210)<br/>StorageDead(_1209)<br/>StorageLive(_1219)<br/>_1219 = ()<br/>_1207 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1219)<br/>StorageDead(_1219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb558__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageDead(_1211)<br/>StorageDead(_1210)<br/>StorageDead(_1209)<br/>StorageLive(_1220)<br/>_1220 = error::ErrorCode::LiquidationDoesntSatisfyLimitPrice<br/>StorageLive(_1221)<br/>StorageLive(_1222)<br/>StorageLive(_1223)<br/>StorageLive(_1224)<br/>StorageLive(_1225)<br/>StorageLive(_1226)<br/>StorageLive(_1227)<br/>StorageLive(_1228)<br/>StorageLive(_1229)<br/>StorageLive(_1230)<br/>StorageLive(_1231)<br/>_2096 = const _<br/>_1231 = &amp;(*_2096)<br/>_1230 = &amp;(*_1231)<br/>_1229 = move _1230 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1230)<br/>StorageLive(_1233)<br/>StorageLive(_1234)<br/>StorageLive(_1235)<br/>StorageLive(_1236)<br/>StorageLive(_1237)<br/>StorageLive(_1238)<br/>StorageLive(_1239)<br/>_1239 = &amp;_1220<br/>_1238 = &amp;(*_1239)<br/></td></tr><tr><td align="left">_1237 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1238)</td></tr></table>>];
    bb559__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageDead(_1238)<br/>_1236 = [move _1237]<br/>StorageDead(_1237)<br/>_1235 = &amp;_1236<br/>_1234 = &amp;(*_1235)<br/>_1233 = move _1234 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1234)<br/></td></tr><tr><td align="left">_1228 = Arguments::&lt;'_&gt;::new_v1(move _1229, move _1233)</td></tr></table>>];
    bb560__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">StorageDead(_1233)<br/>StorageDead(_1229)<br/></td></tr><tr><td align="left">_1227 = format(move _1228)</td></tr></table>>];
    bb561__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left" balign="left">StorageDead(_1228)<br/>StorageDead(_1239)<br/>StorageDead(_1236)<br/>StorageDead(_1235)<br/>StorageDead(_1231)<br/>_1226 = move _1227<br/>StorageDead(_1227)<br/>_1225 = &amp;_1226<br/>_1224 = &amp;(*_1225)<br/></td></tr><tr><td align="left">_1223 = &lt;String as Deref&gt;::deref(move _1224)</td></tr></table>>];
    bb562__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left" balign="left">_1222 = &amp;(*_1223)<br/>StorageDead(_1224)<br/></td></tr><tr><td align="left">_1221 = solana_program::log::sol_log(move _1222)</td></tr></table>>];
    bb563__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left" balign="left">StorageDead(_1222)<br/></td></tr><tr><td align="left">drop(_1226)</td></tr></table>>];
    bb564__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left" balign="left">StorageDead(_1226)<br/>StorageDead(_1225)<br/>StorageDead(_1223)<br/>StorageDead(_1221)<br/>StorageLive(_1240)<br/>StorageLive(_1241)<br/>StorageLive(_1242)<br/>StorageLive(_1243)<br/>StorageLive(_1244)<br/>StorageLive(_1245)<br/>StorageLive(_1246)<br/>StorageLive(_1247)<br/>StorageLive(_1248)<br/>StorageLive(_1249)<br/>StorageLive(_1250)<br/>_2095 = const _<br/>_1250 = &amp;(*_2095)<br/>_1249 = &amp;(*_1250)<br/>_1248 = move _1249 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1249)<br/>StorageLive(_1252)<br/>StorageLive(_1253)<br/>StorageLive(_1254)<br/>StorageLive(_1255)<br/>StorageLive(_1256)<br/>StorageLive(_1257)<br/>StorageLive(_1258)<br/>_1258 = &amp;_1082<br/>_1257 = &amp;(*_1258)<br/></td></tr><tr><td align="left">_1256 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1257)</td></tr></table>>];
    bb565__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left" balign="left">StorageDead(_1257)<br/>StorageLive(_1259)<br/>StorageLive(_1260)<br/>StorageLive(_1261)<br/>_1261 = &amp;_1196<br/>_1260 = &amp;(*_1261)<br/></td></tr><tr><td align="left">_1259 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1260)</td></tr></table>>];
    bb566__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left" balign="left">StorageDead(_1260)<br/>_1255 = [move _1256, move _1259]<br/>StorageDead(_1259)<br/>StorageDead(_1256)<br/>_1254 = &amp;_1255<br/>_1253 = &amp;(*_1254)<br/>_1252 = move _1253 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1253)<br/></td></tr><tr><td align="left">_1247 = Arguments::&lt;'_&gt;::new_v1(move _1248, move _1252)</td></tr></table>>];
    bb567__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">567</td></tr><tr><td align="left" balign="left">StorageDead(_1252)<br/>StorageDead(_1248)<br/></td></tr><tr><td align="left">_1246 = format(move _1247)</td></tr></table>>];
    bb568__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">568</td></tr><tr><td align="left" balign="left">StorageDead(_1247)<br/>StorageDead(_1261)<br/>StorageDead(_1258)<br/>StorageDead(_1255)<br/>StorageDead(_1254)<br/>StorageDead(_1250)<br/>_1245 = move _1246<br/>StorageDead(_1246)<br/>_1244 = &amp;_1245<br/>_1243 = &amp;(*_1244)<br/></td></tr><tr><td align="left">_1242 = &lt;String as Deref&gt;::deref(move _1243)</td></tr></table>>];
    bb569__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">569</td></tr><tr><td align="left" balign="left">_1241 = &amp;(*_1242)<br/>StorageDead(_1243)<br/></td></tr><tr><td align="left">_1240 = solana_program::log::sol_log(move _1241)</td></tr></table>>];
    bb570__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">570</td></tr><tr><td align="left" balign="left">StorageDead(_1241)<br/></td></tr><tr><td align="left">drop(_1245)</td></tr></table>>];
    bb571__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">571</td></tr><tr><td align="left" balign="left">StorageDead(_1245)<br/>StorageDead(_1244)<br/>StorageDead(_1242)<br/>StorageDead(_1240)<br/>StorageLive(_1262)<br/>_1262 = _1220<br/>_1207 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1262)<br/>StorageDead(_1262)<br/>StorageDead(_1220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb572__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">572</td></tr><tr><td align="left" balign="left">StorageDead(_1208)<br/></td></tr><tr><td align="left">_1206 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1207)</td></tr></table>>];
    bb573__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">573</td></tr><tr><td align="left" balign="left">StorageDead(_1207)<br/>_1263 = discriminant(_1206)<br/></td></tr><tr><td align="left">switchInt(move _1263)</td></tr></table>>];
    bb574__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">574</td></tr><tr><td align="left" balign="left">StorageLive(_1267)<br/>_1267 = ((_1206 as Continue).0: ())<br/>_1080 = _1267<br/>StorageDead(_1267)<br/>StorageDead(_1196)<br/>StorageDead(_1206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb575__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">575</td></tr><tr><td align="left" balign="left">StorageLive(_1264)<br/>_1264 = ((_1206 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1266)<br/>_1266 = _1264<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1266)</td></tr></table>>];
    bb576__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">576</td></tr><tr><td align="left" balign="left">StorageDead(_1266)<br/>StorageDead(_1264)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb577__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">577</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/>StorageDead(_1083)<br/>StorageDead(_1120)<br/>StorageDead(_1118)<br/>StorageDead(_1082)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb578__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">578</td></tr><tr><td align="left" balign="left">_1080 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb579__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">579</td></tr><tr><td align="left" balign="left">StorageDead(_1080)<br/>StorageLive(_1268)<br/>StorageLive(_1269)<br/>StorageLive(_1270)<br/>StorageLive(_1271)<br/>StorageLive(_1272)<br/>StorageLive(_1273)<br/>StorageLive(_1274)<br/>StorageLive(_1275)<br/>StorageLive(_1276)<br/>StorageLive(_1277)<br/>_1277 = _1057<br/></td></tr><tr><td align="left">_1276 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _1277)</td></tr></table>>];
    bb580__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">580</td></tr><tr><td align="left" balign="left">StorageDead(_1277)<br/></td></tr><tr><td align="left">_1275 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1276)</td></tr></table>>];
    bb581__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">581</td></tr><tr><td align="left" balign="left">StorageDead(_1276)<br/>_1278 = discriminant(_1275)<br/></td></tr><tr><td align="left">switchInt(move _1278)</td></tr></table>>];
    bb582__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">582</td></tr><tr><td align="left" balign="left">StorageLive(_1282)<br/>_1282 = ((_1275 as Continue).0: i128)<br/>_1274 = _1282<br/>StorageDead(_1282)<br/>StorageLive(_1283)<br/>_1283 = _511<br/></td></tr><tr><td align="left">_1273 = calculate_base_asset_value_with_oracle_price(move _1274, move _1283)</td></tr></table>>];
    bb583__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">583</td></tr><tr><td align="left" balign="left">StorageLive(_1279)<br/>_1279 = ((_1275 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1281)<br/>_1281 = _1279<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1281)</td></tr></table>>];
    bb584__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">584</td></tr><tr><td align="left" balign="left">StorageDead(_1281)<br/>StorageDead(_1279)<br/>StorageDead(_1274)<br/>StorageDead(_1273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb585__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">585</td></tr><tr><td align="left" balign="left">StorageDead(_1283)<br/>StorageDead(_1274)<br/></td></tr><tr><td align="left">_1272 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1273)</td></tr></table>>];
    bb586__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">586</td></tr><tr><td align="left" balign="left">StorageDead(_1273)<br/>_1284 = discriminant(_1272)<br/></td></tr><tr><td align="left">switchInt(move _1284)</td></tr></table>>];
    bb587__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">587</td></tr><tr><td align="left" balign="left">StorageLive(_1288)<br/>_1288 = ((_1272 as Continue).0: u128)<br/>_1271 = _1288<br/>StorageDead(_1288)<br/></td></tr><tr><td align="left">_1270 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _1271)</td></tr></table>>];
    bb588__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">588</td></tr><tr><td align="left" balign="left">StorageLive(_1285)<br/>_1285 = ((_1272 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1287)<br/>_1287 = _1285<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1287)</td></tr></table>>];
    bb589__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left" balign="left">StorageDead(_1287)<br/>StorageDead(_1285)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb590__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">StorageDead(_1271)<br/></td></tr><tr><td align="left">_1269 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1270)</td></tr></table>>];
    bb591__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">StorageDead(_1270)<br/>_1289 = discriminant(_1269)<br/></td></tr><tr><td align="left">switchInt(move _1289)</td></tr></table>>];
    bb592__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">StorageLive(_1293)<br/>_1293 = ((_1269 as Continue).0: u64)<br/>_1268 = _1293<br/>StorageDead(_1293)<br/>StorageDead(_1275)<br/>StorageDead(_1272)<br/>StorageDead(_1269)<br/>StorageLive(_1294)<br/>StorageLive(_1295)<br/>StorageLive(_1296)<br/>StorageLive(_1297)<br/>StorageLive(_1298)<br/>StorageLive(_1299)<br/>StorageLive(_1300)<br/>StorageLive(_1301)<br/>StorageLive(_1302)<br/>StorageLive(_1303)<br/>StorageLive(_1304)<br/>StorageLive(_1305)<br/>StorageLive(_1306)<br/>StorageLive(_1307)<br/>_1307 = _1268<br/></td></tr><tr><td align="left">_1306 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1307)</td></tr></table>>];
    bb593__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left" balign="left">StorageLive(_1290)<br/>_1290 = ((_1269 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1292)<br/>_1292 = _1290<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1292)</td></tr></table>>];
    bb594__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left" balign="left">StorageDead(_1292)<br/>StorageDead(_1290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb595__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left" balign="left">StorageDead(_1307)<br/></td></tr><tr><td align="left">_1305 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1306)</td></tr></table>>];
    bb596__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">596</td></tr><tr><td align="left" balign="left">StorageDead(_1306)<br/>_1308 = discriminant(_1305)<br/></td></tr><tr><td align="left">switchInt(move _1308)</td></tr></table>>];
    bb597__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">597</td></tr><tr><td align="left" balign="left">StorageLive(_1312)<br/>_1312 = ((_1305 as Continue).0: u128)<br/>_1304 = _1312<br/>StorageDead(_1312)<br/>StorageLive(_1313)<br/>StorageLive(_1314)<br/>StorageLive(_1315)<br/>StorageLive(_1316)<br/>_1316 = _884<br/></td></tr><tr><td align="left">_1315 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _1316)</td></tr></table>>];
    bb598__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">598</td></tr><tr><td align="left" balign="left">StorageLive(_1309)<br/>_1309 = ((_1305 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1311)<br/>_1311 = _1309<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1311)</td></tr></table>>];
    bb599__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">599</td></tr><tr><td align="left" balign="left">StorageDead(_1311)<br/>StorageDead(_1309)<br/>StorageDead(_1304)<br/>StorageDead(_1303)<br/>StorageDead(_1301)<br/>StorageDead(_1300)<br/>StorageDead(_1298)<br/>StorageDead(_1297)<br/>StorageDead(_1295)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb600__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">600</td></tr><tr><td align="left" balign="left">StorageDead(_1316)<br/></td></tr><tr><td align="left">_1314 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1315)</td></tr></table>>];
    bb601__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">601</td></tr><tr><td align="left" balign="left">StorageDead(_1315)<br/>_1317 = discriminant(_1314)<br/></td></tr><tr><td align="left">switchInt(move _1317)</td></tr></table>>];
    bb602__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">602</td></tr><tr><td align="left" balign="left">StorageLive(_1321)<br/>_1321 = ((_1314 as Continue).0: u128)<br/>_1313 = _1321<br/>StorageDead(_1321)<br/></td></tr><tr><td align="left">_1303 = &lt;u128 as SafeMath&gt;::safe_mul(move _1304, move _1313)</td></tr></table>>];
    bb603__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">603</td></tr><tr><td align="left" balign="left">StorageLive(_1318)<br/>_1318 = ((_1314 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1320)<br/>_1320 = _1318<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1320)</td></tr></table>>];
    bb604__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">604</td></tr><tr><td align="left" balign="left">StorageDead(_1320)<br/>StorageDead(_1318)<br/>StorageDead(_1313)<br/>StorageDead(_1304)<br/>StorageDead(_1303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb605__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">605</td></tr><tr><td align="left" balign="left">StorageDead(_1313)<br/>StorageDead(_1304)<br/></td></tr><tr><td align="left">_1302 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1303)</td></tr></table>>];
    bb606__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">606</td></tr><tr><td align="left" balign="left">StorageDead(_1303)<br/>_1322 = discriminant(_1302)<br/></td></tr><tr><td align="left">switchInt(move _1322)</td></tr></table>>];
    bb607__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">607</td></tr><tr><td align="left" balign="left">StorageLive(_1326)<br/>_1326 = ((_1302 as Continue).0: u128)<br/>_1301 = _1326<br/>StorageDead(_1326)<br/></td></tr><tr><td align="left">_1300 = &lt;u128 as SafeMath&gt;::safe_div(move _1301, const _)</td></tr></table>>];
    bb608__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">608</td></tr><tr><td align="left" balign="left">StorageLive(_1323)<br/>_1323 = ((_1302 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1325)<br/>_1325 = _1323<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1325)</td></tr></table>>];
    bb609__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">609</td></tr><tr><td align="left" balign="left">StorageDead(_1325)<br/>StorageDead(_1323)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb610__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">610</td></tr><tr><td align="left" balign="left">StorageDead(_1301)<br/></td></tr><tr><td align="left">_1299 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1300)</td></tr></table>>];
    bb611__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">611</td></tr><tr><td align="left" balign="left">StorageDead(_1300)<br/>_1327 = discriminant(_1299)<br/></td></tr><tr><td align="left">switchInt(move _1327)</td></tr></table>>];
    bb612__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">612</td></tr><tr><td align="left" balign="left">StorageLive(_1331)<br/>_1331 = ((_1299 as Continue).0: u128)<br/>_1298 = _1331<br/>StorageDead(_1331)<br/></td></tr><tr><td align="left">_1297 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _1298)</td></tr></table>>];
    bb613__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">613</td></tr><tr><td align="left" balign="left">StorageLive(_1328)<br/>_1328 = ((_1299 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1330)<br/>_1330 = _1328<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1330)</td></tr></table>>];
    bb614__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">614</td></tr><tr><td align="left" balign="left">StorageDead(_1330)<br/>StorageDead(_1328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb615__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">615</td></tr><tr><td align="left" balign="left">StorageDead(_1298)<br/></td></tr><tr><td align="left">_1296 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1297)</td></tr></table>>];
    bb616__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">616</td></tr><tr><td align="left" balign="left">StorageDead(_1297)<br/>_1332 = discriminant(_1296)<br/></td></tr><tr><td align="left">switchInt(move _1332)</td></tr></table>>];
    bb617__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">617</td></tr><tr><td align="left" balign="left">StorageLive(_1336)<br/>_1336 = ((_1296 as Continue).0: i64)<br/>_1295 = _1336<br/>StorageDead(_1336)<br/>_1337 = Eq(_1295, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _1337, &quot;attempt to negate `{}`, which would overflow&quot;, _1295)</td></tr></table>>];
    bb618__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">618</td></tr><tr><td align="left" balign="left">StorageLive(_1333)<br/>_1333 = ((_1296 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1335)<br/>_1335 = _1333<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1335)</td></tr></table>>];
    bb619__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">619</td></tr><tr><td align="left" balign="left">StorageDead(_1335)<br/>StorageDead(_1333)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb620__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">620</td></tr><tr><td align="left" balign="left">_1294 = Neg(move _1295)<br/>StorageDead(_1295)<br/>StorageDead(_1314)<br/>StorageDead(_1305)<br/>StorageDead(_1302)<br/>StorageDead(_1299)<br/>StorageDead(_1296)<br/>StorageLive(_1338)<br/>StorageLive(_1339)<br/>StorageLive(_1340)<br/>StorageLive(_1341)<br/>StorageLive(_1342)<br/>StorageLive(_1343)<br/>StorageLive(_1344)<br/>StorageLive(_1345)<br/>StorageLive(_1346)<br/>StorageLive(_1347)<br/>StorageLive(_1348)<br/>StorageLive(_1349)<br/>StorageLive(_1350)<br/>StorageLive(_1351)<br/>_1351 = _1268<br/></td></tr><tr><td align="left">_1350 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1351)</td></tr></table>>];
    bb621__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">621</td></tr><tr><td align="left" balign="left">StorageDead(_1351)<br/></td></tr><tr><td align="left">_1349 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1350)</td></tr></table>>];
    bb622__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">622</td></tr><tr><td align="left" balign="left">StorageDead(_1350)<br/>_1352 = discriminant(_1349)<br/></td></tr><tr><td align="left">switchInt(move _1352)</td></tr></table>>];
    bb623__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">623</td></tr><tr><td align="left" balign="left">StorageLive(_1356)<br/>_1356 = ((_1349 as Continue).0: u128)<br/>_1348 = _1356<br/>StorageDead(_1356)<br/>StorageLive(_1357)<br/>StorageLive(_1358)<br/>StorageLive(_1359)<br/>StorageLive(_1360)<br/>_1360 = _912<br/></td></tr><tr><td align="left">_1359 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _1360)</td></tr></table>>];
    bb624__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">624</td></tr><tr><td align="left" balign="left">StorageLive(_1353)<br/>_1353 = ((_1349 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1355)<br/>_1355 = _1353<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1355)</td></tr></table>>];
    bb625__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">625</td></tr><tr><td align="left" balign="left">StorageDead(_1355)<br/>StorageDead(_1353)<br/>StorageDead(_1348)<br/>StorageDead(_1347)<br/>StorageDead(_1345)<br/>StorageDead(_1344)<br/>StorageDead(_1342)<br/>StorageDead(_1341)<br/>StorageDead(_1339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb626__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">626</td></tr><tr><td align="left" balign="left">StorageDead(_1360)<br/></td></tr><tr><td align="left">_1358 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1359)</td></tr></table>>];
    bb627__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">627</td></tr><tr><td align="left" balign="left">StorageDead(_1359)<br/>_1361 = discriminant(_1358)<br/></td></tr><tr><td align="left">switchInt(move _1361)</td></tr></table>>];
    bb628__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">628</td></tr><tr><td align="left" balign="left">StorageLive(_1365)<br/>_1365 = ((_1358 as Continue).0: u128)<br/>_1357 = _1365<br/>StorageDead(_1365)<br/></td></tr><tr><td align="left">_1347 = &lt;u128 as SafeMath&gt;::safe_mul(move _1348, move _1357)</td></tr></table>>];
    bb629__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">629</td></tr><tr><td align="left" balign="left">StorageLive(_1362)<br/>_1362 = ((_1358 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1364)<br/>_1364 = _1362<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1364)</td></tr></table>>];
    bb630__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">630</td></tr><tr><td align="left" balign="left">StorageDead(_1364)<br/>StorageDead(_1362)<br/>StorageDead(_1357)<br/>StorageDead(_1348)<br/>StorageDead(_1347)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb631__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">631</td></tr><tr><td align="left" balign="left">StorageDead(_1357)<br/>StorageDead(_1348)<br/></td></tr><tr><td align="left">_1346 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1347)</td></tr></table>>];
    bb632__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">632</td></tr><tr><td align="left" balign="left">StorageDead(_1347)<br/>_1366 = discriminant(_1346)<br/></td></tr><tr><td align="left">switchInt(move _1366)</td></tr></table>>];
    bb633__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">633</td></tr><tr><td align="left" balign="left">StorageLive(_1370)<br/>_1370 = ((_1346 as Continue).0: u128)<br/>_1345 = _1370<br/>StorageDead(_1370)<br/></td></tr><tr><td align="left">_1344 = &lt;u128 as SafeMath&gt;::safe_div(move _1345, const _)</td></tr></table>>];
    bb634__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">634</td></tr><tr><td align="left" balign="left">StorageLive(_1367)<br/>_1367 = ((_1346 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1369)<br/>_1369 = _1367<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1369)</td></tr></table>>];
    bb635__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">635</td></tr><tr><td align="left" balign="left">StorageDead(_1369)<br/>StorageDead(_1367)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb636__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">636</td></tr><tr><td align="left" balign="left">StorageDead(_1345)<br/></td></tr><tr><td align="left">_1343 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1344)</td></tr></table>>];
    bb637__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">637</td></tr><tr><td align="left" balign="left">StorageDead(_1344)<br/>_1371 = discriminant(_1343)<br/></td></tr><tr><td align="left">switchInt(move _1371)</td></tr></table>>];
    bb638__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">638</td></tr><tr><td align="left" balign="left">StorageLive(_1375)<br/>_1375 = ((_1343 as Continue).0: u128)<br/>_1342 = _1375<br/>StorageDead(_1375)<br/></td></tr><tr><td align="left">_1341 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _1342)</td></tr></table>>];
    bb639__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">639</td></tr><tr><td align="left" balign="left">StorageLive(_1372)<br/>_1372 = ((_1343 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1374)<br/>_1374 = _1372<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1374)</td></tr></table>>];
    bb640__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">640</td></tr><tr><td align="left" balign="left">StorageDead(_1374)<br/>StorageDead(_1372)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb641__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">641</td></tr><tr><td align="left" balign="left">StorageDead(_1342)<br/></td></tr><tr><td align="left">_1340 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1341)</td></tr></table>>];
    bb642__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">642</td></tr><tr><td align="left" balign="left">StorageDead(_1341)<br/>_1376 = discriminant(_1340)<br/></td></tr><tr><td align="left">switchInt(move _1376)</td></tr></table>>];
    bb643__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">643</td></tr><tr><td align="left" balign="left">StorageLive(_1380)<br/>_1380 = ((_1340 as Continue).0: i64)<br/>_1339 = _1380<br/>StorageDead(_1380)<br/>_1381 = Eq(_1339, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _1381, &quot;attempt to negate `{}`, which would overflow&quot;, _1339)</td></tr></table>>];
    bb644__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">644</td></tr><tr><td align="left" balign="left">StorageLive(_1377)<br/>_1377 = ((_1340 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1379)<br/>_1379 = _1377<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1379)</td></tr></table>>];
    bb645__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">645</td></tr><tr><td align="left" balign="left">StorageDead(_1379)<br/>StorageDead(_1377)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb646__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">646</td></tr><tr><td align="left" balign="left">_1338 = Neg(move _1339)<br/>StorageDead(_1339)<br/>StorageDead(_1358)<br/>StorageDead(_1349)<br/>StorageDead(_1346)<br/>StorageDead(_1343)<br/>StorageDead(_1340)<br/>StorageLive(_1382)<br/>StorageLive(_1383)<br/>StorageLive(_1384)<br/>StorageLive(_1385)<br/>_1385 = &amp;mut (*_6)<br/>StorageLive(_1386)<br/>StorageLive(_1387)<br/>StorageLive(_1388)<br/>StorageLive(_1389)<br/>StorageLive(_1390)<br/>StorageLive(_1391)<br/>StorageLive(_1392)<br/>_1392 = &amp;(*_10)<br/>StorageLive(_1393)<br/>StorageLive(_1394)<br/>_1394 = &amp;_1<br/>_1393 = &amp;(*_1394)<br/></td></tr><tr><td align="left">_1391 = PerpMarketMap::&lt;'_&gt;::get_ref(move _1392, move _1393)</td></tr></table>>];
    bb647__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">647</td></tr><tr><td align="left" balign="left">StorageDead(_1393)<br/>StorageDead(_1392)<br/></td></tr><tr><td align="left">_1390 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1391)</td></tr></table>>];
    bb648__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">648</td></tr><tr><td align="left" balign="left">_2115 = const true<br/>StorageDead(_1391)<br/>_1395 = discriminant(_1390)<br/></td></tr><tr><td align="left">switchInt(move _1395)</td></tr></table>>];
    bb649__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">649</td></tr><tr><td align="left" balign="left">StorageLive(_1399)<br/>_1399 = move ((_1390 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1389 = move _1399<br/>StorageDead(_1399)<br/>_1388 = &amp;_1389<br/></td></tr><tr><td align="left">_1387 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1388)</td></tr></table>>];
    bb650__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">650</td></tr><tr><td align="left" balign="left">StorageLive(_1396)<br/>_1396 = ((_1390 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1398)<br/>_1398 = _1396<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1398)</td></tr></table>>];
    bb651__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">651</td></tr><tr><td align="left" balign="left">StorageDead(_1398)<br/>StorageDead(_1396)<br/>StorageDead(_1388)<br/>StorageDead(_1386)<br/>StorageDead(_1385)<br/>StorageDead(_1384)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb652__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">652</td></tr><tr><td align="left" balign="left">StorageDead(_1388)<br/>_1386 = ((*_1387).29: u8)<br/>StorageLive(_1400)<br/>_1400 = _1268<br/>StorageLive(_1401)<br/>_1401 = _14<br/></td></tr><tr><td align="left">_1384 = UserStats::update_taker_volume_30d(move _1385, move _1386, move _1400, move _1401)</td></tr></table>>];
    bb653__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">653</td></tr><tr><td align="left" balign="left">StorageDead(_1401)<br/>StorageDead(_1400)<br/>StorageDead(_1386)<br/>StorageDead(_1385)<br/></td></tr><tr><td align="left">_1383 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1384)</td></tr></table>>];
    bb654__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">654</td></tr><tr><td align="left" balign="left">StorageDead(_1384)<br/>_1402 = discriminant(_1383)<br/></td></tr><tr><td align="left">switchInt(move _1402)</td></tr></table>>];
    bb655__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">655</td></tr><tr><td align="left" balign="left">StorageLive(_1406)<br/>_1406 = ((_1383 as Continue).0: ())<br/>_1382 = _1406<br/>StorageDead(_1406)<br/></td></tr><tr><td align="left">drop(_1389)</td></tr></table>>];
    bb656__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">656</td></tr><tr><td align="left" balign="left">StorageLive(_1403)<br/>_1403 = ((_1383 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1405)<br/>_1405 = _1403<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1405)</td></tr></table>>];
    bb657__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">657</td></tr><tr><td align="left" balign="left">StorageDead(_1405)<br/>StorageDead(_1403)<br/></td></tr><tr><td align="left">drop(_1389)</td></tr></table>>];
    bb658__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">658</td></tr><tr><td align="left" balign="left">StorageDead(_1418)<br/>StorageDead(_1417)<br/></td></tr><tr><td align="left">_1415 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1416)</td></tr></table>>];
    bb659__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">659</td></tr><tr><td align="left" balign="left">_2114 = const true<br/>StorageDead(_1416)<br/>_1420 = discriminant(_1415)<br/></td></tr><tr><td align="left">switchInt(move _1420)</td></tr></table>>];
    bb660__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">660</td></tr><tr><td align="left" balign="left">StorageLive(_1424)<br/>_1424 = move ((_1415 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1414 = move _1424<br/>StorageDead(_1424)<br/>_1413 = &amp;_1414<br/></td></tr><tr><td align="left">_1412 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1413)</td></tr></table>>];
    bb661__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">661</td></tr><tr><td align="left" balign="left">StorageLive(_1421)<br/>_1421 = ((_1415 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1423)<br/>_1423 = _1421<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1423)</td></tr></table>>];
    bb662__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">662</td></tr><tr><td align="left" balign="left">StorageDead(_1423)<br/>StorageDead(_1421)<br/>StorageDead(_1413)<br/>StorageDead(_1411)<br/>StorageDead(_1410)<br/>StorageDead(_1409)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb663__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">663</td></tr><tr><td align="left" balign="left">StorageDead(_1413)<br/>_1411 = ((*_1412).30: u8)<br/>StorageLive(_1425)<br/>_1425 = _1268<br/>StorageLive(_1426)<br/>_1426 = _14<br/></td></tr><tr><td align="left">_1409 = UserStats::update_maker_volume_30d(move _1410, move _1411, move _1425, move _1426)</td></tr></table>>];
    bb664__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">664</td></tr><tr><td align="left" balign="left">StorageDead(_1426)<br/>StorageDead(_1425)<br/>StorageDead(_1411)<br/>StorageDead(_1410)<br/></td></tr><tr><td align="left">_1408 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1409)</td></tr></table>>];
    bb665__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">665</td></tr><tr><td align="left" balign="left">StorageDead(_1409)<br/>_1427 = discriminant(_1408)<br/></td></tr><tr><td align="left">switchInt(move _1427)</td></tr></table>>];
    bb666__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">666</td></tr><tr><td align="left" balign="left">StorageLive(_1431)<br/>_1431 = ((_1408 as Continue).0: ())<br/>_1407 = _1431<br/>StorageDead(_1431)<br/></td></tr><tr><td align="left">drop(_1414)</td></tr></table>>];
    bb667__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">667</td></tr><tr><td align="left" balign="left">StorageLive(_1428)<br/>_1428 = ((_1408 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1430)<br/>_1430 = _1428<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1430)</td></tr></table>>];
    bb668__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">668</td></tr><tr><td align="left" balign="left">StorageDead(_1430)<br/>StorageDead(_1428)<br/></td></tr><tr><td align="left">drop(_1414)</td></tr></table>>];
    bb669__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">669</td></tr><tr><td align="left" balign="left">_1438 = &amp;((*_4).4: [state::user::PerpPosition; 8])[_1439]<br/></td></tr><tr><td align="left">_1437 = PerpPosition::get_direction_to_close(move _1438)</td></tr></table>>];
    bb670__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">670</td></tr><tr><td align="left" balign="left">StorageDead(_1438)<br/></td></tr><tr><td align="left">_1434 = math::orders::get_position_delta_for_fill(move _1435, move _1436, move _1437)</td></tr></table>>];
    bb671__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">671</td></tr><tr><td align="left" balign="left">StorageDead(_1437)<br/>StorageDead(_1436)<br/>StorageDead(_1435)<br/></td></tr><tr><td align="left">_1433 = &lt;std::result::Result&lt;PositionDelta, error::ErrorCode&gt; as Try&gt;::branch(move _1434)</td></tr></table>>];
    bb672__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">672</td></tr><tr><td align="left" balign="left">StorageDead(_1434)<br/>_1442 = discriminant(_1433)<br/></td></tr><tr><td align="left">switchInt(move _1442)</td></tr></table>>];
    bb673__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">673</td></tr><tr><td align="left" balign="left">StorageLive(_1446)<br/>_1446 = move ((_1433 as Continue).0: controller::position::PositionDelta)<br/>_1432 = move _1446<br/>StorageDead(_1446)<br/>StorageDead(_1439)<br/>StorageDead(_1433)<br/>StorageLive(_1447)<br/>StorageLive(_1448)<br/>StorageLive(_1449)<br/>StorageLive(_1450)<br/>_1450 = _1057<br/>StorageLive(_1451)<br/>_1451 = _1268<br/>StorageLive(_1452)<br/>StorageLive(_1453)<br/>StorageLive(_1454)<br/>_1454 = _379<br/>_1455 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_1456 = Lt(_1454, _1455)<br/></td></tr><tr><td align="left">assert(move _1456, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _1455, _1454)</td></tr></table>>];
    bb674__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">674</td></tr><tr><td align="left" balign="left">StorageLive(_1443)<br/>_1443 = ((_1433 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1445)<br/>_1445 = _1443<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1445)</td></tr></table>>];
    bb675__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">675</td></tr><tr><td align="left" balign="left">StorageDead(_1445)<br/>StorageDead(_1443)<br/>StorageDead(_1439)<br/>StorageDead(_1433)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb676__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">676</td></tr><tr><td align="left" balign="left">_1453 = &amp;((*_4).4: [state::user::PerpPosition; 8])[_1454]<br/></td></tr><tr><td align="left">_1452 = PerpPosition::get_direction(move _1453)</td></tr></table>>];
    bb677__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">677</td></tr><tr><td align="left" balign="left">StorageDead(_1453)<br/></td></tr><tr><td align="left">_1449 = math::orders::get_position_delta_for_fill(move _1450, move _1451, move _1452)</td></tr></table>>];
    bb678__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">678</td></tr><tr><td align="left" balign="left">StorageDead(_1452)<br/>StorageDead(_1451)<br/>StorageDead(_1450)<br/></td></tr><tr><td align="left">_1448 = &lt;std::result::Result&lt;PositionDelta, error::ErrorCode&gt; as Try&gt;::branch(move _1449)</td></tr></table>>];
    bb679__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">679</td></tr><tr><td align="left" balign="left">StorageDead(_1449)<br/>_1457 = discriminant(_1448)<br/></td></tr><tr><td align="left">switchInt(move _1457)</td></tr></table>>];
    bb680__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">680</td></tr><tr><td align="left" balign="left">StorageLive(_1461)<br/>_1461 = move ((_1448 as Continue).0: controller::position::PositionDelta)<br/>_1447 = move _1461<br/>StorageDead(_1461)<br/>StorageDead(_1454)<br/>StorageDead(_1448)<br/>StorageLive(_1467)<br/>StorageLive(_1468)<br/>StorageLive(_1469)<br/>StorageLive(_1470)<br/>StorageLive(_1471)<br/>_1471 = &amp;(*_10)<br/>StorageLive(_1472)<br/>StorageLive(_1473)<br/>_1473 = &amp;_1<br/>_1472 = &amp;(*_1473)<br/></td></tr><tr><td align="left">_1470 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _1471, move _1472)</td></tr></table>>];
    bb681__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">681</td></tr><tr><td align="left" balign="left">StorageLive(_1458)<br/>_1458 = ((_1448 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1460)<br/>_1460 = _1458<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1460)</td></tr></table>>];
    bb682__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">682</td></tr><tr><td align="left" balign="left">StorageDead(_1460)<br/>StorageDead(_1458)<br/>StorageDead(_1454)<br/>StorageDead(_1448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb683__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">683</td></tr><tr><td align="left" balign="left">StorageDead(_1472)<br/>StorageDead(_1471)<br/></td></tr><tr><td align="left">_1469 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1470)</td></tr></table>>];
    bb684__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">684</td></tr><tr><td align="left" balign="left">StorageDead(_1470)<br/>_1474 = discriminant(_1469)<br/></td></tr><tr><td align="left">switchInt(move _1474)</td></tr></table>>];
    bb685__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">685</td></tr><tr><td align="left" balign="left">StorageLive(_1478)<br/>_1478 = move ((_1469 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1468 = move _1478<br/>StorageDead(_1478)<br/>_2166 = discriminant(_1469)<br/>StorageDead(_1473)<br/>StorageDead(_1469)<br/>StorageLive(_1479)<br/>StorageLive(_1480)<br/>StorageLive(_1481)<br/>StorageLive(_1482)<br/>_1482 = &amp;mut (*_4)<br/>StorageLive(_1483)<br/>_1483 = _1<br/></td></tr><tr><td align="left">_1481 = User::get_perp_position_mut(move _1482, move _1483)</td></tr></table>>];
    bb686__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">686</td></tr><tr><td align="left" balign="left">StorageLive(_1475)<br/>_1475 = ((_1469 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1477)<br/>_1477 = _1475<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1477)</td></tr></table>>];
    bb687__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">687</td></tr><tr><td align="left" balign="left">StorageDead(_1477)<br/>StorageDead(_1475)<br/>_2164 = discriminant(_1469)<br/>StorageDead(_1473)<br/>StorageDead(_1469)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb688__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">688</td></tr><tr><td align="left" balign="left">StorageDead(_1483)<br/>StorageDead(_1482)<br/></td></tr><tr><td align="left">_1480 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1481)</td></tr></table>>];
    bb689__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">689</td></tr><tr><td align="left" balign="left">StorageDead(_1481)<br/>_1484 = discriminant(_1480)<br/></td></tr><tr><td align="left">switchInt(move _1484)</td></tr></table>>];
    bb690__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">690</td></tr><tr><td align="left" balign="left">StorageLive(_1488)<br/>_1488 = move ((_1480 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_1479 = move _1488<br/>StorageDead(_1488)<br/>StorageDead(_1480)<br/>StorageLive(_1489)<br/>StorageLive(_1490)<br/>_1490 = &amp;(*_1479)<br/></td></tr><tr><td align="left">_1489 = PerpPosition::get_direction(move _1490)</td></tr></table>>];
    bb691__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">691</td></tr><tr><td align="left" balign="left">StorageLive(_1485)<br/>_1485 = ((_1480 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1487)<br/>_1487 = _1485<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1487)</td></tr></table>>];
    bb692__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">692</td></tr><tr><td align="left" balign="left">StorageDead(_1487)<br/>StorageDead(_1485)<br/>StorageDead(_1480)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb693__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">693</td></tr><tr><td align="left" balign="left">StorageDead(_1490)<br/>StorageLive(_1491)<br/>StorageLive(_1492)<br/>_1492 = &amp;(*_1479)<br/></td></tr><tr><td align="left">_1491 = PerpPosition::get_direction_to_close(move _1492)</td></tr></table>>];
    bb694__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">694</td></tr><tr><td align="left" balign="left">StorageDead(_1492)<br/>StorageLive(_1493)<br/>StorageLive(_1494)<br/>_1494 = &amp;(*_1479)<br/>StorageLive(_1495)<br/>_1495 = _1491<br/></td></tr><tr><td align="left">_1493 = PerpPosition::get_existing_position_params_for_order_action(move _1494, move _1495)</td></tr></table>>];
    bb695__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">695</td></tr><tr><td align="left" balign="left">StorageDead(_1495)<br/>StorageDead(_1494)<br/>StorageLive(_1496)<br/>StorageLive(_1497)<br/>StorageLive(_1498)<br/>StorageLive(_1499)<br/>_1499 = &amp;mut (*_1479)<br/>StorageLive(_1500)<br/>StorageLive(_1501)<br/>StorageLive(_1502)<br/>StorageLive(_1503)<br/>_1503 = &amp;mut _1468<br/>_1502 = &amp;mut (*_1503)<br/></td></tr><tr><td align="left">_1501 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1502)</td></tr></table>>];
    bb696__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">696</td></tr><tr><td align="left" balign="left">_1500 = &amp;mut (*_1501)<br/>StorageDead(_1502)<br/>StorageLive(_1504)<br/>StorageLive(_1505)<br/>_1505 = &amp;_1432<br/>_1504 = &amp;(*_1505)<br/></td></tr><tr><td align="left">_1498 = update_position_and_market(move _1499, move _1500, move _1504)</td></tr></table>>];
    bb697__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">697</td></tr><tr><td align="left" balign="left">StorageDead(_1504)<br/>StorageDead(_1500)<br/>StorageDead(_1499)<br/></td></tr><tr><td align="left">_1497 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1498)</td></tr></table>>];
    bb698__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">698</td></tr><tr><td align="left" balign="left">StorageDead(_1498)<br/>_1506 = discriminant(_1497)<br/></td></tr><tr><td align="left">switchInt(move _1506)</td></tr></table>>];
    bb699__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">699</td></tr><tr><td align="left" balign="left">StorageLive(_1510)<br/>_1510 = ((_1497 as Continue).0: i64)<br/>_1496 = _1510<br/>StorageDead(_1510)<br/>StorageDead(_1505)<br/>StorageDead(_1503)<br/>StorageDead(_1501)<br/>StorageDead(_1497)<br/>StorageDead(_1496)<br/>StorageLive(_1511)<br/>StorageLive(_1512)<br/>StorageLive(_1513)<br/>StorageLive(_1514)<br/>_1514 = &amp;mut (*_1479)<br/>StorageLive(_1515)<br/>StorageLive(_1516)<br/>StorageLive(_1517)<br/>StorageLive(_1518)<br/>_1518 = &amp;mut _1468<br/>_1517 = &amp;mut (*_1518)<br/></td></tr><tr><td align="left">_1516 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1517)</td></tr></table>>];
    bb700__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">700</td></tr><tr><td align="left" balign="left">StorageLive(_1507)<br/>_1507 = ((_1497 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1509)<br/>_1509 = _1507<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1509)</td></tr></table>>];
    bb701__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">701</td></tr><tr><td align="left" balign="left">StorageDead(_1509)<br/>StorageDead(_1507)<br/>StorageDead(_1505)<br/>StorageDead(_1503)<br/>StorageDead(_1501)<br/>StorageDead(_1497)<br/>StorageDead(_1496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb702__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">702</td></tr><tr><td align="left" balign="left">_1515 = &amp;mut (*_1516)<br/>StorageDead(_1517)<br/>StorageLive(_1519)<br/>_1519 = _1294<br/></td></tr><tr><td align="left">_1513 = update_quote_asset_and_break_even_amount(move _1514, move _1515, move _1519)</td></tr></table>>];
    bb703__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">703</td></tr><tr><td align="left" balign="left">StorageDead(_1519)<br/>StorageDead(_1515)<br/>StorageDead(_1514)<br/></td></tr><tr><td align="left">_1512 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1513)</td></tr></table>>];
    bb704__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">704</td></tr><tr><td align="left" balign="left">StorageDead(_1513)<br/>_1520 = discriminant(_1512)<br/></td></tr><tr><td align="left">switchInt(move _1520)</td></tr></table>>];
    bb705__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">705</td></tr><tr><td align="left" balign="left">StorageLive(_1524)<br/>_1524 = ((_1512 as Continue).0: ())<br/>_1511 = _1524<br/>StorageDead(_1524)<br/>StorageDead(_1518)<br/>StorageDead(_1516)<br/>StorageDead(_1512)<br/>StorageDead(_1511)<br/>StorageLive(_1525)<br/>StorageLive(_1526)<br/>StorageLive(_1527)<br/>StorageLive(_1528)<br/>_1528 = &amp;mut (*_1479)<br/>StorageLive(_1529)<br/>StorageLive(_1530)<br/>StorageLive(_1531)<br/>StorageLive(_1532)<br/>_1532 = &amp;mut _1468<br/>_1531 = &amp;mut (*_1532)<br/></td></tr><tr><td align="left">_1530 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1531)</td></tr></table>>];
    bb706__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">706</td></tr><tr><td align="left" balign="left">StorageLive(_1521)<br/>_1521 = ((_1512 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1523)<br/>_1523 = _1521<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1523)</td></tr></table>>];
    bb707__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">707</td></tr><tr><td align="left" balign="left">StorageDead(_1523)<br/>StorageDead(_1521)<br/>StorageDead(_1518)<br/>StorageDead(_1516)<br/>StorageDead(_1512)<br/>StorageDead(_1511)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb708__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">708</td></tr><tr><td align="left" balign="left">_1529 = &amp;mut (*_1530)<br/>StorageDead(_1531)<br/>StorageLive(_1533)<br/>_1533 = _1338<br/></td></tr><tr><td align="left">_1527 = update_quote_asset_and_break_even_amount(move _1528, move _1529, move _1533)</td></tr></table>>];
    bb709__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">709</td></tr><tr><td align="left" balign="left">StorageDead(_1533)<br/>StorageDead(_1529)<br/>StorageDead(_1528)<br/></td></tr><tr><td align="left">_1526 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1527)</td></tr></table>>];
    bb710__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">710</td></tr><tr><td align="left" balign="left">StorageDead(_1527)<br/>_1534 = discriminant(_1526)<br/></td></tr><tr><td align="left">switchInt(move _1534)</td></tr></table>>];
    bb711__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">711</td></tr><tr><td align="left" balign="left">StorageLive(_1538)<br/>_1538 = ((_1526 as Continue).0: ())<br/>_1525 = _1538<br/>StorageDead(_1538)<br/>StorageDead(_1532)<br/>StorageDead(_1530)<br/>StorageDead(_1526)<br/>StorageDead(_1525)<br/>StorageLive(_1539)<br/>StorageLive(_1540)<br/>StorageLive(_1541)<br/>StorageLive(_1542)<br/>StorageLive(_1543)<br/>StorageLive(_1544)<br/>StorageLive(_1545)<br/>StorageLive(_1546)<br/>_1546 = ((*_1479).1: i64)<br/></td></tr><tr><td align="left">_1545 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1546)</td></tr></table>>];
    bb712__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">712</td></tr><tr><td align="left" balign="left">StorageLive(_1535)<br/>_1535 = ((_1526 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1537)<br/>_1537 = _1535<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1537)</td></tr></table>>];
    bb713__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">713</td></tr><tr><td align="left" balign="left">StorageDead(_1537)<br/>StorageDead(_1535)<br/>StorageDead(_1532)<br/>StorageDead(_1530)<br/>StorageDead(_1526)<br/>StorageDead(_1525)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb714__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">714</td></tr><tr><td align="left" balign="left">StorageDead(_1546)<br/>StorageLive(_1547)<br/>StorageLive(_1548)<br/>StorageLive(_1549)<br/>_1549 = &amp;_1468<br/></td></tr><tr><td align="left">_1548 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1549)</td></tr></table>>];
    bb715__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">715</td></tr><tr><td align="left" balign="left">StorageDead(_1549)<br/>_1547 = (((*_1548).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_1544 = math::orders::is_multiple_of_step_size(move _1545, move _1547)</td></tr></table>>];
    bb716__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">716</td></tr><tr><td align="left" balign="left">StorageDead(_1547)<br/>StorageDead(_1545)<br/></td></tr><tr><td align="left">_1543 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1544)</td></tr></table>>];
    bb717__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">717</td></tr><tr><td align="left" balign="left">StorageDead(_1544)<br/>_1550 = discriminant(_1543)<br/></td></tr><tr><td align="left">switchInt(move _1550)</td></tr></table>>];
    bb718__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">718</td></tr><tr><td align="left" balign="left">StorageLive(_1554)<br/>_1554 = ((_1543 as Continue).0: bool)<br/>_1542 = _1554<br/>StorageDead(_1554)<br/></td></tr><tr><td align="left">switchInt(move _1542)</td></tr></table>>];
    bb719__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">719</td></tr><tr><td align="left" balign="left">StorageLive(_1551)<br/>_1551 = ((_1543 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1553)<br/>_1553 = _1551<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1553)</td></tr></table>>];
    bb720__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">720</td></tr><tr><td align="left" balign="left">StorageDead(_1553)<br/>StorageDead(_1551)<br/>StorageDead(_1548)<br/>StorageDead(_1543)<br/>StorageDead(_1542)<br/>StorageDead(_1541)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb721__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">721</td></tr><tr><td align="left" balign="left">StorageDead(_1548)<br/>StorageDead(_1543)<br/>StorageLive(_1555)<br/>_1555 = ()<br/>_1541 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1555)<br/>StorageDead(_1555)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb722__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">722</td></tr><tr><td align="left" balign="left">StorageDead(_1548)<br/>StorageDead(_1543)<br/>StorageLive(_1556)<br/>_1556 = error::ErrorCode::InvalidPerpPosition<br/>StorageLive(_1557)<br/>StorageLive(_1558)<br/>StorageLive(_1559)<br/>StorageLive(_1560)<br/>StorageLive(_1561)<br/>StorageLive(_1562)<br/>StorageLive(_1563)<br/>StorageLive(_1564)<br/>StorageLive(_1565)<br/>StorageLive(_1566)<br/>StorageLive(_1567)<br/>_2094 = const _<br/>_1567 = &amp;(*_2094)<br/>_1566 = &amp;(*_1567)<br/>_1565 = move _1566 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1566)<br/>StorageLive(_1569)<br/>StorageLive(_1570)<br/>StorageLive(_1571)<br/>StorageLive(_1572)<br/>StorageLive(_1573)<br/>StorageLive(_1574)<br/>StorageLive(_1575)<br/>_1575 = &amp;_1556<br/>_1574 = &amp;(*_1575)<br/></td></tr><tr><td align="left">_1573 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1574)</td></tr></table>>];
    bb723__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">723</td></tr><tr><td align="left" balign="left">StorageDead(_1574)<br/>_1572 = [move _1573]<br/>StorageDead(_1573)<br/>_1571 = &amp;_1572<br/>_1570 = &amp;(*_1571)<br/>_1569 = move _1570 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1570)<br/></td></tr><tr><td align="left">_1564 = Arguments::&lt;'_&gt;::new_v1(move _1565, move _1569)</td></tr></table>>];
    bb724__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">724</td></tr><tr><td align="left" balign="left">StorageDead(_1569)<br/>StorageDead(_1565)<br/></td></tr><tr><td align="left">_1563 = format(move _1564)</td></tr></table>>];
    bb725__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">725</td></tr><tr><td align="left" balign="left">StorageDead(_1564)<br/>StorageDead(_1575)<br/>StorageDead(_1572)<br/>StorageDead(_1571)<br/>StorageDead(_1567)<br/>_1562 = move _1563<br/>StorageDead(_1563)<br/>_1561 = &amp;_1562<br/>_1560 = &amp;(*_1561)<br/></td></tr><tr><td align="left">_1559 = &lt;String as Deref&gt;::deref(move _1560)</td></tr></table>>];
    bb726__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">726</td></tr><tr><td align="left" balign="left">_1558 = &amp;(*_1559)<br/>StorageDead(_1560)<br/></td></tr><tr><td align="left">_1557 = solana_program::log::sol_log(move _1558)</td></tr></table>>];
    bb727__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">727</td></tr><tr><td align="left" balign="left">StorageDead(_1558)<br/></td></tr><tr><td align="left">drop(_1562)</td></tr></table>>];
    bb728__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">728</td></tr><tr><td align="left" balign="left">StorageDead(_1562)<br/>StorageDead(_1561)<br/>StorageDead(_1559)<br/>StorageDead(_1557)<br/>StorageLive(_1576)<br/>StorageLive(_1577)<br/>StorageLive(_1578)<br/>StorageLive(_1579)<br/>StorageLive(_1580)<br/>StorageLive(_1581)<br/>StorageLive(_1582)<br/>StorageLive(_1583)<br/>StorageLive(_1584)<br/>StorageLive(_1585)<br/>StorageLive(_1586)<br/>_2093 = const _<br/>_1586 = &amp;(*_2093)<br/>_1585 = &amp;(*_1586)<br/>_1584 = move _1585 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1585)<br/>StorageLive(_1588)<br/>StorageLive(_1589)<br/>StorageLive(_1590)<br/>StorageLive(_1591)<br/>StorageLive(_1592)<br/>StorageLive(_1593)<br/>StorageLive(_1594)<br/>_1594 = &amp;((*_1479).1: i64)<br/>_1593 = &amp;(*_1594)<br/></td></tr><tr><td align="left">_1592 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _1593)</td></tr></table>>];
    bb729__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">729</td></tr><tr><td align="left" balign="left">StorageDead(_1593)<br/>StorageLive(_1595)<br/>StorageLive(_1596)<br/>StorageLive(_1597)<br/>StorageLive(_1598)<br/>StorageLive(_1599)<br/>_1599 = &amp;_1468<br/></td></tr><tr><td align="left">_1598 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1599)</td></tr></table>>];
    bb730__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">730</td></tr><tr><td align="left" balign="left">StorageDead(_1599)<br/>_1597 = &amp;(((*_1598).1: state::perp_market::AMM).52: u64)<br/>_1596 = &amp;(*_1597)<br/></td></tr><tr><td align="left">_1595 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1596)</td></tr></table>>];
    bb731__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">731</td></tr><tr><td align="left" balign="left">StorageDead(_1596)<br/>_1591 = [move _1592, move _1595]<br/>StorageDead(_1595)<br/>StorageDead(_1592)<br/>_1590 = &amp;_1591<br/>_1589 = &amp;(*_1590)<br/>_1588 = move _1589 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1589)<br/></td></tr><tr><td align="left">_1583 = Arguments::&lt;'_&gt;::new_v1(move _1584, move _1588)</td></tr></table>>];
    bb732__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">732</td></tr><tr><td align="left" balign="left">StorageDead(_1588)<br/>StorageDead(_1584)<br/></td></tr><tr><td align="left">_1582 = format(move _1583)</td></tr></table>>];
    bb733__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">733</td></tr><tr><td align="left" balign="left">StorageDead(_1583)<br/>StorageDead(_1598)<br/>StorageDead(_1597)<br/>StorageDead(_1594)<br/>StorageDead(_1591)<br/>StorageDead(_1590)<br/>StorageDead(_1586)<br/>_1581 = move _1582<br/>StorageDead(_1582)<br/>_1580 = &amp;_1581<br/>_1579 = &amp;(*_1580)<br/></td></tr><tr><td align="left">_1578 = &lt;String as Deref&gt;::deref(move _1579)</td></tr></table>>];
    bb734__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">734</td></tr><tr><td align="left" balign="left">_1577 = &amp;(*_1578)<br/>StorageDead(_1579)<br/></td></tr><tr><td align="left">_1576 = solana_program::log::sol_log(move _1577)</td></tr></table>>];
    bb735__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">735</td></tr><tr><td align="left" balign="left">StorageDead(_1577)<br/></td></tr><tr><td align="left">drop(_1581)</td></tr></table>>];
    bb736__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">736</td></tr><tr><td align="left" balign="left">StorageDead(_1581)<br/>StorageDead(_1580)<br/>StorageDead(_1578)<br/>StorageDead(_1576)<br/>StorageLive(_1600)<br/>_1600 = _1556<br/>_1541 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1600)<br/>StorageDead(_1600)<br/>StorageDead(_1556)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb737__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">737</td></tr><tr><td align="left" balign="left">StorageDead(_1542)<br/></td></tr><tr><td align="left">_1540 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1541)</td></tr></table>>];
    bb738__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">738</td></tr><tr><td align="left" balign="left">StorageDead(_1541)<br/>_1601 = discriminant(_1540)<br/></td></tr><tr><td align="left">switchInt(move _1601)</td></tr></table>>];
    bb739__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">739</td></tr><tr><td align="left" balign="left">StorageLive(_1605)<br/>_1605 = ((_1540 as Continue).0: ())<br/>_1539 = _1605<br/>StorageDead(_1605)<br/>StorageDead(_1540)<br/>StorageDead(_1539)<br/>StorageLive(_1606)<br/>StorageLive(_1607)<br/>StorageLive(_1608)<br/>StorageLive(_1609)<br/>_1609 = &amp;mut (*_7)<br/>StorageLive(_1610)<br/>_1610 = _1<br/></td></tr><tr><td align="left">_1608 = User::force_get_perp_position_mut(move _1609, move _1610)</td></tr></table>>];
    bb740__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">740</td></tr><tr><td align="left" balign="left">StorageLive(_1602)<br/>_1602 = ((_1540 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1604)<br/>_1604 = _1602<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1604)</td></tr></table>>];
    bb741__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">741</td></tr><tr><td align="left" balign="left">StorageDead(_1604)<br/>StorageDead(_1602)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb742__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">742</td></tr><tr><td align="left" balign="left">StorageDead(_1610)<br/>StorageDead(_1609)<br/></td></tr><tr><td align="left">_1607 = &lt;std::result::Result&lt;&amp;mut PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1608)</td></tr></table>>];
    bb743__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">743</td></tr><tr><td align="left" balign="left">StorageDead(_1608)<br/>_1611 = discriminant(_1607)<br/></td></tr><tr><td align="left">switchInt(move _1611)</td></tr></table>>];
    bb744__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">744</td></tr><tr><td align="left" balign="left">StorageLive(_1615)<br/>_1615 = move ((_1607 as Continue).0: &amp;mut state::user::PerpPosition)<br/>_1606 = move _1615<br/>StorageDead(_1615)<br/>StorageDead(_1607)<br/>StorageLive(_1616)<br/>StorageLive(_1617)<br/>_1617 = &amp;(*_1606)<br/></td></tr><tr><td align="left">_1616 = PerpPosition::get_direction(move _1617)</td></tr></table>>];
    bb745__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">745</td></tr><tr><td align="left" balign="left">StorageLive(_1612)<br/>_1612 = ((_1607 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1614)<br/>_1614 = _1612<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1614)</td></tr></table>>];
    bb746__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">746</td></tr><tr><td align="left" balign="left">StorageDead(_1614)<br/>StorageDead(_1612)<br/>StorageDead(_1607)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb747__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">747</td></tr><tr><td align="left" balign="left">StorageDead(_1617)<br/>StorageLive(_1618)<br/>StorageLive(_1619)<br/>_1619 = &amp;(*_1606)<br/>StorageLive(_1620)<br/>_1620 = _1489<br/></td></tr><tr><td align="left">_1618 = PerpPosition::get_existing_position_params_for_order_action(move _1619, move _1620)</td></tr></table>>];
    bb748__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">748</td></tr><tr><td align="left" balign="left">StorageDead(_1620)<br/>StorageDead(_1619)<br/>StorageLive(_1621)<br/>StorageLive(_1622)<br/>StorageLive(_1623)<br/>StorageLive(_1624)<br/>_1624 = &amp;mut (*_1606)<br/>StorageLive(_1625)<br/>StorageLive(_1626)<br/>StorageLive(_1627)<br/>StorageLive(_1628)<br/>_1628 = &amp;mut _1468<br/>_1627 = &amp;mut (*_1628)<br/></td></tr><tr><td align="left">_1626 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1627)</td></tr></table>>];
    bb749__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">749</td></tr><tr><td align="left" balign="left">_1625 = &amp;mut (*_1626)<br/>StorageDead(_1627)<br/>StorageLive(_1629)<br/>StorageLive(_1630)<br/>_1630 = &amp;_1447<br/>_1629 = &amp;(*_1630)<br/></td></tr><tr><td align="left">_1623 = update_position_and_market(move _1624, move _1625, move _1629)</td></tr></table>>];
    bb750__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">750</td></tr><tr><td align="left" balign="left">StorageDead(_1629)<br/>StorageDead(_1625)<br/>StorageDead(_1624)<br/></td></tr><tr><td align="left">_1622 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1623)</td></tr></table>>];
    bb751__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">751</td></tr><tr><td align="left" balign="left">StorageDead(_1623)<br/>_1631 = discriminant(_1622)<br/></td></tr><tr><td align="left">switchInt(move _1631)</td></tr></table>>];
    bb752__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">752</td></tr><tr><td align="left" balign="left">StorageLive(_1635)<br/>_1635 = ((_1622 as Continue).0: i64)<br/>_1621 = _1635<br/>StorageDead(_1635)<br/>StorageDead(_1630)<br/>StorageDead(_1628)<br/>StorageDead(_1626)<br/>StorageDead(_1622)<br/>StorageDead(_1621)<br/>StorageLive(_1636)<br/>StorageLive(_1637)<br/>StorageLive(_1638)<br/>StorageLive(_1639)<br/>_1639 = &amp;mut (*_1606)<br/>StorageLive(_1640)<br/>StorageLive(_1641)<br/>StorageLive(_1642)<br/>StorageLive(_1643)<br/>_1643 = &amp;mut _1468<br/>_1642 = &amp;mut (*_1643)<br/></td></tr><tr><td align="left">_1641 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1642)</td></tr></table>>];
    bb753__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">753</td></tr><tr><td align="left" balign="left">StorageLive(_1632)<br/>_1632 = ((_1622 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1634)<br/>_1634 = _1632<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1634)</td></tr></table>>];
    bb754__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">754</td></tr><tr><td align="left" balign="left">StorageDead(_1634)<br/>StorageDead(_1632)<br/>StorageDead(_1630)<br/>StorageDead(_1628)<br/>StorageDead(_1626)<br/>StorageDead(_1622)<br/>StorageDead(_1621)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb755__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">755</td></tr><tr><td align="left" balign="left">_1640 = &amp;mut (*_1641)<br/>StorageDead(_1642)<br/>StorageLive(_1644)<br/>StorageLive(_1645)<br/>_1645 = _1294<br/>_1646 = Eq(_1645, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _1646, &quot;attempt to negate `{}`, which would overflow&quot;, _1645)</td></tr></table>>];
    bb756__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">756</td></tr><tr><td align="left" balign="left">_1644 = Neg(move _1645)<br/>StorageDead(_1645)<br/></td></tr><tr><td align="left">_1638 = update_quote_asset_and_break_even_amount(move _1639, move _1640, move _1644)</td></tr></table>>];
    bb757__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">757</td></tr><tr><td align="left" balign="left">StorageDead(_1644)<br/>StorageDead(_1640)<br/>StorageDead(_1639)<br/></td></tr><tr><td align="left">_1637 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1638)</td></tr></table>>];
    bb758__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">758</td></tr><tr><td align="left" balign="left">StorageDead(_1638)<br/>_1647 = discriminant(_1637)<br/></td></tr><tr><td align="left">switchInt(move _1647)</td></tr></table>>];
    bb759__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">759</td></tr><tr><td align="left" balign="left">StorageLive(_1651)<br/>_1651 = ((_1637 as Continue).0: ())<br/>_1636 = _1651<br/>StorageDead(_1651)<br/>StorageDead(_1643)<br/>StorageDead(_1641)<br/>StorageDead(_1637)<br/>StorageDead(_1636)<br/>StorageLive(_1652)<br/>StorageLive(_1653)<br/>StorageLive(_1654)<br/>StorageLive(_1655)<br/>StorageLive(_1656)<br/>StorageLive(_1657)<br/>StorageLive(_1658)<br/>StorageLive(_1659)<br/>_1659 = ((*_1606).1: i64)<br/></td></tr><tr><td align="left">_1658 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1659)</td></tr></table>>];
    bb760__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">760</td></tr><tr><td align="left" balign="left">StorageLive(_1648)<br/>_1648 = ((_1637 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1650)<br/>_1650 = _1648<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1650)</td></tr></table>>];
    bb761__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">761</td></tr><tr><td align="left" balign="left">StorageDead(_1650)<br/>StorageDead(_1648)<br/>StorageDead(_1643)<br/>StorageDead(_1641)<br/>StorageDead(_1637)<br/>StorageDead(_1636)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb762__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">762</td></tr><tr><td align="left" balign="left">StorageDead(_1659)<br/>StorageLive(_1660)<br/>StorageLive(_1661)<br/>StorageLive(_1662)<br/>_1662 = &amp;_1468<br/></td></tr><tr><td align="left">_1661 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1662)</td></tr></table>>];
    bb763__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">763</td></tr><tr><td align="left" balign="left">StorageDead(_1662)<br/>_1660 = (((*_1661).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_1657 = math::orders::is_multiple_of_step_size(move _1658, move _1660)</td></tr></table>>];
    bb764__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">764</td></tr><tr><td align="left" balign="left">StorageDead(_1660)<br/>StorageDead(_1658)<br/></td></tr><tr><td align="left">_1656 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1657)</td></tr></table>>];
    bb765__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">765</td></tr><tr><td align="left" balign="left">StorageDead(_1657)<br/>_1663 = discriminant(_1656)<br/></td></tr><tr><td align="left">switchInt(move _1663)</td></tr></table>>];
    bb766__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">766</td></tr><tr><td align="left" balign="left">StorageLive(_1667)<br/>_1667 = ((_1656 as Continue).0: bool)<br/>_1655 = _1667<br/>StorageDead(_1667)<br/></td></tr><tr><td align="left">switchInt(move _1655)</td></tr></table>>];
    bb767__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">767</td></tr><tr><td align="left" balign="left">StorageLive(_1664)<br/>_1664 = ((_1656 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1666)<br/>_1666 = _1664<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1666)</td></tr></table>>];
    bb768__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">768</td></tr><tr><td align="left" balign="left">StorageDead(_1666)<br/>StorageDead(_1664)<br/>StorageDead(_1661)<br/>StorageDead(_1656)<br/>StorageDead(_1655)<br/>StorageDead(_1654)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb769__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">769</td></tr><tr><td align="left" balign="left">StorageDead(_1661)<br/>StorageDead(_1656)<br/>StorageLive(_1668)<br/>_1668 = ()<br/>_1654 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1668)<br/>StorageDead(_1668)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb770__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">770</td></tr><tr><td align="left" balign="left">StorageDead(_1661)<br/>StorageDead(_1656)<br/>StorageLive(_1669)<br/>_1669 = error::ErrorCode::InvalidPerpPosition<br/>StorageLive(_1670)<br/>StorageLive(_1671)<br/>StorageLive(_1672)<br/>StorageLive(_1673)<br/>StorageLive(_1674)<br/>StorageLive(_1675)<br/>StorageLive(_1676)<br/>StorageLive(_1677)<br/>StorageLive(_1678)<br/>StorageLive(_1679)<br/>StorageLive(_1680)<br/>_2092 = const _<br/>_1680 = &amp;(*_2092)<br/>_1679 = &amp;(*_1680)<br/>_1678 = move _1679 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1679)<br/>StorageLive(_1682)<br/>StorageLive(_1683)<br/>StorageLive(_1684)<br/>StorageLive(_1685)<br/>StorageLive(_1686)<br/>StorageLive(_1687)<br/>StorageLive(_1688)<br/>_1688 = &amp;_1669<br/>_1687 = &amp;(*_1688)<br/></td></tr><tr><td align="left">_1686 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1687)</td></tr></table>>];
    bb771__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">771</td></tr><tr><td align="left" balign="left">StorageDead(_1687)<br/>_1685 = [move _1686]<br/>StorageDead(_1686)<br/>_1684 = &amp;_1685<br/>_1683 = &amp;(*_1684)<br/>_1682 = move _1683 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1683)<br/></td></tr><tr><td align="left">_1677 = Arguments::&lt;'_&gt;::new_v1(move _1678, move _1682)</td></tr></table>>];
    bb772__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">772</td></tr><tr><td align="left" balign="left">StorageDead(_1682)<br/>StorageDead(_1678)<br/></td></tr><tr><td align="left">_1676 = format(move _1677)</td></tr></table>>];
    bb773__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">773</td></tr><tr><td align="left" balign="left">StorageDead(_1677)<br/>StorageDead(_1688)<br/>StorageDead(_1685)<br/>StorageDead(_1684)<br/>StorageDead(_1680)<br/>_1675 = move _1676<br/>StorageDead(_1676)<br/>_1674 = &amp;_1675<br/>_1673 = &amp;(*_1674)<br/></td></tr><tr><td align="left">_1672 = &lt;String as Deref&gt;::deref(move _1673)</td></tr></table>>];
    bb774__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">774</td></tr><tr><td align="left" balign="left">_1671 = &amp;(*_1672)<br/>StorageDead(_1673)<br/></td></tr><tr><td align="left">_1670 = solana_program::log::sol_log(move _1671)</td></tr></table>>];
    bb775__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">775</td></tr><tr><td align="left" balign="left">StorageDead(_1671)<br/></td></tr><tr><td align="left">drop(_1675)</td></tr></table>>];
    bb776__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">776</td></tr><tr><td align="left" balign="left">StorageDead(_1675)<br/>StorageDead(_1674)<br/>StorageDead(_1672)<br/>StorageDead(_1670)<br/>StorageLive(_1689)<br/>StorageLive(_1690)<br/>StorageLive(_1691)<br/>StorageLive(_1692)<br/>StorageLive(_1693)<br/>StorageLive(_1694)<br/>StorageLive(_1695)<br/>StorageLive(_1696)<br/>StorageLive(_1697)<br/>StorageLive(_1698)<br/>StorageLive(_1699)<br/>_2091 = const _<br/>_1699 = &amp;(*_2091)<br/>_1698 = &amp;(*_1699)<br/>_1697 = move _1698 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1698)<br/>StorageLive(_1701)<br/>StorageLive(_1702)<br/>StorageLive(_1703)<br/>StorageLive(_1704)<br/>StorageLive(_1705)<br/>StorageLive(_1706)<br/>StorageLive(_1707)<br/>_1707 = &amp;((*_1606).1: i64)<br/>_1706 = &amp;(*_1707)<br/></td></tr><tr><td align="left">_1705 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _1706)</td></tr></table>>];
    bb777__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">777</td></tr><tr><td align="left" balign="left">StorageDead(_1706)<br/>StorageLive(_1708)<br/>StorageLive(_1709)<br/>StorageLive(_1710)<br/>StorageLive(_1711)<br/>StorageLive(_1712)<br/>_1712 = &amp;_1468<br/></td></tr><tr><td align="left">_1711 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1712)</td></tr></table>>];
    bb778__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">778</td></tr><tr><td align="left" balign="left">StorageDead(_1712)<br/>_1710 = &amp;(((*_1711).1: state::perp_market::AMM).52: u64)<br/>_1709 = &amp;(*_1710)<br/></td></tr><tr><td align="left">_1708 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _1709)</td></tr></table>>];
    bb779__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">779</td></tr><tr><td align="left" balign="left">StorageDead(_1709)<br/>_1704 = [move _1705, move _1708]<br/>StorageDead(_1708)<br/>StorageDead(_1705)<br/>_1703 = &amp;_1704<br/>_1702 = &amp;(*_1703)<br/>_1701 = move _1702 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1702)<br/></td></tr><tr><td align="left">_1696 = Arguments::&lt;'_&gt;::new_v1(move _1697, move _1701)</td></tr></table>>];
    bb780__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">780</td></tr><tr><td align="left" balign="left">StorageDead(_1701)<br/>StorageDead(_1697)<br/></td></tr><tr><td align="left">_1695 = format(move _1696)</td></tr></table>>];
    bb781__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">781</td></tr><tr><td align="left" balign="left">StorageDead(_1696)<br/>StorageDead(_1711)<br/>StorageDead(_1710)<br/>StorageDead(_1707)<br/>StorageDead(_1704)<br/>StorageDead(_1703)<br/>StorageDead(_1699)<br/>_1694 = move _1695<br/>StorageDead(_1695)<br/>_1693 = &amp;_1694<br/>_1692 = &amp;(*_1693)<br/></td></tr><tr><td align="left">_1691 = &lt;String as Deref&gt;::deref(move _1692)</td></tr></table>>];
    bb782__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">782</td></tr><tr><td align="left" balign="left">_1690 = &amp;(*_1691)<br/>StorageDead(_1692)<br/></td></tr><tr><td align="left">_1689 = solana_program::log::sol_log(move _1690)</td></tr></table>>];
    bb783__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">783</td></tr><tr><td align="left" balign="left">StorageDead(_1690)<br/></td></tr><tr><td align="left">drop(_1694)</td></tr></table>>];
    bb784__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">784</td></tr><tr><td align="left" balign="left">StorageDead(_1694)<br/>StorageDead(_1693)<br/>StorageDead(_1691)<br/>StorageDead(_1689)<br/>StorageLive(_1713)<br/>_1713 = _1669<br/>_1654 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1713)<br/>StorageDead(_1713)<br/>StorageDead(_1669)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb785__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">785</td></tr><tr><td align="left" balign="left">StorageDead(_1655)<br/></td></tr><tr><td align="left">_1653 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1654)</td></tr></table>>];
    bb786__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">786</td></tr><tr><td align="left" balign="left">StorageDead(_1654)<br/>_1714 = discriminant(_1653)<br/></td></tr><tr><td align="left">switchInt(move _1714)</td></tr></table>>];
    bb787__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">787</td></tr><tr><td align="left" balign="left">StorageLive(_1718)<br/>_1718 = ((_1653 as Continue).0: ())<br/>_1652 = _1718<br/>StorageDead(_1718)<br/>StorageDead(_1653)<br/>StorageDead(_1652)<br/>StorageLive(_1719)<br/>StorageLive(_1720)<br/>StorageLive(_1721)<br/>StorageLive(_1722)<br/>StorageLive(_1723)<br/>StorageLive(_1724)<br/>_1724 = &amp;_1468<br/></td></tr><tr><td align="left">_1723 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1724)</td></tr></table>>];
    bb788__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">788</td></tr><tr><td align="left" balign="left">StorageLive(_1715)<br/>_1715 = ((_1653 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1717)<br/>_1717 = _1715<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1717)</td></tr></table>>];
    bb789__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">789</td></tr><tr><td align="left" balign="left">StorageDead(_1717)<br/>StorageDead(_1715)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb790__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">790</td></tr><tr><td align="left" balign="left">StorageDead(_1724)<br/>_1722 = (((*_1723).1: state::perp_market::AMM).33: u128)<br/>StorageLive(_1725)<br/>StorageLive(_1726)<br/>StorageLive(_1727)<br/>StorageLive(_1728)<br/>StorageLive(_1729)<br/>_1729 = _1338<br/></td></tr><tr><td align="left">_1728 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1729)</td></tr></table>>];
    bb791__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">791</td></tr><tr><td align="left" balign="left">StorageDead(_1729)<br/></td></tr><tr><td align="left">_1727 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _1728)</td></tr></table>>];
    bb792__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">792</td></tr><tr><td align="left" balign="left">StorageDead(_1728)<br/></td></tr><tr><td align="left">_1726 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1727)</td></tr></table>>];
    bb793__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">793</td></tr><tr><td align="left" balign="left">StorageDead(_1727)<br/>_1730 = discriminant(_1726)<br/></td></tr><tr><td align="left">switchInt(move _1730)</td></tr></table>>];
    bb794__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">794</td></tr><tr><td align="left" balign="left">StorageLive(_1734)<br/>_1734 = ((_1726 as Continue).0: u128)<br/>_1725 = _1734<br/>StorageDead(_1734)<br/></td></tr><tr><td align="left">_1721 = &lt;u128 as SafeMath&gt;::safe_add(move _1722, move _1725)</td></tr></table>>];
    bb795__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">795</td></tr><tr><td align="left" balign="left">StorageLive(_1731)<br/>_1731 = ((_1726 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1733)<br/>_1733 = _1731<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1733)</td></tr></table>>];
    bb796__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">796</td></tr><tr><td align="left" balign="left">StorageDead(_1733)<br/>StorageDead(_1731)<br/>StorageDead(_1725)<br/>StorageDead(_1722)<br/>StorageDead(_1721)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb797__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">797</td></tr><tr><td align="left" balign="left">StorageDead(_1725)<br/>StorageDead(_1722)<br/></td></tr><tr><td align="left">_1720 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1721)</td></tr></table>>];
    bb798__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">798</td></tr><tr><td align="left" balign="left">StorageDead(_1721)<br/>_1735 = discriminant(_1720)<br/></td></tr><tr><td align="left">switchInt(move _1735)</td></tr></table>>];
    bb799__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">799</td></tr><tr><td align="left" balign="left">StorageLive(_1739)<br/>_1739 = ((_1720 as Continue).0: u128)<br/>_1719 = _1739<br/>StorageDead(_1739)<br/>StorageLive(_1740)<br/>StorageLive(_1741)<br/>_1741 = &amp;mut _1468<br/></td></tr><tr><td align="left">_1740 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1741)</td></tr></table>>];
    bb800__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">800</td></tr><tr><td align="left" balign="left">StorageLive(_1736)<br/>_1736 = ((_1720 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1738)<br/>_1738 = _1736<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1738)</td></tr></table>>];
    bb801__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">801</td></tr><tr><td align="left" balign="left">StorageDead(_1738)<br/>StorageDead(_1736)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb802__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">802</td></tr><tr><td align="left" balign="left">StorageDead(_1741)<br/>(((*_1740).1: state::perp_market::AMM).33: u128) = move _1719<br/>StorageDead(_1719)<br/>StorageDead(_1740)<br/>StorageDead(_1726)<br/>StorageDead(_1723)<br/>StorageDead(_1720)<br/>StorageLive(_1742)<br/>_1742 = _1489<br/>StorageLive(_1743)<br/>_1743 = _1491<br/>StorageLive(_1744)<br/>_1744 = _1493<br/>StorageLive(_1745)<br/>_1745 = _1616<br/>StorageLive(_1746)<br/>_1746 = _1618<br/>_1467 = (move _1742, move _1743, move _1744, move _1745, move _1746)<br/>StorageDead(_1746)<br/>StorageDead(_1745)<br/>StorageDead(_1744)<br/>StorageDead(_1743)<br/>StorageDead(_1742)<br/>StorageDead(_1618)<br/>StorageDead(_1616)<br/>StorageDead(_1606)<br/>StorageDead(_1493)<br/>StorageDead(_1491)<br/>StorageDead(_1489)<br/>StorageDead(_1479)<br/></td></tr><tr><td align="left">drop(_1468)</td></tr></table>>];
    bb803__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">803</td></tr><tr><td align="left" balign="left">StorageDead(_1468)<br/>StorageLive(_1462)<br/>_1462 = (_1467.0: controller::position::PositionDirection)<br/>StorageLive(_1463)<br/>_1463 = (_1467.1: controller::position::PositionDirection)<br/>StorageLive(_1464)<br/>_1464 = (_1467.2: std::option::Option&lt;(u64, u64)&gt;)<br/>StorageLive(_1465)<br/>_1465 = (_1467.3: controller::position::PositionDirection)<br/>StorageLive(_1466)<br/>_1466 = (_1467.4: std::option::Option&lt;(u64, u64)&gt;)<br/>StorageDead(_1467)<br/>StorageLive(_1748)<br/>StorageLive(_1749)<br/>StorageLive(_1750)<br/>StorageLive(_1751)<br/>_1751 = &amp;(*_4)<br/>StorageLive(_1752)<br/>_1752 = &amp;(*_10)<br/>StorageLive(_1753)<br/>_1753 = &amp;(*_11)<br/>StorageLive(_1754)<br/>_1754 = &amp;mut (*_12)<br/>StorageLive(_1755)<br/>_1755 = _16<br/>StorageLive(_1756)<br/>_1756 = _835<br/></td></tr><tr><td align="left">_1750 = calculate_margin_freed(move _1751, move _1752, move _1753, move _1754, move _1755, move _1756)</td></tr></table>>];
    bb804__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">804</td></tr><tr><td align="left" balign="left">StorageDead(_1756)<br/>StorageDead(_1755)<br/>StorageDead(_1754)<br/>StorageDead(_1753)<br/>StorageDead(_1752)<br/>StorageDead(_1751)<br/></td></tr><tr><td align="left">_1749 = &lt;std::result::Result&lt;(u64, MarginCalculation), error::ErrorCode&gt; as Try&gt;::branch(move _1750)</td></tr></table>>];
    bb805__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">805</td></tr><tr><td align="left" balign="left">StorageDead(_1750)<br/>_1757 = discriminant(_1749)<br/></td></tr><tr><td align="left">switchInt(move _1757)</td></tr></table>>];
    bb806__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">806</td></tr><tr><td align="left" balign="left">StorageLive(_1761)<br/>_1761 = ((_1749 as Continue).0: (u64, state::margin_calculation::MarginCalculation))<br/>_1748 = _1761<br/>StorageDead(_1761)<br/>StorageLive(_1747)<br/>_1747 = (_1748.0: u64)<br/>StorageDead(_1749)<br/>StorageDead(_1748)<br/>StorageLive(_1762)<br/>StorageLive(_1763)<br/>StorageLive(_1764)<br/>StorageLive(_1765)<br/>_1765 = _378<br/>StorageLive(_1766)<br/>_1766 = _1747<br/></td></tr><tr><td align="left">_1764 = &lt;u64 as SafeMath&gt;::safe_add(move _1765, move _1766)</td></tr></table>>];
    bb807__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">807</td></tr><tr><td align="left" balign="left">StorageLive(_1758)<br/>_1758 = ((_1749 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1760)<br/>_1760 = _1758<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1760)</td></tr></table>>];
    bb808__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">808</td></tr><tr><td align="left" balign="left">StorageDead(_1760)<br/>StorageDead(_1758)<br/>StorageDead(_1749)<br/>StorageDead(_1748)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb809__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">809</td></tr><tr><td align="left" balign="left">StorageDead(_1766)<br/>StorageDead(_1765)<br/></td></tr><tr><td align="left">_1763 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1764)</td></tr></table>>];
    bb810__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">810</td></tr><tr><td align="left" balign="left">StorageDead(_1764)<br/>_1767 = discriminant(_1763)<br/></td></tr><tr><td align="left">switchInt(move _1767)</td></tr></table>>];
    bb811__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">811</td></tr><tr><td align="left" balign="left">StorageLive(_1771)<br/>_1771 = ((_1763 as Continue).0: u64)<br/>_1762 = _1771<br/>StorageDead(_1771)<br/>_378 = move _1762<br/>StorageDead(_1762)<br/>StorageDead(_1763)<br/>StorageLive(_1772)<br/>StorageLive(_1773)<br/>StorageLive(_1774)<br/>StorageLive(_1775)<br/>_1775 = &amp;mut (*_4)<br/>StorageLive(_1776)<br/>_1776 = _1747<br/></td></tr><tr><td align="left">_1774 = User::increment_margin_freed(move _1775, move _1776)</td></tr></table>>];
    bb812__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">812</td></tr><tr><td align="left" balign="left">StorageLive(_1768)<br/>_1768 = ((_1763 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1770)<br/>_1770 = _1768<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1770)</td></tr></table>>];
    bb813__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">813</td></tr><tr><td align="left" balign="left">StorageDead(_1770)<br/>StorageDead(_1768)<br/>StorageDead(_1762)<br/>StorageDead(_1763)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb814__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">814</td></tr><tr><td align="left" balign="left">StorageDead(_1776)<br/>StorageDead(_1775)<br/></td></tr><tr><td align="left">_1773 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1774)</td></tr></table>>];
    bb815__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">815</td></tr><tr><td align="left" balign="left">StorageDead(_1774)<br/>_1777 = discriminant(_1773)<br/></td></tr><tr><td align="left">switchInt(move _1777)</td></tr></table>>];
    bb816__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">816</td></tr><tr><td align="left" balign="left">StorageLive(_1781)<br/>_1781 = ((_1773 as Continue).0: ())<br/>_1772 = _1781<br/>StorageDead(_1781)<br/>StorageDead(_1773)<br/>StorageDead(_1772)<br/>StorageLive(_1782)<br/>StorageLive(_1783)<br/>StorageLive(_1784)<br/>_1784 = _1057<br/>StorageLive(_1785)<br/>_1785 = _938<br/>_1783 = Ge(move _1784, move _1785)<br/></td></tr><tr><td align="left">switchInt(move _1783)</td></tr></table>>];
    bb817__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">817</td></tr><tr><td align="left" balign="left">StorageLive(_1778)<br/>_1778 = ((_1773 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1780)<br/>_1780 = _1778<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1780)</td></tr></table>>];
    bb818__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">818</td></tr><tr><td align="left" balign="left">StorageDead(_1780)<br/>StorageDead(_1778)<br/>StorageDead(_1773)<br/>StorageDead(_1772)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb819__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">819</td></tr><tr><td align="left" balign="left">StorageDead(_1785)<br/>StorageDead(_1784)<br/>StorageLive(_1786)<br/>StorageLive(_1787)<br/>_1787 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_1786 = User::exit_liquidation(move _1787)</td></tr></table>>];
    bb820__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">820</td></tr><tr><td align="left" balign="left">StorageDead(_1785)<br/>StorageDead(_1784)<br/>StorageLive(_1788)<br/>StorageLive(_1789)<br/>_1789 = &amp;(*_4)<br/></td></tr><tr><td align="left">_1788 = is_user_bankrupt(move _1789)</td></tr></table>>];
    bb821__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">821</td></tr><tr><td align="left" balign="left">StorageDead(_1787)<br/>StorageDead(_1786)<br/>_1782 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb822__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">822</td></tr><tr><td align="left">switchInt(move _1788)</td></tr></table>>];
    bb823__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">823</td></tr><tr><td align="left" balign="left">StorageDead(_1789)<br/>StorageLive(_1790)<br/>StorageLive(_1791)<br/>_1791 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_1790 = User::enter_bankruptcy(move _1791)</td></tr></table>>];
    bb824__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">824</td></tr><tr><td align="left" balign="left">StorageDead(_1791)<br/>StorageDead(_1790)<br/>_1782 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb825__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">825</td></tr><tr><td align="left" balign="left">StorageDead(_1789)<br/>_1782 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb826__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">826</td></tr><tr><td align="left" balign="left">StorageDead(_1788)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb827__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">827</td></tr><tr><td align="left" balign="left">StorageDead(_1783)<br/>StorageDead(_1782)<br/>StorageLive(_1792)<br/>StorageLive(_1793)<br/>StorageLive(_1794)<br/>StorageLive(_1795)<br/>_1795 = &amp;(*_7)<br/>StorageLive(_1796)<br/>_1796 = &amp;(*_10)<br/>StorageLive(_1797)<br/>_1797 = &amp;(*_11)<br/>StorageLive(_1798)<br/>_1798 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_1794 = math::margin::meets_initial_margin_requirement(move _1795, move _1796, move _1797, move _1798)</td></tr></table>>];
    bb828__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">828</td></tr><tr><td align="left" balign="left">StorageDead(_1798)<br/>StorageDead(_1797)<br/>StorageDead(_1796)<br/>StorageDead(_1795)<br/></td></tr><tr><td align="left">_1793 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1794)</td></tr></table>>];
    bb829__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">829</td></tr><tr><td align="left" balign="left">StorageDead(_1794)<br/>_1799 = discriminant(_1793)<br/></td></tr><tr><td align="left">switchInt(move _1799)</td></tr></table>>];
    bb830__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">830</td></tr><tr><td align="left" balign="left">StorageLive(_1803)<br/>_1803 = ((_1793 as Continue).0: bool)<br/>_1792 = _1803<br/>StorageDead(_1803)<br/>StorageDead(_1793)<br/>StorageLive(_1804)<br/>StorageLive(_1805)<br/>StorageLive(_1806)<br/>StorageLive(_1807)<br/>_1807 = _1792<br/></td></tr><tr><td align="left">switchInt(move _1807)</td></tr></table>>];
    bb831__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">831</td></tr><tr><td align="left" balign="left">StorageLive(_1800)<br/>_1800 = ((_1793 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1802)<br/>_1802 = _1800<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1802)</td></tr></table>>];
    bb832__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">832</td></tr><tr><td align="left" balign="left">StorageDead(_1802)<br/>StorageDead(_1800)<br/>StorageDead(_1793)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb833__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">833</td></tr><tr><td align="left" balign="left">StorageLive(_1808)<br/>_1808 = ()<br/>_1806 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1808)<br/>StorageDead(_1808)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb834__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">834</td></tr><tr><td align="left" balign="left">StorageLive(_1809)<br/>_1809 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_1810)<br/>StorageLive(_1811)<br/>StorageLive(_1812)<br/>StorageLive(_1813)<br/>StorageLive(_1814)<br/>StorageLive(_1815)<br/>StorageLive(_1816)<br/>StorageLive(_1817)<br/>StorageLive(_1818)<br/>StorageLive(_1819)<br/>StorageLive(_1820)<br/>_2090 = const _<br/>_1820 = &amp;(*_2090)<br/>_1819 = &amp;(*_1820)<br/>_1818 = move _1819 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1819)<br/>StorageLive(_1822)<br/>StorageLive(_1823)<br/>StorageLive(_1824)<br/>StorageLive(_1825)<br/>StorageLive(_1826)<br/>StorageLive(_1827)<br/>StorageLive(_1828)<br/>_1828 = &amp;_1809<br/>_1827 = &amp;(*_1828)<br/></td></tr><tr><td align="left">_1826 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1827)</td></tr></table>>];
    bb835__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">835</td></tr><tr><td align="left" balign="left">StorageDead(_1827)<br/>_1825 = [move _1826]<br/>StorageDead(_1826)<br/>_1824 = &amp;_1825<br/>_1823 = &amp;(*_1824)<br/>_1822 = move _1823 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1823)<br/></td></tr><tr><td align="left">_1817 = Arguments::&lt;'_&gt;::new_v1(move _1818, move _1822)</td></tr></table>>];
    bb836__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">836</td></tr><tr><td align="left" balign="left">StorageDead(_1822)<br/>StorageDead(_1818)<br/></td></tr><tr><td align="left">_1816 = format(move _1817)</td></tr></table>>];
    bb837__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">837</td></tr><tr><td align="left" balign="left">StorageDead(_1817)<br/>StorageDead(_1828)<br/>StorageDead(_1825)<br/>StorageDead(_1824)<br/>StorageDead(_1820)<br/>_1815 = move _1816<br/>StorageDead(_1816)<br/>_1814 = &amp;_1815<br/>_1813 = &amp;(*_1814)<br/></td></tr><tr><td align="left">_1812 = &lt;String as Deref&gt;::deref(move _1813)</td></tr></table>>];
    bb838__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">838</td></tr><tr><td align="left" balign="left">_1811 = &amp;(*_1812)<br/>StorageDead(_1813)<br/></td></tr><tr><td align="left">_1810 = solana_program::log::sol_log(move _1811)</td></tr></table>>];
    bb839__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">839</td></tr><tr><td align="left" balign="left">StorageDead(_1811)<br/></td></tr><tr><td align="left">drop(_1815)</td></tr></table>>];
    bb840__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">840</td></tr><tr><td align="left" balign="left">StorageDead(_1815)<br/>StorageDead(_1814)<br/>StorageDead(_1812)<br/>StorageDead(_1810)<br/>StorageLive(_1829)<br/>StorageLive(_1830)<br/>StorageLive(_1831)<br/>_1831 = const &quot;Liquidator doesnt have enough collateral to take over perp position&quot;<br/>_1830 = &amp;(*_1831)<br/></td></tr><tr><td align="left">_1829 = solana_program::log::sol_log(move _1830)</td></tr></table>>];
    bb841__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">841</td></tr><tr><td align="left" balign="left">StorageDead(_1830)<br/>StorageDead(_1831)<br/>StorageDead(_1829)<br/>StorageLive(_1832)<br/>_1832 = _1809<br/>_1806 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1832)<br/>StorageDead(_1832)<br/>StorageDead(_1809)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb842__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">842</td></tr><tr><td align="left" balign="left">StorageDead(_1807)<br/></td></tr><tr><td align="left">_1805 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1806)</td></tr></table>>];
    bb843__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">843</td></tr><tr><td align="left" balign="left">StorageDead(_1806)<br/>_1833 = discriminant(_1805)<br/></td></tr><tr><td align="left">switchInt(move _1833)</td></tr></table>>];
    bb844__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">844</td></tr><tr><td align="left" balign="left">StorageLive(_1837)<br/>_1837 = ((_1805 as Continue).0: ())<br/>_1804 = _1837<br/>StorageDead(_1837)<br/>StorageDead(_1805)<br/>StorageDead(_1804)<br/>StorageLive(_1838)<br/>StorageLive(_1839)<br/>_1839 = ((*_4).15: u32)<br/>StorageLive(_1840)<br/>StorageLive(_1841)<br/>StorageLive(_1842)<br/>StorageLive(_1843)<br/>_1843 = _1839<br/></td></tr><tr><td align="left">_1842 = core::num::&lt;impl u32&gt;::checked_add(move _1843, const 1_u32)</td></tr></table>>];
    bb845__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">845</td></tr><tr><td align="left" balign="left">StorageLive(_1834)<br/>_1834 = ((_1805 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1836)<br/>_1836 = _1834<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1836)</td></tr></table>>];
    bb846__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">846</td></tr><tr><td align="left" balign="left">StorageDead(_1836)<br/>StorageDead(_1834)<br/>StorageDead(_1805)<br/>StorageDead(_1804)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb847__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">847</td></tr><tr><td align="left" balign="left">StorageDead(_1843)<br/>StorageLive(_1844)<br/>_1844 = Option::&lt;u32&gt;::Some(const 1_u32)<br/></td></tr><tr><td align="left">_1841 = Option::&lt;u32&gt;::or(move _1842, move _1844)</td></tr></table>>];
    bb848__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">848</td></tr><tr><td align="left" balign="left">StorageDead(_1844)<br/>StorageDead(_1842)<br/></td></tr><tr><td align="left">_1840 = Option::&lt;u32&gt;::unwrap(move _1841)</td></tr></table>>];
    bb849__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">849</td></tr><tr><td align="left" balign="left">StorageDead(_1841)<br/>((*_4).15: u32) = move _1840<br/>StorageDead(_1840)<br/>_1838 = _1839<br/>StorageDead(_1839)<br/>StorageLive(_1845)<br/>StorageLive(_1846)<br/>_1846 = ((*_7).15: u32)<br/>StorageLive(_1847)<br/>StorageLive(_1848)<br/>StorageLive(_1849)<br/>StorageLive(_1850)<br/>_1850 = _1846<br/></td></tr><tr><td align="left">_1849 = core::num::&lt;impl u32&gt;::checked_add(move _1850, const 1_u32)</td></tr></table>>];
    bb850__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">850</td></tr><tr><td align="left" balign="left">StorageDead(_1850)<br/>StorageLive(_1851)<br/>_1851 = Option::&lt;u32&gt;::Some(const 1_u32)<br/></td></tr><tr><td align="left">_1848 = Option::&lt;u32&gt;::or(move _1849, move _1851)</td></tr></table>>];
    bb851__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">851</td></tr><tr><td align="left" balign="left">StorageDead(_1851)<br/>StorageDead(_1849)<br/></td></tr><tr><td align="left">_1847 = Option::&lt;u32&gt;::unwrap(move _1848)</td></tr></table>>];
    bb852__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">852</td></tr><tr><td align="left" balign="left">StorageDead(_1848)<br/>((*_7).15: u32) = move _1847<br/>StorageDead(_1847)<br/>_1845 = _1846<br/>StorageDead(_1846)<br/>StorageLive(_1852)<br/>StorageLive(_1853)<br/>StorageLive(_1854)<br/>StorageLive(_1855)<br/>StorageLive(_1856)<br/>_1856 = &amp;(*_10)<br/>StorageLive(_1857)<br/>StorageLive(_1858)<br/>_1858 = &amp;_1<br/>_1857 = &amp;(*_1858)<br/></td></tr><tr><td align="left">_1855 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _1856, move _1857)</td></tr></table>>];
    bb853__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">853</td></tr><tr><td align="left" balign="left">StorageDead(_1857)<br/>StorageDead(_1856)<br/></td></tr><tr><td align="left">_1854 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1855)</td></tr></table>>];
    bb854__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">854</td></tr><tr><td align="left" balign="left">StorageDead(_1855)<br/>_1859 = discriminant(_1854)<br/></td></tr><tr><td align="left">switchInt(move _1859)</td></tr></table>>];
    bb855__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">855</td></tr><tr><td align="left" balign="left">StorageLive(_1863)<br/>_1863 = move ((_1854 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_1853 = move _1863<br/>StorageDead(_1863)<br/>_2170 = discriminant(_1854)<br/>StorageDead(_1858)<br/>StorageDead(_1854)<br/>StorageLive(_1864)<br/>StorageLive(_1865)<br/>StorageLive(_1866)<br/>_1866 = &amp;_1853<br/></td></tr><tr><td align="left">_1865 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _1866)</td></tr></table>>];
    bb856__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">856</td></tr><tr><td align="left" balign="left">StorageLive(_1860)<br/>_1860 = ((_1854 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1862)<br/>_1862 = _1860<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1862)</td></tr></table>>];
    bb857__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">857</td></tr><tr><td align="left" balign="left">StorageDead(_1862)<br/>StorageDead(_1860)<br/>_2168 = discriminant(_1854)<br/>StorageDead(_1858)<br/>StorageDead(_1854)<br/>StorageDead(_1853)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb858__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">858</td></tr><tr><td align="left" balign="left">StorageDead(_1866)<br/>_1864 = ((*_1865).8: u64)<br/>StorageDead(_1865)<br/>StorageLive(_1867)<br/>StorageLive(_1868)<br/>StorageLive(_1869)<br/>StorageLive(_1870)<br/>_1870 = _1864<br/></td></tr><tr><td align="left">_1869 = core::num::&lt;impl u64&gt;::checked_add(move _1870, const 1_u64)</td></tr></table>>];
    bb859__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">859</td></tr><tr><td align="left" balign="left">StorageDead(_1870)<br/>StorageLive(_1871)<br/>_1871 = Option::&lt;u64&gt;::Some(const 1_u64)<br/></td></tr><tr><td align="left">_1868 = Option::&lt;u64&gt;::or(move _1869, move _1871)</td></tr></table>>];
    bb860__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">860</td></tr><tr><td align="left" balign="left">StorageDead(_1871)<br/>StorageDead(_1869)<br/></td></tr><tr><td align="left">_1867 = Option::&lt;u64&gt;::unwrap(move _1868)</td></tr></table>>];
    bb861__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">861</td></tr><tr><td align="left" balign="left">StorageDead(_1868)<br/>StorageLive(_1872)<br/>StorageLive(_1873)<br/>_1873 = &amp;mut _1853<br/></td></tr><tr><td align="left">_1872 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _1873)</td></tr></table>>];
    bb862__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">862</td></tr><tr><td align="left" balign="left">StorageDead(_1873)<br/>((*_1872).8: u64) = move _1867<br/>StorageDead(_1867)<br/>StorageDead(_1872)<br/>_1852 = _1864<br/>StorageDead(_1864)<br/></td></tr><tr><td align="left">drop(_1853)</td></tr></table>>];
    bb863__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">863</td></tr><tr><td align="left" balign="left">StorageDead(_1853)<br/>StorageLive(_1874)<br/>StorageLive(_1875)<br/>_1875 = _13<br/>StorageLive(_1876)<br/>_1876 = _1057<br/>StorageLive(_1877)<br/>_1877 = _1838<br/>StorageLive(_1878)<br/>_1878 = _1<br/>StorageLive(_1879)<br/>_1879 = OrderStatus::Open<br/>StorageLive(_1880)<br/>_1880 = state::user::OrderType::Market<br/>StorageLive(_1881)<br/>_1881 = state::user::MarketType::Perp<br/>StorageLive(_1882)<br/>_1882 = _1463<br/>StorageLive(_1883)<br/>_1883 = _1462<br/>StorageLive(_1884)<br/></td></tr><tr><td align="left">_1884 = &lt;Order as Default&gt;::default()</td></tr></table>>];
    bb864__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">864</td></tr><tr><td align="left" balign="left">_1874 = Order { slot: move _1875, price: (_1884.1: u64), base_asset_amount: move _1876, base_asset_amount_filled: (_1884.3: u64), quote_asset_amount_filled: (_1884.4: u64), trigger_price: (_1884.5: u64), auction_start_price: (_1884.6: i64), auction_end_price: (_1884.7: i64), max_ts: (_1884.8: i64), oracle_price_offset: (_1884.9: i32), order_id: move _1877, market_index: move _1878, status: move _1879, order_type: move _1880, market_type: move _1881, user_order_id: (_1884.15: u8), existing_position_direction: move _1883, direction: move _1882, reduce_only: (_1884.18: bool), post_only: (_1884.19: bool), immediate_or_cancel: (_1884.20: bool), trigger_condition: (_1884.21: state::user::OrderTriggerCondition), auction_duration: (_1884.22: u8), posted_slot_tail: (_1884.23: u8), bit_flags: (_1884.24: u8), padding: (_1884.25: [u8; 1]) }<br/>StorageDead(_1883)<br/>StorageDead(_1882)<br/>StorageDead(_1881)<br/>StorageDead(_1880)<br/>StorageDead(_1879)<br/>StorageDead(_1878)<br/>StorageDead(_1877)<br/>StorageDead(_1876)<br/>StorageDead(_1875)<br/>StorageDead(_1884)<br/>StorageLive(_1885)<br/>StorageLive(_1886)<br/>StorageLive(_1887)<br/>StorageLive(_1888)<br/>StorageLive(_1889)<br/>StorageLive(_1890)<br/>StorageLive(_1891)<br/>StorageLive(_1892)<br/>StorageLive(_1893)<br/>StorageLive(_1894)<br/>StorageLive(_1895)<br/>StorageLive(_1896)<br/>StorageLive(_1897)<br/>StorageLive(_1898)<br/>StorageLive(_1899)<br/>_1899 = _14<br/>StorageLive(_1900)<br/>_1900 = (*_5)<br/>StorageLive(_1901)<br/>_1901 = _1874<br/>_1898 = OrderRecord { ts: move _1899, user: move _1900, order: move _1901 }<br/>StorageDead(_1901)<br/>StorageDead(_1900)<br/>StorageDead(_1899)<br/>_1897 = &amp;_1898<br/>_1896 = &amp;(*_1897)<br/></td></tr><tr><td align="left">_1895 = &lt;OrderRecord as anchor_lang::Event&gt;::data(move _1896)</td></tr></table>>];
    bb865__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">865</td></tr><tr><td align="left" balign="left">StorageDead(_1896)<br/>_1894 = &amp;_1895<br/>_1893 = &amp;(*_1894)<br/></td></tr><tr><td align="left">_1892 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _1893)</td></tr></table>>];
    bb866__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">866</td></tr><tr><td align="left" balign="left">_1891 = &amp;(*_1892)<br/>StorageDead(_1893)<br/>_1890 = [move _1891]<br/>StorageDead(_1891)<br/>_1889 = &amp;_1890<br/>_1888 = &amp;(*_1889)<br/>_1887 = move _1888 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_1888)<br/></td></tr><tr><td align="left">_1886 = solana_program::log::sol_log_data(move _1887)</td></tr></table>>];
    bb867__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">867</td></tr><tr><td align="left" balign="left">StorageDead(_1887)<br/></td></tr><tr><td align="left">drop(_1895)</td></tr></table>>];
    bb868__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">868</td></tr><tr><td align="left" balign="left">StorageDead(_1898)<br/>StorageDead(_1897)<br/>StorageDead(_1895)<br/>StorageDead(_1894)<br/>StorageDead(_1892)<br/>StorageDead(_1890)<br/>StorageDead(_1889)<br/>StorageDead(_1886)<br/>_1885 = const ()<br/>StorageDead(_1885)<br/>StorageLive(_1902)<br/>StorageLive(_1903)<br/>_1903 = _13<br/>StorageLive(_1904)<br/>_1905 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _1905)</td></tr></table>>];
    bb869__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">869</td></tr><tr><td align="left" balign="left">StorageLive(_1906)<br/>_1906 = ((_3 as Some).0: u64)<br/>_1904 = _1906<br/>StorageDead(_1906)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb870__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">870</td></tr><tr><td align="left" balign="left">_1904 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb871__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">871</td></tr><tr><td align="left" balign="left">StorageLive(_1907)<br/>_1907 = _1057<br/>StorageLive(_1908)<br/>_1908 = _1845<br/>StorageLive(_1909)<br/>_1909 = _1<br/>StorageLive(_1910)<br/>_1910 = OrderStatus::Open<br/>StorageLive(_1911)<br/>StorageLive(_1912)<br/>StorageLive(_1913)<br/>_1913 = &amp;_3<br/></td></tr><tr><td align="left">_1912 = Option::&lt;u64&gt;::is_some(move _1913)</td></tr></table>>];
    bb872__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">872</td></tr><tr><td align="left">switchInt(move _1912)</td></tr></table>>];
    bb873__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">873</td></tr><tr><td align="left" balign="left">StorageDead(_1913)<br/>_1911 = state::user::OrderType::Limit<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb874__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">874</td></tr><tr><td align="left" balign="left">StorageDead(_1913)<br/>_1911 = state::user::OrderType::Market<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb875__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">875</td></tr><tr><td align="left" balign="left">StorageDead(_1912)<br/>StorageLive(_1914)<br/>_1914 = state::user::MarketType::Perp<br/>StorageLive(_1915)<br/>_1915 = _1462<br/>StorageLive(_1916)<br/>_1916 = _1465<br/>StorageLive(_1917)<br/></td></tr><tr><td align="left">_1917 = &lt;Order as Default&gt;::default()</td></tr></table>>];
    bb876__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">876</td></tr><tr><td align="left" balign="left">_1902 = Order { slot: move _1903, price: move _1904, base_asset_amount: move _1907, base_asset_amount_filled: (_1917.3: u64), quote_asset_amount_filled: (_1917.4: u64), trigger_price: (_1917.5: u64), auction_start_price: (_1917.6: i64), auction_end_price: (_1917.7: i64), max_ts: (_1917.8: i64), oracle_price_offset: (_1917.9: i32), order_id: move _1908, market_index: move _1909, status: move _1910, order_type: move _1911, market_type: move _1914, user_order_id: (_1917.15: u8), existing_position_direction: move _1916, direction: move _1915, reduce_only: (_1917.18: bool), post_only: (_1917.19: bool), immediate_or_cancel: (_1917.20: bool), trigger_condition: (_1917.21: state::user::OrderTriggerCondition), auction_duration: (_1917.22: u8), posted_slot_tail: (_1917.23: u8), bit_flags: (_1917.24: u8), padding: (_1917.25: [u8; 1]) }<br/>StorageDead(_1916)<br/>StorageDead(_1915)<br/>StorageDead(_1914)<br/>StorageDead(_1911)<br/>StorageDead(_1910)<br/>StorageDead(_1909)<br/>StorageDead(_1908)<br/>StorageDead(_1907)<br/>StorageDead(_1904)<br/>StorageDead(_1903)<br/>StorageDead(_1917)<br/>StorageLive(_1918)<br/>StorageLive(_1919)<br/>StorageLive(_1920)<br/>StorageLive(_1921)<br/>StorageLive(_1922)<br/>StorageLive(_1923)<br/>StorageLive(_1924)<br/>StorageLive(_1925)<br/>StorageLive(_1926)<br/>StorageLive(_1927)<br/>StorageLive(_1928)<br/>StorageLive(_1929)<br/>StorageLive(_1930)<br/>StorageLive(_1931)<br/>StorageLive(_1932)<br/>_1932 = _14<br/>StorageLive(_1933)<br/>_1933 = (*_8)<br/>StorageLive(_1934)<br/>_1934 = _1902<br/>_1931 = OrderRecord { ts: move _1932, user: move _1933, order: move _1934 }<br/>StorageDead(_1934)<br/>StorageDead(_1933)<br/>StorageDead(_1932)<br/>_1930 = &amp;_1931<br/>_1929 = &amp;(*_1930)<br/></td></tr><tr><td align="left">_1928 = &lt;OrderRecord as anchor_lang::Event&gt;::data(move _1929)</td></tr></table>>];
    bb877__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">877</td></tr><tr><td align="left" balign="left">StorageDead(_1929)<br/>_1927 = &amp;_1928<br/>_1926 = &amp;(*_1927)<br/></td></tr><tr><td align="left">_1925 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _1926)</td></tr></table>>];
    bb878__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">878</td></tr><tr><td align="left" balign="left">_1924 = &amp;(*_1925)<br/>StorageDead(_1926)<br/>_1923 = [move _1924]<br/>StorageDead(_1924)<br/>_1922 = &amp;_1923<br/>_1921 = &amp;(*_1922)<br/>_1920 = move _1921 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_1921)<br/></td></tr><tr><td align="left">_1919 = solana_program::log::sol_log_data(move _1920)</td></tr></table>>];
    bb879__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">879</td></tr><tr><td align="left" balign="left">StorageDead(_1920)<br/></td></tr><tr><td align="left">drop(_1928)</td></tr></table>>];
    bb880__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">880</td></tr><tr><td align="left" balign="left">StorageDead(_1931)<br/>StorageDead(_1930)<br/>StorageDead(_1928)<br/>StorageDead(_1927)<br/>StorageDead(_1925)<br/>StorageDead(_1923)<br/>StorageDead(_1922)<br/>StorageDead(_1919)<br/>_1918 = const ()<br/>StorageDead(_1918)<br/>StorageLive(_1937)<br/>StorageLive(_1938)<br/>StorageLive(_1939)<br/>StorageLive(_1940)<br/>_1940 = _1057<br/>StorageLive(_1941)<br/>_1941 = _1464<br/></td></tr><tr><td align="left">_1939 = math::orders::calculate_existing_position_fields_for_order_action(move _1940, move _1941)</td></tr></table>>];
    bb881__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">881</td></tr><tr><td align="left" balign="left">StorageDead(_1941)<br/>StorageDead(_1940)<br/></td></tr><tr><td align="left">_1938 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _1939)</td></tr></table>>];
    bb882__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">882</td></tr><tr><td align="left" balign="left">StorageDead(_1939)<br/>_1942 = discriminant(_1938)<br/></td></tr><tr><td align="left">switchInt(move _1942)</td></tr></table>>];
    bb883__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">883</td></tr><tr><td align="left" balign="left">StorageLive(_1946)<br/>_1946 = ((_1938 as Continue).0: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;))<br/>_1937 = _1946<br/>StorageDead(_1946)<br/>StorageLive(_1935)<br/>_1935 = (_1937.0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_1936)<br/>_1936 = (_1937.1: std::option::Option&lt;u64&gt;)<br/>StorageDead(_1938)<br/>StorageDead(_1937)<br/>StorageLive(_1949)<br/>StorageLive(_1950)<br/>StorageLive(_1951)<br/>StorageLive(_1952)<br/>_1952 = _1057<br/>StorageLive(_1953)<br/>_1953 = _1466<br/></td></tr><tr><td align="left">_1951 = math::orders::calculate_existing_position_fields_for_order_action(move _1952, move _1953)</td></tr></table>>];
    bb884__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">884</td></tr><tr><td align="left" balign="left">StorageLive(_1943)<br/>_1943 = ((_1938 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1945)<br/>_1945 = _1943<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1945)</td></tr></table>>];
    bb885__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">885</td></tr><tr><td align="left" balign="left">StorageDead(_1945)<br/>StorageDead(_1943)<br/>StorageDead(_1938)<br/>StorageDead(_1937)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb886__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">886</td></tr><tr><td align="left" balign="left">StorageDead(_1953)<br/>StorageDead(_1952)<br/></td></tr><tr><td align="left">_1950 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _1951)</td></tr></table>>];
    bb887__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">887</td></tr><tr><td align="left" balign="left">StorageDead(_1951)<br/>_1954 = discriminant(_1950)<br/></td></tr><tr><td align="left">switchInt(move _1954)</td></tr></table>>];
    bb888__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">888</td></tr><tr><td align="left" balign="left">StorageLive(_1958)<br/>_1958 = ((_1950 as Continue).0: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;))<br/>_1949 = _1958<br/>StorageDead(_1958)<br/>StorageLive(_1947)<br/>_1947 = (_1949.0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_1948)<br/>_1948 = (_1949.1: std::option::Option&lt;u64&gt;)<br/>StorageDead(_1950)<br/>StorageDead(_1949)<br/>StorageLive(_1959)<br/>StorageLive(_1960)<br/>_1960 = _14<br/>StorageLive(_1961)<br/>_1961 = OrderAction::Fill<br/>StorageLive(_1962)<br/>_1962 = OrderActionExplanation::Liquidation<br/>StorageLive(_1963)<br/>_1963 = _1<br/>StorageLive(_1964)<br/>_1964 = state::user::MarketType::Perp<br/>StorageLive(_1965)<br/>_1965 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_1966)<br/>_1966 = Option::&lt;u64&gt;::None<br/>StorageLive(_1967)<br/>StorageLive(_1968)<br/>_1968 = _1852<br/>_1967 = Option::&lt;u64&gt;::Some(move _1968)<br/>StorageDead(_1968)<br/>StorageLive(_1969)<br/>StorageLive(_1970)<br/>_1970 = _1057<br/>_1969 = Option::&lt;u64&gt;::Some(move _1970)<br/>StorageDead(_1970)<br/>StorageLive(_1971)<br/>StorageLive(_1972)<br/>_1972 = _1268<br/>_1971 = Option::&lt;u64&gt;::Some(move _1972)<br/>StorageDead(_1972)<br/>StorageLive(_1973)<br/>StorageLive(_1974)<br/>StorageLive(_1975)<br/>StorageLive(_1976)<br/>StorageLive(_1977)<br/>StorageLive(_1978)<br/>_1978 = _1294<br/></td></tr><tr><td align="left">_1977 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1978)</td></tr></table>>];
    bb889__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">889</td></tr><tr><td align="left" balign="left">StorageLive(_1955)<br/>_1955 = ((_1950 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1957)<br/>_1957 = _1955<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1957)</td></tr></table>>];
    bb890__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">890</td></tr><tr><td align="left" balign="left">StorageDead(_1957)<br/>StorageDead(_1955)<br/>StorageDead(_1950)<br/>StorageDead(_1949)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb891__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">891</td></tr><tr><td align="left" balign="left">StorageDead(_1978)<br/>StorageLive(_1979)<br/>StorageLive(_1980)<br/>_1980 = _1338<br/></td></tr><tr><td align="left">_1979 = core::num::&lt;impl i64&gt;::unsigned_abs(move _1980)</td></tr></table>>];
    bb892__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">892</td></tr><tr><td align="left" balign="left">StorageDead(_1980)<br/></td></tr><tr><td align="left">_1976 = &lt;u64 as SafeMath&gt;::safe_add(move _1977, move _1979)</td></tr></table>>];
    bb893__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">893</td></tr><tr><td align="left" balign="left">StorageDead(_1979)<br/>StorageDead(_1977)<br/></td></tr><tr><td align="left">_1975 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1976)</td></tr></table>>];
    bb894__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">894</td></tr><tr><td align="left" balign="left">StorageDead(_1976)<br/>_1981 = discriminant(_1975)<br/></td></tr><tr><td align="left">switchInt(move _1981)</td></tr></table>>];
    bb895__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">895</td></tr><tr><td align="left" balign="left">StorageLive(_1985)<br/>_1985 = ((_1975 as Continue).0: u64)<br/>_1974 = _1985<br/>StorageDead(_1985)<br/>_1973 = Option::&lt;u64&gt;::Some(move _1974)<br/>StorageDead(_1974)<br/>StorageLive(_1986)<br/>StorageLive(_1987)<br/>_1987 = _1294<br/>_1986 = Option::&lt;i64&gt;::Some(move _1987)<br/>StorageDead(_1987)<br/>StorageLive(_1988)<br/>_1988 = Option::&lt;u32&gt;::None<br/>StorageLive(_1989)<br/>_1989 = Option::&lt;i64&gt;::None<br/>StorageLive(_1990)<br/>_1990 = Option::&lt;u64&gt;::None<br/>StorageLive(_1991)<br/>StorageLive(_1992)<br/>_1992 = (*_5)<br/>_1991 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::Some(move _1992)<br/>StorageDead(_1992)<br/>StorageLive(_1993)<br/>StorageLive(_1994)<br/>_1994 = _1838<br/>_1993 = Option::&lt;u32&gt;::Some(move _1994)<br/>StorageDead(_1994)<br/>StorageLive(_1995)<br/>StorageLive(_1996)<br/>_1996 = _1463<br/>_1995 = Option::&lt;controller::position::PositionDirection&gt;::Some(move _1996)<br/>StorageDead(_1996)<br/>StorageLive(_1997)<br/>StorageLive(_1998)<br/>_1998 = _1057<br/>_1997 = Option::&lt;u64&gt;::Some(move _1998)<br/>StorageDead(_1998)<br/>StorageLive(_1999)<br/>StorageLive(_2000)<br/>_2000 = _1057<br/>_1999 = Option::&lt;u64&gt;::Some(move _2000)<br/>StorageDead(_2000)<br/>StorageLive(_2001)<br/>StorageLive(_2002)<br/>_2002 = _1268<br/>_2001 = Option::&lt;u64&gt;::Some(move _2002)<br/>StorageDead(_2002)<br/>StorageLive(_2003)<br/>StorageLive(_2004)<br/>_2004 = (*_8)<br/>_2003 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::Some(move _2004)<br/>StorageDead(_2004)<br/>StorageLive(_2005)<br/>StorageLive(_2006)<br/>_2006 = _1845<br/>_2005 = Option::&lt;u32&gt;::Some(move _2006)<br/>StorageDead(_2006)<br/>StorageLive(_2007)<br/>StorageLive(_2008)<br/>_2008 = _1462<br/>_2007 = Option::&lt;controller::position::PositionDirection&gt;::Some(move _2008)<br/>StorageDead(_2008)<br/>StorageLive(_2009)<br/>StorageLive(_2010)<br/>_2010 = _1057<br/>_2009 = Option::&lt;u64&gt;::Some(move _2010)<br/>StorageDead(_2010)<br/>StorageLive(_2011)<br/>StorageLive(_2012)<br/>_2012 = _1057<br/>_2011 = Option::&lt;u64&gt;::Some(move _2012)<br/>StorageDead(_2012)<br/>StorageLive(_2013)<br/>StorageLive(_2014)<br/>_2014 = _1268<br/>_2013 = Option::&lt;u64&gt;::Some(move _2014)<br/>StorageDead(_2014)<br/>StorageLive(_2015)<br/>_2015 = _511<br/>StorageLive(_2016)<br/>_2016 = _1935<br/>StorageLive(_2017)<br/>_2017 = _1936<br/>StorageLive(_2018)<br/>_2018 = _1947<br/>StorageLive(_2019)<br/>_2019 = _1948<br/>StorageLive(_2020)<br/>_2020 = Option::&lt;u64&gt;::None<br/>_1959 = OrderActionRecord { ts: move _1960, action: move _1961, action_explanation: move _1962, market_index: move _1963, market_type: move _1964, filler: move _1965, filler_reward: move _1966, fill_record_id: move _1967, base_asset_amount_filled: move _1969, quote_asset_amount_filled: move _1971, taker_fee: move _1973, maker_fee: move _1986, referrer_reward: move _1988, quote_asset_amount_surplus: move _1989, spot_fulfillment_method_fee: move _1990, taker: move _1991, taker_order_id: move _1993, taker_order_direction: move _1995, taker_order_base_asset_amount: move _1997, taker_order_cumulative_base_asset_amount_filled: move _1999, taker_order_cumulative_quote_asset_amount_filled: move _2001, maker: move _2003, maker_order_id: move _2005, maker_order_direction: move _2007, maker_order_base_asset_amount: move _2009, maker_order_cumulative_base_asset_amount_filled: move _2011, maker_order_cumulative_quote_asset_amount_filled: move _2013, oracle_price: move _2015, bit_flags: const 0_u8, taker_existing_quote_entry_amount: move _2016, taker_existing_base_asset_amount: move _2017, maker_existing_quote_entry_amount: move _2018, maker_existing_base_asset_amount: move _2019, trigger_price: move _2020 }<br/>StorageDead(_2020)<br/>StorageDead(_2019)<br/>StorageDead(_2018)<br/>StorageDead(_2017)<br/>StorageDead(_2016)<br/>StorageDead(_2015)<br/>StorageDead(_2013)<br/>StorageDead(_2011)<br/>StorageDead(_2009)<br/>StorageDead(_2007)<br/>StorageDead(_2005)<br/>StorageDead(_2003)<br/>StorageDead(_2001)<br/>StorageDead(_1999)<br/>StorageDead(_1997)<br/>StorageDead(_1995)<br/>StorageDead(_1993)<br/>StorageDead(_1991)<br/>StorageDead(_1990)<br/>StorageDead(_1989)<br/>StorageDead(_1988)<br/>StorageDead(_1986)<br/>StorageDead(_1973)<br/>StorageDead(_1971)<br/>StorageDead(_1969)<br/>StorageDead(_1967)<br/>StorageDead(_1966)<br/>StorageDead(_1965)<br/>StorageDead(_1964)<br/>StorageDead(_1963)<br/>StorageDead(_1962)<br/>StorageDead(_1961)<br/>StorageDead(_1960)<br/>StorageDead(_1975)<br/>StorageLive(_2021)<br/>StorageLive(_2022)<br/>StorageLive(_2023)<br/>StorageLive(_2024)<br/>StorageLive(_2025)<br/>StorageLive(_2026)<br/>StorageLive(_2027)<br/>StorageLive(_2028)<br/>StorageLive(_2029)<br/>StorageLive(_2030)<br/>StorageLive(_2031)<br/>StorageLive(_2032)<br/>StorageLive(_2033)<br/>_2033 = &amp;_1959<br/>_2032 = &amp;(*_2033)<br/></td></tr><tr><td align="left">_2031 = &lt;OrderActionRecord as anchor_lang::Event&gt;::data(move _2032)</td></tr></table>>];
    bb896__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">896</td></tr><tr><td align="left" balign="left">StorageLive(_1982)<br/>_1982 = ((_1975 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1984)<br/>_1984 = _1982<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1984)</td></tr></table>>];
    bb897__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">897</td></tr><tr><td align="left" balign="left">StorageDead(_1984)<br/>StorageDead(_1982)<br/>StorageDead(_1974)<br/>StorageDead(_1973)<br/>StorageDead(_1971)<br/>StorageDead(_1969)<br/>StorageDead(_1967)<br/>StorageDead(_1966)<br/>StorageDead(_1965)<br/>StorageDead(_1964)<br/>StorageDead(_1963)<br/>StorageDead(_1962)<br/>StorageDead(_1961)<br/>StorageDead(_1960)<br/>StorageDead(_1975)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb898__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">898</td></tr><tr><td align="left" balign="left">StorageDead(_2032)<br/>_2030 = &amp;_2031<br/>_2029 = &amp;(*_2030)<br/></td></tr><tr><td align="left">_2028 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _2029)</td></tr></table>>];
    bb899__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">899</td></tr><tr><td align="left" balign="left">_2027 = &amp;(*_2028)<br/>StorageDead(_2029)<br/>_2026 = [move _2027]<br/>StorageDead(_2027)<br/>_2025 = &amp;_2026<br/>_2024 = &amp;(*_2025)<br/>_2023 = move _2024 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_2024)<br/></td></tr><tr><td align="left">_2022 = solana_program::log::sol_log_data(move _2023)</td></tr></table>>];
    bb900__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">900</td></tr><tr><td align="left" balign="left">StorageDead(_2023)<br/></td></tr><tr><td align="left">drop(_2031)</td></tr></table>>];
    bb901__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">901</td></tr><tr><td align="left" balign="left">StorageDead(_2033)<br/>StorageDead(_2031)<br/>StorageDead(_2030)<br/>StorageDead(_2028)<br/>StorageDead(_2026)<br/>StorageDead(_2025)<br/>StorageDead(_2022)<br/>_2021 = const ()<br/>StorageDead(_2021)<br/>StorageLive(_2034)<br/>StorageLive(_2035)<br/>StorageLive(_2036)<br/>StorageLive(_2037)<br/>StorageLive(_2038)<br/>StorageLive(_2039)<br/>StorageLive(_2040)<br/>StorageLive(_2041)<br/>StorageLive(_2042)<br/>StorageLive(_2043)<br/>StorageLive(_2044)<br/>StorageLive(_2045)<br/>StorageLive(_2046)<br/>StorageLive(_2047)<br/>StorageLive(_2048)<br/>_2048 = _14<br/>StorageLive(_2049)<br/>_2049 = _368<br/>StorageLive(_2050)<br/>_2050 = LiquidationType::LiquidatePerp<br/>StorageLive(_2051)<br/>_2051 = (*_5)<br/>StorageLive(_2052)<br/>_2052 = (*_8)<br/>StorageLive(_2053)<br/>_2053 = (_277.3: u128)<br/>StorageLive(_2054)<br/>_2054 = (_277.1: i128)<br/>StorageLive(_2055)<br/>StorageLive(_2056)<br/>_2056 = &amp;(*_4)<br/></td></tr><tr><td align="left">_2055 = User::is_bankrupt(move _2056)</td></tr></table>>];
    bb902__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">902</td></tr><tr><td align="left" balign="left">StorageDead(_2056)<br/>StorageLive(_2057)<br/>_2122 = const false<br/>_2057 = move _430<br/>StorageLive(_2058)<br/>_2058 = _378<br/>StorageLive(_2059)<br/>StorageLive(_2060)<br/>_2060 = _1<br/>StorageLive(_2061)<br/>_2061 = _511<br/>StorageLive(_2062)<br/>_2062 = (_1432.1: i64)<br/>StorageLive(_2063)<br/>_2063 = (_1432.0: i64)<br/>StorageLive(_2064)<br/>_2064 = _522<br/>StorageLive(_2065)<br/>_2065 = _1838<br/>StorageLive(_2066)<br/>_2066 = _1845<br/>StorageLive(_2067)<br/>_2067 = _1852<br/>StorageLive(_2068)<br/>StorageLive(_2069)<br/>StorageLive(_2070)<br/>StorageLive(_2071)<br/>StorageLive(_2072)<br/>_2072 = _1294<br/></td></tr><tr><td align="left">_2071 = core::num::&lt;impl i64&gt;::abs(move _2072)</td></tr></table>>];
    bb903__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">903</td></tr><tr><td align="left" balign="left">StorageDead(_2072)<br/></td></tr><tr><td align="left">_2070 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _2071)</td></tr></table>>];
    bb904__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">904</td></tr><tr><td align="left" balign="left">StorageDead(_2071)<br/></td></tr><tr><td align="left">_2069 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _2070)</td></tr></table>>];
    bb905__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">905</td></tr><tr><td align="left" balign="left">StorageDead(_2070)<br/>_2073 = discriminant(_2069)<br/></td></tr><tr><td align="left">switchInt(move _2073)</td></tr></table>>];
    bb906__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">906</td></tr><tr><td align="left" balign="left">StorageLive(_2077)<br/>_2077 = ((_2069 as Continue).0: u64)<br/>_2068 = _2077<br/>StorageDead(_2077)<br/>StorageLive(_2078)<br/>StorageLive(_2079)<br/>StorageLive(_2080)<br/>StorageLive(_2081)<br/>StorageLive(_2082)<br/>_2082 = _1338<br/></td></tr><tr><td align="left">_2081 = core::num::&lt;impl i64&gt;::abs(move _2082)</td></tr></table>>];
    bb907__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">907</td></tr><tr><td align="left" balign="left">StorageLive(_2074)<br/>_2074 = ((_2069 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_2076)<br/>_2076 = _2074<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _2076)</td></tr></table>>];
    bb908__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">908</td></tr><tr><td align="left" balign="left">StorageDead(_2076)<br/>StorageDead(_2074)<br/>StorageDead(_2068)<br/>StorageDead(_2067)<br/>StorageDead(_2066)<br/>StorageDead(_2065)<br/>StorageDead(_2064)<br/>StorageDead(_2063)<br/>StorageDead(_2062)<br/>StorageDead(_2061)<br/>StorageDead(_2060)<br/>StorageDead(_2059)<br/>StorageDead(_2058)<br/></td></tr><tr><td align="left">drop(_2057)</td></tr></table>>];
    bb909__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">909</td></tr><tr><td align="left" balign="left">StorageDead(_2082)<br/></td></tr><tr><td align="left">_2080 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _2081)</td></tr></table>>];
    bb910__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">910</td></tr><tr><td align="left" balign="left">StorageDead(_2081)<br/></td></tr><tr><td align="left">_2079 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _2080)</td></tr></table>>];
    bb911__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">911</td></tr><tr><td align="left" balign="left">StorageDead(_2080)<br/>_2083 = discriminant(_2079)<br/></td></tr><tr><td align="left">switchInt(move _2083)</td></tr></table>>];
    bb912__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">912</td></tr><tr><td align="left" balign="left">StorageLive(_2087)<br/>_2087 = ((_2079 as Continue).0: u64)<br/>_2078 = _2087<br/>StorageDead(_2087)<br/>_2059 = LiquidatePerpRecord { market_index: move _2060, oracle_price: move _2061, base_asset_amount: move _2062, quote_asset_amount: move _2063, lp_shares: move _2064, fill_record_id: move _2067, user_order_id: move _2065, liquidator_order_id: move _2066, liquidator_fee: move _2068, if_fee: move _2078 }<br/>StorageDead(_2078)<br/>StorageDead(_2068)<br/>StorageDead(_2067)<br/>StorageDead(_2066)<br/>StorageDead(_2065)<br/>StorageDead(_2064)<br/>StorageDead(_2063)<br/>StorageDead(_2062)<br/>StorageDead(_2061)<br/>StorageDead(_2060)<br/>StorageLive(_2088)<br/></td></tr><tr><td align="left">_2088 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb913__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">913</td></tr><tr><td align="left" balign="left">StorageLive(_2084)<br/>_2084 = ((_2079 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_2086)<br/>_2086 = _2084<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _2086)</td></tr></table>>];
    bb914__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">914</td></tr><tr><td align="left" balign="left">StorageDead(_2086)<br/>StorageDead(_2084)<br/>StorageDead(_2078)<br/>StorageDead(_2068)<br/>StorageDead(_2067)<br/>StorageDead(_2066)<br/>StorageDead(_2065)<br/>StorageDead(_2064)<br/>StorageDead(_2063)<br/>StorageDead(_2062)<br/>StorageDead(_2061)<br/>StorageDead(_2060)<br/>StorageDead(_2059)<br/>StorageDead(_2058)<br/></td></tr><tr><td align="left">drop(_2057)</td></tr></table>>];
    bb915__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">915</td></tr><tr><td align="left" balign="left">_2047 = LiquidationRecord { ts: move _2048, liquidation_type: move _2050, user: move _2051, liquidator: move _2052, margin_requirement: move _2053, total_collateral: move _2054, margin_freed: move _2058, liquidation_id: move _2049, bankrupt: move _2055, canceled_order_ids: move _2057, liquidate_perp: move _2059, liquidate_spot: move (_2088.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move (_2088.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_2088.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_2088.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_2088.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_2059)<br/>StorageDead(_2058)<br/>StorageDead(_2057)<br/>StorageDead(_2055)<br/>StorageDead(_2054)<br/>StorageDead(_2053)<br/>StorageDead(_2052)<br/>StorageDead(_2051)<br/>StorageDead(_2050)<br/>StorageDead(_2049)<br/>StorageDead(_2048)<br/>_2046 = &amp;_2047<br/>_2045 = &amp;(*_2046)<br/></td></tr><tr><td align="left">_2044 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _2045)</td></tr></table>>];
    bb916__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">916</td></tr><tr><td align="left" balign="left">StorageDead(_2045)<br/>_2043 = &amp;_2044<br/>_2042 = &amp;(*_2043)<br/></td></tr><tr><td align="left">_2041 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _2042)</td></tr></table>>];
    bb917__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">917</td></tr><tr><td align="left" balign="left">_2040 = &amp;(*_2041)<br/>StorageDead(_2042)<br/>_2039 = [move _2040]<br/>StorageDead(_2040)<br/>_2038 = &amp;_2039<br/>_2037 = &amp;(*_2038)<br/>_2036 = move _2037 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_2037)<br/></td></tr><tr><td align="left">_2035 = solana_program::log::sol_log_data(move _2036)</td></tr></table>>];
    bb918__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">918</td></tr><tr><td align="left" balign="left">StorageDead(_2036)<br/></td></tr><tr><td align="left">drop(_2044)</td></tr></table>>];
    bb919__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">919</td></tr><tr><td align="left">drop(_2047)</td></tr></table>>];
    bb920__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">920</td></tr><tr><td align="left">drop(_2088)</td></tr></table>>];
    bb921__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">921</td></tr><tr><td align="left" balign="left">StorageDead(_2088)<br/>StorageDead(_2079)<br/>StorageDead(_2069)<br/>StorageDead(_2047)<br/>StorageDead(_2046)<br/>StorageDead(_2044)<br/>StorageDead(_2043)<br/>StorageDead(_2041)<br/>StorageDead(_2039)<br/>StorageDead(_2038)<br/>StorageDead(_2035)<br/>_2034 = const ()<br/>StorageDead(_2034)<br/>StorageLive(_2089)<br/>_2089 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _2089)<br/>StorageDead(_2089)<br/>StorageDead(_1959)<br/>StorageDead(_1948)<br/>StorageDead(_1947)<br/>StorageDead(_1936)<br/>StorageDead(_1935)<br/>StorageDead(_1902)<br/>StorageDead(_1874)<br/>StorageDead(_1852)<br/>StorageDead(_1845)<br/>StorageDead(_1838)<br/>StorageDead(_1792)<br/>StorageDead(_1747)<br/>StorageDead(_1466)<br/>StorageDead(_1465)<br/>StorageDead(_1464)<br/>StorageDead(_1463)<br/>StorageDead(_1462)<br/>StorageDead(_1447)<br/>StorageDead(_1432)<br/>StorageDead(_1338)<br/>StorageDead(_1294)<br/>StorageDead(_1268)<br/>StorageDead(_1057)<br/>StorageDead(_1050)<br/>StorageDead(_1045)<br/>StorageDead(_1019)<br/>StorageDead(_984)<br/>StorageDead(_971)<br/>StorageDead(_938)<br/>StorageDead(_912)<br/>StorageDead(_884)<br/>StorageDead(_868)<br/>_2117 = const false<br/>StorageDead(_855)<br/>_2118 = const false<br/>StorageDead(_844)<br/>StorageDead(_835)<br/>StorageDead(_825)<br/>StorageDead(_790)<br/>StorageDead(_785)<br/>StorageDead(_647)<br/>StorageDead(_523)<br/>StorageDead(_522)<br/>StorageDead(_511)<br/>StorageDead(_477)<br/>StorageDead(_462)<br/>_2121 = const false<br/>StorageDead(_451)<br/>_2122 = const false<br/>StorageDead(_430)<br/>StorageDead(_379)<br/>StorageDead(_378)<br/>StorageDead(_368)<br/>StorageDead(_277)<br/>_2125 = const false<br/>StorageDead(_160)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb922__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">922</td></tr><tr><td align="left" balign="left">StorageDead(_2057)<br/>StorageDead(_2055)<br/>StorageDead(_2054)<br/>StorageDead(_2053)<br/>StorageDead(_2052)<br/>StorageDead(_2051)<br/>StorageDead(_2050)<br/>StorageDead(_2049)<br/>StorageDead(_2048)<br/>StorageDead(_2045)<br/>StorageDead(_2042)<br/>StorageDead(_2040)<br/>StorageDead(_2037)<br/>StorageDead(_2036)<br/>StorageDead(_2079)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb923__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">923</td></tr><tr><td align="left" balign="left">StorageDead(_2057)<br/>StorageDead(_2055)<br/>StorageDead(_2054)<br/>StorageDead(_2053)<br/>StorageDead(_2052)<br/>StorageDead(_2051)<br/>StorageDead(_2050)<br/>StorageDead(_2049)<br/>StorageDead(_2048)<br/>StorageDead(_2045)<br/>StorageDead(_2042)<br/>StorageDead(_2040)<br/>StorageDead(_2037)<br/>StorageDead(_2036)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb924__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">924</td></tr><tr><td align="left" balign="left">StorageDead(_2069)<br/>StorageDead(_2047)<br/>StorageDead(_2046)<br/>StorageDead(_2044)<br/>StorageDead(_2043)<br/>StorageDead(_2041)<br/>StorageDead(_2039)<br/>StorageDead(_2038)<br/>StorageDead(_2035)<br/>StorageDead(_2034)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb925__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">925</td></tr><tr><td align="left" balign="left">StorageDead(_1959)<br/>StorageDead(_1948)<br/>StorageDead(_1947)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb926__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">926</td></tr><tr><td align="left" balign="left">StorageDead(_1936)<br/>StorageDead(_1935)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb927__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">927</td></tr><tr><td align="left" balign="left">StorageDead(_1902)<br/>StorageDead(_1874)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb928__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">928</td></tr><tr><td align="left" balign="left">StorageDead(_1852)<br/>StorageDead(_1845)<br/>StorageDead(_1838)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb929__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">929</td></tr><tr><td align="left" balign="left">StorageDead(_1792)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb930__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">930</td></tr><tr><td align="left" balign="left">StorageDead(_1747)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb931__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">931</td></tr><tr><td align="left" balign="left">StorageDead(_1466)<br/>StorageDead(_1465)<br/>StorageDead(_1464)<br/>StorageDead(_1463)<br/>StorageDead(_1462)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb932__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">932</td></tr><tr><td align="left" balign="left">StorageDead(_1719)<br/>StorageDead(_1726)<br/>StorageDead(_1723)<br/>StorageDead(_1720)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb933__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">933</td></tr><tr><td align="left" balign="left">StorageDead(_1653)<br/>StorageDead(_1652)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb934__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">934</td></tr><tr><td align="left" balign="left">StorageDead(_1618)<br/>StorageDead(_1616)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb935__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">935</td></tr><tr><td align="left" balign="left">StorageDead(_1606)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb936__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">936</td></tr><tr><td align="left" balign="left">StorageDead(_1540)<br/>StorageDead(_1539)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb937__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">937</td></tr><tr><td align="left" balign="left">StorageDead(_1493)<br/>StorageDead(_1491)<br/>StorageDead(_1489)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb938__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">938</td></tr><tr><td align="left" balign="left">StorageDead(_1479)<br/></td></tr><tr><td align="left">drop(_1468)</td></tr></table>>];
    bb939__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">939</td></tr><tr><td align="left" balign="left">StorageDead(_1468)<br/>StorageDead(_1467)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb940__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">940</td></tr><tr><td align="left" balign="left">StorageDead(_1447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb941__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">941</td></tr><tr><td align="left" balign="left">StorageDead(_1432)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb942__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">942</td></tr><tr><td align="left" balign="left">StorageDead(_1345)<br/>StorageDead(_1344)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb943__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">943</td></tr><tr><td align="left" balign="left">StorageDead(_1342)<br/>StorageDead(_1341)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb944__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">944</td></tr><tr><td align="left" balign="left">StorageDead(_1339)<br/>StorageDead(_1358)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb945__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">945</td></tr><tr><td align="left" balign="left">StorageDead(_1349)<br/>StorageDead(_1346)<br/>StorageDead(_1343)<br/>StorageDead(_1340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb946__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">946</td></tr><tr><td align="left" balign="left">StorageDead(_1338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb947__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">947</td></tr><tr><td align="left" balign="left">StorageDead(_1301)<br/>StorageDead(_1300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb948__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">948</td></tr><tr><td align="left" balign="left">StorageDead(_1298)<br/>StorageDead(_1297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb949__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">949</td></tr><tr><td align="left" balign="left">StorageDead(_1295)<br/>StorageDead(_1314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb950__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">950</td></tr><tr><td align="left" balign="left">StorageDead(_1305)<br/>StorageDead(_1302)<br/>StorageDead(_1299)<br/>StorageDead(_1296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb951__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">951</td></tr><tr><td align="left" balign="left">StorageDead(_1294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb952__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">952</td></tr><tr><td align="left" balign="left">StorageDead(_1271)<br/>StorageDead(_1270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb953__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">953</td></tr><tr><td align="left" balign="left">StorageDead(_1275)<br/>StorageDead(_1272)<br/>StorageDead(_1269)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb954__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">954</td></tr><tr><td align="left" balign="left">StorageDead(_1268)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb955__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">955</td></tr><tr><td align="left" balign="left">StorageDead(_1196)<br/>StorageDead(_1206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb956__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">956</td></tr><tr><td align="left" balign="left">StorageDead(_1124)<br/>StorageDead(_1134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb957__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">957</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/>StorageDead(_1083)<br/>StorageDead(_1120)<br/>StorageDead(_1118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb958__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">958</td></tr><tr><td align="left" balign="left">StorageDead(_1095)<br/>StorageDead(_1094)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb959__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">959</td></tr><tr><td align="left" balign="left">StorageDead(_1100)<br/>StorageDead(_1096)<br/>StorageDead(_1093)<br/>StorageDead(_1092)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb960__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">960</td></tr><tr><td align="left" balign="left">StorageDead(_1083)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb961__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">961</td></tr><tr><td align="left" balign="left">StorageDead(_1082)<br/>StorageDead(_1080)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb962__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">962</td></tr><tr><td align="left" balign="left">StorageDead(_1057)<br/>StorageDead(_1050)<br/>StorageDead(_1045)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb963__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">963</td></tr><tr><td align="left" balign="left">StorageDead(_1022)<br/>StorageDead(_1021)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb964__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">964</td></tr><tr><td align="left" balign="left">StorageDead(_1026)<br/>StorageDead(_1023)<br/>StorageDead(_1020)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb965__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">965</td></tr><tr><td align="left" balign="left">StorageDead(_1019)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb966__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">966</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/>StorageDead(_986)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb967__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">967</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_988)<br/>StorageDead(_985)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb968__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">968</td></tr><tr><td align="left" balign="left">StorageDead(_984)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb969__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">969</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb970__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">970</td></tr><tr><td align="left" balign="left">StorageDead(_938)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb971__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">971</td></tr><tr><td align="left" balign="left">StorageDead(_916)<br/>StorageDead(_913)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb972__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">972</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb973__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">973</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>StorageDead(_895)<br/>StorageDead(_889)<br/>StorageDead(_885)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb974__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">974</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb975__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">975</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/></td></tr><tr><td align="left">switchInt(_2117)</td></tr></table>>];
    bb976__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">976</td></tr><tr><td align="left" balign="left">_2117 = const false<br/>StorageDead(_855)<br/></td></tr><tr><td align="left">switchInt(_2118)</td></tr></table>>];
    bb977__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">977</td></tr><tr><td align="left" balign="left">_2118 = const false<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb978__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">978</td></tr><tr><td align="left" balign="left">StorageDead(_835)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb979__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">979</td></tr><tr><td align="left" balign="left">StorageDead(_825)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb980__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">980</td></tr><tr><td align="left" balign="left">StorageDead(_808)<br/></td></tr><tr><td align="left">drop(_796)</td></tr></table>>];
    bb981__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">981</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/>StorageDead(_785)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb982__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">982</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>StorageDead(_737)<br/>StorageDead(_733)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb983__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">983</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>StorageDead(_726)<br/></td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb984__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">984</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb985__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">985</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb986__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">986</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>StorageDead(_591)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb987__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">987</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb988__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">988</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb989__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">989</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_529)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb990__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">990</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageDead(_526)<br/>StorageDead(_524)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb991__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">991</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_522)<br/>StorageDead(_511)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb992__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">992</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb993__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">993</td></tr><tr><td align="left" balign="left">StorageDead(_462)<br/></td></tr><tr><td align="left">switchInt(_2121)</td></tr></table>>];
    bb994__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">994</td></tr><tr><td align="left" balign="left">_2121 = const false<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">switchInt(_2122)</td></tr></table>>];
    bb995__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">995</td></tr><tr><td align="left" balign="left">_2122 = const false<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb996__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">996</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_378)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb997__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">997</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb998__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">998</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb999__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">999</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1000__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1000</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1001__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1001</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1002__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1002</td></tr><tr><td align="left" balign="left">_2125 = const false<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1003__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1003</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1004__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1004</td></tr><tr><td align="left">return</td></tr></table>>];
    bb1005__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1005 (cleanup)</td></tr><tr><td align="left">drop(_2044)</td></tr></table>>];
    bb1006__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1006 (cleanup)</td></tr><tr><td align="left">drop(_2047)</td></tr></table>>];
    bb1007__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1007 (cleanup)</td></tr><tr><td align="left">drop(_2088)</td></tr></table>>];
    bb1008__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1008 (cleanup)</td></tr><tr><td align="left">drop(_2057)</td></tr></table>>];
    bb1009__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1009 (cleanup)</td></tr><tr><td align="left">drop(_2031)</td></tr></table>>];
    bb1010__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1010 (cleanup)</td></tr><tr><td align="left">drop(_1928)</td></tr></table>>];
    bb1011__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1011 (cleanup)</td></tr><tr><td align="left">drop(_1895)</td></tr></table>>];
    bb1012__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1012 (cleanup)</td></tr><tr><td align="left">drop(_1853)</td></tr></table>>];
    bb1013__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1013 (cleanup)</td></tr><tr><td align="left">drop(_1815)</td></tr></table>>];
    bb1014__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1014 (cleanup)</td></tr><tr><td align="left">drop(_1694)</td></tr></table>>];
    bb1015__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1015 (cleanup)</td></tr><tr><td align="left">drop(_1675)</td></tr></table>>];
    bb1016__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1016 (cleanup)</td></tr><tr><td align="left">drop(_1581)</td></tr></table>>];
    bb1017__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1017 (cleanup)</td></tr><tr><td align="left">drop(_1562)</td></tr></table>>];
    bb1018__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1018 (cleanup)</td></tr><tr><td align="left">drop(_1468)</td></tr></table>>];
    bb1019__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1019 (cleanup)</td></tr><tr><td align="left">drop(_1414)</td></tr></table>>];
    bb1020__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1020 (cleanup)</td></tr><tr><td align="left">drop(_1389)</td></tr></table>>];
    bb1021__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1021 (cleanup)</td></tr><tr><td align="left">drop(_1245)</td></tr></table>>];
    bb1022__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1022 (cleanup)</td></tr><tr><td align="left">drop(_1226)</td></tr></table>>];
    bb1023__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1023 (cleanup)</td></tr><tr><td align="left">drop(_1173)</td></tr></table>>];
    bb1024__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1024 (cleanup)</td></tr><tr><td align="left">drop(_1154)</td></tr></table>>];
    bb1025__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1025 (cleanup)</td></tr><tr><td align="left">drop(_1064)</td></tr></table>>];
    bb1026__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1026 (cleanup)</td></tr><tr><td align="left">drop(_796)</td></tr></table>>];
    bb1027__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1027 (cleanup)</td></tr><tr><td align="left">drop(_765)</td></tr></table>>];
    bb1028__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1028 (cleanup)</td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb1029__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1029 (cleanup)</td></tr><tr><td align="left">drop(_701)</td></tr></table>>];
    bb1030__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1030 (cleanup)</td></tr><tr><td align="left">drop(_682)</td></tr></table>>];
    bb1031__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1031 (cleanup)</td></tr><tr><td align="left">drop(_654)</td></tr></table>>];
    bb1032__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1032 (cleanup)</td></tr><tr><td align="left">drop(_612)</td></tr></table>>];
    bb1033__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1033 (cleanup)</td></tr><tr><td align="left">drop(_615)</td></tr></table>>];
    bb1034__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1034 (cleanup)</td></tr><tr><td align="left">drop(_632)</td></tr></table>>];
    bb1035__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1035 (cleanup)</td></tr><tr><td align="left">drop(_625)</td></tr></table>>];
    bb1036__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1036 (cleanup)</td></tr><tr><td align="left">drop(_410)</td></tr></table>>];
    bb1037__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1037 (cleanup)</td></tr><tr><td align="left">drop(_312)</td></tr></table>>];
    bb1038__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1038 (cleanup)</td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb1039__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1039 (cleanup)</td></tr><tr><td align="left">drop(_235)</td></tr></table>>];
    bb1040__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1040 (cleanup)</td></tr><tr><td align="left">drop(_205)</td></tr></table>>];
    bb1041__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1041 (cleanup)</td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb1042__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1042 (cleanup)</td></tr><tr><td align="left">drop(_140)</td></tr></table>>];
    bb1043__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1043 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb1044__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1044 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb1045__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1045 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb1046__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1046 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb1047__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1047 (cleanup)</td></tr><tr><td align="left">drop(_33)</td></tr></table>>];
    bb1048__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1048 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb1049__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1049</td></tr><tr><td align="left" balign="left">_2130 = discriminant(_236)<br/>StorageDead(_240)<br/>_2124 = const false<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_228)<br/>StorageDead(_227)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;mut (*_7)<br/>StorageLive(_256)<br/>_256 = &amp;(*_8)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_263 = &amp;(*_10)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;_1<br/>_264 = &amp;(*_265)<br/></td></tr><tr><td align="left">_262 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _263, move _264)</td></tr></table>>];
    bb1050__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1050</td></tr><tr><td align="left" balign="left">_2132 = discriminant(_261)<br/>StorageDead(_265)<br/>_2123 = const false<br/>StorageDead(_261)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_280 = &amp;(*_4)<br/>StorageLive(_281)<br/>_281 = &amp;(*_10)<br/>StorageLive(_282)<br/>_282 = &amp;(*_11)<br/>StorageLive(_283)<br/>_283 = &amp;mut (*_12)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>_288 = _16<br/></td></tr><tr><td align="left">_287 = MarginContext::liquidation(move _288)</td></tr></table>>];
    bb1051__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1051</td></tr><tr><td align="left" balign="left">_2142 = discriminant(_655)<br/>StorageDead(_659)<br/>_2120 = const false<br/>StorageDead(_655)<br/>StorageDead(_654)<br/>StorageDead(_652)<br/>StorageDead(_648)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>_674 = _647<br/>_673 = Ne(move _674, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _673)</td></tr></table>>];
    bb1052__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1052</td></tr><tr><td align="left" balign="left">_2148 = discriminant(_797)<br/>StorageDead(_801)<br/>_2119 = const false<br/>StorageDead(_797)<br/>StorageDead(_796)<br/>StorageDead(_794)<br/>StorageDead(_791)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>StorageLive(_828)<br/>_828 = _790<br/>StorageLive(_829)<br/>_829 = _16<br/></td></tr><tr><td align="left">_827 = &lt;u32 as SafeMath&gt;::safe_add(move _828, move _829)</td></tr></table>>];
    bb1053__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1053</td></tr><tr><td align="left" balign="left">_2158 = discriminant(_1065)<br/>StorageDead(_1069)<br/>_2116 = const false<br/>StorageDead(_1065)<br/>StorageDead(_1064)<br/>StorageDead(_1062)<br/>StorageDead(_1058)<br/>StorageLive(_1080)<br/>_1081 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _1081)</td></tr></table>>];
    bb1054__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1054</td></tr><tr><td align="left" balign="left">_2160 = discriminant(_1390)<br/>StorageDead(_1394)<br/>_2115 = const false<br/>StorageDead(_1390)<br/>StorageDead(_1389)<br/>StorageDead(_1387)<br/>StorageDead(_1383)<br/>StorageDead(_1382)<br/>StorageLive(_1407)<br/>StorageLive(_1408)<br/>StorageLive(_1409)<br/>StorageLive(_1410)<br/>_1410 = &amp;mut (*_9)<br/>StorageLive(_1411)<br/>StorageLive(_1412)<br/>StorageLive(_1413)<br/>StorageLive(_1414)<br/>StorageLive(_1415)<br/>StorageLive(_1416)<br/>StorageLive(_1417)<br/>_1417 = &amp;(*_10)<br/>StorageLive(_1418)<br/>StorageLive(_1419)<br/>_1419 = &amp;_1<br/>_1418 = &amp;(*_1419)<br/></td></tr><tr><td align="left">_1416 = PerpMarketMap::&lt;'_&gt;::get_ref(move _1417, move _1418)</td></tr></table>>];
    bb1055__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1055</td></tr><tr><td align="left" balign="left">_2162 = discriminant(_1415)<br/>StorageDead(_1419)<br/>_2114 = const false<br/>StorageDead(_1415)<br/>StorageDead(_1414)<br/>StorageDead(_1412)<br/>StorageDead(_1408)<br/>StorageDead(_1407)<br/>StorageLive(_1432)<br/>StorageLive(_1433)<br/>StorageLive(_1434)<br/>StorageLive(_1435)<br/>_1435 = _1057<br/>StorageLive(_1436)<br/>_1436 = _1268<br/>StorageLive(_1437)<br/>StorageLive(_1438)<br/>StorageLive(_1439)<br/>_1439 = _379<br/>_1440 = Len(((*_4).4: [state::user::PerpPosition; 8]))<br/>_1441 = Lt(_1439, _1440)<br/></td></tr><tr><td align="left">assert(move _1441, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _1440, _1439)</td></tr></table>>];
    bb1056__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1056</td></tr><tr><td align="left" balign="left">_2172 = discriminant(_1415)<br/>StorageDead(_1419)<br/>_2114 = const false<br/>StorageDead(_1415)<br/>StorageDead(_1414)<br/>StorageDead(_1412)<br/>StorageDead(_1408)<br/>StorageDead(_1407)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1057__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1057</td></tr><tr><td align="left" balign="left">_2174 = discriminant(_1390)<br/>StorageDead(_1394)<br/>_2115 = const false<br/>StorageDead(_1390)<br/>StorageDead(_1389)<br/>StorageDead(_1387)<br/>StorageDead(_1383)<br/>StorageDead(_1382)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1058__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1058</td></tr><tr><td align="left" balign="left">_2176 = discriminant(_1065)<br/>StorageDead(_1069)<br/>_2116 = const false<br/>StorageDead(_1065)<br/>StorageDead(_1064)<br/>StorageDead(_1062)<br/>StorageDead(_1058)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1059__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1059</td></tr><tr><td align="left">drop(_855)</td></tr></table>>];
    bb1060__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1060</td></tr><tr><td align="left">drop(_844)</td></tr></table>>];
    bb1061__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1061</td></tr><tr><td align="left" balign="left">_2178 = discriminant(_797)<br/>StorageDead(_801)<br/>_2119 = const false<br/>StorageDead(_797)<br/>StorageDead(_796)<br/>StorageDead(_794)<br/>StorageDead(_791)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1062__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1062</td></tr><tr><td align="left" balign="left">_2180 = discriminant(_655)<br/>StorageDead(_659)<br/>_2120 = const false<br/>StorageDead(_655)<br/>StorageDead(_654)<br/>StorageDead(_652)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1063__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1063</td></tr><tr><td align="left">drop(_451)</td></tr></table>>];
    bb1064__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1064</td></tr><tr><td align="left">drop(_430)</td></tr></table>>];
    bb1065__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1065</td></tr><tr><td align="left" balign="left">_2182 = discriminant(_261)<br/>StorageDead(_265)<br/>_2123 = const false<br/>StorageDead(_261)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_253)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1066__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1066</td></tr><tr><td align="left" balign="left">_2184 = discriminant(_236)<br/>StorageDead(_240)<br/>_2124 = const false<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_228)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1067__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1067</td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb1068__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1068</td></tr><tr><td align="left">switchInt(_2125)</td></tr></table>>];
    bb1069__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1069 (cleanup)</td></tr><tr><td align="left" balign="left">_2186 = discriminant(_1854)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1070__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1070 (cleanup)</td></tr><tr><td align="left" balign="left">_2187 = discriminant(_1469)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1071__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1071 (cleanup)</td></tr><tr><td align="left" balign="left">_2188 = discriminant(_1415)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1072__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1072 (cleanup)</td></tr><tr><td align="left" balign="left">_2189 = discriminant(_1390)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1073__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1073 (cleanup)</td></tr><tr><td align="left" balign="left">_2190 = discriminant(_1065)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1074__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1074 (cleanup)</td></tr><tr><td align="left">drop(_855)</td></tr></table>>];
    bb1075__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1075 (cleanup)</td></tr><tr><td align="left">switchInt(_2117)</td></tr></table>>];
    bb1076__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1076 (cleanup)</td></tr><tr><td align="left" balign="left">_2191 = discriminant(_856)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1077__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1077 (cleanup)</td></tr><tr><td align="left">drop(_844)</td></tr></table>>];
    bb1078__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1078 (cleanup)</td></tr><tr><td align="left">switchInt(_2118)</td></tr></table>>];
    bb1079__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1079 (cleanup)</td></tr><tr><td align="left" balign="left">_2192 = discriminant(_845)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1080__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1080 (cleanup)</td></tr><tr><td align="left" balign="left">_2193 = discriminant(_797)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1081__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1081 (cleanup)</td></tr><tr><td align="left" balign="left">_2194 = discriminant(_716)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1082__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1082 (cleanup)</td></tr><tr><td align="left" balign="left">_2195 = discriminant(_655)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1083__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1083 (cleanup)</td></tr><tr><td align="left">drop(_451)</td></tr></table>>];
    bb1084__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1084 (cleanup)</td></tr><tr><td align="left">switchInt(_2121)</td></tr></table>>];
    bb1085__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1085 (cleanup)</td></tr><tr><td align="left" balign="left">_2196 = discriminant(_452)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1086__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1086 (cleanup)</td></tr><tr><td align="left">drop(_430)</td></tr></table>>];
    bb1087__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1087 (cleanup)</td></tr><tr><td align="left">switchInt(_2122)</td></tr></table>>];
    bb1088__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1088 (cleanup)</td></tr><tr><td align="left" balign="left">_2197 = discriminant(_431)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1089__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1089 (cleanup)</td></tr><tr><td align="left" balign="left">_2198 = discriminant(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1090__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1090 (cleanup)</td></tr><tr><td align="left" balign="left">_2199 = discriminant(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1091__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1091 (cleanup)</td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb1092__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1092 (cleanup)</td></tr><tr><td align="left">switchInt(_2125)</td></tr></table>>];
    bb1093__0_329 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">1093 (cleanup)</td></tr><tr><td align="left" balign="left">_2200 = discriminant(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_329 -> bb1__0_329 [label="return"];
    bb1__0_329 -> bb3__0_329 [label="0"];
    bb1__0_329 -> bb2__0_329 [label="otherwise"];
    bb2__0_329 -> bb4__0_329 [label="return"];
    bb3__0_329 -> bb15__0_329 [label=""];
    bb4__0_329 -> bb5__0_329 [label="return"];
    bb5__0_329 -> bb6__0_329 [label="return"];
    bb6__0_329 -> bb7__0_329 [label="return"];
    bb6__0_329 -> bb1047__0_329 [label="unwind"];
    bb7__0_329 -> bb8__0_329 [label="return"];
    bb7__0_329 -> bb1047__0_329 [label="unwind"];
    bb8__0_329 -> bb9__0_329 [label="return"];
    bb8__0_329 -> bb1048__0_329 [label="unwind"];
    bb9__0_329 -> bb10__0_329 [label="return"];
    bb10__0_329 -> bb11__0_329 [label="return"];
    bb11__0_329 -> bb12__0_329 [label="return"];
    bb11__0_329 -> bb1046__0_329 [label="unwind"];
    bb12__0_329 -> bb13__0_329 [label="return"];
    bb12__0_329 -> bb1046__0_329 [label="unwind"];
    bb13__0_329 -> bb14__0_329 [label="return"];
    bb13__0_329 -> bb1048__0_329 [label="unwind"];
    bb14__0_329 -> bb15__0_329 [label=""];
    bb15__0_329 -> bb16__0_329 [label="return"];
    bb16__0_329 -> bb17__0_329 [label="0"];
    bb16__0_329 -> bb19__0_329 [label="1"];
    bb16__0_329 -> bb18__0_329 [label="otherwise"];
    bb17__0_329 -> bb21__0_329 [label="return"];
    bb19__0_329 -> bb20__0_329 [label="return"];
    bb20__0_329 -> bb1003__0_329 [label=""];
    bb21__0_329 -> bb23__0_329 [label="0"];
    bb21__0_329 -> bb22__0_329 [label="otherwise"];
    bb22__0_329 -> bb24__0_329 [label="return"];
    bb23__0_329 -> bb35__0_329 [label=""];
    bb24__0_329 -> bb25__0_329 [label="return"];
    bb25__0_329 -> bb26__0_329 [label="return"];
    bb26__0_329 -> bb27__0_329 [label="return"];
    bb26__0_329 -> bb1045__0_329 [label="unwind"];
    bb27__0_329 -> bb28__0_329 [label="return"];
    bb27__0_329 -> bb1045__0_329 [label="unwind"];
    bb28__0_329 -> bb29__0_329 [label="return"];
    bb28__0_329 -> bb1048__0_329 [label="unwind"];
    bb29__0_329 -> bb30__0_329 [label="return"];
    bb30__0_329 -> bb31__0_329 [label="return"];
    bb31__0_329 -> bb32__0_329 [label="return"];
    bb31__0_329 -> bb1044__0_329 [label="unwind"];
    bb32__0_329 -> bb33__0_329 [label="return"];
    bb32__0_329 -> bb1044__0_329 [label="unwind"];
    bb33__0_329 -> bb34__0_329 [label="return"];
    bb33__0_329 -> bb1048__0_329 [label="unwind"];
    bb34__0_329 -> bb35__0_329 [label=""];
    bb35__0_329 -> bb36__0_329 [label="return"];
    bb36__0_329 -> bb37__0_329 [label="0"];
    bb36__0_329 -> bb38__0_329 [label="1"];
    bb36__0_329 -> bb18__0_329 [label="otherwise"];
    bb37__0_329 -> bb41__0_329 [label="0"];
    bb37__0_329 -> bb40__0_329 [label="otherwise"];
    bb38__0_329 -> bb39__0_329 [label="return"];
    bb39__0_329 -> bb1003__0_329 [label=""];
    bb40__0_329 -> bb54__0_329 [label=""];
    bb41__0_329 -> bb42__0_329 [label="return"];
    bb42__0_329 -> bb43__0_329 [label="return"];
    bb43__0_329 -> bb44__0_329 [label="return"];
    bb44__0_329 -> bb45__0_329 [label="return"];
    bb44__0_329 -> bb1043__0_329 [label="unwind"];
    bb45__0_329 -> bb46__0_329 [label="return"];
    bb45__0_329 -> bb1043__0_329 [label="unwind"];
    bb46__0_329 -> bb47__0_329 [label="return"];
    bb46__0_329 -> bb1048__0_329 [label="unwind"];
    bb47__0_329 -> bb48__0_329 [label="return"];
    bb48__0_329 -> bb49__0_329 [label="return"];
    bb49__0_329 -> bb50__0_329 [label="return"];
    bb50__0_329 -> bb51__0_329 [label="return"];
    bb50__0_329 -> bb1042__0_329 [label="unwind"];
    bb51__0_329 -> bb52__0_329 [label="return"];
    bb51__0_329 -> bb1042__0_329 [label="unwind"];
    bb52__0_329 -> bb53__0_329 [label="return"];
    bb52__0_329 -> bb1048__0_329 [label="unwind"];
    bb53__0_329 -> bb54__0_329 [label=""];
    bb54__0_329 -> bb55__0_329 [label="return"];
    bb55__0_329 -> bb56__0_329 [label="0"];
    bb55__0_329 -> bb57__0_329 [label="1"];
    bb55__0_329 -> bb18__0_329 [label="otherwise"];
    bb56__0_329 -> bb59__0_329 [label="return"];
    bb57__0_329 -> bb58__0_329 [label="return"];
    bb58__0_329 -> bb1003__0_329 [label=""];
    bb59__0_329 -> bb60__0_329 [label="return"];
    bb59__0_329 -> bb1048__0_329 [label="unwind"];
    bb60__0_329 -> bb61__0_329 [label="0"];
    bb60__0_329 -> bb62__0_329 [label="1"];
    bb60__0_329 -> bb18__0_329 [label="otherwise"];
    bb61__0_329 -> bb64__0_329 [label="return"];
    bb61__0_329 -> bb1092__0_329 [label="unwind"];
    bb62__0_329 -> bb63__0_329 [label="return"];
    bb62__0_329 -> bb1093__0_329 [label="unwind"];
    bb63__0_329 -> bb1002__0_329 [label=""];
    bb64__0_329 -> bb65__0_329 [label="return"];
    bb64__0_329 -> bb1092__0_329 [label="unwind"];
    bb65__0_329 -> bb67__0_329 [label="0"];
    bb65__0_329 -> bb66__0_329 [label="otherwise"];
    bb66__0_329 -> bb68__0_329 [label="return"];
    bb66__0_329 -> bb1092__0_329 [label="unwind"];
    bb67__0_329 -> bb80__0_329 [label=""];
    bb68__0_329 -> bb69__0_329 [label="return"];
    bb68__0_329 -> bb1092__0_329 [label="unwind"];
    bb69__0_329 -> bb70__0_329 [label="return"];
    bb69__0_329 -> bb1092__0_329 [label="unwind"];
    bb70__0_329 -> bb71__0_329 [label="return"];
    bb70__0_329 -> bb1041__0_329 [label="unwind"];
    bb71__0_329 -> bb72__0_329 [label="return"];
    bb71__0_329 -> bb1041__0_329 [label="unwind"];
    bb72__0_329 -> bb73__0_329 [label="return"];
    bb72__0_329 -> bb1092__0_329 [label="unwind"];
    bb73__0_329 -> bb74__0_329 [label="return"];
    bb73__0_329 -> bb1092__0_329 [label="unwind"];
    bb74__0_329 -> bb75__0_329 [label="return"];
    bb74__0_329 -> bb1092__0_329 [label="unwind"];
    bb75__0_329 -> bb76__0_329 [label="return"];
    bb75__0_329 -> bb1092__0_329 [label="unwind"];
    bb76__0_329 -> bb77__0_329 [label="return"];
    bb76__0_329 -> bb1040__0_329 [label="unwind"];
    bb77__0_329 -> bb78__0_329 [label="return"];
    bb77__0_329 -> bb1040__0_329 [label="unwind"];
    bb78__0_329 -> bb79__0_329 [label="return"];
    bb78__0_329 -> bb1092__0_329 [label="unwind"];
    bb79__0_329 -> bb80__0_329 [label=""];
    bb80__0_329 -> bb81__0_329 [label="return"];
    bb80__0_329 -> bb1092__0_329 [label="unwind"];
    bb81__0_329 -> bb82__0_329 [label="0"];
    bb81__0_329 -> bb83__0_329 [label="1"];
    bb81__0_329 -> bb18__0_329 [label="otherwise"];
    bb82__0_329 -> bb85__0_329 [label="return"];
    bb82__0_329 -> bb1092__0_329 [label="unwind"];
    bb83__0_329 -> bb84__0_329 [label="return"];
    bb83__0_329 -> bb1092__0_329 [label="unwind"];
    bb84__0_329 -> bb1068__0_329 [label=""];
    bb85__0_329 -> bb86__0_329 [label="return"];
    bb85__0_329 -> bb1092__0_329 [label="unwind"];
    bb86__0_329 -> bb87__0_329 [label="return"];
    bb86__0_329 -> bb1092__0_329 [label="unwind"];
    bb87__0_329 -> bb88__0_329 [label="0"];
    bb87__0_329 -> bb89__0_329 [label="1"];
    bb87__0_329 -> bb18__0_329 [label="otherwise"];
    bb88__0_329 -> bb91__0_329 [label="return"];
    bb88__0_329 -> bb1039__0_329 [label="unwind"];
    bb89__0_329 -> bb90__0_329 [label="return"];
    bb89__0_329 -> bb1090__0_329 [label="unwind"];
    bb90__0_329 -> bb1066__0_329 [label=""];
    bb91__0_329 -> bb92__0_329 [label="return"];
    bb91__0_329 -> bb1039__0_329 [label="unwind"];
    bb92__0_329 -> bb93__0_329 [label="return"];
    bb92__0_329 -> bb1039__0_329 [label="unwind"];
    bb93__0_329 -> bb94__0_329 [label="0"];
    bb93__0_329 -> bb95__0_329 [label="1"];
    bb93__0_329 -> bb18__0_329 [label="otherwise"];
    bb94__0_329 -> bb1049__0_329 [label="return"];
    bb94__0_329 -> bb1090__0_329 [label="unwind"];
    bb95__0_329 -> bb96__0_329 [label="return"];
    bb95__0_329 -> bb1039__0_329 [label="unwind"];
    bb96__0_329 -> bb1066__0_329 [label="return"];
    bb96__0_329 -> bb1090__0_329 [label="unwind"];
    bb97__0_329 -> bb98__0_329 [label="return"];
    bb97__0_329 -> bb1092__0_329 [label="unwind"];
    bb98__0_329 -> bb99__0_329 [label="0"];
    bb98__0_329 -> bb100__0_329 [label="1"];
    bb98__0_329 -> bb18__0_329 [label="otherwise"];
    bb99__0_329 -> bb102__0_329 [label="return"];
    bb99__0_329 -> bb1038__0_329 [label="unwind"];
    bb100__0_329 -> bb101__0_329 [label="return"];
    bb100__0_329 -> bb1089__0_329 [label="unwind"];
    bb101__0_329 -> bb1065__0_329 [label=""];
    bb102__0_329 -> bb103__0_329 [label="return"];
    bb102__0_329 -> bb1038__0_329 [label="unwind"];
    bb103__0_329 -> bb104__0_329 [label="return"];
    bb103__0_329 -> bb1038__0_329 [label="unwind"];
    bb104__0_329 -> bb105__0_329 [label="0"];
    bb104__0_329 -> bb106__0_329 [label="1"];
    bb104__0_329 -> bb18__0_329 [label="otherwise"];
    bb105__0_329 -> bb1050__0_329 [label="return"];
    bb105__0_329 -> bb1089__0_329 [label="unwind"];
    bb106__0_329 -> bb107__0_329 [label="return"];
    bb106__0_329 -> bb1038__0_329 [label="unwind"];
    bb107__0_329 -> bb1065__0_329 [label="return"];
    bb107__0_329 -> bb1089__0_329 [label="unwind"];
    bb108__0_329 -> bb109__0_329 [label="return"];
    bb108__0_329 -> bb1092__0_329 [label="unwind"];
    bb109__0_329 -> bb110__0_329 [label="return"];
    bb109__0_329 -> bb1092__0_329 [label="unwind"];
    bb110__0_329 -> bb111__0_329 [label="return"];
    bb110__0_329 -> bb1092__0_329 [label="unwind"];
    bb111__0_329 -> bb112__0_329 [label="0"];
    bb111__0_329 -> bb113__0_329 [label="1"];
    bb111__0_329 -> bb18__0_329 [label="otherwise"];
    bb112__0_329 -> bb115__0_329 [label="return"];
    bb112__0_329 -> bb1092__0_329 [label="unwind"];
    bb113__0_329 -> bb114__0_329 [label="return"];
    bb113__0_329 -> bb1092__0_329 [label="unwind"];
    bb114__0_329 -> bb1000__0_329 [label=""];
    bb115__0_329 -> bb116__0_329 [label="return"];
    bb115__0_329 -> bb1092__0_329 [label="unwind"];
    bb116__0_329 -> bb117__0_329 [label="0"];
    bb116__0_329 -> bb118__0_329 [label="1"];
    bb116__0_329 -> bb18__0_329 [label="otherwise"];
    bb117__0_329 -> bb120__0_329 [label="return"];
    bb117__0_329 -> bb1092__0_329 [label="unwind"];
    bb118__0_329 -> bb119__0_329 [label="return"];
    bb118__0_329 -> bb1092__0_329 [label="unwind"];
    bb119__0_329 -> bb1000__0_329 [label=""];
    bb120__0_329 -> bb122__0_329 [label="0"];
    bb120__0_329 -> bb121__0_329 [label="otherwise"];
    bb121__0_329 -> bb132__0_329 [label=""];
    bb122__0_329 -> bb123__0_329 [label="return"];
    bb122__0_329 -> bb1092__0_329 [label="unwind"];
    bb123__0_329 -> bb131__0_329 [label="0"];
    bb123__0_329 -> bb124__0_329 [label="otherwise"];
    bb124__0_329 -> bb125__0_329 [label="return"];
    bb124__0_329 -> bb1092__0_329 [label="unwind"];
    bb125__0_329 -> bb126__0_329 [label="return"];
    bb125__0_329 -> bb1092__0_329 [label="unwind"];
    bb126__0_329 -> bb127__0_329 [label="return"];
    bb126__0_329 -> bb1092__0_329 [label="unwind"];
    bb127__0_329 -> bb128__0_329 [label="return"];
    bb127__0_329 -> bb1037__0_329 [label="unwind"];
    bb128__0_329 -> bb129__0_329 [label="return"];
    bb128__0_329 -> bb1037__0_329 [label="unwind"];
    bb129__0_329 -> bb130__0_329 [label="return"];
    bb129__0_329 -> bb1092__0_329 [label="unwind"];
    bb130__0_329 -> bb999__0_329 [label=""];
    bb131__0_329 -> bb132__0_329 [label=""];
    bb132__0_329 -> bb133__0_329 [label="return"];
    bb132__0_329 -> bb1092__0_329 [label="unwind"];
    bb133__0_329 -> bb143__0_329 [label="0"];
    bb133__0_329 -> bb134__0_329 [label="otherwise"];
    bb134__0_329 -> bb135__0_329 [label="return"];
    bb134__0_329 -> bb1092__0_329 [label="unwind"];
    bb135__0_329 -> bb136__0_329 [label="return"];
    bb135__0_329 -> bb1092__0_329 [label="unwind"];
    bb136__0_329 -> bb137__0_329 [label="0"];
    bb136__0_329 -> bb138__0_329 [label="1"];
    bb136__0_329 -> bb18__0_329 [label="otherwise"];
    bb137__0_329 -> bb141__0_329 [label="0"];
    bb137__0_329 -> bb140__0_329 [label="otherwise"];
    bb138__0_329 -> bb139__0_329 [label="return"];
    bb138__0_329 -> bb1092__0_329 [label="unwind"];
    bb139__0_329 -> bb998__0_329 [label=""];
    bb140__0_329 -> bb142__0_329 [label="return"];
    bb140__0_329 -> bb1092__0_329 [label="unwind"];
    bb141__0_329 -> bb144__0_329 [label=""];
    bb142__0_329 -> bb998__0_329 [label=""];
    bb143__0_329 -> bb144__0_329 [label=""];
    bb144__0_329 -> bb145__0_329 [label="return"];
    bb144__0_329 -> bb1092__0_329 [label="unwind"];
    bb145__0_329 -> bb146__0_329 [label="return"];
    bb145__0_329 -> bb1092__0_329 [label="unwind"];
    bb146__0_329 -> bb147__0_329 [label="return"];
    bb146__0_329 -> bb1092__0_329 [label="unwind"];
    bb147__0_329 -> bb148__0_329 [label="0"];
    bb147__0_329 -> bb149__0_329 [label="1"];
    bb147__0_329 -> bb18__0_329 [label="otherwise"];
    bb148__0_329 -> bb151__0_329 [label="return"];
    bb148__0_329 -> bb1092__0_329 [label="unwind"];
    bb149__0_329 -> bb150__0_329 [label="return"];
    bb149__0_329 -> bb1092__0_329 [label="unwind"];
    bb150__0_329 -> bb1001__0_329 [label=""];
    bb151__0_329 -> bb152__0_329 [label="return"];
    bb151__0_329 -> bb1092__0_329 [label="unwind"];
    bb152__0_329 -> bb153__0_329 [label="return"];
    bb152__0_329 -> bb1092__0_329 [label="unwind"];
    bb153__0_329 -> bb154__0_329 [label="0"];
    bb153__0_329 -> bb155__0_329 [label="1"];
    bb153__0_329 -> bb18__0_329 [label="otherwise"];
    bb154__0_329 -> bb157__0_329 [label="return"];
    bb154__0_329 -> bb1092__0_329 [label="unwind"];
    bb155__0_329 -> bb156__0_329 [label="return"];
    bb155__0_329 -> bb1092__0_329 [label="unwind"];
    bb156__0_329 -> bb1001__0_329 [label=""];
    bb157__0_329 -> bb158__0_329 [label="return"];
    bb157__0_329 -> bb1092__0_329 [label="unwind"];
    bb158__0_329 -> bb159__0_329 [label="0"];
    bb158__0_329 -> bb160__0_329 [label="1"];
    bb158__0_329 -> bb18__0_329 [label="otherwise"];
    bb159__0_329 -> bb162__0_329 [label="return"];
    bb159__0_329 -> bb1092__0_329 [label="unwind"];
    bb160__0_329 -> bb161__0_329 [label="return"];
    bb160__0_329 -> bb1092__0_329 [label="unwind"];
    bb161__0_329 -> bb997__0_329 [label=""];
    bb162__0_329 -> bb163__0_329 [label="return"];
    bb162__0_329 -> bb1092__0_329 [label="unwind"];
    bb163__0_329 -> bb164__0_329 [label="0"];
    bb163__0_329 -> bb165__0_329 [label="1"];
    bb163__0_329 -> bb18__0_329 [label="otherwise"];
    bb164__0_329 -> bb167__0_329 [label="success"];
    bb164__0_329 -> bb1092__0_329 [label="unwind"];
    bb165__0_329 -> bb166__0_329 [label="return"];
    bb165__0_329 -> bb1092__0_329 [label="unwind"];
    bb166__0_329 -> bb996__0_329 [label=""];
    bb167__0_329 -> bb168__0_329 [label="return"];
    bb167__0_329 -> bb1092__0_329 [label="unwind"];
    bb168__0_329 -> bb170__0_329 [label="0"];
    bb168__0_329 -> bb169__0_329 [label="otherwise"];
    bb169__0_329 -> bb173__0_329 [label=""];
    bb170__0_329 -> bb171__0_329 [label="success"];
    bb170__0_329 -> bb1092__0_329 [label="unwind"];
    bb171__0_329 -> bb172__0_329 [label="return"];
    bb171__0_329 -> bb1092__0_329 [label="unwind"];
    bb172__0_329 -> bb174__0_329 [label="0"];
    bb172__0_329 -> bb173__0_329 [label="otherwise"];
    bb173__0_329 -> bb181__0_329 [label=""];
    bb174__0_329 -> bb175__0_329 [label="return"];
    bb174__0_329 -> bb1092__0_329 [label="unwind"];
    bb175__0_329 -> bb176__0_329 [label="return"];
    bb175__0_329 -> bb1092__0_329 [label="unwind"];
    bb176__0_329 -> bb177__0_329 [label="return"];
    bb176__0_329 -> bb1092__0_329 [label="unwind"];
    bb177__0_329 -> bb178__0_329 [label="return"];
    bb177__0_329 -> bb1036__0_329 [label="unwind"];
    bb178__0_329 -> bb179__0_329 [label="return"];
    bb178__0_329 -> bb1036__0_329 [label="unwind"];
    bb179__0_329 -> bb180__0_329 [label="return"];
    bb179__0_329 -> bb1092__0_329 [label="unwind"];
    bb180__0_329 -> bb181__0_329 [label=""];
    bb181__0_329 -> bb182__0_329 [label="return"];
    bb181__0_329 -> bb1092__0_329 [label="unwind"];
    bb182__0_329 -> bb183__0_329 [label="0"];
    bb182__0_329 -> bb184__0_329 [label="1"];
    bb182__0_329 -> bb18__0_329 [label="otherwise"];
    bb183__0_329 -> bb186__0_329 [label="return"];
    bb183__0_329 -> bb1092__0_329 [label="unwind"];
    bb184__0_329 -> bb185__0_329 [label="return"];
    bb184__0_329 -> bb1092__0_329 [label="unwind"];
    bb185__0_329 -> bb996__0_329 [label=""];
    bb186__0_329 -> bb187__0_329 [label="return"];
    bb186__0_329 -> bb1092__0_329 [label="unwind"];
    bb187__0_329 -> bb188__0_329 [label="0"];
    bb187__0_329 -> bb189__0_329 [label="1"];
    bb187__0_329 -> bb18__0_329 [label="otherwise"];
    bb188__0_329 -> bb191__0_329 [label="return"];
    bb188__0_329 -> bb1087__0_329 [label="unwind"];
    bb189__0_329 -> bb190__0_329 [label="return"];
    bb189__0_329 -> bb1088__0_329 [label="unwind"];
    bb190__0_329 -> bb995__0_329 [label=""];
    bb191__0_329 -> bb192__0_329 [label="return"];
    bb191__0_329 -> bb1087__0_329 [label="unwind"];
    bb192__0_329 -> bb193__0_329 [label="0"];
    bb192__0_329 -> bb194__0_329 [label="1"];
    bb192__0_329 -> bb18__0_329 [label="otherwise"];
    bb193__0_329 -> bb196__0_329 [label="return"];
    bb193__0_329 -> bb1084__0_329 [label="unwind"];
    bb194__0_329 -> bb195__0_329 [label="return"];
    bb194__0_329 -> bb1085__0_329 [label="unwind"];
    bb195__0_329 -> bb994__0_329 [label=""];
    bb196__0_329 -> bb197__0_329 [label="return"];
    bb196__0_329 -> bb1084__0_329 [label="unwind"];
    bb197__0_329 -> bb198__0_329 [label="return"];
    bb197__0_329 -> bb1084__0_329 [label="unwind"];
    bb198__0_329 -> bb199__0_329 [label="return"];
    bb198__0_329 -> bb1084__0_329 [label="unwind"];
    bb199__0_329 -> bb200__0_329 [label="0"];
    bb199__0_329 -> bb201__0_329 [label="1"];
    bb199__0_329 -> bb18__0_329 [label="otherwise"];
    bb200__0_329 -> bb203__0_329 [label="return"];
    bb200__0_329 -> bb1084__0_329 [label="unwind"];
    bb201__0_329 -> bb202__0_329 [label="return"];
    bb201__0_329 -> bb1084__0_329 [label="unwind"];
    bb202__0_329 -> bb993__0_329 [label=""];
    bb203__0_329 -> bb204__0_329 [label="return"];
    bb203__0_329 -> bb1084__0_329 [label="unwind"];
    bb204__0_329 -> bb205__0_329 [label="return"];
    bb204__0_329 -> bb1084__0_329 [label="unwind"];
    bb205__0_329 -> bb206__0_329 [label="0"];
    bb205__0_329 -> bb207__0_329 [label="1"];
    bb205__0_329 -> bb18__0_329 [label="otherwise"];
    bb206__0_329 -> bb209__0_329 [label="return"];
    bb206__0_329 -> bb1084__0_329 [label="unwind"];
    bb207__0_329 -> bb208__0_329 [label="return"];
    bb207__0_329 -> bb1084__0_329 [label="unwind"];
    bb208__0_329 -> bb992__0_329 [label=""];
    bb209__0_329 -> bb210__0_329 [label="return"];
    bb209__0_329 -> bb1084__0_329 [label="unwind"];
    bb210__0_329 -> bb211__0_329 [label="return"];
    bb210__0_329 -> bb1084__0_329 [label="unwind"];
    bb211__0_329 -> bb212__0_329 [label="0"];
    bb211__0_329 -> bb213__0_329 [label="1"];
    bb211__0_329 -> bb18__0_329 [label="otherwise"];
    bb212__0_329 -> bb215__0_329 [label="return"];
    bb212__0_329 -> bb1084__0_329 [label="unwind"];
    bb213__0_329 -> bb214__0_329 [label="return"];
    bb213__0_329 -> bb1084__0_329 [label="unwind"];
    bb214__0_329 -> bb992__0_329 [label=""];
    bb215__0_329 -> bb216__0_329 [label="return"];
    bb215__0_329 -> bb1084__0_329 [label="unwind"];
    bb216__0_329 -> bb219__0_329 [label="0"];
    bb216__0_329 -> bb217__0_329 [label="otherwise"];
    bb217__0_329 -> bb218__0_329 [label="return"];
    bb217__0_329 -> bb1084__0_329 [label="unwind"];
    bb218__0_329 -> bb220__0_329 [label=""];
    bb219__0_329 -> bb220__0_329 [label=""];
    bb220__0_329 -> bb221__0_329 [label="return"];
    bb220__0_329 -> bb1084__0_329 [label="unwind"];
    bb221__0_329 -> bb222__0_329 [label="return"];
    bb221__0_329 -> bb1084__0_329 [label="unwind"];
    bb222__0_329 -> bb224__0_329 [label="0"];
    bb222__0_329 -> bb223__0_329 [label="otherwise"];
    bb223__0_329 -> bb226__0_329 [label="0"];
    bb223__0_329 -> bb225__0_329 [label="otherwise"];
    bb224__0_329 -> bb225__0_329 [label=""];
    bb225__0_329 -> bb227__0_329 [label="return"];
    bb225__0_329 -> bb1084__0_329 [label="unwind"];
    bb226__0_329 -> bb277__0_329 [label=""];
    bb227__0_329 -> bb228__0_329 [label="return"];
    bb227__0_329 -> bb1084__0_329 [label="unwind"];
    bb228__0_329 -> bb229__0_329 [label="return"];
    bb228__0_329 -> bb1084__0_329 [label="unwind"];
    bb229__0_329 -> bb230__0_329 [label="return"];
    bb229__0_329 -> bb1084__0_329 [label="unwind"];
    bb230__0_329 -> bb231__0_329 [label="0"];
    bb230__0_329 -> bb232__0_329 [label="1"];
    bb230__0_329 -> bb18__0_329 [label="otherwise"];
    bb231__0_329 -> bb234__0_329 [label="return"];
    bb231__0_329 -> bb1084__0_329 [label="unwind"];
    bb232__0_329 -> bb233__0_329 [label="return"];
    bb232__0_329 -> bb1084__0_329 [label="unwind"];
    bb233__0_329 -> bb989__0_329 [label=""];
    bb234__0_329 -> bb235__0_329 [label="return"];
    bb234__0_329 -> bb1084__0_329 [label="unwind"];
    bb235__0_329 -> bb236__0_329 [label="0"];
    bb235__0_329 -> bb237__0_329 [label="1"];
    bb235__0_329 -> bb18__0_329 [label="otherwise"];
    bb236__0_329 -> bb239__0_329 [label="return"];
    bb236__0_329 -> bb1084__0_329 [label="unwind"];
    bb237__0_329 -> bb238__0_329 [label="return"];
    bb237__0_329 -> bb1084__0_329 [label="unwind"];
    bb238__0_329 -> bb989__0_329 [label=""];
    bb239__0_329 -> bb240__0_329 [label="return"];
    bb239__0_329 -> bb1084__0_329 [label="unwind"];
    bb240__0_329 -> bb241__0_329 [label="0"];
    bb240__0_329 -> bb242__0_329 [label="1"];
    bb240__0_329 -> bb18__0_329 [label="otherwise"];
    bb241__0_329 -> bb244__0_329 [label="return"];
    bb241__0_329 -> bb1084__0_329 [label="unwind"];
    bb242__0_329 -> bb243__0_329 [label="return"];
    bb242__0_329 -> bb1084__0_329 [label="unwind"];
    bb243__0_329 -> bb988__0_329 [label=""];
    bb244__0_329 -> bb245__0_329 [label="return"];
    bb244__0_329 -> bb1084__0_329 [label="unwind"];
    bb245__0_329 -> bb246__0_329 [label="0"];
    bb245__0_329 -> bb247__0_329 [label="1"];
    bb245__0_329 -> bb18__0_329 [label="otherwise"];
    bb246__0_329 -> bb249__0_329 [label="return"];
    bb246__0_329 -> bb1084__0_329 [label="unwind"];
    bb247__0_329 -> bb248__0_329 [label="return"];
    bb247__0_329 -> bb1084__0_329 [label="unwind"];
    bb248__0_329 -> bb987__0_329 [label=""];
    bb249__0_329 -> bb250__0_329 [label="return"];
    bb249__0_329 -> bb1084__0_329 [label="unwind"];
    bb250__0_329 -> bb251__0_329 [label="return"];
    bb250__0_329 -> bb1084__0_329 [label="unwind"];
    bb251__0_329 -> bb252__0_329 [label="0"];
    bb251__0_329 -> bb253__0_329 [label="1"];
    bb251__0_329 -> bb18__0_329 [label="otherwise"];
    bb252__0_329 -> bb255__0_329 [label="return"];
    bb252__0_329 -> bb1084__0_329 [label="unwind"];
    bb253__0_329 -> bb254__0_329 [label="return"];
    bb253__0_329 -> bb1084__0_329 [label="unwind"];
    bb254__0_329 -> bb987__0_329 [label=""];
    bb255__0_329 -> bb256__0_329 [label="return"];
    bb255__0_329 -> bb1084__0_329 [label="unwind"];
    bb256__0_329 -> bb257__0_329 [label="0"];
    bb256__0_329 -> bb258__0_329 [label="1"];
    bb256__0_329 -> bb18__0_329 [label="otherwise"];
    bb257__0_329 -> bb260__0_329 [label="return"];
    bb257__0_329 -> bb1084__0_329 [label="unwind"];
    bb258__0_329 -> bb259__0_329 [label="return"];
    bb258__0_329 -> bb1084__0_329 [label="unwind"];
    bb259__0_329 -> bb987__0_329 [label=""];
    bb260__0_329 -> bb261__0_329 [label="return"];
    bb260__0_329 -> bb1084__0_329 [label="unwind"];
    bb261__0_329 -> bb262__0_329 [label="0"];
    bb261__0_329 -> bb263__0_329 [label="1"];
    bb261__0_329 -> bb18__0_329 [label="otherwise"];
    bb262__0_329 -> bb266__0_329 [label="0"];
    bb262__0_329 -> bb265__0_329 [label="otherwise"];
    bb263__0_329 -> bb264__0_329 [label="return"];
    bb263__0_329 -> bb1084__0_329 [label="unwind"];
    bb264__0_329 -> bb986__0_329 [label=""];
    bb265__0_329 -> bb267__0_329 [label="return"];
    bb265__0_329 -> bb1084__0_329 [label="unwind"];
    bb266__0_329 -> bb277__0_329 [label=""];
    bb267__0_329 -> bb268__0_329 [label="return"];
    bb267__0_329 -> bb1035__0_329 [label="unwind"];
    bb268__0_329 -> bb269__0_329 [label="return"];
    bb268__0_329 -> bb1035__0_329 [label="unwind"];
    bb269__0_329 -> bb270__0_329 [label="return"];
    bb269__0_329 -> bb1033__0_329 [label="unwind"];
    bb270__0_329 -> bb271__0_329 [label="return"];
    bb270__0_329 -> bb1032__0_329 [label="unwind"];
    bb271__0_329 -> bb272__0_329 [label="return"];
    bb271__0_329 -> bb1032__0_329 [label="unwind"];
    bb272__0_329 -> bb273__0_329 [label="return"];
    bb272__0_329 -> bb1033__0_329 [label="unwind"];
    bb273__0_329 -> bb274__0_329 [label="return"];
    bb273__0_329 -> bb1034__0_329 [label="unwind"];
    bb274__0_329 -> bb275__0_329 [label="return"];
    bb274__0_329 -> bb1084__0_329 [label="unwind"];
    bb275__0_329 -> bb276__0_329 [label="return"];
    bb275__0_329 -> bb1084__0_329 [label="unwind"];
    bb276__0_329 -> bb986__0_329 [label=""];
    bb277__0_329 -> bb278__0_329 [label="success"];
    bb277__0_329 -> bb1084__0_329 [label="unwind"];
    bb278__0_329 -> bb281__0_329 [label="0"];
    bb278__0_329 -> bb279__0_329 [label="otherwise"];
    bb279__0_329 -> bb280__0_329 [label="return"];
    bb279__0_329 -> bb1084__0_329 [label="unwind"];
    bb280__0_329 -> bb991__0_329 [label=""];
    bb281__0_329 -> bb282__0_329 [label="return"];
    bb281__0_329 -> bb1084__0_329 [label="unwind"];
    bb282__0_329 -> bb283__0_329 [label="return"];
    bb282__0_329 -> bb1084__0_329 [label="unwind"];
    bb283__0_329 -> bb284__0_329 [label="0"];
    bb283__0_329 -> bb285__0_329 [label="1"];
    bb283__0_329 -> bb18__0_329 [label="otherwise"];
    bb284__0_329 -> bb287__0_329 [label="return"];
    bb284__0_329 -> bb1031__0_329 [label="unwind"];
    bb285__0_329 -> bb286__0_329 [label="return"];
    bb285__0_329 -> bb1082__0_329 [label="unwind"];
    bb286__0_329 -> bb1062__0_329 [label=""];
    bb287__0_329 -> bb288__0_329 [label="return"];
    bb287__0_329 -> bb1031__0_329 [label="unwind"];
    bb288__0_329 -> bb289__0_329 [label="return"];
    bb288__0_329 -> bb1031__0_329 [label="unwind"];
    bb289__0_329 -> bb290__0_329 [label="0"];
    bb289__0_329 -> bb291__0_329 [label="1"];
    bb289__0_329 -> bb18__0_329 [label="otherwise"];
    bb290__0_329 -> bb1051__0_329 [label="return"];
    bb290__0_329 -> bb1082__0_329 [label="unwind"];
    bb291__0_329 -> bb292__0_329 [label="return"];
    bb291__0_329 -> bb1031__0_329 [label="unwind"];
    bb292__0_329 -> bb1062__0_329 [label="return"];
    bb292__0_329 -> bb1082__0_329 [label="unwind"];
    bb293__0_329 -> bb306__0_329 [label=""];
    bb294__0_329 -> bb295__0_329 [label="return"];
    bb294__0_329 -> bb1084__0_329 [label="unwind"];
    bb295__0_329 -> bb296__0_329 [label="return"];
    bb295__0_329 -> bb1084__0_329 [label="unwind"];
    bb296__0_329 -> bb297__0_329 [label="return"];
    bb296__0_329 -> bb1084__0_329 [label="unwind"];
    bb297__0_329 -> bb298__0_329 [label="return"];
    bb297__0_329 -> bb1030__0_329 [label="unwind"];
    bb298__0_329 -> bb299__0_329 [label="return"];
    bb298__0_329 -> bb1030__0_329 [label="unwind"];
    bb299__0_329 -> bb300__0_329 [label="return"];
    bb299__0_329 -> bb1084__0_329 [label="unwind"];
    bb300__0_329 -> bb301__0_329 [label="return"];
    bb300__0_329 -> bb1084__0_329 [label="unwind"];
    bb301__0_329 -> bb302__0_329 [label="return"];
    bb301__0_329 -> bb1084__0_329 [label="unwind"];
    bb302__0_329 -> bb303__0_329 [label="return"];
    bb302__0_329 -> bb1029__0_329 [label="unwind"];
    bb303__0_329 -> bb304__0_329 [label="return"];
    bb303__0_329 -> bb1029__0_329 [label="unwind"];
    bb304__0_329 -> bb305__0_329 [label="return"];
    bb304__0_329 -> bb1084__0_329 [label="unwind"];
    bb305__0_329 -> bb306__0_329 [label=""];
    bb306__0_329 -> bb307__0_329 [label="return"];
    bb306__0_329 -> bb1084__0_329 [label="unwind"];
    bb307__0_329 -> bb308__0_329 [label="0"];
    bb307__0_329 -> bb309__0_329 [label="1"];
    bb307__0_329 -> bb18__0_329 [label="otherwise"];
    bb308__0_329 -> bb311__0_329 [label="return"];
    bb308__0_329 -> bb1084__0_329 [label="unwind"];
    bb309__0_329 -> bb310__0_329 [label="return"];
    bb309__0_329 -> bb1084__0_329 [label="unwind"];
    bb310__0_329 -> bb985__0_329 [label=""];
    bb311__0_329 -> bb312__0_329 [label="return"];
    bb311__0_329 -> bb1084__0_329 [label="unwind"];
    bb312__0_329 -> bb313__0_329 [label="0"];
    bb312__0_329 -> bb314__0_329 [label="1"];
    bb312__0_329 -> bb18__0_329 [label="otherwise"];
    bb313__0_329 -> bb316__0_329 [label="return"];
    bb313__0_329 -> bb1028__0_329 [label="unwind"];
    bb314__0_329 -> bb315__0_329 [label="return"];
    bb314__0_329 -> bb1081__0_329 [label="unwind"];
    bb315__0_329 -> bb984__0_329 [label=""];
    bb316__0_329 -> bb317__0_329 [label="return"];
    bb316__0_329 -> bb1028__0_329 [label="unwind"];
    bb317__0_329 -> bb344__0_329 [label="0"];
    bb317__0_329 -> bb318__0_329 [label="otherwise"];
    bb318__0_329 -> bb319__0_329 [label="return"];
    bb318__0_329 -> bb1028__0_329 [label="unwind"];
    bb319__0_329 -> bb320__0_329 [label="return"];
    bb319__0_329 -> bb1028__0_329 [label="unwind"];
    bb320__0_329 -> bb321__0_329 [label="return"];
    bb320__0_329 -> bb1028__0_329 [label="unwind"];
    bb321__0_329 -> bb322__0_329 [label="return"];
    bb321__0_329 -> bb1028__0_329 [label="unwind"];
    bb322__0_329 -> bb323__0_329 [label="0"];
    bb322__0_329 -> bb324__0_329 [label="1"];
    bb322__0_329 -> bb18__0_329 [label="otherwise"];
    bb323__0_329 -> bb326__0_329 [label="return"];
    bb323__0_329 -> bb1028__0_329 [label="unwind"];
    bb324__0_329 -> bb325__0_329 [label="return"];
    bb324__0_329 -> bb1028__0_329 [label="unwind"];
    bb325__0_329 -> bb982__0_329 [label=""];
    bb326__0_329 -> bb327__0_329 [label="return"];
    bb326__0_329 -> bb1028__0_329 [label="unwind"];
    bb327__0_329 -> bb328__0_329 [label="0"];
    bb327__0_329 -> bb329__0_329 [label="1"];
    bb327__0_329 -> bb18__0_329 [label="otherwise"];
    bb328__0_329 -> bb332__0_329 [label="0"];
    bb328__0_329 -> bb331__0_329 [label="otherwise"];
    bb329__0_329 -> bb330__0_329 [label="return"];
    bb329__0_329 -> bb1028__0_329 [label="unwind"];
    bb330__0_329 -> bb982__0_329 [label=""];
    bb331__0_329 -> bb333__0_329 [label="return"];
    bb331__0_329 -> bb1028__0_329 [label="unwind"];
    bb332__0_329 -> bb339__0_329 [label=""];
    bb333__0_329 -> bb334__0_329 [label="return"];
    bb333__0_329 -> bb1028__0_329 [label="unwind"];
    bb334__0_329 -> bb335__0_329 [label="return"];
    bb334__0_329 -> bb1028__0_329 [label="unwind"];
    bb335__0_329 -> bb336__0_329 [label="return"];
    bb335__0_329 -> bb1027__0_329 [label="unwind"];
    bb336__0_329 -> bb337__0_329 [label="return"];
    bb336__0_329 -> bb1027__0_329 [label="unwind"];
    bb337__0_329 -> bb338__0_329 [label="return"];
    bb337__0_329 -> bb1028__0_329 [label="unwind"];
    bb338__0_329 -> bb339__0_329 [label=""];
    bb339__0_329 -> bb340__0_329 [label="return"];
    bb339__0_329 -> bb1028__0_329 [label="unwind"];
    bb340__0_329 -> bb341__0_329 [label="0"];
    bb340__0_329 -> bb342__0_329 [label="1"];
    bb340__0_329 -> bb18__0_329 [label="otherwise"];
    bb341__0_329 -> bb345__0_329 [label=""];
    bb342__0_329 -> bb343__0_329 [label="return"];
    bb342__0_329 -> bb1028__0_329 [label="unwind"];
    bb343__0_329 -> bb983__0_329 [label=""];
    bb344__0_329 -> bb345__0_329 [label=""];
    bb345__0_329 -> bb346__0_329 [label="return"];
    bb345__0_329 -> bb1084__0_329 [label="unwind"];
    bb346__0_329 -> bb347__0_329 [label="success"];
    bb346__0_329 -> bb1084__0_329 [label="unwind"];
    bb347__0_329 -> bb348__0_329 [label="return"];
    bb347__0_329 -> bb1084__0_329 [label="unwind"];
    bb348__0_329 -> bb349__0_329 [label="return"];
    bb348__0_329 -> bb1084__0_329 [label="unwind"];
    bb349__0_329 -> bb350__0_329 [label="return"];
    bb349__0_329 -> bb1084__0_329 [label="unwind"];
    bb350__0_329 -> bb351__0_329 [label="0"];
    bb350__0_329 -> bb352__0_329 [label="1"];
    bb350__0_329 -> bb18__0_329 [label="otherwise"];
    bb351__0_329 -> bb354__0_329 [label="return"];
    bb351__0_329 -> bb1026__0_329 [label="unwind"];
    bb352__0_329 -> bb353__0_329 [label="return"];
    bb352__0_329 -> bb1080__0_329 [label="unwind"];
    bb353__0_329 -> bb1061__0_329 [label=""];
    bb354__0_329 -> bb355__0_329 [label="return"];
    bb354__0_329 -> bb1026__0_329 [label="unwind"];
    bb355__0_329 -> bb356__0_329 [label="return"];
    bb355__0_329 -> bb1026__0_329 [label="unwind"];
    bb356__0_329 -> bb357__0_329 [label="0"];
    bb356__0_329 -> bb358__0_329 [label="1"];
    bb356__0_329 -> bb18__0_329 [label="otherwise"];
    bb357__0_329 -> bb360__0_329 [label="return"];
    bb357__0_329 -> bb1026__0_329 [label="unwind"];
    bb358__0_329 -> bb359__0_329 [label="return"];
    bb358__0_329 -> bb1026__0_329 [label="unwind"];
    bb359__0_329 -> bb980__0_329 [label=""];
    bb360__0_329 -> bb361__0_329 [label="return"];
    bb360__0_329 -> bb1026__0_329 [label="unwind"];
    bb361__0_329 -> bb362__0_329 [label="return"];
    bb361__0_329 -> bb1026__0_329 [label="unwind"];
    bb362__0_329 -> bb363__0_329 [label="0"];
    bb362__0_329 -> bb364__0_329 [label="1"];
    bb362__0_329 -> bb18__0_329 [label="otherwise"];
    bb363__0_329 -> bb1052__0_329 [label="return"];
    bb363__0_329 -> bb1080__0_329 [label="unwind"];
    bb364__0_329 -> bb365__0_329 [label="return"];
    bb364__0_329 -> bb1026__0_329 [label="unwind"];
    bb365__0_329 -> bb980__0_329 [label=""];
    bb366__0_329 -> bb367__0_329 [label="return"];
    bb366__0_329 -> bb1084__0_329 [label="unwind"];
    bb367__0_329 -> bb368__0_329 [label="0"];
    bb367__0_329 -> bb369__0_329 [label="1"];
    bb367__0_329 -> bb18__0_329 [label="otherwise"];
    bb368__0_329 -> bb371__0_329 [label="return"];
    bb368__0_329 -> bb1084__0_329 [label="unwind"];
    bb369__0_329 -> bb370__0_329 [label="return"];
    bb369__0_329 -> bb1084__0_329 [label="unwind"];
    bb370__0_329 -> bb979__0_329 [label=""];
    bb371__0_329 -> bb372__0_329 [label="return"];
    bb371__0_329 -> bb1084__0_329 [label="unwind"];
    bb372__0_329 -> bb373__0_329 [label="0"];
    bb372__0_329 -> bb374__0_329 [label="1"];
    bb372__0_329 -> bb18__0_329 [label="otherwise"];
    bb373__0_329 -> bb376__0_329 [label="return"];
    bb373__0_329 -> bb1084__0_329 [label="unwind"];
    bb374__0_329 -> bb375__0_329 [label="return"];
    bb374__0_329 -> bb1084__0_329 [label="unwind"];
    bb375__0_329 -> bb978__0_329 [label=""];
    bb376__0_329 -> bb377__0_329 [label="return"];
    bb376__0_329 -> bb1084__0_329 [label="unwind"];
    bb377__0_329 -> bb378__0_329 [label="0"];
    bb377__0_329 -> bb379__0_329 [label="1"];
    bb377__0_329 -> bb18__0_329 [label="otherwise"];
    bb378__0_329 -> bb381__0_329 [label="return"];
    bb378__0_329 -> bb1078__0_329 [label="unwind"];
    bb379__0_329 -> bb380__0_329 [label="return"];
    bb379__0_329 -> bb1079__0_329 [label="unwind"];
    bb380__0_329 -> bb977__0_329 [label=""];
    bb381__0_329 -> bb382__0_329 [label="return"];
    bb381__0_329 -> bb1078__0_329 [label="unwind"];
    bb382__0_329 -> bb383__0_329 [label="return"];
    bb382__0_329 -> bb1078__0_329 [label="unwind"];
    bb383__0_329 -> bb384__0_329 [label="0"];
    bb383__0_329 -> bb385__0_329 [label="1"];
    bb383__0_329 -> bb18__0_329 [label="otherwise"];
    bb384__0_329 -> bb387__0_329 [label="return"];
    bb384__0_329 -> bb1075__0_329 [label="unwind"];
    bb385__0_329 -> bb386__0_329 [label="return"];
    bb385__0_329 -> bb1076__0_329 [label="unwind"];
    bb386__0_329 -> bb976__0_329 [label=""];
    bb387__0_329 -> bb388__0_329 [label="return"];
    bb387__0_329 -> bb1075__0_329 [label="unwind"];
    bb388__0_329 -> bb389__0_329 [label="return"];
    bb388__0_329 -> bb1075__0_329 [label="unwind"];
    bb389__0_329 -> bb390__0_329 [label="return"];
    bb389__0_329 -> bb1075__0_329 [label="unwind"];
    bb390__0_329 -> bb391__0_329 [label="0"];
    bb390__0_329 -> bb392__0_329 [label="1"];
    bb390__0_329 -> bb18__0_329 [label="otherwise"];
    bb391__0_329 -> bb394__0_329 [label="return"];
    bb391__0_329 -> bb1075__0_329 [label="unwind"];
    bb392__0_329 -> bb393__0_329 [label="return"];
    bb392__0_329 -> bb1075__0_329 [label="unwind"];
    bb393__0_329 -> bb975__0_329 [label=""];
    bb394__0_329 -> bb395__0_329 [label="return"];
    bb394__0_329 -> bb1075__0_329 [label="unwind"];
    bb395__0_329 -> bb396__0_329 [label="return"];
    bb395__0_329 -> bb1075__0_329 [label="unwind"];
    bb396__0_329 -> bb397__0_329 [label="return"];
    bb396__0_329 -> bb1075__0_329 [label="unwind"];
    bb397__0_329 -> bb398__0_329 [label="return"];
    bb397__0_329 -> bb1075__0_329 [label="unwind"];
    bb398__0_329 -> bb399__0_329 [label="return"];
    bb398__0_329 -> bb1075__0_329 [label="unwind"];
    bb399__0_329 -> bb400__0_329 [label="0"];
    bb399__0_329 -> bb401__0_329 [label="1"];
    bb399__0_329 -> bb18__0_329 [label="otherwise"];
    bb400__0_329 -> bb403__0_329 [label="return"];
    bb400__0_329 -> bb1075__0_329 [label="unwind"];
    bb401__0_329 -> bb402__0_329 [label="return"];
    bb401__0_329 -> bb1075__0_329 [label="unwind"];
    bb402__0_329 -> bb973__0_329 [label=""];
    bb403__0_329 -> bb404__0_329 [label="return"];
    bb403__0_329 -> bb1075__0_329 [label="unwind"];
    bb404__0_329 -> bb405__0_329 [label="0"];
    bb404__0_329 -> bb406__0_329 [label="1"];
    bb404__0_329 -> bb18__0_329 [label="otherwise"];
    bb405__0_329 -> bb408__0_329 [label="return"];
    bb405__0_329 -> bb1075__0_329 [label="unwind"];
    bb406__0_329 -> bb407__0_329 [label="return"];
    bb406__0_329 -> bb1075__0_329 [label="unwind"];
    bb407__0_329 -> bb973__0_329 [label=""];
    bb408__0_329 -> bb409__0_329 [label="return"];
    bb408__0_329 -> bb1075__0_329 [label="unwind"];
    bb409__0_329 -> bb410__0_329 [label="0"];
    bb409__0_329 -> bb411__0_329 [label="1"];
    bb409__0_329 -> bb18__0_329 [label="otherwise"];
    bb410__0_329 -> bb413__0_329 [label="return"];
    bb410__0_329 -> bb1075__0_329 [label="unwind"];
    bb411__0_329 -> bb412__0_329 [label="return"];
    bb411__0_329 -> bb1075__0_329 [label="unwind"];
    bb412__0_329 -> bb971__0_329 [label=""];
    bb413__0_329 -> bb414__0_329 [label="return"];
    bb413__0_329 -> bb1075__0_329 [label="unwind"];
    bb414__0_329 -> bb415__0_329 [label="return"];
    bb414__0_329 -> bb1075__0_329 [label="unwind"];
    bb415__0_329 -> bb416__0_329 [label="0"];
    bb415__0_329 -> bb417__0_329 [label="1"];
    bb415__0_329 -> bb18__0_329 [label="otherwise"];
    bb416__0_329 -> bb419__0_329 [label="return"];
    bb416__0_329 -> bb1075__0_329 [label="unwind"];
    bb417__0_329 -> bb418__0_329 [label="return"];
    bb417__0_329 -> bb1075__0_329 [label="unwind"];
    bb418__0_329 -> bb971__0_329 [label=""];
    bb419__0_329 -> bb420__0_329 [label="return"];
    bb419__0_329 -> bb1075__0_329 [label="unwind"];
    bb420__0_329 -> bb421__0_329 [label="0"];
    bb420__0_329 -> bb422__0_329 [label="1"];
    bb420__0_329 -> bb18__0_329 [label="otherwise"];
    bb421__0_329 -> bb425__0_329 [label="0"];
    bb421__0_329 -> bb424__0_329 [label="otherwise"];
    bb422__0_329 -> bb423__0_329 [label="return"];
    bb422__0_329 -> bb1075__0_329 [label="unwind"];
    bb423__0_329 -> bb970__0_329 [label=""];
    bb424__0_329 -> bb426__0_329 [label="return"];
    bb424__0_329 -> bb1075__0_329 [label="unwind"];
    bb425__0_329 -> bb432__0_329 [label=""];
    bb426__0_329 -> bb427__0_329 [label="return"];
    bb426__0_329 -> bb1075__0_329 [label="unwind"];
    bb427__0_329 -> bb428__0_329 [label="return"];
    bb427__0_329 -> bb1075__0_329 [label="unwind"];
    bb428__0_329 -> bb429__0_329 [label="0"];
    bb428__0_329 -> bb430__0_329 [label="1"];
    bb428__0_329 -> bb18__0_329 [label="otherwise"];
    bb429__0_329 -> bb432__0_329 [label=""];
    bb430__0_329 -> bb431__0_329 [label="return"];
    bb430__0_329 -> bb1075__0_329 [label="unwind"];
    bb431__0_329 -> bb970__0_329 [label=""];
    bb432__0_329 -> bb433__0_329 [label="return"];
    bb432__0_329 -> bb1075__0_329 [label="unwind"];
    bb433__0_329 -> bb434__0_329 [label="return"];
    bb433__0_329 -> bb1075__0_329 [label="unwind"];
    bb434__0_329 -> bb435__0_329 [label="return"];
    bb434__0_329 -> bb1075__0_329 [label="unwind"];
    bb435__0_329 -> bb436__0_329 [label="return"];
    bb435__0_329 -> bb1075__0_329 [label="unwind"];
    bb436__0_329 -> bb437__0_329 [label="0"];
    bb436__0_329 -> bb438__0_329 [label="1"];
    bb436__0_329 -> bb18__0_329 [label="otherwise"];
    bb437__0_329 -> bb440__0_329 [label="return"];
    bb437__0_329 -> bb1075__0_329 [label="unwind"];
    bb438__0_329 -> bb439__0_329 [label="return"];
    bb438__0_329 -> bb1075__0_329 [label="unwind"];
    bb439__0_329 -> bb969__0_329 [label=""];
    bb440__0_329 -> bb441__0_329 [label="return"];
    bb440__0_329 -> bb1075__0_329 [label="unwind"];
    bb441__0_329 -> bb442__0_329 [label="0"];
    bb441__0_329 -> bb443__0_329 [label="1"];
    bb441__0_329 -> bb18__0_329 [label="otherwise"];
    bb442__0_329 -> bb445__0_329 [label="return"];
    bb442__0_329 -> bb1075__0_329 [label="unwind"];
    bb443__0_329 -> bb444__0_329 [label="return"];
    bb443__0_329 -> bb1075__0_329 [label="unwind"];
    bb444__0_329 -> bb966__0_329 [label=""];
    bb445__0_329 -> bb446__0_329 [label="return"];
    bb445__0_329 -> bb1075__0_329 [label="unwind"];
    bb446__0_329 -> bb447__0_329 [label="return"];
    bb446__0_329 -> bb1075__0_329 [label="unwind"];
    bb447__0_329 -> bb448__0_329 [label="0"];
    bb447__0_329 -> bb449__0_329 [label="1"];
    bb447__0_329 -> bb18__0_329 [label="otherwise"];
    bb448__0_329 -> bb451__0_329 [label="return"];
    bb448__0_329 -> bb1075__0_329 [label="unwind"];
    bb449__0_329 -> bb450__0_329 [label="return"];
    bb449__0_329 -> bb1075__0_329 [label="unwind"];
    bb450__0_329 -> bb966__0_329 [label=""];
    bb451__0_329 -> bb452__0_329 [label="return"];
    bb451__0_329 -> bb1075__0_329 [label="unwind"];
    bb452__0_329 -> bb453__0_329 [label="0"];
    bb452__0_329 -> bb454__0_329 [label="1"];
    bb452__0_329 -> bb18__0_329 [label="otherwise"];
    bb453__0_329 -> bb457__0_329 [label="0"];
    bb453__0_329 -> bb456__0_329 [label="otherwise"];
    bb454__0_329 -> bb455__0_329 [label="return"];
    bb454__0_329 -> bb1075__0_329 [label="unwind"];
    bb455__0_329 -> bb967__0_329 [label=""];
    bb456__0_329 -> bb458__0_329 [label="return"];
    bb456__0_329 -> bb1075__0_329 [label="unwind"];
    bb457__0_329 -> bb459__0_329 [label="return"];
    bb457__0_329 -> bb1075__0_329 [label="unwind"];
    bb458__0_329 -> bb968__0_329 [label=""];
    bb459__0_329 -> bb460__0_329 [label="return"];
    bb459__0_329 -> bb1075__0_329 [label="unwind"];
    bb460__0_329 -> bb461__0_329 [label="0"];
    bb460__0_329 -> bb462__0_329 [label="1"];
    bb460__0_329 -> bb18__0_329 [label="otherwise"];
    bb461__0_329 -> bb464__0_329 [label="return"];
    bb461__0_329 -> bb1075__0_329 [label="unwind"];
    bb462__0_329 -> bb463__0_329 [label="return"];
    bb462__0_329 -> bb1075__0_329 [label="unwind"];
    bb463__0_329 -> bb963__0_329 [label=""];
    bb464__0_329 -> bb465__0_329 [label="return"];
    bb464__0_329 -> bb1075__0_329 [label="unwind"];
    bb465__0_329 -> bb466__0_329 [label="0"];
    bb465__0_329 -> bb467__0_329 [label="1"];
    bb465__0_329 -> bb18__0_329 [label="otherwise"];
    bb466__0_329 -> bb469__0_329 [label="return"];
    bb466__0_329 -> bb1075__0_329 [label="unwind"];
    bb467__0_329 -> bb468__0_329 [label="return"];
    bb467__0_329 -> bb1075__0_329 [label="unwind"];
    bb468__0_329 -> bb963__0_329 [label=""];
    bb469__0_329 -> bb470__0_329 [label="return"];
    bb469__0_329 -> bb1075__0_329 [label="unwind"];
    bb470__0_329 -> bb471__0_329 [label="0"];
    bb470__0_329 -> bb472__0_329 [label="1"];
    bb470__0_329 -> bb18__0_329 [label="otherwise"];
    bb471__0_329 -> bb474__0_329 [label="success"];
    bb471__0_329 -> bb1075__0_329 [label="unwind"];
    bb472__0_329 -> bb473__0_329 [label="return"];
    bb472__0_329 -> bb1075__0_329 [label="unwind"];
    bb473__0_329 -> bb964__0_329 [label=""];
    bb474__0_329 -> bb476__0_329 [label="0"];
    bb474__0_329 -> bb475__0_329 [label="otherwise"];
    bb475__0_329 -> bb477__0_329 [label=""];
    bb476__0_329 -> bb477__0_329 [label=""];
    bb477__0_329 -> bb478__0_329 [label="return"];
    bb477__0_329 -> bb1075__0_329 [label="unwind"];
    bb478__0_329 -> bb479__0_329 [label="return"];
    bb478__0_329 -> bb1075__0_329 [label="unwind"];
    bb479__0_329 -> bb480__0_329 [label="return"];
    bb479__0_329 -> bb1075__0_329 [label="unwind"];
    bb480__0_329 -> bb481__0_329 [label="return"];
    bb480__0_329 -> bb1075__0_329 [label="unwind"];
    bb481__0_329 -> bb482__0_329 [label="return"];
    bb481__0_329 -> bb1075__0_329 [label="unwind"];
    bb482__0_329 -> bb483__0_329 [label="0"];
    bb482__0_329 -> bb484__0_329 [label="1"];
    bb482__0_329 -> bb18__0_329 [label="otherwise"];
    bb483__0_329 -> bb486__0_329 [label="return"];
    bb483__0_329 -> bb1025__0_329 [label="unwind"];
    bb484__0_329 -> bb485__0_329 [label="return"];
    bb484__0_329 -> bb1073__0_329 [label="unwind"];
    bb485__0_329 -> bb1058__0_329 [label=""];
    bb486__0_329 -> bb487__0_329 [label="return"];
    bb486__0_329 -> bb1025__0_329 [label="unwind"];
    bb487__0_329 -> bb488__0_329 [label="return"];
    bb487__0_329 -> bb1025__0_329 [label="unwind"];
    bb488__0_329 -> bb489__0_329 [label="0"];
    bb488__0_329 -> bb490__0_329 [label="1"];
    bb488__0_329 -> bb18__0_329 [label="otherwise"];
    bb489__0_329 -> bb1053__0_329 [label="return"];
    bb489__0_329 -> bb1073__0_329 [label="unwind"];
    bb490__0_329 -> bb491__0_329 [label="return"];
    bb490__0_329 -> bb1025__0_329 [label="unwind"];
    bb491__0_329 -> bb1058__0_329 [label="return"];
    bb491__0_329 -> bb1073__0_329 [label="unwind"];
    bb492__0_329 -> bb493__0_329 [label="return"];
    bb492__0_329 -> bb1075__0_329 [label="unwind"];
    bb493__0_329 -> bb494__0_329 [label="return"];
    bb493__0_329 -> bb1075__0_329 [label="unwind"];
    bb494__0_329 -> bb495__0_329 [label="0"];
    bb494__0_329 -> bb496__0_329 [label="1"];
    bb494__0_329 -> bb18__0_329 [label="otherwise"];
    bb495__0_329 -> bb498__0_329 [label="return"];
    bb495__0_329 -> bb1075__0_329 [label="unwind"];
    bb496__0_329 -> bb497__0_329 [label="return"];
    bb496__0_329 -> bb1075__0_329 [label="unwind"];
    bb497__0_329 -> bb960__0_329 [label=""];
    bb498__0_329 -> bb499__0_329 [label="return"];
    bb498__0_329 -> bb1075__0_329 [label="unwind"];
    bb499__0_329 -> bb500__0_329 [label="0"];
    bb499__0_329 -> bb501__0_329 [label="1"];
    bb499__0_329 -> bb18__0_329 [label="otherwise"];
    bb500__0_329 -> bb503__0_329 [label="return"];
    bb500__0_329 -> bb1075__0_329 [label="unwind"];
    bb501__0_329 -> bb502__0_329 [label="return"];
    bb501__0_329 -> bb1075__0_329 [label="unwind"];
    bb502__0_329 -> bb958__0_329 [label=""];
    bb503__0_329 -> bb504__0_329 [label="return"];
    bb503__0_329 -> bb1075__0_329 [label="unwind"];
    bb504__0_329 -> bb505__0_329 [label="0"];
    bb504__0_329 -> bb506__0_329 [label="1"];
    bb504__0_329 -> bb18__0_329 [label="otherwise"];
    bb505__0_329 -> bb508__0_329 [label="return"];
    bb505__0_329 -> bb1075__0_329 [label="unwind"];
    bb506__0_329 -> bb507__0_329 [label="return"];
    bb506__0_329 -> bb1075__0_329 [label="unwind"];
    bb507__0_329 -> bb958__0_329 [label=""];
    bb508__0_329 -> bb509__0_329 [label="return"];
    bb508__0_329 -> bb1075__0_329 [label="unwind"];
    bb509__0_329 -> bb510__0_329 [label="0"];
    bb509__0_329 -> bb511__0_329 [label="1"];
    bb509__0_329 -> bb18__0_329 [label="otherwise"];
    bb510__0_329 -> bb513__0_329 [label="success"];
    bb510__0_329 -> bb1075__0_329 [label="unwind"];
    bb511__0_329 -> bb512__0_329 [label="return"];
    bb511__0_329 -> bb1075__0_329 [label="unwind"];
    bb512__0_329 -> bb959__0_329 [label=""];
    bb513__0_329 -> bb514__0_329 [label="return"];
    bb513__0_329 -> bb1075__0_329 [label="unwind"];
    bb514__0_329 -> bb516__0_329 [label="0"];
    bb514__0_329 -> bb515__0_329 [label="1"];
    bb514__0_329 -> bb18__0_329 [label="otherwise"];
    bb515__0_329 -> bb547__0_329 [label="return"];
    bb515__0_329 -> bb1075__0_329 [label="unwind"];
    bb516__0_329 -> bb517__0_329 [label="return"];
    bb516__0_329 -> bb1075__0_329 [label="unwind"];
    bb517__0_329 -> bb518__0_329 [label="return"];
    bb517__0_329 -> bb1075__0_329 [label="unwind"];
    bb518__0_329 -> bb519__0_329 [label="0"];
    bb518__0_329 -> bb520__0_329 [label="1"];
    bb518__0_329 -> bb18__0_329 [label="otherwise"];
    bb519__0_329 -> bb522__0_329 [label="return"];
    bb519__0_329 -> bb1075__0_329 [label="unwind"];
    bb520__0_329 -> bb521__0_329 [label="return"];
    bb520__0_329 -> bb1075__0_329 [label="unwind"];
    bb521__0_329 -> bb957__0_329 [label=""];
    bb522__0_329 -> bb523__0_329 [label="return"];
    bb522__0_329 -> bb1075__0_329 [label="unwind"];
    bb523__0_329 -> bb524__0_329 [label="0"];
    bb523__0_329 -> bb525__0_329 [label="1"];
    bb523__0_329 -> bb18__0_329 [label="otherwise"];
    bb524__0_329 -> bb528__0_329 [label="0"];
    bb524__0_329 -> bb527__0_329 [label="otherwise"];
    bb525__0_329 -> bb526__0_329 [label="return"];
    bb525__0_329 -> bb1075__0_329 [label="unwind"];
    bb526__0_329 -> bb956__0_329 [label=""];
    bb527__0_329 -> bb542__0_329 [label=""];
    bb528__0_329 -> bb529__0_329 [label="return"];
    bb528__0_329 -> bb1075__0_329 [label="unwind"];
    bb529__0_329 -> bb530__0_329 [label="return"];
    bb529__0_329 -> bb1075__0_329 [label="unwind"];
    bb530__0_329 -> bb531__0_329 [label="return"];
    bb530__0_329 -> bb1075__0_329 [label="unwind"];
    bb531__0_329 -> bb532__0_329 [label="return"];
    bb531__0_329 -> bb1024__0_329 [label="unwind"];
    bb532__0_329 -> bb533__0_329 [label="return"];
    bb532__0_329 -> bb1024__0_329 [label="unwind"];
    bb533__0_329 -> bb534__0_329 [label="return"];
    bb533__0_329 -> bb1075__0_329 [label="unwind"];
    bb534__0_329 -> bb535__0_329 [label="return"];
    bb534__0_329 -> bb1075__0_329 [label="unwind"];
    bb535__0_329 -> bb536__0_329 [label="return"];
    bb535__0_329 -> bb1075__0_329 [label="unwind"];
    bb536__0_329 -> bb537__0_329 [label="return"];
    bb536__0_329 -> bb1075__0_329 [label="unwind"];
    bb537__0_329 -> bb538__0_329 [label="return"];
    bb537__0_329 -> bb1075__0_329 [label="unwind"];
    bb538__0_329 -> bb539__0_329 [label="return"];
    bb538__0_329 -> bb1023__0_329 [label="unwind"];
    bb539__0_329 -> bb540__0_329 [label="return"];
    bb539__0_329 -> bb1023__0_329 [label="unwind"];
    bb540__0_329 -> bb541__0_329 [label="return"];
    bb540__0_329 -> bb1075__0_329 [label="unwind"];
    bb541__0_329 -> bb542__0_329 [label=""];
    bb542__0_329 -> bb543__0_329 [label="return"];
    bb542__0_329 -> bb1075__0_329 [label="unwind"];
    bb543__0_329 -> bb544__0_329 [label="0"];
    bb543__0_329 -> bb545__0_329 [label="1"];
    bb543__0_329 -> bb18__0_329 [label="otherwise"];
    bb544__0_329 -> bb577__0_329 [label=""];
    bb545__0_329 -> bb546__0_329 [label="return"];
    bb545__0_329 -> bb1075__0_329 [label="unwind"];
    bb546__0_329 -> bb956__0_329 [label=""];
    bb547__0_329 -> bb548__0_329 [label="return"];
    bb547__0_329 -> bb1075__0_329 [label="unwind"];
    bb548__0_329 -> bb549__0_329 [label="0"];
    bb548__0_329 -> bb550__0_329 [label="1"];
    bb548__0_329 -> bb18__0_329 [label="otherwise"];
    bb549__0_329 -> bb552__0_329 [label="return"];
    bb549__0_329 -> bb1075__0_329 [label="unwind"];
    bb550__0_329 -> bb551__0_329 [label="return"];
    bb550__0_329 -> bb1075__0_329 [label="unwind"];
    bb551__0_329 -> bb957__0_329 [label=""];
    bb552__0_329 -> bb553__0_329 [label="return"];
    bb552__0_329 -> bb1075__0_329 [label="unwind"];
    bb553__0_329 -> bb554__0_329 [label="0"];
    bb553__0_329 -> bb555__0_329 [label="1"];
    bb553__0_329 -> bb18__0_329 [label="otherwise"];
    bb554__0_329 -> bb558__0_329 [label="0"];
    bb554__0_329 -> bb557__0_329 [label="otherwise"];
    bb555__0_329 -> bb556__0_329 [label="return"];
    bb555__0_329 -> bb1075__0_329 [label="unwind"];
    bb556__0_329 -> bb955__0_329 [label=""];
    bb557__0_329 -> bb572__0_329 [label=""];
    bb558__0_329 -> bb559__0_329 [label="return"];
    bb558__0_329 -> bb1075__0_329 [label="unwind"];
    bb559__0_329 -> bb560__0_329 [label="return"];
    bb559__0_329 -> bb1075__0_329 [label="unwind"];
    bb560__0_329 -> bb561__0_329 [label="return"];
    bb560__0_329 -> bb1075__0_329 [label="unwind"];
    bb561__0_329 -> bb562__0_329 [label="return"];
    bb561__0_329 -> bb1022__0_329 [label="unwind"];
    bb562__0_329 -> bb563__0_329 [label="return"];
    bb562__0_329 -> bb1022__0_329 [label="unwind"];
    bb563__0_329 -> bb564__0_329 [label="return"];
    bb563__0_329 -> bb1075__0_329 [label="unwind"];
    bb564__0_329 -> bb565__0_329 [label="return"];
    bb564__0_329 -> bb1075__0_329 [label="unwind"];
    bb565__0_329 -> bb566__0_329 [label="return"];
    bb565__0_329 -> bb1075__0_329 [label="unwind"];
    bb566__0_329 -> bb567__0_329 [label="return"];
    bb566__0_329 -> bb1075__0_329 [label="unwind"];
    bb567__0_329 -> bb568__0_329 [label="return"];
    bb567__0_329 -> bb1075__0_329 [label="unwind"];
    bb568__0_329 -> bb569__0_329 [label="return"];
    bb568__0_329 -> bb1021__0_329 [label="unwind"];
    bb569__0_329 -> bb570__0_329 [label="return"];
    bb569__0_329 -> bb1021__0_329 [label="unwind"];
    bb570__0_329 -> bb571__0_329 [label="return"];
    bb570__0_329 -> bb1075__0_329 [label="unwind"];
    bb571__0_329 -> bb572__0_329 [label=""];
    bb572__0_329 -> bb573__0_329 [label="return"];
    bb572__0_329 -> bb1075__0_329 [label="unwind"];
    bb573__0_329 -> bb574__0_329 [label="0"];
    bb573__0_329 -> bb575__0_329 [label="1"];
    bb573__0_329 -> bb18__0_329 [label="otherwise"];
    bb574__0_329 -> bb577__0_329 [label=""];
    bb575__0_329 -> bb576__0_329 [label="return"];
    bb575__0_329 -> bb1075__0_329 [label="unwind"];
    bb576__0_329 -> bb955__0_329 [label=""];
    bb577__0_329 -> bb579__0_329 [label=""];
    bb578__0_329 -> bb579__0_329 [label=""];
    bb579__0_329 -> bb580__0_329 [label="return"];
    bb579__0_329 -> bb1075__0_329 [label="unwind"];
    bb580__0_329 -> bb581__0_329 [label="return"];
    bb580__0_329 -> bb1075__0_329 [label="unwind"];
    bb581__0_329 -> bb582__0_329 [label="0"];
    bb581__0_329 -> bb583__0_329 [label="1"];
    bb581__0_329 -> bb18__0_329 [label="otherwise"];
    bb582__0_329 -> bb585__0_329 [label="return"];
    bb582__0_329 -> bb1075__0_329 [label="unwind"];
    bb583__0_329 -> bb584__0_329 [label="return"];
    bb583__0_329 -> bb1075__0_329 [label="unwind"];
    bb584__0_329 -> bb952__0_329 [label=""];
    bb585__0_329 -> bb586__0_329 [label="return"];
    bb585__0_329 -> bb1075__0_329 [label="unwind"];
    bb586__0_329 -> bb587__0_329 [label="0"];
    bb586__0_329 -> bb588__0_329 [label="1"];
    bb586__0_329 -> bb18__0_329 [label="otherwise"];
    bb587__0_329 -> bb590__0_329 [label="return"];
    bb587__0_329 -> bb1075__0_329 [label="unwind"];
    bb588__0_329 -> bb589__0_329 [label="return"];
    bb588__0_329 -> bb1075__0_329 [label="unwind"];
    bb589__0_329 -> bb952__0_329 [label=""];
    bb590__0_329 -> bb591__0_329 [label="return"];
    bb590__0_329 -> bb1075__0_329 [label="unwind"];
    bb591__0_329 -> bb592__0_329 [label="0"];
    bb591__0_329 -> bb593__0_329 [label="1"];
    bb591__0_329 -> bb18__0_329 [label="otherwise"];
    bb592__0_329 -> bb595__0_329 [label="return"];
    bb592__0_329 -> bb1075__0_329 [label="unwind"];
    bb593__0_329 -> bb594__0_329 [label="return"];
    bb593__0_329 -> bb1075__0_329 [label="unwind"];
    bb594__0_329 -> bb953__0_329 [label=""];
    bb595__0_329 -> bb596__0_329 [label="return"];
    bb595__0_329 -> bb1075__0_329 [label="unwind"];
    bb596__0_329 -> bb597__0_329 [label="0"];
    bb596__0_329 -> bb598__0_329 [label="1"];
    bb596__0_329 -> bb18__0_329 [label="otherwise"];
    bb597__0_329 -> bb600__0_329 [label="return"];
    bb597__0_329 -> bb1075__0_329 [label="unwind"];
    bb598__0_329 -> bb599__0_329 [label="return"];
    bb598__0_329 -> bb1075__0_329 [label="unwind"];
    bb599__0_329 -> bb950__0_329 [label=""];
    bb600__0_329 -> bb601__0_329 [label="return"];
    bb600__0_329 -> bb1075__0_329 [label="unwind"];
    bb601__0_329 -> bb602__0_329 [label="0"];
    bb601__0_329 -> bb603__0_329 [label="1"];
    bb601__0_329 -> bb18__0_329 [label="otherwise"];
    bb602__0_329 -> bb605__0_329 [label="return"];
    bb602__0_329 -> bb1075__0_329 [label="unwind"];
    bb603__0_329 -> bb604__0_329 [label="return"];
    bb603__0_329 -> bb1075__0_329 [label="unwind"];
    bb604__0_329 -> bb947__0_329 [label=""];
    bb605__0_329 -> bb606__0_329 [label="return"];
    bb605__0_329 -> bb1075__0_329 [label="unwind"];
    bb606__0_329 -> bb607__0_329 [label="0"];
    bb606__0_329 -> bb608__0_329 [label="1"];
    bb606__0_329 -> bb18__0_329 [label="otherwise"];
    bb607__0_329 -> bb610__0_329 [label="return"];
    bb607__0_329 -> bb1075__0_329 [label="unwind"];
    bb608__0_329 -> bb609__0_329 [label="return"];
    bb608__0_329 -> bb1075__0_329 [label="unwind"];
    bb609__0_329 -> bb947__0_329 [label=""];
    bb610__0_329 -> bb611__0_329 [label="return"];
    bb610__0_329 -> bb1075__0_329 [label="unwind"];
    bb611__0_329 -> bb612__0_329 [label="0"];
    bb611__0_329 -> bb613__0_329 [label="1"];
    bb611__0_329 -> bb18__0_329 [label="otherwise"];
    bb612__0_329 -> bb615__0_329 [label="return"];
    bb612__0_329 -> bb1075__0_329 [label="unwind"];
    bb613__0_329 -> bb614__0_329 [label="return"];
    bb613__0_329 -> bb1075__0_329 [label="unwind"];
    bb614__0_329 -> bb948__0_329 [label=""];
    bb615__0_329 -> bb616__0_329 [label="return"];
    bb615__0_329 -> bb1075__0_329 [label="unwind"];
    bb616__0_329 -> bb617__0_329 [label="0"];
    bb616__0_329 -> bb618__0_329 [label="1"];
    bb616__0_329 -> bb18__0_329 [label="otherwise"];
    bb617__0_329 -> bb620__0_329 [label="success"];
    bb617__0_329 -> bb1075__0_329 [label="unwind"];
    bb618__0_329 -> bb619__0_329 [label="return"];
    bb618__0_329 -> bb1075__0_329 [label="unwind"];
    bb619__0_329 -> bb949__0_329 [label=""];
    bb620__0_329 -> bb621__0_329 [label="return"];
    bb620__0_329 -> bb1075__0_329 [label="unwind"];
    bb621__0_329 -> bb622__0_329 [label="return"];
    bb621__0_329 -> bb1075__0_329 [label="unwind"];
    bb622__0_329 -> bb623__0_329 [label="0"];
    bb622__0_329 -> bb624__0_329 [label="1"];
    bb622__0_329 -> bb18__0_329 [label="otherwise"];
    bb623__0_329 -> bb626__0_329 [label="return"];
    bb623__0_329 -> bb1075__0_329 [label="unwind"];
    bb624__0_329 -> bb625__0_329 [label="return"];
    bb624__0_329 -> bb1075__0_329 [label="unwind"];
    bb625__0_329 -> bb945__0_329 [label=""];
    bb626__0_329 -> bb627__0_329 [label="return"];
    bb626__0_329 -> bb1075__0_329 [label="unwind"];
    bb627__0_329 -> bb628__0_329 [label="0"];
    bb627__0_329 -> bb629__0_329 [label="1"];
    bb627__0_329 -> bb18__0_329 [label="otherwise"];
    bb628__0_329 -> bb631__0_329 [label="return"];
    bb628__0_329 -> bb1075__0_329 [label="unwind"];
    bb629__0_329 -> bb630__0_329 [label="return"];
    bb629__0_329 -> bb1075__0_329 [label="unwind"];
    bb630__0_329 -> bb942__0_329 [label=""];
    bb631__0_329 -> bb632__0_329 [label="return"];
    bb631__0_329 -> bb1075__0_329 [label="unwind"];
    bb632__0_329 -> bb633__0_329 [label="0"];
    bb632__0_329 -> bb634__0_329 [label="1"];
    bb632__0_329 -> bb18__0_329 [label="otherwise"];
    bb633__0_329 -> bb636__0_329 [label="return"];
    bb633__0_329 -> bb1075__0_329 [label="unwind"];
    bb634__0_329 -> bb635__0_329 [label="return"];
    bb634__0_329 -> bb1075__0_329 [label="unwind"];
    bb635__0_329 -> bb942__0_329 [label=""];
    bb636__0_329 -> bb637__0_329 [label="return"];
    bb636__0_329 -> bb1075__0_329 [label="unwind"];
    bb637__0_329 -> bb638__0_329 [label="0"];
    bb637__0_329 -> bb639__0_329 [label="1"];
    bb637__0_329 -> bb18__0_329 [label="otherwise"];
    bb638__0_329 -> bb641__0_329 [label="return"];
    bb638__0_329 -> bb1075__0_329 [label="unwind"];
    bb639__0_329 -> bb640__0_329 [label="return"];
    bb639__0_329 -> bb1075__0_329 [label="unwind"];
    bb640__0_329 -> bb943__0_329 [label=""];
    bb641__0_329 -> bb642__0_329 [label="return"];
    bb641__0_329 -> bb1075__0_329 [label="unwind"];
    bb642__0_329 -> bb643__0_329 [label="0"];
    bb642__0_329 -> bb644__0_329 [label="1"];
    bb642__0_329 -> bb18__0_329 [label="otherwise"];
    bb643__0_329 -> bb646__0_329 [label="success"];
    bb643__0_329 -> bb1075__0_329 [label="unwind"];
    bb644__0_329 -> bb645__0_329 [label="return"];
    bb644__0_329 -> bb1075__0_329 [label="unwind"];
    bb645__0_329 -> bb944__0_329 [label=""];
    bb646__0_329 -> bb647__0_329 [label="return"];
    bb646__0_329 -> bb1075__0_329 [label="unwind"];
    bb647__0_329 -> bb648__0_329 [label="return"];
    bb647__0_329 -> bb1075__0_329 [label="unwind"];
    bb648__0_329 -> bb649__0_329 [label="0"];
    bb648__0_329 -> bb650__0_329 [label="1"];
    bb648__0_329 -> bb18__0_329 [label="otherwise"];
    bb649__0_329 -> bb652__0_329 [label="return"];
    bb649__0_329 -> bb1020__0_329 [label="unwind"];
    bb650__0_329 -> bb651__0_329 [label="return"];
    bb650__0_329 -> bb1072__0_329 [label="unwind"];
    bb651__0_329 -> bb1057__0_329 [label=""];
    bb652__0_329 -> bb653__0_329 [label="return"];
    bb652__0_329 -> bb1020__0_329 [label="unwind"];
    bb653__0_329 -> bb654__0_329 [label="return"];
    bb653__0_329 -> bb1020__0_329 [label="unwind"];
    bb654__0_329 -> bb655__0_329 [label="0"];
    bb654__0_329 -> bb656__0_329 [label="1"];
    bb654__0_329 -> bb18__0_329 [label="otherwise"];
    bb655__0_329 -> bb1054__0_329 [label="return"];
    bb655__0_329 -> bb1072__0_329 [label="unwind"];
    bb656__0_329 -> bb657__0_329 [label="return"];
    bb656__0_329 -> bb1020__0_329 [label="unwind"];
    bb657__0_329 -> bb1057__0_329 [label="return"];
    bb657__0_329 -> bb1072__0_329 [label="unwind"];
    bb658__0_329 -> bb659__0_329 [label="return"];
    bb658__0_329 -> bb1075__0_329 [label="unwind"];
    bb659__0_329 -> bb660__0_329 [label="0"];
    bb659__0_329 -> bb661__0_329 [label="1"];
    bb659__0_329 -> bb18__0_329 [label="otherwise"];
    bb660__0_329 -> bb663__0_329 [label="return"];
    bb660__0_329 -> bb1019__0_329 [label="unwind"];
    bb661__0_329 -> bb662__0_329 [label="return"];
    bb661__0_329 -> bb1071__0_329 [label="unwind"];
    bb662__0_329 -> bb1056__0_329 [label=""];
    bb663__0_329 -> bb664__0_329 [label="return"];
    bb663__0_329 -> bb1019__0_329 [label="unwind"];
    bb664__0_329 -> bb665__0_329 [label="return"];
    bb664__0_329 -> bb1019__0_329 [label="unwind"];
    bb665__0_329 -> bb666__0_329 [label="0"];
    bb665__0_329 -> bb667__0_329 [label="1"];
    bb665__0_329 -> bb18__0_329 [label="otherwise"];
    bb666__0_329 -> bb1055__0_329 [label="return"];
    bb666__0_329 -> bb1071__0_329 [label="unwind"];
    bb667__0_329 -> bb668__0_329 [label="return"];
    bb667__0_329 -> bb1019__0_329 [label="unwind"];
    bb668__0_329 -> bb1056__0_329 [label="return"];
    bb668__0_329 -> bb1071__0_329 [label="unwind"];
    bb669__0_329 -> bb670__0_329 [label="return"];
    bb669__0_329 -> bb1075__0_329 [label="unwind"];
    bb670__0_329 -> bb671__0_329 [label="return"];
    bb670__0_329 -> bb1075__0_329 [label="unwind"];
    bb671__0_329 -> bb672__0_329 [label="return"];
    bb671__0_329 -> bb1075__0_329 [label="unwind"];
    bb672__0_329 -> bb673__0_329 [label="0"];
    bb672__0_329 -> bb674__0_329 [label="1"];
    bb672__0_329 -> bb18__0_329 [label="otherwise"];
    bb673__0_329 -> bb676__0_329 [label="success"];
    bb673__0_329 -> bb1075__0_329 [label="unwind"];
    bb674__0_329 -> bb675__0_329 [label="return"];
    bb674__0_329 -> bb1075__0_329 [label="unwind"];
    bb675__0_329 -> bb941__0_329 [label=""];
    bb676__0_329 -> bb677__0_329 [label="return"];
    bb676__0_329 -> bb1075__0_329 [label="unwind"];
    bb677__0_329 -> bb678__0_329 [label="return"];
    bb677__0_329 -> bb1075__0_329 [label="unwind"];
    bb678__0_329 -> bb679__0_329 [label="return"];
    bb678__0_329 -> bb1075__0_329 [label="unwind"];
    bb679__0_329 -> bb680__0_329 [label="0"];
    bb679__0_329 -> bb681__0_329 [label="1"];
    bb679__0_329 -> bb18__0_329 [label="otherwise"];
    bb680__0_329 -> bb683__0_329 [label="return"];
    bb680__0_329 -> bb1075__0_329 [label="unwind"];
    bb681__0_329 -> bb682__0_329 [label="return"];
    bb681__0_329 -> bb1075__0_329 [label="unwind"];
    bb682__0_329 -> bb940__0_329 [label=""];
    bb683__0_329 -> bb684__0_329 [label="return"];
    bb683__0_329 -> bb1075__0_329 [label="unwind"];
    bb684__0_329 -> bb685__0_329 [label="0"];
    bb684__0_329 -> bb686__0_329 [label="1"];
    bb684__0_329 -> bb18__0_329 [label="otherwise"];
    bb685__0_329 -> bb688__0_329 [label="return"];
    bb685__0_329 -> bb1018__0_329 [label="unwind"];
    bb686__0_329 -> bb687__0_329 [label="return"];
    bb686__0_329 -> bb1070__0_329 [label="unwind"];
    bb687__0_329 -> bb939__0_329 [label=""];
    bb688__0_329 -> bb689__0_329 [label="return"];
    bb688__0_329 -> bb1018__0_329 [label="unwind"];
    bb689__0_329 -> bb690__0_329 [label="0"];
    bb689__0_329 -> bb691__0_329 [label="1"];
    bb689__0_329 -> bb18__0_329 [label="otherwise"];
    bb690__0_329 -> bb693__0_329 [label="return"];
    bb690__0_329 -> bb1018__0_329 [label="unwind"];
    bb691__0_329 -> bb692__0_329 [label="return"];
    bb691__0_329 -> bb1018__0_329 [label="unwind"];
    bb692__0_329 -> bb938__0_329 [label=""];
    bb693__0_329 -> bb694__0_329 [label="return"];
    bb693__0_329 -> bb1018__0_329 [label="unwind"];
    bb694__0_329 -> bb695__0_329 [label="return"];
    bb694__0_329 -> bb1018__0_329 [label="unwind"];
    bb695__0_329 -> bb696__0_329 [label="return"];
    bb695__0_329 -> bb1018__0_329 [label="unwind"];
    bb696__0_329 -> bb697__0_329 [label="return"];
    bb696__0_329 -> bb1018__0_329 [label="unwind"];
    bb697__0_329 -> bb698__0_329 [label="return"];
    bb697__0_329 -> bb1018__0_329 [label="unwind"];
    bb698__0_329 -> bb699__0_329 [label="0"];
    bb698__0_329 -> bb700__0_329 [label="1"];
    bb698__0_329 -> bb18__0_329 [label="otherwise"];
    bb699__0_329 -> bb702__0_329 [label="return"];
    bb699__0_329 -> bb1018__0_329 [label="unwind"];
    bb700__0_329 -> bb701__0_329 [label="return"];
    bb700__0_329 -> bb1018__0_329 [label="unwind"];
    bb701__0_329 -> bb937__0_329 [label=""];
    bb702__0_329 -> bb703__0_329 [label="return"];
    bb702__0_329 -> bb1018__0_329 [label="unwind"];
    bb703__0_329 -> bb704__0_329 [label="return"];
    bb703__0_329 -> bb1018__0_329 [label="unwind"];
    bb704__0_329 -> bb705__0_329 [label="0"];
    bb704__0_329 -> bb706__0_329 [label="1"];
    bb704__0_329 -> bb18__0_329 [label="otherwise"];
    bb705__0_329 -> bb708__0_329 [label="return"];
    bb705__0_329 -> bb1018__0_329 [label="unwind"];
    bb706__0_329 -> bb707__0_329 [label="return"];
    bb706__0_329 -> bb1018__0_329 [label="unwind"];
    bb707__0_329 -> bb937__0_329 [label=""];
    bb708__0_329 -> bb709__0_329 [label="return"];
    bb708__0_329 -> bb1018__0_329 [label="unwind"];
    bb709__0_329 -> bb710__0_329 [label="return"];
    bb709__0_329 -> bb1018__0_329 [label="unwind"];
    bb710__0_329 -> bb711__0_329 [label="0"];
    bb710__0_329 -> bb712__0_329 [label="1"];
    bb710__0_329 -> bb18__0_329 [label="otherwise"];
    bb711__0_329 -> bb714__0_329 [label="return"];
    bb711__0_329 -> bb1018__0_329 [label="unwind"];
    bb712__0_329 -> bb713__0_329 [label="return"];
    bb712__0_329 -> bb1018__0_329 [label="unwind"];
    bb713__0_329 -> bb937__0_329 [label=""];
    bb714__0_329 -> bb715__0_329 [label="return"];
    bb714__0_329 -> bb1018__0_329 [label="unwind"];
    bb715__0_329 -> bb716__0_329 [label="return"];
    bb715__0_329 -> bb1018__0_329 [label="unwind"];
    bb716__0_329 -> bb717__0_329 [label="return"];
    bb716__0_329 -> bb1018__0_329 [label="unwind"];
    bb717__0_329 -> bb718__0_329 [label="0"];
    bb717__0_329 -> bb719__0_329 [label="1"];
    bb717__0_329 -> bb18__0_329 [label="otherwise"];
    bb718__0_329 -> bb722__0_329 [label="0"];
    bb718__0_329 -> bb721__0_329 [label="otherwise"];
    bb719__0_329 -> bb720__0_329 [label="return"];
    bb719__0_329 -> bb1018__0_329 [label="unwind"];
    bb720__0_329 -> bb936__0_329 [label=""];
    bb721__0_329 -> bb737__0_329 [label=""];
    bb722__0_329 -> bb723__0_329 [label="return"];
    bb722__0_329 -> bb1018__0_329 [label="unwind"];
    bb723__0_329 -> bb724__0_329 [label="return"];
    bb723__0_329 -> bb1018__0_329 [label="unwind"];
    bb724__0_329 -> bb725__0_329 [label="return"];
    bb724__0_329 -> bb1018__0_329 [label="unwind"];
    bb725__0_329 -> bb726__0_329 [label="return"];
    bb725__0_329 -> bb1017__0_329 [label="unwind"];
    bb726__0_329 -> bb727__0_329 [label="return"];
    bb726__0_329 -> bb1017__0_329 [label="unwind"];
    bb727__0_329 -> bb728__0_329 [label="return"];
    bb727__0_329 -> bb1018__0_329 [label="unwind"];
    bb728__0_329 -> bb729__0_329 [label="return"];
    bb728__0_329 -> bb1018__0_329 [label="unwind"];
    bb729__0_329 -> bb730__0_329 [label="return"];
    bb729__0_329 -> bb1018__0_329 [label="unwind"];
    bb730__0_329 -> bb731__0_329 [label="return"];
    bb730__0_329 -> bb1018__0_329 [label="unwind"];
    bb731__0_329 -> bb732__0_329 [label="return"];
    bb731__0_329 -> bb1018__0_329 [label="unwind"];
    bb732__0_329 -> bb733__0_329 [label="return"];
    bb732__0_329 -> bb1018__0_329 [label="unwind"];
    bb733__0_329 -> bb734__0_329 [label="return"];
    bb733__0_329 -> bb1016__0_329 [label="unwind"];
    bb734__0_329 -> bb735__0_329 [label="return"];
    bb734__0_329 -> bb1016__0_329 [label="unwind"];
    bb735__0_329 -> bb736__0_329 [label="return"];
    bb735__0_329 -> bb1018__0_329 [label="unwind"];
    bb736__0_329 -> bb737__0_329 [label=""];
    bb737__0_329 -> bb738__0_329 [label="return"];
    bb737__0_329 -> bb1018__0_329 [label="unwind"];
    bb738__0_329 -> bb739__0_329 [label="0"];
    bb738__0_329 -> bb740__0_329 [label="1"];
    bb738__0_329 -> bb18__0_329 [label="otherwise"];
    bb739__0_329 -> bb742__0_329 [label="return"];
    bb739__0_329 -> bb1018__0_329 [label="unwind"];
    bb740__0_329 -> bb741__0_329 [label="return"];
    bb740__0_329 -> bb1018__0_329 [label="unwind"];
    bb741__0_329 -> bb936__0_329 [label=""];
    bb742__0_329 -> bb743__0_329 [label="return"];
    bb742__0_329 -> bb1018__0_329 [label="unwind"];
    bb743__0_329 -> bb744__0_329 [label="0"];
    bb743__0_329 -> bb745__0_329 [label="1"];
    bb743__0_329 -> bb18__0_329 [label="otherwise"];
    bb744__0_329 -> bb747__0_329 [label="return"];
    bb744__0_329 -> bb1018__0_329 [label="unwind"];
    bb745__0_329 -> bb746__0_329 [label="return"];
    bb745__0_329 -> bb1018__0_329 [label="unwind"];
    bb746__0_329 -> bb935__0_329 [label=""];
    bb747__0_329 -> bb748__0_329 [label="return"];
    bb747__0_329 -> bb1018__0_329 [label="unwind"];
    bb748__0_329 -> bb749__0_329 [label="return"];
    bb748__0_329 -> bb1018__0_329 [label="unwind"];
    bb749__0_329 -> bb750__0_329 [label="return"];
    bb749__0_329 -> bb1018__0_329 [label="unwind"];
    bb750__0_329 -> bb751__0_329 [label="return"];
    bb750__0_329 -> bb1018__0_329 [label="unwind"];
    bb751__0_329 -> bb752__0_329 [label="0"];
    bb751__0_329 -> bb753__0_329 [label="1"];
    bb751__0_329 -> bb18__0_329 [label="otherwise"];
    bb752__0_329 -> bb755__0_329 [label="return"];
    bb752__0_329 -> bb1018__0_329 [label="unwind"];
    bb753__0_329 -> bb754__0_329 [label="return"];
    bb753__0_329 -> bb1018__0_329 [label="unwind"];
    bb754__0_329 -> bb934__0_329 [label=""];
    bb755__0_329 -> bb756__0_329 [label="success"];
    bb755__0_329 -> bb1018__0_329 [label="unwind"];
    bb756__0_329 -> bb757__0_329 [label="return"];
    bb756__0_329 -> bb1018__0_329 [label="unwind"];
    bb757__0_329 -> bb758__0_329 [label="return"];
    bb757__0_329 -> bb1018__0_329 [label="unwind"];
    bb758__0_329 -> bb759__0_329 [label="0"];
    bb758__0_329 -> bb760__0_329 [label="1"];
    bb758__0_329 -> bb18__0_329 [label="otherwise"];
    bb759__0_329 -> bb762__0_329 [label="return"];
    bb759__0_329 -> bb1018__0_329 [label="unwind"];
    bb760__0_329 -> bb761__0_329 [label="return"];
    bb760__0_329 -> bb1018__0_329 [label="unwind"];
    bb761__0_329 -> bb934__0_329 [label=""];
    bb762__0_329 -> bb763__0_329 [label="return"];
    bb762__0_329 -> bb1018__0_329 [label="unwind"];
    bb763__0_329 -> bb764__0_329 [label="return"];
    bb763__0_329 -> bb1018__0_329 [label="unwind"];
    bb764__0_329 -> bb765__0_329 [label="return"];
    bb764__0_329 -> bb1018__0_329 [label="unwind"];
    bb765__0_329 -> bb766__0_329 [label="0"];
    bb765__0_329 -> bb767__0_329 [label="1"];
    bb765__0_329 -> bb18__0_329 [label="otherwise"];
    bb766__0_329 -> bb770__0_329 [label="0"];
    bb766__0_329 -> bb769__0_329 [label="otherwise"];
    bb767__0_329 -> bb768__0_329 [label="return"];
    bb767__0_329 -> bb1018__0_329 [label="unwind"];
    bb768__0_329 -> bb933__0_329 [label=""];
    bb769__0_329 -> bb785__0_329 [label=""];
    bb770__0_329 -> bb771__0_329 [label="return"];
    bb770__0_329 -> bb1018__0_329 [label="unwind"];
    bb771__0_329 -> bb772__0_329 [label="return"];
    bb771__0_329 -> bb1018__0_329 [label="unwind"];
    bb772__0_329 -> bb773__0_329 [label="return"];
    bb772__0_329 -> bb1018__0_329 [label="unwind"];
    bb773__0_329 -> bb774__0_329 [label="return"];
    bb773__0_329 -> bb1015__0_329 [label="unwind"];
    bb774__0_329 -> bb775__0_329 [label="return"];
    bb774__0_329 -> bb1015__0_329 [label="unwind"];
    bb775__0_329 -> bb776__0_329 [label="return"];
    bb775__0_329 -> bb1018__0_329 [label="unwind"];
    bb776__0_329 -> bb777__0_329 [label="return"];
    bb776__0_329 -> bb1018__0_329 [label="unwind"];
    bb777__0_329 -> bb778__0_329 [label="return"];
    bb777__0_329 -> bb1018__0_329 [label="unwind"];
    bb778__0_329 -> bb779__0_329 [label="return"];
    bb778__0_329 -> bb1018__0_329 [label="unwind"];
    bb779__0_329 -> bb780__0_329 [label="return"];
    bb779__0_329 -> bb1018__0_329 [label="unwind"];
    bb780__0_329 -> bb781__0_329 [label="return"];
    bb780__0_329 -> bb1018__0_329 [label="unwind"];
    bb781__0_329 -> bb782__0_329 [label="return"];
    bb781__0_329 -> bb1014__0_329 [label="unwind"];
    bb782__0_329 -> bb783__0_329 [label="return"];
    bb782__0_329 -> bb1014__0_329 [label="unwind"];
    bb783__0_329 -> bb784__0_329 [label="return"];
    bb783__0_329 -> bb1018__0_329 [label="unwind"];
    bb784__0_329 -> bb785__0_329 [label=""];
    bb785__0_329 -> bb786__0_329 [label="return"];
    bb785__0_329 -> bb1018__0_329 [label="unwind"];
    bb786__0_329 -> bb787__0_329 [label="0"];
    bb786__0_329 -> bb788__0_329 [label="1"];
    bb786__0_329 -> bb18__0_329 [label="otherwise"];
    bb787__0_329 -> bb790__0_329 [label="return"];
    bb787__0_329 -> bb1018__0_329 [label="unwind"];
    bb788__0_329 -> bb789__0_329 [label="return"];
    bb788__0_329 -> bb1018__0_329 [label="unwind"];
    bb789__0_329 -> bb933__0_329 [label=""];
    bb790__0_329 -> bb791__0_329 [label="return"];
    bb790__0_329 -> bb1018__0_329 [label="unwind"];
    bb791__0_329 -> bb792__0_329 [label="return"];
    bb791__0_329 -> bb1018__0_329 [label="unwind"];
    bb792__0_329 -> bb793__0_329 [label="return"];
    bb792__0_329 -> bb1018__0_329 [label="unwind"];
    bb793__0_329 -> bb794__0_329 [label="0"];
    bb793__0_329 -> bb795__0_329 [label="1"];
    bb793__0_329 -> bb18__0_329 [label="otherwise"];
    bb794__0_329 -> bb797__0_329 [label="return"];
    bb794__0_329 -> bb1018__0_329 [label="unwind"];
    bb795__0_329 -> bb796__0_329 [label="return"];
    bb795__0_329 -> bb1018__0_329 [label="unwind"];
    bb796__0_329 -> bb932__0_329 [label=""];
    bb797__0_329 -> bb798__0_329 [label="return"];
    bb797__0_329 -> bb1018__0_329 [label="unwind"];
    bb798__0_329 -> bb799__0_329 [label="0"];
    bb798__0_329 -> bb800__0_329 [label="1"];
    bb798__0_329 -> bb18__0_329 [label="otherwise"];
    bb799__0_329 -> bb802__0_329 [label="return"];
    bb799__0_329 -> bb1018__0_329 [label="unwind"];
    bb800__0_329 -> bb801__0_329 [label="return"];
    bb800__0_329 -> bb1018__0_329 [label="unwind"];
    bb801__0_329 -> bb932__0_329 [label=""];
    bb802__0_329 -> bb803__0_329 [label="return"];
    bb802__0_329 -> bb1075__0_329 [label="unwind"];
    bb803__0_329 -> bb804__0_329 [label="return"];
    bb803__0_329 -> bb1075__0_329 [label="unwind"];
    bb804__0_329 -> bb805__0_329 [label="return"];
    bb804__0_329 -> bb1075__0_329 [label="unwind"];
    bb805__0_329 -> bb806__0_329 [label="0"];
    bb805__0_329 -> bb807__0_329 [label="1"];
    bb805__0_329 -> bb18__0_329 [label="otherwise"];
    bb806__0_329 -> bb809__0_329 [label="return"];
    bb806__0_329 -> bb1075__0_329 [label="unwind"];
    bb807__0_329 -> bb808__0_329 [label="return"];
    bb807__0_329 -> bb1075__0_329 [label="unwind"];
    bb808__0_329 -> bb931__0_329 [label=""];
    bb809__0_329 -> bb810__0_329 [label="return"];
    bb809__0_329 -> bb1075__0_329 [label="unwind"];
    bb810__0_329 -> bb811__0_329 [label="0"];
    bb810__0_329 -> bb812__0_329 [label="1"];
    bb810__0_329 -> bb18__0_329 [label="otherwise"];
    bb811__0_329 -> bb814__0_329 [label="return"];
    bb811__0_329 -> bb1075__0_329 [label="unwind"];
    bb812__0_329 -> bb813__0_329 [label="return"];
    bb812__0_329 -> bb1075__0_329 [label="unwind"];
    bb813__0_329 -> bb930__0_329 [label=""];
    bb814__0_329 -> bb815__0_329 [label="return"];
    bb814__0_329 -> bb1075__0_329 [label="unwind"];
    bb815__0_329 -> bb816__0_329 [label="0"];
    bb815__0_329 -> bb817__0_329 [label="1"];
    bb815__0_329 -> bb18__0_329 [label="otherwise"];
    bb816__0_329 -> bb820__0_329 [label="0"];
    bb816__0_329 -> bb819__0_329 [label="otherwise"];
    bb817__0_329 -> bb818__0_329 [label="return"];
    bb817__0_329 -> bb1075__0_329 [label="unwind"];
    bb818__0_329 -> bb930__0_329 [label=""];
    bb819__0_329 -> bb821__0_329 [label="return"];
    bb819__0_329 -> bb1075__0_329 [label="unwind"];
    bb820__0_329 -> bb822__0_329 [label="return"];
    bb820__0_329 -> bb1075__0_329 [label="unwind"];
    bb821__0_329 -> bb827__0_329 [label=""];
    bb822__0_329 -> bb825__0_329 [label="0"];
    bb822__0_329 -> bb823__0_329 [label="otherwise"];
    bb823__0_329 -> bb824__0_329 [label="return"];
    bb823__0_329 -> bb1075__0_329 [label="unwind"];
    bb824__0_329 -> bb826__0_329 [label=""];
    bb825__0_329 -> bb826__0_329 [label=""];
    bb826__0_329 -> bb827__0_329 [label=""];
    bb827__0_329 -> bb828__0_329 [label="return"];
    bb827__0_329 -> bb1075__0_329 [label="unwind"];
    bb828__0_329 -> bb829__0_329 [label="return"];
    bb828__0_329 -> bb1075__0_329 [label="unwind"];
    bb829__0_329 -> bb830__0_329 [label="0"];
    bb829__0_329 -> bb831__0_329 [label="1"];
    bb829__0_329 -> bb18__0_329 [label="otherwise"];
    bb830__0_329 -> bb834__0_329 [label="0"];
    bb830__0_329 -> bb833__0_329 [label="otherwise"];
    bb831__0_329 -> bb832__0_329 [label="return"];
    bb831__0_329 -> bb1075__0_329 [label="unwind"];
    bb832__0_329 -> bb929__0_329 [label=""];
    bb833__0_329 -> bb842__0_329 [label=""];
    bb834__0_329 -> bb835__0_329 [label="return"];
    bb834__0_329 -> bb1075__0_329 [label="unwind"];
    bb835__0_329 -> bb836__0_329 [label="return"];
    bb835__0_329 -> bb1075__0_329 [label="unwind"];
    bb836__0_329 -> bb837__0_329 [label="return"];
    bb836__0_329 -> bb1075__0_329 [label="unwind"];
    bb837__0_329 -> bb838__0_329 [label="return"];
    bb837__0_329 -> bb1013__0_329 [label="unwind"];
    bb838__0_329 -> bb839__0_329 [label="return"];
    bb838__0_329 -> bb1013__0_329 [label="unwind"];
    bb839__0_329 -> bb840__0_329 [label="return"];
    bb839__0_329 -> bb1075__0_329 [label="unwind"];
    bb840__0_329 -> bb841__0_329 [label="return"];
    bb840__0_329 -> bb1075__0_329 [label="unwind"];
    bb841__0_329 -> bb842__0_329 [label=""];
    bb842__0_329 -> bb843__0_329 [label="return"];
    bb842__0_329 -> bb1075__0_329 [label="unwind"];
    bb843__0_329 -> bb844__0_329 [label="0"];
    bb843__0_329 -> bb845__0_329 [label="1"];
    bb843__0_329 -> bb18__0_329 [label="otherwise"];
    bb844__0_329 -> bb847__0_329 [label="return"];
    bb844__0_329 -> bb1075__0_329 [label="unwind"];
    bb845__0_329 -> bb846__0_329 [label="return"];
    bb845__0_329 -> bb1075__0_329 [label="unwind"];
    bb846__0_329 -> bb929__0_329 [label=""];
    bb847__0_329 -> bb848__0_329 [label="return"];
    bb847__0_329 -> bb1075__0_329 [label="unwind"];
    bb848__0_329 -> bb849__0_329 [label="return"];
    bb848__0_329 -> bb1075__0_329 [label="unwind"];
    bb849__0_329 -> bb850__0_329 [label="return"];
    bb849__0_329 -> bb1075__0_329 [label="unwind"];
    bb850__0_329 -> bb851__0_329 [label="return"];
    bb850__0_329 -> bb1075__0_329 [label="unwind"];
    bb851__0_329 -> bb852__0_329 [label="return"];
    bb851__0_329 -> bb1075__0_329 [label="unwind"];
    bb852__0_329 -> bb853__0_329 [label="return"];
    bb852__0_329 -> bb1075__0_329 [label="unwind"];
    bb853__0_329 -> bb854__0_329 [label="return"];
    bb853__0_329 -> bb1075__0_329 [label="unwind"];
    bb854__0_329 -> bb855__0_329 [label="0"];
    bb854__0_329 -> bb856__0_329 [label="1"];
    bb854__0_329 -> bb18__0_329 [label="otherwise"];
    bb855__0_329 -> bb858__0_329 [label="return"];
    bb855__0_329 -> bb1012__0_329 [label="unwind"];
    bb856__0_329 -> bb857__0_329 [label="return"];
    bb856__0_329 -> bb1069__0_329 [label="unwind"];
    bb857__0_329 -> bb928__0_329 [label=""];
    bb858__0_329 -> bb859__0_329 [label="return"];
    bb858__0_329 -> bb1012__0_329 [label="unwind"];
    bb859__0_329 -> bb860__0_329 [label="return"];
    bb859__0_329 -> bb1012__0_329 [label="unwind"];
    bb860__0_329 -> bb861__0_329 [label="return"];
    bb860__0_329 -> bb1012__0_329 [label="unwind"];
    bb861__0_329 -> bb862__0_329 [label="return"];
    bb861__0_329 -> bb1012__0_329 [label="unwind"];
    bb862__0_329 -> bb863__0_329 [label="return"];
    bb862__0_329 -> bb1075__0_329 [label="unwind"];
    bb863__0_329 -> bb864__0_329 [label="return"];
    bb863__0_329 -> bb1075__0_329 [label="unwind"];
    bb864__0_329 -> bb865__0_329 [label="return"];
    bb864__0_329 -> bb1075__0_329 [label="unwind"];
    bb865__0_329 -> bb866__0_329 [label="return"];
    bb865__0_329 -> bb1011__0_329 [label="unwind"];
    bb866__0_329 -> bb867__0_329 [label="return"];
    bb866__0_329 -> bb1011__0_329 [label="unwind"];
    bb867__0_329 -> bb868__0_329 [label="return"];
    bb867__0_329 -> bb1075__0_329 [label="unwind"];
    bb868__0_329 -> bb869__0_329 [label="1"];
    bb868__0_329 -> bb870__0_329 [label="otherwise"];
    bb869__0_329 -> bb871__0_329 [label=""];
    bb870__0_329 -> bb871__0_329 [label=""];
    bb871__0_329 -> bb872__0_329 [label="return"];
    bb871__0_329 -> bb1075__0_329 [label="unwind"];
    bb872__0_329 -> bb874__0_329 [label="0"];
    bb872__0_329 -> bb873__0_329 [label="otherwise"];
    bb873__0_329 -> bb875__0_329 [label=""];
    bb874__0_329 -> bb875__0_329 [label=""];
    bb875__0_329 -> bb876__0_329 [label="return"];
    bb875__0_329 -> bb1075__0_329 [label="unwind"];
    bb876__0_329 -> bb877__0_329 [label="return"];
    bb876__0_329 -> bb1075__0_329 [label="unwind"];
    bb877__0_329 -> bb878__0_329 [label="return"];
    bb877__0_329 -> bb1010__0_329 [label="unwind"];
    bb878__0_329 -> bb879__0_329 [label="return"];
    bb878__0_329 -> bb1010__0_329 [label="unwind"];
    bb879__0_329 -> bb880__0_329 [label="return"];
    bb879__0_329 -> bb1075__0_329 [label="unwind"];
    bb880__0_329 -> bb881__0_329 [label="return"];
    bb880__0_329 -> bb1075__0_329 [label="unwind"];
    bb881__0_329 -> bb882__0_329 [label="return"];
    bb881__0_329 -> bb1075__0_329 [label="unwind"];
    bb882__0_329 -> bb883__0_329 [label="0"];
    bb882__0_329 -> bb884__0_329 [label="1"];
    bb882__0_329 -> bb18__0_329 [label="otherwise"];
    bb883__0_329 -> bb886__0_329 [label="return"];
    bb883__0_329 -> bb1075__0_329 [label="unwind"];
    bb884__0_329 -> bb885__0_329 [label="return"];
    bb884__0_329 -> bb1075__0_329 [label="unwind"];
    bb885__0_329 -> bb927__0_329 [label=""];
    bb886__0_329 -> bb887__0_329 [label="return"];
    bb886__0_329 -> bb1075__0_329 [label="unwind"];
    bb887__0_329 -> bb888__0_329 [label="0"];
    bb887__0_329 -> bb889__0_329 [label="1"];
    bb887__0_329 -> bb18__0_329 [label="otherwise"];
    bb888__0_329 -> bb891__0_329 [label="return"];
    bb888__0_329 -> bb1075__0_329 [label="unwind"];
    bb889__0_329 -> bb890__0_329 [label="return"];
    bb889__0_329 -> bb1075__0_329 [label="unwind"];
    bb890__0_329 -> bb926__0_329 [label=""];
    bb891__0_329 -> bb892__0_329 [label="return"];
    bb891__0_329 -> bb1075__0_329 [label="unwind"];
    bb892__0_329 -> bb893__0_329 [label="return"];
    bb892__0_329 -> bb1075__0_329 [label="unwind"];
    bb893__0_329 -> bb894__0_329 [label="return"];
    bb893__0_329 -> bb1075__0_329 [label="unwind"];
    bb894__0_329 -> bb895__0_329 [label="0"];
    bb894__0_329 -> bb896__0_329 [label="1"];
    bb894__0_329 -> bb18__0_329 [label="otherwise"];
    bb895__0_329 -> bb898__0_329 [label="return"];
    bb895__0_329 -> bb1075__0_329 [label="unwind"];
    bb896__0_329 -> bb897__0_329 [label="return"];
    bb896__0_329 -> bb1075__0_329 [label="unwind"];
    bb897__0_329 -> bb925__0_329 [label=""];
    bb898__0_329 -> bb899__0_329 [label="return"];
    bb898__0_329 -> bb1009__0_329 [label="unwind"];
    bb899__0_329 -> bb900__0_329 [label="return"];
    bb899__0_329 -> bb1009__0_329 [label="unwind"];
    bb900__0_329 -> bb901__0_329 [label="return"];
    bb900__0_329 -> bb1075__0_329 [label="unwind"];
    bb901__0_329 -> bb902__0_329 [label="return"];
    bb901__0_329 -> bb1075__0_329 [label="unwind"];
    bb902__0_329 -> bb903__0_329 [label="return"];
    bb902__0_329 -> bb1008__0_329 [label="unwind"];
    bb903__0_329 -> bb904__0_329 [label="return"];
    bb903__0_329 -> bb1008__0_329 [label="unwind"];
    bb904__0_329 -> bb905__0_329 [label="return"];
    bb904__0_329 -> bb1008__0_329 [label="unwind"];
    bb905__0_329 -> bb906__0_329 [label="0"];
    bb905__0_329 -> bb907__0_329 [label="1"];
    bb905__0_329 -> bb18__0_329 [label="otherwise"];
    bb906__0_329 -> bb909__0_329 [label="return"];
    bb906__0_329 -> bb1008__0_329 [label="unwind"];
    bb907__0_329 -> bb908__0_329 [label="return"];
    bb907__0_329 -> bb1008__0_329 [label="unwind"];
    bb908__0_329 -> bb923__0_329 [label="return"];
    bb908__0_329 -> bb1075__0_329 [label="unwind"];
    bb909__0_329 -> bb910__0_329 [label="return"];
    bb909__0_329 -> bb1008__0_329 [label="unwind"];
    bb910__0_329 -> bb911__0_329 [label="return"];
    bb910__0_329 -> bb1008__0_329 [label="unwind"];
    bb911__0_329 -> bb912__0_329 [label="0"];
    bb911__0_329 -> bb913__0_329 [label="1"];
    bb911__0_329 -> bb18__0_329 [label="otherwise"];
    bb912__0_329 -> bb915__0_329 [label="return"];
    bb912__0_329 -> bb1008__0_329 [label="unwind"];
    bb913__0_329 -> bb914__0_329 [label="return"];
    bb913__0_329 -> bb1008__0_329 [label="unwind"];
    bb914__0_329 -> bb922__0_329 [label="return"];
    bb914__0_329 -> bb1075__0_329 [label="unwind"];
    bb915__0_329 -> bb916__0_329 [label="return"];
    bb915__0_329 -> bb1006__0_329 [label="unwind"];
    bb916__0_329 -> bb917__0_329 [label="return"];
    bb916__0_329 -> bb1005__0_329 [label="unwind"];
    bb917__0_329 -> bb918__0_329 [label="return"];
    bb917__0_329 -> bb1005__0_329 [label="unwind"];
    bb918__0_329 -> bb919__0_329 [label="return"];
    bb918__0_329 -> bb1006__0_329 [label="unwind"];
    bb919__0_329 -> bb920__0_329 [label="return"];
    bb919__0_329 -> bb1007__0_329 [label="unwind"];
    bb920__0_329 -> bb921__0_329 [label="return"];
    bb920__0_329 -> bb1075__0_329 [label="unwind"];
    bb921__0_329 -> bb1004__0_329 [label=""];
    bb922__0_329 -> bb924__0_329 [label=""];
    bb923__0_329 -> bb924__0_329 [label=""];
    bb924__0_329 -> bb925__0_329 [label=""];
    bb925__0_329 -> bb926__0_329 [label=""];
    bb926__0_329 -> bb927__0_329 [label=""];
    bb927__0_329 -> bb928__0_329 [label=""];
    bb928__0_329 -> bb929__0_329 [label=""];
    bb929__0_329 -> bb930__0_329 [label=""];
    bb930__0_329 -> bb931__0_329 [label=""];
    bb931__0_329 -> bb940__0_329 [label=""];
    bb932__0_329 -> bb934__0_329 [label=""];
    bb933__0_329 -> bb934__0_329 [label=""];
    bb934__0_329 -> bb935__0_329 [label=""];
    bb935__0_329 -> bb937__0_329 [label=""];
    bb936__0_329 -> bb937__0_329 [label=""];
    bb937__0_329 -> bb938__0_329 [label=""];
    bb938__0_329 -> bb939__0_329 [label="return"];
    bb938__0_329 -> bb1075__0_329 [label="unwind"];
    bb939__0_329 -> bb940__0_329 [label=""];
    bb940__0_329 -> bb941__0_329 [label=""];
    bb941__0_329 -> bb946__0_329 [label=""];
    bb942__0_329 -> bb943__0_329 [label=""];
    bb943__0_329 -> bb944__0_329 [label=""];
    bb944__0_329 -> bb945__0_329 [label=""];
    bb945__0_329 -> bb946__0_329 [label=""];
    bb946__0_329 -> bb951__0_329 [label=""];
    bb947__0_329 -> bb948__0_329 [label=""];
    bb948__0_329 -> bb949__0_329 [label=""];
    bb949__0_329 -> bb950__0_329 [label=""];
    bb950__0_329 -> bb951__0_329 [label=""];
    bb951__0_329 -> bb954__0_329 [label=""];
    bb952__0_329 -> bb953__0_329 [label=""];
    bb953__0_329 -> bb954__0_329 [label=""];
    bb954__0_329 -> bb962__0_329 [label=""];
    bb955__0_329 -> bb957__0_329 [label=""];
    bb956__0_329 -> bb957__0_329 [label=""];
    bb957__0_329 -> bb961__0_329 [label=""];
    bb958__0_329 -> bb959__0_329 [label=""];
    bb959__0_329 -> bb960__0_329 [label=""];
    bb960__0_329 -> bb961__0_329 [label=""];
    bb961__0_329 -> bb962__0_329 [label=""];
    bb962__0_329 -> bb965__0_329 [label=""];
    bb963__0_329 -> bb964__0_329 [label=""];
    bb964__0_329 -> bb965__0_329 [label=""];
    bb965__0_329 -> bb968__0_329 [label=""];
    bb966__0_329 -> bb967__0_329 [label=""];
    bb967__0_329 -> bb968__0_329 [label=""];
    bb968__0_329 -> bb969__0_329 [label=""];
    bb969__0_329 -> bb970__0_329 [label=""];
    bb970__0_329 -> bb972__0_329 [label=""];
    bb971__0_329 -> bb972__0_329 [label=""];
    bb972__0_329 -> bb974__0_329 [label=""];
    bb973__0_329 -> bb974__0_329 [label=""];
    bb974__0_329 -> bb975__0_329 [label=""];
    bb975__0_329 -> bb976__0_329 [label="0"];
    bb975__0_329 -> bb1059__0_329 [label="otherwise"];
    bb976__0_329 -> bb977__0_329 [label="0"];
    bb976__0_329 -> bb1060__0_329 [label="otherwise"];
    bb977__0_329 -> bb978__0_329 [label=""];
    bb978__0_329 -> bb979__0_329 [label=""];
    bb979__0_329 -> bb981__0_329 [label=""];
    bb980__0_329 -> bb1061__0_329 [label="return"];
    bb980__0_329 -> bb1080__0_329 [label="unwind"];
    bb981__0_329 -> bb985__0_329 [label=""];
    bb982__0_329 -> bb983__0_329 [label=""];
    bb983__0_329 -> bb984__0_329 [label="return"];
    bb983__0_329 -> bb1084__0_329 [label="unwind"];
    bb984__0_329 -> bb985__0_329 [label=""];
    bb985__0_329 -> bb991__0_329 [label=""];
    bb986__0_329 -> bb987__0_329 [label=""];
    bb987__0_329 -> bb988__0_329 [label=""];
    bb988__0_329 -> bb990__0_329 [label=""];
    bb989__0_329 -> bb990__0_329 [label=""];
    bb990__0_329 -> bb991__0_329 [label=""];
    bb991__0_329 -> bb992__0_329 [label=""];
    bb992__0_329 -> bb993__0_329 [label=""];
    bb993__0_329 -> bb994__0_329 [label="0"];
    bb993__0_329 -> bb1063__0_329 [label="otherwise"];
    bb994__0_329 -> bb995__0_329 [label="0"];
    bb994__0_329 -> bb1064__0_329 [label="otherwise"];
    bb995__0_329 -> bb996__0_329 [label=""];
    bb996__0_329 -> bb997__0_329 [label=""];
    bb997__0_329 -> bb1001__0_329 [label=""];
    bb998__0_329 -> bb999__0_329 [label=""];
    bb999__0_329 -> bb1001__0_329 [label=""];
    bb1000__0_329 -> bb1001__0_329 [label=""];
    bb1001__0_329 -> bb1068__0_329 [label=""];
    bb1002__0_329 -> bb1003__0_329 [label=""];
    bb1003__0_329 -> bb1004__0_329 [label=""];
    bb1005__0_329 -> bb1006__0_329 [label="return"];
    bb1006__0_329 -> bb1007__0_329 [label="return"];
    bb1007__0_329 -> bb1075__0_329 [label="return"];
    bb1008__0_329 -> bb1075__0_329 [label="return"];
    bb1009__0_329 -> bb1075__0_329 [label="return"];
    bb1010__0_329 -> bb1075__0_329 [label="return"];
    bb1011__0_329 -> bb1075__0_329 [label="return"];
    bb1012__0_329 -> bb1075__0_329 [label="return"];
    bb1013__0_329 -> bb1075__0_329 [label="return"];
    bb1014__0_329 -> bb1018__0_329 [label="return"];
    bb1015__0_329 -> bb1018__0_329 [label="return"];
    bb1016__0_329 -> bb1018__0_329 [label="return"];
    bb1017__0_329 -> bb1018__0_329 [label="return"];
    bb1018__0_329 -> bb1075__0_329 [label="return"];
    bb1019__0_329 -> bb1071__0_329 [label="return"];
    bb1020__0_329 -> bb1072__0_329 [label="return"];
    bb1021__0_329 -> bb1075__0_329 [label="return"];
    bb1022__0_329 -> bb1075__0_329 [label="return"];
    bb1023__0_329 -> bb1075__0_329 [label="return"];
    bb1024__0_329 -> bb1075__0_329 [label="return"];
    bb1025__0_329 -> bb1073__0_329 [label="return"];
    bb1026__0_329 -> bb1080__0_329 [label="return"];
    bb1027__0_329 -> bb1028__0_329 [label="return"];
    bb1028__0_329 -> bb1084__0_329 [label="return"];
    bb1029__0_329 -> bb1084__0_329 [label="return"];
    bb1030__0_329 -> bb1084__0_329 [label="return"];
    bb1031__0_329 -> bb1082__0_329 [label="return"];
    bb1032__0_329 -> bb1033__0_329 [label="return"];
    bb1033__0_329 -> bb1034__0_329 [label="return"];
    bb1034__0_329 -> bb1084__0_329 [label="return"];
    bb1035__0_329 -> bb1084__0_329 [label="return"];
    bb1036__0_329 -> bb1092__0_329 [label="return"];
    bb1037__0_329 -> bb1092__0_329 [label="return"];
    bb1038__0_329 -> bb1089__0_329 [label="return"];
    bb1039__0_329 -> bb1090__0_329 [label="return"];
    bb1040__0_329 -> bb1092__0_329 [label="return"];
    bb1041__0_329 -> bb1092__0_329 [label="return"];
    bb1042__0_329 -> bb1048__0_329 [label="return"];
    bb1043__0_329 -> bb1048__0_329 [label="return"];
    bb1044__0_329 -> bb1048__0_329 [label="return"];
    bb1045__0_329 -> bb1048__0_329 [label="return"];
    bb1046__0_329 -> bb1048__0_329 [label="return"];
    bb1047__0_329 -> bb1048__0_329 [label="return"];
    bb1049__0_329 -> bb97__0_329 [label="return"];
    bb1049__0_329 -> bb1092__0_329 [label="unwind"];
    bb1050__0_329 -> bb108__0_329 [label="return"];
    bb1050__0_329 -> bb1092__0_329 [label="unwind"];
    bb1051__0_329 -> bb294__0_329 [label="0"];
    bb1051__0_329 -> bb293__0_329 [label="otherwise"];
    bb1052__0_329 -> bb366__0_329 [label="return"];
    bb1052__0_329 -> bb1084__0_329 [label="unwind"];
    bb1053__0_329 -> bb492__0_329 [label="1"];
    bb1053__0_329 -> bb578__0_329 [label="otherwise"];
    bb1054__0_329 -> bb658__0_329 [label="return"];
    bb1054__0_329 -> bb1075__0_329 [label="unwind"];
    bb1055__0_329 -> bb669__0_329 [label="success"];
    bb1055__0_329 -> bb1075__0_329 [label="unwind"];
    bb1056__0_329 -> bb946__0_329 [label=""];
    bb1057__0_329 -> bb946__0_329 [label=""];
    bb1058__0_329 -> bb962__0_329 [label=""];
    bb1059__0_329 -> bb976__0_329 [label="return"];
    bb1059__0_329 -> bb1078__0_329 [label="unwind"];
    bb1060__0_329 -> bb977__0_329 [label="return"];
    bb1060__0_329 -> bb1084__0_329 [label="unwind"];
    bb1061__0_329 -> bb981__0_329 [label=""];
    bb1062__0_329 -> bb985__0_329 [label=""];
    bb1063__0_329 -> bb994__0_329 [label="return"];
    bb1063__0_329 -> bb1087__0_329 [label="unwind"];
    bb1064__0_329 -> bb995__0_329 [label="return"];
    bb1064__0_329 -> bb1092__0_329 [label="unwind"];
    bb1065__0_329 -> bb1068__0_329 [label=""];
    bb1066__0_329 -> bb1068__0_329 [label=""];
    bb1067__0_329 -> bb1002__0_329 [label="return"];
    bb1067__0_329 -> bb1048__0_329 [label="unwind"];
    bb1068__0_329 -> bb1002__0_329 [label="0"];
    bb1068__0_329 -> bb1067__0_329 [label="otherwise"];
    bb1069__0_329 -> bb1075__0_329 [label=""];
    bb1070__0_329 -> bb1075__0_329 [label=""];
    bb1071__0_329 -> bb1075__0_329 [label=""];
    bb1072__0_329 -> bb1075__0_329 [label=""];
    bb1073__0_329 -> bb1075__0_329 [label=""];
    bb1074__0_329 -> bb1078__0_329 [label="return"];
    bb1075__0_329 -> bb1078__0_329 [label="0"];
    bb1075__0_329 -> bb1074__0_329 [label="otherwise"];
    bb1076__0_329 -> bb1078__0_329 [label=""];
    bb1077__0_329 -> bb1084__0_329 [label="return"];
    bb1078__0_329 -> bb1084__0_329 [label="0"];
    bb1078__0_329 -> bb1077__0_329 [label="otherwise"];
    bb1079__0_329 -> bb1084__0_329 [label=""];
    bb1080__0_329 -> bb1084__0_329 [label=""];
    bb1081__0_329 -> bb1084__0_329 [label=""];
    bb1082__0_329 -> bb1084__0_329 [label=""];
    bb1083__0_329 -> bb1087__0_329 [label="return"];
    bb1084__0_329 -> bb1087__0_329 [label="0"];
    bb1084__0_329 -> bb1083__0_329 [label="otherwise"];
    bb1085__0_329 -> bb1087__0_329 [label=""];
    bb1086__0_329 -> bb1092__0_329 [label="return"];
    bb1087__0_329 -> bb1092__0_329 [label="0"];
    bb1087__0_329 -> bb1086__0_329 [label="otherwise"];
    bb1088__0_329 -> bb1092__0_329 [label=""];
    bb1089__0_329 -> bb1092__0_329 [label=""];
    bb1090__0_329 -> bb1092__0_329 [label=""];
    bb1091__0_329 -> bb1048__0_329 [label="return"];
    bb1092__0_329 -> bb1048__0_329 [label="0"];
    bb1092__0_329 -> bb1091__0_329 [label="otherwise"];
    bb1093__0_329 -> bb1048__0_329 [label=""];
}
