digraph Mir_0_1079 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_initialize_phoenix_fulfillment_config(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u16;<br align="left"/>let mut _8: ();<br align="left"/>let _9: error::ErrorCode;<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased std::string::String;<br align="left"/>let _14: &amp;ReErased std::string::String;<br align="left"/>let _15: std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let mut _17: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased error::ErrorCode;<br align="left"/>let _28: &amp;ReErased error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: error::ErrorCode;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: ();<br align="left"/>let _38: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _40: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _41: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _43: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _44: Closure(DefId(0:5484 ~ drift[d311]::instructions::admin::handle_initialize_phoenix_fulfillment_config::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _50: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _53: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _55: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _56: Closure(DefId(0:5485 ~ drift[d311]::instructions::admin::handle_initialize_phoenix_fulfillment_config::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _62: anchor_lang::prelude::Pubkey;<br align="left"/>let _63: ();<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _65: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _68: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: ();<br align="left"/>let _72: error::ErrorCode;<br align="left"/>let _73: ();<br align="left"/>let mut _74: &amp;ReErased str;<br align="left"/>let _75: &amp;ReErased str;<br align="left"/>let mut _76: &amp;ReErased std::string::String;<br align="left"/>let _77: &amp;ReErased std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let _79: std::string::String;<br align="left"/>let mut _80: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _84: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _88: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _89: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _92: error::ErrorCode;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: ();<br align="left"/>let _98: state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _100: std::result::Result&lt;state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _101: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _102: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _107: state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _108: ();<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _110: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _113: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _114: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _115: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _116: ();<br align="left"/>let _117: error::ErrorCode;<br align="left"/>let _118: ();<br align="left"/>let mut _119: &amp;ReErased str;<br align="left"/>let _120: &amp;ReErased str;<br align="left"/>let mut _121: &amp;ReErased std::string::String;<br align="left"/>let _122: &amp;ReErased std::string::String;<br align="left"/>let _123: std::string::String;<br align="left"/>let _124: std::string::String;<br align="left"/>let mut _125: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _127: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _128: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _129: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _131: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _132: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _133: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _134: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased error::ErrorCode;<br align="left"/>let _136: &amp;ReErased error::ErrorCode;<br align="left"/>let _137: ();<br align="left"/>let mut _138: &amp;ReErased str;<br align="left"/>let _139: &amp;ReErased str;<br align="left"/>let mut _140: error::ErrorCode;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: ();<br align="left"/>let _146: ();<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _148: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _149: bool;<br align="left"/>let mut _150: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _151: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _152: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _153: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _154: ();<br align="left"/>let _155: error::ErrorCode;<br align="left"/>let _156: ();<br align="left"/>let mut _157: &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: &amp;ReErased std::string::String;<br align="left"/>let _160: &amp;ReErased std::string::String;<br align="left"/>let _161: std::string::String;<br align="left"/>let _162: std::string::String;<br align="left"/>let mut _163: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _166: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _167: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _170: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _171: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _172: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased error::ErrorCode;<br align="left"/>let _174: &amp;ReErased error::ErrorCode;<br align="left"/>let _175: ();<br align="left"/>let mut _176: &amp;ReErased str;<br align="left"/>let _177: &amp;ReErased str;<br align="left"/>let mut _178: error::ErrorCode;<br align="left"/>let mut _179: isize;<br align="left"/>let _180: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _181: !;<br align="left"/>let mut _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _183: ();<br align="left"/>let _184: u64;<br align="left"/>let mut _185: &amp;ReErased phoenix::quantities::BaseAtomsPerBaseLot;<br align="left"/>let _186: phoenix::quantities::BaseAtomsPerBaseLot;<br align="left"/>let mut _187: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let _188: bool;<br align="left"/>let mut _189: bool;<br align="left"/>let mut _190: u64;<br align="left"/>let mut _191: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _192: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _193: u64;<br align="left"/>let mut _194: u64;<br align="left"/>let mut _195: u64;<br align="left"/>let mut _196: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _197: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _198: u64;<br align="left"/>let _199: ();<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _201: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _202: bool;<br align="left"/>let mut _203: ();<br align="left"/>let _204: error::ErrorCode;<br align="left"/>let _205: ();<br align="left"/>let mut _206: &amp;ReErased str;<br align="left"/>let _207: &amp;ReErased str;<br align="left"/>let mut _208: &amp;ReErased std::string::String;<br align="left"/>let _209: &amp;ReErased std::string::String;<br align="left"/>let _210: std::string::String;<br align="left"/>let _211: std::string::String;<br align="left"/>let mut _212: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _213: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _214: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _215: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _216: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _217: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _218: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _219: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _220: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _221: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased error::ErrorCode;<br align="left"/>let _223: &amp;ReErased error::ErrorCode;<br align="left"/>let _224: ();<br align="left"/>let mut _225: &amp;ReErased str;<br align="left"/>let _226: &amp;ReErased str;<br align="left"/>let mut _227: &amp;ReErased std::string::String;<br align="left"/>let _228: &amp;ReErased std::string::String;<br align="left"/>let _229: std::string::String;<br align="left"/>let _230: std::string::String;<br align="left"/>let mut _231: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _232: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _233: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _234: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _235: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _236: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _237: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _238: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _239: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _240: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _241: &amp;ReErased u64;<br align="left"/>let _242: &amp;ReErased u64;<br align="left"/>let _243: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _244: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _245: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _246: &amp;ReErased u64;<br align="left"/>let _247: &amp;ReErased u64;<br align="left"/>let mut _248: error::ErrorCode;<br align="left"/>let mut _249: isize;<br align="left"/>let _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _253: ();<br align="left"/>let _254: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _255: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;;<br align="left"/>let mut _256: std::cell::RefMut&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;;<br align="left"/>let mut _257: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;&gt;;<br align="left"/>let mut _258: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _259: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;;<br align="left"/>let mut _260: isize;<br align="left"/>let _261: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _262: !;<br align="left"/>let mut _263: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _264: std::cell::RefMut&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;;<br align="left"/>let mut _265: state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig;<br align="left"/>let mut _266: &amp;ReErased state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _267: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _268: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _269: u16;<br align="left"/>let mut _270: &amp;ReErased mut state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig;<br align="left"/>let mut _271: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;;<br align="left"/>let mut _272: ();<br align="left"/>let mut _273: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _274: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _275: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _278: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _279: &amp;ReErased mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;;<br align="left"/>let mut _280: &amp;ReErased mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;;<br align="left"/>let mut _281: &amp;ReErased mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;;<br align="left"/>let mut _282: &amp;ReErased mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;;<br align="left"/>let mut _283: &amp;ReErased mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;;<br align="left"/>let mut _284: &amp;ReErased mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;ReErased&gt;;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: isize;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug error_code =&gt; _9;<br align="left"/>debug res =&gt; _16;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug base_spot_market =&gt; _38;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug quote_spot_market =&gt; _50;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug phoenix_program_id =&gt; _62;<br align="left"/>debug error_code =&gt; _72;<br align="left"/>debug res =&gt; _79;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug phoenix_market_context =&gt; _98;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug error_code =&gt; _117;<br align="left"/>debug res =&gt; _124;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug error_code =&gt; _155;<br align="left"/>debug res =&gt; _162;<br align="left"/>debug residual =&gt; _180;<br align="left"/>debug val =&gt; _183;<br align="left"/>debug market_step_size =&gt; _184;<br align="left"/>debug valid_step_size =&gt; _188;<br align="left"/>debug error_code =&gt; _204;<br align="left"/>debug res =&gt; _211;<br align="left"/>debug res =&gt; _230;<br align="left"/>debug residual =&gt; _250;<br align="left"/>debug val =&gt; _253;<br align="left"/>debug phoenix_fulfillment_config_key =&gt; _254;<br align="left"/>debug phoenix_fulfillment_config =&gt; _256;<br align="left"/>debug residual =&gt; _261;<br align="left"/>debug val =&gt; _264;<br align="left"/>>;
    bb0__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_6 = Ne(move _7, const _)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::InvalidSpotMarketAccount<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_278 = const _<br/>_20 = &amp;(*_278)<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_9<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _27)</td></tr></table>>];
    bb3__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = [move _26]<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_17 = Arguments::&lt;'_&gt;::new_v1(move _18, move _22)</td></tr></table>>];
    bb4__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = format(move _17)</td></tr></table>>];
    bb5__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>_15 = move _16<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = &lt;String as Deref&gt;::deref(move _13)</td></tr></table>>];
    bb6__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_11 = &amp;(*_12)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_10 = solana_program::log::sol_log(move _11)</td></tr></table>>];
    bb7__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb8__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = const &quot;Cannot add phoenix market to quote asset&quot;<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb9__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>_32 = _9<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _32)<br/>StorageDead(_32)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb11__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_33 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb12__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_4 as Continue).0: ())<br/>_3 = _37<br/>StorageDead(_37)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_279 = deref_copy (_1.1: &amp;mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;'_&gt;)<br/>_43 = &amp;((*_279).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load(move _42)</td></tr></table>>];
    bb13__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb15__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageLive(_44)<br/>_44 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_40 = std::result::Result::&lt;Ref&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _41, move _44)</td></tr></table>>];
    bb17__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb18__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_45 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb19__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_39 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_38 = move _49<br/>StorageDead(_49)<br/>_287 = discriminant(_39)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_280 = deref_copy (_1.1: &amp;mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;'_&gt;)<br/>_55 = &amp;((*_280).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load(move _54)</td></tr></table>>];
    bb20__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb21__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_285 = discriminant(_39)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_56)<br/>_56 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;Ref&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _53, move _56)</td></tr></table>>];
    bb23__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb24__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_57 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb25__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_50 = move _61<br/>StorageDead(_61)<br/>_291 = discriminant(_51)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageLive(_62)<br/></td></tr><tr><td align="left">_62 = phoenix::id()</td></tr></table>>];
    bb26__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb27__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>_289 = discriminant(_51)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_281 = deref_copy (_1.1: &amp;mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;'_&gt;)<br/>_69 = &amp;((*_281).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _69)</td></tr></table>>];
    bb29__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_67 = &amp;_68<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_62<br/></td></tr><tr><td align="left">_66 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _67, move _70)</td></tr></table>>];
    bb30__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb31__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_71)<br/>_71 = ()<br/>_65 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_72)<br/>_72 = error::ErrorCode::InvalidPhoenixProgram<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_277 = const _<br/>_83 = &amp;(*_277)<br/>_82 = &amp;(*_83)<br/>_81 = move _82 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_72<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _90)</td></tr></table>>];
    bb33__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_88 = [move _89]<br/>StorageDead(_89)<br/>_87 = &amp;_88<br/>_86 = &amp;(*_87)<br/>_85 = move _86 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_80 = Arguments::&lt;'_&gt;::new_v1(move _81, move _85)</td></tr></table>>];
    bb34__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = format(move _80)</td></tr></table>>];
    bb35__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>_78 = move _79<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = &lt;String as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb36__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = solana_program::log::sol_log(move _74)</td></tr></table>>];
    bb37__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb38__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_92)<br/>_92 = _72<br/>_65 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _92)<br/>StorageDead(_92)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb40__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_93 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb41__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_64 as Continue).0: ())<br/>_63 = _97<br/>StorageDead(_97)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_282 = deref_copy (_1.1: &amp;mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;'_&gt;)<br/>_102 = &amp;((*_282).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = PhoenixMarketContext::&lt;'_, '_&gt;::new(move _101)</td></tr></table>>];
    bb42__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb43__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;PhoenixMarketContext&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb45__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_103 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb46__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = move ((_99 as Continue).0: state::fulfillment_params::phoenix::PhoenixMarketContext&lt;'_, '_&gt;)<br/>_98 = move _107<br/>StorageDead(_107)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(((_98.1: phoenix::program::MarketHeader).3: phoenix::program::TokenParams).2: anchor_lang::prelude::Pubkey)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_38<br/></td></tr><tr><td align="left">_114 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb47__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_106)<br/>_106 = _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb48__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>_113 = &amp;((*_114).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_111 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _112, move _113)</td></tr></table>>];
    bb50__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb51__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageLive(_116)<br/>_116 = ()<br/>_110 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _116)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageLive(_117)<br/>_117 = error::ErrorCode::InvalidPhoenixMarket<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_276 = const _<br/>_128 = &amp;(*_276)<br/>_127 = &amp;(*_128)<br/>_126 = move _127 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_127)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_117<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _135)</td></tr></table>>];
    bb53__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_133 = [move _134]<br/>StorageDead(_134)<br/>_132 = &amp;_133<br/>_131 = &amp;(*_132)<br/>_130 = move _131 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_125 = Arguments::&lt;'_&gt;::new_v1(move _126, move _130)</td></tr></table>>];
    bb54__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = format(move _125)</td></tr></table>>];
    bb55__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>_123 = move _124<br/>StorageDead(_124)<br/>_122 = &amp;_123<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = &lt;String as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb56__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_119 = &amp;(*_120)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_118 = solana_program::log::sol_log(move _119)</td></tr></table>>];
    bb57__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb58__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = const &quot;Invalid base mint&quot;<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = solana_program::log::sol_log(move _138)</td></tr></table>>];
    bb59__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageLive(_140)<br/>_140 = _117<br/>_110 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _140)<br/>StorageDead(_140)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb61__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_141 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb62__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_109 as Continue).0: ())<br/>_108 = _145<br/>StorageDead(_145)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;(((_98.1: phoenix::program::MarketHeader).5: phoenix::program::TokenParams).2: anchor_lang::prelude::Pubkey)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_50<br/></td></tr><tr><td align="left">_152 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb63__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb64__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_151 = &amp;((*_152).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_149 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _150, move _151)</td></tr></table>>];
    bb66__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb67__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_154)<br/>_154 = ()<br/>_148 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _154)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_155)<br/>_155 = error::ErrorCode::InvalidPhoenixMarket<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_275 = const _<br/>_166 = &amp;(*_275)<br/>_165 = &amp;(*_166)<br/>_164 = move _165 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_155<br/>_173 = &amp;(*_174)<br/></td></tr><tr><td align="left">_172 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _173)</td></tr></table>>];
    bb69__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_171 = [move _172]<br/>StorageDead(_172)<br/>_170 = &amp;_171<br/>_169 = &amp;(*_170)<br/>_168 = move _169 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_163 = Arguments::&lt;'_&gt;::new_v1(move _164, move _168)</td></tr></table>>];
    bb70__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = format(move _163)</td></tr></table>>];
    bb71__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_166)<br/>_161 = move _162<br/>StorageDead(_162)<br/>_160 = &amp;_161<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = &lt;String as Deref&gt;::deref(move _159)</td></tr></table>>];
    bb72__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_157 = &amp;(*_158)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_156 = solana_program::log::sol_log(move _157)</td></tr></table>>];
    bb73__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb74__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = const &quot;Invalid quote mint&quot;<br/>_176 = &amp;(*_177)<br/></td></tr><tr><td align="left">_175 = solana_program::log::sol_log(move _176)</td></tr></table>>];
    bb75__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageLive(_178)<br/>_178 = _155<br/>_148 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _178)<br/>StorageDead(_178)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb77__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_179 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _179)</td></tr></table>>];
    bb78__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_147 as Continue).0: ())<br/>_146 = _183<br/>StorageDead(_183)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = &amp;(_98.1: phoenix::program::MarketHeader)<br/></td></tr><tr><td align="left">_186 = MarketHeader::get_base_lot_size(move _187)</td></tr></table>>];
    bb79__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_182)<br/>_182 = _180<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _182)</td></tr></table>>];
    bb80__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_185 = &amp;_186<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_184 = &lt;BaseAtomsPerBaseLot as phoenix::quantities::WrapperU64&gt;::as_u64(move _185)</td></tr></table>>];
    bb82__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_186)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;_38<br/></td></tr><tr><td align="left">_191 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _192)</td></tr></table>>];
    bb83__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>_190 = ((*_191).25: u64)<br/>StorageLive(_193)<br/>_193 = _184<br/>_189 = Ge(move _190, move _193)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb84__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;_38<br/></td></tr><tr><td align="left">_196 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _197)</td></tr></table>>];
    bb85__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>_188 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>_195 = ((*_196).25: u64)<br/>StorageLive(_198)<br/>_198 = _184<br/></td></tr><tr><td align="left">_194 = core::num::&lt;impl u64&gt;::rem_euclid(move _195, move _198)</td></tr></table>>];
    bb87__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_195)<br/>_188 = Eq(move _194, const 0_u64)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = _188<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb89__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ()<br/>_201 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _203)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = error::ErrorCode::InvalidPhoenixMarket<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_274 = const _<br/>_215 = &amp;(*_274)<br/>_214 = &amp;(*_215)<br/>_213 = move _214 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_214)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;_204<br/>_222 = &amp;(*_223)<br/></td></tr><tr><td align="left">_221 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _222)</td></tr></table>>];
    bb91__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>_220 = [move _221]<br/>StorageDead(_221)<br/>_219 = &amp;_220<br/>_218 = &amp;(*_219)<br/>_217 = move _218 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_212 = Arguments::&lt;'_&gt;::new_v1(move _213, move _217)</td></tr></table>>];
    bb92__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_211 = format(move _212)</td></tr></table>>];
    bb93__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_215)<br/>_210 = move _211<br/>StorageDead(_211)<br/>_209 = &amp;_210<br/>_208 = &amp;(*_209)<br/></td></tr><tr><td align="left">_207 = &lt;String as Deref&gt;::deref(move _208)</td></tr></table>>];
    bb94__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_206 = &amp;(*_207)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">_205 = solana_program::log::sol_log(move _206)</td></tr></table>>];
    bb95__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/></td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb96__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_205)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_273 = const _<br/>_234 = &amp;(*_273)<br/>_233 = &amp;(*_234)<br/>_232 = move _233 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_233)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = &amp;_38<br/></td></tr><tr><td align="left">_243 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _244)</td></tr></table>>];
    bb97__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_242 = &amp;((*_243).25: u64)<br/>_241 = &amp;(*_242)<br/></td></tr><tr><td align="left">_240 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _241)</td></tr></table>>];
    bb98__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_184<br/>_246 = &amp;(*_247)<br/></td></tr><tr><td align="left">_245 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _246)</td></tr></table>>];
    bb99__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_239 = [move _240, move _245]<br/>StorageDead(_245)<br/>StorageDead(_240)<br/>_238 = &amp;_239<br/>_237 = &amp;(*_238)<br/>_236 = move _237 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_231 = Arguments::&lt;'_&gt;::new_v1(move _232, move _236)</td></tr></table>>];
    bb100__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = format(move _231)</td></tr></table>>];
    bb101__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_247)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/>StorageDead(_234)<br/>_229 = move _230<br/>StorageDead(_230)<br/>_228 = &amp;_229<br/>_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_226 = &lt;String as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb102__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_225 = &amp;(*_226)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_224 = solana_program::log::sol_log(move _225)</td></tr></table>>];
    bb103__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb104__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageLive(_248)<br/>_248 = _204<br/>_201 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _248)<br/>StorageDead(_248)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb106__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_249 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb107__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_253)<br/>_253 = ((_200 as Continue).0: ())<br/>_199 = _253<br/>StorageDead(_253)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_283 = deref_copy (_1.1: &amp;mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;'_&gt;)<br/>_255 = &amp;((*_283).6: anchor_lang::prelude::AccountLoader&lt;'_, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;)<br/></td></tr><tr><td align="left">_254 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PhoenixV1FulfillmentConfig&gt; as anchor_lang::Key&gt;::key(move _255)</td></tr></table>>];
    bb108__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_252)<br/>_252 = _250<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _252)</td></tr></table>>];
    bb109__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_284 = deref_copy (_1.1: &amp;mut instructions::admin::InitializePhoenixFulfillmentConfig&lt;'_&gt;)<br/>_259 = &amp;((*_284).6: anchor_lang::prelude::AccountLoader&lt;'_, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;)<br/></td></tr><tr><td align="left">_258 = anchor_lang::prelude::AccountLoader::&lt;'_, PhoenixV1FulfillmentConfig&gt;::load_init(move _259)</td></tr></table>>];
    bb111__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = &lt;std::result::Result&lt;RefMut&lt;'_, PhoenixV1FulfillmentConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _258)</td></tr></table>>];
    bb112__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_260 = discriminant(_257)<br/></td></tr><tr><td align="left">switchInt(move _260)</td></tr></table>>];
    bb113__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_264)<br/>_264 = move ((_257 as Continue).0: std::cell::RefMut&lt;'_, state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig&gt;)<br/>_256 = move _264<br/>StorageDead(_264)<br/>_293 = discriminant(_257)<br/>StorageDead(_257)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = &amp;_98<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;_254<br/>_267 = &amp;(*_268)<br/>StorageLive(_269)<br/>_269 = _2<br/></td></tr><tr><td align="left">_265 = PhoenixMarketContext::&lt;'_, '_&gt;::to_phoenix_v1_fulfillment_config(move _266, move _267, move _269)</td></tr></table>>];
    bb114__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_261)<br/>_261 = move ((_257 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_263)<br/>_263 = move _261<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _263)</td></tr></table>>];
    bb115__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_261)<br/>_295 = discriminant(_257)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = &amp;mut _256<br/></td></tr><tr><td align="left">_270 = &lt;RefMut&lt;'_, PhoenixV1FulfillmentConfig&gt; as DerefMut&gt;::deref_mut(move _271)</td></tr></table>>];
    bb117__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>(*_270) = move _265<br/>StorageDead(_265)<br/>StorageDead(_270)<br/>StorageDead(_268)<br/>StorageLive(_272)<br/>_272 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _272)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">drop(_256)</td></tr></table>>];
    bb118__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_188)<br/>StorageDead(_184)<br/>StorageDead(_98)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb119__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb120__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb124__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb125__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left">return</td></tr></table>>];
    bb127__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">127 (cleanup)</td></tr><tr><td align="left">drop(_256)</td></tr></table>>];
    bb128__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb129__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb130__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb131__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb132__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb133__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb134__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb135__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">135 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb136__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">136 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb137__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">137 (cleanup)</td></tr><tr><td align="left" balign="left">_297 = discriminant(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left" balign="left">_298 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_1079 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">139 (cleanup)</td></tr><tr><td align="left" balign="left">_299 = discriminant(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1079 -> bb2__0_1079 [label="0"];
    bb0__0_1079 -> bb1__0_1079 [label="otherwise"];
    bb1__0_1079 -> bb10__0_1079 [label=""];
    bb2__0_1079 -> bb3__0_1079 [label="return"];
    bb3__0_1079 -> bb4__0_1079 [label="return"];
    bb4__0_1079 -> bb5__0_1079 [label="return"];
    bb5__0_1079 -> bb6__0_1079 [label="return"];
    bb5__0_1079 -> bb135__0_1079 [label="unwind"];
    bb6__0_1079 -> bb7__0_1079 [label="return"];
    bb6__0_1079 -> bb135__0_1079 [label="unwind"];
    bb7__0_1079 -> bb8__0_1079 [label="return"];
    bb7__0_1079 -> bb136__0_1079 [label="unwind"];
    bb8__0_1079 -> bb9__0_1079 [label="return"];
    bb9__0_1079 -> bb10__0_1079 [label=""];
    bb10__0_1079 -> bb11__0_1079 [label="return"];
    bb11__0_1079 -> bb12__0_1079 [label="0"];
    bb11__0_1079 -> bb14__0_1079 [label="1"];
    bb11__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb12__0_1079 -> bb16__0_1079 [label="return"];
    bb14__0_1079 -> bb15__0_1079 [label="return"];
    bb15__0_1079 -> bb126__0_1079 [label=""];
    bb16__0_1079 -> bb17__0_1079 [label="return"];
    bb16__0_1079 -> bb136__0_1079 [label="unwind"];
    bb17__0_1079 -> bb18__0_1079 [label="return"];
    bb17__0_1079 -> bb136__0_1079 [label="unwind"];
    bb18__0_1079 -> bb19__0_1079 [label="0"];
    bb18__0_1079 -> bb20__0_1079 [label="1"];
    bb18__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb19__0_1079 -> bb22__0_1079 [label="return"];
    bb19__0_1079 -> bb134__0_1079 [label="unwind"];
    bb20__0_1079 -> bb21__0_1079 [label="return"];
    bb20__0_1079 -> bb139__0_1079 [label="unwind"];
    bb21__0_1079 -> bb125__0_1079 [label=""];
    bb22__0_1079 -> bb23__0_1079 [label="return"];
    bb22__0_1079 -> bb134__0_1079 [label="unwind"];
    bb23__0_1079 -> bb24__0_1079 [label="return"];
    bb23__0_1079 -> bb134__0_1079 [label="unwind"];
    bb24__0_1079 -> bb25__0_1079 [label="0"];
    bb24__0_1079 -> bb26__0_1079 [label="1"];
    bb24__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb25__0_1079 -> bb28__0_1079 [label="return"];
    bb25__0_1079 -> bb133__0_1079 [label="unwind"];
    bb26__0_1079 -> bb27__0_1079 [label="return"];
    bb26__0_1079 -> bb138__0_1079 [label="unwind"];
    bb27__0_1079 -> bb124__0_1079 [label=""];
    bb28__0_1079 -> bb29__0_1079 [label="return"];
    bb28__0_1079 -> bb133__0_1079 [label="unwind"];
    bb29__0_1079 -> bb30__0_1079 [label="return"];
    bb29__0_1079 -> bb133__0_1079 [label="unwind"];
    bb30__0_1079 -> bb32__0_1079 [label="0"];
    bb30__0_1079 -> bb31__0_1079 [label="otherwise"];
    bb31__0_1079 -> bb39__0_1079 [label=""];
    bb32__0_1079 -> bb33__0_1079 [label="return"];
    bb32__0_1079 -> bb133__0_1079 [label="unwind"];
    bb33__0_1079 -> bb34__0_1079 [label="return"];
    bb33__0_1079 -> bb133__0_1079 [label="unwind"];
    bb34__0_1079 -> bb35__0_1079 [label="return"];
    bb34__0_1079 -> bb133__0_1079 [label="unwind"];
    bb35__0_1079 -> bb36__0_1079 [label="return"];
    bb35__0_1079 -> bb132__0_1079 [label="unwind"];
    bb36__0_1079 -> bb37__0_1079 [label="return"];
    bb36__0_1079 -> bb132__0_1079 [label="unwind"];
    bb37__0_1079 -> bb38__0_1079 [label="return"];
    bb37__0_1079 -> bb133__0_1079 [label="unwind"];
    bb38__0_1079 -> bb39__0_1079 [label=""];
    bb39__0_1079 -> bb40__0_1079 [label="return"];
    bb39__0_1079 -> bb133__0_1079 [label="unwind"];
    bb40__0_1079 -> bb41__0_1079 [label="0"];
    bb40__0_1079 -> bb42__0_1079 [label="1"];
    bb40__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb41__0_1079 -> bb44__0_1079 [label="return"];
    bb41__0_1079 -> bb133__0_1079 [label="unwind"];
    bb42__0_1079 -> bb43__0_1079 [label="return"];
    bb42__0_1079 -> bb133__0_1079 [label="unwind"];
    bb43__0_1079 -> bb123__0_1079 [label=""];
    bb44__0_1079 -> bb45__0_1079 [label="return"];
    bb44__0_1079 -> bb133__0_1079 [label="unwind"];
    bb45__0_1079 -> bb46__0_1079 [label="0"];
    bb45__0_1079 -> bb47__0_1079 [label="1"];
    bb45__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb46__0_1079 -> bb49__0_1079 [label="return"];
    bb46__0_1079 -> bb133__0_1079 [label="unwind"];
    bb47__0_1079 -> bb48__0_1079 [label="return"];
    bb47__0_1079 -> bb133__0_1079 [label="unwind"];
    bb48__0_1079 -> bb122__0_1079 [label=""];
    bb49__0_1079 -> bb50__0_1079 [label="return"];
    bb49__0_1079 -> bb133__0_1079 [label="unwind"];
    bb50__0_1079 -> bb52__0_1079 [label="0"];
    bb50__0_1079 -> bb51__0_1079 [label="otherwise"];
    bb51__0_1079 -> bb60__0_1079 [label=""];
    bb52__0_1079 -> bb53__0_1079 [label="return"];
    bb52__0_1079 -> bb133__0_1079 [label="unwind"];
    bb53__0_1079 -> bb54__0_1079 [label="return"];
    bb53__0_1079 -> bb133__0_1079 [label="unwind"];
    bb54__0_1079 -> bb55__0_1079 [label="return"];
    bb54__0_1079 -> bb133__0_1079 [label="unwind"];
    bb55__0_1079 -> bb56__0_1079 [label="return"];
    bb55__0_1079 -> bb131__0_1079 [label="unwind"];
    bb56__0_1079 -> bb57__0_1079 [label="return"];
    bb56__0_1079 -> bb131__0_1079 [label="unwind"];
    bb57__0_1079 -> bb58__0_1079 [label="return"];
    bb57__0_1079 -> bb133__0_1079 [label="unwind"];
    bb58__0_1079 -> bb59__0_1079 [label="return"];
    bb58__0_1079 -> bb133__0_1079 [label="unwind"];
    bb59__0_1079 -> bb60__0_1079 [label=""];
    bb60__0_1079 -> bb61__0_1079 [label="return"];
    bb60__0_1079 -> bb133__0_1079 [label="unwind"];
    bb61__0_1079 -> bb62__0_1079 [label="0"];
    bb61__0_1079 -> bb63__0_1079 [label="1"];
    bb61__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb62__0_1079 -> bb65__0_1079 [label="return"];
    bb62__0_1079 -> bb133__0_1079 [label="unwind"];
    bb63__0_1079 -> bb64__0_1079 [label="return"];
    bb63__0_1079 -> bb133__0_1079 [label="unwind"];
    bb64__0_1079 -> bb122__0_1079 [label=""];
    bb65__0_1079 -> bb66__0_1079 [label="return"];
    bb65__0_1079 -> bb133__0_1079 [label="unwind"];
    bb66__0_1079 -> bb68__0_1079 [label="0"];
    bb66__0_1079 -> bb67__0_1079 [label="otherwise"];
    bb67__0_1079 -> bb76__0_1079 [label=""];
    bb68__0_1079 -> bb69__0_1079 [label="return"];
    bb68__0_1079 -> bb133__0_1079 [label="unwind"];
    bb69__0_1079 -> bb70__0_1079 [label="return"];
    bb69__0_1079 -> bb133__0_1079 [label="unwind"];
    bb70__0_1079 -> bb71__0_1079 [label="return"];
    bb70__0_1079 -> bb133__0_1079 [label="unwind"];
    bb71__0_1079 -> bb72__0_1079 [label="return"];
    bb71__0_1079 -> bb130__0_1079 [label="unwind"];
    bb72__0_1079 -> bb73__0_1079 [label="return"];
    bb72__0_1079 -> bb130__0_1079 [label="unwind"];
    bb73__0_1079 -> bb74__0_1079 [label="return"];
    bb73__0_1079 -> bb133__0_1079 [label="unwind"];
    bb74__0_1079 -> bb75__0_1079 [label="return"];
    bb74__0_1079 -> bb133__0_1079 [label="unwind"];
    bb75__0_1079 -> bb76__0_1079 [label=""];
    bb76__0_1079 -> bb77__0_1079 [label="return"];
    bb76__0_1079 -> bb133__0_1079 [label="unwind"];
    bb77__0_1079 -> bb78__0_1079 [label="0"];
    bb77__0_1079 -> bb79__0_1079 [label="1"];
    bb77__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb78__0_1079 -> bb81__0_1079 [label="return"];
    bb78__0_1079 -> bb133__0_1079 [label="unwind"];
    bb79__0_1079 -> bb80__0_1079 [label="return"];
    bb79__0_1079 -> bb133__0_1079 [label="unwind"];
    bb80__0_1079 -> bb122__0_1079 [label=""];
    bb81__0_1079 -> bb82__0_1079 [label="return"];
    bb81__0_1079 -> bb133__0_1079 [label="unwind"];
    bb82__0_1079 -> bb83__0_1079 [label="return"];
    bb82__0_1079 -> bb133__0_1079 [label="unwind"];
    bb83__0_1079 -> bb85__0_1079 [label="0"];
    bb83__0_1079 -> bb84__0_1079 [label="otherwise"];
    bb84__0_1079 -> bb86__0_1079 [label="return"];
    bb84__0_1079 -> bb133__0_1079 [label="unwind"];
    bb85__0_1079 -> bb88__0_1079 [label=""];
    bb86__0_1079 -> bb87__0_1079 [label="return"];
    bb86__0_1079 -> bb133__0_1079 [label="unwind"];
    bb87__0_1079 -> bb88__0_1079 [label=""];
    bb88__0_1079 -> bb90__0_1079 [label="0"];
    bb88__0_1079 -> bb89__0_1079 [label="otherwise"];
    bb89__0_1079 -> bb105__0_1079 [label=""];
    bb90__0_1079 -> bb91__0_1079 [label="return"];
    bb90__0_1079 -> bb133__0_1079 [label="unwind"];
    bb91__0_1079 -> bb92__0_1079 [label="return"];
    bb91__0_1079 -> bb133__0_1079 [label="unwind"];
    bb92__0_1079 -> bb93__0_1079 [label="return"];
    bb92__0_1079 -> bb133__0_1079 [label="unwind"];
    bb93__0_1079 -> bb94__0_1079 [label="return"];
    bb93__0_1079 -> bb129__0_1079 [label="unwind"];
    bb94__0_1079 -> bb95__0_1079 [label="return"];
    bb94__0_1079 -> bb129__0_1079 [label="unwind"];
    bb95__0_1079 -> bb96__0_1079 [label="return"];
    bb95__0_1079 -> bb133__0_1079 [label="unwind"];
    bb96__0_1079 -> bb97__0_1079 [label="return"];
    bb96__0_1079 -> bb133__0_1079 [label="unwind"];
    bb97__0_1079 -> bb98__0_1079 [label="return"];
    bb97__0_1079 -> bb133__0_1079 [label="unwind"];
    bb98__0_1079 -> bb99__0_1079 [label="return"];
    bb98__0_1079 -> bb133__0_1079 [label="unwind"];
    bb99__0_1079 -> bb100__0_1079 [label="return"];
    bb99__0_1079 -> bb133__0_1079 [label="unwind"];
    bb100__0_1079 -> bb101__0_1079 [label="return"];
    bb100__0_1079 -> bb133__0_1079 [label="unwind"];
    bb101__0_1079 -> bb102__0_1079 [label="return"];
    bb101__0_1079 -> bb128__0_1079 [label="unwind"];
    bb102__0_1079 -> bb103__0_1079 [label="return"];
    bb102__0_1079 -> bb128__0_1079 [label="unwind"];
    bb103__0_1079 -> bb104__0_1079 [label="return"];
    bb103__0_1079 -> bb133__0_1079 [label="unwind"];
    bb104__0_1079 -> bb105__0_1079 [label=""];
    bb105__0_1079 -> bb106__0_1079 [label="return"];
    bb105__0_1079 -> bb133__0_1079 [label="unwind"];
    bb106__0_1079 -> bb107__0_1079 [label="0"];
    bb106__0_1079 -> bb108__0_1079 [label="1"];
    bb106__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb107__0_1079 -> bb110__0_1079 [label="return"];
    bb107__0_1079 -> bb133__0_1079 [label="unwind"];
    bb108__0_1079 -> bb109__0_1079 [label="return"];
    bb108__0_1079 -> bb133__0_1079 [label="unwind"];
    bb109__0_1079 -> bb121__0_1079 [label=""];
    bb110__0_1079 -> bb111__0_1079 [label="return"];
    bb110__0_1079 -> bb133__0_1079 [label="unwind"];
    bb111__0_1079 -> bb112__0_1079 [label="return"];
    bb111__0_1079 -> bb133__0_1079 [label="unwind"];
    bb112__0_1079 -> bb113__0_1079 [label="0"];
    bb112__0_1079 -> bb114__0_1079 [label="1"];
    bb112__0_1079 -> bb13__0_1079 [label="otherwise"];
    bb113__0_1079 -> bb116__0_1079 [label="return"];
    bb113__0_1079 -> bb127__0_1079 [label="unwind"];
    bb114__0_1079 -> bb115__0_1079 [label="return"];
    bb114__0_1079 -> bb137__0_1079 [label="unwind"];
    bb115__0_1079 -> bb121__0_1079 [label=""];
    bb116__0_1079 -> bb117__0_1079 [label="return"];
    bb116__0_1079 -> bb127__0_1079 [label="unwind"];
    bb117__0_1079 -> bb118__0_1079 [label="return"];
    bb117__0_1079 -> bb133__0_1079 [label="unwind"];
    bb118__0_1079 -> bb119__0_1079 [label="return"];
    bb118__0_1079 -> bb134__0_1079 [label="unwind"];
    bb119__0_1079 -> bb120__0_1079 [label="return"];
    bb119__0_1079 -> bb136__0_1079 [label="unwind"];
    bb120__0_1079 -> bb126__0_1079 [label=""];
    bb121__0_1079 -> bb122__0_1079 [label=""];
    bb122__0_1079 -> bb123__0_1079 [label=""];
    bb123__0_1079 -> bb124__0_1079 [label="return"];
    bb123__0_1079 -> bb134__0_1079 [label="unwind"];
    bb124__0_1079 -> bb125__0_1079 [label="return"];
    bb124__0_1079 -> bb136__0_1079 [label="unwind"];
    bb125__0_1079 -> bb126__0_1079 [label=""];
    bb127__0_1079 -> bb133__0_1079 [label="return"];
    bb128__0_1079 -> bb133__0_1079 [label="return"];
    bb129__0_1079 -> bb133__0_1079 [label="return"];
    bb130__0_1079 -> bb133__0_1079 [label="return"];
    bb131__0_1079 -> bb133__0_1079 [label="return"];
    bb132__0_1079 -> bb133__0_1079 [label="return"];
    bb133__0_1079 -> bb134__0_1079 [label="return"];
    bb134__0_1079 -> bb136__0_1079 [label="return"];
    bb135__0_1079 -> bb136__0_1079 [label="return"];
    bb137__0_1079 -> bb133__0_1079 [label=""];
    bb138__0_1079 -> bb134__0_1079 [label=""];
    bb139__0_1079 -> bb136__0_1079 [label=""];
}
