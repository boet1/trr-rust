// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1703:1: 1703:15>::validate_fuel_overflow` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1703:1: 1703:15>::validate_fuel_overflow(_1: &UserStats, _2: &Option<anchor_lang::prelude::AccountLoader<'_, FuelOverflow>>) -> std::result::Result<(), error::ErrorCode> {
    debug self => _1;
    debug fuel_overflow => _2;
    let mut _0: std::result::Result<(), error::ErrorCode>;
    let mut _3: isize;
    let mut _4: bool;
    let mut _5: u8;
    let mut _6: !;
    let _7: error::ErrorCode;
    let _8: ();
    let mut _9: &str;
    let _10: &str;
    let mut _11: &std::string::String;
    let _12: &std::string::String;
    let _13: std::string::String;
    let mut _15: std::fmt::Arguments<'_>;
    let mut _16: &[&str];
    let mut _17: &[&str; 2];
    let _18: &[&str; 2];
    let _19: [&str; 2];
    let mut _20: &[core::fmt::rt::Argument<'_>];
    let mut _21: &[core::fmt::rt::Argument<'_>; 1];
    let _22: &[core::fmt::rt::Argument<'_>; 1];
    let _23: [core::fmt::rt::Argument<'_>; 1];
    let mut _24: core::fmt::rt::Argument<'_>;
    let mut _25: &error::ErrorCode;
    let _26: &error::ErrorCode;
    let _27: ();
    let mut _28: &str;
    let _29: &str;
    let mut _30: error::ErrorCode;
    let mut _31: ();
    let _32: &anchor_lang::prelude::AccountLoader<'_, state::user::FuelOverflow>;
    let mut _33: bool;
    let mut _34: u8;
    let mut _36: (anchor_lang::prelude::Pubkey, u8);
    let mut _37: &[&[u8]];
    let mut _38: &[&[u8]; 2];
    let _39: &[&[u8]; 2];
    let _40: [&[u8]; 2];
    let mut _41: &[u8];
    let mut _42: &[u8; 13];
    let _43: &[u8; 13];
    let mut _44: &[u8];
    let _45: &[u8];
    let mut _46: &anchor_lang::prelude::Pubkey;
    let mut _47: &anchor_lang::prelude::Pubkey;
    let _48: &anchor_lang::prelude::Pubkey;
    let _49: anchor_lang::prelude::Pubkey;
    let mut _51: &anchor_lang::prelude::AccountInfo<'_>;
    let _52: anchor_lang::prelude::AccountInfo<'_>;
    let mut _53: &anchor_lang::prelude::AccountLoader<'_, state::user::FuelOverflow>;
    let mut _54: bool;
    let mut _55: &anchor_lang::prelude::Pubkey;
    let mut _56: &anchor_lang::prelude::Pubkey;
    let mut _57: !;
    let _59: ();
    let mut _60: &str;
    let _61: &str;
    let mut _62: &std::string::String;
    let _63: &std::string::String;
    let _64: std::string::String;
    let mut _66: std::fmt::Arguments<'_>;
    let mut _67: &[&str];
    let mut _68: &[&str; 2];
    let _69: &[&str; 2];
    let _70: [&str; 2];
    let mut _71: &[core::fmt::rt::Argument<'_>];
    let mut _72: &[core::fmt::rt::Argument<'_>; 1];
    let _73: &[core::fmt::rt::Argument<'_>; 1];
    let _74: [core::fmt::rt::Argument<'_>; 1];
    let mut _75: core::fmt::rt::Argument<'_>;
    let mut _76: &error::ErrorCode;
    let _77: &error::ErrorCode;
    let _78: ();
    let mut _79: &str;
    let _80: &str;
    let mut _81: &std::string::String;
    let _82: &std::string::String;
    let _83: std::string::String;
    let mut _85: std::fmt::Arguments<'_>;
    let mut _86: &[&str];
    let mut _87: &[&str; 2];
    let _88: &[&str; 2];
    let _89: [&str; 2];
    let mut _90: &[core::fmt::rt::Argument<'_>];
    let mut _91: &[core::fmt::rt::Argument<'_>; 2];
    let _92: &[core::fmt::rt::Argument<'_>; 2];
    let _93: [core::fmt::rt::Argument<'_>; 2];
    let mut _94: core::fmt::rt::Argument<'_>;
    let mut _95: &anchor_lang::prelude::Pubkey;
    let _96: &anchor_lang::prelude::Pubkey;
    let mut _97: core::fmt::rt::Argument<'_>;
    let mut _98: &anchor_lang::prelude::Pubkey;
    let _99: &anchor_lang::prelude::Pubkey;
    let mut _100: error::ErrorCode;
    let mut _101: ();
    let mut _102: !;
    let _104: ();
    let mut _105: &str;
    let _106: &str;
    let mut _107: &std::string::String;
    let _108: &std::string::String;
    let _109: std::string::String;
    let mut _111: std::fmt::Arguments<'_>;
    let mut _112: &[&str];
    let mut _113: &[&str; 2];
    let _114: &[&str; 2];
    let _115: [&str; 2];
    let mut _116: &[core::fmt::rt::Argument<'_>];
    let mut _117: &[core::fmt::rt::Argument<'_>; 1];
    let _118: &[core::fmt::rt::Argument<'_>; 1];
    let _119: [core::fmt::rt::Argument<'_>; 1];
    let mut _120: core::fmt::rt::Argument<'_>;
    let mut _121: &error::ErrorCode;
    let _122: &error::ErrorCode;
    let _123: ();
    let mut _124: &str;
    let _125: &str;
    let mut _126: error::ErrorCode;
    scope 1 {
        debug ec => _7;
        let _14: std::string::String;
        let mut _130: &[&str; 2];
        scope 2 {
            debug res => _14;
        }
    }
    scope 3 {
        debug fuel_overflow => _32;
        let _35: anchor_lang::prelude::Pubkey;
        let _103: error::ErrorCode;
        scope 4 {
            debug expected => _35;
            let _50: anchor_lang::prelude::Pubkey;
            scope 5 {
                debug actual => _50;
                let _58: error::ErrorCode;
                scope 6 {
                    debug ec => _58;
                    let _65: std::string::String;
                    let _84: std::string::String;
                    let mut _127: &[&str; 2];
                    let mut _128: &[&str; 2];
                    scope 7 {
                        debug res => _65;
                    }
                    scope 8 {
                        debug res => _84;
                    }
                }
            }
        }
        scope 9 {
            debug ec => _103;
            let _110: std::string::String;
            let mut _129: &[&str; 2];
            scope 10 {
                debug res => _110;
            }
        }
    }

    bb0: {
        _3 = discriminant((*_2));
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_32);
        _32 = &(((*_2) as Some).0: anchor_lang::prelude::AccountLoader<'_, state::user::FuelOverflow>);
        StorageLive(_33);
        StorageLive(_34);
        _34 = ((*_1).16: u8);
        _33 = FuelOverflowStatus::exists(move _34) -> [return: bb14, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = ((*_1).16: u8);
        _4 = FuelOverflowStatus::exists(move _5) -> [return: bb4, unwind continue];
    }

    bb4: {
        switchInt(move _4) -> [0: bb13, otherwise: bb5];
    }

    bb5: {
        StorageDead(_5);
        StorageLive(_7);
        _7 = error::ErrorCode::FuelOverflowAccountNotFound;
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _130 = const _;
        _18 = &(*_130);
        _17 = &(*_18);
        _16 = move _17 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_17);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &_7;
        _25 = &(*_26);
        _24 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _25) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_25);
        _23 = [move _24];
        StorageDead(_24);
        _22 = &_23;
        _21 = &(*_22);
        _20 = move _21 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_21);
        _15 = Arguments::<'_>::new_v1(move _16, move _20) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_20);
        StorageDead(_16);
        _14 = format(move _15) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_15);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_18);
        _13 = move _14;
        StorageDead(_14);
        _12 = &_13;
        _11 = &(*_12);
        _10 = <String as Deref>::deref(move _11) -> [return: bb9, unwind: bb52];
    }

    bb9: {
        _9 = &(*_10);
        StorageDead(_11);
        _8 = solana_program::log::sol_log(move _9) -> [return: bb10, unwind: bb52];
    }

    bb10: {
        StorageDead(_9);
        drop(_13) -> [return: bb11, unwind: bb53];
    }

    bb11: {
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_10);
        StorageDead(_8);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = const "FuelOverflow missing in remaining accounts";
        _28 = &(*_29);
        _27 = solana_program::log::sol_log(move _28) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_28);
        StorageDead(_29);
        StorageDead(_27);
        StorageLive(_30);
        _30 = _7;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _30);
        StorageDead(_30);
        StorageDead(_7);
        StorageDead(_4);
        goto -> bb47;
    }

    bb13: {
        StorageDead(_5);
        StorageLive(_31);
        _31 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _31);
        StorageDead(_31);
        StorageDead(_4);
        goto -> bb47;
    }

    bb14: {
        switchInt(move _33) -> [0: bb38, otherwise: bb15];
    }

    bb15: {
        StorageDead(_34);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = const b"fuel_overflow";
        _42 = &(*_43);
        _41 = move _42 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_42);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &((*_1).0: anchor_lang::prelude::Pubkey);
        _45 = <anchor_lang::prelude::Pubkey as AsRef<[u8]>>::as_ref(move _46) -> [return: bb16, unwind continue];
    }

    bb16: {
        _44 = &(*_45);
        StorageDead(_46);
        _40 = [move _41, move _44];
        StorageDead(_44);
        StorageDead(_41);
        _39 = &_40;
        _38 = &(*_39);
        _37 = move _38 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_38);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = id() -> [return: bb17, unwind continue];
    }

    bb17: {
        _48 = &_49;
        _47 = &(*_48);
        _36 = anchor_lang::prelude::Pubkey::find_program_address(move _37, move _47) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_47);
        StorageDead(_37);
        StorageLive(_35);
        _35 = (_36.0: anchor_lang::prelude::Pubkey);
        StorageDead(_49);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_43);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_36);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = &(*_32);
        _52 = <anchor_lang::prelude::AccountLoader<'_, FuelOverflow> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _53) -> [return: bb19, unwind continue];
    }

    bb19: {
        _51 = &_52;
        StorageDead(_53);
        _50 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::Key>::key(move _51) -> [return: bb20, unwind: bb51];
    }

    bb20: {
        StorageDead(_51);
        drop(_52) -> [return: bb21, unwind: bb53];
    }

    bb21: {
        StorageDead(_52);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &_50;
        StorageLive(_56);
        _56 = &_35;
        _54 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _55, move _56) -> [return: bb22, unwind continue];
    }

    bb22: {
        switchInt(move _54) -> [0: bb37, otherwise: bb23];
    }

    bb23: {
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_58);
        _58 = error::ErrorCode::InvalidPDA;
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        _128 = const _;
        _69 = &(*_128);
        _68 = &(*_69);
        _67 = move _68 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_68);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &_58;
        _76 = &(*_77);
        _75 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _76) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_76);
        _74 = [move _75];
        StorageDead(_75);
        _73 = &_74;
        _72 = &(*_73);
        _71 = move _72 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_72);
        _66 = Arguments::<'_>::new_v1(move _67, move _71) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_71);
        StorageDead(_67);
        _65 = format(move _66) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_66);
        StorageDead(_77);
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_69);
        _64 = move _65;
        StorageDead(_65);
        _63 = &_64;
        _62 = &(*_63);
        _61 = <String as Deref>::deref(move _62) -> [return: bb27, unwind: bb50];
    }

    bb27: {
        _60 = &(*_61);
        StorageDead(_62);
        _59 = solana_program::log::sol_log(move _60) -> [return: bb28, unwind: bb50];
    }

    bb28: {
        StorageDead(_60);
        drop(_64) -> [return: bb29, unwind: bb53];
    }

    bb29: {
        StorageDead(_64);
        StorageDead(_63);
        StorageDead(_61);
        StorageDead(_59);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        StorageLive(_85);
        StorageLive(_86);
        StorageLive(_87);
        StorageLive(_88);
        _127 = const _;
        _88 = &(*_127);
        _87 = &(*_88);
        _86 = move _87 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_87);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        StorageLive(_96);
        _96 = &_35;
        _95 = &(*_96);
        _94 = core::fmt::rt::Argument::<'_>::new_display::<anchor_lang::prelude::Pubkey>(move _95) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_95);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        _99 = &_50;
        _98 = &(*_99);
        _97 = core::fmt::rt::Argument::<'_>::new_display::<anchor_lang::prelude::Pubkey>(move _98) -> [return: bb31, unwind continue];
    }

    bb31: {
        StorageDead(_98);
        _93 = [move _94, move _97];
        StorageDead(_97);
        StorageDead(_94);
        _92 = &_93;
        _91 = &(*_92);
        _90 = move _91 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_91);
        _85 = Arguments::<'_>::new_v1(move _86, move _90) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_90);
        StorageDead(_86);
        _84 = format(move _85) -> [return: bb33, unwind continue];
    }

    bb33: {
        StorageDead(_85);
        StorageDead(_99);
        StorageDead(_96);
        StorageDead(_93);
        StorageDead(_92);
        StorageDead(_88);
        _83 = move _84;
        StorageDead(_84);
        _82 = &_83;
        _81 = &(*_82);
        _80 = <String as Deref>::deref(move _81) -> [return: bb34, unwind: bb49];
    }

    bb34: {
        _79 = &(*_80);
        StorageDead(_81);
        _78 = solana_program::log::sol_log(move _79) -> [return: bb35, unwind: bb49];
    }

    bb35: {
        StorageDead(_79);
        drop(_83) -> [return: bb36, unwind: bb53];
    }

    bb36: {
        StorageDead(_83);
        StorageDead(_82);
        StorageDead(_80);
        StorageDead(_78);
        StorageLive(_100);
        _100 = _58;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _100);
        StorageDead(_100);
        StorageDead(_58);
        StorageDead(_54);
        StorageDead(_50);
        StorageDead(_35);
        goto -> bb46;
    }

    bb37: {
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_101);
        _101 = ();
        _0 = std::result::Result::<(), error::ErrorCode>::Ok(move _101);
        StorageDead(_101);
        StorageDead(_54);
        StorageDead(_50);
        StorageDead(_35);
        StorageDead(_33);
        StorageDead(_32);
        goto -> bb47;
    }

    bb38: {
        StorageDead(_34);
        StorageLive(_103);
        _103 = error::ErrorCode::FuelOverflowAccountNotFound;
        StorageLive(_104);
        StorageLive(_105);
        StorageLive(_106);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        StorageLive(_110);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        _129 = const _;
        _114 = &(*_129);
        _113 = &(*_114);
        _112 = move _113 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_113);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        StorageLive(_120);
        StorageLive(_121);
        StorageLive(_122);
        _122 = &_103;
        _121 = &(*_122);
        _120 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _121) -> [return: bb39, unwind continue];
    }

    bb39: {
        StorageDead(_121);
        _119 = [move _120];
        StorageDead(_120);
        _118 = &_119;
        _117 = &(*_118);
        _116 = move _117 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_117);
        _111 = Arguments::<'_>::new_v1(move _112, move _116) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_116);
        StorageDead(_112);
        _110 = format(move _111) -> [return: bb41, unwind continue];
    }

    bb41: {
        StorageDead(_111);
        StorageDead(_122);
        StorageDead(_119);
        StorageDead(_118);
        StorageDead(_114);
        _109 = move _110;
        StorageDead(_110);
        _108 = &_109;
        _107 = &(*_108);
        _106 = <String as Deref>::deref(move _107) -> [return: bb42, unwind: bb48];
    }

    bb42: {
        _105 = &(*_106);
        StorageDead(_107);
        _104 = solana_program::log::sol_log(move _105) -> [return: bb43, unwind: bb48];
    }

    bb43: {
        StorageDead(_105);
        drop(_109) -> [return: bb44, unwind: bb53];
    }

    bb44: {
        StorageDead(_109);
        StorageDead(_108);
        StorageDead(_106);
        StorageDead(_104);
        StorageLive(_123);
        StorageLive(_124);
        StorageLive(_125);
        _125 = const "Unexpected FuelOverflow account provided in remaining accounts";
        _124 = &(*_125);
        _123 = solana_program::log::sol_log(move _124) -> [return: bb45, unwind continue];
    }

    bb45: {
        StorageDead(_124);
        StorageDead(_125);
        StorageDead(_123);
        StorageLive(_126);
        _126 = _103;
        _0 = std::result::Result::<(), error::ErrorCode>::Err(move _126);
        StorageDead(_126);
        StorageDead(_103);
        goto -> bb46;
    }

    bb46: {
        StorageDead(_33);
        StorageDead(_32);
        goto -> bb47;
    }

    bb47: {
        return;
    }

    bb48 (cleanup): {
        drop(_109) -> [return: bb53, unwind terminate(cleanup)];
    }

    bb49 (cleanup): {
        drop(_83) -> [return: bb53, unwind terminate(cleanup)];
    }

    bb50 (cleanup): {
        drop(_64) -> [return: bb53, unwind terminate(cleanup)];
    }

    bb51 (cleanup): {
        drop(_52) -> [return: bb53, unwind terminate(cleanup)];
    }

    bb52 (cleanup): {
        drop(_13) -> [return: bb53, unwind terminate(cleanup)];
    }

    bb53 (cleanup): {
        resume;
    }
}

alloc321 (size: 13, align: 1) {
    66 75 65 6c 5f 6f 76 65 72 66 6c 6f 77          │ fuel_overflow
}
