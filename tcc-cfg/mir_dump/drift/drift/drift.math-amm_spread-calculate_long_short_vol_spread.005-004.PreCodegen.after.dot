digraph Mir_0_1867 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_long_short_vol_spread(_1: u64, _2: u64, _3: u64, _4: u64, _5: u64, _6: u64, _7: u64) -&gt; std::result::Result&lt;(u64, u64), error::ErrorCode&gt;<br align="left"/>let _8: u128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _13: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u64;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u128;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: u128;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: u128;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: u128;<br align="left"/>let _59: u128;<br align="left"/>let mut _60: u128;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _62: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: u128;<br align="left"/>let mut _69: u128;<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _71: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _72: u128;<br align="left"/>let mut _73: isize;<br align="left"/>let _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _75: !;<br align="left"/>let mut _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _77: u128;<br align="left"/>let _78: u128;<br align="left"/>let mut _79: bool;<br align="left"/>let _80: u128;<br align="left"/>let _81: u128;<br align="left"/>let mut _82: u128;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _85: u128;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _87: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _88: u128;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _90: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _91: u64;<br align="left"/>let mut _92: isize;<br align="left"/>let _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _96: u128;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: u128;<br align="left"/>let mut _102: u128;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _106: u64;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: u128;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u128;<br align="left"/>let mut _117: u128;<br align="left"/>let mut _118: u128;<br align="left"/>let _119: u128;<br align="left"/>let mut _120: u128;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _122: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _123: u128;<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _125: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _126: u128;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _128: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: u128;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: u128;<br align="left"/>let mut _140: u128;<br align="left"/>let mut _141: u128;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _143: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _144: u64;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: u128;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: u128;<br align="left"/>let mut _155: u128;<br align="left"/>let mut _156: u128;<br align="left"/>let _157: u64;<br align="left"/>let mut _158: bool;<br align="left"/>let mut _159: u64;<br align="left"/>let mut _160: u64;<br align="left"/>let mut _161: bool;<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _163: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _164: u64;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: u64;<br align="left"/>let mut _170: (u64, u64);<br align="left"/>let mut _171: u64;<br align="left"/>let mut _172: u64;<br align="left"/>let mut _173: u64;<br align="left"/>let mut _174: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _175: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _176: u128;<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _178: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _179: u128;<br align="left"/>let mut _180: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _181: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _182: u128;<br align="left"/>let mut _183: u128;<br align="left"/>let mut _184: isize;<br align="left"/>let _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _186: !;<br align="left"/>let mut _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _188: u128;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _193: u128;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: u64;<br align="left"/>let mut _199: u64;<br align="left"/>let mut _200: u64;<br align="left"/>let mut _201: u64;<br align="left"/>let mut _202: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _203: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _204: u128;<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _206: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _207: u128;<br align="left"/>let mut _208: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _209: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _210: u128;<br align="left"/>let mut _211: u128;<br align="left"/>let mut _212: isize;<br align="left"/>let _213: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _214: !;<br align="left"/>let mut _215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _216: u128;<br align="left"/>let mut _217: isize;<br align="left"/>let _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _219: !;<br align="left"/>let mut _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _221: u128;<br align="left"/>let mut _222: isize;<br align="left"/>let _223: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _224: !;<br align="left"/>let mut _225: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _226: u64;<br align="left"/>debug last_oracle_conf_pct =&gt; _1;<br align="left"/>debug reserve_price =&gt; _2;<br align="left"/>debug mark_std =&gt; _3;<br align="left"/>debug oracle_std =&gt; _4;<br align="left"/>debug long_intensity_volume =&gt; _5;<br align="left"/>debug short_intensity_volume =&gt; _6;<br align="left"/>debug volume_24h =&gt; _7;<br align="left"/>debug market_avg_std_pct =&gt; _8;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug vol_spread =&gt; _59;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _74;<br align="left"/>debug val =&gt; _77;<br align="left"/>debug factor_clamp_min =&gt; _78;<br align="left"/>debug factor_clamp_max =&gt; _80;<br align="left"/>debug long_vol_spread_factor =&gt; _81;<br align="left"/>debug residual =&gt; _93;<br align="left"/>debug val =&gt; _96;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug short_vol_spread_factor =&gt; _119;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug conf_component =&gt; _157;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug residual =&gt; _185;<br align="left"/>debug val =&gt; _188;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug residual =&gt; _213;<br align="left"/>debug val =&gt; _216;<br align="left"/>debug residual =&gt; _218;<br align="left"/>debug val =&gt; _221;<br align="left"/>debug residual =&gt; _223;<br align="left"/>debug val =&gt; _226;<br align="left"/>>;
    bb0__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _4<br/>StorageLive(_24)<br/>_24 = _3<br/></td></tr><tr><td align="left">_22 = &lt;u64 as SafeMath&gt;::safe_add(move _23, move _24)</td></tr></table>>];
    bb1__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb2__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_25 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb3__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_21 as Continue).0: u64)<br/>_20 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_19 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _20)</td></tr></table>>];
    bb4__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb6__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_30 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb9__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_18 as Continue).0: u128)<br/>_17 = _34<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_16 = &lt;u128 as SafeMath&gt;::safe_mul(move _17, const _)</td></tr></table>>];
    bb10__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb11__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb13__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_35 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb14__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_15 as Continue).0: u128)<br/>_14 = _39<br/>StorageDead(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _2<br/></td></tr><tr><td align="left">_42 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _43)</td></tr></table>>];
    bb15__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb16__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb18__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_44 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb19__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_41 as Continue).0: u128)<br/>_40 = _48<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_13 = &lt;u128 as SafeMath&gt;::safe_div(move _14, move _40)</td></tr></table>>];
    bb20__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb21__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb23__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_49 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb24__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_12 as Continue).0: u128)<br/>_11 = _53<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_10 = &lt;u128 as SafeMath&gt;::safe_div(move _11, const 2_u128)</td></tr></table>>];
    bb25__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb26__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb28__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_54 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb29__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_9 as Continue).0: u128)<br/>_8 = _58<br/>StorageDead(_58)<br/>StorageDead(_41)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _1<br/></td></tr><tr><td align="left">_62 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _63)</td></tr></table>>];
    bb30__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb31__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb33__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_64 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb34__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_61 as Continue).0: u128)<br/>_60 = _68<br/>StorageDead(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = _8<br/></td></tr><tr><td align="left">_71 = &lt;u128 as SafeMath&gt;::safe_div(move _72, const 4_u128)</td></tr></table>>];
    bb35__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb36__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb38__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_73 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb39__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_70 as Continue).0: u128)<br/>_69 = _77<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_59 = &lt;u128 as Ord&gt;::max(move _60, move _69)</td></tr></table>>];
    bb40__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_76)<br/>_76 = _74<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _76)</td></tr></table>>];
    bb41__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_69)<br/>StorageDead(_60)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_60)<br/>StorageDead(_70)<br/>StorageDead(_61)<br/>StorageLive(_78)<br/>_79 = Eq(const 100_u128, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _79, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb43__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_78 = Div(const _, const 100_u128)<br/>StorageLive(_80)<br/>_80 = const _<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _5<br/></td></tr><tr><td align="left">_90 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _91)</td></tr></table>>];
    bb44__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb45__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_92 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb46__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_89 as Continue).0: u128)<br/>_88 = _96<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_87 = &lt;u128 as SafeMath&gt;::safe_mul(move _88, const _)</td></tr></table>>];
    bb47__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_95)<br/>_95 = _93<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _95)</td></tr></table>>];
    bb48__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb50__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_97 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb51__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_86 as Continue).0: u128)<br/>_85 = _101<br/>StorageDead(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _7<br/></td></tr><tr><td align="left">_105 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _106)</td></tr></table>>];
    bb52__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb53__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb55__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_107 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb56__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_104 as Continue).0: u128)<br/>_103 = _111<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_102 = std::cmp::max::&lt;u128&gt;(move _103, const 1_u128)</td></tr></table>>];
    bb57__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb58__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/></td></tr><tr><td align="left">_84 = &lt;u128 as SafeMath&gt;::safe_div(move _85, move _102)</td></tr></table>>];
    bb60__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb61__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_112 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb62__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_83 as Continue).0: u128)<br/>_82 = _116<br/>StorageDead(_116)<br/>StorageLive(_117)<br/>_117 = _78<br/>StorageLive(_118)<br/>_118 = _80<br/></td></tr><tr><td align="left">_81 = &lt;u128 as Ord&gt;::clamp(move _82, move _117, move _118)</td></tr></table>>];
    bb63__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb64__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_82)<br/>StorageDead(_104)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = _6<br/></td></tr><tr><td align="left">_128 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _129)</td></tr></table>>];
    bb66__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb67__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_130 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb68__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_127 as Continue).0: u128)<br/>_126 = _134<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_125 = &lt;u128 as SafeMath&gt;::safe_mul(move _126, const _)</td></tr></table>>];
    bb69__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb70__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb72__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_135 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb73__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_124 as Continue).0: u128)<br/>_123 = _139<br/>StorageDead(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = _7<br/></td></tr><tr><td align="left">_143 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _144)</td></tr></table>>];
    bb74__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb75__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb77__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_145 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb78__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_142 as Continue).0: u128)<br/>_141 = _149<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">_140 = std::cmp::max::&lt;u128&gt;(move _141, const 1_u128)</td></tr></table>>];
    bb79__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb80__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">_122 = &lt;u128 as SafeMath&gt;::safe_div(move _123, move _140)</td></tr></table>>];
    bb82__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb83__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_150 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb84__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_121 as Continue).0: u128)<br/>_120 = _154<br/>StorageDead(_154)<br/>StorageLive(_155)<br/>_155 = _78<br/>StorageLive(_156)<br/>_156 = _80<br/></td></tr><tr><td align="left">_119 = &lt;u128 as Ord&gt;::clamp(move _120, move _155, move _156)</td></tr></table>>];
    bb85__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb86__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_120)<br/>StorageDead(_142)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = _1<br/>StorageLive(_160)<br/>_161 = Eq(const 400_u64, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _161, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb88__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_160 = Div(const _, const 400_u64)<br/>_158 = Gt(move _159, move _160)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb89__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/>_157 = _1<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = _1<br/></td></tr><tr><td align="left">_163 = &lt;u64 as SafeMath&gt;::safe_div(move _164, const 20_u64)</td></tr></table>>];
    bb91__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb92__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_165 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb93__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_162 as Continue).0: u64)<br/>_157 = _169<br/>StorageDead(_169)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb95__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = _157<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = _59<br/>StorageLive(_183)<br/>_183 = _81<br/></td></tr><tr><td align="left">_181 = &lt;u128 as SafeMath&gt;::safe_mul(move _182, move _183)</td></tr></table>>];
    bb97__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _181)</td></tr></table>>];
    bb98__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_184 = discriminant(_180)<br/></td></tr><tr><td align="left">switchInt(move _184)</td></tr></table>>];
    bb99__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_180 as Continue).0: u128)<br/>_179 = _188<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">_178 = &lt;u128 as SafeMath&gt;::safe_div(move _179, const _)</td></tr></table>>];
    bb100__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_180 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_187)<br/>_187 = _185<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _187)</td></tr></table>>];
    bb101__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb103__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_189 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb104__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_177 as Continue).0: u128)<br/>_176 = _193<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_175 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _176)</td></tr></table>>];
    bb105__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb106__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/></td></tr><tr><td align="left">_174 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _175)</td></tr></table>>];
    bb108__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_194 = discriminant(_174)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb109__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_174 as Continue).0: u64)<br/>_173 = _198<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_171 = std::cmp::max::&lt;u64&gt;(move _172, move _173)</td></tr></table>>];
    bb110__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_174 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb111__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = _157<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = _59<br/>StorageLive(_211)<br/>_211 = _119<br/></td></tr><tr><td align="left">_209 = &lt;u128 as SafeMath&gt;::safe_mul(move _210, move _211)</td></tr></table>>];
    bb113__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_208 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _209)</td></tr></table>>];
    bb114__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>_212 = discriminant(_208)<br/></td></tr><tr><td align="left">switchInt(move _212)</td></tr></table>>];
    bb115__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_208 as Continue).0: u128)<br/>_207 = _216<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">_206 = &lt;u128 as SafeMath&gt;::safe_div(move _207, const _)</td></tr></table>>];
    bb116__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_213)<br/>_213 = ((_208 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_215)<br/>_215 = _213<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _215)</td></tr></table>>];
    bb117__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_213)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb119__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_217 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _217)</td></tr></table>>];
    bb120__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ((_205 as Continue).0: u128)<br/>_204 = _221<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_203 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _204)</td></tr></table>>];
    bb121__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_220)<br/>_220 = _218<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _220)</td></tr></table>>];
    bb122__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/></td></tr><tr><td align="left">_202 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _203)</td></tr></table>>];
    bb124__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>_222 = discriminant(_202)<br/></td></tr><tr><td align="left">switchInt(move _222)</td></tr></table>>];
    bb125__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_202 as Continue).0: u64)<br/>_201 = _226<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_199 = std::cmp::max::&lt;u64&gt;(move _200, move _201)</td></tr></table>>];
    bb126__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = ((_202 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_225)<br/>_225 = _223<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _225)</td></tr></table>>];
    bb127__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>_170 = (move _171, move _199)<br/>StorageDead(_199)<br/>StorageDead(_171)<br/>_0 = std::result::Result::&lt;(u64, u64), error::ErrorCode&gt;::Ok(move _170)<br/>StorageDead(_170)<br/>StorageDead(_157)<br/>StorageDead(_119)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_59)<br/>StorageDead(_8)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>StorageDead(_180)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_157)<br/>StorageDead(_119)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_59)<br/>StorageDead(_8)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_157)<br/>StorageDead(_119)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_59)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_177)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_1867 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1867 -> bb1__0_1867 [label="return"];
    bb1__0_1867 -> bb2__0_1867 [label="return"];
    bb2__0_1867 -> bb3__0_1867 [label="0"];
    bb2__0_1867 -> bb5__0_1867 [label="1"];
    bb2__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb3__0_1867 -> bb7__0_1867 [label="return"];
    bb5__0_1867 -> bb6__0_1867 [label="return"];
    bb6__0_1867 -> bb146__0_1867 [label=""];
    bb7__0_1867 -> bb8__0_1867 [label="return"];
    bb8__0_1867 -> bb9__0_1867 [label="0"];
    bb8__0_1867 -> bb10__0_1867 [label="1"];
    bb8__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb9__0_1867 -> bb12__0_1867 [label="return"];
    bb10__0_1867 -> bb11__0_1867 [label="return"];
    bb11__0_1867 -> bb146__0_1867 [label=""];
    bb12__0_1867 -> bb13__0_1867 [label="return"];
    bb13__0_1867 -> bb14__0_1867 [label="0"];
    bb13__0_1867 -> bb15__0_1867 [label="1"];
    bb13__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb14__0_1867 -> bb17__0_1867 [label="return"];
    bb15__0_1867 -> bb16__0_1867 [label="return"];
    bb16__0_1867 -> bb147__0_1867 [label=""];
    bb17__0_1867 -> bb18__0_1867 [label="return"];
    bb18__0_1867 -> bb19__0_1867 [label="0"];
    bb18__0_1867 -> bb20__0_1867 [label="1"];
    bb18__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb19__0_1867 -> bb22__0_1867 [label="return"];
    bb20__0_1867 -> bb21__0_1867 [label="return"];
    bb21__0_1867 -> bb144__0_1867 [label=""];
    bb22__0_1867 -> bb23__0_1867 [label="return"];
    bb23__0_1867 -> bb24__0_1867 [label="0"];
    bb23__0_1867 -> bb25__0_1867 [label="1"];
    bb23__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb24__0_1867 -> bb27__0_1867 [label="return"];
    bb25__0_1867 -> bb26__0_1867 [label="return"];
    bb26__0_1867 -> bb144__0_1867 [label=""];
    bb27__0_1867 -> bb28__0_1867 [label="return"];
    bb28__0_1867 -> bb29__0_1867 [label="0"];
    bb28__0_1867 -> bb30__0_1867 [label="1"];
    bb28__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb29__0_1867 -> bb32__0_1867 [label="return"];
    bb30__0_1867 -> bb31__0_1867 [label="return"];
    bb31__0_1867 -> bb145__0_1867 [label=""];
    bb32__0_1867 -> bb33__0_1867 [label="return"];
    bb33__0_1867 -> bb34__0_1867 [label="0"];
    bb33__0_1867 -> bb35__0_1867 [label="1"];
    bb33__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb34__0_1867 -> bb37__0_1867 [label="return"];
    bb35__0_1867 -> bb36__0_1867 [label="return"];
    bb36__0_1867 -> bb142__0_1867 [label=""];
    bb37__0_1867 -> bb38__0_1867 [label="return"];
    bb38__0_1867 -> bb39__0_1867 [label="0"];
    bb38__0_1867 -> bb40__0_1867 [label="1"];
    bb38__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb39__0_1867 -> bb42__0_1867 [label="return"];
    bb40__0_1867 -> bb41__0_1867 [label="return"];
    bb41__0_1867 -> bb142__0_1867 [label=""];
    bb42__0_1867 -> bb43__0_1867 [label="success"];
    bb43__0_1867 -> bb44__0_1867 [label="return"];
    bb44__0_1867 -> bb45__0_1867 [label="return"];
    bb45__0_1867 -> bb46__0_1867 [label="0"];
    bb45__0_1867 -> bb47__0_1867 [label="1"];
    bb45__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb46__0_1867 -> bb49__0_1867 [label="return"];
    bb47__0_1867 -> bb48__0_1867 [label="return"];
    bb48__0_1867 -> bb139__0_1867 [label=""];
    bb49__0_1867 -> bb50__0_1867 [label="return"];
    bb50__0_1867 -> bb51__0_1867 [label="0"];
    bb50__0_1867 -> bb52__0_1867 [label="1"];
    bb50__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb51__0_1867 -> bb54__0_1867 [label="return"];
    bb52__0_1867 -> bb53__0_1867 [label="return"];
    bb53__0_1867 -> bb139__0_1867 [label=""];
    bb54__0_1867 -> bb55__0_1867 [label="return"];
    bb55__0_1867 -> bb56__0_1867 [label="0"];
    bb55__0_1867 -> bb57__0_1867 [label="1"];
    bb55__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb56__0_1867 -> bb59__0_1867 [label="return"];
    bb57__0_1867 -> bb58__0_1867 [label="return"];
    bb58__0_1867 -> bb138__0_1867 [label=""];
    bb59__0_1867 -> bb60__0_1867 [label="return"];
    bb60__0_1867 -> bb61__0_1867 [label="return"];
    bb61__0_1867 -> bb62__0_1867 [label="0"];
    bb61__0_1867 -> bb63__0_1867 [label="1"];
    bb61__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb62__0_1867 -> bb65__0_1867 [label="return"];
    bb63__0_1867 -> bb64__0_1867 [label="return"];
    bb64__0_1867 -> bb138__0_1867 [label=""];
    bb65__0_1867 -> bb66__0_1867 [label="return"];
    bb66__0_1867 -> bb67__0_1867 [label="return"];
    bb67__0_1867 -> bb68__0_1867 [label="0"];
    bb67__0_1867 -> bb69__0_1867 [label="1"];
    bb67__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb68__0_1867 -> bb71__0_1867 [label="return"];
    bb69__0_1867 -> bb70__0_1867 [label="return"];
    bb70__0_1867 -> bb135__0_1867 [label=""];
    bb71__0_1867 -> bb72__0_1867 [label="return"];
    bb72__0_1867 -> bb73__0_1867 [label="0"];
    bb72__0_1867 -> bb74__0_1867 [label="1"];
    bb72__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb73__0_1867 -> bb76__0_1867 [label="return"];
    bb74__0_1867 -> bb75__0_1867 [label="return"];
    bb75__0_1867 -> bb135__0_1867 [label=""];
    bb76__0_1867 -> bb77__0_1867 [label="return"];
    bb77__0_1867 -> bb78__0_1867 [label="0"];
    bb77__0_1867 -> bb79__0_1867 [label="1"];
    bb77__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb78__0_1867 -> bb81__0_1867 [label="return"];
    bb79__0_1867 -> bb80__0_1867 [label="return"];
    bb80__0_1867 -> bb134__0_1867 [label=""];
    bb81__0_1867 -> bb82__0_1867 [label="return"];
    bb82__0_1867 -> bb83__0_1867 [label="return"];
    bb83__0_1867 -> bb84__0_1867 [label="0"];
    bb83__0_1867 -> bb85__0_1867 [label="1"];
    bb83__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb84__0_1867 -> bb87__0_1867 [label="return"];
    bb85__0_1867 -> bb86__0_1867 [label="return"];
    bb86__0_1867 -> bb134__0_1867 [label=""];
    bb87__0_1867 -> bb88__0_1867 [label="success"];
    bb88__0_1867 -> bb90__0_1867 [label="0"];
    bb88__0_1867 -> bb89__0_1867 [label="otherwise"];
    bb89__0_1867 -> bb96__0_1867 [label=""];
    bb90__0_1867 -> bb91__0_1867 [label="return"];
    bb91__0_1867 -> bb92__0_1867 [label="return"];
    bb92__0_1867 -> bb93__0_1867 [label="0"];
    bb92__0_1867 -> bb94__0_1867 [label="1"];
    bb92__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb93__0_1867 -> bb96__0_1867 [label=""];
    bb94__0_1867 -> bb95__0_1867 [label="return"];
    bb95__0_1867 -> bb137__0_1867 [label=""];
    bb96__0_1867 -> bb97__0_1867 [label="return"];
    bb97__0_1867 -> bb98__0_1867 [label="return"];
    bb98__0_1867 -> bb99__0_1867 [label="0"];
    bb98__0_1867 -> bb100__0_1867 [label="1"];
    bb98__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb99__0_1867 -> bb102__0_1867 [label="return"];
    bb100__0_1867 -> bb101__0_1867 [label="return"];
    bb101__0_1867 -> bb131__0_1867 [label=""];
    bb102__0_1867 -> bb103__0_1867 [label="return"];
    bb103__0_1867 -> bb104__0_1867 [label="0"];
    bb103__0_1867 -> bb105__0_1867 [label="1"];
    bb103__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb104__0_1867 -> bb107__0_1867 [label="return"];
    bb105__0_1867 -> bb106__0_1867 [label="return"];
    bb106__0_1867 -> bb131__0_1867 [label=""];
    bb107__0_1867 -> bb108__0_1867 [label="return"];
    bb108__0_1867 -> bb109__0_1867 [label="0"];
    bb108__0_1867 -> bb110__0_1867 [label="1"];
    bb108__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb109__0_1867 -> bb112__0_1867 [label="return"];
    bb110__0_1867 -> bb111__0_1867 [label="return"];
    bb111__0_1867 -> bb132__0_1867 [label=""];
    bb112__0_1867 -> bb113__0_1867 [label="return"];
    bb113__0_1867 -> bb114__0_1867 [label="return"];
    bb114__0_1867 -> bb115__0_1867 [label="0"];
    bb114__0_1867 -> bb116__0_1867 [label="1"];
    bb114__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb115__0_1867 -> bb118__0_1867 [label="return"];
    bb116__0_1867 -> bb117__0_1867 [label="return"];
    bb117__0_1867 -> bb129__0_1867 [label=""];
    bb118__0_1867 -> bb119__0_1867 [label="return"];
    bb119__0_1867 -> bb120__0_1867 [label="0"];
    bb119__0_1867 -> bb121__0_1867 [label="1"];
    bb119__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb120__0_1867 -> bb123__0_1867 [label="return"];
    bb121__0_1867 -> bb122__0_1867 [label="return"];
    bb122__0_1867 -> bb129__0_1867 [label=""];
    bb123__0_1867 -> bb124__0_1867 [label="return"];
    bb124__0_1867 -> bb125__0_1867 [label="0"];
    bb124__0_1867 -> bb126__0_1867 [label="1"];
    bb124__0_1867 -> bb4__0_1867 [label="otherwise"];
    bb125__0_1867 -> bb128__0_1867 [label="return"];
    bb126__0_1867 -> bb127__0_1867 [label="return"];
    bb127__0_1867 -> bb130__0_1867 [label=""];
    bb128__0_1867 -> bb150__0_1867 [label=""];
    bb129__0_1867 -> bb130__0_1867 [label=""];
    bb130__0_1867 -> bb133__0_1867 [label=""];
    bb131__0_1867 -> bb132__0_1867 [label=""];
    bb132__0_1867 -> bb133__0_1867 [label=""];
    bb133__0_1867 -> bb150__0_1867 [label=""];
    bb134__0_1867 -> bb136__0_1867 [label=""];
    bb135__0_1867 -> bb136__0_1867 [label=""];
    bb136__0_1867 -> bb137__0_1867 [label=""];
    bb137__0_1867 -> bb141__0_1867 [label=""];
    bb138__0_1867 -> bb140__0_1867 [label=""];
    bb139__0_1867 -> bb140__0_1867 [label=""];
    bb140__0_1867 -> bb141__0_1867 [label=""];
    bb141__0_1867 -> bb143__0_1867 [label=""];
    bb142__0_1867 -> bb143__0_1867 [label=""];
    bb143__0_1867 -> bb149__0_1867 [label=""];
    bb144__0_1867 -> bb145__0_1867 [label=""];
    bb145__0_1867 -> bb148__0_1867 [label=""];
    bb146__0_1867 -> bb147__0_1867 [label=""];
    bb147__0_1867 -> bb148__0_1867 [label=""];
    bb148__0_1867 -> bb149__0_1867 [label=""];
    bb149__0_1867 -> bb150__0_1867 [label=""];
}
