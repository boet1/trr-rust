digraph Mir_0_4321 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn User::has_room_for_new_order(_1: &amp;ReErased state::user::User) -&gt; bool<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _4: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _5: &amp;ReErased [state::user::Order];<br align="left"/>let mut _6: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let mut _7: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _8: ();<br align="left"/>let _9: ();<br align="left"/>let mut _10: std::option::Option&lt;&amp;ReErased state::user::Order&gt;;<br align="left"/>let mut _11: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _12: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _13: isize;<br align="left"/>let mut _14: !;<br align="left"/>let _15: &amp;ReErased state::user::Order;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: &amp;ReErased state::user::Order;<br align="left"/>let mut _18: !;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug iter =&gt; _7;<br align="left"/>debug order =&gt; _15;<br align="left"/>>;
    bb0__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_1).5: [state::user::Order; 32])<br/>_5 = move _6 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [Order]&gt;::iter(move _5)</td></tr></table>>];
    bb1__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::slice::Iter&lt;'_, Order&gt; as IntoIterator&gt;::into_iter(move _4)</td></tr></table>>];
    bb2__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_7)<br/>_7 = move _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;mut _7<br/>_11 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::next(move _11)</td></tr></table>>];
    bb4__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_13 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_10 as Some).0: &amp;state::user::Order)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_15)<br/></td></tr><tr><td align="left">_16 = Order::is_available(move _17)</td></tr></table>>];
    bb6__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_2 = const ()<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_0 = const true<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_9 = const ()<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>_8 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_4321 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4321 -> bb1__0_4321 [label="return"];
    bb1__0_4321 -> bb2__0_4321 [label="return"];
    bb2__0_4321 -> bb3__0_4321 [label=""];
    bb3__0_4321 -> bb4__0_4321 [label="return"];
    bb4__0_4321 -> bb7__0_4321 [label="0"];
    bb4__0_4321 -> bb5__0_4321 [label="1"];
    bb4__0_4321 -> bb6__0_4321 [label="otherwise"];
    bb5__0_4321 -> bb8__0_4321 [label="return"];
    bb7__0_4321 -> bb11__0_4321 [label=""];
    bb8__0_4321 -> bb10__0_4321 [label="0"];
    bb8__0_4321 -> bb9__0_4321 [label="otherwise"];
    bb9__0_4321 -> bb11__0_4321 [label=""];
    bb10__0_4321 -> bb3__0_4321 [label=""];
}
