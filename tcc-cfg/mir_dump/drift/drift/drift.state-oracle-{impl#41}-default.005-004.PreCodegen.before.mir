// MIR for `state::oracle::<impl at programs/drift/src/state/oracle.rs:176:10: 176:17>::default` before PreCodegen

fn state::oracle::<impl at programs/drift/src/state/oracle.rs:176:10: 176:17>::default() -> MMOraclePriceData {
    let mut _0: state::oracle::MMOraclePriceData;
    let mut _1: i64;
    let mut _2: i64;
    let mut _3: u64;
    let mut _4: math::oracle::OracleValidity;
    let mut _5: u128;
    let mut _6: state::oracle::OraclePriceData;
    let mut _7: state::oracle::OraclePriceData;

    bb0: {
        StorageLive(_1);
        _1 = <i64 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <i64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <OracleValidity as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u128 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <OraclePriceData as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <OraclePriceData as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        _0 = MMOraclePriceData { mm_oracle_price: move _1, mm_oracle_delay: move _2, mm_oracle_sequence_id: move _3, mm_oracle_validity: move _4, mm_exchange_diff_bps: move _5, exchange_oracle_price_data: move _6, safe_oracle_price_data: move _7 };
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
