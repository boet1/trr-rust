digraph Mir_0_9250 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_liquidate_perp(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::LiquidatePerp&lt;ReErased&gt;&gt;, _2: u16, _3: u64, _4: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: anchor_lang::prelude::Clock;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _17: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: anchor_lang::prelude::Clock;<br align="left"/>let _23: i64;<br align="left"/>let _24: u64;<br align="left"/>let _25: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _26: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _28: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _30: ();<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _33: bool;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _36: ();<br align="left"/>let _37: error::ErrorCode;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: &amp;ReErased std::string::String;<br align="left"/>let _42: &amp;ReErased std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let mut _45: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _48: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _49: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _53: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased error::ErrorCode;<br align="left"/>let _56: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _57: error::ErrorCode;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: ();<br align="left"/>let _63: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _64: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _66: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _67: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _69: Closure(DefId(0:9253 ~ drift[d311]::instructions::keeper::handle_liquidate_perp::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _75: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _76: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _78: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _79: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _80: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _81: Closure(DefId(0:9254 ~ drift[d311]::instructions::keeper::handle_liquidate_perp::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _87: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _88: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _90: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _91: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _92: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _93: Closure(DefId(0:9255 ~ drift[d311]::instructions::keeper::handle_liquidate_perp::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _99: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _100: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _102: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _103: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _104: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _105: Closure(DefId(0:9256 ~ drift[d311]::instructions::keeper::handle_liquidate_perp::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _111: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _112: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _113: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _114: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _116: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _117: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _118: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _119: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _120: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _121: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _122: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _123: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _124: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _125: u16;<br align="left"/>let mut _126: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _127: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _128: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _131: state::state::OracleGuardRails;<br align="left"/>let mut _132: &amp;ReErased state::state::State;<br align="left"/>let mut _133: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _134: isize;<br align="left"/>let _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _136: !;<br align="left"/>let mut _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _138: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _139: ();<br align="left"/>let mut _140: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _141: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _142: u16;<br align="left"/>let mut _143: u64;<br align="left"/>let mut _144: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _145: &amp;ReErased mut state::user::User;<br align="left"/>let mut _146: &amp;ReErased mut state::user::User;<br align="left"/>let mut _147: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _148: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _149: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _150: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _151: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _152: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _153: &amp;ReErased mut state::user::User;<br align="left"/>let mut _154: &amp;ReErased mut state::user::User;<br align="left"/>let mut _155: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _156: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _157: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _158: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _159: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _160: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _161: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _162: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _164: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _166: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _167: u64;<br align="left"/>let mut _168: i64;<br align="left"/>let mut _169: &amp;ReErased state::state::State;<br align="left"/>let _170: &amp;ReErased state::state::State;<br align="left"/>let mut _171: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: ();<br align="left"/>let mut _177: ();<br align="left"/>let mut _178: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _179: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _180: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _181: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _183: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _184: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _186: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _187: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _189: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _190: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>let mut _197: isize;<br align="left"/>let mut _198: isize;<br align="left"/>let mut _199: isize;<br align="left"/>let mut _200: isize;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: isize;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: isize;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: isize;<br align="left"/>let mut _227: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _228: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _229: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug liquidator_max_base_asset_amount =&gt; _3;<br align="left"/>debug limit_price =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug clock =&gt; _15;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug now =&gt; _23;<br align="left"/>debug slot =&gt; _24;<br align="left"/>debug state =&gt; _25;<br align="left"/>debug user_key =&gt; _26;<br align="left"/>debug liquidator_key =&gt; _28;<br align="left"/>debug error_code =&gt; _37;<br align="left"/>debug res =&gt; _44;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug user =&gt; _63;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug user_stats =&gt; _75;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug liquidator =&gt; _87;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug liquidator_stats =&gt; _99;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug perp_market_map =&gt; _111;<br align="left"/>debug spot_market_map =&gt; _112;<br align="left"/>debug oracle_map =&gt; _113;<br align="left"/>debug residual =&gt; _135;<br align="left"/>debug val =&gt; _138;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>>;
    bb0__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_179 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_9 = &amp;((*_179).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_180 = deref_copy (*_9)<br/>_227 = (((_180.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_227)<br/></td></tr><tr><td align="left">_7 = constraints::liq_not_paused(move _8)</td></tr></table>>];
    bb1__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_191 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_217 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_18 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_16 as Continue).0: anchor_lang::prelude::Clock)<br/>_15 = move _22<br/>StorageDead(_22)<br/>_193 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>_23 = (_15.4: i64)<br/>StorageLive(_24)<br/>_24 = (_15.0: u64)<br/>StorageLive(_25)<br/>_181 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_25 = &amp;((*_181).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_182 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_27 = &amp;((*_182).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _27)</td></tr></table>>];
    bb10__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_215 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_183 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_29 = &amp;((*_183).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_28 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _29)</td></tr></table>>];
    bb13__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_26<br/>StorageLive(_35)<br/>_35 = &amp;_28<br/></td></tr><tr><td align="left">_33 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _34, move _35)</td></tr></table>>];
    bb14__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb15__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_36)<br/>_36 = ()<br/>_32 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>_37 = error::ErrorCode::UserCantLiquidateThemself<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_178 = const _<br/>_48 = &amp;(*_178)<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_37<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _55)</td></tr></table>>];
    bb17__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = [move _54]<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = Arguments::&lt;'_&gt;::new_v1(move _46, move _50)</td></tr></table>>];
    bb18__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = format(move _45)</td></tr></table>>];
    bb19__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>_43 = move _44<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;String as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb20__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb21__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb22__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageLive(_57)<br/>_57 = _37<br/>_32 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _57)<br/>StorageDead(_57)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb24__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_58 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb25__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_31 as Continue).0: ())<br/>_30 = _62<br/>StorageDead(_62)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_184 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_68 = &amp;((*_184).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_67 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _68)</td></tr></table>>];
    bb26__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb27__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_69)<br/>_69 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_66 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _67, move _69)</td></tr></table>>];
    bb29__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb30__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_70 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb31__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = move ((_65 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_64 = move _74<br/>StorageDead(_74)<br/>_63 = &amp;mut _64<br/>_197 = discriminant(_65)<br/>StorageDead(_65)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_185 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_80 = &amp;((*_185).5: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_79 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _80)</td></tr></table>>];
    bb32__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb33__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>_195 = discriminant(_65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageLive(_81)<br/>_81 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_78 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _79, move _81)</td></tr></table>>];
    bb35__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb36__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_82 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb37__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = move ((_77 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_76 = move _86<br/>StorageDead(_86)<br/>_75 = &amp;mut _76<br/>_201 = discriminant(_77)<br/>StorageDead(_77)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_186 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_92 = &amp;((*_186).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_91 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _92)</td></tr></table>>];
    bb38__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb39__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>_199 = discriminant(_77)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageLive(_93)<br/>_93 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_90 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _91, move _93)</td></tr></table>>];
    bb41__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb42__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_94 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb43__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_89 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_88 = move _98<br/>StorageDead(_98)<br/>_87 = &amp;mut _88<br/>_205 = discriminant(_89)<br/>StorageDead(_89)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_187 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_104 = &amp;((*_187).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_103 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _104)</td></tr></table>>];
    bb44__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb45__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>_203 = discriminant(_89)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_105)<br/>_105 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_102 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _103, move _105)</td></tr></table>>];
    bb47__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb48__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_106 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb49__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = move ((_101 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_100 = move _110<br/>StorageDead(_110)<br/>_99 = &amp;mut _100<br/>_209 = discriminant(_101)<br/>StorageDead(_101)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_188 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_121 = &amp;(*_188)<br/></td></tr><tr><td align="left">_120 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _121)</td></tr></table>>];
    bb50__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb51__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>_207 = discriminant(_101)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _120)</td></tr></table>>];
    bb53__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_118 = &amp;mut _119<br/>_117 = &amp;mut (*_118)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = _2<br/></td></tr><tr><td align="left">_124 = get_writable_perp_market_set(move _125)</td></tr></table>>];
    bb54__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_123 = &amp;_124<br/>_122 = &amp;(*_123)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/></td></tr><tr><td align="left">_128 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb55__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_127 = &amp;_128<br/>_126 = &amp;(*_127)<br/>StorageLive(_129)<br/>_129 = (_15.0: u64)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_189 = deref_copy (*_25)<br/>_228 = (((_189.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_133 = &amp;(*_228)<br/></td></tr><tr><td align="left">_132 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb56__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = ((*_132).7: state::state::OracleGuardRails)<br/>_130 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _131)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_116 = load_maps(move _117, move _122, move _126, move _129, move _130)</td></tr></table>>];
    bb57__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>StorageDead(_122)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb58__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_134 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb59__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = move ((_115 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_114 = move _138<br/>StorageDead(_138)<br/>StorageLive(_111)<br/>_111 = move (_114.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_112)<br/>_112 = move (_114.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_113)<br/>_113 = move (_114.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_213 = discriminant(_115)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_128)</td></tr></table>>];
    bb60__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_137)<br/>_137 = _135<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _137)</td></tr></table>>];
    bb61__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>_211 = discriminant(_115)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_128)</td></tr></table>>];
    bb62__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb63__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = _2<br/>StorageLive(_143)<br/>_143 = _3<br/>StorageLive(_144)<br/>_144 = _4<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;mut (*_63)<br/></td></tr><tr><td align="left">_146 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _147)</td></tr></table>>];
    bb64__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_145 = &amp;mut (*_146)<br/>StorageDead(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_26<br/>_148 = &amp;(*_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = &amp;mut (*_75)<br/></td></tr><tr><td align="left">_151 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _152)</td></tr></table>>];
    bb65__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_150 = &amp;mut (*_151)<br/>StorageDead(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;mut (*_87)<br/></td></tr><tr><td align="left">_154 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _155)</td></tr></table>>];
    bb66__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_153 = &amp;mut (*_154)<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;_28<br/>_156 = &amp;(*_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;mut (*_99)<br/></td></tr><tr><td align="left">_159 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _160)</td></tr></table>>];
    bb67__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">_158 = &amp;mut (*_159)<br/>StorageDead(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_111<br/>_161 = &amp;(*_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;_112<br/>_163 = &amp;(*_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = &amp;mut _113<br/>_165 = &amp;mut (*_166)<br/>StorageLive(_167)<br/>_167 = _24<br/>StorageLive(_168)<br/>_168 = _23<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_190 = deref_copy (*_25)<br/>_229 = (((_190.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_171 = &amp;(*_229)<br/></td></tr><tr><td align="left">_170 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _171)</td></tr></table>>];
    bb68__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_169 = &amp;(*_170)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_141 = controller::liquidation::liquidate_perp(move _142, move _143, move _144, move _145, move _148, move _150, move _153, move _156, move _158, move _161, move _163, move _165, move _167, move _168, move _169)</td></tr></table>>];
    bb69__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _141)</td></tr></table>>];
    bb70__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_172 = discriminant(_140)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb71__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_140 as Continue).0: ())<br/>_139 = _176<br/>StorageDead(_176)<br/>StorageDead(_170)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_177)<br/>_177 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _177)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb72__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_140 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb73__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_154)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb74__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb75__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_111)</td></tr></table>>];
    bb76__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb77__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb78__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb79__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb80__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb82__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_111)</td></tr></table>>];
    bb83__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb85__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb87__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb88__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb89__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb90__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">return</td></tr></table>>];
    bb94__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb95__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb96__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left">drop(_112)</td></tr></table>>];
    bb97__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left">drop(_111)</td></tr></table>>];
    bb98__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_128)</td></tr></table>>];
    bb99__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb100__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb101__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb102__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb103__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb104__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb105__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">105 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb106__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">106 (cleanup)</td></tr><tr><td align="left" balign="left">_220 = discriminant(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">107 (cleanup)</td></tr><tr><td align="left" balign="left">_221 = discriminant(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left" balign="left">_222 = discriminant(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left" balign="left">_223 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left" balign="left">_224 = discriminant(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left" balign="left">_225 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_9250 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">112 (cleanup)</td></tr><tr><td align="left" balign="left">_226 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9250 -> bb1__0_9250 [label="return"];
    bb1__0_9250 -> bb2__0_9250 [label="return"];
    bb1__0_9250 -> bb105__0_9250 [label="unwind"];
    bb2__0_9250 -> bb3__0_9250 [label="0"];
    bb2__0_9250 -> bb5__0_9250 [label="1"];
    bb2__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb3__0_9250 -> bb7__0_9250 [label="return"];
    bb5__0_9250 -> bb6__0_9250 [label="return"];
    bb5__0_9250 -> bb112__0_9250 [label="unwind"];
    bb6__0_9250 -> bb93__0_9250 [label=""];
    bb7__0_9250 -> bb8__0_9250 [label="return"];
    bb7__0_9250 -> bb105__0_9250 [label="unwind"];
    bb8__0_9250 -> bb9__0_9250 [label="0"];
    bb8__0_9250 -> bb10__0_9250 [label="1"];
    bb8__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb9__0_9250 -> bb12__0_9250 [label="return"];
    bb10__0_9250 -> bb11__0_9250 [label="return"];
    bb10__0_9250 -> bb111__0_9250 [label="unwind"];
    bb11__0_9250 -> bb92__0_9250 [label=""];
    bb12__0_9250 -> bb13__0_9250 [label="return"];
    bb13__0_9250 -> bb14__0_9250 [label="return"];
    bb14__0_9250 -> bb16__0_9250 [label="0"];
    bb14__0_9250 -> bb15__0_9250 [label="otherwise"];
    bb15__0_9250 -> bb23__0_9250 [label=""];
    bb16__0_9250 -> bb17__0_9250 [label="return"];
    bb17__0_9250 -> bb18__0_9250 [label="return"];
    bb18__0_9250 -> bb19__0_9250 [label="return"];
    bb19__0_9250 -> bb20__0_9250 [label="return"];
    bb19__0_9250 -> bb104__0_9250 [label="unwind"];
    bb20__0_9250 -> bb21__0_9250 [label="return"];
    bb20__0_9250 -> bb104__0_9250 [label="unwind"];
    bb21__0_9250 -> bb22__0_9250 [label="return"];
    bb21__0_9250 -> bb105__0_9250 [label="unwind"];
    bb22__0_9250 -> bb23__0_9250 [label=""];
    bb23__0_9250 -> bb24__0_9250 [label="return"];
    bb24__0_9250 -> bb25__0_9250 [label="0"];
    bb24__0_9250 -> bb26__0_9250 [label="1"];
    bb24__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb25__0_9250 -> bb28__0_9250 [label="return"];
    bb26__0_9250 -> bb27__0_9250 [label="return"];
    bb27__0_9250 -> bb91__0_9250 [label=""];
    bb28__0_9250 -> bb29__0_9250 [label="return"];
    bb28__0_9250 -> bb105__0_9250 [label="unwind"];
    bb29__0_9250 -> bb30__0_9250 [label="return"];
    bb29__0_9250 -> bb105__0_9250 [label="unwind"];
    bb30__0_9250 -> bb31__0_9250 [label="0"];
    bb30__0_9250 -> bb32__0_9250 [label="1"];
    bb30__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb31__0_9250 -> bb34__0_9250 [label="return"];
    bb31__0_9250 -> bb103__0_9250 [label="unwind"];
    bb32__0_9250 -> bb33__0_9250 [label="return"];
    bb32__0_9250 -> bb110__0_9250 [label="unwind"];
    bb33__0_9250 -> bb90__0_9250 [label=""];
    bb34__0_9250 -> bb35__0_9250 [label="return"];
    bb34__0_9250 -> bb103__0_9250 [label="unwind"];
    bb35__0_9250 -> bb36__0_9250 [label="return"];
    bb35__0_9250 -> bb103__0_9250 [label="unwind"];
    bb36__0_9250 -> bb37__0_9250 [label="0"];
    bb36__0_9250 -> bb38__0_9250 [label="1"];
    bb36__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb37__0_9250 -> bb40__0_9250 [label="return"];
    bb37__0_9250 -> bb102__0_9250 [label="unwind"];
    bb38__0_9250 -> bb39__0_9250 [label="return"];
    bb38__0_9250 -> bb109__0_9250 [label="unwind"];
    bb39__0_9250 -> bb89__0_9250 [label=""];
    bb40__0_9250 -> bb41__0_9250 [label="return"];
    bb40__0_9250 -> bb102__0_9250 [label="unwind"];
    bb41__0_9250 -> bb42__0_9250 [label="return"];
    bb41__0_9250 -> bb102__0_9250 [label="unwind"];
    bb42__0_9250 -> bb43__0_9250 [label="0"];
    bb42__0_9250 -> bb44__0_9250 [label="1"];
    bb42__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb43__0_9250 -> bb46__0_9250 [label="return"];
    bb43__0_9250 -> bb101__0_9250 [label="unwind"];
    bb44__0_9250 -> bb45__0_9250 [label="return"];
    bb44__0_9250 -> bb108__0_9250 [label="unwind"];
    bb45__0_9250 -> bb88__0_9250 [label=""];
    bb46__0_9250 -> bb47__0_9250 [label="return"];
    bb46__0_9250 -> bb101__0_9250 [label="unwind"];
    bb47__0_9250 -> bb48__0_9250 [label="return"];
    bb47__0_9250 -> bb101__0_9250 [label="unwind"];
    bb48__0_9250 -> bb49__0_9250 [label="0"];
    bb48__0_9250 -> bb50__0_9250 [label="1"];
    bb48__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb49__0_9250 -> bb52__0_9250 [label="return"];
    bb49__0_9250 -> bb100__0_9250 [label="unwind"];
    bb50__0_9250 -> bb51__0_9250 [label="return"];
    bb50__0_9250 -> bb107__0_9250 [label="unwind"];
    bb51__0_9250 -> bb87__0_9250 [label=""];
    bb52__0_9250 -> bb53__0_9250 [label="return"];
    bb52__0_9250 -> bb100__0_9250 [label="unwind"];
    bb53__0_9250 -> bb54__0_9250 [label="return"];
    bb53__0_9250 -> bb100__0_9250 [label="unwind"];
    bb54__0_9250 -> bb55__0_9250 [label="return"];
    bb54__0_9250 -> bb99__0_9250 [label="unwind"];
    bb55__0_9250 -> bb56__0_9250 [label="return"];
    bb55__0_9250 -> bb98__0_9250 [label="unwind"];
    bb56__0_9250 -> bb57__0_9250 [label="return"];
    bb56__0_9250 -> bb98__0_9250 [label="unwind"];
    bb57__0_9250 -> bb58__0_9250 [label="return"];
    bb57__0_9250 -> bb98__0_9250 [label="unwind"];
    bb58__0_9250 -> bb59__0_9250 [label="0"];
    bb58__0_9250 -> bb60__0_9250 [label="1"];
    bb58__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb59__0_9250 -> bb62__0_9250 [label="return"];
    bb59__0_9250 -> bb94__0_9250 [label="unwind"];
    bb60__0_9250 -> bb61__0_9250 [label="return"];
    bb60__0_9250 -> bb106__0_9250 [label="unwind"];
    bb61__0_9250 -> bb84__0_9250 [label="return"];
    bb61__0_9250 -> bb99__0_9250 [label="unwind"];
    bb62__0_9250 -> bb63__0_9250 [label="return"];
    bb62__0_9250 -> bb95__0_9250 [label="unwind"];
    bb63__0_9250 -> bb64__0_9250 [label="return"];
    bb63__0_9250 -> bb95__0_9250 [label="unwind"];
    bb64__0_9250 -> bb65__0_9250 [label="return"];
    bb64__0_9250 -> bb95__0_9250 [label="unwind"];
    bb65__0_9250 -> bb66__0_9250 [label="return"];
    bb65__0_9250 -> bb95__0_9250 [label="unwind"];
    bb66__0_9250 -> bb67__0_9250 [label="return"];
    bb66__0_9250 -> bb95__0_9250 [label="unwind"];
    bb67__0_9250 -> bb68__0_9250 [label="return"];
    bb67__0_9250 -> bb95__0_9250 [label="unwind"];
    bb68__0_9250 -> bb69__0_9250 [label="return"];
    bb68__0_9250 -> bb95__0_9250 [label="unwind"];
    bb69__0_9250 -> bb70__0_9250 [label="return"];
    bb69__0_9250 -> bb95__0_9250 [label="unwind"];
    bb70__0_9250 -> bb71__0_9250 [label="0"];
    bb70__0_9250 -> bb72__0_9250 [label="1"];
    bb70__0_9250 -> bb4__0_9250 [label="otherwise"];
    bb71__0_9250 -> bb74__0_9250 [label="return"];
    bb71__0_9250 -> bb96__0_9250 [label="unwind"];
    bb72__0_9250 -> bb73__0_9250 [label="return"];
    bb72__0_9250 -> bb95__0_9250 [label="unwind"];
    bb73__0_9250 -> bb81__0_9250 [label="return"];
    bb73__0_9250 -> bb96__0_9250 [label="unwind"];
    bb74__0_9250 -> bb75__0_9250 [label="return"];
    bb74__0_9250 -> bb97__0_9250 [label="unwind"];
    bb75__0_9250 -> bb76__0_9250 [label="return"];
    bb75__0_9250 -> bb100__0_9250 [label="unwind"];
    bb76__0_9250 -> bb77__0_9250 [label="return"];
    bb76__0_9250 -> bb101__0_9250 [label="unwind"];
    bb77__0_9250 -> bb78__0_9250 [label="return"];
    bb77__0_9250 -> bb102__0_9250 [label="unwind"];
    bb78__0_9250 -> bb79__0_9250 [label="return"];
    bb78__0_9250 -> bb103__0_9250 [label="unwind"];
    bb79__0_9250 -> bb80__0_9250 [label="return"];
    bb79__0_9250 -> bb105__0_9250 [label="unwind"];
    bb80__0_9250 -> bb93__0_9250 [label=""];
    bb81__0_9250 -> bb82__0_9250 [label="return"];
    bb81__0_9250 -> bb97__0_9250 [label="unwind"];
    bb82__0_9250 -> bb83__0_9250 [label="return"];
    bb82__0_9250 -> bb100__0_9250 [label="unwind"];
    bb83__0_9250 -> bb86__0_9250 [label=""];
    bb84__0_9250 -> bb85__0_9250 [label="return"];
    bb84__0_9250 -> bb100__0_9250 [label="unwind"];
    bb85__0_9250 -> bb86__0_9250 [label=""];
    bb86__0_9250 -> bb87__0_9250 [label="return"];
    bb86__0_9250 -> bb101__0_9250 [label="unwind"];
    bb87__0_9250 -> bb88__0_9250 [label="return"];
    bb87__0_9250 -> bb102__0_9250 [label="unwind"];
    bb88__0_9250 -> bb89__0_9250 [label="return"];
    bb88__0_9250 -> bb103__0_9250 [label="unwind"];
    bb89__0_9250 -> bb90__0_9250 [label="return"];
    bb89__0_9250 -> bb105__0_9250 [label="unwind"];
    bb90__0_9250 -> bb91__0_9250 [label=""];
    bb91__0_9250 -> bb92__0_9250 [label=""];
    bb92__0_9250 -> bb93__0_9250 [label=""];
    bb94__0_9250 -> bb95__0_9250 [label="return"];
    bb95__0_9250 -> bb96__0_9250 [label="return"];
    bb96__0_9250 -> bb97__0_9250 [label="return"];
    bb97__0_9250 -> bb100__0_9250 [label="return"];
    bb98__0_9250 -> bb99__0_9250 [label="return"];
    bb99__0_9250 -> bb100__0_9250 [label="return"];
    bb100__0_9250 -> bb101__0_9250 [label="return"];
    bb101__0_9250 -> bb102__0_9250 [label="return"];
    bb102__0_9250 -> bb103__0_9250 [label="return"];
    bb103__0_9250 -> bb105__0_9250 [label="return"];
    bb104__0_9250 -> bb105__0_9250 [label="return"];
    bb106__0_9250 -> bb98__0_9250 [label=""];
    bb107__0_9250 -> bb101__0_9250 [label=""];
    bb108__0_9250 -> bb102__0_9250 [label=""];
    bb109__0_9250 -> bb103__0_9250 [label=""];
    bb110__0_9250 -> bb105__0_9250 [label=""];
    bb111__0_9250 -> bb105__0_9250 [label=""];
    bb112__0_9250 -> bb105__0_9250 [label=""];
}
