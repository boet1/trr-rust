digraph Mir_0_3799 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpMarket::get_margin_ratio(_1: &amp;ReErased state::perp_market::PerpMarket, _2: u128, _3: math::margin::MarginRequirementType, _4: bool) -&gt; std::result::Result&lt;u32, error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _8: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _9: state::perp_market::MarketStatus;<br align="left"/>let mut _10: !;<br align="left"/>let _11: u32;<br align="left"/>let _12: u32;<br align="left"/>let mut _13: (u32, u32);<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _20: u16;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: u32;<br align="left"/>let mut _26: u32;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _29: u16;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u32;<br align="left"/>let mut _35: u32;<br align="left"/>let mut _36: u32;<br align="left"/>let _37: u32;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: u32;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _42: u32;<br align="left"/>let mut _43: u32;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u32;<br align="left"/>let mut _49: bool;<br align="left"/>let _50: u32;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _52: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: u32;<br align="left"/>let mut _55: u32;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u32;<br align="left"/>let _61: u32;<br align="left"/>let mut _62: u32;<br align="left"/>let mut _63: u32;<br align="left"/>let mut _64: u32;<br align="left"/>let mut _65: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug size =&gt; _2;<br align="left"/>debug margin_type =&gt; _3;<br align="left"/>debug user_high_leverage_mode =&gt; _4;<br align="left"/>debug margin_ratio_initial =&gt; _11;<br align="left"/>debug margin_ratio_maintenance =&gt; _12;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug default_margin_ratio =&gt; _37;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug size_adj_margin_ratio =&gt; _50;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug margin_ratio =&gt; _61;<br align="left"/>>;
    bb0__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).22: state::perp_market::MarketStatus)<br/>StorageLive(_8)<br/>_65 = const _<br/>_8 = &amp;(*_65)<br/></td></tr><tr><td align="left">_6 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _7, move _8)</td></tr></table>>];
    bb1__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb2__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(const 0_u32)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _4<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb4__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/></td></tr><tr><td align="left">_15 = PerpMarket::is_high_leverage_mode_enabled(move _16)</td></tr></table>>];
    bb5__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb6__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_1).32: u16)<br/></td></tr><tr><td align="left">_19 = &lt;u16 as Cast&gt;::cast::&lt;u32&gt;(move _20)</td></tr></table>>];
    bb7__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_21 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_18 as Continue).0: u32)<br/>_17 = _25<br/>StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).33: u16)<br/></td></tr><tr><td align="left">_28 = &lt;u16 as Cast&gt;::cast::&lt;u32&gt;(move _29)</td></tr></table>>];
    bb10__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb12__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb14__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_30 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Continue).0: u32)<br/>_26 = _34<br/>StorageDead(_34)<br/>_13 = (move _17, move _26)<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageDead(_27)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb17__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_17)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((*_1).15: u32)<br/>StorageLive(_36)<br/>_36 = ((*_1).16: u32)<br/>_13 = (move _35, move _36)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_11)<br/>_11 = (_13.0: u32)<br/>StorageLive(_12)<br/>_12 = (_13.1: u32)<br/>StorageDead(_13)<br/>StorageLive(_37)<br/>_38 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_37 = _12<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_37 = _11<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _11<br/>StorageLive(_43)<br/>_43 = _12<br/></td></tr><tr><td align="left">_41 = &lt;u32 as SafeMath&gt;::safe_add(move _42, move _43)</td></tr></table>>];
    bb24__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb25__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_44 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb26__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_40 as Continue).0: u32)<br/>_39 = _48<br/>StorageDead(_48)<br/>_49 = Eq(const 2_u32, const 0_u32)<br/></td></tr><tr><td align="left">assert(!move _49, &quot;attempt to divide `{}` by zero&quot;, _39)</td></tr></table>>];
    bb27__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb28__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_39)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_37 = Div(move _39, const 2_u32)<br/>StorageDead(_39)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _2<br/>StorageLive(_54)<br/>_54 = ((*_1).11: u32)<br/>StorageLive(_55)<br/>_55 = _37<br/></td></tr><tr><td align="left">_52 = calculate_size_premium_liability_weight(move _53, move _54, move _55, const _)</td></tr></table>>];
    bb31__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb32__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_56 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb33__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_51 as Continue).0: u32)<br/>_50 = _60<br/>StorageDead(_60)<br/>StorageDead(_51)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _37<br/>StorageLive(_63)<br/>_63 = _50<br/></td></tr><tr><td align="left">_61 = &lt;u32 as Ord&gt;::max(move _62, move _63)</td></tr></table>>];
    bb34__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb35__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_64)<br/>_64 = _61<br/>_0 = std::result::Result::&lt;u32, error::ErrorCode&gt;::Ok(move _64)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_50)<br/>StorageDead(_37)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_3799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3799 -> bb1__0_3799 [label="return"];
    bb1__0_3799 -> bb3__0_3799 [label="0"];
    bb1__0_3799 -> bb2__0_3799 [label="otherwise"];
    bb2__0_3799 -> bb39__0_3799 [label=""];
    bb3__0_3799 -> bb19__0_3799 [label="0"];
    bb3__0_3799 -> bb4__0_3799 [label="otherwise"];
    bb4__0_3799 -> bb5__0_3799 [label="return"];
    bb5__0_3799 -> bb18__0_3799 [label="0"];
    bb5__0_3799 -> bb6__0_3799 [label="otherwise"];
    bb6__0_3799 -> bb7__0_3799 [label="return"];
    bb7__0_3799 -> bb8__0_3799 [label="return"];
    bb8__0_3799 -> bb9__0_3799 [label="0"];
    bb8__0_3799 -> bb11__0_3799 [label="1"];
    bb8__0_3799 -> bb10__0_3799 [label="otherwise"];
    bb9__0_3799 -> bb13__0_3799 [label="return"];
    bb11__0_3799 -> bb12__0_3799 [label="return"];
    bb12__0_3799 -> bb38__0_3799 [label=""];
    bb13__0_3799 -> bb14__0_3799 [label="return"];
    bb14__0_3799 -> bb15__0_3799 [label="0"];
    bb14__0_3799 -> bb16__0_3799 [label="1"];
    bb14__0_3799 -> bb10__0_3799 [label="otherwise"];
    bb15__0_3799 -> bb20__0_3799 [label=""];
    bb16__0_3799 -> bb17__0_3799 [label="return"];
    bb17__0_3799 -> bb38__0_3799 [label=""];
    bb18__0_3799 -> bb19__0_3799 [label=""];
    bb19__0_3799 -> bb20__0_3799 [label=""];
    bb20__0_3799 -> bb22__0_3799 [label="0"];
    bb20__0_3799 -> bb23__0_3799 [label="1"];
    bb20__0_3799 -> bb21__0_3799 [label="2"];
    bb20__0_3799 -> bb10__0_3799 [label="otherwise"];
    bb21__0_3799 -> bb30__0_3799 [label=""];
    bb22__0_3799 -> bb30__0_3799 [label=""];
    bb23__0_3799 -> bb24__0_3799 [label="return"];
    bb24__0_3799 -> bb25__0_3799 [label="return"];
    bb25__0_3799 -> bb26__0_3799 [label="0"];
    bb25__0_3799 -> bb27__0_3799 [label="1"];
    bb25__0_3799 -> bb10__0_3799 [label="otherwise"];
    bb26__0_3799 -> bb29__0_3799 [label="success"];
    bb27__0_3799 -> bb28__0_3799 [label="return"];
    bb28__0_3799 -> bb37__0_3799 [label=""];
    bb29__0_3799 -> bb30__0_3799 [label=""];
    bb30__0_3799 -> bb31__0_3799 [label="return"];
    bb31__0_3799 -> bb32__0_3799 [label="return"];
    bb32__0_3799 -> bb33__0_3799 [label="0"];
    bb32__0_3799 -> bb34__0_3799 [label="1"];
    bb32__0_3799 -> bb10__0_3799 [label="otherwise"];
    bb33__0_3799 -> bb36__0_3799 [label="return"];
    bb34__0_3799 -> bb35__0_3799 [label="return"];
    bb35__0_3799 -> bb37__0_3799 [label=""];
    bb36__0_3799 -> bb39__0_3799 [label=""];
    bb37__0_3799 -> bb39__0_3799 [label=""];
    bb38__0_3799 -> bb39__0_3799 [label=""];
}
