digraph Mir_0_9257 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_liquidate_perp_with_fill(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::LiquidatePerp&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: anchor_lang::prelude::Clock;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _15: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _20: anchor_lang::prelude::Clock;<br align="left"/>let _21: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _22: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _24: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _26: ();<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _29: bool;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _32: ();<br align="left"/>let _33: error::ErrorCode;<br align="left"/>let _34: ();<br align="left"/>let mut _35: &amp;ReErased str;<br align="left"/>let _36: &amp;ReErased str;<br align="left"/>let mut _37: &amp;ReErased std::string::String;<br align="left"/>let _38: &amp;ReErased std::string::String;<br align="left"/>let _39: std::string::String;<br align="left"/>let _40: std::string::String;<br align="left"/>let mut _41: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _44: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _45: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _46: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _47: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _49: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _50: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased error::ErrorCode;<br align="left"/>let _52: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _53: error::ErrorCode;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: ();<br align="left"/>let _59: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _60: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _61: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _62: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _63: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _64: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _65: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _66: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _69: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _70: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _71: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _72: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _73: u16;<br align="left"/>let mut _74: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _75: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _76: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _79: state::state::OracleGuardRails;<br align="left"/>let mut _80: &amp;ReErased state::state::State;<br align="left"/>let mut _81: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _87: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _88: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _89: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;)&gt;;<br align="left"/>let mut _91: std::result::Result&lt;(state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _92: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let _98: ();<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _100: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _101: u16;<br align="left"/>let mut _102: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _103: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _104: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _105: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _106: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _107: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _108: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _109: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _110: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _111: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _113: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _114: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _115: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _116: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _117: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _119: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _120: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _121: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _125: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _126: &amp;ReErased state::state::State;<br align="left"/>let _127: &amp;ReErased state::state::State;<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: ();<br align="left"/>let mut _134: ();<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _136: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _137: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _138: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _142: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _143: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _145: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _146: &amp;ReErased mut instructions::keeper::LiquidatePerp&lt;ReErased&gt;;<br align="left"/>let mut _147: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _171: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _172: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug state =&gt; _21;<br align="left"/>debug user_key =&gt; _22;<br align="left"/>debug liquidator_key =&gt; _24;<br align="left"/>debug error_code =&gt; _33;<br align="left"/>debug res =&gt; _40;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug remaining_accounts_iter =&gt; _59;<br align="left"/>debug perp_market_map =&gt; _63;<br align="left"/>debug spot_market_map =&gt; _64;<br align="left"/>debug oracle_map =&gt; _65;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug makers_and_referrer =&gt; _87;<br align="left"/>debug makers_and_referrer_stats =&gt; _88;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>>;
    bb0__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_136 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_7 = &amp;((*_136).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_137 = deref_copy (*_7)<br/>_170 = (((_137.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_170)<br/></td></tr><tr><td align="left">_5 = constraints::liq_not_paused(move _6)</td></tr></table>>];
    bb1__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_148 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_162 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_16 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_14 as Continue).0: anchor_lang::prelude::Clock)<br/>_13 = move _20<br/>StorageDead(_20)<br/>_150 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_21)<br/>_138 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_21 = &amp;((*_138).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_139 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_23 = &amp;((*_139).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_22 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _23)</td></tr></table>>];
    bb10__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_160 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_140 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_25 = &amp;((*_140).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _25)</td></tr></table>>];
    bb13__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_22<br/>StorageLive(_31)<br/>_31 = &amp;_24<br/></td></tr><tr><td align="left">_29 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _30, move _31)</td></tr></table>>];
    bb14__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb15__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>_32 = ()<br/>_28 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_33)<br/>_33 = error::ErrorCode::UserCantLiquidateThemself<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_135 = const _<br/>_44 = &amp;(*_135)<br/>_43 = &amp;(*_44)<br/>_42 = move _43 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_33<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _51)</td></tr></table>>];
    bb17__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_49 = [move _50]<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_41 = Arguments::&lt;'_&gt;::new_v1(move _42, move _46)</td></tr></table>>];
    bb18__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = format(move _41)</td></tr></table>>];
    bb19__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_44)<br/>_39 = move _40<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = &lt;String as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb20__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_35 = &amp;(*_36)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_34 = solana_program::log::sol_log(move _35)</td></tr></table>>];
    bb21__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb22__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageLive(_53)<br/>_53 = _33<br/>_28 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _53)<br/>StorageDead(_53)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb24__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_54 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb25__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_27 as Continue).0: ())<br/>_26 = _58<br/>StorageDead(_58)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_141 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_62 = &amp;(*_141)<br/></td></tr><tr><td align="left">_61 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _62)</td></tr></table>>];
    bb26__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb27__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _61)</td></tr></table>>];
    bb29__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = &amp;mut _60<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_59)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = _2<br/></td></tr><tr><td align="left">_72 = get_writable_perp_market_set(move _73)</td></tr></table>>];
    bb30__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/></td></tr><tr><td align="left">_76 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb31__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_75 = &amp;_76<br/>_74 = &amp;(*_75)<br/>StorageLive(_77)<br/>_77 = (_13.0: u64)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_142 = deref_copy (*_21)<br/>_171 = (((_142.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_81 = &amp;(*_171)<br/></td></tr><tr><td align="left">_80 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _81)</td></tr></table>>];
    bb32__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = ((*_80).7: state::state::OracleGuardRails)<br/>_78 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _79)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_68 = load_maps(move _69, move _70, move _74, move _77, move _78)</td></tr></table>>];
    bb33__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb34__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_82 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb35__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = move ((_67 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_66 = move _86<br/>StorageDead(_86)<br/>StorageLive(_63)<br/>_63 = move (_66.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_64)<br/>_64 = move (_66.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_65)<br/>_65 = move (_66.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_154 = discriminant(_67)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb36__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb37__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/>_152 = discriminant(_67)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb38__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb39__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;mut (*_59)<br/></td></tr><tr><td align="left">_91 = load_user_maps::&lt;'_, '_&gt;(move _92, const true)</td></tr></table>>];
    bb40__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb41__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_93 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb42__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = move ((_90 as Continue).0: (state::user_map::UserMap&lt;'_&gt;, state::user_map::UserStatsMap&lt;'_&gt;))<br/>_89 = move _97<br/>StorageDead(_97)<br/>StorageLive(_87)<br/>_87 = move (_89.0: state::user_map::UserMap&lt;'_&gt;)<br/>StorageLive(_88)<br/>_88 = move (_89.1: state::user_map::UserStatsMap&lt;'_&gt;)<br/>_158 = discriminant(_90)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _2<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_143 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_103 = &amp;((*_143).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_102 = &amp;(*_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;_22<br/>_104 = &amp;(*_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_144 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_107 = &amp;((*_144).5: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_106 = &amp;(*_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_145 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_109 = &amp;((*_145).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_108 = &amp;(*_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_24<br/>_110 = &amp;(*_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_146 = deref_copy (_1.1: &amp;mut instructions::keeper::LiquidatePerp&lt;'_&gt;)<br/>_113 = &amp;((*_146).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_112 = &amp;(*_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_87<br/>_114 = &amp;(*_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_88<br/>_116 = &amp;(*_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_63<br/>_118 = &amp;(*_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = &amp;_64<br/>_120 = &amp;(*_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut _65<br/>_122 = &amp;mut (*_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;_13<br/>_124 = &amp;(*_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_147 = deref_copy (*_21)<br/>_172 = (((_147.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_128 = &amp;(*_172)<br/></td></tr><tr><td align="left">_127 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb43__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb44__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>_156 = discriminant(_90)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_126 = &amp;(*_127)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_100 = controller::liquidation::liquidate_perp_with_fill(move _101, move _102, move _104, move _106, move _108, move _110, move _112, move _114, move _116, move _118, move _120, move _122, move _124, move _126)</td></tr></table>>];
    bb46__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb47__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_129 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb48__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_99 as Continue).0: ())<br/>_98 = _133<br/>StorageDead(_133)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageLive(_134)<br/>_134 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _134)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb49__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb50__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb51__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb52__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb53__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb54__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb55__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb57__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb59__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb60__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb61__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb63__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">return</td></tr></table>>];
    bb68__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb69__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_87)</td></tr></table>>];
    bb70__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb71__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb72__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb73__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb74__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_76)</td></tr></table>>];
    bb75__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb76__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb77__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb78__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_165 = discriminant(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_167 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_168 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_9257 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_169 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9257 -> bb1__0_9257 [label="return"];
    bb1__0_9257 -> bb2__0_9257 [label="return"];
    bb1__0_9257 -> bb77__0_9257 [label="unwind"];
    bb2__0_9257 -> bb3__0_9257 [label="0"];
    bb2__0_9257 -> bb5__0_9257 [label="1"];
    bb2__0_9257 -> bb4__0_9257 [label="otherwise"];
    bb3__0_9257 -> bb7__0_9257 [label="return"];
    bb5__0_9257 -> bb6__0_9257 [label="return"];
    bb5__0_9257 -> bb81__0_9257 [label="unwind"];
    bb6__0_9257 -> bb67__0_9257 [label=""];
    bb7__0_9257 -> bb8__0_9257 [label="return"];
    bb7__0_9257 -> bb77__0_9257 [label="unwind"];
    bb8__0_9257 -> bb9__0_9257 [label="0"];
    bb8__0_9257 -> bb10__0_9257 [label="1"];
    bb8__0_9257 -> bb4__0_9257 [label="otherwise"];
    bb9__0_9257 -> bb12__0_9257 [label="return"];
    bb10__0_9257 -> bb11__0_9257 [label="return"];
    bb10__0_9257 -> bb80__0_9257 [label="unwind"];
    bb11__0_9257 -> bb66__0_9257 [label=""];
    bb12__0_9257 -> bb13__0_9257 [label="return"];
    bb13__0_9257 -> bb14__0_9257 [label="return"];
    bb14__0_9257 -> bb16__0_9257 [label="0"];
    bb14__0_9257 -> bb15__0_9257 [label="otherwise"];
    bb15__0_9257 -> bb23__0_9257 [label=""];
    bb16__0_9257 -> bb17__0_9257 [label="return"];
    bb17__0_9257 -> bb18__0_9257 [label="return"];
    bb18__0_9257 -> bb19__0_9257 [label="return"];
    bb19__0_9257 -> bb20__0_9257 [label="return"];
    bb19__0_9257 -> bb76__0_9257 [label="unwind"];
    bb20__0_9257 -> bb21__0_9257 [label="return"];
    bb20__0_9257 -> bb76__0_9257 [label="unwind"];
    bb21__0_9257 -> bb22__0_9257 [label="return"];
    bb21__0_9257 -> bb77__0_9257 [label="unwind"];
    bb22__0_9257 -> bb23__0_9257 [label=""];
    bb23__0_9257 -> bb24__0_9257 [label="return"];
    bb24__0_9257 -> bb25__0_9257 [label="0"];
    bb24__0_9257 -> bb26__0_9257 [label="1"];
    bb24__0_9257 -> bb4__0_9257 [label="otherwise"];
    bb25__0_9257 -> bb28__0_9257 [label="return"];
    bb26__0_9257 -> bb27__0_9257 [label="return"];
    bb27__0_9257 -> bb65__0_9257 [label=""];
    bb28__0_9257 -> bb29__0_9257 [label="return"];
    bb29__0_9257 -> bb30__0_9257 [label="return"];
    bb30__0_9257 -> bb31__0_9257 [label="return"];
    bb30__0_9257 -> bb75__0_9257 [label="unwind"];
    bb31__0_9257 -> bb32__0_9257 [label="return"];
    bb31__0_9257 -> bb74__0_9257 [label="unwind"];
    bb32__0_9257 -> bb33__0_9257 [label="return"];
    bb32__0_9257 -> bb74__0_9257 [label="unwind"];
    bb33__0_9257 -> bb34__0_9257 [label="return"];
    bb33__0_9257 -> bb74__0_9257 [label="unwind"];
    bb34__0_9257 -> bb35__0_9257 [label="0"];
    bb34__0_9257 -> bb36__0_9257 [label="1"];
    bb34__0_9257 -> bb4__0_9257 [label="otherwise"];
    bb35__0_9257 -> bb38__0_9257 [label="return"];
    bb35__0_9257 -> bb70__0_9257 [label="unwind"];
    bb36__0_9257 -> bb37__0_9257 [label="return"];
    bb36__0_9257 -> bb79__0_9257 [label="unwind"];
    bb37__0_9257 -> bb62__0_9257 [label="return"];
    bb37__0_9257 -> bb75__0_9257 [label="unwind"];
    bb38__0_9257 -> bb39__0_9257 [label="return"];
    bb38__0_9257 -> bb71__0_9257 [label="unwind"];
    bb39__0_9257 -> bb40__0_9257 [label="return"];
    bb39__0_9257 -> bb71__0_9257 [label="unwind"];
    bb40__0_9257 -> bb41__0_9257 [label="return"];
    bb40__0_9257 -> bb71__0_9257 [label="unwind"];
    bb41__0_9257 -> bb42__0_9257 [label="0"];
    bb41__0_9257 -> bb43__0_9257 [label="1"];
    bb41__0_9257 -> bb4__0_9257 [label="otherwise"];
    bb42__0_9257 -> bb45__0_9257 [label="return"];
    bb42__0_9257 -> bb68__0_9257 [label="unwind"];
    bb43__0_9257 -> bb44__0_9257 [label="return"];
    bb43__0_9257 -> bb78__0_9257 [label="unwind"];
    bb44__0_9257 -> bb58__0_9257 [label=""];
    bb45__0_9257 -> bb46__0_9257 [label="return"];
    bb45__0_9257 -> bb68__0_9257 [label="unwind"];
    bb46__0_9257 -> bb47__0_9257 [label="return"];
    bb46__0_9257 -> bb68__0_9257 [label="unwind"];
    bb47__0_9257 -> bb48__0_9257 [label="0"];
    bb47__0_9257 -> bb49__0_9257 [label="1"];
    bb47__0_9257 -> bb4__0_9257 [label="otherwise"];
    bb48__0_9257 -> bb51__0_9257 [label="return"];
    bb48__0_9257 -> bb69__0_9257 [label="unwind"];
    bb49__0_9257 -> bb50__0_9257 [label="return"];
    bb49__0_9257 -> bb68__0_9257 [label="unwind"];
    bb50__0_9257 -> bb56__0_9257 [label="return"];
    bb50__0_9257 -> bb69__0_9257 [label="unwind"];
    bb51__0_9257 -> bb52__0_9257 [label="return"];
    bb51__0_9257 -> bb71__0_9257 [label="unwind"];
    bb52__0_9257 -> bb53__0_9257 [label="return"];
    bb52__0_9257 -> bb72__0_9257 [label="unwind"];
    bb53__0_9257 -> bb54__0_9257 [label="return"];
    bb53__0_9257 -> bb73__0_9257 [label="unwind"];
    bb54__0_9257 -> bb55__0_9257 [label="return"];
    bb54__0_9257 -> bb77__0_9257 [label="unwind"];
    bb55__0_9257 -> bb67__0_9257 [label=""];
    bb56__0_9257 -> bb57__0_9257 [label="return"];
    bb56__0_9257 -> bb71__0_9257 [label="unwind"];
    bb57__0_9257 -> bb58__0_9257 [label=""];
    bb58__0_9257 -> bb59__0_9257 [label="return"];
    bb58__0_9257 -> bb72__0_9257 [label="unwind"];
    bb59__0_9257 -> bb60__0_9257 [label="return"];
    bb59__0_9257 -> bb73__0_9257 [label="unwind"];
    bb60__0_9257 -> bb61__0_9257 [label="return"];
    bb60__0_9257 -> bb77__0_9257 [label="unwind"];
    bb61__0_9257 -> bb64__0_9257 [label=""];
    bb62__0_9257 -> bb63__0_9257 [label="return"];
    bb62__0_9257 -> bb77__0_9257 [label="unwind"];
    bb63__0_9257 -> bb64__0_9257 [label=""];
    bb64__0_9257 -> bb65__0_9257 [label=""];
    bb65__0_9257 -> bb66__0_9257 [label=""];
    bb66__0_9257 -> bb67__0_9257 [label=""];
    bb68__0_9257 -> bb69__0_9257 [label="return"];
    bb69__0_9257 -> bb71__0_9257 [label="return"];
    bb70__0_9257 -> bb71__0_9257 [label="return"];
    bb71__0_9257 -> bb72__0_9257 [label="return"];
    bb72__0_9257 -> bb73__0_9257 [label="return"];
    bb73__0_9257 -> bb77__0_9257 [label="return"];
    bb74__0_9257 -> bb75__0_9257 [label="return"];
    bb75__0_9257 -> bb77__0_9257 [label="return"];
    bb76__0_9257 -> bb77__0_9257 [label="return"];
    bb78__0_9257 -> bb71__0_9257 [label=""];
    bb79__0_9257 -> bb74__0_9257 [label=""];
    bb80__0_9257 -> bb77__0_9257 [label=""];
    bb81__0_9257 -> bb77__0_9257 [label=""];
}
