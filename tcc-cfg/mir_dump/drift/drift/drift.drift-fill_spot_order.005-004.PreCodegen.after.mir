// MIR for `drift::fill_spot_order` after PreCodegen

fn drift::fill_spot_order(_1: anchor_lang::context::Context<'_, '_, '_, '_, keeper::FillOrder<'_>>, _2: Option<u32>, _3: Option<keeper::SpotFulfillmentType>, _4: Option<u32>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug order_id => _2;
    debug fulfillment_type => _3;
    debug maker_order_id => _4;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _5: anchor_lang::context::Context<'_, '_, '_, '_, instructions::keeper::FillOrder<'_>>;
    let mut _6: std::option::Option<u32>;
    let mut _7: std::option::Option<instructions::keeper::SpotFulfillmentType>;
    let mut _8: std::option::Option<u32>;

    bb0: {
        StorageLive(_5);
        _5 = move _1;
        StorageLive(_6);
        _6 = _2;
        StorageLive(_7);
        _7 = _3;
        StorageLive(_8);
        _8 = _4;
        _0 = keeper::handle_fill_spot_order::<'_, '_>(move _5, move _6, move _7, move _8) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        return;
    }
}
