digraph Mir_0_2712 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_per_peg_cost(_1: u128, _2: u128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _3: i128;<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: u128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _12: i128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: i128;<br align="left"/>let mut _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i128;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: i128;<br align="left"/>let mut _35: i128;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i128;<br align="left"/>let mut _45: i128;<br align="left"/>let mut _46: bool;<br align="left"/>let mut _47: i128;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _49: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: i128;<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: i128;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _59: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _60: i128;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: i128;<br align="left"/>debug quote_asset_reserve =&gt; _1;<br align="left"/>debug terminal_quote_asset_reserve =&gt; _2;<br align="left"/>debug per_peg_cost =&gt; _3;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>>;
    bb0__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _1<br/>StorageLive(_6)<br/>_6 = _2<br/>_4 = Ne(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _1<br/></td></tr><tr><td align="left">_14 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _15)</td></tr></table>>];
    bb2__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb3__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: i128)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _2<br/></td></tr><tr><td align="left">_23 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _24)</td></tr></table>>];
    bb5__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb10__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: i128)<br/>_21 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_11 = &lt;i128 as SafeMath&gt;::safe_sub(move _12, move _21)</td></tr></table>>];
    bb11__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb12__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb14__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_30 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_10 as Continue).0: i128)<br/>_9 = _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>_36 = Eq(const _, const 0_i128)<br/></td></tr><tr><td align="left">assert(!move _36, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb16__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb17__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_37 = Eq(const _, const -1_i128)<br/>_38 = Eq(const _, const i128::MIN)<br/>_39 = BitAnd(move _37, move _38)<br/></td></tr><tr><td align="left">assert(!move _39, &quot;attempt to compute `{} / {}`, which would overflow&quot;, const _, const _)</td></tr></table>>];
    bb19__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_35 = Div(const _, const _)<br/></td></tr><tr><td align="left">_8 = &lt;i128 as SafeMath&gt;::safe_div_ceil(move _9, move _35)</td></tr></table>>];
    bb20__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb21__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_40 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb22__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_7 as Continue).0: i128)<br/>_3 = _44<br/>StorageDead(_44)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb24__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const 0_i128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _3<br/>_46 = Gt(move _47, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb27__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _3<br/></td></tr><tr><td align="left">_49 = &lt;i128 as SafeMath&gt;::safe_add(move _50, const 1_i128)</td></tr></table>>];
    bb28__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb29__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_51 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb30__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_48 as Continue).0: i128)<br/>_45 = _55<br/>StorageDead(_55)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb32__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _3<br/>_56 = Lt(move _57, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb34__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _3<br/></td></tr><tr><td align="left">_59 = &lt;i128 as SafeMath&gt;::safe_sub(move _60, const 1_i128)</td></tr></table>>];
    bb35__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb36__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_61 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb37__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_58 as Continue).0: i128)<br/>_45 = _65<br/>StorageDead(_65)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb39__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_45 = _3<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _45)<br/>StorageDead(_45)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2712 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2712 -> bb25__0_2712 [label="0"];
    bb0__0_2712 -> bb1__0_2712 [label="otherwise"];
    bb1__0_2712 -> bb2__0_2712 [label="return"];
    bb2__0_2712 -> bb3__0_2712 [label="return"];
    bb3__0_2712 -> bb4__0_2712 [label="0"];
    bb3__0_2712 -> bb6__0_2712 [label="1"];
    bb3__0_2712 -> bb5__0_2712 [label="otherwise"];
    bb4__0_2712 -> bb8__0_2712 [label="return"];
    bb6__0_2712 -> bb7__0_2712 [label="return"];
    bb7__0_2712 -> bb46__0_2712 [label=""];
    bb8__0_2712 -> bb9__0_2712 [label="return"];
    bb9__0_2712 -> bb10__0_2712 [label="0"];
    bb9__0_2712 -> bb11__0_2712 [label="1"];
    bb9__0_2712 -> bb5__0_2712 [label="otherwise"];
    bb10__0_2712 -> bb13__0_2712 [label="return"];
    bb11__0_2712 -> bb12__0_2712 [label="return"];
    bb12__0_2712 -> bb44__0_2712 [label=""];
    bb13__0_2712 -> bb14__0_2712 [label="return"];
    bb14__0_2712 -> bb15__0_2712 [label="0"];
    bb14__0_2712 -> bb16__0_2712 [label="1"];
    bb14__0_2712 -> bb5__0_2712 [label="otherwise"];
    bb15__0_2712 -> bb18__0_2712 [label="success"];
    bb16__0_2712 -> bb17__0_2712 [label="return"];
    bb17__0_2712 -> bb44__0_2712 [label=""];
    bb18__0_2712 -> bb19__0_2712 [label="success"];
    bb19__0_2712 -> bb20__0_2712 [label="return"];
    bb20__0_2712 -> bb21__0_2712 [label="return"];
    bb21__0_2712 -> bb22__0_2712 [label="0"];
    bb21__0_2712 -> bb23__0_2712 [label="1"];
    bb21__0_2712 -> bb5__0_2712 [label="otherwise"];
    bb22__0_2712 -> bb26__0_2712 [label=""];
    bb23__0_2712 -> bb24__0_2712 [label="return"];
    bb24__0_2712 -> bb45__0_2712 [label=""];
    bb25__0_2712 -> bb26__0_2712 [label=""];
    bb26__0_2712 -> bb33__0_2712 [label="0"];
    bb26__0_2712 -> bb27__0_2712 [label="otherwise"];
    bb27__0_2712 -> bb28__0_2712 [label="return"];
    bb28__0_2712 -> bb29__0_2712 [label="return"];
    bb29__0_2712 -> bb30__0_2712 [label="0"];
    bb29__0_2712 -> bb31__0_2712 [label="1"];
    bb29__0_2712 -> bb5__0_2712 [label="otherwise"];
    bb30__0_2712 -> bb42__0_2712 [label=""];
    bb31__0_2712 -> bb32__0_2712 [label="return"];
    bb32__0_2712 -> bb43__0_2712 [label=""];
    bb33__0_2712 -> bb40__0_2712 [label="0"];
    bb33__0_2712 -> bb34__0_2712 [label="otherwise"];
    bb34__0_2712 -> bb35__0_2712 [label="return"];
    bb35__0_2712 -> bb36__0_2712 [label="return"];
    bb36__0_2712 -> bb37__0_2712 [label="0"];
    bb36__0_2712 -> bb38__0_2712 [label="1"];
    bb36__0_2712 -> bb5__0_2712 [label="otherwise"];
    bb37__0_2712 -> bb41__0_2712 [label=""];
    bb38__0_2712 -> bb39__0_2712 [label="return"];
    bb39__0_2712 -> bb43__0_2712 [label=""];
    bb40__0_2712 -> bb41__0_2712 [label=""];
    bb41__0_2712 -> bb42__0_2712 [label=""];
    bb42__0_2712 -> bb48__0_2712 [label=""];
    bb43__0_2712 -> bb47__0_2712 [label=""];
    bb44__0_2712 -> bb45__0_2712 [label=""];
    bb45__0_2712 -> bb46__0_2712 [label=""];
    bb46__0_2712 -> bb47__0_2712 [label=""];
    bb47__0_2712 -> bb48__0_2712 [label=""];
}
