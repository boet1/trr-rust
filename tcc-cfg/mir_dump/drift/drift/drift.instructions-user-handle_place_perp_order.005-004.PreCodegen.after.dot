digraph Mir_0_11716 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_place_perp_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::PlaceOrder&lt;ReErased&gt;&gt;, _2: state::order_params::OrderParams) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _23: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _24: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _25: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _26: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _27: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _28: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _29: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _31: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _35: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _36: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _39: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _42: state::state::OracleGuardRails;<br align="left"/>let mut _43: &amp;ReErased state::state::State;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _50: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _54: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _60: ();<br align="left"/>let mut _61: bool;<br align="left"/>let mut _62: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _63: !;<br align="left"/>let _64: ();<br align="left"/>let mut _65: &amp;ReErased str;<br align="left"/>let _66: &amp;ReErased str;<br align="left"/>let mut _67: anchor_lang::error::Error;<br align="left"/>let mut _68: error::ErrorCode;<br align="left"/>let mut _69: &amp;ReErased Closure(DefId(0:11719 ~ drift[d311]::instructions::user::handle_place_perp_order::{closure#0}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _70: Closure(DefId(0:11719 ~ drift[d311]::instructions::user::handle_place_perp_order::{closure#0}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _71: ();<br align="left"/>let _72: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _73: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _74: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _76: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _77: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _79: Closure(DefId(0:11720 ~ drift[d311]::instructions::user::handle_place_perp_order::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _85: ();<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _87: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _88: &amp;ReErased state::state::State;<br align="left"/>let _89: &amp;ReErased state::state::State;<br align="left"/>let mut _90: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _91: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _92: &amp;ReErased mut state::user::User;<br align="left"/>let mut _93: &amp;ReErased mut state::user::User;<br align="left"/>let mut _94: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _95: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _96: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _97: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _98: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _100: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let _104: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _105: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _106: state::order_params::OrderParams;<br align="left"/>let mut _107: state::order_params::PlaceOrderOptions;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: ();<br align="left"/>let mut _113: ();<br align="left"/>let mut _114: &amp;ReErased Closure(DefId(0:11719 ~ drift[d311]::instructions::user::handle_place_perp_order::{closure#0}), [ReErased, ReErased, i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _115: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _116: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _117: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _119: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _120: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased mut instructions::user::PlaceOrder&lt;ReErased&gt;;<br align="left"/>let mut _123: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _146: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _147: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug params =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug state =&gt; _22;<br align="left"/>debug remaining_accounts =&gt; _23;<br align="left"/>debug perp_market_map =&gt; _26;<br align="left"/>debug spot_market_map =&gt; _27;<br align="left"/>debug oracle_map =&gt; _28;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug high_leverage_mode_config =&gt; _50;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug user_key =&gt; _72;<br align="left"/>debug user =&gt; _74;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>>;
    bb0__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_115 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_7 = &amp;((*_115).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_116 = deref_copy (*_7)<br/>_145 = (((_116.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_145)<br/></td></tr><tr><td align="left">_5 = constraints::exchange_not_paused(move _6)</td></tr></table>>];
    bb1__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_124 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_138 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_13 = &amp;_14<br/>_126 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_117 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_22 = &amp;((*_117).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_118 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_25 = &amp;(*_118)<br/></td></tr><tr><td align="left">_24 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _25)</td></tr></table>>];
    bb10__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_136 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _24)</td></tr></table>>];
    bb13__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;mut _23<br/>_32 = &amp;mut (*_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/></td></tr><tr><td align="left">_36 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_35 = &amp;_36<br/>_34 = &amp;(*_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/></td></tr><tr><td align="left">_39 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb15__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>StorageLive(_40)<br/>_40 = ((*_13).0: u64)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_119 = deref_copy (*_22)<br/>_146 = (((_119.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_44 = &amp;(*_146)<br/></td></tr><tr><td align="left">_43 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb16__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = ((*_43).7: state::state::OracleGuardRails)<br/>_41 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_31 = load_maps(move _32, move _34, move _37, move _40, move _41)</td></tr></table>>];
    bb17__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb18__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_45 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb19__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_30 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_29 = move _49<br/>StorageDead(_49)<br/>StorageLive(_26)<br/>_26 = move (_29.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_27)<br/>_27 = move (_29.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_28)<br/>_28 = move (_29.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_130 = discriminant(_30)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb20__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb21__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_128 = discriminant(_30)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb22__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb23__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;mut _23<br/>_53 = &amp;mut (*_54)<br/></td></tr><tr><td align="left">_52 = get_high_leverage_mode_config(move _53)</td></tr></table>>];
    bb24__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb25__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_55 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb26__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_51 as Continue).0: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;)<br/>_50 = move _59<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_2<br/></td></tr><tr><td align="left">_61 = order_params::OrderParams::is_immediate_or_cancel(move _62)</td></tr></table>>];
    bb27__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb28__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb30__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = const &quot;immediate_or_cancel order must be in place_and_make or place_and_take&quot;<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = solana_program::log::sol_log(move _65)</td></tr></table>>];
    bb31__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_114 = const _<br/>_69 = &amp;(*_114)<br/>StorageLive(_71)<br/>_71 = ()<br/></td></tr><tr><td align="left">_68 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _69, move _71)</td></tr></table>>];
    bb32__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _68)</td></tr></table>>];
    bb33__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _67)<br/>StorageDead(_67)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = const ()<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_120 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_73 = &amp;((*_120).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_72 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _73)</td></tr></table>>];
    bb35__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_121 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_78 = &amp;((*_121).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_77 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _78)</td></tr></table>>];
    bb36__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_79)<br/>_79 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_76 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _77, move _79)</td></tr></table>>];
    bb37__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb38__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_80 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb39__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = move ((_75 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_74 = move _84<br/>StorageDead(_84)<br/>_134 = discriminant(_75)<br/>StorageDead(_75)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_122 = deref_copy (_1.1: &amp;mut instructions::user::PlaceOrder&lt;'_&gt;)<br/>_91 = &amp;((*_122).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_123 = deref_copy (*_91)<br/>_147 = (((_123.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_90 = &amp;(*_147)<br/></td></tr><tr><td align="left">_89 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb40__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb41__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>_132 = discriminant(_75)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_88 = &amp;(*_89)<br/>StorageDead(_90)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;mut _74<br/>_94 = &amp;mut (*_95)<br/></td></tr><tr><td align="left">_93 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _94)</td></tr></table>>];
    bb43__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_92 = &amp;mut (*_93)<br/>StorageDead(_94)<br/>StorageLive(_96)<br/>_96 = _72<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;_26<br/>_97 = &amp;(*_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;_27<br/>_99 = &amp;(*_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;mut _28<br/>_101 = &amp;mut (*_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_50<br/>_103 = &amp;(*_104)<br/>StorageLive(_105)<br/>_105 = &amp;(*_13)<br/>StorageLive(_106)<br/>_106 = _2<br/>StorageLive(_107)<br/></td></tr><tr><td align="left">_107 = &lt;PlaceOrderOptions as Default&gt;::default()</td></tr></table>>];
    bb44__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">_87 = controller::orders::place_perp_order(move _88, move _92, move _96, move _97, move _99, move _101, move _103, move _105, move _106, move _107)</td></tr></table>>];
    bb45__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_92)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb46__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_108 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb47__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_86 as Continue).0: ())<br/>_85 = _112<br/>StorageDead(_112)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_113)<br/>_113 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _113)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb48__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb49__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb50__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb51__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb52__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb53__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb56__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb57__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb58__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb60__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left">return</td></tr></table>>];
    bb64__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb65__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb66__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb67__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb68__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb69__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_39)</td></tr></table>>];
    bb70__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb71__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb72__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left" balign="left">_140 = discriminant(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left" balign="left">_142 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_11716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left" balign="left">_144 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_11716 -> bb1__0_11716 [label="return"];
    bb1__0_11716 -> bb2__0_11716 [label="return"];
    bb1__0_11716 -> bb71__0_11716 [label="unwind"];
    bb2__0_11716 -> bb3__0_11716 [label="0"];
    bb2__0_11716 -> bb5__0_11716 [label="1"];
    bb2__0_11716 -> bb4__0_11716 [label="otherwise"];
    bb3__0_11716 -> bb7__0_11716 [label="return"];
    bb5__0_11716 -> bb6__0_11716 [label="return"];
    bb5__0_11716 -> bb75__0_11716 [label="unwind"];
    bb6__0_11716 -> bb63__0_11716 [label=""];
    bb7__0_11716 -> bb8__0_11716 [label="return"];
    bb7__0_11716 -> bb71__0_11716 [label="unwind"];
    bb8__0_11716 -> bb9__0_11716 [label="0"];
    bb8__0_11716 -> bb10__0_11716 [label="1"];
    bb8__0_11716 -> bb4__0_11716 [label="otherwise"];
    bb9__0_11716 -> bb12__0_11716 [label="return"];
    bb10__0_11716 -> bb11__0_11716 [label="return"];
    bb10__0_11716 -> bb74__0_11716 [label="unwind"];
    bb11__0_11716 -> bb62__0_11716 [label=""];
    bb12__0_11716 -> bb13__0_11716 [label="return"];
    bb13__0_11716 -> bb14__0_11716 [label="return"];
    bb14__0_11716 -> bb15__0_11716 [label="return"];
    bb14__0_11716 -> bb70__0_11716 [label="unwind"];
    bb15__0_11716 -> bb16__0_11716 [label="return"];
    bb15__0_11716 -> bb69__0_11716 [label="unwind"];
    bb16__0_11716 -> bb17__0_11716 [label="return"];
    bb16__0_11716 -> bb69__0_11716 [label="unwind"];
    bb17__0_11716 -> bb18__0_11716 [label="return"];
    bb17__0_11716 -> bb69__0_11716 [label="unwind"];
    bb18__0_11716 -> bb19__0_11716 [label="0"];
    bb18__0_11716 -> bb20__0_11716 [label="1"];
    bb18__0_11716 -> bb4__0_11716 [label="otherwise"];
    bb19__0_11716 -> bb22__0_11716 [label="return"];
    bb19__0_11716 -> bb65__0_11716 [label="unwind"];
    bb20__0_11716 -> bb21__0_11716 [label="return"];
    bb20__0_11716 -> bb73__0_11716 [label="unwind"];
    bb21__0_11716 -> bb59__0_11716 [label="return"];
    bb21__0_11716 -> bb70__0_11716 [label="unwind"];
    bb22__0_11716 -> bb23__0_11716 [label="return"];
    bb22__0_11716 -> bb66__0_11716 [label="unwind"];
    bb23__0_11716 -> bb24__0_11716 [label="return"];
    bb23__0_11716 -> bb66__0_11716 [label="unwind"];
    bb24__0_11716 -> bb25__0_11716 [label="return"];
    bb24__0_11716 -> bb66__0_11716 [label="unwind"];
    bb25__0_11716 -> bb26__0_11716 [label="0"];
    bb25__0_11716 -> bb27__0_11716 [label="1"];
    bb25__0_11716 -> bb4__0_11716 [label="otherwise"];
    bb26__0_11716 -> bb29__0_11716 [label="return"];
    bb26__0_11716 -> bb66__0_11716 [label="unwind"];
    bb27__0_11716 -> bb28__0_11716 [label="return"];
    bb27__0_11716 -> bb66__0_11716 [label="unwind"];
    bb28__0_11716 -> bb55__0_11716 [label=""];
    bb29__0_11716 -> bb34__0_11716 [label="0"];
    bb29__0_11716 -> bb30__0_11716 [label="otherwise"];
    bb30__0_11716 -> bb31__0_11716 [label="return"];
    bb30__0_11716 -> bb66__0_11716 [label="unwind"];
    bb31__0_11716 -> bb32__0_11716 [label="return"];
    bb31__0_11716 -> bb66__0_11716 [label="unwind"];
    bb32__0_11716 -> bb33__0_11716 [label="return"];
    bb32__0_11716 -> bb66__0_11716 [label="unwind"];
    bb33__0_11716 -> bb55__0_11716 [label=""];
    bb34__0_11716 -> bb35__0_11716 [label="return"];
    bb34__0_11716 -> bb66__0_11716 [label="unwind"];
    bb35__0_11716 -> bb36__0_11716 [label="return"];
    bb35__0_11716 -> bb66__0_11716 [label="unwind"];
    bb36__0_11716 -> bb37__0_11716 [label="return"];
    bb36__0_11716 -> bb66__0_11716 [label="unwind"];
    bb37__0_11716 -> bb38__0_11716 [label="return"];
    bb37__0_11716 -> bb66__0_11716 [label="unwind"];
    bb38__0_11716 -> bb39__0_11716 [label="0"];
    bb38__0_11716 -> bb40__0_11716 [label="1"];
    bb38__0_11716 -> bb4__0_11716 [label="otherwise"];
    bb39__0_11716 -> bb42__0_11716 [label="return"];
    bb39__0_11716 -> bb64__0_11716 [label="unwind"];
    bb40__0_11716 -> bb41__0_11716 [label="return"];
    bb40__0_11716 -> bb72__0_11716 [label="unwind"];
    bb41__0_11716 -> bb54__0_11716 [label=""];
    bb42__0_11716 -> bb43__0_11716 [label="return"];
    bb42__0_11716 -> bb64__0_11716 [label="unwind"];
    bb43__0_11716 -> bb44__0_11716 [label="return"];
    bb43__0_11716 -> bb64__0_11716 [label="unwind"];
    bb44__0_11716 -> bb45__0_11716 [label="return"];
    bb44__0_11716 -> bb64__0_11716 [label="unwind"];
    bb45__0_11716 -> bb46__0_11716 [label="return"];
    bb45__0_11716 -> bb64__0_11716 [label="unwind"];
    bb46__0_11716 -> bb47__0_11716 [label="0"];
    bb46__0_11716 -> bb48__0_11716 [label="1"];
    bb46__0_11716 -> bb4__0_11716 [label="otherwise"];
    bb47__0_11716 -> bb50__0_11716 [label="return"];
    bb47__0_11716 -> bb66__0_11716 [label="unwind"];
    bb48__0_11716 -> bb49__0_11716 [label="return"];
    bb48__0_11716 -> bb64__0_11716 [label="unwind"];
    bb49__0_11716 -> bb54__0_11716 [label="return"];
    bb49__0_11716 -> bb66__0_11716 [label="unwind"];
    bb50__0_11716 -> bb51__0_11716 [label="return"];
    bb50__0_11716 -> bb67__0_11716 [label="unwind"];
    bb51__0_11716 -> bb52__0_11716 [label="return"];
    bb51__0_11716 -> bb68__0_11716 [label="unwind"];
    bb52__0_11716 -> bb53__0_11716 [label="return"];
    bb52__0_11716 -> bb71__0_11716 [label="unwind"];
    bb53__0_11716 -> bb63__0_11716 [label=""];
    bb54__0_11716 -> bb55__0_11716 [label=""];
    bb55__0_11716 -> bb56__0_11716 [label="return"];
    bb55__0_11716 -> bb67__0_11716 [label="unwind"];
    bb56__0_11716 -> bb57__0_11716 [label="return"];
    bb56__0_11716 -> bb68__0_11716 [label="unwind"];
    bb57__0_11716 -> bb58__0_11716 [label="return"];
    bb57__0_11716 -> bb71__0_11716 [label="unwind"];
    bb58__0_11716 -> bb61__0_11716 [label=""];
    bb59__0_11716 -> bb60__0_11716 [label="return"];
    bb59__0_11716 -> bb71__0_11716 [label="unwind"];
    bb60__0_11716 -> bb61__0_11716 [label=""];
    bb61__0_11716 -> bb62__0_11716 [label=""];
    bb62__0_11716 -> bb63__0_11716 [label=""];
    bb64__0_11716 -> bb66__0_11716 [label="return"];
    bb65__0_11716 -> bb66__0_11716 [label="return"];
    bb66__0_11716 -> bb67__0_11716 [label="return"];
    bb67__0_11716 -> bb68__0_11716 [label="return"];
    bb68__0_11716 -> bb71__0_11716 [label="return"];
    bb69__0_11716 -> bb70__0_11716 [label="return"];
    bb70__0_11716 -> bb71__0_11716 [label="return"];
    bb72__0_11716 -> bb66__0_11716 [label=""];
    bb73__0_11716 -> bb69__0_11716 [label=""];
    bb74__0_11716 -> bb71__0_11716 [label=""];
    bb75__0_11716 -> bb71__0_11716 [label=""];
}
