digraph Mir_0_2230 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_fee_for_fulfillment_with_external_market(_1: &amp;ReErased state::user::UserStats, _2: u64, _3: &amp;ReErased state::state::FeeStructure, _4: u64, _5: u64, _6: bool, _7: u64, _8: u64, _9: u64, _10: i16) -&gt; std::result::Result&lt;math::fees::ExternalFillFees, error::ErrorCode&gt;<br align="left"/>let _11: state::state::FeeTier;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::state::FeeTier&gt;;<br align="left"/>let mut _13: std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt;;<br align="left"/>let mut _14: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _15: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _16: &amp;ReErased state::user::MarketType;<br align="left"/>let _17: &amp;ReErased state::user::MarketType;<br align="left"/>let _18: state::user::MarketType;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: state::state::FeeTier;<br align="left"/>let _24: u64;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: &amp;ReErased state::state::FeeTier;<br align="left"/>let _29: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _30: i16;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u64;<br align="left"/>let _36: u64;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _38: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _39: u64;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: u64;<br align="left"/>let _46: u64;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: u64;<br align="left"/>let _49: u64;<br align="left"/>let mut _50: bool;<br align="left"/>let _51: u64;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _53: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: u64;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _63: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: u64;<br align="left"/>let _71: u64;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: u64;<br align="left"/>let mut _74: u64;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _79: u64;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let _83: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let mut _84: isize;<br align="left"/>let _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _86: !;<br align="left"/>let mut _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _88: u64;<br align="left"/>let mut _89: u64;<br align="left"/>let _90: u64;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _92: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _96: u64;<br align="left"/>let mut _97: u64;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: u64;<br align="left"/>let mut _103: u64;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: u64;<br align="left"/>let _109: i64;<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _111: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _112: i64;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _114: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _115: u64;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: i64;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _123: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: i64;<br align="left"/>let mut _130: isize;<br align="left"/>let _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _134: i64;<br align="left"/>let mut _135: math::fees::ExternalFillFees;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: u64;<br align="left"/>let mut _138: u64;<br align="left"/>let mut _139: i64;<br align="left"/>let mut _140: &amp;ReErased state::user::MarketType;<br align="left"/>debug user_stats =&gt; _1;<br align="left"/>debug quote_asset_amount =&gt; _2;<br align="left"/>debug fee_structure =&gt; _3;<br align="left"/>debug order_slot =&gt; _4;<br align="left"/>debug clock_slot =&gt; _5;<br align="left"/>debug reward_filler =&gt; _6;<br align="left"/>debug external_market_fee =&gt; _7;<br align="left"/>debug unsettled_referrer_rebate =&gt; _8;<br align="left"/>debug fee_pool_amount =&gt; _9;<br align="left"/>debug fee_adjustment =&gt; _10;<br align="left"/>debug taker_fee_tier =&gt; _11;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug fee =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug fee_plus_referrer_rebate =&gt; _36;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug user_fee =&gt; _46;<br align="left"/>debug filler_reward =&gt; _49;<br align="left"/>debug immediately_available_fee =&gt; _51;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug eventual_available_fee =&gt; _61;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug available_fee =&gt; _71;<br align="left"/>debug residual =&gt; _85;<br align="left"/>debug val =&gt; _88;<br align="left"/>debug fee_to_market =&gt; _90;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug fee_pool_delta =&gt; _109;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug residual =&gt; _131;<br align="left"/>debug val =&gt; _134;<br align="left"/>>;
    bb0__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_140 = const _<br/>_17 = &amp;(*_140)<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_13 = determine_user_fee_tier(move _14, move _15, move _16, const false)</td></tr></table>>];
    bb1__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb2__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_19 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb3__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_12 as Continue).0: state::state::FeeTier)<br/>_11 = _23<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _2<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;_11<br/>_28 = &amp;(*_29)<br/>StorageLive(_30)<br/>_30 = _10<br/></td></tr><tr><td align="left">_26 = calculate_taker_fee(move _27, move _28, move _30)</td></tr></table>>];
    bb4__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb6__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb8__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_31 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb9__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_25 as Continue).0: u64)<br/>_24 = _35<br/>StorageDead(_35)<br/>StorageDead(_29)<br/>StorageDead(_25)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _7<br/>StorageLive(_40)<br/>_40 = _8<br/></td></tr><tr><td align="left">_38 = &lt;u64 as SafeMath&gt;::safe_add(move _39, move _40)</td></tr></table>>];
    bb10__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb11__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb13__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_41 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb14__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_37 as Continue).0: u64)<br/>_36 = _45<br/>StorageDead(_45)<br/>StorageDead(_37)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _24<br/>StorageLive(_48)<br/>_48 = _36<br/></td></tr><tr><td align="left">_46 = &lt;u64 as Ord&gt;::max(move _47, move _48)</td></tr></table>>];
    bb15__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb16__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _6<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb18__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _46<br/>StorageLive(_55)<br/>_55 = _36<br/></td></tr><tr><td align="left">_53 = &lt;u64 as SafeMath&gt;::safe_sub(move _54, move _55)</td></tr></table>>];
    bb19__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb20__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_56 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb21__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_52 as Continue).0: u64)<br/>_51 = _60<br/>StorageDead(_60)<br/>StorageDead(_52)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _46<br/>StorageLive(_65)<br/>_65 = _7<br/></td></tr><tr><td align="left">_63 = &lt;u64 as SafeMath&gt;::safe_sub(move _64, move _65)</td></tr></table>>];
    bb22__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb23__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb25__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_66 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb26__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_62 as Continue).0: u64)<br/>_61 = _70<br/>StorageDead(_70)<br/>StorageDead(_62)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = _61<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _9<br/>StorageLive(_75)<br/>_75 = _51<br/></td></tr><tr><td align="left">_73 = &lt;u64 as Ord&gt;::max(move _74, move _75)</td></tr></table>>];
    bb27__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb28__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_71 = &lt;u64 as Ord&gt;::min(move _72, move _73)</td></tr></table>>];
    bb30__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _2<br/>StorageLive(_80)<br/>_80 = _4<br/>StorageLive(_81)<br/>_81 = _5<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;((*_3).1: state::state::OrderFillerRewardStructure)<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_78 = calculate_filler_reward(move _79, move _80, move _81, const 0_u64, move _82)</td></tr></table>>];
    bb31__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb32__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_84 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _84)</td></tr></table>>];
    bb33__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_77 as Continue).0: u64)<br/>_76 = _88<br/>StorageDead(_88)<br/>StorageLive(_89)<br/>_89 = _71<br/></td></tr><tr><td align="left">_49 = &lt;u64 as Ord&gt;::min(move _76, move _89)</td></tr></table>>];
    bb34__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_87)<br/>_87 = _85<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _87)</td></tr></table>>];
    bb35__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_61)<br/>StorageDead(_51)<br/>StorageDead(_83)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_61)<br/>StorageDead(_51)<br/>StorageDead(_83)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_49 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _46<br/>StorageLive(_97)<br/>_97 = _7<br/></td></tr><tr><td align="left">_95 = &lt;u64 as SafeMath&gt;::safe_sub(move _96, move _97)</td></tr></table>>];
    bb39__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb40__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_98 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb41__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_94 as Continue).0: u64)<br/>_93 = _102<br/>StorageDead(_102)<br/>StorageLive(_103)<br/>_103 = _49<br/></td></tr><tr><td align="left">_92 = &lt;u64 as SafeMath&gt;::safe_sub(move _93, move _103)</td></tr></table>>];
    bb42__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb43__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb45__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_104 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb46__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_91 as Continue).0: u64)<br/>_90 = _108<br/>StorageDead(_108)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = _90<br/></td></tr><tr><td align="left">_114 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _115)</td></tr></table>>];
    bb47__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb48__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb50__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_116 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb51__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_113 as Continue).0: i64)<br/>_112 = _120<br/>StorageDead(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _8<br/></td></tr><tr><td align="left">_123 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _124)</td></tr></table>>];
    bb52__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb53__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _123)</td></tr></table>>];
    bb55__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_125 = discriminant(_122)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb56__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_122 as Continue).0: i64)<br/>_121 = _129<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_111 = &lt;i64 as SafeMath&gt;::safe_sub(move _112, move _121)</td></tr></table>>];
    bb57__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_122 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb58__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_121)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb60__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_130 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _130)</td></tr></table>>];
    bb61__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_110 as Continue).0: i64)<br/>_109 = _134<br/>StorageDead(_134)<br/>StorageDead(_122)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = _46<br/>StorageLive(_137)<br/>_137 = _90<br/>StorageLive(_138)<br/>_138 = _49<br/>StorageLive(_139)<br/>_139 = _109<br/>_135 = ExternalFillFees { user_fee: move _136, fee_to_market: move _137, fee_pool_delta: move _139, filler_reward: move _138 }<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>_0 = std::result::Result::&lt;ExternalFillFees, error::ErrorCode&gt;::Ok(move _135)<br/>StorageDead(_135)<br/>StorageDead(_109)<br/>StorageDead(_90)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_36)<br/>StorageDead(_24)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_133)<br/>_133 = _131<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalFillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _133)</td></tr></table>>];
    bb63__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2230 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2230 -> bb1__0_2230 [label="return"];
    bb1__0_2230 -> bb2__0_2230 [label="return"];
    bb2__0_2230 -> bb3__0_2230 [label="0"];
    bb2__0_2230 -> bb5__0_2230 [label="1"];
    bb2__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb3__0_2230 -> bb7__0_2230 [label="return"];
    bb5__0_2230 -> bb6__0_2230 [label="return"];
    bb6__0_2230 -> bb73__0_2230 [label=""];
    bb7__0_2230 -> bb8__0_2230 [label="return"];
    bb8__0_2230 -> bb9__0_2230 [label="0"];
    bb8__0_2230 -> bb10__0_2230 [label="1"];
    bb8__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb9__0_2230 -> bb12__0_2230 [label="return"];
    bb10__0_2230 -> bb11__0_2230 [label="return"];
    bb11__0_2230 -> bb72__0_2230 [label=""];
    bb12__0_2230 -> bb13__0_2230 [label="return"];
    bb13__0_2230 -> bb14__0_2230 [label="0"];
    bb13__0_2230 -> bb15__0_2230 [label="1"];
    bb13__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb14__0_2230 -> bb17__0_2230 [label="return"];
    bb15__0_2230 -> bb16__0_2230 [label="return"];
    bb16__0_2230 -> bb71__0_2230 [label=""];
    bb17__0_2230 -> bb37__0_2230 [label="0"];
    bb17__0_2230 -> bb18__0_2230 [label="otherwise"];
    bb18__0_2230 -> bb19__0_2230 [label="return"];
    bb19__0_2230 -> bb20__0_2230 [label="return"];
    bb20__0_2230 -> bb21__0_2230 [label="0"];
    bb20__0_2230 -> bb22__0_2230 [label="1"];
    bb20__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb21__0_2230 -> bb24__0_2230 [label="return"];
    bb22__0_2230 -> bb23__0_2230 [label="return"];
    bb23__0_2230 -> bb68__0_2230 [label=""];
    bb24__0_2230 -> bb25__0_2230 [label="return"];
    bb25__0_2230 -> bb26__0_2230 [label="0"];
    bb25__0_2230 -> bb27__0_2230 [label="1"];
    bb25__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb26__0_2230 -> bb29__0_2230 [label="return"];
    bb27__0_2230 -> bb28__0_2230 [label="return"];
    bb28__0_2230 -> bb68__0_2230 [label=""];
    bb29__0_2230 -> bb30__0_2230 [label="return"];
    bb30__0_2230 -> bb31__0_2230 [label="return"];
    bb31__0_2230 -> bb32__0_2230 [label="return"];
    bb32__0_2230 -> bb33__0_2230 [label="0"];
    bb32__0_2230 -> bb34__0_2230 [label="1"];
    bb32__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb33__0_2230 -> bb36__0_2230 [label="return"];
    bb34__0_2230 -> bb35__0_2230 [label="return"];
    bb35__0_2230 -> bb69__0_2230 [label=""];
    bb36__0_2230 -> bb38__0_2230 [label=""];
    bb37__0_2230 -> bb38__0_2230 [label=""];
    bb38__0_2230 -> bb39__0_2230 [label="return"];
    bb39__0_2230 -> bb40__0_2230 [label="return"];
    bb40__0_2230 -> bb41__0_2230 [label="0"];
    bb40__0_2230 -> bb42__0_2230 [label="1"];
    bb40__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb41__0_2230 -> bb44__0_2230 [label="return"];
    bb42__0_2230 -> bb43__0_2230 [label="return"];
    bb43__0_2230 -> bb66__0_2230 [label=""];
    bb44__0_2230 -> bb45__0_2230 [label="return"];
    bb45__0_2230 -> bb46__0_2230 [label="0"];
    bb45__0_2230 -> bb47__0_2230 [label="1"];
    bb45__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb46__0_2230 -> bb49__0_2230 [label="return"];
    bb47__0_2230 -> bb48__0_2230 [label="return"];
    bb48__0_2230 -> bb66__0_2230 [label=""];
    bb49__0_2230 -> bb50__0_2230 [label="return"];
    bb50__0_2230 -> bb51__0_2230 [label="0"];
    bb50__0_2230 -> bb52__0_2230 [label="1"];
    bb50__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb51__0_2230 -> bb54__0_2230 [label="return"];
    bb52__0_2230 -> bb53__0_2230 [label="return"];
    bb53__0_2230 -> bb65__0_2230 [label=""];
    bb54__0_2230 -> bb55__0_2230 [label="return"];
    bb55__0_2230 -> bb56__0_2230 [label="0"];
    bb55__0_2230 -> bb57__0_2230 [label="1"];
    bb55__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb56__0_2230 -> bb59__0_2230 [label="return"];
    bb57__0_2230 -> bb58__0_2230 [label="return"];
    bb58__0_2230 -> bb64__0_2230 [label=""];
    bb59__0_2230 -> bb60__0_2230 [label="return"];
    bb60__0_2230 -> bb61__0_2230 [label="0"];
    bb60__0_2230 -> bb62__0_2230 [label="1"];
    bb60__0_2230 -> bb4__0_2230 [label="otherwise"];
    bb61__0_2230 -> bb74__0_2230 [label=""];
    bb62__0_2230 -> bb63__0_2230 [label="return"];
    bb63__0_2230 -> bb64__0_2230 [label=""];
    bb64__0_2230 -> bb65__0_2230 [label=""];
    bb65__0_2230 -> bb67__0_2230 [label=""];
    bb66__0_2230 -> bb67__0_2230 [label=""];
    bb67__0_2230 -> bb70__0_2230 [label=""];
    bb68__0_2230 -> bb69__0_2230 [label=""];
    bb69__0_2230 -> bb70__0_2230 [label=""];
    bb70__0_2230 -> bb71__0_2230 [label=""];
    bb71__0_2230 -> bb72__0_2230 [label=""];
    bb72__0_2230 -> bb73__0_2230 [label=""];
    bb73__0_2230 -> bb74__0_2230 [label=""];
}
