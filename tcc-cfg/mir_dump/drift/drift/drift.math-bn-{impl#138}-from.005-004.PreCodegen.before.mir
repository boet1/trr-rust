// MIR for `bn::<impl at /home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:1338:3: 1338:51>::from` before PreCodegen

fn bn::<impl at /home/bitnami/.cargo/registry/src/index.crates.io-6f17d22bba15001f/uint-0.9.1/src/uint.rs:1338:3: 1338:51>::from(_1: u64) -> U192 {
    debug value => _1;
    let mut _0: math::bn::U192;
    let mut _2: [u64; 3];
    let mut _3: u64;
    let _4: usize;
    let mut _5: usize;
    let mut _6: bool;
    let mut _7: [u64; 3];
    scope 1 {
        debug ret => _2;
    }

    bb0: {
        StorageLive(_2);
        _2 = [const 0_u64; 3];
        StorageLive(_3);
        _3 = _1;
        StorageLive(_4);
        _4 = const 0_usize;
        _5 = Len(_2);
        _6 = Lt(_4, _5);
        assert(move _6, "index out of bounds: the length is {} but the index is {}", move _5, _4) -> [success: bb1, unwind continue];
    }

    bb1: {
        _2[_4] = move _3;
        StorageDead(_3);
        StorageDead(_4);
        StorageLive(_7);
        _7 = _2;
        _0 = U192(move _7);
        StorageDead(_7);
        StorageDead(_2);
        return;
    }
}
