digraph Mir_0_2397 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_max_pct_to_liquidate(_1: &amp;ReErased state::user::User, _2: u128, _3: u64, _4: u128, _5: u128) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: (u128, bool);<br align="left"/>let mut _11: !;<br align="left"/>let _12: u64;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: u64;<br align="left"/>let _22: u128;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _28: u128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _33: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: u128;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: u128;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: u128;<br align="left"/>let _52: u128;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _54: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: u128;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _58: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _59: u64;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: u128;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: u128;<br align="left"/>let _70: u128;<br align="left"/>let mut _71: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _72: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _73: u128;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _75: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: u128;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: u128;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: u128;<br align="left"/>let _88: u128;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _92: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: u128;<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _101: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _102: u128;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _107: u128;<br align="left"/>let mut _108: u128;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug margin_shortage =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug initial_pct_to_liquidate =&gt; _4;<br align="left"/>debug liquidation_duration =&gt; _5;<br align="left"/>debug slots_elapsed =&gt; _12;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug pct_freeable =&gt; _22;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug total_margin_shortage =&gt; _52;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug max_margin_freed =&gt; _70;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug margin_freeable =&gt; _88;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>>;
    bb0__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _2<br/>StorageLive(_9)<br/>_10 = CheckedMul(const 50_u128, const _)<br/></td></tr><tr><td align="left">assert(!move (_10.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 50_u128, const _)</td></tr></table>>];
    bb1__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_9 = move (_10.0: u128)<br/>_7 = Lt(move _8, move _9)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(const _)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>_6 = const ()<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _3<br/>StorageLive(_16)<br/>_16 = ((*_1).14: u64)<br/></td></tr><tr><td align="left">_14 = &lt;u64 as SafeMath&gt;::safe_sub(move _15, move _16)</td></tr></table>>];
    bb4__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb5__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_17 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb6__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_13 as Continue).0: u64)<br/>_12 = _21<br/>StorageDead(_21)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _12<br/></td></tr><tr><td align="left">_33 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _34)</td></tr></table>>];
    bb7__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb9__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb11__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_35 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb12__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_32 as Continue).0: u128)<br/>_31 = _39<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_30 = &lt;u128 as SafeMath&gt;::safe_mul(move _31, const _)</td></tr></table>>];
    bb13__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb14__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb16__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_40 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb17__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_29 as Continue).0: u128)<br/>_28 = _44<br/>StorageDead(_44)<br/>StorageLive(_45)<br/>_45 = _5<br/></td></tr><tr><td align="left">_27 = &lt;u128 as SafeMath&gt;::safe_div(move _28, move _45)</td></tr></table>>];
    bb18__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb19__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = std::result::Result::&lt;u128, error::ErrorCode&gt;::unwrap_or(move _27, const _)</td></tr></table>>];
    bb21__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_46)<br/>_46 = _4<br/></td></tr><tr><td align="left">_25 = &lt;u128 as SafeMath&gt;::safe_add(move _26, move _46)</td></tr></table>>];
    bb22__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb23__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_47 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb24__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_24 as Continue).0: u128)<br/>_23 = _51<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_22 = &lt;u128 as Ord&gt;::min(move _23, const _)</td></tr></table>>];
    bb25__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb26__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _2<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = ((*_1).13: u64)<br/></td></tr><tr><td align="left">_58 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _59)</td></tr></table>>];
    bb28__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb29__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_60 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb30__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_57 as Continue).0: u128)<br/>_56 = _64<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_54 = &lt;u128 as SafeMath&gt;::safe_add(move _55, move _56)</td></tr></table>>];
    bb31__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb32__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb34__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_65 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb35__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_53 as Continue).0: u128)<br/>_52 = _69<br/>StorageDead(_69)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = _52<br/>StorageLive(_77)<br/>_77 = _22<br/></td></tr><tr><td align="left">_75 = &lt;u128 as SafeMath&gt;::safe_mul(move _76, move _77)</td></tr></table>>];
    bb36__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb37__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb39__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_78 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb40__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_74 as Continue).0: u128)<br/>_73 = _82<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_72 = &lt;u128 as SafeMath&gt;::safe_div(move _73, const _)</td></tr></table>>];
    bb41__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb42__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _72)</td></tr></table>>];
    bb44__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_83 = discriminant(_71)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb45__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_71 as Continue).0: u128)<br/>_70 = _87<br/>StorageDead(_87)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _70<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = ((*_1).13: u64)<br/></td></tr><tr><td align="left">_92 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _93)</td></tr></table>>];
    bb46__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_71 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb47__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb49__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_94 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb50__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_91 as Continue).0: u128)<br/>_90 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_88 = core::num::&lt;impl u128&gt;::saturating_sub(move _89, move _90)</td></tr></table>>];
    bb51__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb52__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_91)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = _88<br/></td></tr><tr><td align="left">_101 = &lt;u128 as SafeMath&gt;::safe_mul(move _102, const _)</td></tr></table>>];
    bb54__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb55__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_103 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb56__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_100 as Continue).0: u128)<br/>_99 = _107<br/>StorageDead(_107)<br/>StorageLive(_108)<br/>_108 = _2<br/></td></tr><tr><td align="left">_0 = &lt;u128 as SafeMath&gt;::safe_div(move _99, move _108)</td></tr></table>>];
    bb57__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_106)<br/>_106 = _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb58__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_99)<br/>StorageDead(_88)<br/>StorageDead(_70)<br/>StorageDead(_52)<br/>StorageDead(_22)<br/>StorageDead(_12)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_99)<br/>StorageDead(_88)<br/>StorageDead(_70)<br/>StorageDead(_52)<br/>StorageDead(_22)<br/>StorageDead(_12)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2397 -> bb1__0_2397 [label="success"];
    bb1__0_2397 -> bb3__0_2397 [label="0"];
    bb1__0_2397 -> bb2__0_2397 [label="otherwise"];
    bb2__0_2397 -> bb68__0_2397 [label=""];
    bb3__0_2397 -> bb4__0_2397 [label="return"];
    bb4__0_2397 -> bb5__0_2397 [label="return"];
    bb5__0_2397 -> bb6__0_2397 [label="0"];
    bb5__0_2397 -> bb8__0_2397 [label="1"];
    bb5__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb6__0_2397 -> bb10__0_2397 [label="return"];
    bb8__0_2397 -> bb9__0_2397 [label="return"];
    bb9__0_2397 -> bb67__0_2397 [label=""];
    bb10__0_2397 -> bb11__0_2397 [label="return"];
    bb11__0_2397 -> bb12__0_2397 [label="0"];
    bb11__0_2397 -> bb13__0_2397 [label="1"];
    bb11__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb12__0_2397 -> bb15__0_2397 [label="return"];
    bb13__0_2397 -> bb14__0_2397 [label="return"];
    bb14__0_2397 -> bb64__0_2397 [label=""];
    bb15__0_2397 -> bb16__0_2397 [label="return"];
    bb16__0_2397 -> bb17__0_2397 [label="0"];
    bb16__0_2397 -> bb18__0_2397 [label="1"];
    bb16__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb17__0_2397 -> bb20__0_2397 [label="return"];
    bb18__0_2397 -> bb19__0_2397 [label="return"];
    bb19__0_2397 -> bb64__0_2397 [label=""];
    bb20__0_2397 -> bb21__0_2397 [label="return"];
    bb21__0_2397 -> bb22__0_2397 [label="return"];
    bb22__0_2397 -> bb23__0_2397 [label="return"];
    bb23__0_2397 -> bb24__0_2397 [label="0"];
    bb23__0_2397 -> bb25__0_2397 [label="1"];
    bb23__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb24__0_2397 -> bb27__0_2397 [label="return"];
    bb25__0_2397 -> bb26__0_2397 [label="return"];
    bb26__0_2397 -> bb65__0_2397 [label=""];
    bb27__0_2397 -> bb28__0_2397 [label="return"];
    bb28__0_2397 -> bb29__0_2397 [label="return"];
    bb29__0_2397 -> bb30__0_2397 [label="0"];
    bb29__0_2397 -> bb31__0_2397 [label="1"];
    bb29__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb30__0_2397 -> bb33__0_2397 [label="return"];
    bb31__0_2397 -> bb32__0_2397 [label="return"];
    bb32__0_2397 -> bb62__0_2397 [label=""];
    bb33__0_2397 -> bb34__0_2397 [label="return"];
    bb34__0_2397 -> bb35__0_2397 [label="0"];
    bb34__0_2397 -> bb36__0_2397 [label="1"];
    bb34__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb35__0_2397 -> bb38__0_2397 [label="return"];
    bb36__0_2397 -> bb37__0_2397 [label="return"];
    bb37__0_2397 -> bb62__0_2397 [label=""];
    bb38__0_2397 -> bb39__0_2397 [label="return"];
    bb39__0_2397 -> bb40__0_2397 [label="0"];
    bb39__0_2397 -> bb41__0_2397 [label="1"];
    bb39__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb40__0_2397 -> bb43__0_2397 [label="return"];
    bb41__0_2397 -> bb42__0_2397 [label="return"];
    bb42__0_2397 -> bb60__0_2397 [label=""];
    bb43__0_2397 -> bb44__0_2397 [label="return"];
    bb44__0_2397 -> bb45__0_2397 [label="0"];
    bb44__0_2397 -> bb46__0_2397 [label="1"];
    bb44__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb45__0_2397 -> bb48__0_2397 [label="return"];
    bb46__0_2397 -> bb47__0_2397 [label="return"];
    bb47__0_2397 -> bb60__0_2397 [label=""];
    bb48__0_2397 -> bb49__0_2397 [label="return"];
    bb49__0_2397 -> bb50__0_2397 [label="0"];
    bb49__0_2397 -> bb51__0_2397 [label="1"];
    bb49__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb50__0_2397 -> bb53__0_2397 [label="return"];
    bb51__0_2397 -> bb52__0_2397 [label="return"];
    bb52__0_2397 -> bb61__0_2397 [label=""];
    bb53__0_2397 -> bb54__0_2397 [label="return"];
    bb54__0_2397 -> bb55__0_2397 [label="return"];
    bb55__0_2397 -> bb56__0_2397 [label="0"];
    bb55__0_2397 -> bb57__0_2397 [label="1"];
    bb55__0_2397 -> bb7__0_2397 [label="otherwise"];
    bb56__0_2397 -> bb59__0_2397 [label="return"];
    bb57__0_2397 -> bb58__0_2397 [label="return"];
    bb58__0_2397 -> bb68__0_2397 [label=""];
    bb59__0_2397 -> bb68__0_2397 [label=""];
    bb60__0_2397 -> bb61__0_2397 [label=""];
    bb61__0_2397 -> bb63__0_2397 [label=""];
    bb62__0_2397 -> bb63__0_2397 [label=""];
    bb63__0_2397 -> bb66__0_2397 [label=""];
    bb64__0_2397 -> bb65__0_2397 [label=""];
    bb65__0_2397 -> bb66__0_2397 [label=""];
    bb66__0_2397 -> bb67__0_2397 [label=""];
    bb67__0_2397 -> bb68__0_2397 [label=""];
}
