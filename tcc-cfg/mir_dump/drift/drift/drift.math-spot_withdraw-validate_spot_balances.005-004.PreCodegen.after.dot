digraph Mir_0_2844 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_spot_balances(_1: &amp;ReErased state::spot_market::SpotMarket) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _2: u64;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _10: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _11: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _12: state::spot_market::SpotBalanceType;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: u64;<br align="left"/>let _23: u64;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _31: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _32: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _33: state::spot_market::SpotBalanceType;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: u64;<br align="left"/>let _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _50: u128;<br align="left"/>let mut _51: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _52: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _53: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _54: state::spot_market::SpotBalanceType;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: u128;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: u64;<br align="left"/>let _65: i64;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _67: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _70: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: i64;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _79: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: i64;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: i64;<br align="left"/>let _91: ();<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _93: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: u64;<br align="left"/>let mut _96: u64;<br align="left"/>let mut _97: ();<br align="left"/>let _98: error::ErrorCode;<br align="left"/>let _99: ();<br align="left"/>let mut _100: &amp;ReErased str;<br align="left"/>let _101: &amp;ReErased str;<br align="left"/>let mut _102: &amp;ReErased std::string::String;<br align="left"/>let _103: &amp;ReErased std::string::String;<br align="left"/>let _104: std::string::String;<br align="left"/>let _105: std::string::String;<br align="left"/>let mut _106: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _108: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _109: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _110: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _111: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _112: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _113: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _114: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _115: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _116: &amp;ReErased error::ErrorCode;<br align="left"/>let _117: &amp;ReErased error::ErrorCode;<br align="left"/>let _118: ();<br align="left"/>let mut _119: &amp;ReErased str;<br align="left"/>let _120: &amp;ReErased str;<br align="left"/>let mut _121: &amp;ReErased std::string::String;<br align="left"/>let _122: &amp;ReErased std::string::String;<br align="left"/>let _123: std::string::String;<br align="left"/>let _124: std::string::String;<br align="left"/>let mut _125: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _127: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _128: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _129: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _131: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _132: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _133: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _134: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _135: &amp;ReErased u64;<br align="left"/>let _136: &amp;ReErased u64;<br align="left"/>let mut _137: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased u64;<br align="left"/>let _139: &amp;ReErased u64;<br align="left"/>let mut _140: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased i64;<br align="left"/>let _142: &amp;ReErased i64;<br align="left"/>let mut _143: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased u128;<br align="left"/>let _145: &amp;ReErased u128;<br align="left"/>let mut _146: error::ErrorCode;<br align="left"/>let mut _147: isize;<br align="left"/>let _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _149: !;<br align="left"/>let mut _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _151: ();<br align="left"/>let mut _152: i64;<br align="left"/>let mut _153: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _154: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _155: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _156: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _157: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug depositors_amount =&gt; _2;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug borrowers_amount =&gt; _23;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug revenue_amount =&gt; _44;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug depositors_claim =&gt; _65;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug error_code =&gt; _98;<br align="left"/>debug res =&gt; _105;<br align="left"/>debug res =&gt; _124;<br align="left"/>debug residual =&gt; _148;<br align="left"/>debug val =&gt; _151;<br align="left"/>>;
    bb0__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_1).11: u128)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_157 = const _<br/>_11 = &amp;(*_157)<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_7 = get_token_amount(move _8, move _9, move _10)</td></tr></table>>];
    bb1__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_13 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_6 as Continue).0: u128)<br/>_5 = _17<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_4 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _5)</td></tr></table>>];
    bb4__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb8__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_18 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb9__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_3 as Continue).0: u64)<br/>_2 = _22<br/>StorageDead(_22)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).12: u128)<br/>StorageLive(_30)<br/>_30 = &amp;(*_1)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_156 = const _<br/>_32 = &amp;(*_156)<br/>_31 = &amp;(*_32)<br/></td></tr><tr><td align="left">_28 = get_token_amount(move _29, move _30, move _31)</td></tr></table>>];
    bb10__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb11__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb13__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_34 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb14__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_27 as Continue).0: u128)<br/>_26 = _38<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_25 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _26)</td></tr></table>>];
    bb15__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb16__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb18__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_39 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb19__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_24 as Continue).0: u64)<br/>_23 = _43<br/>StorageDead(_43)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = (((*_1).7: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_51)<br/>_51 = &amp;(*_1)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_155 = const _<br/>_53 = &amp;(*_155)<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_49 = get_token_amount(move _50, move _51, move _52)</td></tr></table>>];
    bb20__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb21__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb23__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_55 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb24__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_48 as Continue).0: u128)<br/>_47 = _59<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_46 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _47)</td></tr></table>>];
    bb25__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb26__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb28__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_60 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb29__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_45 as Continue).0: u64)<br/>_44 = _64<br/>StorageDead(_64)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _2<br/></td></tr><tr><td align="left">_70 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _71)</td></tr></table>>];
    bb30__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb31__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb33__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_72 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb34__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_69 as Continue).0: i64)<br/>_68 = _76<br/>StorageDead(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _23<br/></td></tr><tr><td align="left">_79 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _80)</td></tr></table>>];
    bb35__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb36__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb38__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_81 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb39__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_78 as Continue).0: i64)<br/>_77 = _85<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_67 = &lt;i64 as SafeMath&gt;::safe_sub(move _68, move _77)</td></tr></table>>];
    bb40__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb41__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_77)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb43__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_86 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb44__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_66 as Continue).0: i64)<br/>_65 = _90<br/>StorageDead(_90)<br/>StorageDead(_78)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = _44<br/>StorageLive(_96)<br/>_96 = _2<br/>_94 = Le(move _95, move _96)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb45__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb46__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_97)<br/>_97 = ()<br/>_93 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _97)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>_98 = error::ErrorCode::SpotMarketVaultInvariantViolated<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_154 = const _<br/>_109 = &amp;(*_154)<br/>_108 = &amp;(*_109)<br/>_107 = move _108 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_108)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_98<br/>_116 = &amp;(*_117)<br/></td></tr><tr><td align="left">_115 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _116)</td></tr></table>>];
    bb49__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_114 = [move _115]<br/>StorageDead(_115)<br/>_113 = &amp;_114<br/>_112 = &amp;(*_113)<br/>_111 = move _112 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_106 = Arguments::&lt;'_&gt;::new_v1(move _107, move _111)</td></tr></table>>];
    bb50__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = format(move _106)</td></tr></table>>];
    bb51__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/>_104 = move _105<br/>StorageDead(_105)<br/>_103 = &amp;_104<br/>_102 = &amp;(*_103)<br/></td></tr><tr><td align="left">_101 = &lt;String as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb52__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_100 = &amp;(*_101)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_99 = solana_program::log::sol_log(move _100)</td></tr></table>>];
    bb53__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">drop(_104)</td></tr></table>>];
    bb54__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_153 = const _<br/>_128 = &amp;(*_153)<br/>_127 = &amp;(*_128)<br/>_126 = move _127 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_127)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_44<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _135)</td></tr></table>>];
    bb55__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_2<br/>_138 = &amp;(*_139)<br/></td></tr><tr><td align="left">_137 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _138)</td></tr></table>>];
    bb56__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;_65<br/>_141 = &amp;(*_142)<br/></td></tr><tr><td align="left">_140 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _141)</td></tr></table>>];
    bb57__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;((*_1).11: u128)<br/>_144 = &amp;(*_145)<br/></td></tr><tr><td align="left">_143 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _144)</td></tr></table>>];
    bb58__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_133 = [move _134, move _137, move _140, move _143]<br/>StorageDead(_143)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>_132 = &amp;_133<br/>_131 = &amp;(*_132)<br/>_130 = move _131 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">_125 = Arguments::&lt;'_&gt;::new_v1(move _126, move _130)</td></tr></table>>];
    bb59__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = format(move _125)</td></tr></table>>];
    bb60__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>_123 = move _124<br/>StorageDead(_124)<br/>_122 = &amp;_123<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_120 = &lt;String as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb61__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_119 = &amp;(*_120)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_118 = solana_program::log::sol_log(move _119)</td></tr></table>>];
    bb62__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb63__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageLive(_146)<br/>_146 = _98<br/>_93 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _146)<br/>StorageDead(_146)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb65__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_147 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _147)</td></tr></table>>];
    bb66__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_92 as Continue).0: ())<br/>_91 = _151<br/>StorageDead(_151)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_152)<br/>_152 = _65<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _152)<br/>StorageDead(_152)<br/>StorageDead(_65)<br/>StorageDead(_44)<br/>StorageDead(_23)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_150)<br/>_150 = _148<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _150)</td></tr></table>>];
    bb68__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left">return</td></tr></table>>];
    bb79__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb80__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_104)</td></tr></table>>];
    bb81__0_2844 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2844 -> bb1__0_2844 [label="return"];
    bb1__0_2844 -> bb2__0_2844 [label="return"];
    bb2__0_2844 -> bb3__0_2844 [label="0"];
    bb2__0_2844 -> bb5__0_2844 [label="1"];
    bb2__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb3__0_2844 -> bb7__0_2844 [label="return"];
    bb5__0_2844 -> bb6__0_2844 [label="return"];
    bb6__0_2844 -> bb76__0_2844 [label=""];
    bb7__0_2844 -> bb8__0_2844 [label="return"];
    bb8__0_2844 -> bb9__0_2844 [label="0"];
    bb8__0_2844 -> bb10__0_2844 [label="1"];
    bb8__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb9__0_2844 -> bb12__0_2844 [label="return"];
    bb10__0_2844 -> bb11__0_2844 [label="return"];
    bb11__0_2844 -> bb76__0_2844 [label=""];
    bb12__0_2844 -> bb13__0_2844 [label="return"];
    bb13__0_2844 -> bb14__0_2844 [label="0"];
    bb13__0_2844 -> bb15__0_2844 [label="1"];
    bb13__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb14__0_2844 -> bb17__0_2844 [label="return"];
    bb15__0_2844 -> bb16__0_2844 [label="return"];
    bb16__0_2844 -> bb74__0_2844 [label=""];
    bb17__0_2844 -> bb18__0_2844 [label="return"];
    bb18__0_2844 -> bb19__0_2844 [label="0"];
    bb18__0_2844 -> bb20__0_2844 [label="1"];
    bb18__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb19__0_2844 -> bb22__0_2844 [label="return"];
    bb20__0_2844 -> bb21__0_2844 [label="return"];
    bb21__0_2844 -> bb74__0_2844 [label=""];
    bb22__0_2844 -> bb23__0_2844 [label="return"];
    bb23__0_2844 -> bb24__0_2844 [label="0"];
    bb23__0_2844 -> bb25__0_2844 [label="1"];
    bb23__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb24__0_2844 -> bb27__0_2844 [label="return"];
    bb25__0_2844 -> bb26__0_2844 [label="return"];
    bb26__0_2844 -> bb72__0_2844 [label=""];
    bb27__0_2844 -> bb28__0_2844 [label="return"];
    bb28__0_2844 -> bb29__0_2844 [label="0"];
    bb28__0_2844 -> bb30__0_2844 [label="1"];
    bb28__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb29__0_2844 -> bb32__0_2844 [label="return"];
    bb30__0_2844 -> bb31__0_2844 [label="return"];
    bb31__0_2844 -> bb72__0_2844 [label=""];
    bb32__0_2844 -> bb33__0_2844 [label="return"];
    bb33__0_2844 -> bb34__0_2844 [label="0"];
    bb33__0_2844 -> bb35__0_2844 [label="1"];
    bb33__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb34__0_2844 -> bb37__0_2844 [label="return"];
    bb35__0_2844 -> bb36__0_2844 [label="return"];
    bb36__0_2844 -> bb70__0_2844 [label=""];
    bb37__0_2844 -> bb38__0_2844 [label="return"];
    bb38__0_2844 -> bb39__0_2844 [label="0"];
    bb38__0_2844 -> bb40__0_2844 [label="1"];
    bb38__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb39__0_2844 -> bb42__0_2844 [label="return"];
    bb40__0_2844 -> bb41__0_2844 [label="return"];
    bb41__0_2844 -> bb69__0_2844 [label=""];
    bb42__0_2844 -> bb43__0_2844 [label="return"];
    bb43__0_2844 -> bb44__0_2844 [label="0"];
    bb43__0_2844 -> bb45__0_2844 [label="1"];
    bb43__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb44__0_2844 -> bb48__0_2844 [label="0"];
    bb44__0_2844 -> bb47__0_2844 [label="otherwise"];
    bb45__0_2844 -> bb46__0_2844 [label="return"];
    bb46__0_2844 -> bb69__0_2844 [label=""];
    bb47__0_2844 -> bb64__0_2844 [label=""];
    bb48__0_2844 -> bb49__0_2844 [label="return"];
    bb49__0_2844 -> bb50__0_2844 [label="return"];
    bb50__0_2844 -> bb51__0_2844 [label="return"];
    bb51__0_2844 -> bb52__0_2844 [label="return"];
    bb51__0_2844 -> bb80__0_2844 [label="unwind"];
    bb52__0_2844 -> bb53__0_2844 [label="return"];
    bb52__0_2844 -> bb80__0_2844 [label="unwind"];
    bb53__0_2844 -> bb54__0_2844 [label="return"];
    bb53__0_2844 -> bb81__0_2844 [label="unwind"];
    bb54__0_2844 -> bb55__0_2844 [label="return"];
    bb55__0_2844 -> bb56__0_2844 [label="return"];
    bb56__0_2844 -> bb57__0_2844 [label="return"];
    bb57__0_2844 -> bb58__0_2844 [label="return"];
    bb58__0_2844 -> bb59__0_2844 [label="return"];
    bb59__0_2844 -> bb60__0_2844 [label="return"];
    bb60__0_2844 -> bb61__0_2844 [label="return"];
    bb60__0_2844 -> bb79__0_2844 [label="unwind"];
    bb61__0_2844 -> bb62__0_2844 [label="return"];
    bb61__0_2844 -> bb79__0_2844 [label="unwind"];
    bb62__0_2844 -> bb63__0_2844 [label="return"];
    bb62__0_2844 -> bb81__0_2844 [label="unwind"];
    bb63__0_2844 -> bb64__0_2844 [label=""];
    bb64__0_2844 -> bb65__0_2844 [label="return"];
    bb65__0_2844 -> bb66__0_2844 [label="0"];
    bb65__0_2844 -> bb67__0_2844 [label="1"];
    bb65__0_2844 -> bb4__0_2844 [label="otherwise"];
    bb66__0_2844 -> bb78__0_2844 [label=""];
    bb67__0_2844 -> bb68__0_2844 [label="return"];
    bb68__0_2844 -> bb71__0_2844 [label=""];
    bb69__0_2844 -> bb70__0_2844 [label=""];
    bb70__0_2844 -> bb71__0_2844 [label=""];
    bb71__0_2844 -> bb73__0_2844 [label=""];
    bb72__0_2844 -> bb73__0_2844 [label=""];
    bb73__0_2844 -> bb75__0_2844 [label=""];
    bb74__0_2844 -> bb75__0_2844 [label=""];
    bb75__0_2844 -> bb77__0_2844 [label=""];
    bb76__0_2844 -> bb77__0_2844 [label=""];
    bb77__0_2844 -> bb78__0_2844 [label=""];
    bb79__0_2844 -> bb81__0_2844 [label="return"];
    bb80__0_2844 -> bb81__0_2844 [label="return"];
}
