digraph Mir_0_3127 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn taker_price_to_phoenix_price_in_ticks_rounded_down(_1: u64, _2: u64, _3: &amp;ReErased phoenix::program::MarketHeader) -&gt; std::result::Result&lt;phoenix::quantities::Ticks, error::ErrorCode&gt;<br align="left"/>let mut _4: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: u32;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: &amp;ReErased phoenix::quantities::QuoteAtomsPerQuoteLot;<br align="left"/>let _21: phoenix::quantities::QuoteAtomsPerQuoteLot;<br align="left"/>let mut _22: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: u64;<br align="left"/>debug taker_price =&gt; _1;<br align="left"/>debug tick_size =&gt; _2;<br align="left"/>debug header =&gt; _3;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_3).12: u32)<br/>_9 = move _10 as u64 (IntToInt)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_7 = &lt;u64 as SafeMath&gt;::safe_mul(move _8, move _9)</td></tr></table>>];
    bb1__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_6 as Continue).0: u64)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_3)<br/></td></tr><tr><td align="left">_21 = MarketHeader::get_quote_lot_size(move _22)</td></tr></table>>];
    bb4__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Ticks, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_20 = &amp;_21<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_19 = &lt;QuoteAtomsPerQuoteLot as phoenix::quantities::WrapperU64&gt;::as_u64(move _20)</td></tr></table>>];
    bb8__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_23)<br/>_23 = _2<br/></td></tr><tr><td align="left">_18 = &lt;u64 as SafeMath&gt;::safe_mul(move _19, move _23)</td></tr></table>>];
    bb9__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb10__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Continue).0: u64)<br/>_16 = _28<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_4 = &lt;u64 as SafeMath&gt;::safe_div(move _5, move _16)</td></tr></table>>];
    bb12__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Ticks, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::map::&lt;Ticks, fn(u64) -&gt; Ticks {&lt;Ticks as phoenix::quantities::WrapperU64&gt;::new}&gt;(move _4, &lt;Ticks as phoenix::quantities::WrapperU64&gt;::new)</td></tr></table>>];
    bb15__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3127 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3127 -> bb1__0_3127 [label="return"];
    bb1__0_3127 -> bb2__0_3127 [label="return"];
    bb2__0_3127 -> bb3__0_3127 [label="0"];
    bb2__0_3127 -> bb5__0_3127 [label="1"];
    bb2__0_3127 -> bb4__0_3127 [label="otherwise"];
    bb3__0_3127 -> bb7__0_3127 [label="return"];
    bb5__0_3127 -> bb6__0_3127 [label="return"];
    bb6__0_3127 -> bb16__0_3127 [label=""];
    bb7__0_3127 -> bb8__0_3127 [label="return"];
    bb8__0_3127 -> bb9__0_3127 [label="return"];
    bb9__0_3127 -> bb10__0_3127 [label="return"];
    bb10__0_3127 -> bb11__0_3127 [label="0"];
    bb10__0_3127 -> bb12__0_3127 [label="1"];
    bb10__0_3127 -> bb4__0_3127 [label="otherwise"];
    bb11__0_3127 -> bb14__0_3127 [label="return"];
    bb12__0_3127 -> bb13__0_3127 [label="return"];
    bb13__0_3127 -> bb16__0_3127 [label=""];
    bb14__0_3127 -> bb15__0_3127 [label="return"];
    bb15__0_3127 -> bb17__0_3127 [label=""];
    bb16__0_3127 -> bb17__0_3127 [label=""];
}
