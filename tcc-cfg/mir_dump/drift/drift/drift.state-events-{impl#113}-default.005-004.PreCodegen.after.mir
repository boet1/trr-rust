// MIR for `state::events::<impl at programs/drift/src/state/events.rs:445:60: 445:67>::default` after PreCodegen

fn state::events::<impl at programs/drift/src/state/events.rs:445:60: 445:67>::default() -> LiquidatePerpRecord {
    let mut _0: state::events::LiquidatePerpRecord;
    let mut _1: u16;
    let mut _2: i64;
    let mut _3: i64;
    let mut _4: i64;
    let mut _5: u64;
    let mut _6: u64;
    let mut _7: u32;
    let mut _8: u32;
    let mut _9: u64;
    let mut _10: u64;

    bb0: {
        StorageLive(_1);
        _1 = <u16 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <i64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <i64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <i64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u64 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u64 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <u32 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <u32 as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <u64 as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <u64 as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        _0 = LiquidatePerpRecord { market_index: move _1, oracle_price: move _2, base_asset_amount: move _3, quote_asset_amount: move _4, lp_shares: move _5, fill_record_id: move _6, user_order_id: move _7, liquidator_order_id: move _8, liquidator_fee: move _9, if_fee: move _10 };
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
