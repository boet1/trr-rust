digraph Mir_0_2611 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::get_max_fill_amounts(_1: &amp;ReErased state::user::User, _2: usize, _3: &amp;ReErased state::spot_market::SpotMarket, _4: &amp;ReErased state::spot_market::SpotMarket, _5: bool) -&gt; std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;<br align="left"/>let _6: controller::position::PositionDirection;<br align="left"/>let _7: usize;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: u64;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _13: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _17: &amp;ReErased state::user::User;<br align="left"/>let mut _18: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u64;<br align="left"/>let mut _30: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _31: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _32: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _33: u64;<br align="left"/>let _34: u64;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _36: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _39: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _43: &amp;ReErased state::user::User;<br align="left"/>let mut _44: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: u128;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _63: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: std::option::Option&lt;u64&gt;;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug user_order_index =&gt; _2;<br align="left"/>debug base_market =&gt; _3;<br align="left"/>debug quote_market =&gt; _4;<br align="left"/>debug is_leaving_drift =&gt; _5;<br align="left"/>debug direction =&gt; _6;<br align="left"/>debug max_quote =&gt; _11;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug max_base =&gt; _34;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>>;
    bb0__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_8 = Len(((*_1).5: [state::user::Order; 32]))<br/>_9 = Lt(_7, _8)<br/></td></tr><tr><td align="left">assert(move _9, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _8, _7)</td></tr></table>>];
    bb1__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_6 = (((*_1).5: [state::user::Order; 32])[_7].17: controller::position::PositionDirection)<br/>StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb2__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;(*_1)<br/>StorageLive(_44)<br/>_44 = &amp;(*_3)<br/>StorageLive(_45)<br/>_45 = _5<br/></td></tr><tr><td align="left">_42 = get_max_fill_amounts_for_market(move _43, move _44, move _45)</td></tr></table>>];
    bb3__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_1)<br/>StorageLive(_18)<br/>_18 = &amp;(*_4)<br/>StorageLive(_19)<br/>_19 = _5<br/></td></tr><tr><td align="left">_16 = get_max_fill_amounts_for_market(move _17, move _18, move _19)</td></tr></table>>];
    bb5__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb6__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb7__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_15 as Continue).0: u128)<br/>_14 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_13 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _14)</td></tr></table>>];
    bb8__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb9__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb11__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_25 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_12 as Continue).0: u64)<br/>_11 = _29<br/>StorageDead(_29)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = Option::&lt;u64&gt;::None<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _11<br/>_32 = Option::&lt;u64&gt;::Some(move _33)<br/>StorageDead(_33)<br/>_30 = (move _31, move _32)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>_0 = std::result::Result::&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt;::Ok(move _30)<br/>StorageDead(_30)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb14__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb16__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_46 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_41 as Continue).0: u128)<br/>_40 = _50<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_39 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _40)</td></tr></table>>];
    bb18__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb19__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb21__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_51 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb22__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_38 as Continue).0: u64)<br/>_37 = _55<br/>StorageDead(_55)<br/>StorageLive(_56)<br/>_56 = ((*_3).25: u64)<br/></td></tr><tr><td align="left">_36 = math::orders::standardize_base_asset_amount(move _37, move _56)</td></tr></table>>];
    bb23__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb24__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb26__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_57 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_35 as Continue).0: u64)<br/>_34 = _61<br/>StorageDead(_61)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _34<br/>_63 = Option::&lt;u64&gt;::Some(move _64)<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = Option::&lt;u64&gt;::None<br/>_62 = (move _63, move _65)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>_0 = std::result::Result::&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt;::Ok(move _62)<br/>StorageDead(_62)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2611 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2611 -> bb1__0_2611 [label="success"];
    bb1__0_2611 -> bb4__0_2611 [label="0"];
    bb1__0_2611 -> bb2__0_2611 [label="1"];
    bb1__0_2611 -> bb3__0_2611 [label="otherwise"];
    bb2__0_2611 -> bb15__0_2611 [label="return"];
    bb4__0_2611 -> bb5__0_2611 [label="return"];
    bb5__0_2611 -> bb6__0_2611 [label="return"];
    bb6__0_2611 -> bb7__0_2611 [label="0"];
    bb6__0_2611 -> bb8__0_2611 [label="1"];
    bb6__0_2611 -> bb3__0_2611 [label="otherwise"];
    bb7__0_2611 -> bb10__0_2611 [label="return"];
    bb8__0_2611 -> bb9__0_2611 [label="return"];
    bb9__0_2611 -> bb33__0_2611 [label=""];
    bb10__0_2611 -> bb11__0_2611 [label="return"];
    bb11__0_2611 -> bb12__0_2611 [label="0"];
    bb11__0_2611 -> bb13__0_2611 [label="1"];
    bb11__0_2611 -> bb3__0_2611 [label="otherwise"];
    bb12__0_2611 -> bb30__0_2611 [label=""];
    bb13__0_2611 -> bb14__0_2611 [label="return"];
    bb14__0_2611 -> bb33__0_2611 [label=""];
    bb15__0_2611 -> bb16__0_2611 [label="return"];
    bb16__0_2611 -> bb17__0_2611 [label="0"];
    bb16__0_2611 -> bb18__0_2611 [label="1"];
    bb16__0_2611 -> bb3__0_2611 [label="otherwise"];
    bb17__0_2611 -> bb20__0_2611 [label="return"];
    bb18__0_2611 -> bb19__0_2611 [label="return"];
    bb19__0_2611 -> bb31__0_2611 [label=""];
    bb20__0_2611 -> bb21__0_2611 [label="return"];
    bb21__0_2611 -> bb22__0_2611 [label="0"];
    bb21__0_2611 -> bb23__0_2611 [label="1"];
    bb21__0_2611 -> bb3__0_2611 [label="otherwise"];
    bb22__0_2611 -> bb25__0_2611 [label="return"];
    bb23__0_2611 -> bb24__0_2611 [label="return"];
    bb24__0_2611 -> bb31__0_2611 [label=""];
    bb25__0_2611 -> bb26__0_2611 [label="return"];
    bb26__0_2611 -> bb27__0_2611 [label="0"];
    bb26__0_2611 -> bb28__0_2611 [label="1"];
    bb26__0_2611 -> bb3__0_2611 [label="otherwise"];
    bb27__0_2611 -> bb30__0_2611 [label=""];
    bb28__0_2611 -> bb29__0_2611 [label="return"];
    bb29__0_2611 -> bb32__0_2611 [label=""];
    bb30__0_2611 -> bb35__0_2611 [label=""];
    bb31__0_2611 -> bb32__0_2611 [label=""];
    bb32__0_2611 -> bb34__0_2611 [label=""];
    bb33__0_2611 -> bb34__0_2611 [label=""];
    bb34__0_2611 -> bb35__0_2611 [label=""];
}
