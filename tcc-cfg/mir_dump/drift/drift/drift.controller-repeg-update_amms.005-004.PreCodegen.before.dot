digraph Mir_0_743 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::repeg::update_amms(_1: &amp;ReErased mut state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _2: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _3: &amp;ReErased state::state::State, _4: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let _5: u64;<br align="left"/>let _6: i64;<br align="left"/>let _7: bool;<br align="left"/>let _8: ();<br align="left"/>let mut _9: std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _10: std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _11: &amp;ReErased mut std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _12: std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _13: ();<br align="left"/>let _14: ();<br align="left"/>let mut _15: std::option::Option&lt;(&amp;ReErased u16, &amp;ReErased mut anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;)&gt;;<br align="left"/>let mut _16: &amp;ReErased mut std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _17: &amp;ReErased mut std::collections::btree_map::IterMut&lt;ReErased, u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _18: isize;<br align="left"/>let mut _19: !;<br align="left"/>let _20: &amp;ReErased u16;<br align="left"/>let _21: &amp;ReErased mut anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _22: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _23: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _26: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _28: Closure(DefId(0:4765 ~ drift[d311]::controller::repeg::update_amms::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _34: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _36: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _37: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _39: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _40: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _41: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _42: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _43: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _49: state::oracle::MMOraclePriceData;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::MMOraclePriceData&gt;;<br align="left"/>let mut _51: std::result::Result&lt;state::oracle::MMOraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _52: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _53: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _55: state::oracle::OraclePriceData;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _58: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: state::oracle::MMOraclePriceData;<br align="left"/>let _64: i128;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _66: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _67: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _68: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _69: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _70: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _71: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _72: &amp;ReErased state::state::State;<br align="left"/>let mut _73: i64;<br align="left"/>let mut _74: u64;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _79: i128;<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>debug perp_market_map =&gt; _1;<br align="left"/>debug oracle_map =&gt; _2;<br align="left"/>debug state =&gt; _3;<br align="left"/>debug clock =&gt; _4;<br align="left"/>debug clock_slot =&gt; _5;<br align="left"/>debug now =&gt; _6;<br align="left"/>debug updated =&gt; _7;<br align="left"/>debug iter =&gt; _12;<br align="left"/>debug _key =&gt; _20;<br align="left"/>debug market_account_loader =&gt; _21;<br align="left"/>debug market =&gt; _22;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug oracle_price_data =&gt; _34;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug mm_oracle_price_data =&gt; _49;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>>;
    bb0__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = ((*_4).0: u64)<br/>StorageLive(_6)<br/>_6 = ((*_4).4: i64)<br/>StorageLive(_7)<br/>_7 = const true<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut ((*_1).0: std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;&gt;)<br/></td></tr><tr><td align="left">_10 = BTreeMap::&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;&gt;::iter_mut(move _11)</td></tr></table>>];
    bb1__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::collections::btree_map::IterMut&lt;'_, u16, anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;&gt; as IntoIterator&gt;::into_iter(move _10)</td></tr></table>>];
    bb2__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>_12 = move _9<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;mut _12<br/>_16 = &amp;mut (*_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::collections::btree_map::IterMut&lt;'_, u16, anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;&gt; as Iterator&gt;::next(move _16)</td></tr></table>>];
    bb4__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_18 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb5__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = (((_15 as Some).0: (&amp;u16, &amp;mut anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)).0: &amp;u16)<br/>StorageLive(_21)<br/>_21 = move (((_15 as Some).0: (&amp;u16, &amp;mut anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)).1: &amp;mut anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_21)<br/></td></tr><tr><td align="left">_26 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _27)</td></tr></table>>];
    bb6__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_8 = const ()<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_80)<br/>_80 = _7<br/>_0 = std::result::Result::&lt;bool, error::ErrorCode&gt;::Ok(move _80)<br/>StorageDead(_80)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>_28 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_25 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _26, move _28)</td></tr></table>>];
    bb9__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb10__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_29 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb11__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_24 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_23 = move _33<br/>StorageDead(_33)<br/>_22 = &amp;mut _23<br/>_83 = discriminant(_24)<br/>StorageDead(_24)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;mut (*_2)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;(*_22)<br/></td></tr><tr><td align="left">_42 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _43)</td></tr></table>>];
    bb12__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb13__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_81 = discriminant(_24)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_41 = &amp;(*_42)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_40 = PerpMarket::oracle_id(move _41)</td></tr></table>>];
    bb15__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_36 = OracleMap::&lt;'_&gt;::get_price_data(move _37, move _38)</td></tr></table>>];
    bb16__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb17__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_44 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb18__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_35 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_34 = _48<br/>StorageDead(_48)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_22)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb19__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb20__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_52 = &amp;(*_53)<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>_55 = (*_34)<br/>StorageLive(_56)<br/>_56 = _5<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;(((*_3).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_57 = &amp;(*_58)<br/></td></tr><tr><td align="left">_51 = PerpMarket::get_mm_oracle_price_data(move _52, move _55, move _56, move _57)</td></tr></table>>];
    bb22__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb23__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_59 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb24__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_50 as Continue).0: state::oracle::MMOraclePriceData)<br/>_49 = _63<br/>StorageDead(_63)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut (*_22)<br/></td></tr><tr><td align="left">_68 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _69)</td></tr></table>>];
    bb25__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb26__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_67 = &amp;mut (*_68)<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;_49<br/>_70 = &amp;(*_71)<br/>StorageLive(_72)<br/>_72 = &amp;(*_3)<br/>StorageLive(_73)<br/>_73 = _6<br/>StorageLive(_74)<br/>_74 = _5<br/></td></tr><tr><td align="left">_66 = _update_amm(move _67, move _70, move _72, move _73, move _74)</td></tr></table>>];
    bb28__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb29__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_75 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb30__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_65 as Continue).0: i128)<br/>_64 = _79<br/>StorageDead(_79)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>_14 = const ()<br/>StorageDead(_49)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb31__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_78)<br/>_78 = _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb32__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb36__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">return</td></tr></table>>];
    bb38__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_23)</td></tr></table>>];
    bb39__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb40__0_743 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left" balign="left">_85 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_743 -> bb1__0_743 [label="return"];
    bb1__0_743 -> bb2__0_743 [label="return"];
    bb2__0_743 -> bb3__0_743 [label=""];
    bb3__0_743 -> bb4__0_743 [label="return"];
    bb4__0_743 -> bb7__0_743 [label="0"];
    bb4__0_743 -> bb5__0_743 [label="1"];
    bb4__0_743 -> bb6__0_743 [label="otherwise"];
    bb5__0_743 -> bb8__0_743 [label="return"];
    bb7__0_743 -> bb37__0_743 [label=""];
    bb8__0_743 -> bb9__0_743 [label="return"];
    bb8__0_743 -> bb39__0_743 [label="unwind"];
    bb9__0_743 -> bb10__0_743 [label="return"];
    bb9__0_743 -> bb39__0_743 [label="unwind"];
    bb10__0_743 -> bb11__0_743 [label="0"];
    bb10__0_743 -> bb12__0_743 [label="1"];
    bb10__0_743 -> bb6__0_743 [label="otherwise"];
    bb11__0_743 -> bb14__0_743 [label="return"];
    bb11__0_743 -> bb38__0_743 [label="unwind"];
    bb12__0_743 -> bb13__0_743 [label="return"];
    bb12__0_743 -> bb40__0_743 [label="unwind"];
    bb13__0_743 -> bb36__0_743 [label=""];
    bb14__0_743 -> bb15__0_743 [label="return"];
    bb14__0_743 -> bb38__0_743 [label="unwind"];
    bb15__0_743 -> bb16__0_743 [label="return"];
    bb15__0_743 -> bb38__0_743 [label="unwind"];
    bb16__0_743 -> bb17__0_743 [label="return"];
    bb16__0_743 -> bb38__0_743 [label="unwind"];
    bb17__0_743 -> bb18__0_743 [label="0"];
    bb17__0_743 -> bb19__0_743 [label="1"];
    bb17__0_743 -> bb6__0_743 [label="otherwise"];
    bb18__0_743 -> bb21__0_743 [label="return"];
    bb18__0_743 -> bb38__0_743 [label="unwind"];
    bb19__0_743 -> bb20__0_743 [label="return"];
    bb19__0_743 -> bb38__0_743 [label="unwind"];
    bb20__0_743 -> bb35__0_743 [label=""];
    bb21__0_743 -> bb22__0_743 [label="return"];
    bb21__0_743 -> bb38__0_743 [label="unwind"];
    bb22__0_743 -> bb23__0_743 [label="return"];
    bb22__0_743 -> bb38__0_743 [label="unwind"];
    bb23__0_743 -> bb24__0_743 [label="0"];
    bb23__0_743 -> bb25__0_743 [label="1"];
    bb23__0_743 -> bb6__0_743 [label="otherwise"];
    bb24__0_743 -> bb27__0_743 [label="return"];
    bb24__0_743 -> bb38__0_743 [label="unwind"];
    bb25__0_743 -> bb26__0_743 [label="return"];
    bb25__0_743 -> bb38__0_743 [label="unwind"];
    bb26__0_743 -> bb34__0_743 [label=""];
    bb27__0_743 -> bb28__0_743 [label="return"];
    bb27__0_743 -> bb38__0_743 [label="unwind"];
    bb28__0_743 -> bb29__0_743 [label="return"];
    bb28__0_743 -> bb38__0_743 [label="unwind"];
    bb29__0_743 -> bb30__0_743 [label="0"];
    bb29__0_743 -> bb31__0_743 [label="1"];
    bb29__0_743 -> bb6__0_743 [label="otherwise"];
    bb30__0_743 -> bb33__0_743 [label="return"];
    bb30__0_743 -> bb39__0_743 [label="unwind"];
    bb31__0_743 -> bb32__0_743 [label="return"];
    bb31__0_743 -> bb38__0_743 [label="unwind"];
    bb32__0_743 -> bb34__0_743 [label=""];
    bb33__0_743 -> bb3__0_743 [label=""];
    bb34__0_743 -> bb35__0_743 [label=""];
    bb35__0_743 -> bb36__0_743 [label="return"];
    bb35__0_743 -> bb39__0_743 [label="unwind"];
    bb36__0_743 -> bb37__0_743 [label=""];
    bb38__0_743 -> bb39__0_743 [label="return"];
    bb40__0_743 -> bb39__0_743 [label=""];
}
