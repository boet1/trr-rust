// MIR for `user_map::<impl at programs/drift/src/state/user_map.rs:21:1: 21:21>::get_ref` after PreCodegen

fn user_map::<impl at programs/drift/src/state/user_map.rs:21:1: 21:21>::get_ref(_1: &UserMap<'_>, _2: &anchor_lang::prelude::Pubkey) -> std::result::Result<Ref<'_, User>, error::ErrorCode> {
    debug self => _1;
    debug user => _2;
    let mut _0: std::result::Result<std::cell::Ref<'_, state::user::User>, error::ErrorCode>;
    let _3: &anchor_lang::prelude::AccountLoader<'_, state::user::User>;
    let mut _4: std::option::Option<&anchor_lang::prelude::AccountLoader<'_, state::user::User>>;
    let mut _5: &std::collections::BTreeMap<anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader<'_, state::user::User>>;
    let mut _6: &anchor_lang::prelude::Pubkey;
    let mut _7: isize;
    let _8: &anchor_lang::prelude::AccountLoader<'_, state::user::User>;
    let mut _9: !;
    let _10: &std::panic::Location<'_>;
    let _11: ();
    let mut _12: &str;
    let _13: &str;
    let mut _14: &std::string::String;
    let _15: &std::string::String;
    let _16: std::string::String;
    let mut _18: std::fmt::Arguments<'_>;
    let mut _19: &[&str];
    let mut _20: &[&str; 3];
    let _21: &[&str; 3];
    let _22: [&str; 3];
    let mut _23: &[core::fmt::rt::Argument<'_>];
    let mut _24: &[core::fmt::rt::Argument<'_>; 3];
    let _25: &[core::fmt::rt::Argument<'_>; 3];
    let _26: [core::fmt::rt::Argument<'_>; 3];
    let mut _27: core::fmt::rt::Argument<'_>;
    let mut _28: &&anchor_lang::prelude::Pubkey;
    let _29: &&anchor_lang::prelude::Pubkey;
    let mut _30: core::fmt::rt::Argument<'_>;
    let mut _31: &&str;
    let _32: &&str;
    let _33: &str;
    let mut _34: &std::panic::Location<'_>;
    let mut _35: core::fmt::rt::Argument<'_>;
    let mut _36: &u32;
    let _37: &u32;
    let _38: u32;
    let mut _39: &std::panic::Location<'_>;
    let mut _40: error::ErrorCode;
    let mut _41: std::result::Result<std::cell::Ref<'_, state::user::User>, anchor_lang::error::Error>;
    let mut _42: &anchor_lang::prelude::AccountLoader<'_, state::user::User>;
    let mut _43: isize;
    let mut _45: std::cell::Ref<'_, state::user::User>;
    let _48: ();
    let mut _49: &str;
    let _50: &str;
    let mut _51: &std::string::String;
    let _52: &std::string::String;
    let _53: std::string::String;
    let mut _55: std::fmt::Arguments<'_>;
    let mut _56: &[&str];
    let mut _57: &[&str; 1];
    let _58: &[&str; 1];
    let _59: [&str; 1];
    let mut _60: &[core::fmt::rt::Argument<'_>];
    let mut _61: &[core::fmt::rt::Argument<'_>; 1];
    let _62: &[core::fmt::rt::Argument<'_>; 1];
    let _63: [core::fmt::rt::Argument<'_>; 1];
    let mut _64: core::fmt::rt::Argument<'_>;
    let mut _65: &anchor_lang::error::Error;
    let _66: &anchor_lang::error::Error;
    let _67: ();
    let mut _68: &str;
    let _69: &str;
    let mut _70: &std::string::String;
    let _71: &std::string::String;
    let _72: std::string::String;
    let mut _74: std::fmt::Arguments<'_>;
    let mut _75: &[&str];
    let mut _76: &[&str; 3];
    let _77: &[&str; 3];
    let _78: [&str; 3];
    let mut _79: &[core::fmt::rt::Argument<'_>];
    let mut _80: &[core::fmt::rt::Argument<'_>; 3];
    let _81: &[core::fmt::rt::Argument<'_>; 3];
    let _82: [core::fmt::rt::Argument<'_>; 3];
    let mut _83: core::fmt::rt::Argument<'_>;
    let mut _84: &&anchor_lang::prelude::Pubkey;
    let _85: &&anchor_lang::prelude::Pubkey;
    let mut _86: core::fmt::rt::Argument<'_>;
    let mut _87: &&str;
    let _88: &&str;
    let _89: &str;
    let mut _90: &std::panic::Location<'_>;
    let mut _91: core::fmt::rt::Argument<'_>;
    let mut _92: &u32;
    let _93: &u32;
    let _94: u32;
    let mut _95: &std::panic::Location<'_>;
    let mut _96: error::ErrorCode;
    let mut _100: bool;
    let mut _101: bool;
    let mut _102: isize;
    let mut _103: isize;
    let mut _104: isize;
    scope 1 {
        debug loader => _3;
        let _44: std::cell::Ref<'_, state::user::User>;
        let _46: anchor_lang::error::Error;
        scope 5 {
            debug user => _44;
        }
        scope 6 {
            debug e => _46;
            let _47: &std::panic::Location<'_>;
            scope 7 {
                debug caller => _47;
                let _54: std::string::String;
                let _73: std::string::String;
                let mut _98: &[&str; 3];
                let mut _99: &[&str; 1];
                scope 8 {
                    debug res => _54;
                }
                scope 9 {
                    debug res => _73;
                }
            }
        }
    }
    scope 2 {
        debug loader => _8;
    }
    scope 3 {
        debug caller => _10;
        let _17: std::string::String;
        let mut _97: &[&str; 3];
        scope 4 {
            debug res => _17;
        }
    }

    bb0: {
        _101 = const false;
        _100 = const false;
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &((*_1).0: std::collections::BTreeMap<anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader<'_, state::user::User>>);
        StorageLive(_6);
        _6 = &(*_2);
        _4 = BTreeMap::<anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader<'_, User>>::get::<anchor_lang::prelude::Pubkey>(move _5, move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        StorageDead(_5);
        _7 = discriminant(_4);
        switchInt(move _7) -> [0: bb2, 1: bb4, otherwise: bb3];
    }

    bb2: {
        StorageLive(_10);
        _10 = Location::<'_>::caller() -> [return: bb5, unwind continue];
    }

    bb3: {
        unreachable;
    }

    bb4: {
        StorageLive(_8);
        _8 = ((_4 as Some).0: &anchor_lang::prelude::AccountLoader<'_, state::user::User>);
        _3 = _8;
        StorageDead(_8);
        StorageDead(_4);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &(*_3);
        _100 = const true;
        _101 = const true;
        _41 = anchor_lang::prelude::AccountLoader::<'_, User>::load(move _42) -> [return: bb16, unwind continue];
    }

    bb5: {
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        _97 = const _;
        _21 = &(*_97);
        _20 = &(*_21);
        _19 = move _20 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_20);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &_2;
        _28 = &(*_29);
        _27 = core::fmt::rt::Argument::<'_>::new_display::<&anchor_lang::prelude::Pubkey>(move _28) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_28);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &(*_10);
        _33 = Location::<'_>::file(move _34) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_34);
        _32 = &_33;
        _31 = &(*_32);
        _30 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _31) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_31);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &(*_10);
        _38 = Location::<'_>::line(move _39) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_39);
        _37 = &_38;
        _36 = &(*_37);
        _35 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _36) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_36);
        _26 = [move _27, move _30, move _35];
        StorageDead(_35);
        StorageDead(_30);
        StorageDead(_27);
        _25 = &_26;
        _24 = &(*_25);
        _23 = move _24 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_24);
        _18 = Arguments::<'_>::new_v1(move _19, move _23) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_23);
        StorageDead(_19);
        _17 = format(move _18) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_18);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_21);
        _16 = move _17;
        StorageDead(_17);
        _15 = &_16;
        _14 = &(*_15);
        _13 = <String as Deref>::deref(move _14) -> [return: bb13, unwind: bb42];
    }

    bb13: {
        _12 = &(*_13);
        StorageDead(_14);
        _11 = solana_program::log::sol_log(move _12) -> [return: bb14, unwind: bb42];
    }

    bb14: {
        StorageDead(_12);
        drop(_16) -> [return: bb15, unwind: bb43];
    }

    bb15: {
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_11);
        StorageLive(_40);
        _40 = error::ErrorCode::UserNotFound;
        _0 = std::result::Result::<Ref<'_, User>, error::ErrorCode>::Err(move _40);
        StorageDead(_40);
        StorageDead(_10);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb38;
    }

    bb16: {
        StorageDead(_42);
        _43 = discriminant(_41);
        switchInt(move _43) -> [0: bb18, 1: bb17, otherwise: bb3];
    }

    bb17: {
        StorageLive(_46);
        _46 = move ((_41 as Err).0: anchor_lang::error::Error);
        StorageLive(_47);
        _47 = Location::<'_>::caller() -> [return: bb19, unwind: bb41];
    }

    bb18: {
        StorageLive(_44);
        _44 = move ((_41 as Ok).0: std::cell::Ref<'_, state::user::User>);
        StorageLive(_45);
        _45 = move _44;
        _0 = std::result::Result::<Ref<'_, User>, error::ErrorCode>::Ok(move _45);
        StorageDead(_45);
        StorageDead(_44);
        goto -> bb37;
    }

    bb19: {
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _99 = const _;
        _58 = &(*_99);
        _57 = &(*_58);
        _56 = move _57 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_57);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        _66 = &_46;
        _65 = &(*_66);
        _64 = core::fmt::rt::Argument::<'_>::new_debug::<anchor_lang::error::Error>(move _65) -> [return: bb20, unwind: bb41];
    }

    bb20: {
        StorageDead(_65);
        _63 = [move _64];
        StorageDead(_64);
        _62 = &_63;
        _61 = &(*_62);
        _60 = move _61 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_61);
        _55 = Arguments::<'_>::new_v1(move _56, move _60) -> [return: bb21, unwind: bb41];
    }

    bb21: {
        StorageDead(_60);
        StorageDead(_56);
        _54 = format(move _55) -> [return: bb22, unwind: bb41];
    }

    bb22: {
        StorageDead(_55);
        StorageDead(_66);
        StorageDead(_63);
        StorageDead(_62);
        StorageDead(_58);
        _53 = move _54;
        StorageDead(_54);
        _52 = &_53;
        _51 = &(*_52);
        _50 = <String as Deref>::deref(move _51) -> [return: bb23, unwind: bb40];
    }

    bb23: {
        _49 = &(*_50);
        StorageDead(_51);
        _48 = solana_program::log::sol_log(move _49) -> [return: bb24, unwind: bb40];
    }

    bb24: {
        StorageDead(_49);
        drop(_53) -> [return: bb25, unwind: bb41];
    }

    bb25: {
        StorageDead(_53);
        StorageDead(_52);
        StorageDead(_50);
        StorageDead(_48);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _98 = const _;
        _77 = &(*_98);
        _76 = &(*_77);
        _75 = move _76 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_76);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        StorageLive(_85);
        _85 = &_2;
        _84 = &(*_85);
        _83 = core::fmt::rt::Argument::<'_>::new_display::<&anchor_lang::prelude::Pubkey>(move _84) -> [return: bb26, unwind: bb41];
    }

    bb26: {
        StorageDead(_84);
        StorageLive(_86);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        _90 = &(*_47);
        _89 = Location::<'_>::file(move _90) -> [return: bb27, unwind: bb41];
    }

    bb27: {
        StorageDead(_90);
        _88 = &_89;
        _87 = &(*_88);
        _86 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _87) -> [return: bb28, unwind: bb41];
    }

    bb28: {
        StorageDead(_87);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        _95 = &(*_47);
        _94 = Location::<'_>::line(move _95) -> [return: bb29, unwind: bb41];
    }

    bb29: {
        StorageDead(_95);
        _93 = &_94;
        _92 = &(*_93);
        _91 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _92) -> [return: bb30, unwind: bb41];
    }

    bb30: {
        StorageDead(_92);
        _82 = [move _83, move _86, move _91];
        StorageDead(_91);
        StorageDead(_86);
        StorageDead(_83);
        _81 = &_82;
        _80 = &(*_81);
        _79 = move _80 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_80);
        _74 = Arguments::<'_>::new_v1(move _75, move _79) -> [return: bb31, unwind: bb41];
    }

    bb31: {
        StorageDead(_79);
        StorageDead(_75);
        _73 = format(move _74) -> [return: bb32, unwind: bb41];
    }

    bb32: {
        StorageDead(_74);
        StorageDead(_94);
        StorageDead(_93);
        StorageDead(_89);
        StorageDead(_88);
        StorageDead(_85);
        StorageDead(_82);
        StorageDead(_81);
        StorageDead(_77);
        _72 = move _73;
        StorageDead(_73);
        _71 = &_72;
        _70 = &(*_71);
        _69 = <String as Deref>::deref(move _70) -> [return: bb33, unwind: bb39];
    }

    bb33: {
        _68 = &(*_69);
        StorageDead(_70);
        _67 = solana_program::log::sol_log(move _68) -> [return: bb34, unwind: bb39];
    }

    bb34: {
        StorageDead(_68);
        drop(_72) -> [return: bb35, unwind: bb41];
    }

    bb35: {
        StorageDead(_72);
        StorageDead(_71);
        StorageDead(_69);
        StorageDead(_67);
        StorageLive(_96);
        _96 = error::ErrorCode::UnableToLoadUserAccount;
        _0 = std::result::Result::<Ref<'_, User>, error::ErrorCode>::Err(move _96);
        StorageDead(_96);
        StorageDead(_47);
        drop(_46) -> [return: bb36, unwind: bb44];
    }

    bb36: {
        StorageDead(_46);
        goto -> bb37;
    }

    bb37: {
        StorageDead(_3);
        _102 = discriminant(_41);
        _100 = const false;
        _101 = const false;
        StorageDead(_41);
        goto -> bb38;
    }

    bb38: {
        return;
    }

    bb39 (cleanup): {
        drop(_72) -> [return: bb41, unwind terminate(cleanup)];
    }

    bb40 (cleanup): {
        drop(_53) -> [return: bb41, unwind terminate(cleanup)];
    }

    bb41 (cleanup): {
        drop(_46) -> [return: bb44, unwind terminate(cleanup)];
    }

    bb42 (cleanup): {
        drop(_16) -> [return: bb43, unwind terminate(cleanup)];
    }

    bb43 (cleanup): {
        resume;
    }

    bb44 (cleanup): {
        _104 = discriminant(_41);
        goto -> bb43;
    }
}
