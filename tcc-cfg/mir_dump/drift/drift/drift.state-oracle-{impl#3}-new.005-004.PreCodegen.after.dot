digraph Mir_0_3509 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn MMOraclePriceData::new(_1: i64, _2: i64, _3: u64, _4: math::oracle::OracleValidity, _5: state::oracle::OraclePriceData) -&gt; std::result::Result&lt;state::oracle::MMOraclePriceData, error::ErrorCode&gt;<br align="left"/>let _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i64;<br align="left"/>let _16: u128;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: u128;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _39: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _40: i64;<br align="left"/>let mut _41: i64;<br align="left"/>let mut _42: i64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: u128;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u128;<br align="left"/>let _53: bool;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: u64;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: u64;<br align="left"/>let mut _60: u64;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _62: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: u64;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: u64;<br align="left"/>let mut _74: u64;<br align="left"/>let mut _75: i64;<br align="left"/>let mut _76: i64;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: i64;<br align="left"/>let _79: state::oracle::OraclePriceData;<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: i64;<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _85: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _86: math::oracle::OracleValidity;<br align="left"/>let mut _87: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _88: math::oracle::DriftAction;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: bool;<br align="left"/>let mut _94: bool;<br align="left"/>let mut _95: u128;<br align="left"/>let _96: u64;<br align="left"/>let mut _97: i64;<br align="left"/>let mut _98: i64;<br align="left"/>let _99: u64;<br align="left"/>let mut _100: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _101: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _102: u64;<br align="left"/>let mut _103: u64;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: u64;<br align="left"/>let mut _109: i64;<br align="left"/>let mut _110: u64;<br align="left"/>let mut _111: i64;<br align="left"/>let mut _112: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: state::oracle::MMOraclePriceData;<br align="left"/>let mut _115: i64;<br align="left"/>let mut _116: i64;<br align="left"/>let mut _117: math::oracle::OracleValidity;<br align="left"/>let mut _118: u128;<br align="left"/>let mut _119: state::oracle::OraclePriceData;<br align="left"/>let mut _120: state::oracle::OraclePriceData;<br align="left"/>let mut _121: u64;<br align="left"/>debug mm_oracle_price =&gt; _1;<br align="left"/>debug mm_oracle_delay =&gt; _2;<br align="left"/>debug mm_oracle_sequence_id =&gt; _3;<br align="left"/>debug mm_oracle_validity =&gt; _4;<br align="left"/>debug oracle_price_data =&gt; _5;<br align="left"/>debug price_diff =&gt; _6;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug price_diff_bps =&gt; _16;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug exchange_oracle_is_more_recent =&gt; _53;<br align="left"/>debug exchange_seq_id =&gt; _55;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug safe_oracle_price_data =&gt; _79;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug mm_oracle_diff_premium =&gt; _96;<br align="left"/>debug adjusted_confidence =&gt; _99;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>>;
    bb0__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _1<br/>StorageLive(_10)<br/>_10 = (_5.0: i64)<br/></td></tr><tr><td align="left">_8 = &lt;i64 as SafeMath&gt;::safe_sub(move _9, move _10)</td></tr></table>>];
    bb1__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: i64)<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _6<br/></td></tr><tr><td align="left">_25 = core::num::&lt;impl i64&gt;::abs(move _26)</td></tr></table>>];
    bb4__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _25)</td></tr></table>>];
    bb8__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb9__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_27 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb10__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_23 as Continue).0: u128)<br/>_22 = _31<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_21 = &lt;u128 as SafeMath&gt;::safe_mul(move _22, const _)</td></tr></table>>];
    bb11__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb12__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb14__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_32 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb15__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_20 as Continue).0: u128)<br/>_19 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = (_5.0: i64)<br/></td></tr><tr><td align="left">_41 = core::num::&lt;impl i64&gt;::abs(move _42)</td></tr></table>>];
    bb16__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb17__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;i64 as Ord&gt;::max(move _41, const 1_i64)</td></tr></table>>];
    bb19__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;i64 as Cast&gt;::cast::&lt;u128&gt;(move _40)</td></tr></table>>];
    bb20__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb21__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_38 as Continue).0: u128)<br/>_37 = _47<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_18 = &lt;u128 as SafeMath&gt;::safe_div(move _19, move _37)</td></tr></table>>];
    bb23__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_37)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb26__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_48 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb27__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_17 as Continue).0: u128)<br/>_16 = _52<br/>StorageDead(_52)<br/>StorageDead(_38)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageLive(_53)<br/>_54 = discriminant((_5.4: std::option::Option&lt;u64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb28__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb29__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = _2<br/>StorageLive(_78)<br/>_78 = (_5.2: i64)<br/>_53 = Gt(move _77, move _78)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = (((_5.4: std::option::Option&lt;u64&gt;) as Some).0: u64)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _55<br/>StorageLive(_59)<br/>_59 = _3<br/></td></tr><tr><td align="left">_57 = core::num::&lt;impl u64&gt;::abs_diff(move _58, move _59)</td></tr></table>>];
    bb32__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _55<br/></td></tr><tr><td align="left">_62 = &lt;u64 as SafeMath&gt;::safe_div(move _63, const 10000_u64)</td></tr></table>>];
    bb33__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb34__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_64 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb35__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_61 as Continue).0: u64)<br/>_60 = _68<br/>StorageDead(_68)<br/>_56 = Lt(move _57, move _60)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb36__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb37__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _55<br/>_69 = Ne(move _70, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb39__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = _3<br/>_71 = Ne(move _72, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb41__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_73)<br/>_73 = _55<br/>StorageLive(_74)<br/>_74 = _3<br/>_53 = Gt(move _73, move _74)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = _2<br/>StorageLive(_76)<br/>_76 = (_5.2: i64)<br/>_53 = Gt(move _75, move _76)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _53<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb47__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _1<br/>_81 = Eq(move _82, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb48__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _4<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = DriftAction::UseMMOraclePrice<br/>_87 = Option::&lt;DriftAction&gt;::Some(move _88)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_85 = is_oracle_valid_for_action(move _86, move _87)</td></tr></table>>];
    bb50__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb51__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_89 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb52__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_84 as Continue).0: bool)<br/>_83 = _93<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb53__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb54__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = _16<br/>_94 = Gt(move _95, const _)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb56__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_79 = _5<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _1<br/>StorageLive(_98)<br/>_98 = (_5.0: i64)<br/></td></tr><tr><td align="left">_96 = core::num::&lt;impl i64&gt;::abs_diff(move _97, move _98)</td></tr></table>>];
    bb59__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = (_5.1: u64)<br/>StorageLive(_103)<br/>_103 = _96<br/></td></tr><tr><td align="left">_101 = &lt;u64 as SafeMath&gt;::safe_add(move _102, move _103)</td></tr></table>>];
    bb60__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _101)</td></tr></table>>];
    bb61__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_104 = discriminant(_100)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb62__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_100 as Continue).0: u64)<br/>_99 = _108<br/>StorageDead(_108)<br/>StorageDead(_100)<br/>StorageLive(_109)<br/>_109 = _1<br/>StorageLive(_110)<br/>_110 = _99<br/>StorageLive(_111)<br/>_111 = _2<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = _3<br/>_112 = Option::&lt;u64&gt;::Some(move _113)<br/>StorageDead(_113)<br/>_79 = OraclePriceData { price: move _109, confidence: move _110, delay: move _111, has_sufficient_number_of_data_points: const true, sequence_id: move _112 }<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_100 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb64__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = _1<br/>StorageLive(_116)<br/>_116 = _2<br/>StorageLive(_117)<br/>_117 = _4<br/>StorageLive(_118)<br/>_118 = _16<br/>StorageLive(_119)<br/>_119 = _5<br/>StorageLive(_120)<br/>_120 = _79<br/>StorageLive(_121)<br/>_121 = _3<br/>_114 = MMOraclePriceData { mm_oracle_price: move _115, mm_oracle_delay: move _116, mm_oracle_sequence_id: move _121, mm_oracle_validity: move _117, mm_exchange_diff_bps: move _118, exchange_oracle_price_data: move _119, safe_oracle_price_data: move _120 }<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>_0 = std::result::Result::&lt;MMOraclePriceData, error::ErrorCode&gt;::Ok(move _114)<br/>StorageDead(_114)<br/>StorageDead(_79)<br/>StorageDead(_53)<br/>StorageDead(_16)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_3509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3509 -> bb1__0_3509 [label="return"];
    bb1__0_3509 -> bb2__0_3509 [label="return"];
    bb2__0_3509 -> bb3__0_3509 [label="0"];
    bb2__0_3509 -> bb5__0_3509 [label="1"];
    bb2__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb3__0_3509 -> bb7__0_3509 [label="return"];
    bb5__0_3509 -> bb6__0_3509 [label="return"];
    bb6__0_3509 -> bb72__0_3509 [label=""];
    bb7__0_3509 -> bb8__0_3509 [label="return"];
    bb8__0_3509 -> bb9__0_3509 [label="return"];
    bb9__0_3509 -> bb10__0_3509 [label="0"];
    bb9__0_3509 -> bb11__0_3509 [label="1"];
    bb9__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb10__0_3509 -> bb13__0_3509 [label="return"];
    bb11__0_3509 -> bb12__0_3509 [label="return"];
    bb12__0_3509 -> bb69__0_3509 [label=""];
    bb13__0_3509 -> bb14__0_3509 [label="return"];
    bb14__0_3509 -> bb15__0_3509 [label="0"];
    bb14__0_3509 -> bb16__0_3509 [label="1"];
    bb14__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb15__0_3509 -> bb18__0_3509 [label="return"];
    bb16__0_3509 -> bb17__0_3509 [label="return"];
    bb17__0_3509 -> bb69__0_3509 [label=""];
    bb18__0_3509 -> bb19__0_3509 [label="return"];
    bb19__0_3509 -> bb20__0_3509 [label="return"];
    bb20__0_3509 -> bb21__0_3509 [label="return"];
    bb21__0_3509 -> bb22__0_3509 [label="0"];
    bb21__0_3509 -> bb23__0_3509 [label="1"];
    bb21__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb22__0_3509 -> bb25__0_3509 [label="return"];
    bb23__0_3509 -> bb24__0_3509 [label="return"];
    bb24__0_3509 -> bb68__0_3509 [label=""];
    bb25__0_3509 -> bb26__0_3509 [label="return"];
    bb26__0_3509 -> bb27__0_3509 [label="0"];
    bb26__0_3509 -> bb28__0_3509 [label="1"];
    bb26__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb27__0_3509 -> bb31__0_3509 [label="1"];
    bb27__0_3509 -> bb30__0_3509 [label="otherwise"];
    bb28__0_3509 -> bb29__0_3509 [label="return"];
    bb29__0_3509 -> bb68__0_3509 [label=""];
    bb30__0_3509 -> bb46__0_3509 [label=""];
    bb31__0_3509 -> bb32__0_3509 [label="return"];
    bb32__0_3509 -> bb33__0_3509 [label="return"];
    bb33__0_3509 -> bb34__0_3509 [label="return"];
    bb34__0_3509 -> bb35__0_3509 [label="0"];
    bb34__0_3509 -> bb36__0_3509 [label="1"];
    bb34__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb35__0_3509 -> bb39__0_3509 [label="0"];
    bb35__0_3509 -> bb38__0_3509 [label="otherwise"];
    bb36__0_3509 -> bb37__0_3509 [label="return"];
    bb37__0_3509 -> bb67__0_3509 [label=""];
    bb38__0_3509 -> bb43__0_3509 [label="0"];
    bb38__0_3509 -> bb40__0_3509 [label="otherwise"];
    bb39__0_3509 -> bb44__0_3509 [label=""];
    bb40__0_3509 -> bb42__0_3509 [label="0"];
    bb40__0_3509 -> bb41__0_3509 [label="otherwise"];
    bb41__0_3509 -> bb45__0_3509 [label=""];
    bb42__0_3509 -> bb44__0_3509 [label=""];
    bb43__0_3509 -> bb44__0_3509 [label=""];
    bb44__0_3509 -> bb45__0_3509 [label=""];
    bb45__0_3509 -> bb46__0_3509 [label=""];
    bb46__0_3509 -> bb47__0_3509 [label="0"];
    bb46__0_3509 -> bb48__0_3509 [label="otherwise"];
    bb47__0_3509 -> bb49__0_3509 [label="0"];
    bb47__0_3509 -> bb48__0_3509 [label="otherwise"];
    bb48__0_3509 -> bb56__0_3509 [label=""];
    bb49__0_3509 -> bb50__0_3509 [label="return"];
    bb50__0_3509 -> bb51__0_3509 [label="return"];
    bb51__0_3509 -> bb52__0_3509 [label="0"];
    bb51__0_3509 -> bb53__0_3509 [label="1"];
    bb51__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb52__0_3509 -> bb56__0_3509 [label="0"];
    bb52__0_3509 -> bb55__0_3509 [label="otherwise"];
    bb53__0_3509 -> bb54__0_3509 [label="return"];
    bb54__0_3509 -> bb66__0_3509 [label=""];
    bb55__0_3509 -> bb58__0_3509 [label="0"];
    bb55__0_3509 -> bb57__0_3509 [label="otherwise"];
    bb56__0_3509 -> bb57__0_3509 [label=""];
    bb57__0_3509 -> bb65__0_3509 [label=""];
    bb58__0_3509 -> bb59__0_3509 [label="return"];
    bb59__0_3509 -> bb60__0_3509 [label="return"];
    bb60__0_3509 -> bb61__0_3509 [label="return"];
    bb61__0_3509 -> bb62__0_3509 [label="0"];
    bb61__0_3509 -> bb63__0_3509 [label="1"];
    bb61__0_3509 -> bb4__0_3509 [label="otherwise"];
    bb62__0_3509 -> bb65__0_3509 [label=""];
    bb63__0_3509 -> bb64__0_3509 [label="return"];
    bb64__0_3509 -> bb66__0_3509 [label=""];
    bb65__0_3509 -> bb73__0_3509 [label=""];
    bb66__0_3509 -> bb67__0_3509 [label=""];
    bb67__0_3509 -> bb71__0_3509 [label=""];
    bb68__0_3509 -> bb70__0_3509 [label=""];
    bb69__0_3509 -> bb70__0_3509 [label=""];
    bb70__0_3509 -> bb71__0_3509 [label=""];
    bb71__0_3509 -> bb72__0_3509 [label=""];
    bb72__0_3509 -> bb73__0_3509 [label=""];
}
