digraph Mir_0_23549 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;__idl::IdlResizeAccount&lt;'info&gt; as anchor_lang::Accounts&lt;'info, IdlResizeAccountBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut __private::__idl::IdlResizeAccountBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;__private::__idl::IdlResizeAccount&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: std::result::Result&lt;anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut __private::__idl::IdlResizeAccountBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: Closure(DefId(0:23550 ~ drift[d311]::__private::__idl::{impl#24}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let _21: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: &amp;ReErased mut __private::__idl::IdlResizeAccountBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: Closure(DefId(0:23551 ~ drift[d311]::__private::__idl::{impl#24}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _36: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let mut _43: &amp;ReErased mut __private::__idl::IdlResizeAccountBumps;<br align="left"/>let mut _44: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _45: Closure(DefId(0:23552 ~ drift[d311]::__private::__idl::{impl#24}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let _51: ();<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let _55: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: anchor_lang::error::Error;<br align="left"/>let mut _58: anchor_lang::error::Error;<br align="left"/>let mut _59: anchor_lang::error::ErrorCode;<br align="left"/>let _60: ();<br align="left"/>let _61: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _62: &amp;ReErased __private::__idl::IdlAccount;<br align="left"/>let mut _63: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let _64: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _68: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: anchor_lang::error::Error;<br align="left"/>let mut _71: anchor_lang::error::Error;<br align="left"/>let mut _72: anchor_lang::error::Error;<br align="left"/>let mut _73: anchor_lang::error::ErrorCode;<br align="left"/>let mut _74: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _75: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _76: anchor_lang::prelude::Pubkey;<br align="left"/>let _77: ();<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _81: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: anchor_lang::error::Error;<br align="left"/>let mut _84: anchor_lang::error::Error;<br align="left"/>let mut _85: anchor_lang::error::ErrorCode;<br align="left"/>let _86: ();<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _89: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _92: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _93: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _94: !;<br align="left"/>let mut _95: anchor_lang::error::Error;<br align="left"/>let mut _96: anchor_lang::error::Error;<br align="left"/>let mut _97: anchor_lang::error::ErrorCode;<br align="left"/>let mut _98: __private::__idl::IdlResizeAccount&lt;ReErased&gt;;<br align="left"/>let mut _99: anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let mut _100: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _101: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _102: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: isize;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug idl =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug authority =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug system_program =&gt; _36;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug my_key =&gt; _61;<br align="left"/>debug target_key =&gt; _64;<br align="left"/>>;
    bb0__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;mut (*_4)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_9 = &lt;anchor_lang::prelude::Account&lt;'_, __idl::IdlAccount&gt; as anchor_lang::Accounts&lt;'_, IdlResizeAccountBumps&gt;&gt;::try_accounts(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>_15 = {closure@programs/drift/src/lib.rs:69:1: 69:11}<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;anchor_lang::prelude::Account&lt;'_, __idl::IdlAccount&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/lib.rs:69:1: 69:11}&gt;(move _9, move _15)</td></tr></table>>];
    bb2__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;anchor_lang::prelude::Account&lt;'_, __idl::IdlAccount&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_7 as Continue).0: anchor_lang::prelude::Account&lt;'_, __private::__idl::IdlAccount&gt;)<br/>_6 = move _20<br/>StorageDead(_20)<br/>_103 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_1)<br/>StorageLive(_26)<br/>_26 = &amp;mut (*_2)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_4)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, IdlResizeAccountBumps&gt;&gt;::try_accounts(move _25, move _26, move _27, move _28, move _29)</td></tr></table>>];
    bb5__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_113 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/lib.rs:69:1: 69:11}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/lib.rs:69:1: 69:11}&gt;(move _24, move _30)</td></tr></table>>];
    bb9__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_31 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_22 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_21 = move _35<br/>StorageDead(_35)<br/>_105 = discriminant(_22)<br/>StorageDead(_22)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/>StorageLive(_42)<br/>_42 = &amp;(*_3)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_4)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::Accounts&lt;'_, IdlResizeAccountBumps&gt;&gt;::try_accounts(move _40, move _41, move _42, move _43, move _44)</td></tr></table>>];
    bb12__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_111 = discriminant(_22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_45)<br/>_45 = {closure@programs/drift/src/lib.rs:69:1: 69:11}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/lib.rs:69:1: 69:11}&gt;(move _39, move _45)</td></tr></table>>];
    bb15__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb16__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_46 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_37 as Continue).0: anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;)<br/>_36 = move _50<br/>StorageDead(_50)<br/>_107 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;_6<br/>_54 = &amp;(*_55)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::Account&lt;'_, __idl::IdlAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _54)</td></tr></table>>];
    bb18__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb19__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_109 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = ((*_53).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb21__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = ConstraintMut<br/></td></tr><tr><td align="left">_58 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _59)</td></tr></table>>];
    bb22__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _58, const &quot;idl&quot;)</td></tr></table>>];
    bb23__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_0 = std::result::Result::&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _57)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>_51 = const ()<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_6<br/></td></tr><tr><td align="left">_62 = &lt;anchor_lang::prelude::Account&lt;'_, __idl::IdlAccount&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb25__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = ((*_62).0: anchor_lang::prelude::Pubkey)<br/>StorageDead(_62)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_21<br/></td></tr><tr><td align="left">_64 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _65)</td></tr></table>>];
    bb26__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_61<br/>StorageLive(_68)<br/>_68 = &amp;_64<br/></td></tr><tr><td align="left">_66 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _67, move _68)</td></tr></table>>];
    bb27__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb28__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = ConstraintHasOne<br/></td></tr><tr><td align="left">_72 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _73)</td></tr></table>>];
    bb29__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _72, const &quot;idl&quot;)</td></tr></table>>];
    bb30__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _61<br/>StorageLive(_76)<br/>_76 = _64<br/>_74 = (move _75, move _76)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_70 = anchor_lang::error::Error::with_pubkeys(move _71, move _74)</td></tr></table>>];
    bb31__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_71)<br/>_0 = std::result::Result::&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _70)<br/>StorageDead(_70)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>_60 = const ()<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_21<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _80)</td></tr></table>>];
    bb33__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = ((*_79).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb34__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = ConstraintMut<br/></td></tr><tr><td align="left">_84 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _85)</td></tr></table>>];
    bb35__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _84, const &quot;authority&quot;)</td></tr></table>>];
    bb36__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_0 = std::result::Result::&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _83)<br/>StorageDead(_83)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>_77 = const ()<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_21<br/></td></tr><tr><td align="left">_89 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _90)</td></tr></table>>];
    bb38__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_88 = &amp;((*_89).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_91)<br/>_102 = const _<br/>_91 = &amp;(*_102)<br/></td></tr><tr><td align="left">_87 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _88, move _91)</td></tr></table>>];
    bb39__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb40__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_89)<br/>_86 = const ()<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = move _6<br/>StorageLive(_100)<br/>_100 = move _21<br/>StorageLive(_101)<br/>_101 = move _36<br/>_98 = __idl::IdlResizeAccount::&lt;'_&gt; { idl: move _99, authority: move _100, system_program: move _101 }<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>_0 = std::result::Result::&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _98)<br/>StorageDead(_98)<br/>StorageDead(_36)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_89)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = ConstraintRaw<br/></td></tr><tr><td align="left">_96 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _97)</td></tr></table>>];
    bb42__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _96, const &quot;authority&quot;)</td></tr></table>>];
    bb43__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_0 = std::result::Result::&lt;__idl::IdlResizeAccount&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _95)<br/>StorageDead(_95)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">return</td></tr></table>>];
    bb48__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb49__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_115 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left" balign="left">_116 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_23549 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left" balign="left">_117 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_23549 -> bb1__0_23549 [label="return"];
    bb1__0_23549 -> bb2__0_23549 [label="return"];
    bb1__0_23549 -> bb48__0_23549 [label="unwind"];
    bb2__0_23549 -> bb3__0_23549 [label="return"];
    bb2__0_23549 -> bb48__0_23549 [label="unwind"];
    bb3__0_23549 -> bb4__0_23549 [label="0"];
    bb3__0_23549 -> bb6__0_23549 [label="1"];
    bb3__0_23549 -> bb5__0_23549 [label="otherwise"];
    bb4__0_23549 -> bb8__0_23549 [label="return"];
    bb6__0_23549 -> bb7__0_23549 [label="return"];
    bb6__0_23549 -> bb51__0_23549 [label="unwind"];
    bb7__0_23549 -> bb46__0_23549 [label=""];
    bb8__0_23549 -> bb9__0_23549 [label="return"];
    bb8__0_23549 -> bb48__0_23549 [label="unwind"];
    bb9__0_23549 -> bb10__0_23549 [label="return"];
    bb9__0_23549 -> bb48__0_23549 [label="unwind"];
    bb10__0_23549 -> bb11__0_23549 [label="0"];
    bb10__0_23549 -> bb12__0_23549 [label="1"];
    bb10__0_23549 -> bb5__0_23549 [label="otherwise"];
    bb11__0_23549 -> bb14__0_23549 [label="return"];
    bb12__0_23549 -> bb13__0_23549 [label="return"];
    bb12__0_23549 -> bb50__0_23549 [label="unwind"];
    bb13__0_23549 -> bb45__0_23549 [label=""];
    bb14__0_23549 -> bb15__0_23549 [label="return"];
    bb14__0_23549 -> bb48__0_23549 [label="unwind"];
    bb15__0_23549 -> bb16__0_23549 [label="return"];
    bb15__0_23549 -> bb48__0_23549 [label="unwind"];
    bb16__0_23549 -> bb17__0_23549 [label="0"];
    bb16__0_23549 -> bb18__0_23549 [label="1"];
    bb16__0_23549 -> bb5__0_23549 [label="otherwise"];
    bb17__0_23549 -> bb20__0_23549 [label="return"];
    bb18__0_23549 -> bb19__0_23549 [label="return"];
    bb18__0_23549 -> bb49__0_23549 [label="unwind"];
    bb19__0_23549 -> bb44__0_23549 [label=""];
    bb20__0_23549 -> bb21__0_23549 [label="0"];
    bb20__0_23549 -> bb24__0_23549 [label="otherwise"];
    bb21__0_23549 -> bb22__0_23549 [label="return"];
    bb22__0_23549 -> bb23__0_23549 [label="return"];
    bb22__0_23549 -> bb48__0_23549 [label="unwind"];
    bb23__0_23549 -> bb44__0_23549 [label=""];
    bb24__0_23549 -> bb25__0_23549 [label="return"];
    bb25__0_23549 -> bb26__0_23549 [label="return"];
    bb26__0_23549 -> bb27__0_23549 [label="return"];
    bb27__0_23549 -> bb32__0_23549 [label="0"];
    bb27__0_23549 -> bb28__0_23549 [label="otherwise"];
    bb28__0_23549 -> bb29__0_23549 [label="return"];
    bb29__0_23549 -> bb30__0_23549 [label="return"];
    bb29__0_23549 -> bb48__0_23549 [label="unwind"];
    bb30__0_23549 -> bb31__0_23549 [label="return"];
    bb30__0_23549 -> bb48__0_23549 [label="unwind"];
    bb31__0_23549 -> bb44__0_23549 [label=""];
    bb32__0_23549 -> bb33__0_23549 [label="return"];
    bb33__0_23549 -> bb34__0_23549 [label="0"];
    bb33__0_23549 -> bb37__0_23549 [label="otherwise"];
    bb34__0_23549 -> bb35__0_23549 [label="return"];
    bb35__0_23549 -> bb36__0_23549 [label="return"];
    bb35__0_23549 -> bb48__0_23549 [label="unwind"];
    bb36__0_23549 -> bb44__0_23549 [label=""];
    bb37__0_23549 -> bb38__0_23549 [label="return"];
    bb38__0_23549 -> bb39__0_23549 [label="return"];
    bb39__0_23549 -> bb41__0_23549 [label="0"];
    bb39__0_23549 -> bb40__0_23549 [label="otherwise"];
    bb40__0_23549 -> bb47__0_23549 [label=""];
    bb41__0_23549 -> bb42__0_23549 [label="return"];
    bb42__0_23549 -> bb43__0_23549 [label="return"];
    bb42__0_23549 -> bb48__0_23549 [label="unwind"];
    bb43__0_23549 -> bb44__0_23549 [label=""];
    bb44__0_23549 -> bb45__0_23549 [label=""];
    bb45__0_23549 -> bb46__0_23549 [label=""];
    bb46__0_23549 -> bb47__0_23549 [label=""];
    bb49__0_23549 -> bb48__0_23549 [label=""];
    bb50__0_23549 -> bb48__0_23549 [label=""];
    bb51__0_23549 -> bb48__0_23549 [label=""];
}
