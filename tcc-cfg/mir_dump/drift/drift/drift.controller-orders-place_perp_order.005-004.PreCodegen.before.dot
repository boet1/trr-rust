digraph Mir_0_500 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::orders::place_perp_order(_1: &amp;ReErased state::state::State, _2: &amp;ReErased mut state::user::User, _3: anchor_lang::prelude::Pubkey, _4: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _5: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _6: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _7: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;, _8: &amp;ReErased anchor_lang::prelude::Clock, _9: state::order_params::OrderParams, _10: state::order_params::PlaceOrderOptions) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _11: i64;<br align="left"/>let _12: u64;<br align="left"/>let _13: ();<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: &amp;ReErased state::order_params::PlaceOrderOptions;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased mut state::user::User;<br align="left"/>let mut _20: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _21: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _22: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _23: u32;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: ();<br align="left"/>let _29: ();<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _31: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _32: bool;<br align="left"/>let mut _33: &amp;ReErased state::user::User;<br align="left"/>let mut _34: ();<br align="left"/>let _35: error::ErrorCode;<br align="left"/>let _36: ();<br align="left"/>let mut _37: &amp;ReErased str;<br align="left"/>let _38: &amp;ReErased str;<br align="left"/>let mut _39: &amp;ReErased std::string::String;<br align="left"/>let _40: &amp;ReErased std::string::String;<br align="left"/>let _41: std::string::String;<br align="left"/>let _42: std::string::String;<br align="left"/>let mut _43: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _46: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _47: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _51: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _52: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased error::ErrorCode;<br align="left"/>let _54: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _55: error::ErrorCode;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: ();<br align="left"/>let _61: ();<br align="left"/>let mut _62: bool;<br align="left"/>let mut _63: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _66: std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _69: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _71: Closure(DefId(0:4701 ~ drift[d311]::controller::orders::place_perp_order::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: &amp;ReErased state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let _79: &amp;ReErased state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _80: &amp;ReErased std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let _83: ();<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _85: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _86: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _87: &amp;ReErased mut state::high_leverage_mode_config::HighLeverageModeConfig;<br align="left"/>let mut _88: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _89: &amp;ReErased mut state::user::User;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: ();<br align="left"/>let _95: ();<br align="left"/>let mut _96: &amp;ReErased str;<br align="left"/>let _97: &amp;ReErased str;<br align="left"/>let mut _98: !;<br align="left"/>let _99: ();<br align="left"/>let mut _100: &amp;ReErased str;<br align="left"/>let _101: &amp;ReErased str;<br align="left"/>let mut _102: error::ErrorCode;<br align="left"/>let _103: ();<br align="left"/>let mut _104: bool;<br align="left"/>let _105: ();<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _107: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _108: &amp;ReErased mut state::user::User;<br align="left"/>let mut _109: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _110: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _111: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: u64;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: ();<br align="left"/>let _121: ();<br align="left"/>let mut _122: bool;<br align="left"/>let mut _123: &amp;ReErased state::user::User;<br align="left"/>let _124: ();<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _126: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: ();<br align="left"/>let _129: error::ErrorCode;<br align="left"/>let _130: ();<br align="left"/>let mut _131: &amp;ReErased str;<br align="left"/>let _132: &amp;ReErased str;<br align="left"/>let mut _133: &amp;ReErased std::string::String;<br align="left"/>let _134: &amp;ReErased std::string::String;<br align="left"/>let _135: std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let mut _137: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _138: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _146: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _147: &amp;ReErased error::ErrorCode;<br align="left"/>let _148: &amp;ReErased error::ErrorCode;<br align="left"/>let _149: ();<br align="left"/>let mut _150: &amp;ReErased str;<br align="left"/>let _151: &amp;ReErased str;<br align="left"/>let mut _152: error::ErrorCode;<br align="left"/>let mut _153: isize;<br align="left"/>let _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _155: !;<br align="left"/>let mut _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _157: ();<br align="left"/>let _158: usize;<br align="left"/>let mut _159: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _160: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _161: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _162: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _163: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _164: &amp;ReErased [state::user::Order];<br align="left"/>let mut _165: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let mut _166: Closure(DefId(0:501 ~ drift[d311]::controller::orders::place_perp_order::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), ()]);<br align="left"/>let mut _167: error::ErrorCode;<br align="left"/>let mut _168: isize;<br align="left"/>let _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _170: !;<br align="left"/>let mut _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _172: usize;<br align="left"/>let _173: ();<br align="left"/>let mut _174: bool;<br align="left"/>let mut _175: u8;<br align="left"/>let _176: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _177: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _178: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _179: &amp;ReErased [state::user::Order];<br align="left"/>let mut _180: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let mut _181: Closure(DefId(0:502 ~ drift[d311]::controller::orders::place_perp_order::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased state::order_params::OrderParams,)]);<br align="left"/>let mut _182: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _183: bool;<br align="left"/>let mut _184: &amp;ReErased std::option::Option&lt;usize&gt;;<br align="left"/>let mut _185: !;<br align="left"/>let _186: ();<br align="left"/>let mut _187: &amp;ReErased str;<br align="left"/>let _188: &amp;ReErased str;<br align="left"/>let mut _189: &amp;ReErased std::string::String;<br align="left"/>let _190: &amp;ReErased std::string::String;<br align="left"/>let _191: std::string::String;<br align="left"/>let _192: std::string::String;<br align="left"/>let mut _193: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _195: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _196: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _197: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _198: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _199: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _200: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _201: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _202: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _203: &amp;ReErased u8;<br align="left"/>let _204: &amp;ReErased u8;<br align="left"/>let mut _205: error::ErrorCode;<br align="left"/>let _206: u16;<br align="left"/>let _207: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _208: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _209: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _210: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _211: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _212: &amp;ReErased u16;<br align="left"/>let _213: &amp;ReErased u16;<br align="left"/>let mut _214: isize;<br align="left"/>let _215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _216: !;<br align="left"/>let mut _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _218: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _219: bool;<br align="left"/>let mut _220: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _221: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _222: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _223: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _224: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _225: isize;<br align="left"/>let _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _229: bool;<br align="left"/>let _230: ();<br align="left"/>let mut _231: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _232: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _233: bool;<br align="left"/>let mut _234: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _235: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _236: isize;<br align="left"/>let mut _237: ();<br align="left"/>let _238: error::ErrorCode;<br align="left"/>let _239: ();<br align="left"/>let mut _240: &amp;ReErased str;<br align="left"/>let _241: &amp;ReErased str;<br align="left"/>let mut _242: &amp;ReErased std::string::String;<br align="left"/>let _243: &amp;ReErased std::string::String;<br align="left"/>let _244: std::string::String;<br align="left"/>let _245: std::string::String;<br align="left"/>let mut _246: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _247: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _248: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _249: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _250: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _251: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _252: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _253: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _254: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _255: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _256: &amp;ReErased error::ErrorCode;<br align="left"/>let _257: &amp;ReErased error::ErrorCode;<br align="left"/>let _258: ();<br align="left"/>let mut _259: &amp;ReErased str;<br align="left"/>let _260: &amp;ReErased str;<br align="left"/>let mut _261: error::ErrorCode;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: ();<br align="left"/>let _267: ();<br align="left"/>let mut _268: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _269: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _270: bool;<br align="left"/>let mut _271: u8;<br align="left"/>let mut _272: ();<br align="left"/>let _273: error::ErrorCode;<br align="left"/>let _274: ();<br align="left"/>let mut _275: &amp;ReErased str;<br align="left"/>let _276: &amp;ReErased str;<br align="left"/>let mut _277: &amp;ReErased std::string::String;<br align="left"/>let _278: &amp;ReErased std::string::String;<br align="left"/>let _279: std::string::String;<br align="left"/>let _280: std::string::String;<br align="left"/>let mut _281: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _282: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _283: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _284: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _285: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _286: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _287: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _288: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _289: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _290: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _291: &amp;ReErased error::ErrorCode;<br align="left"/>let _292: &amp;ReErased error::ErrorCode;<br align="left"/>let _293: ();<br align="left"/>let mut _294: &amp;ReErased str;<br align="left"/>let _295: &amp;ReErased str;<br align="left"/>let mut _296: &amp;ReErased std::string::String;<br align="left"/>let _297: &amp;ReErased std::string::String;<br align="left"/>let _298: std::string::String;<br align="left"/>let _299: std::string::String;<br align="left"/>let mut _300: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _301: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _302: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _303: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _304: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _305: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _306: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _307: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _308: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _309: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _310: &amp;ReErased u8;<br align="left"/>let _311: &amp;ReErased u8;<br align="left"/>let mut _312: error::ErrorCode;<br align="left"/>let mut _313: isize;<br align="left"/>let _314: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _315: !;<br align="left"/>let mut _316: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _317: ();<br align="left"/>let _318: ();<br align="left"/>let mut _319: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _320: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _321: bool;<br align="left"/>let mut _322: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _323: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _324: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _325: i64;<br align="left"/>let mut _326: ();<br align="left"/>let _327: error::ErrorCode;<br align="left"/>let _328: ();<br align="left"/>let mut _329: &amp;ReErased str;<br align="left"/>let _330: &amp;ReErased str;<br align="left"/>let mut _331: &amp;ReErased std::string::String;<br align="left"/>let _332: &amp;ReErased std::string::String;<br align="left"/>let _333: std::string::String;<br align="left"/>let _334: std::string::String;<br align="left"/>let mut _335: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _336: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _337: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _338: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _339: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _340: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _341: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _342: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _343: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _344: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _345: &amp;ReErased error::ErrorCode;<br align="left"/>let _346: &amp;ReErased error::ErrorCode;<br align="left"/>let _347: ();<br align="left"/>let mut _348: &amp;ReErased str;<br align="left"/>let _349: &amp;ReErased str;<br align="left"/>let mut _350: &amp;ReErased std::string::String;<br align="left"/>let _351: &amp;ReErased std::string::String;<br align="left"/>let _352: std::string::String;<br align="left"/>let _353: std::string::String;<br align="left"/>let mut _354: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _355: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _356: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _357: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _358: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _359: error::ErrorCode;<br align="left"/>let mut _360: isize;<br align="left"/>let _361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _362: !;<br align="left"/>let mut _363: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _364: ();<br align="left"/>let _365: usize;<br align="left"/>let mut _366: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _367: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _368: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _369: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _370: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _371: u16;<br align="left"/>let mut _372: Closure(DefId(0:503 ~ drift[d311]::controller::orders::place_perp_order::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; std::result::Result&lt;usize, error::ErrorCode&gt;, []), (&amp;ReErased mut &amp;ReErased mut state::user::User, &amp;ReErased u16)]);<br align="left"/>let mut _373: &amp;ReErased mut &amp;ReErased mut state::user::User;<br align="left"/>let mut _374: &amp;ReErased u16;<br align="left"/>let mut _375: isize;<br align="left"/>let _376: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _377: !;<br align="left"/>let mut _378: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _379: usize;<br align="left"/>let _380: controller::position::PositionDirection;<br align="left"/>let _381: u64;<br align="left"/>let mut _382: (controller::position::PositionDirection, u64);<br align="left"/>let _383: ();<br align="left"/>let mut _384: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _385: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _386: bool;<br align="left"/>let mut _387: u64;<br align="left"/>let mut _388: u64;<br align="left"/>let mut _389: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _390: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _391: ();<br align="left"/>let _392: error::ErrorCode;<br align="left"/>let _393: ();<br align="left"/>let mut _394: &amp;ReErased str;<br align="left"/>let _395: &amp;ReErased str;<br align="left"/>let mut _396: &amp;ReErased std::string::String;<br align="left"/>let _397: &amp;ReErased std::string::String;<br align="left"/>let _398: std::string::String;<br align="left"/>let _399: std::string::String;<br align="left"/>let mut _400: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _401: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _402: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _403: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _404: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _405: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _406: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _407: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _408: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _409: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _410: &amp;ReErased error::ErrorCode;<br align="left"/>let _411: &amp;ReErased error::ErrorCode;<br align="left"/>let _412: ();<br align="left"/>let mut _413: &amp;ReErased str;<br align="left"/>let _414: &amp;ReErased str;<br align="left"/>let mut _415: &amp;ReErased std::string::String;<br align="left"/>let _416: &amp;ReErased std::string::String;<br align="left"/>let _417: std::string::String;<br align="left"/>let _418: std::string::String;<br align="left"/>let mut _419: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _420: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _421: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _422: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _423: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _424: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _425: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _426: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _427: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _428: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _429: &amp;ReErased u64;<br align="left"/>let _430: &amp;ReErased u64;<br align="left"/>let mut _431: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _432: &amp;ReErased u64;<br align="left"/>let _433: &amp;ReErased u64;<br align="left"/>let _434: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _435: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _436: error::ErrorCode;<br align="left"/>let mut _437: isize;<br align="left"/>let _438: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _439: !;<br align="left"/>let mut _440: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _441: ();<br align="left"/>let _442: u64;<br align="left"/>let mut _443: bool;<br align="left"/>let mut _444: u64;<br align="left"/>let mut _445: bool;<br align="left"/>let mut _446: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _447: bool;<br align="left"/>let mut _448: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _449: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _450: &amp;ReErased state::user::User;<br align="left"/>let mut _451: usize;<br align="left"/>let mut _452: u16;<br align="left"/>let mut _453: controller::position::PositionDirection;<br align="left"/>let mut _454: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _455: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _456: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _457: isize;<br align="left"/>let _458: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _459: !;<br align="left"/>let mut _460: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _461: u64;<br align="left"/>let mut _462: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _463: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _464: u64;<br align="left"/>let mut _465: u64;<br align="left"/>let mut _466: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _467: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _468: isize;<br align="left"/>let _469: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _470: !;<br align="left"/>let mut _471: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _472: u64;<br align="left"/>let _473: controller::position::PositionDirection;<br align="left"/>let mut _474: isize;<br align="left"/>let _475: controller::position::PositionDirection;<br align="left"/>let _476: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _477: usize;<br align="left"/>let mut _478: usize;<br align="left"/>let mut _479: bool;<br align="left"/>let mut _480: bool;<br align="left"/>let mut _481: i64;<br align="left"/>let mut _482: controller::position::PositionDirection;<br align="left"/>let mut _483: u64;<br align="left"/>let _484: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _485: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _486: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _487: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _488: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _489: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _490: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _491: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _492: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _493: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _494: isize;<br align="left"/>let _495: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _496: !;<br align="left"/>let mut _497: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _498: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _499: ();<br align="left"/>let mut _500: bool;<br align="left"/>let mut _501: &amp;ReErased state::order_params::PlaceOrderOptions;<br align="left"/>let _502: bool;<br align="left"/>let mut _503: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _504: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _505: &amp;ReErased mut state::order_params::OrderParams;<br align="left"/>let mut _506: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _507: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _508: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _509: i64;<br align="left"/>let mut _510: bool;<br align="left"/>let mut _511: &amp;ReErased state::order_params::PlaceOrderOptions;<br align="left"/>let mut _512: isize;<br align="left"/>let _513: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _514: !;<br align="left"/>let mut _515: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _516: bool;<br align="left"/>let _517: i64;<br align="left"/>let _518: i64;<br align="left"/>let _519: u8;<br align="left"/>let mut _520: (i64, i64, u8);<br align="left"/>let mut _521: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64, u8)&gt;;<br align="left"/>let mut _522: std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt;;<br align="left"/>let mut _523: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let _524: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _525: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _526: u64;<br align="left"/>let mut _527: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _528: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _529: u8;<br align="left"/>let mut _530: isize;<br align="left"/>let _531: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _532: !;<br align="left"/>let mut _533: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _534: (i64, i64, u8);<br align="left"/>let _535: i64;<br align="left"/>let mut _536: isize;<br align="left"/>let _537: i64;<br align="left"/>let mut _538: isize;<br align="left"/>let mut _539: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _540: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _541: i64;<br align="left"/>let mut _542: i64;<br align="left"/>let mut _543: i64;<br align="left"/>let mut _544: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _545: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _546: i64;<br align="left"/>let mut _547: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _548: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _549: u8;<br align="left"/>let mut _550: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u8&gt;;<br align="left"/>let mut _551: std::result::Result&lt;u8, error::ErrorCode&gt;;<br align="left"/>let mut _552: u8;<br align="left"/>let mut _553: isize;<br align="left"/>let _554: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _555: !;<br align="left"/>let mut _556: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _557: u8;<br align="left"/>let mut _558: isize;<br align="left"/>let _559: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _560: !;<br align="left"/>let mut _561: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _562: i64;<br align="left"/>let mut _563: isize;<br align="left"/>let _564: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _565: !;<br align="left"/>let mut _566: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _567: i64;<br align="left"/>let mut _568: isize;<br align="left"/>let _569: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _570: !;<br align="left"/>let mut _571: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _572: i64;<br align="left"/>let _573: ();<br align="left"/>let mut _574: bool;<br align="left"/>let mut _575: i64;<br align="left"/>let mut _576: bool;<br align="left"/>let mut _577: i64;<br align="left"/>let mut _578: i64;<br align="left"/>let mut _579: !;<br align="left"/>let _580: ();<br align="left"/>let mut _581: &amp;ReErased str;<br align="left"/>let _582: &amp;ReErased str;<br align="left"/>let mut _583: &amp;ReErased std::string::String;<br align="left"/>let _584: &amp;ReErased std::string::String;<br align="left"/>let _585: std::string::String;<br align="left"/>let _586: std::string::String;<br align="left"/>let mut _587: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _588: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _589: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _590: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _591: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _592: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _593: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _594: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _595: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _596: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _597: &amp;ReErased i64;<br align="left"/>let _598: &amp;ReErased i64;<br align="left"/>let mut _599: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _600: &amp;ReErased i64;<br align="left"/>let _601: &amp;ReErased i64;<br align="left"/>let mut _602: ();<br align="left"/>let _603: ();<br align="left"/>let mut _604: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _605: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _606: bool;<br align="left"/>let mut _607: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _608: &amp;ReErased state::user::MarketType;<br align="left"/>let _609: state::user::MarketType;<br align="left"/>let mut _610: ();<br align="left"/>let _611: error::ErrorCode;<br align="left"/>let _612: ();<br align="left"/>let mut _613: &amp;ReErased str;<br align="left"/>let _614: &amp;ReErased str;<br align="left"/>let mut _615: &amp;ReErased std::string::String;<br align="left"/>let _616: &amp;ReErased std::string::String;<br align="left"/>let _617: std::string::String;<br align="left"/>let _618: std::string::String;<br align="left"/>let mut _619: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _620: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _621: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _622: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _623: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _624: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _625: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _626: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _627: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _628: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _629: &amp;ReErased error::ErrorCode;<br align="left"/>let _630: &amp;ReErased error::ErrorCode;<br align="left"/>let _631: ();<br align="left"/>let mut _632: &amp;ReErased str;<br align="left"/>let _633: &amp;ReErased str;<br align="left"/>let mut _634: error::ErrorCode;<br align="left"/>let mut _635: isize;<br align="left"/>let _636: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _637: !;<br align="left"/>let mut _638: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _639: ();<br align="left"/>let mut _640: u8;<br align="left"/>let mut _641: u8;<br align="left"/>let mut _642: u8;<br align="left"/>let mut _643: bool;<br align="left"/>let mut _644: &amp;ReErased state::order_params::PlaceOrderOptions;<br align="left"/>let mut _645: state::user::OrderBitFlag;<br align="left"/>let _646: bool;<br align="left"/>let mut _647: bool;<br align="left"/>let mut _648: u8;<br align="left"/>let mut _649: u8;<br align="left"/>let mut _650: bool;<br align="left"/>let mut _651: bool;<br align="left"/>let mut _652: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _653: state::user::OrderBitFlag;<br align="left"/>let _654: state::user::Order;<br align="left"/>let mut _655: state::user::OrderStatus;<br align="left"/>let mut _656: state::user::OrderType;<br align="left"/>let mut _657: state::user::MarketType;<br align="left"/>let mut _658: u64;<br align="left"/>let mut _659: &amp;ReErased state::order_params::PlaceOrderOptions;<br align="left"/>let mut _660: u64;<br align="left"/>let mut _661: u32;<br align="left"/>let _662: u32;<br align="left"/>let mut _663: u32;<br align="left"/>let mut _664: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _665: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _666: u32;<br align="left"/>let mut _667: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _668: u8;<br align="left"/>let mut _669: u16;<br align="left"/>let mut _670: u64;<br align="left"/>let mut _671: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _672: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _673: u64;<br align="left"/>let mut _674: controller::position::PositionDirection;<br align="left"/>let mut _675: state::order_params::PostOnlyParam;<br align="left"/>let mut _676: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _677: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _678: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _679: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _680: isize;<br align="left"/>let _681: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _682: !;<br align="left"/>let mut _683: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _684: u64;<br align="left"/>let mut _685: controller::position::PositionDirection;<br align="left"/>let mut _686: u64;<br align="left"/>let mut _687: controller::position::PositionDirection;<br align="left"/>let mut _688: bool;<br align="left"/>let mut _689: u64;<br align="left"/>let mut _690: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _691: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _692: u64;<br align="left"/>let mut _693: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _694: u64;<br align="left"/>let mut _695: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _696: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _697: controller::position::PositionDirection;<br align="left"/>let mut _698: isize;<br align="left"/>let _699: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _700: !;<br align="left"/>let mut _701: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _702: u64;<br align="left"/>let mut _703: state::user::OrderTriggerCondition;<br align="left"/>let mut _704: bool;<br align="left"/>let mut _705: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _706: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _707: state::order_params::PostOnlyParam;<br align="left"/>let mut _708: i32;<br align="left"/>let mut _709: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _710: bool;<br align="left"/>let mut _711: &amp;ReErased state::order_params::OrderParams;<br align="left"/>let mut _712: i64;<br align="left"/>let mut _713: i64;<br align="left"/>let mut _714: u8;<br align="left"/>let mut _715: i64;<br align="left"/>let mut _716: u8;<br align="left"/>let mut _717: u64;<br align="left"/>let mut _718: u8;<br align="left"/>let mut _719: [u8; 1_usize];<br align="left"/>let _720: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _721: i64;<br align="left"/>let _722: ();<br align="left"/>let mut _723: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _724: &amp;ReErased state::user::Order;<br align="left"/>let _725: &amp;ReErased state::user::Order;<br align="left"/>let mut _726: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _727: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _728: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _729: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _730: u64;<br align="left"/>let mut _731: u32;<br align="left"/>let mut _732: isize;<br align="left"/>let mut _733: &amp;ReErased std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _734: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _735: bool;<br align="left"/>let mut _736: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _737: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _738: state::order_params::PostOnlyParam;<br align="left"/>let mut _739: !;<br align="left"/>let mut _740: ();<br align="left"/>let _741: error::ErrorCode;<br align="left"/>let mut _742: !;<br align="left"/>let mut _743: error::ErrorCode;<br align="left"/>let _744: bool;<br align="left"/>let mut _745: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _746: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _747: &amp;ReErased state::user::Order;<br align="left"/>let _748: &amp;ReErased state::user::Order;<br align="left"/>let mut _749: i64;<br align="left"/>let _750: usize;<br align="left"/>let mut _751: usize;<br align="left"/>let mut _752: bool;<br align="left"/>let mut _753: i64;<br align="left"/>let _754: usize;<br align="left"/>let mut _755: usize;<br align="left"/>let mut _756: bool;<br align="left"/>let mut _757: i64;<br align="left"/>let _758: usize;<br align="left"/>let mut _759: usize;<br align="left"/>let mut _760: bool;<br align="left"/>let mut _761: isize;<br align="left"/>let _762: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _763: !;<br align="left"/>let mut _764: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _765: bool;<br align="left"/>let _766: ();<br align="left"/>let mut _767: &amp;ReErased mut state::user::User;<br align="left"/>let mut _768: bool;<br align="left"/>let mut _769: &amp;ReErased state::user::Order;<br align="left"/>let mut _770: state::user::Order;<br align="left"/>let _771: usize;<br align="left"/>let mut _772: usize;<br align="left"/>let mut _773: bool;<br align="left"/>let _774: usize;<br align="left"/>let mut _775: usize;<br align="left"/>let mut _776: bool;<br align="left"/>let mut _777: (u8, bool);<br align="left"/>let _778: ();<br align="left"/>let mut _779: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _780: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _781: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _782: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _783: usize;<br align="left"/>let mut _784: usize;<br align="left"/>let mut _785: bool;<br align="left"/>let mut _786: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _787: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _788: u64;<br align="left"/>let mut _789: bool;<br align="left"/>let mut _790: &amp;ReErased state::user::Order;<br align="left"/>let mut _791: isize;<br align="left"/>let _792: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _793: !;<br align="left"/>let mut _794: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _795: ();<br align="left"/>let _796: ();<br align="left"/>let mut _797: &amp;ReErased mut state::order_params::PlaceOrderOptions;<br align="left"/>let mut _798: bool;<br align="left"/>let _799: ();<br align="left"/>let mut _800: bool;<br align="left"/>let mut _801: bool;<br align="left"/>let mut _802: &amp;ReErased state::order_params::PlaceOrderOptions;<br align="left"/>let _803: ();<br align="left"/>let mut _804: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _805: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _806: &amp;ReErased state::user::User;<br align="left"/>let mut _807: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _808: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _809: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _810: bool;<br align="left"/>let mut _811: isize;<br align="left"/>let _812: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _813: !;<br align="left"/>let mut _814: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _815: ();<br align="left"/>let _816: ();<br align="left"/>let mut _817: bool;<br align="left"/>let _818: ();<br align="left"/>let mut _819: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _820: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _821: &amp;ReErased state::user::Order;<br align="left"/>let _822: &amp;ReErased state::user::Order;<br align="left"/>let _823: usize;<br align="left"/>let mut _824: usize;<br align="left"/>let mut _825: bool;<br align="left"/>let mut _826: i64;<br align="left"/>let _827: usize;<br align="left"/>let mut _828: usize;<br align="left"/>let mut _829: bool;<br align="left"/>let mut _830: isize;<br align="left"/>let _831: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _832: !;<br align="left"/>let mut _833: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _834: ();<br align="left"/>let _835: u128;<br align="left"/>let mut _836: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _837: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _838: ();<br align="left"/>let mut _839: bool;<br align="left"/>let mut _840: u128;<br align="left"/>let mut _841: bool;<br align="left"/>let _842: u128;<br align="left"/>let mut _843: isize;<br align="left"/>let mut _844: i128;<br align="left"/>let mut _845: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _846: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _847: i128;<br align="left"/>let mut _848: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _849: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _850: i128;<br align="left"/>let mut _851: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _852: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _853: u64;<br align="left"/>let mut _854: isize;<br align="left"/>let _855: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _856: !;<br align="left"/>let mut _857: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _858: i128;<br align="left"/>let mut _859: isize;<br align="left"/>let _860: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _861: !;<br align="left"/>let mut _862: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _863: i128;<br align="left"/>let mut _864: i128;<br align="left"/>let mut _865: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _866: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _867: i128;<br align="left"/>let mut _868: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _869: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _870: i128;<br align="left"/>let mut _871: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _872: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _873: u64;<br align="left"/>let mut _874: isize;<br align="left"/>let _875: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _876: !;<br align="left"/>let mut _877: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _878: i128;<br align="left"/>let mut _879: isize;<br align="left"/>let _880: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _881: !;<br align="left"/>let mut _882: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _883: i128;<br align="left"/>let _884: ();<br align="left"/>let mut _885: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _886: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _887: bool;<br align="left"/>let mut _888: u128;<br align="left"/>let mut _889: u128;<br align="left"/>let mut _890: ();<br align="left"/>let _891: error::ErrorCode;<br align="left"/>let _892: ();<br align="left"/>let mut _893: &amp;ReErased str;<br align="left"/>let _894: &amp;ReErased str;<br align="left"/>let mut _895: &amp;ReErased std::string::String;<br align="left"/>let _896: &amp;ReErased std::string::String;<br align="left"/>let _897: std::string::String;<br align="left"/>let _898: std::string::String;<br align="left"/>let mut _899: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _900: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _901: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _902: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _903: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _904: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _905: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _906: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _907: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _908: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _909: &amp;ReErased error::ErrorCode;<br align="left"/>let _910: &amp;ReErased error::ErrorCode;<br align="left"/>let _911: ();<br align="left"/>let mut _912: &amp;ReErased str;<br align="left"/>let _913: &amp;ReErased str;<br align="left"/>let mut _914: &amp;ReErased std::string::String;<br align="left"/>let _915: &amp;ReErased std::string::String;<br align="left"/>let _916: std::string::String;<br align="left"/>let _917: std::string::String;<br align="left"/>let mut _918: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _919: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _920: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _921: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _922: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _923: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _924: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _925: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _926: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _927: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _928: &amp;ReErased u64;<br align="left"/>let _929: &amp;ReErased u64;<br align="left"/>let mut _930: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _931: &amp;ReErased u16;<br align="left"/>let _932: &amp;ReErased u16;<br align="left"/>let mut _933: error::ErrorCode;<br align="left"/>let mut _934: isize;<br align="left"/>let _935: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _936: !;<br align="left"/>let mut _937: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _938: ();<br align="left"/>let _939: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _940: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let _941: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let _942: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _943: (std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, std::option::Option&lt;state::user::Order&gt;, std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;, std::option::Option&lt;state::user::Order&gt;);<br align="left"/>let mut _944: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _945: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _946: &amp;ReErased state::user::Order;<br align="left"/>let _947: &amp;ReErased state::user::Order;<br align="left"/>let _948: state::events::OrderActionRecord;<br align="left"/>let mut _949: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::events::OrderActionRecord&gt;;<br align="left"/>let mut _950: std::result::Result&lt;state::events::OrderActionRecord, error::ErrorCode&gt;;<br align="left"/>let mut _951: i64;<br align="left"/>let mut _952: state::events::OrderAction;<br align="left"/>let mut _953: state::events::OrderActionExplanation;<br align="left"/>let mut _954: u16;<br align="left"/>let mut _955: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _956: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _957: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _958: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _959: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _960: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _961: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _962: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _963: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _964: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _965: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _966: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _967: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _968: std::option::Option&lt;state::user::Order&gt;;<br align="left"/>let mut _969: i64;<br align="left"/>let mut _970: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _971: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _972: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _973: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _974: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _975: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _976: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _977: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _978: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _979: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _980: isize;<br align="left"/>let _981: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _982: !;<br align="left"/>let mut _983: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _984: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _985: u8;<br align="left"/>let mut _986: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _987: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _988: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _989: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _990: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _991: isize;<br align="left"/>let _992: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _993: !;<br align="left"/>let mut _994: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _995: state::events::OrderActionRecord;<br align="left"/>let _996: ();<br align="left"/>let mut _997: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _998: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _999: state::events::OrderActionRecord;<br align="left"/>let mut _1000: isize;<br align="left"/>let _1001: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1002: !;<br align="left"/>let mut _1003: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1004: ();<br align="left"/>let _1005: state::events::OrderRecord;<br align="left"/>let mut _1006: i64;<br align="left"/>let mut _1007: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1008: state::user::Order;<br align="left"/>let _1009: usize;<br align="left"/>let mut _1010: usize;<br align="left"/>let mut _1011: bool;<br align="left"/>let _1012: ();<br align="left"/>let mut _1013: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1014: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1015: state::events::OrderRecord;<br align="left"/>let mut _1016: isize;<br align="left"/>let _1017: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1018: !;<br align="left"/>let mut _1019: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1020: ();<br align="left"/>let _1021: ();<br align="left"/>let mut _1022: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1023: u64;<br align="left"/>let mut _1024: ();<br align="left"/>let mut _1025: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1026: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1027: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _1028: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1029: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1030: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _1031: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1032: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _1033: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1034: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1035: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1036: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1037: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1038: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1039: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1040: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1041: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1042: isize;<br align="left"/>let mut _1043: isize;<br align="left"/>let mut _1044: isize;<br align="left"/>let mut _1045: isize;<br align="left"/>let mut _1046: isize;<br align="left"/>let mut _1047: isize;<br align="left"/>let mut _1048: isize;<br align="left"/>let mut _1049: isize;<br align="left"/>let mut _1050: isize;<br align="left"/>let mut _1051: isize;<br align="left"/>debug state =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug user_key =&gt; _3;<br align="left"/>debug perp_market_map =&gt; _4;<br align="left"/>debug spot_market_map =&gt; _5;<br align="left"/>debug oracle_map =&gt; _6;<br align="left"/>debug high_leverage_mode_config =&gt; _7;<br align="left"/>debug clock =&gt; _8;<br align="left"/>debug params =&gt; _9;<br align="left"/>debug options =&gt; _10;<br align="left"/>debug now =&gt; _11;<br align="left"/>debug slot =&gt; _12;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug error_code =&gt; _35;<br align="left"/>debug res =&gt; _42;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug config =&gt; _65;<br align="left"/>debug config =&gt; _66;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug error_code =&gt; _129;<br align="left"/>debug res =&gt; _136;<br align="left"/>debug residual =&gt; _154;<br align="left"/>debug val =&gt; _157;<br align="left"/>debug new_order_index =&gt; _158;<br align="left"/>debug residual =&gt; _169;<br align="left"/>debug val =&gt; _172;<br align="left"/>debug user_order_id_already_used =&gt; _176;<br align="left"/>debug res =&gt; _192;<br align="left"/>debug market_index =&gt; _206;<br align="left"/>debug market =&gt; _207;<br align="left"/>debug residual =&gt; _215;<br align="left"/>debug val =&gt; _218;<br align="left"/>debug force_reduce_only =&gt; _219;<br align="left"/>debug residual =&gt; _226;<br align="left"/>debug val =&gt; _229;<br align="left"/>debug error_code =&gt; _238;<br align="left"/>debug res =&gt; _245;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>debug error_code =&gt; _273;<br align="left"/>debug res =&gt; _280;<br align="left"/>debug res =&gt; _299;<br align="left"/>debug residual =&gt; _314;<br align="left"/>debug val =&gt; _317;<br align="left"/>debug error_code =&gt; _327;<br align="left"/>debug res =&gt; _334;<br align="left"/>debug res =&gt; _353;<br align="left"/>debug residual =&gt; _361;<br align="left"/>debug val =&gt; _364;<br align="left"/>debug position_index =&gt; _365;<br align="left"/>debug residual =&gt; _376;<br align="left"/>debug val =&gt; _379;<br align="left"/>debug existing_position_direction =&gt; _380;<br align="left"/>debug order_base_asset_amount =&gt; _381;<br align="left"/>debug error_code =&gt; _392;<br align="left"/>debug res =&gt; _399;<br align="left"/>debug res =&gt; _418;<br align="left"/>debug residual =&gt; _438;<br align="left"/>debug val =&gt; _441;<br align="left"/>debug base_asset_amount =&gt; _442;<br align="left"/>debug residual =&gt; _458;<br align="left"/>debug val =&gt; _461;<br align="left"/>debug residual =&gt; _469;<br align="left"/>debug val =&gt; _472;<br align="left"/>debug existing_position_direction =&gt; _473;<br align="left"/>debug existing_position_direction_override =&gt; _475;<br align="left"/>debug market_position =&gt; _476;<br align="left"/>debug oracle_price_data =&gt; _484;<br align="left"/>debug residual =&gt; _495;<br align="left"/>debug val =&gt; _498;<br align="left"/>debug residual =&gt; _513;<br align="left"/>debug val =&gt; _516;<br align="left"/>debug auction_start_price =&gt; _517;<br align="left"/>debug auction_end_price =&gt; _518;<br align="left"/>debug auction_duration =&gt; _519;<br align="left"/>debug residual =&gt; _531;<br align="left"/>debug val =&gt; _534;<br align="left"/>debug max_ts =&gt; _535;<br align="left"/>debug max_ts =&gt; _537;<br align="left"/>debug residual =&gt; _554;<br align="left"/>debug val =&gt; _557;<br align="left"/>debug residual =&gt; _559;<br align="left"/>debug val =&gt; _562;<br align="left"/>debug residual =&gt; _564;<br align="left"/>debug val =&gt; _567;<br align="left"/>debug residual =&gt; _569;<br align="left"/>debug val =&gt; _572;<br align="left"/>debug res =&gt; _586;<br align="left"/>debug error_code =&gt; _611;<br align="left"/>debug res =&gt; _618;<br align="left"/>debug residual =&gt; _636;<br align="left"/>debug val =&gt; _639;<br align="left"/>debug bit_flags =&gt; _640;<br align="left"/>debug reduce_only =&gt; _646;<br align="left"/>debug new_order =&gt; _654;<br align="left"/>debug current_id =&gt; _662;<br align="left"/>debug residual =&gt; _681;<br align="left"/>debug val =&gt; _684;<br align="left"/>debug residual =&gt; _699;<br align="left"/>debug val =&gt; _702;<br align="left"/>debug valid_oracle_price =&gt; _720;<br align="left"/>debug err =&gt; _741;<br align="left"/>debug risk_increasing =&gt; _744;<br align="left"/>debug residual =&gt; _762;<br align="left"/>debug val =&gt; _765;<br align="left"/>debug residual =&gt; _792;<br align="left"/>debug val =&gt; _795;<br align="left"/>debug residual =&gt; _812;<br align="left"/>debug val =&gt; _815;<br align="left"/>debug residual =&gt; _831;<br align="left"/>debug val =&gt; _834;<br align="left"/>debug max_oi =&gt; _835;<br align="left"/>debug oi_plus_order =&gt; _842;<br align="left"/>debug residual =&gt; _855;<br align="left"/>debug val =&gt; _858;<br align="left"/>debug residual =&gt; _860;<br align="left"/>debug val =&gt; _863;<br align="left"/>debug residual =&gt; _875;<br align="left"/>debug val =&gt; _878;<br align="left"/>debug residual =&gt; _880;<br align="left"/>debug val =&gt; _883;<br align="left"/>debug error_code =&gt; _891;<br align="left"/>debug res =&gt; _898;<br align="left"/>debug res =&gt; _917;<br align="left"/>debug residual =&gt; _935;<br align="left"/>debug val =&gt; _938;<br align="left"/>debug taker =&gt; _939;<br align="left"/>debug taker_order =&gt; _940;<br align="left"/>debug maker =&gt; _941;<br align="left"/>debug maker_order =&gt; _942;<br align="left"/>debug order_action_record =&gt; _948;<br align="left"/>debug residual =&gt; _981;<br align="left"/>debug val =&gt; _984;<br align="left"/>debug residual =&gt; _992;<br align="left"/>debug val =&gt; _995;<br align="left"/>debug residual =&gt; _1001;<br align="left"/>debug val =&gt; _1004;<br align="left"/>debug order_record =&gt; _1005;<br align="left"/>debug residual =&gt; _1017;<br align="left"/>debug val =&gt; _1020;<br align="left"/>>;
    bb0__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((*_8).4: i64)<br/>StorageLive(_12)<br/>_12 = ((*_8).0: u64)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_10<br/></td></tr><tr><td align="left">_14 = PlaceOrderOptions::is_liquidation(move _15)</td></tr></table>>];
    bb1__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb2__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut (*_2)<br/>StorageLive(_20)<br/>_20 = &amp;(*_4)<br/>StorageLive(_21)<br/>_21 = &amp;(*_5)<br/>StorageLive(_22)<br/>_22 = &amp;mut (*_6)<br/>StorageLive(_23)<br/>_23 = ((*_1).11: u32)<br/></td></tr><tr><td align="left">_18 = validate_user_not_being_liquidated(move _19, move _20, move _21, move _22, move _23)</td></tr></table>>];
    bb4__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb5__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb6__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Continue).0: ())<br/>_16 = _28<br/>StorageDead(_28)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb9__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;(*_2)<br/></td></tr><tr><td align="left">_32 = User::is_bankrupt(move _33)</td></tr></table>>];
    bb11__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb12__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_35)<br/>_35 = error::ErrorCode::UserBankrupt<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_1041 = const _<br/>_46 = &amp;(*_1041)<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_35<br/>_53 = &amp;(*_54)<br/></td></tr><tr><td align="left">_52 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _53)</td></tr></table>>];
    bb13__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_34)<br/>_34 = ()<br/>_31 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _34)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = [move _52]<br/>StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/>_48 = move _49 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_43 = Arguments::&lt;'_&gt;::new_v1(move _44, move _48)</td></tr></table>>];
    bb15__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = format(move _43)</td></tr></table>>];
    bb16__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>_41 = move _42<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = &lt;String as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb17__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_37 = &amp;(*_38)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_36 = solana_program::log::sol_log(move _37)</td></tr></table>>];
    bb18__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb19__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_55)<br/>_55 = _35<br/>_31 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _55)<br/>StorageDead(_55)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb21__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_56 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb22__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_30 as Continue).0: ())<br/>_29 = _60<br/>StorageDead(_60)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_9<br/></td></tr><tr><td align="left">_62 = order_params::OrderParams::is_update_high_leverage_mode(move _63)</td></tr></table>>];
    bb23__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb24__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb26__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_64 = discriminant((*_7))<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb27__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = &amp;(((*_7) as Some).0: anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_65)<br/></td></tr><tr><td align="left">_69 = anchor_lang::prelude::AccountLoader::&lt;'_, HighLeverageModeConfig&gt;::load_mut(move _70)</td></tr></table>>];
    bb28__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>_71 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;RefMut&lt;'_, HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _69, move _71)</td></tr></table>>];
    bb29__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;RefMut&lt;'_, HighLeverageModeConfig&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb30__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_72 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb31__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_67 as Continue).0: std::cell::RefMut&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/>_66 = move _76<br/>StorageDead(_76)<br/>_1044 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_66<br/></td></tr><tr><td align="left">_79 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as Deref&gt;::deref(move _80)</td></tr></table>>];
    bb32__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb33__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>_1042 = discriminant(_67)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_78 = &amp;(*_79)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_77 = HighLeverageModeConfig::is_full(move _78)</td></tr></table>>];
    bb35__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb36__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_79)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;_9<br/></td></tr><tr><td align="left">_81 = order_params::OrderParams::is_max_leverage_order(move _82)</td></tr></table>>];
    bb37__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb39__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;mut _66<br/></td></tr><tr><td align="left">_87 = &lt;RefMut&lt;'_, HighLeverageModeConfig&gt; as DerefMut&gt;::deref_mut(move _88)</td></tr></table>>];
    bb40__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_86 = &amp;mut (*_87)<br/>StorageDead(_88)<br/>StorageLive(_89)<br/>_89 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_85 = HighLeverageModeConfig::enable_high_leverage(move _86, move _89)</td></tr></table>>];
    bb41__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb42__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_90 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb43__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_84 as Continue).0: ())<br/>_83 = _94<br/>StorageDead(_94)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>_61 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb45__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb46__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = const &quot;high leverage mode config is full&quot;<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = solana_program::log::sol_log(move _96)</td></tr></table>>];
    bb47__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>_61 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb49__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = const &quot;high leverage mode config not found&quot;<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = solana_program::log::sol_log(move _100)</td></tr></table>>];
    bb51__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageLive(_102)<br/>_102 = error::ErrorCode::InvalidOrder<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _102)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_61 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = (_10.1: bool)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb54__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;mut (*_2)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_3<br/>_109 = &amp;(*_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_4)<br/>StorageLive(_112)<br/>_112 = &amp;(*_5)<br/>StorageLive(_113)<br/>_113 = &amp;mut (*_6)<br/>StorageLive(_114)<br/>_114 = _11<br/>StorageLive(_115)<br/>_115 = _12<br/></td></tr><tr><td align="left">_107 = expire_orders(move _108, move _109, move _111, move _112, move _113, move _114, move _115)</td></tr></table>>];
    bb55__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb56__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_116 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb57__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_106 as Continue).0: ())<br/>_105 = _120<br/>StorageDead(_120)<br/>StorageDead(_110)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>_103 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb59__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_110)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_103 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;(*_2)<br/></td></tr><tr><td align="left">_122 = User::is_reduce_only(move _123)</td></tr></table>>];
    bb62__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb63__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = (_9.7: bool)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb64__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ()<br/>_126 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _128)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = error::ErrorCode::UserReduceOnly<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_1040 = const _<br/>_140 = &amp;(*_1040)<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;_129<br/>_147 = &amp;(*_148)<br/></td></tr><tr><td align="left">_146 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _147)</td></tr></table>>];
    bb66__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_145 = [move _146]<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">_137 = Arguments::&lt;'_&gt;::new_v1(move _138, move _142)</td></tr></table>>];
    bb67__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = format(move _137)</td></tr></table>>];
    bb68__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_140)<br/>_135 = move _136<br/>StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;String as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb69__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_131 = &amp;(*_132)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_130 = solana_program::log::sol_log(move _131)</td></tr></table>>];
    bb70__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb71__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = const &quot;order must be reduce only&quot;<br/>_150 = &amp;(*_151)<br/></td></tr><tr><td align="left">_149 = solana_program::log::sol_log(move _150)</td></tr></table>>];
    bb72__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageLive(_152)<br/>_152 = _129<br/>_126 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _152)<br/>StorageDead(_152)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb74__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_153 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb75__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_125 as Continue).0: ())<br/>_124 = _157<br/>StorageDead(_157)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>_121 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_156)<br/>_156 = _154<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _156)</td></tr></table>>];
    bb77__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_121 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;((*_2).5: [state::user::Order; 32])<br/>_164 = move _165 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_163 = core::slice::&lt;impl [Order]&gt;::iter(move _164)</td></tr></table>>];
    bb80__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_162 = &amp;mut _163<br/>StorageDead(_164)<br/>StorageLive(_166)<br/>_166 = {closure@programs/drift/src/controller/orders.rs:161:19: 161:26}<br/></td></tr><tr><td align="left">_161 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/controller/orders.rs:161:19: 161:26}&gt;(move _162, move _166)</td></tr></table>>];
    bb81__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_162)<br/>StorageLive(_167)<br/>_167 = error::ErrorCode::MaxNumberOfOrders<br/></td></tr><tr><td align="left">_160 = Option::&lt;usize&gt;::ok_or::&lt;error::ErrorCode&gt;(move _161, move _167)</td></tr></table>>];
    bb82__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_159 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _160)</td></tr></table>>];
    bb83__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_168 = discriminant(_159)<br/></td></tr><tr><td align="left">switchInt(move _168)</td></tr></table>>];
    bb84__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_159 as Continue).0: usize)<br/>_158 = _172<br/>StorageDead(_172)<br/>StorageDead(_163)<br/>StorageDead(_159)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = (_9.3: u8)<br/>_174 = Gt(move _175, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _174)</td></tr></table>>];
    bb85__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_159 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_171)<br/>_171 = _169<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _171)</td></tr></table>>];
    bb86__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_169)<br/>StorageDead(_163)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;((*_2).5: [state::user::Order; 32])<br/>_179 = move _180 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = core::slice::&lt;impl [Order]&gt;::iter(move _179)</td></tr></table>>];
    bb88__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_173 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_177 = &amp;mut _178<br/>StorageDead(_179)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = &amp;_9<br/>_181 = {closure@programs/drift/src/controller/orders.rs:168:23: 168:30} { params: move _182 }<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_176 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/controller/orders.rs:168:23: 168:30}&gt;(move _177, move _181)</td></tr></table>>];
    bb90__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_177)<br/>StorageDead(_178)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = &amp;_176<br/></td></tr><tr><td align="left">_183 = Option::&lt;usize&gt;::is_some(move _184)</td></tr></table>>];
    bb91__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb92__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_1025 = const _<br/>_196 = &amp;(*_1025)<br/>_195 = &amp;(*_196)<br/>_194 = move _195 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_195)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = &amp;(_9.3: u8)<br/>_203 = &amp;(*_204)<br/></td></tr><tr><td align="left">_202 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _203)</td></tr></table>>];
    bb93__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>_201 = [move _202]<br/>StorageDead(_202)<br/>_200 = &amp;_201<br/>_199 = &amp;(*_200)<br/>_198 = move _199 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">_193 = Arguments::&lt;'_&gt;::new_v1(move _194, move _198)</td></tr></table>>];
    bb94__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_192 = format(move _193)</td></tr></table>>];
    bb95__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_204)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_196)<br/>_191 = move _192<br/>StorageDead(_192)<br/>_190 = &amp;_191<br/>_189 = &amp;(*_190)<br/></td></tr><tr><td align="left">_188 = &lt;String as Deref&gt;::deref(move _189)</td></tr></table>>];
    bb96__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_187 = &amp;(*_188)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_186 = solana_program::log::sol_log(move _187)</td></tr></table>>];
    bb97__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/></td></tr><tr><td align="left">drop(_191)</td></tr></table>>];
    bb98__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageLive(_205)<br/>_205 = error::ErrorCode::UserOrderIdAlreadyInUse<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _205)<br/>StorageDead(_205)<br/>StorageDead(_183)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>_173 = const ()<br/>StorageDead(_183)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/>StorageLive(_206)<br/>_206 = (_9.6: u16)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;(*_4)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;_206<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_210 = PerpMarketMap::&lt;'_&gt;::get_ref(move _211, move _212)</td></tr></table>>];
    bb101__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">_209 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _210)</td></tr></table>>];
    bb102__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_214 = discriminant(_209)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb103__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = move ((_209 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_208 = move _218<br/>StorageDead(_218)<br/>_207 = &amp;_208<br/>_1048 = discriminant(_209)<br/>StorageDead(_213)<br/>StorageDead(_209)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;(*_207)<br/></td></tr><tr><td align="left">_223 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _224)</td></tr></table>>];
    bb104__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_209 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_217)<br/>_217 = _215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _217)</td></tr></table>>];
    bb105__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_215)<br/>_1046 = discriminant(_209)<br/>StorageDead(_213)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_222 = &amp;(*_223)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_221 = PerpMarket::is_reduce_only(move _222)</td></tr></table>>];
    bb107__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/></td></tr><tr><td align="left">_220 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _221)</td></tr></table>>];
    bb108__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_225 = discriminant(_220)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb109__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_220 as Continue).0: bool)<br/>_219 = _229<br/>StorageDead(_229)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;(*_207)<br/></td></tr><tr><td align="left">_234 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _235)</td></tr></table>>];
    bb110__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_220 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_228)<br/>_228 = _226<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _228)</td></tr></table>>];
    bb111__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_236 = discriminant(((*_234).22: state::perp_market::MarketStatus))<br/></td></tr><tr><td align="left">switchInt(move _236)</td></tr></table>>];
    bb113__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">_233 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_233 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb116__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageLive(_237)<br/>_237 = ()<br/>_232 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _237)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageLive(_238)<br/>_238 = error::ErrorCode::MarketBeingInitialized<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_1039 = const _<br/>_249 = &amp;(*_1039)<br/>_248 = &amp;(*_249)<br/>_247 = move _248 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_248)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;_238<br/>_256 = &amp;(*_257)<br/></td></tr><tr><td align="left">_255 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _256)</td></tr></table>>];
    bb118__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_254 = [move _255]<br/>StorageDead(_255)<br/>_253 = &amp;_254<br/>_252 = &amp;(*_253)<br/>_251 = move _252 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_246 = Arguments::&lt;'_&gt;::new_v1(move _247, move _251)</td></tr></table>>];
    bb119__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_245 = format(move _246)</td></tr></table>>];
    bb120__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_257)<br/>StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>_244 = move _245<br/>StorageDead(_245)<br/>_243 = &amp;_244<br/>_242 = &amp;(*_243)<br/></td></tr><tr><td align="left">_241 = &lt;String as Deref&gt;::deref(move _242)</td></tr></table>>];
    bb121__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_240 = &amp;(*_241)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">_239 = solana_program::log::sol_log(move _240)</td></tr></table>>];
    bb122__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/></td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb123__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/>StorageDead(_241)<br/>StorageDead(_239)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_260 = const &quot;Market is being initialized&quot;<br/>_259 = &amp;(*_260)<br/></td></tr><tr><td align="left">_258 = solana_program::log::sol_log(move _259)</td></tr></table>>];
    bb124__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageLive(_261)<br/>_261 = _238<br/>_232 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _261)<br/>StorageDead(_261)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/></td></tr><tr><td align="left">_231 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _232)</td></tr></table>>];
    bb126__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_262 = discriminant(_231)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb127__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_231 as Continue).0: ())<br/>_230 = _266<br/>StorageDead(_266)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = ((*_2).27: u8)<br/>_270 = Eq(move _271, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _270)</td></tr></table>>];
    bb128__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_231 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb129__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageLive(_272)<br/>_272 = ()<br/>_269 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _272)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageLive(_273)<br/>_273 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_1038 = const _<br/>_284 = &amp;(*_1038)<br/>_283 = &amp;(*_284)<br/>_282 = move _283 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_283)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_292 = &amp;_273<br/>_291 = &amp;(*_292)<br/></td></tr><tr><td align="left">_290 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _291)</td></tr></table>>];
    bb132__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>_289 = [move _290]<br/>StorageDead(_290)<br/>_288 = &amp;_289<br/>_287 = &amp;(*_288)<br/>_286 = move _287 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">_281 = Arguments::&lt;'_&gt;::new_v1(move _282, move _286)</td></tr></table>>];
    bb133__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">_280 = format(move _281)</td></tr></table>>];
    bb134__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_284)<br/>_279 = move _280<br/>StorageDead(_280)<br/>_278 = &amp;_279<br/>_277 = &amp;(*_278)<br/></td></tr><tr><td align="left">_276 = &lt;String as Deref&gt;::deref(move _277)</td></tr></table>>];
    bb135__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">_275 = &amp;(*_276)<br/>StorageDead(_277)<br/></td></tr><tr><td align="left">_274 = solana_program::log::sol_log(move _275)</td></tr></table>>];
    bb136__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/></td></tr><tr><td align="left">drop(_279)</td></tr></table>>];
    bb137__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_1037 = const _<br/>_303 = &amp;(*_1037)<br/>_302 = &amp;(*_303)<br/>_301 = move _302 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_302)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_311 = &amp;((*_2).27: u8)<br/>_310 = &amp;(*_311)<br/></td></tr><tr><td align="left">_309 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _310)</td></tr></table>>];
    bb138__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>_308 = [move _309]<br/>StorageDead(_309)<br/>_307 = &amp;_308<br/>_306 = &amp;(*_307)<br/>_305 = move _306 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_300 = Arguments::&lt;'_&gt;::new_v1(move _301, move _305)</td></tr></table>>];
    bb139__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">_299 = format(move _300)</td></tr></table>>];
    bb140__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_311)<br/>StorageDead(_308)<br/>StorageDead(_307)<br/>StorageDead(_303)<br/>_298 = move _299<br/>StorageDead(_299)<br/>_297 = &amp;_298<br/>_296 = &amp;(*_297)<br/></td></tr><tr><td align="left">_295 = &lt;String as Deref&gt;::deref(move _296)</td></tr></table>>];
    bb141__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">_294 = &amp;(*_295)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">_293 = solana_program::log::sol_log(move _294)</td></tr></table>>];
    bb142__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/></td></tr><tr><td align="left">drop(_298)</td></tr></table>>];
    bb143__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageLive(_312)<br/>_312 = _273<br/>_269 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _312)<br/>StorageDead(_312)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/></td></tr><tr><td align="left">_268 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _269)</td></tr></table>>];
    bb145__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_313 = discriminant(_268)<br/></td></tr><tr><td align="left">switchInt(move _313)</td></tr></table>>];
    bb146__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_317)<br/>_317 = ((_268 as Continue).0: ())<br/>_267 = _317<br/>StorageDead(_317)<br/>StorageDead(_268)<br/>StorageDead(_267)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>_324 = &amp;(*_207)<br/></td></tr><tr><td align="left">_323 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _324)</td></tr></table>>];
    bb147__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_314)<br/>_314 = ((_268 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_316)<br/>_316 = _314<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _316)</td></tr></table>>];
    bb148__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_314)<br/>StorageDead(_268)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">_322 = &amp;(*_323)<br/>StorageDead(_324)<br/>StorageLive(_325)<br/>_325 = _11<br/></td></tr><tr><td align="left">_321 = PerpMarket::is_in_settlement(move _322, move _325)</td></tr></table>>];
    bb150__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left">switchInt(move _321)</td></tr></table>>];
    bb151__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_322)<br/>StorageDead(_323)<br/>StorageLive(_327)<br/>_327 = error::ErrorCode::MarketPlaceOrderPaused<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_1036 = const _<br/>_338 = &amp;(*_1036)<br/>_337 = &amp;(*_338)<br/>_336 = move _337 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_337)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = &amp;_327<br/>_345 = &amp;(*_346)<br/></td></tr><tr><td align="left">_344 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _345)</td></tr></table>>];
    bb152__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>StorageDead(_322)<br/>StorageDead(_323)<br/>StorageLive(_326)<br/>_326 = ()<br/>_320 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _326)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_343 = [move _344]<br/>StorageDead(_344)<br/>_342 = &amp;_343<br/>_341 = &amp;(*_342)<br/>_340 = move _341 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">_335 = Arguments::&lt;'_&gt;::new_v1(move _336, move _340)</td></tr></table>>];
    bb154__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">_334 = format(move _335)</td></tr></table>>];
    bb155__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_338)<br/>_333 = move _334<br/>StorageDead(_334)<br/>_332 = &amp;_333<br/>_331 = &amp;(*_332)<br/></td></tr><tr><td align="left">_330 = &lt;String as Deref&gt;::deref(move _331)</td></tr></table>>];
    bb156__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">_329 = &amp;(*_330)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_328 = solana_program::log::sol_log(move _329)</td></tr></table>>];
    bb157__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">drop(_333)</td></tr></table>>];
    bb158__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_328)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_1035 = const _<br/>_357 = &amp;(*_1035)<br/>_356 = &amp;(*_357)<br/>_355 = move _356 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_356)<br/></td></tr><tr><td align="left">_354 = Arguments::&lt;'_&gt;::new_const(move _355)</td></tr></table>>];
    bb159__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/></td></tr><tr><td align="left">_353 = format(move _354)</td></tr></table>>];
    bb160__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>StorageDead(_357)<br/>_352 = move _353<br/>StorageDead(_353)<br/>_351 = &amp;_352<br/>_350 = &amp;(*_351)<br/></td></tr><tr><td align="left">_349 = &lt;String as Deref&gt;::deref(move _350)</td></tr></table>>];
    bb161__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_348 = &amp;(*_349)<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">_347 = solana_program::log::sol_log(move _348)</td></tr></table>>];
    bb162__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/></td></tr><tr><td align="left">drop(_352)</td></tr></table>>];
    bb163__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_347)<br/>StorageLive(_359)<br/>_359 = _327<br/>_320 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _359)<br/>StorageDead(_359)<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/></td></tr><tr><td align="left">_319 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _320)</td></tr></table>>];
    bb165__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>_360 = discriminant(_319)<br/></td></tr><tr><td align="left">switchInt(move _360)</td></tr></table>>];
    bb166__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_364)<br/>_364 = ((_319 as Continue).0: ())<br/>_318 = _364<br/>StorageDead(_364)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_370 = &amp;((*_2).4: [state::user::PerpPosition; 8])<br/>_369 = &amp;(*_370)<br/>StorageLive(_371)<br/>_371 = _206<br/></td></tr><tr><td align="left">_368 = get_position_index(move _369, move _371)</td></tr></table>>];
    bb167__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_361)<br/>_361 = ((_319 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_363)<br/>_363 = _361<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _363)</td></tr></table>>];
    bb168__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>StorageDead(_369)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>_373 = &amp;mut _2<br/>StorageLive(_374)<br/>_374 = &amp;_206<br/>_372 = {closure@programs/drift/src/controller/orders.rs:200:18: 200:21} { user: move _373, market_index: move _374 }<br/>StorageDead(_374)<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">_367 = std::result::Result::&lt;usize, error::ErrorCode&gt;::or_else::&lt;error::ErrorCode, {closure@programs/drift/src/controller/orders.rs:200:18: 200:21}&gt;(move _368, move _372)</td></tr></table>>];
    bb170__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">_366 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _367)</td></tr></table>>];
    bb171__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>_375 = discriminant(_366)<br/></td></tr><tr><td align="left">switchInt(move _375)</td></tr></table>>];
    bb172__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_379)<br/>_379 = ((_366 as Continue).0: usize)<br/>_365 = _379<br/>StorageDead(_379)<br/>StorageDead(_370)<br/>StorageDead(_366)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = (_9.4: u64)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>_390 = &amp;(*_207)<br/></td></tr><tr><td align="left">_389 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _390)</td></tr></table>>];
    bb173__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_376)<br/>_376 = ((_366 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_378)<br/>_378 = _376<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _378)</td></tr></table>>];
    bb174__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_376)<br/>StorageDead(_370)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>_388 = (((*_389).1: state::perp_market::AMM).52: u64)<br/>_386 = Ge(move _387, move _388)<br/></td></tr><tr><td align="left">switchInt(move _386)</td></tr></table>>];
    bb176__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>StorageLive(_391)<br/>_391 = ()<br/>_385 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _391)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>StorageLive(_392)<br/>_392 = error::ErrorCode::OrderAmountTooSmall<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>_1034 = const _<br/>_403 = &amp;(*_1034)<br/>_402 = &amp;(*_403)<br/>_401 = move _402 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_402)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>_411 = &amp;_392<br/>_410 = &amp;(*_411)<br/></td></tr><tr><td align="left">_409 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _410)</td></tr></table>>];
    bb178__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>_408 = [move _409]<br/>StorageDead(_409)<br/>_407 = &amp;_408<br/>_406 = &amp;(*_407)<br/>_405 = move _406 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">_400 = Arguments::&lt;'_&gt;::new_v1(move _401, move _405)</td></tr></table>>];
    bb179__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_401)<br/></td></tr><tr><td align="left">_399 = format(move _400)</td></tr></table>>];
    bb180__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_411)<br/>StorageDead(_408)<br/>StorageDead(_407)<br/>StorageDead(_403)<br/>_398 = move _399<br/>StorageDead(_399)<br/>_397 = &amp;_398<br/>_396 = &amp;(*_397)<br/></td></tr><tr><td align="left">_395 = &lt;String as Deref&gt;::deref(move _396)</td></tr></table>>];
    bb181__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">_394 = &amp;(*_395)<br/>StorageDead(_396)<br/></td></tr><tr><td align="left">_393 = solana_program::log::sol_log(move _394)</td></tr></table>>];
    bb182__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/></td></tr><tr><td align="left">drop(_398)</td></tr></table>>];
    bb183__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_397)<br/>StorageDead(_395)<br/>StorageDead(_393)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>_1033 = const _<br/>_422 = &amp;(*_1033)<br/>_421 = &amp;(*_422)<br/>_420 = move _421 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_421)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>_430 = &amp;(_9.4: u64)<br/>_429 = &amp;(*_430)<br/></td></tr><tr><td align="left">_428 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _429)</td></tr></table>>];
    bb184__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>_435 = &amp;(*_207)<br/></td></tr><tr><td align="left">_434 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _435)</td></tr></table>>];
    bb185__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_433 = &amp;(((*_434).1: state::perp_market::AMM).52: u64)<br/>_432 = &amp;(*_433)<br/></td></tr><tr><td align="left">_431 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _432)</td></tr></table>>];
    bb186__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>_427 = [move _428, move _431]<br/>StorageDead(_431)<br/>StorageDead(_428)<br/>_426 = &amp;_427<br/>_425 = &amp;(*_426)<br/>_424 = move _425 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_425)<br/></td></tr><tr><td align="left">_419 = Arguments::&lt;'_&gt;::new_v1(move _420, move _424)</td></tr></table>>];
    bb187__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_420)<br/></td></tr><tr><td align="left">_418 = format(move _419)</td></tr></table>>];
    bb188__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_434)<br/>StorageDead(_433)<br/>StorageDead(_430)<br/>StorageDead(_427)<br/>StorageDead(_426)<br/>StorageDead(_422)<br/>_417 = move _418<br/>StorageDead(_418)<br/>_416 = &amp;_417<br/>_415 = &amp;(*_416)<br/></td></tr><tr><td align="left">_414 = &lt;String as Deref&gt;::deref(move _415)</td></tr></table>>];
    bb189__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">_413 = &amp;(*_414)<br/>StorageDead(_415)<br/></td></tr><tr><td align="left">_412 = solana_program::log::sol_log(move _413)</td></tr></table>>];
    bb190__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/></td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb191__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_414)<br/>StorageDead(_412)<br/>StorageLive(_436)<br/>_436 = _392<br/>_385 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _436)<br/>StorageDead(_436)<br/>StorageDead(_392)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/></td></tr><tr><td align="left">_384 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _385)</td></tr></table>>];
    bb193__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>_437 = discriminant(_384)<br/></td></tr><tr><td align="left">switchInt(move _437)</td></tr></table>>];
    bb194__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_441)<br/>_441 = ((_384 as Continue).0: ())<br/>_383 = _441<br/>StorageDead(_441)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>_444 = (_9.4: u64)<br/>_443 = Eq(move _444, const _)<br/></td></tr><tr><td align="left">switchInt(move _443)</td></tr></table>>];
    bb195__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_438)<br/>_438 = ((_384 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_440)<br/>_440 = _438<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _440)</td></tr></table>>];
    bb196__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_438)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>_446 = &amp;_9<br/></td></tr><tr><td align="left">_445 = order_params::OrderParams::is_trigger_order(move _446)</td></tr></table>>];
    bb198__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left">switchInt(move _445)</td></tr></table>>];
    bb200__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/>StorageLive(_447)<br/>_447 = (_9.7: bool)<br/></td></tr><tr><td align="left">switchInt(move _447)</td></tr></table>>];
    bb201__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>_450 = &amp;(*_2)<br/>StorageLive(_451)<br/>_451 = _365<br/>StorageLive(_452)<br/>_452 = (_9.6: u16)<br/>StorageLive(_453)<br/>_453 = (_9.2: controller::position::PositionDirection)<br/>StorageLive(_454)<br/>_454 = &amp;(*_4)<br/>StorageLive(_455)<br/>_455 = &amp;(*_5)<br/>StorageLive(_456)<br/>_456 = &amp;mut (*_6)<br/></td></tr><tr><td align="left">_449 = math::orders::calculate_max_perp_order_size(move _450, move _451, move _452, move _453, move _454, move _455, move _456)</td></tr></table>>];
    bb203__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_455)<br/>StorageDead(_454)<br/>StorageDead(_453)<br/>StorageDead(_452)<br/>StorageDead(_451)<br/>StorageDead(_450)<br/></td></tr><tr><td align="left">_448 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _449)</td></tr></table>>];
    bb204__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>_457 = discriminant(_448)<br/></td></tr><tr><td align="left">switchInt(move _457)</td></tr></table>>];
    bb205__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_461)<br/>_461 = ((_448 as Continue).0: u64)<br/>_442 = _461<br/>StorageDead(_461)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_458)<br/>_458 = ((_448 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_460)<br/>_460 = _458<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _460)</td></tr></table>>];
    bb207__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageDead(_458)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>_464 = (_9.4: u64)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>_467 = &amp;(*_207)<br/></td></tr><tr><td align="left">_466 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _467)</td></tr></table>>];
    bb209__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>_465 = (((*_466).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_463 = math::orders::standardize_base_asset_amount(move _464, move _465)</td></tr></table>>];
    bb210__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_464)<br/></td></tr><tr><td align="left">_462 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _463)</td></tr></table>>];
    bb211__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>_468 = discriminant(_462)<br/></td></tr><tr><td align="left">switchInt(move _468)</td></tr></table>>];
    bb212__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_472)<br/>_472 = ((_462 as Continue).0: u64)<br/>_442 = _472<br/>StorageDead(_472)<br/>StorageDead(_466)<br/>StorageDead(_462)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageLive(_469)<br/>_469 = ((_462 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_471)<br/>_471 = _469<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _471)</td></tr></table>>];
    bb214__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageDead(_469)<br/>StorageDead(_466)<br/>StorageDead(_462)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_445)<br/>StorageDead(_443)<br/>StorageLive(_473)<br/>_474 = discriminant((_10.5: std::option::Option&lt;controller::position::PositionDirection&gt;))<br/></td></tr><tr><td align="left">switchInt(move _474)</td></tr></table>>];
    bb216__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_475)<br/>_475 = (((_10.5: std::option::Option&lt;controller::position::PositionDirection&gt;) as Some).0: controller::position::PositionDirection)<br/>_473 = _475<br/>StorageDead(_475)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_476)<br/>StorageLive(_477)<br/>_477 = _365<br/>_478 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_479 = Lt(_477, _478)<br/></td></tr><tr><td align="left">assert(move _479, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _478, _477)</td></tr></table>>];
    bb218__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">_476 = &amp;((*_2).4: [state::user::PerpPosition; 8])[_477]<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>_481 = ((*_476).1: i64)<br/>_480 = Ge(move _481, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _480)</td></tr></table>>];
    bb219__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>_473 = controller::position::PositionDirection::Long<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>_473 = controller::position::PositionDirection::Short<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>StorageDead(_477)<br/>StorageDead(_476)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_482)<br/>_482 = _473<br/>StorageLive(_483)<br/>_483 = _442<br/>_382 = (move _482, move _483)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/>StorageDead(_473)<br/>StorageDead(_442)<br/>StorageLive(_380)<br/>_380 = (_382.0: controller::position::PositionDirection)<br/>StorageLive(_381)<br/>_381 = (_382.1: u64)<br/>StorageDead(_382)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>_487 = &amp;mut (*_6)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>_493 = &amp;(*_207)<br/></td></tr><tr><td align="left">_492 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _493)</td></tr></table>>];
    bb223__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">_491 = &amp;(*_492)<br/>StorageDead(_493)<br/></td></tr><tr><td align="left">_490 = PerpMarket::oracle_id(move _491)</td></tr></table>>];
    bb224__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_489 = &amp;_490<br/>_488 = &amp;(*_489)<br/></td></tr><tr><td align="left">_486 = OracleMap::&lt;'_&gt;::get_price_data(move _487, move _488)</td></tr></table>>];
    bb225__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>StorageDead(_487)<br/></td></tr><tr><td align="left">_485 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _486)</td></tr></table>>];
    bb226__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>_494 = discriminant(_485)<br/></td></tr><tr><td align="left">switchInt(move _494)</td></tr></table>>];
    bb227__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageLive(_498)<br/>_498 = ((_485 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_484 = _498<br/>StorageDead(_498)<br/>StorageDead(_492)<br/>StorageDead(_490)<br/>StorageDead(_489)<br/>StorageDead(_485)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>_501 = &amp;_10<br/></td></tr><tr><td align="left">_500 = PlaceOrderOptions::is_liquidation(move _501)</td></tr></table>>];
    bb228__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageLive(_495)<br/>_495 = ((_485 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_497)<br/>_497 = _495<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _497)</td></tr></table>>];
    bb229__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/>StorageDead(_495)<br/>StorageDead(_492)<br/>StorageDead(_490)<br/>StorageDead(_489)<br/>StorageDead(_485)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left">switchInt(move _500)</td></tr></table>>];
    bb231__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>_499 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = &amp;mut _9<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = &amp;(*_207)<br/></td></tr><tr><td align="left">_507 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _508)</td></tr></table>>];
    bb233__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">_506 = &amp;(*_507)<br/>StorageDead(_508)<br/>StorageLive(_509)<br/>_509 = ((*_484).0: i64)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = &amp;_10<br/></td></tr><tr><td align="left">_510 = PlaceOrderOptions::is_signed_msg_order(move _511)</td></tr></table>>];
    bb234__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/></td></tr><tr><td align="left">_504 = order_params::OrderParams::update_perp_auction_params(move _505, move _506, move _509, move _510)</td></tr></table>>];
    bb235__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_510)<br/>StorageDead(_509)<br/>StorageDead(_506)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_503 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _504)</td></tr></table>>];
    bb236__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>_512 = discriminant(_503)<br/></td></tr><tr><td align="left">switchInt(move _512)</td></tr></table>>];
    bb237__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_516)<br/>_516 = ((_503 as Continue).0: bool)<br/>_502 = _516<br/>StorageDead(_516)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/>_499 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_513)<br/>_513 = ((_503 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_515)<br/>_515 = _513<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _515)</td></tr></table>>];
    bb239__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/>StorageDead(_500)<br/>StorageDead(_499)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_500)<br/>StorageDead(_499)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>_524 = &amp;_9<br/>_523 = &amp;(*_524)<br/>StorageLive(_525)<br/>_525 = &amp;(*_484)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>_528 = &amp;(*_207)<br/></td></tr><tr><td align="left">_527 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _528)</td></tr></table>>];
    bb241__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>_526 = (((*_527).1: state::perp_market::AMM).53: u64)<br/>StorageLive(_529)<br/>_529 = ((*_1).16: u8)<br/></td></tr><tr><td align="left">_522 = get_auction_params(move _523, move _525, move _526, move _529)</td></tr></table>>];
    bb242__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/>StorageDead(_526)<br/>StorageDead(_525)<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">_521 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as Try&gt;::branch(move _522)</td></tr></table>>];
    bb243__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/>_530 = discriminant(_521)<br/></td></tr><tr><td align="left">switchInt(move _530)</td></tr></table>>];
    bb244__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_534)<br/>_534 = ((_521 as Continue).0: (i64, i64, u8))<br/>_520 = _534<br/>StorageDead(_534)<br/>StorageLive(_517)<br/>_517 = (_520.0: i64)<br/>StorageLive(_518)<br/>_518 = (_520.1: i64)<br/>StorageLive(_519)<br/>_519 = (_520.2: u8)<br/>StorageDead(_527)<br/>StorageDead(_524)<br/>StorageDead(_521)<br/>StorageDead(_520)<br/>StorageLive(_535)<br/>_536 = discriminant((_9.10: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _536)</td></tr></table>>];
    bb245__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_531)<br/>_531 = ((_521 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_533)<br/>_533 = _531<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _533)</td></tr></table>>];
    bb246__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>StorageDead(_531)<br/>StorageDead(_527)<br/>StorageDead(_524)<br/>StorageDead(_521)<br/>StorageDead(_520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">_538 = discriminant((_9.0: state::user::OrderType))<br/></td></tr><tr><td align="left">switchInt(move _538)</td></tr></table>>];
    bb248__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageLive(_537)<br/>_537 = (((_9.10: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>_535 = _537<br/>StorageDead(_537)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">_535 = const 0_i64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb250__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>_541 = _11<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>_552 = _519<br/></td></tr><tr><td align="left">_551 = &lt;u8 as SafeMath&gt;::safe_div(move _552, const 2_u8)</td></tr></table>>];
    bb251__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/></td></tr><tr><td align="left">_550 = &lt;std::result::Result&lt;u8, error::ErrorCode&gt; as Try&gt;::branch(move _551)</td></tr></table>>];
    bb252__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/>_553 = discriminant(_550)<br/></td></tr><tr><td align="left">switchInt(move _553)</td></tr></table>>];
    bb253__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageLive(_557)<br/>_557 = ((_550 as Continue).0: u8)<br/>_549 = _557<br/>StorageDead(_557)<br/></td></tr><tr><td align="left">_548 = &lt;u8 as Cast&gt;::cast::&lt;i64&gt;(move _549)</td></tr></table>>];
    bb254__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>_554 = ((_550 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_556)<br/>_556 = _554<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _556)</td></tr></table>>];
    bb255__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageDead(_554)<br/>StorageDead(_549)<br/>StorageDead(_548)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/></td></tr><tr><td align="left">_547 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _548)</td></tr></table>>];
    bb257__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>_558 = discriminant(_547)<br/></td></tr><tr><td align="left">switchInt(move _558)</td></tr></table>>];
    bb258__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageLive(_562)<br/>_562 = ((_547 as Continue).0: i64)<br/>_546 = _562<br/>StorageDead(_562)<br/></td></tr><tr><td align="left">_545 = &lt;i64 as SafeMath&gt;::safe_add(move _546, const 10_i64)</td></tr></table>>];
    bb259__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageLive(_559)<br/>_559 = ((_547 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_561)<br/>_561 = _559<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _561)</td></tr></table>>];
    bb260__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>StorageDead(_559)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/></td></tr><tr><td align="left">_544 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _545)</td></tr></table>>];
    bb262__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>_563 = discriminant(_544)<br/></td></tr><tr><td align="left">switchInt(move _563)</td></tr></table>>];
    bb263__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageLive(_567)<br/>_567 = ((_544 as Continue).0: i64)<br/>_543 = _567<br/>StorageDead(_567)<br/></td></tr><tr><td align="left">_542 = &lt;i64 as Ord&gt;::max(const 30_i64, move _543)</td></tr></table>>];
    bb264__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageLive(_564)<br/>_564 = ((_544 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_566)<br/>_566 = _564<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _566)</td></tr></table>>];
    bb265__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/>StorageDead(_564)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/></td></tr><tr><td align="left">_540 = &lt;i64 as SafeMath&gt;::safe_add(move _541, move _542)</td></tr></table>>];
    bb267__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_541)<br/></td></tr><tr><td align="left">_539 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _540)</td></tr></table>>];
    bb268__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>_568 = discriminant(_539)<br/></td></tr><tr><td align="left">switchInt(move _568)</td></tr></table>>];
    bb269__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageLive(_572)<br/>_572 = ((_539 as Continue).0: i64)<br/>_535 = _572<br/>StorageDead(_572)<br/>StorageDead(_550)<br/>StorageDead(_547)<br/>StorageDead(_544)<br/>StorageDead(_539)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageLive(_569)<br/>_569 = ((_539 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_571)<br/>_571 = _569<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _571)</td></tr></table>>];
    bb271__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_569)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageLive(_573)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>_575 = _535<br/>_574 = Ne(move _575, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _574)</td></tr></table>>];
    bb273__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>_577 = _535<br/>StorageLive(_578)<br/>_578 = _11<br/>_576 = Lt(move _577, move _578)<br/></td></tr><tr><td align="left">switchInt(move _576)</td></tr></table>>];
    bb274__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_577)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>_1026 = const _<br/>_590 = &amp;(*_1026)<br/>_589 = &amp;(*_590)<br/>_588 = move _589 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_589)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>_598 = &amp;_535<br/>_597 = &amp;(*_598)<br/></td></tr><tr><td align="left">_596 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _597)</td></tr></table>>];
    bb275__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/>StorageLive(_599)<br/>StorageLive(_600)<br/>StorageLive(_601)<br/>_601 = &amp;_11<br/>_600 = &amp;(*_601)<br/></td></tr><tr><td align="left">_599 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _600)</td></tr></table>>];
    bb276__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_600)<br/>_595 = [move _596, move _599]<br/>StorageDead(_599)<br/>StorageDead(_596)<br/>_594 = &amp;_595<br/>_593 = &amp;(*_594)<br/>_592 = move _593 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_593)<br/></td></tr><tr><td align="left">_587 = Arguments::&lt;'_&gt;::new_v1(move _588, move _592)</td></tr></table>>];
    bb277__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_592)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">_586 = format(move _587)</td></tr></table>>];
    bb278__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_587)<br/>StorageDead(_601)<br/>StorageDead(_598)<br/>StorageDead(_595)<br/>StorageDead(_594)<br/>StorageDead(_590)<br/>_585 = move _586<br/>StorageDead(_586)<br/>_584 = &amp;_585<br/>_583 = &amp;(*_584)<br/></td></tr><tr><td align="left">_582 = &lt;String as Deref&gt;::deref(move _583)</td></tr></table>>];
    bb279__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">_581 = &amp;(*_582)<br/>StorageDead(_583)<br/></td></tr><tr><td align="left">_580 = solana_program::log::sol_log(move _581)</td></tr></table>>];
    bb280__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/></td></tr><tr><td align="left">drop(_585)</td></tr></table>>];
    bb281__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_584)<br/>StorageDead(_582)<br/>StorageDead(_580)<br/>StorageLive(_602)<br/>_602 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _602)<br/>StorageDead(_602)<br/>StorageDead(_576)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/>StorageDead(_577)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">_573 = const ()<br/>StorageDead(_576)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>_607 = &amp;(_9.1: state::user::MarketType)<br/>StorageLive(_608)<br/>_1032 = const _<br/>_608 = &amp;(*_1032)<br/></td></tr><tr><td align="left">_606 = &lt;state::user::MarketType as PartialEq&gt;::eq(move _607, move _608)</td></tr></table>>];
    bb285__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left">switchInt(move _606)</td></tr></table>>];
    bb286__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/>StorageDead(_607)<br/>StorageLive(_610)<br/>_610 = ()<br/>_605 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _610)<br/>StorageDead(_610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/>StorageDead(_607)<br/>StorageLive(_611)<br/>_611 = error::ErrorCode::InvalidOrderMarketType<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>StorageLive(_616)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>_1031 = const _<br/>_622 = &amp;(*_1031)<br/>_621 = &amp;(*_622)<br/>_620 = move _621 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_621)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>_630 = &amp;_611<br/>_629 = &amp;(*_630)<br/></td></tr><tr><td align="left">_628 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _629)</td></tr></table>>];
    bb288__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_629)<br/>_627 = [move _628]<br/>StorageDead(_628)<br/>_626 = &amp;_627<br/>_625 = &amp;(*_626)<br/>_624 = move _625 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_625)<br/></td></tr><tr><td align="left">_619 = Arguments::&lt;'_&gt;::new_v1(move _620, move _624)</td></tr></table>>];
    bb289__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>StorageDead(_620)<br/></td></tr><tr><td align="left">_618 = format(move _619)</td></tr></table>>];
    bb290__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>StorageDead(_630)<br/>StorageDead(_627)<br/>StorageDead(_626)<br/>StorageDead(_622)<br/>_617 = move _618<br/>StorageDead(_618)<br/>_616 = &amp;_617<br/>_615 = &amp;(*_616)<br/></td></tr><tr><td align="left">_614 = &lt;String as Deref&gt;::deref(move _615)</td></tr></table>>];
    bb291__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">_613 = &amp;(*_614)<br/>StorageDead(_615)<br/></td></tr><tr><td align="left">_612 = solana_program::log::sol_log(move _613)</td></tr></table>>];
    bb292__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/></td></tr><tr><td align="left">drop(_617)</td></tr></table>>];
    bb293__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_617)<br/>StorageDead(_616)<br/>StorageDead(_614)<br/>StorageDead(_612)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>_633 = const &quot;must be perp order&quot;<br/>_632 = &amp;(*_633)<br/></td></tr><tr><td align="left">_631 = solana_program::log::sol_log(move _632)</td></tr></table>>];
    bb294__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_632)<br/>StorageDead(_633)<br/>StorageDead(_631)<br/>StorageLive(_634)<br/>_634 = _611<br/>_605 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _634)<br/>StorageDead(_634)<br/>StorageDead(_611)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_606)<br/></td></tr><tr><td align="left">_604 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _605)</td></tr></table>>];
    bb296__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_605)<br/>_635 = discriminant(_604)<br/></td></tr><tr><td align="left">switchInt(move _635)</td></tr></table>>];
    bb297__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageLive(_639)<br/>_639 = ((_604 as Continue).0: ())<br/>_603 = _639<br/>StorageDead(_639)<br/>StorageDead(_604)<br/>StorageDead(_603)<br/>StorageLive(_640)<br/>_640 = const 0_u8<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>_642 = _640<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>_644 = &amp;_10<br/></td></tr><tr><td align="left">_643 = PlaceOrderOptions::is_signed_msg_order(move _644)</td></tr></table>>];
    bb298__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageLive(_636)<br/>_636 = ((_604 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_638)<br/>_638 = _636<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _638)</td></tr></table>>];
    bb299__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/>StorageDead(_636)<br/>StorageDead(_604)<br/>StorageDead(_603)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageLive(_645)<br/>_645 = OrderBitFlag::SignedMessage<br/></td></tr><tr><td align="left">_641 = math::orders::set_order_bit_flag(move _642, move _643, move _645)</td></tr></table>>];
    bb301__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_645)<br/>StorageDead(_643)<br/>StorageDead(_642)<br/>_640 = move _641<br/>StorageDead(_641)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>_647 = (_9.7: bool)<br/></td></tr><tr><td align="left">switchInt(move _647)</td></tr></table>>];
    bb302__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">_646 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">_646 = _219<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb304__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>_649 = _640<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>_652 = &amp;_9<br/></td></tr><tr><td align="left">_651 = order_params::OrderParams::is_trigger_order(move _652)</td></tr></table>>];
    bb305__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left">switchInt(move _651)</td></tr></table>>];
    bb306__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>_650 = _646<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>_650 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_651)<br/>StorageLive(_653)<br/>_653 = OrderBitFlag::NewTriggerReduceOnly<br/></td></tr><tr><td align="left">_648 = math::orders::set_order_bit_flag(move _649, move _650, move _653)</td></tr></table>>];
    bb309__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>StorageDead(_650)<br/>StorageDead(_649)<br/>_640 = move _648<br/>StorageDead(_648)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_655 = OrderStatus::Open<br/>StorageLive(_656)<br/>_656 = (_9.0: state::user::OrderType)<br/>StorageLive(_657)<br/>_657 = (_9.1: state::user::MarketType)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>_659 = &amp;_10<br/>StorageLive(_660)<br/>_660 = _12<br/></td></tr><tr><td align="left">_658 = PlaceOrderOptions::get_order_slot(move _659, move _660)</td></tr></table>>];
    bb310__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_660)<br/>StorageDead(_659)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>_662 = ((*_2).15: u32)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>_666 = _662<br/></td></tr><tr><td align="left">_665 = core::num::&lt;impl u32&gt;::checked_add(move _666, const 1_u32)</td></tr></table>>];
    bb311__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_666)<br/>StorageLive(_667)<br/>_667 = Option::&lt;u32&gt;::Some(const 1_u32)<br/></td></tr><tr><td align="left">_664 = Option::&lt;u32&gt;::or(move _665, move _667)</td></tr></table>>];
    bb312__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>StorageDead(_665)<br/></td></tr><tr><td align="left">_663 = Option::&lt;u32&gt;::unwrap(move _664)</td></tr></table>>];
    bb313__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_664)<br/>((*_2).15: u32) = move _663<br/>StorageDead(_663)<br/>_661 = _662<br/>StorageDead(_662)<br/>StorageLive(_668)<br/>_668 = (_9.3: u8)<br/>StorageLive(_669)<br/>_669 = (_9.6: u16)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>StorageLive(_673)<br/>_673 = (_9.5: u64)<br/>StorageLive(_674)<br/>_674 = (_9.2: controller::position::PositionDirection)<br/>StorageLive(_675)<br/>_675 = (_9.8: state::order_params::PostOnlyParam)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>_679 = &amp;(*_207)<br/></td></tr><tr><td align="left">_678 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _679)</td></tr></table>>];
    bb314__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_679)<br/>_677 = &amp;((*_678).1: state::perp_market::AMM)<br/>_676 = &amp;(*_677)<br/></td></tr><tr><td align="left">_672 = math::orders::get_price_for_perp_order(move _673, move _674, move _675, move _676)</td></tr></table>>];
    bb315__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_676)<br/>StorageDead(_675)<br/>StorageDead(_674)<br/>StorageDead(_673)<br/></td></tr><tr><td align="left">_671 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _672)</td></tr></table>>];
    bb316__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>_680 = discriminant(_671)<br/></td></tr><tr><td align="left">switchInt(move _680)</td></tr></table>>];
    bb317__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageLive(_684)<br/>_684 = ((_671 as Continue).0: u64)<br/>_670 = _684<br/>StorageDead(_684)<br/>StorageLive(_685)<br/>_685 = _380<br/>StorageLive(_686)<br/>_686 = _381<br/>StorageLive(_687)<br/>_687 = (_9.2: controller::position::PositionDirection)<br/>StorageLive(_688)<br/>_688 = _646<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>_693 = (_9.11: std::option::Option&lt;u64&gt;)<br/></td></tr><tr><td align="left">_692 = Option::&lt;u64&gt;::unwrap_or(move _693, const 0_u64)</td></tr></table>>];
    bb318__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageLive(_681)<br/>_681 = ((_671 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_683)<br/>_683 = _681<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _683)</td></tr></table>>];
    bb319__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_683)<br/>StorageDead(_681)<br/>StorageDead(_670)<br/>StorageDead(_669)<br/>StorageDead(_668)<br/>StorageDead(_661)<br/>StorageDead(_658)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb320__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>_696 = &amp;(*_207)<br/></td></tr><tr><td align="left">_695 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _696)</td></tr></table>>];
    bb321__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_696)<br/>_694 = (((*_695).1: state::perp_market::AMM).53: u64)<br/>StorageLive(_697)<br/>_697 = (_9.2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_691 = math::orders::standardize_price(move _692, move _694, move _697)</td></tr></table>>];
    bb322__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/>StorageDead(_694)<br/>StorageDead(_692)<br/></td></tr><tr><td align="left">_690 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _691)</td></tr></table>>];
    bb323__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_691)<br/>_698 = discriminant(_690)<br/></td></tr><tr><td align="left">switchInt(move _698)</td></tr></table>>];
    bb324__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageLive(_702)<br/>_702 = ((_690 as Continue).0: u64)<br/>_689 = _702<br/>StorageDead(_702)<br/>StorageLive(_703)<br/>_703 = (_9.12: state::user::OrderTriggerCondition)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>_705 = &amp;(_9.8: state::order_params::PostOnlyParam)<br/>StorageLive(_706)<br/>_1030 = const _<br/>_706 = &amp;(*_1030)<br/></td></tr><tr><td align="left">_704 = &lt;PostOnlyParam as PartialEq&gt;::ne(move _705, move _706)</td></tr></table>>];
    bb325__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageLive(_699)<br/>_699 = ((_690 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_701)<br/>_701 = _699<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _701)</td></tr></table>>];
    bb326__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageDead(_699)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageDead(_687)<br/>StorageDead(_686)<br/>StorageDead(_685)<br/>StorageDead(_670)<br/>StorageDead(_669)<br/>StorageDead(_668)<br/>StorageDead(_661)<br/>StorageDead(_658)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_695)<br/>StorageDead(_690)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb327__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_706)<br/>StorageDead(_705)<br/>StorageLive(_708)<br/>StorageLive(_709)<br/>_709 = (_9.13: std::option::Option&lt;i32&gt;)<br/></td></tr><tr><td align="left">_708 = Option::&lt;i32&gt;::unwrap_or(move _709, const 0_i32)</td></tr></table>>];
    bb328__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_709)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>_711 = &amp;_9<br/></td></tr><tr><td align="left">_710 = order_params::OrderParams::is_immediate_or_cancel(move _711)</td></tr></table>>];
    bb329__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_711)<br/>StorageLive(_712)<br/>_712 = _517<br/>StorageLive(_713)<br/>_713 = _518<br/>StorageLive(_714)<br/>_714 = _519<br/>StorageLive(_715)<br/>_715 = _535<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>_717 = _12<br/></td></tr><tr><td align="left">_716 = math::orders::get_posted_slot_from_clock_slot(move _717)</td></tr></table>>];
    bb330__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>StorageLive(_718)<br/>_718 = _640<br/>StorageLive(_719)<br/>_719 = [const 0_u8; 1]<br/>_654 = Order { slot: move _658, price: move _670, base_asset_amount: move _686, base_asset_amount_filled: const 0_u64, quote_asset_amount_filled: const 0_u64, trigger_price: move _689, auction_start_price: move _712, auction_end_price: move _713, max_ts: move _715, oracle_price_offset: move _708, order_id: move _661, market_index: move _669, status: move _655, order_type: move _656, market_type: move _657, user_order_id: move _668, existing_position_direction: move _685, direction: move _687, reduce_only: move _688, post_only: move _704, immediate_or_cancel: move _710, trigger_condition: move _703, auction_duration: move _714, posted_slot_tail: move _716, bit_flags: move _718, padding: move _719 }<br/>StorageDead(_719)<br/>StorageDead(_718)<br/>StorageDead(_716)<br/>StorageDead(_715)<br/>StorageDead(_714)<br/>StorageDead(_713)<br/>StorageDead(_712)<br/>StorageDead(_710)<br/>StorageDead(_708)<br/>StorageDead(_704)<br/>StorageDead(_703)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageDead(_687)<br/>StorageDead(_686)<br/>StorageDead(_685)<br/>StorageDead(_670)<br/>StorageDead(_669)<br/>StorageDead(_668)<br/>StorageDead(_661)<br/>StorageDead(_658)<br/>StorageDead(_657)<br/>StorageDead(_656)<br/>StorageDead(_655)<br/>StorageDead(_695)<br/>StorageDead(_690)<br/>StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_671)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>_721 = ((*_484).0: i64)<br/>_720 = Option::&lt;i64&gt;::Some(move _721)<br/>StorageDead(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>_725 = &amp;_654<br/>_724 = &amp;(*_725)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>_728 = &amp;(*_207)<br/></td></tr><tr><td align="left">_727 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _728)</td></tr></table>>];
    bb331__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">_726 = &amp;(*_727)<br/>StorageDead(_728)<br/>StorageLive(_729)<br/>_729 = _720<br/>StorageLive(_730)<br/>_730 = _12<br/></td></tr><tr><td align="left">_723 = validate_order(move _724, move _726, move _729, move _730)</td></tr></table>>];
    bb332__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_729)<br/>StorageDead(_726)<br/>StorageDead(_724)<br/>_732 = discriminant(_723)<br/></td></tr><tr><td align="left">switchInt(move _732)</td></tr></table>>];
    bb333__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">_731 = discriminant(((_723 as Err).0: error::ErrorCode))<br/></td></tr><tr><td align="left">switchInt(move _731)</td></tr></table>>];
    bb334__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageLive(_741)<br/>_741 = ((_723 as Err).0: error::ErrorCode)<br/>StorageLive(_743)<br/>_743 = _741<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _743)<br/>StorageDead(_743)<br/>StorageDead(_741)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb335__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">_722 = const ()<br/>StorageDead(_727)<br/>StorageDead(_725)<br/>StorageDead(_723)<br/>StorageDead(_722)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>_748 = &amp;_654<br/>_747 = &amp;(*_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>_750 = _365<br/>_751 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_752 = Lt(_750, _751)<br/></td></tr><tr><td align="left">assert(move _752, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _751, _750)</td></tr></table>>];
    bb336__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageLive(_735)<br/>StorageLive(_736)<br/>_736 = &amp;(_9.8: state::order_params::PostOnlyParam)<br/>StorageLive(_737)<br/>_1027 = const _<br/>_737 = &amp;(*_1027)<br/></td></tr><tr><td align="left">_735 = &lt;PostOnlyParam as PartialEq&gt;::eq(move _736, move _737)</td></tr></table>>];
    bb337__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left">switchInt(move _735)</td></tr></table>>];
    bb338__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_737)<br/>StorageDead(_736)<br/>StorageDead(_735)<br/>StorageLive(_740)<br/>_740 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _740)<br/>StorageDead(_740)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_737)<br/>StorageDead(_736)<br/>StorageDead(_735)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb340__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">_749 = (((*_2).4: [state::user::PerpPosition; 8])[_750].1: i64)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>_754 = _365<br/>_755 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_756 = Lt(_754, _755)<br/></td></tr><tr><td align="left">assert(move _756, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _755, _754)</td></tr></table>>];
    bb341__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">_753 = (((*_2).4: [state::user::PerpPosition; 8])[_754].5: i64)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>_758 = _365<br/>_759 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_760 = Lt(_758, _759)<br/></td></tr><tr><td align="left">assert(move _760, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _759, _758)</td></tr></table>>];
    bb342__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">_757 = (((*_2).4: [state::user::PerpPosition; 8])[_758].6: i64)<br/></td></tr><tr><td align="left">_746 = math::orders::is_new_order_risk_increasing(move _747, move _749, move _753, move _757)</td></tr></table>>];
    bb343__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_757)<br/>StorageDead(_753)<br/>StorageDead(_749)<br/>StorageDead(_747)<br/></td></tr><tr><td align="left">_745 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _746)</td></tr></table>>];
    bb344__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_746)<br/>_761 = discriminant(_745)<br/></td></tr><tr><td align="left">switchInt(move _761)</td></tr></table>>];
    bb345__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageLive(_765)<br/>_765 = ((_745 as Continue).0: bool)<br/>_744 = _765<br/>StorageDead(_765)<br/>StorageDead(_758)<br/>StorageDead(_754)<br/>StorageDead(_750)<br/>StorageDead(_748)<br/>StorageDead(_745)<br/>StorageLive(_766)<br/>StorageLive(_767)<br/>_767 = &amp;mut (*_2)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>_769 = &amp;_654<br/></td></tr><tr><td align="left">_768 = Order::has_auction(move _769)</td></tr></table>>];
    bb346__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageLive(_762)<br/>_762 = ((_745 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_764)<br/>_764 = _762<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _764)</td></tr></table>>];
    bb347__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_764)<br/>StorageDead(_762)<br/>StorageDead(_758)<br/>StorageDead(_754)<br/>StorageDead(_750)<br/>StorageDead(_748)<br/>StorageDead(_745)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb348__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_769)<br/></td></tr><tr><td align="left">_766 = User::increment_open_orders(move _767, move _768)</td></tr></table>>];
    bb349__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_768)<br/>StorageDead(_767)<br/>StorageDead(_766)<br/>StorageLive(_770)<br/>_770 = _654<br/>StorageLive(_771)<br/>_771 = _158<br/>_772 = Len(((*_2).5: [state::user::Order; 32]))<br/>_773 = Lt(_771, _772)<br/></td></tr><tr><td align="left">assert(move _773, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _772, _771)</td></tr></table>>];
    bb350__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">((*_2).5: [state::user::Order; 32])[_771] = move _770<br/>StorageDead(_770)<br/>StorageDead(_771)<br/>StorageLive(_774)<br/>_774 = _365<br/>_775 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_776 = Lt(_774, _775)<br/></td></tr><tr><td align="left">assert(move _776, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _775, _774)</td></tr></table>>];
    bb351__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">_777 = CheckedAdd((((*_2).4: [state::user::PerpPosition; 8])[_774].14: u8), const 1_u8)<br/></td></tr><tr><td align="left">assert(!move (_777.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, (((*_2).4: [state::user::PerpPosition; 8])[_774].14: u8), const 1_u8)</td></tr></table>>];
    bb352__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">(((*_2).4: [state::user::PerpPosition; 8])[_774].14: u8) = move (_777.0: u8)<br/>StorageDead(_774)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>_783 = _365<br/>_784 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_785 = Lt(_783, _784)<br/></td></tr><tr><td align="left">assert(move _785, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _784, _783)</td></tr></table>>];
    bb353__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">_782 = &amp;mut ((*_2).4: [state::user::PerpPosition; 8])[_783]<br/>_781 = &amp;mut (*_782)<br/>StorageLive(_786)<br/>StorageLive(_787)<br/>_787 = &amp;(_9.2: controller::position::PositionDirection)<br/>_786 = &amp;(*_787)<br/>StorageLive(_788)<br/>_788 = _381<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>_790 = &amp;_654<br/></td></tr><tr><td align="left">_789 = Order::update_open_bids_and_asks(move _790)</td></tr></table>>];
    bb354__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/></td></tr><tr><td align="left">_780 = increase_open_bids_and_asks(move _781, move _786, move _788, move _789)</td></tr></table>>];
    bb355__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_789)<br/>StorageDead(_788)<br/>StorageDead(_786)<br/>StorageDead(_781)<br/></td></tr><tr><td align="left">_779 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _780)</td></tr></table>>];
    bb356__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/>_791 = discriminant(_779)<br/></td></tr><tr><td align="left">switchInt(move _791)</td></tr></table>>];
    bb357__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_795)<br/>_795 = ((_779 as Continue).0: ())<br/>_778 = _795<br/>StorageDead(_795)<br/>StorageDead(_787)<br/>StorageDead(_783)<br/>StorageDead(_782)<br/>StorageDead(_779)<br/>StorageDead(_778)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>_797 = &amp;mut _10<br/>StorageLive(_798)<br/>_798 = _744<br/></td></tr><tr><td align="left">_796 = PlaceOrderOptions::update_risk_increasing(move _797, move _798)</td></tr></table>>];
    bb358__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_792)<br/>_792 = ((_779 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_794)<br/>_794 = _792<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _794)</td></tr></table>>];
    bb359__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>StorageDead(_792)<br/>StorageDead(_787)<br/>StorageDead(_783)<br/>StorageDead(_782)<br/>StorageDead(_779)<br/>StorageDead(_778)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb360__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_798)<br/>StorageDead(_797)<br/>StorageDead(_796)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>_800 = (_10.2: bool)<br/></td></tr><tr><td align="left">switchInt(move _800)</td></tr></table>>];
    bb361__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageLive(_801)<br/>StorageLive(_802)<br/>_802 = &amp;_10<br/></td></tr><tr><td align="left">_801 = PlaceOrderOptions::is_liquidation(move _802)</td></tr></table>>];
    bb362__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left">switchInt(move _801)</td></tr></table>>];
    bb363__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_802)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb364__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_802)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>_806 = &amp;(*_2)<br/>StorageLive(_807)<br/>_807 = &amp;(*_4)<br/>StorageLive(_808)<br/>_808 = &amp;(*_5)<br/>StorageLive(_809)<br/>_809 = &amp;mut (*_6)<br/>StorageLive(_810)<br/>_810 = (_10.3: bool)<br/></td></tr><tr><td align="left">_805 = math::margin::meets_place_order_margin_requirement(move _806, move _807, move _808, move _809, move _810)</td></tr></table>>];
    bb365__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/>StorageDead(_809)<br/>StorageDead(_808)<br/>StorageDead(_807)<br/>StorageDead(_806)<br/></td></tr><tr><td align="left">_804 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _805)</td></tr></table>>];
    bb366__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_805)<br/>_811 = discriminant(_804)<br/></td></tr><tr><td align="left">switchInt(move _811)</td></tr></table>>];
    bb367__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageLive(_815)<br/>_815 = ((_804 as Continue).0: ())<br/>_803 = _815<br/>StorageDead(_815)<br/>StorageDead(_804)<br/>StorageDead(_803)<br/>_799 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb368__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageLive(_812)<br/>_812 = ((_804 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_814)<br/>_814 = _812<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _814)</td></tr></table>>];
    bb369__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_814)<br/>StorageDead(_812)<br/>StorageDead(_804)<br/>StorageDead(_803)<br/>StorageDead(_801)<br/>StorageDead(_800)<br/>StorageDead(_799)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb370__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">_799 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb371__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_800)<br/>StorageDead(_799)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>_817 = _219<br/></td></tr><tr><td align="left">switchInt(move _817)</td></tr></table>>];
    bb372__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_818)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>StorageLive(_823)<br/>_823 = _158<br/>_824 = Len(((*_2).5: [state::user::Order; 32]))<br/>_825 = Lt(_823, _824)<br/></td></tr><tr><td align="left">assert(move _825, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _824, _823)</td></tr></table>>];
    bb373__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">_822 = &amp;((*_2).5: [state::user::Order; 32])[_823]<br/>_821 = &amp;(*_822)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>_827 = _365<br/>_828 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_829 = Lt(_827, _828)<br/></td></tr><tr><td align="left">assert(move _829, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _828, _827)</td></tr></table>>];
    bb374__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">_826 = (((*_2).4: [state::user::PerpPosition; 8])[_827].1: i64)<br/></td></tr><tr><td align="left">_820 = validate_order_for_force_reduce_only(move _821, move _826)</td></tr></table>>];
    bb375__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_826)<br/>StorageDead(_821)<br/></td></tr><tr><td align="left">_819 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _820)</td></tr></table>>];
    bb376__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_820)<br/>_830 = discriminant(_819)<br/></td></tr><tr><td align="left">switchInt(move _830)</td></tr></table>>];
    bb377__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageLive(_834)<br/>_834 = ((_819 as Continue).0: ())<br/>_818 = _834<br/>StorageDead(_834)<br/>StorageDead(_827)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/>StorageDead(_819)<br/>StorageDead(_818)<br/>_816 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb378__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageLive(_831)<br/>_831 = ((_819 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_833)<br/>_833 = _831<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _833)</td></tr></table>>];
    bb379__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_833)<br/>StorageDead(_831)<br/>StorageDead(_827)<br/>StorageDead(_823)<br/>StorageDead(_822)<br/>StorageDead(_819)<br/>StorageDead(_818)<br/>StorageDead(_817)<br/>StorageDead(_816)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">_816 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb381__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/>StorageDead(_816)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>StorageLive(_837)<br/>_837 = &amp;(*_207)<br/></td></tr><tr><td align="left">_836 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _837)</td></tr></table>>];
    bb382__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_837)<br/>_835 = (((*_836).1: state::perp_market::AMM).17: u128)<br/>StorageDead(_836)<br/>StorageLive(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>_840 = _835<br/>_839 = Ne(move _840, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _839)</td></tr></table>>];
    bb383__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>StorageLive(_841)<br/>_841 = _744<br/></td></tr><tr><td align="left">switchInt(move _841)</td></tr></table>>];
    bb384__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageLive(_842)<br/>_843 = discriminant((_9.2: controller::position::PositionDirection))<br/></td></tr><tr><td align="left">switchInt(move _843)</td></tr></table>>];
    bb385__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageLive(_864)<br/>StorageLive(_865)<br/>StorageLive(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>_869 = &amp;(*_207)<br/></td></tr><tr><td align="left">_868 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _869)</td></tr></table>>];
    bb386__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageLive(_844)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>StorageLive(_847)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>_849 = &amp;(*_207)<br/></td></tr><tr><td align="left">_848 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _849)</td></tr></table>>];
    bb387__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_849)<br/>_847 = (((*_848).1: state::perp_market::AMM).13: i128)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>_853 = _381<br/></td></tr><tr><td align="left">_852 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _853)</td></tr></table>>];
    bb388__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/></td></tr><tr><td align="left">_851 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _852)</td></tr></table>>];
    bb389__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>_854 = discriminant(_851)<br/></td></tr><tr><td align="left">switchInt(move _854)</td></tr></table>>];
    bb390__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageLive(_858)<br/>_858 = ((_851 as Continue).0: i128)<br/>_850 = _858<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">_846 = &lt;i128 as SafeMath&gt;::safe_add(move _847, move _850)</td></tr></table>>];
    bb391__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageLive(_855)<br/>_855 = ((_851 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_857)<br/>_857 = _855<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _857)</td></tr></table>>];
    bb392__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>StorageDead(_855)<br/>StorageDead(_850)<br/>StorageDead(_847)<br/>StorageDead(_846)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb393__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_850)<br/>StorageDead(_847)<br/></td></tr><tr><td align="left">_845 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _846)</td></tr></table>>];
    bb394__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/>_859 = discriminant(_845)<br/></td></tr><tr><td align="left">switchInt(move _859)</td></tr></table>>];
    bb395__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageLive(_863)<br/>_863 = ((_845 as Continue).0: i128)<br/>_844 = _863<br/>StorageDead(_863)<br/></td></tr><tr><td align="left">_842 = core::num::&lt;impl i128&gt;::unsigned_abs(move _844)</td></tr></table>>];
    bb396__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageLive(_860)<br/>_860 = ((_845 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_862)<br/>_862 = _860<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _862)</td></tr></table>>];
    bb397__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_862)<br/>StorageDead(_860)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb398__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/>StorageDead(_848)<br/>StorageDead(_845)<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb399__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_869)<br/>_867 = (((*_868).1: state::perp_market::AMM).14: i128)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>_873 = _381<br/></td></tr><tr><td align="left">_872 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _873)</td></tr></table>>];
    bb400__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/></td></tr><tr><td align="left">_871 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _872)</td></tr></table>>];
    bb401__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_872)<br/>_874 = discriminant(_871)<br/></td></tr><tr><td align="left">switchInt(move _874)</td></tr></table>>];
    bb402__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageLive(_878)<br/>_878 = ((_871 as Continue).0: i128)<br/>_870 = _878<br/>StorageDead(_878)<br/></td></tr><tr><td align="left">_866 = &lt;i128 as SafeMath&gt;::safe_sub(move _867, move _870)</td></tr></table>>];
    bb403__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageLive(_875)<br/>_875 = ((_871 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_877)<br/>_877 = _875<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _877)</td></tr></table>>];
    bb404__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/>StorageDead(_875)<br/>StorageDead(_870)<br/>StorageDead(_867)<br/>StorageDead(_866)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb405__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_870)<br/>StorageDead(_867)<br/></td></tr><tr><td align="left">_865 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _866)</td></tr></table>>];
    bb406__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/>_879 = discriminant(_865)<br/></td></tr><tr><td align="left">switchInt(move _879)</td></tr></table>>];
    bb407__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageLive(_883)<br/>_883 = ((_865 as Continue).0: i128)<br/>_864 = _883<br/>StorageDead(_883)<br/></td></tr><tr><td align="left">_842 = core::num::&lt;impl i128&gt;::unsigned_abs(move _864)</td></tr></table>>];
    bb408__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageLive(_880)<br/>_880 = ((_865 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_882)<br/>_882 = _880<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _882)</td></tr></table>>];
    bb409__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_882)<br/>StorageDead(_880)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_871)<br/>StorageDead(_868)<br/>StorageDead(_865)<br/>StorageDead(_864)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb411__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageLive(_884)<br/>StorageLive(_885)<br/>StorageLive(_886)<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>_888 = _842<br/>StorageLive(_889)<br/>_889 = _835<br/>_887 = Le(move _888, move _889)<br/></td></tr><tr><td align="left">switchInt(move _887)</td></tr></table>>];
    bb412__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_889)<br/>StorageDead(_888)<br/>StorageLive(_890)<br/>_890 = ()<br/>_886 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _890)<br/>StorageDead(_890)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb413__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_889)<br/>StorageDead(_888)<br/>StorageLive(_891)<br/>_891 = error::ErrorCode::MaxOpenInterest<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>StorageLive(_899)<br/>StorageLive(_900)<br/>StorageLive(_901)<br/>StorageLive(_902)<br/>_1029 = const _<br/>_902 = &amp;(*_1029)<br/>_901 = &amp;(*_902)<br/>_900 = move _901 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_901)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>StorageLive(_906)<br/>StorageLive(_907)<br/>StorageLive(_908)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>_910 = &amp;_891<br/>_909 = &amp;(*_910)<br/></td></tr><tr><td align="left">_908 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _909)</td></tr></table>>];
    bb414__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_909)<br/>_907 = [move _908]<br/>StorageDead(_908)<br/>_906 = &amp;_907<br/>_905 = &amp;(*_906)<br/>_904 = move _905 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_905)<br/></td></tr><tr><td align="left">_899 = Arguments::&lt;'_&gt;::new_v1(move _900, move _904)</td></tr></table>>];
    bb415__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_904)<br/>StorageDead(_900)<br/></td></tr><tr><td align="left">_898 = format(move _899)</td></tr></table>>];
    bb416__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_899)<br/>StorageDead(_910)<br/>StorageDead(_907)<br/>StorageDead(_906)<br/>StorageDead(_902)<br/>_897 = move _898<br/>StorageDead(_898)<br/>_896 = &amp;_897<br/>_895 = &amp;(*_896)<br/></td></tr><tr><td align="left">_894 = &lt;String as Deref&gt;::deref(move _895)</td></tr></table>>];
    bb417__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">_893 = &amp;(*_894)<br/>StorageDead(_895)<br/></td></tr><tr><td align="left">_892 = solana_program::log::sol_log(move _893)</td></tr></table>>];
    bb418__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_893)<br/></td></tr><tr><td align="left">drop(_897)</td></tr></table>>];
    bb419__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_897)<br/>StorageDead(_896)<br/>StorageDead(_894)<br/>StorageDead(_892)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>StorageLive(_921)<br/>_1028 = const _<br/>_921 = &amp;(*_1028)<br/>_920 = &amp;(*_921)<br/>_919 = move _920 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_920)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>_929 = &amp;_381<br/>_928 = &amp;(*_929)<br/></td></tr><tr><td align="left">_927 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _928)</td></tr></table>>];
    bb420__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_928)<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>StorageLive(_932)<br/>_932 = &amp;(_9.6: u16)<br/>_931 = &amp;(*_932)<br/></td></tr><tr><td align="left">_930 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _931)</td></tr></table>>];
    bb421__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_931)<br/>_926 = [move _927, move _930]<br/>StorageDead(_930)<br/>StorageDead(_927)<br/>_925 = &amp;_926<br/>_924 = &amp;(*_925)<br/>_923 = move _924 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_924)<br/></td></tr><tr><td align="left">_918 = Arguments::&lt;'_&gt;::new_v1(move _919, move _923)</td></tr></table>>];
    bb422__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_923)<br/>StorageDead(_919)<br/></td></tr><tr><td align="left">_917 = format(move _918)</td></tr></table>>];
    bb423__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_918)<br/>StorageDead(_932)<br/>StorageDead(_929)<br/>StorageDead(_926)<br/>StorageDead(_925)<br/>StorageDead(_921)<br/>_916 = move _917<br/>StorageDead(_917)<br/>_915 = &amp;_916<br/>_914 = &amp;(*_915)<br/></td></tr><tr><td align="left">_913 = &lt;String as Deref&gt;::deref(move _914)</td></tr></table>>];
    bb424__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">_912 = &amp;(*_913)<br/>StorageDead(_914)<br/></td></tr><tr><td align="left">_911 = solana_program::log::sol_log(move _912)</td></tr></table>>];
    bb425__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/></td></tr><tr><td align="left">drop(_916)</td></tr></table>>];
    bb426__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_916)<br/>StorageDead(_915)<br/>StorageDead(_913)<br/>StorageDead(_911)<br/>StorageLive(_933)<br/>_933 = _891<br/>_886 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _933)<br/>StorageDead(_933)<br/>StorageDead(_891)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb427__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_887)<br/></td></tr><tr><td align="left">_885 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _886)</td></tr></table>>];
    bb428__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/>_934 = discriminant(_885)<br/></td></tr><tr><td align="left">switchInt(move _934)</td></tr></table>>];
    bb429__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageLive(_938)<br/>_938 = ((_885 as Continue).0: ())<br/>_884 = _938<br/>StorageDead(_938)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/>_838 = const ()<br/>StorageDead(_842)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb430__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageLive(_935)<br/>_935 = ((_885 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_937)<br/>_937 = _935<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _937)</td></tr></table>>];
    bb431__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_937)<br/>StorageDead(_935)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb432__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">_838 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb434__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>StorageDead(_839)<br/>StorageDead(_838)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>StorageLive(_945)<br/>_945 = &amp;_3<br/>_944 = &amp;(*_945)<br/>StorageLive(_946)<br/>StorageLive(_947)<br/>_947 = &amp;_654<br/>_946 = &amp;(*_947)<br/></td></tr><tr><td align="left">_943 = get_taker_and_maker_for_order_record(move _944, move _946)</td></tr></table>>];
    bb435__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageDead(_946)<br/>StorageDead(_944)<br/>StorageLive(_939)<br/>_939 = (_943.0: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_940)<br/>_940 = (_943.1: std::option::Option&lt;state::user::Order&gt;)<br/>StorageLive(_941)<br/>_941 = (_943.2: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;)<br/>StorageLive(_942)<br/>_942 = (_943.3: std::option::Option&lt;state::user::Order&gt;)<br/>StorageDead(_947)<br/>StorageDead(_945)<br/>StorageDead(_943)<br/>StorageLive(_948)<br/>StorageLive(_949)<br/>StorageLive(_950)<br/>StorageLive(_951)<br/>_951 = _11<br/>StorageLive(_952)<br/>_952 = OrderAction::Place<br/>StorageLive(_953)<br/>_953 = (_10.4: state::events::OrderActionExplanation)<br/>StorageLive(_954)<br/>_954 = _206<br/>StorageLive(_955)<br/>_955 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_956)<br/>_956 = Option::&lt;u64&gt;::None<br/>StorageLive(_957)<br/>_957 = Option::&lt;u64&gt;::None<br/>StorageLive(_958)<br/>_958 = Option::&lt;u64&gt;::None<br/>StorageLive(_959)<br/>_959 = Option::&lt;u64&gt;::None<br/>StorageLive(_960)<br/>_960 = Option::&lt;u64&gt;::None<br/>StorageLive(_961)<br/>_961 = Option::&lt;u64&gt;::None<br/>StorageLive(_962)<br/>_962 = Option::&lt;u64&gt;::None<br/>StorageLive(_963)<br/>_963 = Option::&lt;i64&gt;::None<br/>StorageLive(_964)<br/>_964 = Option::&lt;u64&gt;::None<br/>StorageLive(_965)<br/>_965 = _939<br/>StorageLive(_966)<br/>_966 = _940<br/>StorageLive(_967)<br/>_967 = _941<br/>StorageLive(_968)<br/>_968 = _942<br/>StorageLive(_969)<br/>StorageLive(_970)<br/>StorageLive(_971)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>_973 = &amp;mut (*_6)<br/>StorageLive(_974)<br/>StorageLive(_975)<br/>StorageLive(_976)<br/>StorageLive(_977)<br/>StorageLive(_978)<br/>StorageLive(_979)<br/>_979 = &amp;(*_207)<br/></td></tr><tr><td align="left">_978 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _979)</td></tr></table>>];
    bb436__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">_977 = &amp;(*_978)<br/>StorageDead(_979)<br/></td></tr><tr><td align="left">_976 = PerpMarket::oracle_id(move _977)</td></tr></table>>];
    bb437__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_977)<br/>_975 = &amp;_976<br/>_974 = &amp;(*_975)<br/></td></tr><tr><td align="left">_972 = OracleMap::&lt;'_&gt;::get_price_data(move _973, move _974)</td></tr></table>>];
    bb438__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_974)<br/>StorageDead(_973)<br/></td></tr><tr><td align="left">_971 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _972)</td></tr></table>>];
    bb439__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_972)<br/>_980 = discriminant(_971)<br/></td></tr><tr><td align="left">switchInt(move _980)</td></tr></table>>];
    bb440__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageLive(_984)<br/>_984 = ((_971 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_970 = _984<br/>StorageDead(_984)<br/>_969 = ((*_970).0: i64)<br/>StorageLive(_985)<br/>_985 = _640<br/>StorageLive(_986)<br/>_986 = Option::&lt;u64&gt;::None<br/>StorageLive(_987)<br/>_987 = Option::&lt;u64&gt;::None<br/>StorageLive(_988)<br/>_988 = Option::&lt;u64&gt;::None<br/>StorageLive(_989)<br/>_989 = Option::&lt;u64&gt;::None<br/>StorageLive(_990)<br/>_990 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">_950 = get_order_action_record(move _951, move _952, move _953, move _954, move _955, move _956, move _957, move _958, move _959, move _960, move _961, move _962, move _963, move _964, move _965, move _966, move _967, move _968, move _969, move _985, move _986, move _987, move _988, move _989, move _990)</td></tr></table>>];
    bb441__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageLive(_981)<br/>_981 = ((_971 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_983)<br/>_983 = _981<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _983)</td></tr></table>>];
    bb442__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageDead(_983)<br/>StorageDead(_981)<br/>StorageDead(_969)<br/>StorageDead(_968)<br/>StorageDead(_967)<br/>StorageDead(_966)<br/>StorageDead(_965)<br/>StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_962)<br/>StorageDead(_961)<br/>StorageDead(_960)<br/>StorageDead(_959)<br/>StorageDead(_958)<br/>StorageDead(_957)<br/>StorageDead(_956)<br/>StorageDead(_955)<br/>StorageDead(_954)<br/>StorageDead(_953)<br/>StorageDead(_952)<br/>StorageDead(_951)<br/>StorageDead(_950)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb443__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_990)<br/>StorageDead(_989)<br/>StorageDead(_988)<br/>StorageDead(_987)<br/>StorageDead(_986)<br/>StorageDead(_985)<br/>StorageDead(_969)<br/>StorageDead(_968)<br/>StorageDead(_967)<br/>StorageDead(_966)<br/>StorageDead(_965)<br/>StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_962)<br/>StorageDead(_961)<br/>StorageDead(_960)<br/>StorageDead(_959)<br/>StorageDead(_958)<br/>StorageDead(_957)<br/>StorageDead(_956)<br/>StorageDead(_955)<br/>StorageDead(_954)<br/>StorageDead(_953)<br/>StorageDead(_952)<br/>StorageDead(_951)<br/></td></tr><tr><td align="left">_949 = &lt;std::result::Result&lt;OrderActionRecord, error::ErrorCode&gt; as Try&gt;::branch(move _950)</td></tr></table>>];
    bb444__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_950)<br/>_991 = discriminant(_949)<br/></td></tr><tr><td align="left">switchInt(move _991)</td></tr></table>>];
    bb445__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageLive(_995)<br/>_995 = move ((_949 as Continue).0: state::events::OrderActionRecord)<br/>_948 = move _995<br/>StorageDead(_995)<br/>StorageDead(_978)<br/>StorageDead(_976)<br/>StorageDead(_975)<br/>StorageDead(_971)<br/>StorageDead(_970)<br/>StorageDead(_949)<br/>StorageLive(_996)<br/>StorageLive(_997)<br/>StorageLive(_998)<br/>StorageLive(_999)<br/>_999 = move _948<br/></td></tr><tr><td align="left">_998 = emit_stack::&lt;OrderActionRecord, 464&gt;(move _999)</td></tr></table>>];
    bb446__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageLive(_992)<br/>_992 = ((_949 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_994)<br/>_994 = _992<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _994)</td></tr></table>>];
    bb447__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_994)<br/>StorageDead(_992)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb448__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_999)<br/></td></tr><tr><td align="left">_997 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _998)</td></tr></table>>];
    bb449__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_998)<br/>_1000 = discriminant(_997)<br/></td></tr><tr><td align="left">switchInt(move _1000)</td></tr></table>>];
    bb450__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageLive(_1004)<br/>_1004 = ((_997 as Continue).0: ())<br/>_996 = _1004<br/>StorageDead(_1004)<br/>StorageDead(_997)<br/>StorageDead(_996)<br/>StorageLive(_1005)<br/>StorageLive(_1006)<br/>_1006 = _11<br/>StorageLive(_1007)<br/>_1007 = _3<br/>StorageLive(_1008)<br/>StorageLive(_1009)<br/>_1009 = _158<br/>_1010 = Len(((*_2).5: [state::user::Order; 32]))<br/>_1011 = Lt(_1009, _1010)<br/></td></tr><tr><td align="left">assert(move _1011, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _1010, _1009)</td></tr></table>>];
    bb451__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageLive(_1001)<br/>_1001 = ((_997 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1003)<br/>_1003 = _1001<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1003)</td></tr></table>>];
    bb452__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1003)<br/>StorageDead(_1001)<br/>StorageDead(_997)<br/>StorageDead(_996)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb453__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">_1008 = ((*_2).5: [state::user::Order; 32])[_1009]<br/>_1005 = OrderRecord { ts: move _1006, user: move _1007, order: move _1008 }<br/>StorageDead(_1008)<br/>StorageDead(_1007)<br/>StorageDead(_1006)<br/>StorageDead(_1009)<br/>StorageLive(_1012)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>_1015 = move _1005<br/></td></tr><tr><td align="left">_1014 = emit_stack::&lt;OrderRecord, 192&gt;(move _1015)</td></tr></table>>];
    bb454__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1015)<br/></td></tr><tr><td align="left">_1013 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1014)</td></tr></table>>];
    bb455__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1014)<br/>_1016 = discriminant(_1013)<br/></td></tr><tr><td align="left">switchInt(move _1016)</td></tr></table>>];
    bb456__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageLive(_1020)<br/>_1020 = ((_1013 as Continue).0: ())<br/>_1012 = _1020<br/>StorageDead(_1020)<br/>StorageDead(_1013)<br/>StorageDead(_1012)<br/>StorageLive(_1021)<br/>StorageLive(_1022)<br/>_1022 = &amp;mut (*_2)<br/>StorageLive(_1023)<br/>_1023 = _12<br/></td></tr><tr><td align="left">_1021 = User::update_last_active_slot(move _1022, move _1023)</td></tr></table>>];
    bb457__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageLive(_1017)<br/>_1017 = ((_1013 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1019)<br/>_1019 = _1017<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1019)</td></tr></table>>];
    bb458__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1019)<br/>StorageDead(_1017)<br/>StorageDead(_1013)<br/>StorageDead(_1012)<br/>StorageDead(_1005)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb459__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1023)<br/>StorageDead(_1022)<br/>StorageDead(_1021)<br/>StorageLive(_1024)<br/>_1024 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1024)<br/>StorageDead(_1024)<br/>StorageDead(_1005)<br/>StorageDead(_948)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/>StorageDead(_940)<br/>StorageDead(_939)<br/>StorageDead(_835)<br/>StorageDead(_744)<br/>StorageDead(_720)<br/>StorageDead(_654)<br/>StorageDead(_646)<br/>StorageDead(_640)<br/>StorageDead(_535)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_517)<br/>StorageDead(_484)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageDead(_365)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_208)</td></tr></table>>];
    bb460__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_158)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb461__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_978)<br/>StorageDead(_976)<br/>StorageDead(_975)<br/>StorageDead(_971)<br/>StorageDead(_970)<br/>StorageDead(_949)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb462__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageDead(_948)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/>StorageDead(_940)<br/>StorageDead(_939)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb463__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_871)<br/>StorageDead(_868)<br/>StorageDead(_865)<br/>StorageDead(_864)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb464__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/>StorageDead(_848)<br/>StorageDead(_845)<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb465__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_842)<br/>StorageDead(_841)<br/>StorageDead(_839)<br/>StorageDead(_838)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb466__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_835)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb467__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageDead(_744)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb468__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageDead(_727)<br/>StorageDead(_725)<br/>StorageDead(_723)<br/>StorageDead(_722)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb469__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_720)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb470__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_671)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb471__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_654)<br/>StorageDead(_646)<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb472__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>StorageDead(_545)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb473__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>StorageDead(_542)<br/>StorageDead(_541)<br/>StorageDead(_540)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb474__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>StorageDead(_547)<br/>StorageDead(_544)<br/>StorageDead(_539)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb475__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_535)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb476__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb477__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_445)<br/>StorageDead(_443)<br/>StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb478__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb479__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb480__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_208)</td></tr></table>>];
    bb481__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb482__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb483__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb484__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb485__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb486__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left">return</td></tr></table>>];
    bb487__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">487 (cleanup)</td></tr><tr><td align="left">drop(_916)</td></tr></table>>];
    bb488__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">488 (cleanup)</td></tr><tr><td align="left">drop(_897)</td></tr></table>>];
    bb489__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">489 (cleanup)</td></tr><tr><td align="left">drop(_617)</td></tr></table>>];
    bb490__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">490 (cleanup)</td></tr><tr><td align="left">drop(_585)</td></tr></table>>];
    bb491__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">491 (cleanup)</td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb492__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">492 (cleanup)</td></tr><tr><td align="left">drop(_398)</td></tr></table>>];
    bb493__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">493 (cleanup)</td></tr><tr><td align="left">drop(_352)</td></tr></table>>];
    bb494__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">494 (cleanup)</td></tr><tr><td align="left">drop(_333)</td></tr></table>>];
    bb495__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">495 (cleanup)</td></tr><tr><td align="left">drop(_298)</td></tr></table>>];
    bb496__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">496 (cleanup)</td></tr><tr><td align="left">drop(_279)</td></tr></table>>];
    bb497__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">497 (cleanup)</td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb498__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">498 (cleanup)</td></tr><tr><td align="left">drop(_208)</td></tr></table>>];
    bb499__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">499 (cleanup)</td></tr><tr><td align="left">drop(_191)</td></tr></table>>];
    bb500__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">500 (cleanup)</td></tr><tr><td align="left">drop(_135)</td></tr></table>>];
    bb501__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">501 (cleanup)</td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb502__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">502 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb503__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">503 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb504__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">504 (cleanup)</td></tr><tr><td align="left" balign="left">_1050 = discriminant(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb505__0_500 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">505 (cleanup)</td></tr><tr><td align="left" balign="left">_1051 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_500 -> bb1__0_500 [label="return"];
    bb1__0_500 -> bb3__0_500 [label="0"];
    bb1__0_500 -> bb2__0_500 [label="otherwise"];
    bb2__0_500 -> bb10__0_500 [label=""];
    bb3__0_500 -> bb4__0_500 [label="return"];
    bb4__0_500 -> bb5__0_500 [label="return"];
    bb5__0_500 -> bb6__0_500 [label="0"];
    bb5__0_500 -> bb8__0_500 [label="1"];
    bb5__0_500 -> bb7__0_500 [label="otherwise"];
    bb6__0_500 -> bb10__0_500 [label=""];
    bb8__0_500 -> bb9__0_500 [label="return"];
    bb9__0_500 -> bb485__0_500 [label=""];
    bb10__0_500 -> bb11__0_500 [label="return"];
    bb11__0_500 -> bb13__0_500 [label="0"];
    bb11__0_500 -> bb12__0_500 [label="otherwise"];
    bb12__0_500 -> bb14__0_500 [label="return"];
    bb13__0_500 -> bb20__0_500 [label=""];
    bb14__0_500 -> bb15__0_500 [label="return"];
    bb15__0_500 -> bb16__0_500 [label="return"];
    bb16__0_500 -> bb17__0_500 [label="return"];
    bb16__0_500 -> bb502__0_500 [label="unwind"];
    bb17__0_500 -> bb18__0_500 [label="return"];
    bb17__0_500 -> bb502__0_500 [label="unwind"];
    bb18__0_500 -> bb19__0_500 [label="return"];
    bb18__0_500 -> bb503__0_500 [label="unwind"];
    bb19__0_500 -> bb20__0_500 [label=""];
    bb20__0_500 -> bb21__0_500 [label="return"];
    bb21__0_500 -> bb22__0_500 [label="0"];
    bb21__0_500 -> bb23__0_500 [label="1"];
    bb21__0_500 -> bb7__0_500 [label="otherwise"];
    bb22__0_500 -> bb25__0_500 [label="return"];
    bb23__0_500 -> bb24__0_500 [label="return"];
    bb24__0_500 -> bb485__0_500 [label=""];
    bb25__0_500 -> bb52__0_500 [label="0"];
    bb25__0_500 -> bb26__0_500 [label="otherwise"];
    bb26__0_500 -> bb27__0_500 [label="1"];
    bb26__0_500 -> bb50__0_500 [label="otherwise"];
    bb27__0_500 -> bb28__0_500 [label="return"];
    bb28__0_500 -> bb29__0_500 [label="return"];
    bb28__0_500 -> bb503__0_500 [label="unwind"];
    bb29__0_500 -> bb30__0_500 [label="return"];
    bb29__0_500 -> bb503__0_500 [label="unwind"];
    bb30__0_500 -> bb31__0_500 [label="0"];
    bb30__0_500 -> bb32__0_500 [label="1"];
    bb30__0_500 -> bb7__0_500 [label="otherwise"];
    bb31__0_500 -> bb34__0_500 [label="return"];
    bb31__0_500 -> bb501__0_500 [label="unwind"];
    bb32__0_500 -> bb33__0_500 [label="return"];
    bb32__0_500 -> bb505__0_500 [label="unwind"];
    bb33__0_500 -> bb483__0_500 [label=""];
    bb34__0_500 -> bb35__0_500 [label="return"];
    bb34__0_500 -> bb501__0_500 [label="unwind"];
    bb35__0_500 -> bb37__0_500 [label="0"];
    bb35__0_500 -> bb36__0_500 [label="otherwise"];
    bb36__0_500 -> bb38__0_500 [label="return"];
    bb36__0_500 -> bb501__0_500 [label="unwind"];
    bb37__0_500 -> bb39__0_500 [label=""];
    bb38__0_500 -> bb46__0_500 [label="0"];
    bb38__0_500 -> bb39__0_500 [label="otherwise"];
    bb39__0_500 -> bb40__0_500 [label="return"];
    bb39__0_500 -> bb501__0_500 [label="unwind"];
    bb40__0_500 -> bb41__0_500 [label="return"];
    bb40__0_500 -> bb501__0_500 [label="unwind"];
    bb41__0_500 -> bb42__0_500 [label="return"];
    bb41__0_500 -> bb501__0_500 [label="unwind"];
    bb42__0_500 -> bb43__0_500 [label="0"];
    bb42__0_500 -> bb44__0_500 [label="1"];
    bb42__0_500 -> bb7__0_500 [label="otherwise"];
    bb43__0_500 -> bb48__0_500 [label=""];
    bb44__0_500 -> bb45__0_500 [label="return"];
    bb44__0_500 -> bb501__0_500 [label="unwind"];
    bb45__0_500 -> bb483__0_500 [label="return"];
    bb45__0_500 -> bb503__0_500 [label="unwind"];
    bb46__0_500 -> bb47__0_500 [label="return"];
    bb46__0_500 -> bb501__0_500 [label="unwind"];
    bb47__0_500 -> bb48__0_500 [label=""];
    bb48__0_500 -> bb49__0_500 [label="return"];
    bb48__0_500 -> bb503__0_500 [label="unwind"];
    bb49__0_500 -> bb53__0_500 [label=""];
    bb50__0_500 -> bb51__0_500 [label="return"];
    bb51__0_500 -> bb484__0_500 [label=""];
    bb52__0_500 -> bb53__0_500 [label=""];
    bb53__0_500 -> bb60__0_500 [label="0"];
    bb53__0_500 -> bb54__0_500 [label="otherwise"];
    bb54__0_500 -> bb55__0_500 [label="return"];
    bb55__0_500 -> bb56__0_500 [label="return"];
    bb56__0_500 -> bb57__0_500 [label="0"];
    bb56__0_500 -> bb58__0_500 [label="1"];
    bb56__0_500 -> bb7__0_500 [label="otherwise"];
    bb57__0_500 -> bb61__0_500 [label=""];
    bb58__0_500 -> bb59__0_500 [label="return"];
    bb59__0_500 -> bb485__0_500 [label=""];
    bb60__0_500 -> bb61__0_500 [label=""];
    bb61__0_500 -> bb62__0_500 [label="return"];
    bb62__0_500 -> bb78__0_500 [label="0"];
    bb62__0_500 -> bb63__0_500 [label="otherwise"];
    bb63__0_500 -> bb65__0_500 [label="0"];
    bb63__0_500 -> bb64__0_500 [label="otherwise"];
    bb64__0_500 -> bb73__0_500 [label=""];
    bb65__0_500 -> bb66__0_500 [label="return"];
    bb66__0_500 -> bb67__0_500 [label="return"];
    bb67__0_500 -> bb68__0_500 [label="return"];
    bb68__0_500 -> bb69__0_500 [label="return"];
    bb68__0_500 -> bb500__0_500 [label="unwind"];
    bb69__0_500 -> bb70__0_500 [label="return"];
    bb69__0_500 -> bb500__0_500 [label="unwind"];
    bb70__0_500 -> bb71__0_500 [label="return"];
    bb70__0_500 -> bb503__0_500 [label="unwind"];
    bb71__0_500 -> bb72__0_500 [label="return"];
    bb72__0_500 -> bb73__0_500 [label=""];
    bb73__0_500 -> bb74__0_500 [label="return"];
    bb74__0_500 -> bb75__0_500 [label="0"];
    bb74__0_500 -> bb76__0_500 [label="1"];
    bb74__0_500 -> bb7__0_500 [label="otherwise"];
    bb75__0_500 -> bb79__0_500 [label=""];
    bb76__0_500 -> bb77__0_500 [label="return"];
    bb77__0_500 -> bb485__0_500 [label=""];
    bb78__0_500 -> bb79__0_500 [label=""];
    bb79__0_500 -> bb80__0_500 [label="return"];
    bb80__0_500 -> bb81__0_500 [label="return"];
    bb81__0_500 -> bb82__0_500 [label="return"];
    bb82__0_500 -> bb83__0_500 [label="return"];
    bb83__0_500 -> bb84__0_500 [label="0"];
    bb83__0_500 -> bb85__0_500 [label="1"];
    bb83__0_500 -> bb7__0_500 [label="otherwise"];
    bb84__0_500 -> bb88__0_500 [label="0"];
    bb84__0_500 -> bb87__0_500 [label="otherwise"];
    bb85__0_500 -> bb86__0_500 [label="return"];
    bb86__0_500 -> bb482__0_500 [label=""];
    bb87__0_500 -> bb89__0_500 [label="return"];
    bb88__0_500 -> bb100__0_500 [label=""];
    bb89__0_500 -> bb90__0_500 [label="return"];
    bb90__0_500 -> bb91__0_500 [label="return"];
    bb91__0_500 -> bb99__0_500 [label="0"];
    bb91__0_500 -> bb92__0_500 [label="otherwise"];
    bb92__0_500 -> bb93__0_500 [label="return"];
    bb93__0_500 -> bb94__0_500 [label="return"];
    bb94__0_500 -> bb95__0_500 [label="return"];
    bb95__0_500 -> bb96__0_500 [label="return"];
    bb95__0_500 -> bb499__0_500 [label="unwind"];
    bb96__0_500 -> bb97__0_500 [label="return"];
    bb96__0_500 -> bb499__0_500 [label="unwind"];
    bb97__0_500 -> bb98__0_500 [label="return"];
    bb97__0_500 -> bb503__0_500 [label="unwind"];
    bb98__0_500 -> bb482__0_500 [label=""];
    bb99__0_500 -> bb100__0_500 [label=""];
    bb100__0_500 -> bb101__0_500 [label="return"];
    bb101__0_500 -> bb102__0_500 [label="return"];
    bb101__0_500 -> bb503__0_500 [label="unwind"];
    bb102__0_500 -> bb103__0_500 [label="0"];
    bb102__0_500 -> bb104__0_500 [label="1"];
    bb102__0_500 -> bb7__0_500 [label="otherwise"];
    bb103__0_500 -> bb106__0_500 [label="return"];
    bb103__0_500 -> bb498__0_500 [label="unwind"];
    bb104__0_500 -> bb105__0_500 [label="return"];
    bb104__0_500 -> bb504__0_500 [label="unwind"];
    bb105__0_500 -> bb481__0_500 [label=""];
    bb106__0_500 -> bb107__0_500 [label="return"];
    bb106__0_500 -> bb498__0_500 [label="unwind"];
    bb107__0_500 -> bb108__0_500 [label="return"];
    bb107__0_500 -> bb498__0_500 [label="unwind"];
    bb108__0_500 -> bb109__0_500 [label="0"];
    bb108__0_500 -> bb110__0_500 [label="1"];
    bb108__0_500 -> bb7__0_500 [label="otherwise"];
    bb109__0_500 -> bb112__0_500 [label="return"];
    bb109__0_500 -> bb498__0_500 [label="unwind"];
    bb110__0_500 -> bb111__0_500 [label="return"];
    bb110__0_500 -> bb498__0_500 [label="unwind"];
    bb111__0_500 -> bb480__0_500 [label=""];
    bb112__0_500 -> bb114__0_500 [label="0"];
    bb112__0_500 -> bb113__0_500 [label="otherwise"];
    bb113__0_500 -> bb115__0_500 [label=""];
    bb114__0_500 -> bb115__0_500 [label=""];
    bb115__0_500 -> bb116__0_500 [label="0"];
    bb115__0_500 -> bb117__0_500 [label="otherwise"];
    bb116__0_500 -> bb125__0_500 [label=""];
    bb117__0_500 -> bb118__0_500 [label="return"];
    bb117__0_500 -> bb498__0_500 [label="unwind"];
    bb118__0_500 -> bb119__0_500 [label="return"];
    bb118__0_500 -> bb498__0_500 [label="unwind"];
    bb119__0_500 -> bb120__0_500 [label="return"];
    bb119__0_500 -> bb498__0_500 [label="unwind"];
    bb120__0_500 -> bb121__0_500 [label="return"];
    bb120__0_500 -> bb497__0_500 [label="unwind"];
    bb121__0_500 -> bb122__0_500 [label="return"];
    bb121__0_500 -> bb497__0_500 [label="unwind"];
    bb122__0_500 -> bb123__0_500 [label="return"];
    bb122__0_500 -> bb498__0_500 [label="unwind"];
    bb123__0_500 -> bb124__0_500 [label="return"];
    bb123__0_500 -> bb498__0_500 [label="unwind"];
    bb124__0_500 -> bb125__0_500 [label=""];
    bb125__0_500 -> bb126__0_500 [label="return"];
    bb125__0_500 -> bb498__0_500 [label="unwind"];
    bb126__0_500 -> bb127__0_500 [label="0"];
    bb126__0_500 -> bb128__0_500 [label="1"];
    bb126__0_500 -> bb7__0_500 [label="otherwise"];
    bb127__0_500 -> bb131__0_500 [label="0"];
    bb127__0_500 -> bb130__0_500 [label="otherwise"];
    bb128__0_500 -> bb129__0_500 [label="return"];
    bb128__0_500 -> bb498__0_500 [label="unwind"];
    bb129__0_500 -> bb480__0_500 [label=""];
    bb130__0_500 -> bb144__0_500 [label=""];
    bb131__0_500 -> bb132__0_500 [label="return"];
    bb131__0_500 -> bb498__0_500 [label="unwind"];
    bb132__0_500 -> bb133__0_500 [label="return"];
    bb132__0_500 -> bb498__0_500 [label="unwind"];
    bb133__0_500 -> bb134__0_500 [label="return"];
    bb133__0_500 -> bb498__0_500 [label="unwind"];
    bb134__0_500 -> bb135__0_500 [label="return"];
    bb134__0_500 -> bb496__0_500 [label="unwind"];
    bb135__0_500 -> bb136__0_500 [label="return"];
    bb135__0_500 -> bb496__0_500 [label="unwind"];
    bb136__0_500 -> bb137__0_500 [label="return"];
    bb136__0_500 -> bb498__0_500 [label="unwind"];
    bb137__0_500 -> bb138__0_500 [label="return"];
    bb137__0_500 -> bb498__0_500 [label="unwind"];
    bb138__0_500 -> bb139__0_500 [label="return"];
    bb138__0_500 -> bb498__0_500 [label="unwind"];
    bb139__0_500 -> bb140__0_500 [label="return"];
    bb139__0_500 -> bb498__0_500 [label="unwind"];
    bb140__0_500 -> bb141__0_500 [label="return"];
    bb140__0_500 -> bb495__0_500 [label="unwind"];
    bb141__0_500 -> bb142__0_500 [label="return"];
    bb141__0_500 -> bb495__0_500 [label="unwind"];
    bb142__0_500 -> bb143__0_500 [label="return"];
    bb142__0_500 -> bb498__0_500 [label="unwind"];
    bb143__0_500 -> bb144__0_500 [label=""];
    bb144__0_500 -> bb145__0_500 [label="return"];
    bb144__0_500 -> bb498__0_500 [label="unwind"];
    bb145__0_500 -> bb146__0_500 [label="0"];
    bb145__0_500 -> bb147__0_500 [label="1"];
    bb145__0_500 -> bb7__0_500 [label="otherwise"];
    bb146__0_500 -> bb149__0_500 [label="return"];
    bb146__0_500 -> bb498__0_500 [label="unwind"];
    bb147__0_500 -> bb148__0_500 [label="return"];
    bb147__0_500 -> bb498__0_500 [label="unwind"];
    bb148__0_500 -> bb480__0_500 [label=""];
    bb149__0_500 -> bb150__0_500 [label="return"];
    bb149__0_500 -> bb498__0_500 [label="unwind"];
    bb150__0_500 -> bb152__0_500 [label="0"];
    bb150__0_500 -> bb151__0_500 [label="otherwise"];
    bb151__0_500 -> bb153__0_500 [label="return"];
    bb151__0_500 -> bb498__0_500 [label="unwind"];
    bb152__0_500 -> bb164__0_500 [label=""];
    bb153__0_500 -> bb154__0_500 [label="return"];
    bb153__0_500 -> bb498__0_500 [label="unwind"];
    bb154__0_500 -> bb155__0_500 [label="return"];
    bb154__0_500 -> bb498__0_500 [label="unwind"];
    bb155__0_500 -> bb156__0_500 [label="return"];
    bb155__0_500 -> bb494__0_500 [label="unwind"];
    bb156__0_500 -> bb157__0_500 [label="return"];
    bb156__0_500 -> bb494__0_500 [label="unwind"];
    bb157__0_500 -> bb158__0_500 [label="return"];
    bb157__0_500 -> bb498__0_500 [label="unwind"];
    bb158__0_500 -> bb159__0_500 [label="return"];
    bb158__0_500 -> bb498__0_500 [label="unwind"];
    bb159__0_500 -> bb160__0_500 [label="return"];
    bb159__0_500 -> bb498__0_500 [label="unwind"];
    bb160__0_500 -> bb161__0_500 [label="return"];
    bb160__0_500 -> bb493__0_500 [label="unwind"];
    bb161__0_500 -> bb162__0_500 [label="return"];
    bb161__0_500 -> bb493__0_500 [label="unwind"];
    bb162__0_500 -> bb163__0_500 [label="return"];
    bb162__0_500 -> bb498__0_500 [label="unwind"];
    bb163__0_500 -> bb164__0_500 [label=""];
    bb164__0_500 -> bb165__0_500 [label="return"];
    bb164__0_500 -> bb498__0_500 [label="unwind"];
    bb165__0_500 -> bb166__0_500 [label="0"];
    bb165__0_500 -> bb167__0_500 [label="1"];
    bb165__0_500 -> bb7__0_500 [label="otherwise"];
    bb166__0_500 -> bb169__0_500 [label="return"];
    bb166__0_500 -> bb498__0_500 [label="unwind"];
    bb167__0_500 -> bb168__0_500 [label="return"];
    bb167__0_500 -> bb498__0_500 [label="unwind"];
    bb168__0_500 -> bb480__0_500 [label=""];
    bb169__0_500 -> bb170__0_500 [label="return"];
    bb169__0_500 -> bb498__0_500 [label="unwind"];
    bb170__0_500 -> bb171__0_500 [label="return"];
    bb170__0_500 -> bb498__0_500 [label="unwind"];
    bb171__0_500 -> bb172__0_500 [label="0"];
    bb171__0_500 -> bb173__0_500 [label="1"];
    bb171__0_500 -> bb7__0_500 [label="otherwise"];
    bb172__0_500 -> bb175__0_500 [label="return"];
    bb172__0_500 -> bb498__0_500 [label="unwind"];
    bb173__0_500 -> bb174__0_500 [label="return"];
    bb173__0_500 -> bb498__0_500 [label="unwind"];
    bb174__0_500 -> bb479__0_500 [label=""];
    bb175__0_500 -> bb177__0_500 [label="0"];
    bb175__0_500 -> bb176__0_500 [label="otherwise"];
    bb176__0_500 -> bb192__0_500 [label=""];
    bb177__0_500 -> bb178__0_500 [label="return"];
    bb177__0_500 -> bb498__0_500 [label="unwind"];
    bb178__0_500 -> bb179__0_500 [label="return"];
    bb178__0_500 -> bb498__0_500 [label="unwind"];
    bb179__0_500 -> bb180__0_500 [label="return"];
    bb179__0_500 -> bb498__0_500 [label="unwind"];
    bb180__0_500 -> bb181__0_500 [label="return"];
    bb180__0_500 -> bb492__0_500 [label="unwind"];
    bb181__0_500 -> bb182__0_500 [label="return"];
    bb181__0_500 -> bb492__0_500 [label="unwind"];
    bb182__0_500 -> bb183__0_500 [label="return"];
    bb182__0_500 -> bb498__0_500 [label="unwind"];
    bb183__0_500 -> bb184__0_500 [label="return"];
    bb183__0_500 -> bb498__0_500 [label="unwind"];
    bb184__0_500 -> bb185__0_500 [label="return"];
    bb184__0_500 -> bb498__0_500 [label="unwind"];
    bb185__0_500 -> bb186__0_500 [label="return"];
    bb185__0_500 -> bb498__0_500 [label="unwind"];
    bb186__0_500 -> bb187__0_500 [label="return"];
    bb186__0_500 -> bb498__0_500 [label="unwind"];
    bb187__0_500 -> bb188__0_500 [label="return"];
    bb187__0_500 -> bb498__0_500 [label="unwind"];
    bb188__0_500 -> bb189__0_500 [label="return"];
    bb188__0_500 -> bb491__0_500 [label="unwind"];
    bb189__0_500 -> bb190__0_500 [label="return"];
    bb189__0_500 -> bb491__0_500 [label="unwind"];
    bb190__0_500 -> bb191__0_500 [label="return"];
    bb190__0_500 -> bb498__0_500 [label="unwind"];
    bb191__0_500 -> bb192__0_500 [label=""];
    bb192__0_500 -> bb193__0_500 [label="return"];
    bb192__0_500 -> bb498__0_500 [label="unwind"];
    bb193__0_500 -> bb194__0_500 [label="0"];
    bb193__0_500 -> bb195__0_500 [label="1"];
    bb193__0_500 -> bb7__0_500 [label="otherwise"];
    bb194__0_500 -> bb198__0_500 [label="0"];
    bb194__0_500 -> bb197__0_500 [label="otherwise"];
    bb195__0_500 -> bb196__0_500 [label="return"];
    bb195__0_500 -> bb498__0_500 [label="unwind"];
    bb196__0_500 -> bb478__0_500 [label=""];
    bb197__0_500 -> bb199__0_500 [label="return"];
    bb197__0_500 -> bb498__0_500 [label="unwind"];
    bb198__0_500 -> bb208__0_500 [label=""];
    bb199__0_500 -> bb201__0_500 [label="0"];
    bb199__0_500 -> bb200__0_500 [label="otherwise"];
    bb200__0_500 -> bb202__0_500 [label="0"];
    bb200__0_500 -> bb208__0_500 [label="otherwise"];
    bb201__0_500 -> bb202__0_500 [label=""];
    bb202__0_500 -> bb203__0_500 [label="return"];
    bb202__0_500 -> bb498__0_500 [label="unwind"];
    bb203__0_500 -> bb204__0_500 [label="return"];
    bb203__0_500 -> bb498__0_500 [label="unwind"];
    bb204__0_500 -> bb205__0_500 [label="0"];
    bb204__0_500 -> bb206__0_500 [label="1"];
    bb204__0_500 -> bb7__0_500 [label="otherwise"];
    bb205__0_500 -> bb215__0_500 [label=""];
    bb206__0_500 -> bb207__0_500 [label="return"];
    bb206__0_500 -> bb498__0_500 [label="unwind"];
    bb207__0_500 -> bb477__0_500 [label=""];
    bb208__0_500 -> bb209__0_500 [label="return"];
    bb208__0_500 -> bb498__0_500 [label="unwind"];
    bb209__0_500 -> bb210__0_500 [label="return"];
    bb209__0_500 -> bb498__0_500 [label="unwind"];
    bb210__0_500 -> bb211__0_500 [label="return"];
    bb210__0_500 -> bb498__0_500 [label="unwind"];
    bb211__0_500 -> bb212__0_500 [label="0"];
    bb211__0_500 -> bb213__0_500 [label="1"];
    bb211__0_500 -> bb7__0_500 [label="otherwise"];
    bb212__0_500 -> bb215__0_500 [label=""];
    bb213__0_500 -> bb214__0_500 [label="return"];
    bb213__0_500 -> bb498__0_500 [label="unwind"];
    bb214__0_500 -> bb477__0_500 [label=""];
    bb215__0_500 -> bb216__0_500 [label="1"];
    bb215__0_500 -> bb217__0_500 [label="otherwise"];
    bb216__0_500 -> bb222__0_500 [label=""];
    bb217__0_500 -> bb218__0_500 [label="success"];
    bb217__0_500 -> bb498__0_500 [label="unwind"];
    bb218__0_500 -> bb220__0_500 [label="0"];
    bb218__0_500 -> bb219__0_500 [label="otherwise"];
    bb219__0_500 -> bb221__0_500 [label=""];
    bb220__0_500 -> bb221__0_500 [label=""];
    bb221__0_500 -> bb222__0_500 [label=""];
    bb222__0_500 -> bb223__0_500 [label="return"];
    bb222__0_500 -> bb498__0_500 [label="unwind"];
    bb223__0_500 -> bb224__0_500 [label="return"];
    bb223__0_500 -> bb498__0_500 [label="unwind"];
    bb224__0_500 -> bb225__0_500 [label="return"];
    bb224__0_500 -> bb498__0_500 [label="unwind"];
    bb225__0_500 -> bb226__0_500 [label="return"];
    bb225__0_500 -> bb498__0_500 [label="unwind"];
    bb226__0_500 -> bb227__0_500 [label="0"];
    bb226__0_500 -> bb228__0_500 [label="1"];
    bb226__0_500 -> bb7__0_500 [label="otherwise"];
    bb227__0_500 -> bb230__0_500 [label="return"];
    bb227__0_500 -> bb498__0_500 [label="unwind"];
    bb228__0_500 -> bb229__0_500 [label="return"];
    bb228__0_500 -> bb498__0_500 [label="unwind"];
    bb229__0_500 -> bb476__0_500 [label=""];
    bb230__0_500 -> bb232__0_500 [label="0"];
    bb230__0_500 -> bb231__0_500 [label="otherwise"];
    bb231__0_500 -> bb240__0_500 [label=""];
    bb232__0_500 -> bb233__0_500 [label="return"];
    bb232__0_500 -> bb498__0_500 [label="unwind"];
    bb233__0_500 -> bb234__0_500 [label="return"];
    bb233__0_500 -> bb498__0_500 [label="unwind"];
    bb234__0_500 -> bb235__0_500 [label="return"];
    bb234__0_500 -> bb498__0_500 [label="unwind"];
    bb235__0_500 -> bb236__0_500 [label="return"];
    bb235__0_500 -> bb498__0_500 [label="unwind"];
    bb236__0_500 -> bb237__0_500 [label="0"];
    bb236__0_500 -> bb238__0_500 [label="1"];
    bb236__0_500 -> bb7__0_500 [label="otherwise"];
    bb237__0_500 -> bb240__0_500 [label=""];
    bb238__0_500 -> bb239__0_500 [label="return"];
    bb238__0_500 -> bb498__0_500 [label="unwind"];
    bb239__0_500 -> bb476__0_500 [label=""];
    bb240__0_500 -> bb241__0_500 [label="return"];
    bb240__0_500 -> bb498__0_500 [label="unwind"];
    bb241__0_500 -> bb242__0_500 [label="return"];
    bb241__0_500 -> bb498__0_500 [label="unwind"];
    bb242__0_500 -> bb243__0_500 [label="return"];
    bb242__0_500 -> bb498__0_500 [label="unwind"];
    bb243__0_500 -> bb244__0_500 [label="0"];
    bb243__0_500 -> bb245__0_500 [label="1"];
    bb243__0_500 -> bb7__0_500 [label="otherwise"];
    bb244__0_500 -> bb247__0_500 [label="0"];
    bb244__0_500 -> bb248__0_500 [label="1"];
    bb244__0_500 -> bb7__0_500 [label="otherwise"];
    bb245__0_500 -> bb246__0_500 [label="return"];
    bb245__0_500 -> bb498__0_500 [label="unwind"];
    bb246__0_500 -> bb476__0_500 [label=""];
    bb247__0_500 -> bb250__0_500 [label="0"];
    bb247__0_500 -> bb250__0_500 [label="4"];
    bb247__0_500 -> bb249__0_500 [label="otherwise"];
    bb248__0_500 -> bb272__0_500 [label=""];
    bb249__0_500 -> bb272__0_500 [label=""];
    bb250__0_500 -> bb251__0_500 [label="return"];
    bb250__0_500 -> bb498__0_500 [label="unwind"];
    bb251__0_500 -> bb252__0_500 [label="return"];
    bb251__0_500 -> bb498__0_500 [label="unwind"];
    bb252__0_500 -> bb253__0_500 [label="0"];
    bb252__0_500 -> bb254__0_500 [label="1"];
    bb252__0_500 -> bb7__0_500 [label="otherwise"];
    bb253__0_500 -> bb256__0_500 [label="return"];
    bb253__0_500 -> bb498__0_500 [label="unwind"];
    bb254__0_500 -> bb255__0_500 [label="return"];
    bb254__0_500 -> bb498__0_500 [label="unwind"];
    bb255__0_500 -> bb472__0_500 [label=""];
    bb256__0_500 -> bb257__0_500 [label="return"];
    bb256__0_500 -> bb498__0_500 [label="unwind"];
    bb257__0_500 -> bb258__0_500 [label="0"];
    bb257__0_500 -> bb259__0_500 [label="1"];
    bb257__0_500 -> bb7__0_500 [label="otherwise"];
    bb258__0_500 -> bb261__0_500 [label="return"];
    bb258__0_500 -> bb498__0_500 [label="unwind"];
    bb259__0_500 -> bb260__0_500 [label="return"];
    bb259__0_500 -> bb498__0_500 [label="unwind"];
    bb260__0_500 -> bb472__0_500 [label=""];
    bb261__0_500 -> bb262__0_500 [label="return"];
    bb261__0_500 -> bb498__0_500 [label="unwind"];
    bb262__0_500 -> bb263__0_500 [label="0"];
    bb262__0_500 -> bb264__0_500 [label="1"];
    bb262__0_500 -> bb7__0_500 [label="otherwise"];
    bb263__0_500 -> bb266__0_500 [label="return"];
    bb263__0_500 -> bb498__0_500 [label="unwind"];
    bb264__0_500 -> bb265__0_500 [label="return"];
    bb264__0_500 -> bb498__0_500 [label="unwind"];
    bb265__0_500 -> bb473__0_500 [label=""];
    bb266__0_500 -> bb267__0_500 [label="return"];
    bb266__0_500 -> bb498__0_500 [label="unwind"];
    bb267__0_500 -> bb268__0_500 [label="return"];
    bb267__0_500 -> bb498__0_500 [label="unwind"];
    bb268__0_500 -> bb269__0_500 [label="0"];
    bb268__0_500 -> bb270__0_500 [label="1"];
    bb268__0_500 -> bb7__0_500 [label="otherwise"];
    bb269__0_500 -> bb272__0_500 [label=""];
    bb270__0_500 -> bb271__0_500 [label="return"];
    bb270__0_500 -> bb498__0_500 [label="unwind"];
    bb271__0_500 -> bb474__0_500 [label=""];
    bb272__0_500 -> bb283__0_500 [label="0"];
    bb272__0_500 -> bb273__0_500 [label="otherwise"];
    bb273__0_500 -> bb282__0_500 [label="0"];
    bb273__0_500 -> bb274__0_500 [label="otherwise"];
    bb274__0_500 -> bb275__0_500 [label="return"];
    bb274__0_500 -> bb498__0_500 [label="unwind"];
    bb275__0_500 -> bb276__0_500 [label="return"];
    bb275__0_500 -> bb498__0_500 [label="unwind"];
    bb276__0_500 -> bb277__0_500 [label="return"];
    bb276__0_500 -> bb498__0_500 [label="unwind"];
    bb277__0_500 -> bb278__0_500 [label="return"];
    bb277__0_500 -> bb498__0_500 [label="unwind"];
    bb278__0_500 -> bb279__0_500 [label="return"];
    bb278__0_500 -> bb490__0_500 [label="unwind"];
    bb279__0_500 -> bb280__0_500 [label="return"];
    bb279__0_500 -> bb490__0_500 [label="unwind"];
    bb280__0_500 -> bb281__0_500 [label="return"];
    bb280__0_500 -> bb498__0_500 [label="unwind"];
    bb281__0_500 -> bb475__0_500 [label=""];
    bb282__0_500 -> bb284__0_500 [label=""];
    bb283__0_500 -> bb284__0_500 [label=""];
    bb284__0_500 -> bb285__0_500 [label="return"];
    bb284__0_500 -> bb498__0_500 [label="unwind"];
    bb285__0_500 -> bb287__0_500 [label="0"];
    bb285__0_500 -> bb286__0_500 [label="otherwise"];
    bb286__0_500 -> bb295__0_500 [label=""];
    bb287__0_500 -> bb288__0_500 [label="return"];
    bb287__0_500 -> bb498__0_500 [label="unwind"];
    bb288__0_500 -> bb289__0_500 [label="return"];
    bb288__0_500 -> bb498__0_500 [label="unwind"];
    bb289__0_500 -> bb290__0_500 [label="return"];
    bb289__0_500 -> bb498__0_500 [label="unwind"];
    bb290__0_500 -> bb291__0_500 [label="return"];
    bb290__0_500 -> bb489__0_500 [label="unwind"];
    bb291__0_500 -> bb292__0_500 [label="return"];
    bb291__0_500 -> bb489__0_500 [label="unwind"];
    bb292__0_500 -> bb293__0_500 [label="return"];
    bb292__0_500 -> bb498__0_500 [label="unwind"];
    bb293__0_500 -> bb294__0_500 [label="return"];
    bb293__0_500 -> bb498__0_500 [label="unwind"];
    bb294__0_500 -> bb295__0_500 [label=""];
    bb295__0_500 -> bb296__0_500 [label="return"];
    bb295__0_500 -> bb498__0_500 [label="unwind"];
    bb296__0_500 -> bb297__0_500 [label="0"];
    bb296__0_500 -> bb298__0_500 [label="1"];
    bb296__0_500 -> bb7__0_500 [label="otherwise"];
    bb297__0_500 -> bb300__0_500 [label="return"];
    bb297__0_500 -> bb498__0_500 [label="unwind"];
    bb298__0_500 -> bb299__0_500 [label="return"];
    bb298__0_500 -> bb498__0_500 [label="unwind"];
    bb299__0_500 -> bb475__0_500 [label=""];
    bb300__0_500 -> bb301__0_500 [label="return"];
    bb300__0_500 -> bb498__0_500 [label="unwind"];
    bb301__0_500 -> bb303__0_500 [label="0"];
    bb301__0_500 -> bb302__0_500 [label="otherwise"];
    bb302__0_500 -> bb304__0_500 [label=""];
    bb303__0_500 -> bb304__0_500 [label=""];
    bb304__0_500 -> bb305__0_500 [label="return"];
    bb304__0_500 -> bb498__0_500 [label="unwind"];
    bb305__0_500 -> bb307__0_500 [label="0"];
    bb305__0_500 -> bb306__0_500 [label="otherwise"];
    bb306__0_500 -> bb308__0_500 [label=""];
    bb307__0_500 -> bb308__0_500 [label=""];
    bb308__0_500 -> bb309__0_500 [label="return"];
    bb308__0_500 -> bb498__0_500 [label="unwind"];
    bb309__0_500 -> bb310__0_500 [label="return"];
    bb309__0_500 -> bb498__0_500 [label="unwind"];
    bb310__0_500 -> bb311__0_500 [label="return"];
    bb310__0_500 -> bb498__0_500 [label="unwind"];
    bb311__0_500 -> bb312__0_500 [label="return"];
    bb311__0_500 -> bb498__0_500 [label="unwind"];
    bb312__0_500 -> bb313__0_500 [label="return"];
    bb312__0_500 -> bb498__0_500 [label="unwind"];
    bb313__0_500 -> bb314__0_500 [label="return"];
    bb313__0_500 -> bb498__0_500 [label="unwind"];
    bb314__0_500 -> bb315__0_500 [label="return"];
    bb314__0_500 -> bb498__0_500 [label="unwind"];
    bb315__0_500 -> bb316__0_500 [label="return"];
    bb315__0_500 -> bb498__0_500 [label="unwind"];
    bb316__0_500 -> bb317__0_500 [label="0"];
    bb316__0_500 -> bb318__0_500 [label="1"];
    bb316__0_500 -> bb7__0_500 [label="otherwise"];
    bb317__0_500 -> bb320__0_500 [label="return"];
    bb317__0_500 -> bb498__0_500 [label="unwind"];
    bb318__0_500 -> bb319__0_500 [label="return"];
    bb318__0_500 -> bb498__0_500 [label="unwind"];
    bb319__0_500 -> bb470__0_500 [label=""];
    bb320__0_500 -> bb321__0_500 [label="return"];
    bb320__0_500 -> bb498__0_500 [label="unwind"];
    bb321__0_500 -> bb322__0_500 [label="return"];
    bb321__0_500 -> bb498__0_500 [label="unwind"];
    bb322__0_500 -> bb323__0_500 [label="return"];
    bb322__0_500 -> bb498__0_500 [label="unwind"];
    bb323__0_500 -> bb324__0_500 [label="0"];
    bb323__0_500 -> bb325__0_500 [label="1"];
    bb323__0_500 -> bb7__0_500 [label="otherwise"];
    bb324__0_500 -> bb327__0_500 [label="return"];
    bb324__0_500 -> bb498__0_500 [label="unwind"];
    bb325__0_500 -> bb326__0_500 [label="return"];
    bb325__0_500 -> bb498__0_500 [label="unwind"];
    bb326__0_500 -> bb470__0_500 [label=""];
    bb327__0_500 -> bb328__0_500 [label="return"];
    bb327__0_500 -> bb498__0_500 [label="unwind"];
    bb328__0_500 -> bb329__0_500 [label="return"];
    bb328__0_500 -> bb498__0_500 [label="unwind"];
    bb329__0_500 -> bb330__0_500 [label="return"];
    bb329__0_500 -> bb498__0_500 [label="unwind"];
    bb330__0_500 -> bb331__0_500 [label="return"];
    bb330__0_500 -> bb498__0_500 [label="unwind"];
    bb331__0_500 -> bb332__0_500 [label="return"];
    bb331__0_500 -> bb498__0_500 [label="unwind"];
    bb332__0_500 -> bb335__0_500 [label="0"];
    bb332__0_500 -> bb333__0_500 [label="1"];
    bb332__0_500 -> bb7__0_500 [label="otherwise"];
    bb333__0_500 -> bb336__0_500 [label="57"];
    bb333__0_500 -> bb334__0_500 [label="otherwise"];
    bb334__0_500 -> bb468__0_500 [label=""];
    bb335__0_500 -> bb340__0_500 [label="success"];
    bb335__0_500 -> bb498__0_500 [label="unwind"];
    bb336__0_500 -> bb337__0_500 [label="return"];
    bb336__0_500 -> bb498__0_500 [label="unwind"];
    bb337__0_500 -> bb339__0_500 [label="0"];
    bb337__0_500 -> bb338__0_500 [label="otherwise"];
    bb338__0_500 -> bb468__0_500 [label=""];
    bb339__0_500 -> bb334__0_500 [label=""];
    bb340__0_500 -> bb341__0_500 [label="success"];
    bb340__0_500 -> bb498__0_500 [label="unwind"];
    bb341__0_500 -> bb342__0_500 [label="success"];
    bb341__0_500 -> bb498__0_500 [label="unwind"];
    bb342__0_500 -> bb343__0_500 [label="return"];
    bb342__0_500 -> bb498__0_500 [label="unwind"];
    bb343__0_500 -> bb344__0_500 [label="return"];
    bb343__0_500 -> bb498__0_500 [label="unwind"];
    bb344__0_500 -> bb345__0_500 [label="0"];
    bb344__0_500 -> bb346__0_500 [label="1"];
    bb344__0_500 -> bb7__0_500 [label="otherwise"];
    bb345__0_500 -> bb348__0_500 [label="return"];
    bb345__0_500 -> bb498__0_500 [label="unwind"];
    bb346__0_500 -> bb347__0_500 [label="return"];
    bb346__0_500 -> bb498__0_500 [label="unwind"];
    bb347__0_500 -> bb467__0_500 [label=""];
    bb348__0_500 -> bb349__0_500 [label="return"];
    bb348__0_500 -> bb498__0_500 [label="unwind"];
    bb349__0_500 -> bb350__0_500 [label="success"];
    bb349__0_500 -> bb498__0_500 [label="unwind"];
    bb350__0_500 -> bb351__0_500 [label="success"];
    bb350__0_500 -> bb498__0_500 [label="unwind"];
    bb351__0_500 -> bb352__0_500 [label="success"];
    bb351__0_500 -> bb498__0_500 [label="unwind"];
    bb352__0_500 -> bb353__0_500 [label="success"];
    bb352__0_500 -> bb498__0_500 [label="unwind"];
    bb353__0_500 -> bb354__0_500 [label="return"];
    bb353__0_500 -> bb498__0_500 [label="unwind"];
    bb354__0_500 -> bb355__0_500 [label="return"];
    bb354__0_500 -> bb498__0_500 [label="unwind"];
    bb355__0_500 -> bb356__0_500 [label="return"];
    bb355__0_500 -> bb498__0_500 [label="unwind"];
    bb356__0_500 -> bb357__0_500 [label="0"];
    bb356__0_500 -> bb358__0_500 [label="1"];
    bb356__0_500 -> bb7__0_500 [label="otherwise"];
    bb357__0_500 -> bb360__0_500 [label="return"];
    bb357__0_500 -> bb498__0_500 [label="unwind"];
    bb358__0_500 -> bb359__0_500 [label="return"];
    bb358__0_500 -> bb498__0_500 [label="unwind"];
    bb359__0_500 -> bb467__0_500 [label=""];
    bb360__0_500 -> bb370__0_500 [label="0"];
    bb360__0_500 -> bb361__0_500 [label="otherwise"];
    bb361__0_500 -> bb362__0_500 [label="return"];
    bb361__0_500 -> bb498__0_500 [label="unwind"];
    bb362__0_500 -> bb364__0_500 [label="0"];
    bb362__0_500 -> bb363__0_500 [label="otherwise"];
    bb363__0_500 -> bb370__0_500 [label=""];
    bb364__0_500 -> bb365__0_500 [label="return"];
    bb364__0_500 -> bb498__0_500 [label="unwind"];
    bb365__0_500 -> bb366__0_500 [label="return"];
    bb365__0_500 -> bb498__0_500 [label="unwind"];
    bb366__0_500 -> bb367__0_500 [label="0"];
    bb366__0_500 -> bb368__0_500 [label="1"];
    bb366__0_500 -> bb7__0_500 [label="otherwise"];
    bb367__0_500 -> bb371__0_500 [label=""];
    bb368__0_500 -> bb369__0_500 [label="return"];
    bb368__0_500 -> bb498__0_500 [label="unwind"];
    bb369__0_500 -> bb467__0_500 [label=""];
    bb370__0_500 -> bb371__0_500 [label=""];
    bb371__0_500 -> bb380__0_500 [label="0"];
    bb371__0_500 -> bb372__0_500 [label="otherwise"];
    bb372__0_500 -> bb373__0_500 [label="success"];
    bb372__0_500 -> bb498__0_500 [label="unwind"];
    bb373__0_500 -> bb374__0_500 [label="success"];
    bb373__0_500 -> bb498__0_500 [label="unwind"];
    bb374__0_500 -> bb375__0_500 [label="return"];
    bb374__0_500 -> bb498__0_500 [label="unwind"];
    bb375__0_500 -> bb376__0_500 [label="return"];
    bb375__0_500 -> bb498__0_500 [label="unwind"];
    bb376__0_500 -> bb377__0_500 [label="0"];
    bb376__0_500 -> bb378__0_500 [label="1"];
    bb376__0_500 -> bb7__0_500 [label="otherwise"];
    bb377__0_500 -> bb381__0_500 [label=""];
    bb378__0_500 -> bb379__0_500 [label="return"];
    bb378__0_500 -> bb498__0_500 [label="unwind"];
    bb379__0_500 -> bb467__0_500 [label=""];
    bb380__0_500 -> bb381__0_500 [label=""];
    bb381__0_500 -> bb382__0_500 [label="return"];
    bb381__0_500 -> bb498__0_500 [label="unwind"];
    bb382__0_500 -> bb432__0_500 [label="0"];
    bb382__0_500 -> bb383__0_500 [label="otherwise"];
    bb383__0_500 -> bb433__0_500 [label="0"];
    bb383__0_500 -> bb384__0_500 [label="otherwise"];
    bb384__0_500 -> bb386__0_500 [label="0"];
    bb384__0_500 -> bb385__0_500 [label="1"];
    bb384__0_500 -> bb7__0_500 [label="otherwise"];
    bb385__0_500 -> bb399__0_500 [label="return"];
    bb385__0_500 -> bb498__0_500 [label="unwind"];
    bb386__0_500 -> bb387__0_500 [label="return"];
    bb386__0_500 -> bb498__0_500 [label="unwind"];
    bb387__0_500 -> bb388__0_500 [label="return"];
    bb387__0_500 -> bb498__0_500 [label="unwind"];
    bb388__0_500 -> bb389__0_500 [label="return"];
    bb388__0_500 -> bb498__0_500 [label="unwind"];
    bb389__0_500 -> bb390__0_500 [label="0"];
    bb389__0_500 -> bb391__0_500 [label="1"];
    bb389__0_500 -> bb7__0_500 [label="otherwise"];
    bb390__0_500 -> bb393__0_500 [label="return"];
    bb390__0_500 -> bb498__0_500 [label="unwind"];
    bb391__0_500 -> bb392__0_500 [label="return"];
    bb391__0_500 -> bb498__0_500 [label="unwind"];
    bb392__0_500 -> bb464__0_500 [label=""];
    bb393__0_500 -> bb394__0_500 [label="return"];
    bb393__0_500 -> bb498__0_500 [label="unwind"];
    bb394__0_500 -> bb395__0_500 [label="0"];
    bb394__0_500 -> bb396__0_500 [label="1"];
    bb394__0_500 -> bb7__0_500 [label="otherwise"];
    bb395__0_500 -> bb398__0_500 [label="return"];
    bb395__0_500 -> bb498__0_500 [label="unwind"];
    bb396__0_500 -> bb397__0_500 [label="return"];
    bb396__0_500 -> bb498__0_500 [label="unwind"];
    bb397__0_500 -> bb464__0_500 [label=""];
    bb398__0_500 -> bb411__0_500 [label=""];
    bb399__0_500 -> bb400__0_500 [label="return"];
    bb399__0_500 -> bb498__0_500 [label="unwind"];
    bb400__0_500 -> bb401__0_500 [label="return"];
    bb400__0_500 -> bb498__0_500 [label="unwind"];
    bb401__0_500 -> bb402__0_500 [label="0"];
    bb401__0_500 -> bb403__0_500 [label="1"];
    bb401__0_500 -> bb7__0_500 [label="otherwise"];
    bb402__0_500 -> bb405__0_500 [label="return"];
    bb402__0_500 -> bb498__0_500 [label="unwind"];
    bb403__0_500 -> bb404__0_500 [label="return"];
    bb403__0_500 -> bb498__0_500 [label="unwind"];
    bb404__0_500 -> bb463__0_500 [label=""];
    bb405__0_500 -> bb406__0_500 [label="return"];
    bb405__0_500 -> bb498__0_500 [label="unwind"];
    bb406__0_500 -> bb407__0_500 [label="0"];
    bb406__0_500 -> bb408__0_500 [label="1"];
    bb406__0_500 -> bb7__0_500 [label="otherwise"];
    bb407__0_500 -> bb410__0_500 [label="return"];
    bb407__0_500 -> bb498__0_500 [label="unwind"];
    bb408__0_500 -> bb409__0_500 [label="return"];
    bb408__0_500 -> bb498__0_500 [label="unwind"];
    bb409__0_500 -> bb463__0_500 [label=""];
    bb410__0_500 -> bb411__0_500 [label=""];
    bb411__0_500 -> bb413__0_500 [label="0"];
    bb411__0_500 -> bb412__0_500 [label="otherwise"];
    bb412__0_500 -> bb427__0_500 [label=""];
    bb413__0_500 -> bb414__0_500 [label="return"];
    bb413__0_500 -> bb498__0_500 [label="unwind"];
    bb414__0_500 -> bb415__0_500 [label="return"];
    bb414__0_500 -> bb498__0_500 [label="unwind"];
    bb415__0_500 -> bb416__0_500 [label="return"];
    bb415__0_500 -> bb498__0_500 [label="unwind"];
    bb416__0_500 -> bb417__0_500 [label="return"];
    bb416__0_500 -> bb488__0_500 [label="unwind"];
    bb417__0_500 -> bb418__0_500 [label="return"];
    bb417__0_500 -> bb488__0_500 [label="unwind"];
    bb418__0_500 -> bb419__0_500 [label="return"];
    bb418__0_500 -> bb498__0_500 [label="unwind"];
    bb419__0_500 -> bb420__0_500 [label="return"];
    bb419__0_500 -> bb498__0_500 [label="unwind"];
    bb420__0_500 -> bb421__0_500 [label="return"];
    bb420__0_500 -> bb498__0_500 [label="unwind"];
    bb421__0_500 -> bb422__0_500 [label="return"];
    bb421__0_500 -> bb498__0_500 [label="unwind"];
    bb422__0_500 -> bb423__0_500 [label="return"];
    bb422__0_500 -> bb498__0_500 [label="unwind"];
    bb423__0_500 -> bb424__0_500 [label="return"];
    bb423__0_500 -> bb487__0_500 [label="unwind"];
    bb424__0_500 -> bb425__0_500 [label="return"];
    bb424__0_500 -> bb487__0_500 [label="unwind"];
    bb425__0_500 -> bb426__0_500 [label="return"];
    bb425__0_500 -> bb498__0_500 [label="unwind"];
    bb426__0_500 -> bb427__0_500 [label=""];
    bb427__0_500 -> bb428__0_500 [label="return"];
    bb427__0_500 -> bb498__0_500 [label="unwind"];
    bb428__0_500 -> bb429__0_500 [label="0"];
    bb428__0_500 -> bb430__0_500 [label="1"];
    bb428__0_500 -> bb7__0_500 [label="otherwise"];
    bb429__0_500 -> bb434__0_500 [label=""];
    bb430__0_500 -> bb431__0_500 [label="return"];
    bb430__0_500 -> bb498__0_500 [label="unwind"];
    bb431__0_500 -> bb465__0_500 [label=""];
    bb432__0_500 -> bb433__0_500 [label=""];
    bb433__0_500 -> bb434__0_500 [label=""];
    bb434__0_500 -> bb435__0_500 [label="return"];
    bb434__0_500 -> bb498__0_500 [label="unwind"];
    bb435__0_500 -> bb436__0_500 [label="return"];
    bb435__0_500 -> bb498__0_500 [label="unwind"];
    bb436__0_500 -> bb437__0_500 [label="return"];
    bb436__0_500 -> bb498__0_500 [label="unwind"];
    bb437__0_500 -> bb438__0_500 [label="return"];
    bb437__0_500 -> bb498__0_500 [label="unwind"];
    bb438__0_500 -> bb439__0_500 [label="return"];
    bb438__0_500 -> bb498__0_500 [label="unwind"];
    bb439__0_500 -> bb440__0_500 [label="0"];
    bb439__0_500 -> bb441__0_500 [label="1"];
    bb439__0_500 -> bb7__0_500 [label="otherwise"];
    bb440__0_500 -> bb443__0_500 [label="return"];
    bb440__0_500 -> bb498__0_500 [label="unwind"];
    bb441__0_500 -> bb442__0_500 [label="return"];
    bb441__0_500 -> bb498__0_500 [label="unwind"];
    bb442__0_500 -> bb461__0_500 [label=""];
    bb443__0_500 -> bb444__0_500 [label="return"];
    bb443__0_500 -> bb498__0_500 [label="unwind"];
    bb444__0_500 -> bb445__0_500 [label="0"];
    bb444__0_500 -> bb446__0_500 [label="1"];
    bb444__0_500 -> bb7__0_500 [label="otherwise"];
    bb445__0_500 -> bb448__0_500 [label="return"];
    bb445__0_500 -> bb498__0_500 [label="unwind"];
    bb446__0_500 -> bb447__0_500 [label="return"];
    bb446__0_500 -> bb498__0_500 [label="unwind"];
    bb447__0_500 -> bb461__0_500 [label=""];
    bb448__0_500 -> bb449__0_500 [label="return"];
    bb448__0_500 -> bb498__0_500 [label="unwind"];
    bb449__0_500 -> bb450__0_500 [label="0"];
    bb449__0_500 -> bb451__0_500 [label="1"];
    bb449__0_500 -> bb7__0_500 [label="otherwise"];
    bb450__0_500 -> bb453__0_500 [label="success"];
    bb450__0_500 -> bb498__0_500 [label="unwind"];
    bb451__0_500 -> bb452__0_500 [label="return"];
    bb451__0_500 -> bb498__0_500 [label="unwind"];
    bb452__0_500 -> bb462__0_500 [label=""];
    bb453__0_500 -> bb454__0_500 [label="return"];
    bb453__0_500 -> bb498__0_500 [label="unwind"];
    bb454__0_500 -> bb455__0_500 [label="return"];
    bb454__0_500 -> bb498__0_500 [label="unwind"];
    bb455__0_500 -> bb456__0_500 [label="0"];
    bb455__0_500 -> bb457__0_500 [label="1"];
    bb455__0_500 -> bb7__0_500 [label="otherwise"];
    bb456__0_500 -> bb459__0_500 [label="return"];
    bb456__0_500 -> bb498__0_500 [label="unwind"];
    bb457__0_500 -> bb458__0_500 [label="return"];
    bb457__0_500 -> bb498__0_500 [label="unwind"];
    bb458__0_500 -> bb462__0_500 [label=""];
    bb459__0_500 -> bb460__0_500 [label="return"];
    bb459__0_500 -> bb503__0_500 [label="unwind"];
    bb460__0_500 -> bb486__0_500 [label=""];
    bb461__0_500 -> bb462__0_500 [label=""];
    bb462__0_500 -> bb466__0_500 [label=""];
    bb463__0_500 -> bb465__0_500 [label=""];
    bb464__0_500 -> bb465__0_500 [label=""];
    bb465__0_500 -> bb466__0_500 [label=""];
    bb466__0_500 -> bb467__0_500 [label=""];
    bb467__0_500 -> bb469__0_500 [label=""];
    bb468__0_500 -> bb469__0_500 [label=""];
    bb469__0_500 -> bb471__0_500 [label=""];
    bb470__0_500 -> bb471__0_500 [label=""];
    bb471__0_500 -> bb475__0_500 [label=""];
    bb472__0_500 -> bb473__0_500 [label=""];
    bb473__0_500 -> bb474__0_500 [label=""];
    bb474__0_500 -> bb475__0_500 [label=""];
    bb475__0_500 -> bb476__0_500 [label=""];
    bb476__0_500 -> bb479__0_500 [label=""];
    bb477__0_500 -> bb478__0_500 [label=""];
    bb478__0_500 -> bb479__0_500 [label=""];
    bb479__0_500 -> bb480__0_500 [label=""];
    bb480__0_500 -> bb481__0_500 [label="return"];
    bb480__0_500 -> bb503__0_500 [label="unwind"];
    bb481__0_500 -> bb482__0_500 [label=""];
    bb482__0_500 -> bb485__0_500 [label=""];
    bb483__0_500 -> bb484__0_500 [label=""];
    bb484__0_500 -> bb485__0_500 [label=""];
    bb485__0_500 -> bb486__0_500 [label=""];
    bb487__0_500 -> bb498__0_500 [label="return"];
    bb488__0_500 -> bb498__0_500 [label="return"];
    bb489__0_500 -> bb498__0_500 [label="return"];
    bb490__0_500 -> bb498__0_500 [label="return"];
    bb491__0_500 -> bb498__0_500 [label="return"];
    bb492__0_500 -> bb498__0_500 [label="return"];
    bb493__0_500 -> bb498__0_500 [label="return"];
    bb494__0_500 -> bb498__0_500 [label="return"];
    bb495__0_500 -> bb498__0_500 [label="return"];
    bb496__0_500 -> bb498__0_500 [label="return"];
    bb497__0_500 -> bb498__0_500 [label="return"];
    bb498__0_500 -> bb503__0_500 [label="return"];
    bb499__0_500 -> bb503__0_500 [label="return"];
    bb500__0_500 -> bb503__0_500 [label="return"];
    bb501__0_500 -> bb503__0_500 [label="return"];
    bb502__0_500 -> bb503__0_500 [label="return"];
    bb504__0_500 -> bb503__0_500 [label=""];
    bb505__0_500 -> bb503__0_500 [label=""];
}
