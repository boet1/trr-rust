digraph Mir_0_2589 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_quote_asset_amount_for_maker_order(_1: u64, _2: u64, _3: u32, _4: controller::position::PositionDirection) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _5: u128;<br align="left"/>let mut _6: u32;<br align="left"/>let mut _7: isize;<br align="left"/>let mut _8: u128;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _10: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _13: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: u128;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _26: u64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: u128;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _49: u128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: u128;<br align="left"/>let mut _58: u128;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _60: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: u128;<br align="left"/>let mut _72: u128;<br align="left"/>let mut _73: isize;<br align="left"/>let _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _75: !;<br align="left"/>let mut _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _77: u128;<br align="left"/>debug base_asset_amount =&gt; _1;<br align="left"/>debug fill_price =&gt; _2;<br align="left"/>debug base_decimals =&gt; _3;<br align="left"/>debug position_direction =&gt; _4;<br align="left"/>debug precision_decrease =&gt; _5;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _74;<br align="left"/>debug val =&gt; _77;<br align="left"/>>;
    bb0__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/></td></tr><tr><td align="left">_5 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _6)</td></tr></table>>];
    bb1__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _2<br/></td></tr><tr><td align="left">_51 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _52)</td></tr></table>>];
    bb3__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/></td></tr><tr><td align="left">_16 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _17)</td></tr></table>>];
    bb5__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb6__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_18 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb7__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_15 as Continue).0: u128)<br/>_14 = _22<br/>StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _1<br/></td></tr><tr><td align="left">_25 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _26)</td></tr></table>>];
    bb8__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb9__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb11__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb12__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_24 as Continue).0: u128)<br/>_23 = _31<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_13 = &lt;u128 as SafeMath&gt;::safe_mul(move _14, move _23)</td></tr></table>>];
    bb13__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb14__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb16__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_32 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb17__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_12 as Continue).0: u128)<br/>_11 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>_37 = _5<br/></td></tr><tr><td align="left">_10 = &lt;u128 as SafeMath&gt;::safe_div(move _11, move _37)</td></tr></table>>];
    bb18__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb19__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb21__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_38 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb22__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_9 as Continue).0: u128)<br/>_8 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _8)</td></tr></table>>];
    bb23__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb24__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb27__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_53 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb28__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_50 as Continue).0: u128)<br/>_49 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = _1<br/></td></tr><tr><td align="left">_60 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _61)</td></tr></table>>];
    bb29__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb30__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb32__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_62 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb33__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_59 as Continue).0: u128)<br/>_58 = _66<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_48 = &lt;u128 as SafeMath&gt;::safe_mul(move _49, move _58)</td></tr></table>>];
    bb34__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb35__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_58)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb37__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_67 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb38__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_47 as Continue).0: u128)<br/>_46 = _71<br/>StorageDead(_71)<br/>StorageLive(_72)<br/>_72 = _5<br/></td></tr><tr><td align="left">_45 = &lt;u128 as SafeMath&gt;::safe_div_ceil(move _46, move _72)</td></tr></table>>];
    bb39__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb40__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb42__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_73 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _73)</td></tr></table>>];
    bb43__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_44 as Continue).0: u128)<br/>_43 = _77<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _43)</td></tr></table>>];
    bb44__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_76)<br/>_76 = _74<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _76)</td></tr></table>>];
    bb45__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_2589 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2589 -> bb1__0_2589 [label="return"];
    bb1__0_2589 -> bb4__0_2589 [label="0"];
    bb1__0_2589 -> bb2__0_2589 [label="1"];
    bb1__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb2__0_2589 -> bb26__0_2589 [label="return"];
    bb4__0_2589 -> bb5__0_2589 [label="return"];
    bb5__0_2589 -> bb6__0_2589 [label="return"];
    bb6__0_2589 -> bb7__0_2589 [label="0"];
    bb6__0_2589 -> bb8__0_2589 [label="1"];
    bb6__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb7__0_2589 -> bb10__0_2589 [label="return"];
    bb8__0_2589 -> bb9__0_2589 [label="return"];
    bb9__0_2589 -> bb53__0_2589 [label=""];
    bb10__0_2589 -> bb11__0_2589 [label="return"];
    bb11__0_2589 -> bb12__0_2589 [label="0"];
    bb11__0_2589 -> bb13__0_2589 [label="1"];
    bb11__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb12__0_2589 -> bb15__0_2589 [label="return"];
    bb13__0_2589 -> bb14__0_2589 [label="return"];
    bb14__0_2589 -> bb51__0_2589 [label=""];
    bb15__0_2589 -> bb16__0_2589 [label="return"];
    bb16__0_2589 -> bb17__0_2589 [label="0"];
    bb16__0_2589 -> bb18__0_2589 [label="1"];
    bb16__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb17__0_2589 -> bb20__0_2589 [label="return"];
    bb18__0_2589 -> bb19__0_2589 [label="return"];
    bb19__0_2589 -> bb51__0_2589 [label=""];
    bb20__0_2589 -> bb21__0_2589 [label="return"];
    bb21__0_2589 -> bb22__0_2589 [label="0"];
    bb21__0_2589 -> bb23__0_2589 [label="1"];
    bb21__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb22__0_2589 -> bb25__0_2589 [label="return"];
    bb23__0_2589 -> bb24__0_2589 [label="return"];
    bb24__0_2589 -> bb52__0_2589 [label=""];
    bb25__0_2589 -> bb47__0_2589 [label=""];
    bb26__0_2589 -> bb27__0_2589 [label="return"];
    bb27__0_2589 -> bb28__0_2589 [label="0"];
    bb27__0_2589 -> bb29__0_2589 [label="1"];
    bb27__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb28__0_2589 -> bb31__0_2589 [label="return"];
    bb29__0_2589 -> bb30__0_2589 [label="return"];
    bb30__0_2589 -> bb50__0_2589 [label=""];
    bb31__0_2589 -> bb32__0_2589 [label="return"];
    bb32__0_2589 -> bb33__0_2589 [label="0"];
    bb32__0_2589 -> bb34__0_2589 [label="1"];
    bb32__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb33__0_2589 -> bb36__0_2589 [label="return"];
    bb34__0_2589 -> bb35__0_2589 [label="return"];
    bb35__0_2589 -> bb48__0_2589 [label=""];
    bb36__0_2589 -> bb37__0_2589 [label="return"];
    bb37__0_2589 -> bb38__0_2589 [label="0"];
    bb37__0_2589 -> bb39__0_2589 [label="1"];
    bb37__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb38__0_2589 -> bb41__0_2589 [label="return"];
    bb39__0_2589 -> bb40__0_2589 [label="return"];
    bb40__0_2589 -> bb48__0_2589 [label=""];
    bb41__0_2589 -> bb42__0_2589 [label="return"];
    bb42__0_2589 -> bb43__0_2589 [label="0"];
    bb42__0_2589 -> bb44__0_2589 [label="1"];
    bb42__0_2589 -> bb3__0_2589 [label="otherwise"];
    bb43__0_2589 -> bb46__0_2589 [label="return"];
    bb44__0_2589 -> bb45__0_2589 [label="return"];
    bb45__0_2589 -> bb49__0_2589 [label=""];
    bb46__0_2589 -> bb47__0_2589 [label=""];
    bb47__0_2589 -> bb55__0_2589 [label=""];
    bb48__0_2589 -> bb49__0_2589 [label=""];
    bb49__0_2589 -> bb50__0_2589 [label=""];
    bb50__0_2589 -> bb54__0_2589 [label=""];
    bb51__0_2589 -> bb52__0_2589 [label=""];
    bb52__0_2589 -> bb53__0_2589 [label=""];
    bb53__0_2589 -> bb54__0_2589 [label=""];
    bb54__0_2589 -> bb55__0_2589 [label=""];
}
