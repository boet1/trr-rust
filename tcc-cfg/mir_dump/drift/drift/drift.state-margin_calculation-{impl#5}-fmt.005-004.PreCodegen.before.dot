digraph Mir_0_16568 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;MarginCalculationMode as Debug&gt;::fmt(_1: &amp;ReErased state::margin_calculation::MarginCalculationMode, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: isize;<br align="left"/>let _4: &amp;ReErased bool;<br align="left"/>let mut _5: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased str;<br align="left"/>let _7: &amp;ReErased str;<br align="left"/>let mut _8: &amp;ReErased str;<br align="left"/>let _9: &amp;ReErased str;<br align="left"/>let mut _10: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _11: &amp;ReErased &amp;ReErased bool;<br align="left"/>let _12: &amp;ReErased &amp;ReErased bool;<br align="left"/>let _13: &amp;ReErased std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _15: &amp;ReErased str;<br align="left"/>let _16: &amp;ReErased str;<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _20: &amp;ReErased &amp;ReErased std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>let _21: &amp;ReErased &amp;ReErased std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug __self_0 =&gt; _4;<br align="left"/>debug __self_0 =&gt; _13;<br align="left"/>>;
    bb0__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb1__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = &amp;(((*_1) as Liquidation).0: std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_2)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = const &quot;Liquidation&quot;<br/>_15 = &amp;(*_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = const &quot;market_to_track_margin_requirement&quot;<br/>_17 = &amp;(*_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;_13<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_struct_field1_finish(move _14, move _15, move _17, move _19)</td></tr></table>>];
    bb2__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = &amp;(((*_1) as Standard).0: bool)<br/>StorageLive(_5)<br/>_5 = &amp;mut (*_2)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = const &quot;Standard&quot;<br/>_6 = &amp;(*_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = const &quot;track_open_orders_fraction&quot;<br/>_8 = &amp;(*_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;_4<br/>_11 = &amp;(*_12)<br/>_10 = move _11 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_struct_field1_finish(move _5, move _6, move _8, move _10)</td></tr></table>>];
    bb4__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_16568 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_16568 -> bb3__0_16568 [label="0"];
    bb0__0_16568 -> bb1__0_16568 [label="1"];
    bb0__0_16568 -> bb2__0_16568 [label="otherwise"];
    bb1__0_16568 -> bb5__0_16568 [label="return"];
    bb3__0_16568 -> bb4__0_16568 [label="return"];
    bb4__0_16568 -> bb6__0_16568 [label=""];
    bb5__0_16568 -> bb6__0_16568 [label=""];
}
