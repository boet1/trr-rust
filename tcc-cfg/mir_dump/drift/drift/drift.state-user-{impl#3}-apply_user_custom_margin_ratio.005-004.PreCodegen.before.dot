digraph Mir_0_4340 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn OrderFillSimulation::apply_user_custom_margin_ratio(_1: state::user::OrderFillSimulation, _2: &amp;ReErased state::spot_market::SpotMarket, _3: i64, _4: u32) -&gt; std::result::Result&lt;state::user::OrderFillSimulation, error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u32;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: state::user::OrderFillSimulation;<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: i128;<br align="left"/>let _13: u32;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _17: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: i128;<br align="left"/>let mut _20: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _21: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _22: math::margin::MarginRequirementType;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: u32;<br align="left"/>let mut _28: u32;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _30: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _31: u32;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u32;<br align="left"/>let mut _37: i128;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _39: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _40: i128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _43: i128;<br align="left"/>let mut _44: i128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u32;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i128;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i128;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: i128;<br align="left"/>let _65: u32;<br align="left"/>let mut _66: u32;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _68: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _69: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _70: u128;<br align="left"/>let mut _71: i128;<br align="left"/>let mut _72: i64;<br align="left"/>let mut _73: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _74: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _75: math::margin::MarginRequirementType;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _80: u32;<br align="left"/>let mut _81: u32;<br align="left"/>let mut _82: u32;<br align="left"/>let mut _83: i128;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _85: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _86: i128;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _88: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _89: i128;<br align="left"/>let mut _90: i128;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _92: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _93: u32;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: i128;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: i128;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: i128;<br align="left"/>let mut _109: i128;<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _111: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _112: i128;<br align="left"/>let mut _113: i128;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: i128;<br align="left"/>let mut _119: state::user::OrderFillSimulation;<br align="left"/>let mut _120: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _121: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug oracle_price =&gt; _3;<br align="left"/>debug user_custom_margin_ratio =&gt; _4;<br align="left"/>debug max_liability_weight =&gt; _13;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug min_asset_weight =&gt; _65;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>>;
    bb0__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _4<br/>_6 = Eq(move _7, const 0_u32)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = _1<br/>_0 = std::result::Result::&lt;OrderFillSimulation, error::ErrorCode&gt;::Ok(move _9)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = (_1.3: i128)<br/>_11 = Lt(move _12, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;(*_2)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = (_1.0: i128)<br/></td></tr><tr><td align="left">_18 = core::num::&lt;impl i128&gt;::unsigned_abs(move _19)</td></tr></table>>];
    bb4__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = (_1.3: i128)<br/>_63 = Gt(move _64, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb5__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_120 = const _<br/>_21 = &amp;(*_120)<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_16 = SpotMarket::get_liability_weight(move _17, move _18, move _20)</td></tr></table>>];
    bb6__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb7__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_23 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb8__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_15 as Continue).0: u32)<br/>_14 = _27<br/>StorageDead(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _4<br/></td></tr><tr><td align="left">_30 = &lt;u32 as SafeMath&gt;::safe_add(move _31, const _)</td></tr></table>>];
    bb9__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb11__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb13__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_32 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb14__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_29 as Continue).0: u32)<br/>_28 = _36<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_13 = &lt;u32 as Ord&gt;::max(move _14, move _28)</td></tr></table>>];
    bb15__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb16__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_28)<br/>StorageDead(_14)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_14)<br/>StorageDead(_29)<br/>StorageDead(_21)<br/>StorageDead(_15)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = (_1.2: i128)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _13<br/></td></tr><tr><td align="left">_46 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _47)</td></tr></table>>];
    bb18__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb19__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb20__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: i128)<br/>_44 = _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_42 = &lt;i128 as SafeMath&gt;::safe_mul(move _43, move _44)</td></tr></table>>];
    bb21__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb22__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb24__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_53 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb25__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_41 as Continue).0: i128)<br/>_40 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_39 = &lt;i128 as SafeMath&gt;::safe_div(move _40, const _)</td></tr></table>>];
    bb26__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb27__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb29__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_58 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb30__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_38 as Continue).0: i128)<br/>_37 = _62<br/>StorageDead(_62)<br/>(_1.3: i128) = move _37<br/>StorageDead(_37)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>_10 = const ()<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb32__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_2)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = (_1.0: i128)<br/></td></tr><tr><td align="left">_70 = core::num::&lt;impl i128&gt;::unsigned_abs(move _71)</td></tr></table>>];
    bb34__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_10 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_72)<br/>_72 = _3<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_121 = const _<br/>_74 = &amp;(*_121)<br/>_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_68 = SpotMarket::get_asset_weight(move _69, move _70, move _72, move _73)</td></tr></table>>];
    bb36__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb37__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_76 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb38__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_67 as Continue).0: u32)<br/>_66 = _80<br/>StorageDead(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _4<br/></td></tr><tr><td align="left">_81 = core::num::&lt;impl u32&gt;::saturating_sub(const _, move _82)</td></tr></table>>];
    bb39__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_79)<br/>_79 = _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb40__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_66)<br/>StorageDead(_74)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_65 = &lt;u32 as Ord&gt;::min(move _66, move _81)</td></tr></table>>];
    bb42__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_66)<br/>StorageDead(_74)<br/>StorageDead(_67)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = (_1.2: i128)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = _65<br/></td></tr><tr><td align="left">_92 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _93)</td></tr></table>>];
    bb43__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb44__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_94 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb45__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_91 as Continue).0: i128)<br/>_90 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_88 = &lt;i128 as SafeMath&gt;::safe_mul(move _89, move _90)</td></tr></table>>];
    bb46__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb47__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb49__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_99 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb50__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_87 as Continue).0: i128)<br/>_86 = _103<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_85 = &lt;i128 as SafeMath&gt;::safe_div(move _86, const _)</td></tr></table>>];
    bb51__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb52__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb54__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_104 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb55__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_84 as Continue).0: i128)<br/>_83 = _108<br/>StorageDead(_108)<br/>(_1.3: i128) = move _83<br/>StorageDead(_83)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>_10 = const ()<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb57__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = (_1.3: i128)<br/>StorageLive(_113)<br/>_113 = (_1.1: i128)<br/></td></tr><tr><td align="left">_111 = &lt;i128 as SafeMath&gt;::safe_add(move _112, move _113)</td></tr></table>>];
    bb60__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb61__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_114 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb62__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_110 as Continue).0: i128)<br/>_109 = _118<br/>StorageDead(_118)<br/>(_1.4: i128) = move _109<br/>StorageDead(_109)<br/>StorageDead(_110)<br/>StorageLive(_119)<br/>_119 = _1<br/>_0 = std::result::Result::&lt;OrderFillSimulation, error::ErrorCode&gt;::Ok(move _119)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;OrderFillSimulation, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb64__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_4340 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4340 -> bb2__0_4340 [label="0"];
    bb0__0_4340 -> bb1__0_4340 [label="otherwise"];
    bb1__0_4340 -> bb73__0_4340 [label=""];
    bb2__0_4340 -> bb4__0_4340 [label="0"];
    bb2__0_4340 -> bb3__0_4340 [label="otherwise"];
    bb3__0_4340 -> bb5__0_4340 [label="return"];
    bb4__0_4340 -> bb34__0_4340 [label="0"];
    bb4__0_4340 -> bb33__0_4340 [label="otherwise"];
    bb5__0_4340 -> bb6__0_4340 [label="return"];
    bb6__0_4340 -> bb7__0_4340 [label="return"];
    bb7__0_4340 -> bb8__0_4340 [label="0"];
    bb7__0_4340 -> bb10__0_4340 [label="1"];
    bb7__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb8__0_4340 -> bb12__0_4340 [label="return"];
    bb10__0_4340 -> bb11__0_4340 [label="return"];
    bb11__0_4340 -> bb70__0_4340 [label=""];
    bb12__0_4340 -> bb13__0_4340 [label="return"];
    bb13__0_4340 -> bb14__0_4340 [label="0"];
    bb13__0_4340 -> bb15__0_4340 [label="1"];
    bb13__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb14__0_4340 -> bb17__0_4340 [label="return"];
    bb15__0_4340 -> bb16__0_4340 [label="return"];
    bb16__0_4340 -> bb70__0_4340 [label=""];
    bb17__0_4340 -> bb18__0_4340 [label="return"];
    bb18__0_4340 -> bb19__0_4340 [label="return"];
    bb19__0_4340 -> bb20__0_4340 [label="0"];
    bb19__0_4340 -> bb21__0_4340 [label="1"];
    bb19__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb20__0_4340 -> bb23__0_4340 [label="return"];
    bb21__0_4340 -> bb22__0_4340 [label="return"];
    bb22__0_4340 -> bb68__0_4340 [label=""];
    bb23__0_4340 -> bb24__0_4340 [label="return"];
    bb24__0_4340 -> bb25__0_4340 [label="0"];
    bb24__0_4340 -> bb26__0_4340 [label="1"];
    bb24__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb25__0_4340 -> bb28__0_4340 [label="return"];
    bb26__0_4340 -> bb27__0_4340 [label="return"];
    bb27__0_4340 -> bb68__0_4340 [label=""];
    bb28__0_4340 -> bb29__0_4340 [label="return"];
    bb29__0_4340 -> bb30__0_4340 [label="0"];
    bb29__0_4340 -> bb31__0_4340 [label="1"];
    bb29__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb30__0_4340 -> bb59__0_4340 [label=""];
    bb31__0_4340 -> bb32__0_4340 [label="return"];
    bb32__0_4340 -> bb69__0_4340 [label=""];
    bb33__0_4340 -> bb35__0_4340 [label="return"];
    bb34__0_4340 -> bb58__0_4340 [label=""];
    bb35__0_4340 -> bb36__0_4340 [label="return"];
    bb36__0_4340 -> bb37__0_4340 [label="return"];
    bb37__0_4340 -> bb38__0_4340 [label="0"];
    bb37__0_4340 -> bb39__0_4340 [label="1"];
    bb37__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb38__0_4340 -> bb41__0_4340 [label="return"];
    bb39__0_4340 -> bb40__0_4340 [label="return"];
    bb40__0_4340 -> bb67__0_4340 [label=""];
    bb41__0_4340 -> bb42__0_4340 [label="return"];
    bb42__0_4340 -> bb43__0_4340 [label="return"];
    bb43__0_4340 -> bb44__0_4340 [label="return"];
    bb44__0_4340 -> bb45__0_4340 [label="0"];
    bb44__0_4340 -> bb46__0_4340 [label="1"];
    bb44__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb45__0_4340 -> bb48__0_4340 [label="return"];
    bb46__0_4340 -> bb47__0_4340 [label="return"];
    bb47__0_4340 -> bb65__0_4340 [label=""];
    bb48__0_4340 -> bb49__0_4340 [label="return"];
    bb49__0_4340 -> bb50__0_4340 [label="0"];
    bb49__0_4340 -> bb51__0_4340 [label="1"];
    bb49__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb50__0_4340 -> bb53__0_4340 [label="return"];
    bb51__0_4340 -> bb52__0_4340 [label="return"];
    bb52__0_4340 -> bb65__0_4340 [label=""];
    bb53__0_4340 -> bb54__0_4340 [label="return"];
    bb54__0_4340 -> bb55__0_4340 [label="0"];
    bb54__0_4340 -> bb56__0_4340 [label="1"];
    bb54__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb55__0_4340 -> bb58__0_4340 [label=""];
    bb56__0_4340 -> bb57__0_4340 [label="return"];
    bb57__0_4340 -> bb66__0_4340 [label=""];
    bb58__0_4340 -> bb59__0_4340 [label=""];
    bb59__0_4340 -> bb60__0_4340 [label="return"];
    bb60__0_4340 -> bb61__0_4340 [label="return"];
    bb61__0_4340 -> bb62__0_4340 [label="0"];
    bb61__0_4340 -> bb63__0_4340 [label="1"];
    bb61__0_4340 -> bb9__0_4340 [label="otherwise"];
    bb62__0_4340 -> bb73__0_4340 [label=""];
    bb63__0_4340 -> bb64__0_4340 [label="return"];
    bb64__0_4340 -> bb73__0_4340 [label=""];
    bb65__0_4340 -> bb66__0_4340 [label=""];
    bb66__0_4340 -> bb67__0_4340 [label=""];
    bb67__0_4340 -> bb72__0_4340 [label=""];
    bb68__0_4340 -> bb69__0_4340 [label=""];
    bb69__0_4340 -> bb71__0_4340 [label=""];
    bb70__0_4340 -> bb71__0_4340 [label=""];
    bb71__0_4340 -> bb72__0_4340 [label=""];
    bb72__0_4340 -> bb73__0_4340 [label=""];
}
