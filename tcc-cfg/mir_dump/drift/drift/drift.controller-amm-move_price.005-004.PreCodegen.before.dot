digraph Mir_0_94 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn move_price(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: u128, _3: u128, _4: u128) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let mut _5: u128;<br align="left"/>let _6: math::bn::U256;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U256&gt;;<br align="left"/>let mut _8: std::result::Result&lt;math::bn::U256, error::ErrorCode&gt;;<br align="left"/>let mut _9: math::bn::U256;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: math::bn::U256;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: math::bn::U256;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _21: math::bn::U256;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U256&gt;;<br align="left"/>let mut _23: std::result::Result&lt;math::bn::U256, error::ErrorCode&gt;;<br align="left"/>let mut _24: math::bn::U256;<br align="left"/>let mut _25: math::bn::U256;<br align="left"/>let mut _26: u128;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: math::bn::U256;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: u128;<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _39: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _40: bool;<br align="left"/>let mut _41: i128;<br align="left"/>let mut _42: i128;<br align="left"/>let mut _43: i128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: i128;<br align="left"/>let mut _52: i128;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _54: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: i128;<br align="left"/>let mut _61: (i128, bool);<br align="left"/>let mut _62: ();<br align="left"/>let _63: error::ErrorCode;<br align="left"/>let _64: ();<br align="left"/>let mut _65: &amp;ReErased str;<br align="left"/>let _66: &amp;ReErased str;<br align="left"/>let mut _67: &amp;ReErased std::string::String;<br align="left"/>let _68: &amp;ReErased std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let _70: std::string::String;<br align="left"/>let mut _71: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _75: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _79: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _80: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: &amp;ReErased error::ErrorCode;<br align="left"/>let _83: ();<br align="left"/>let mut _84: &amp;ReErased str;<br align="left"/>let _85: &amp;ReErased str;<br align="left"/>let mut _86: &amp;ReErased std::string::String;<br align="left"/>let _87: &amp;ReErased std::string::String;<br align="left"/>let _88: std::string::String;<br align="left"/>let _89: std::string::String;<br align="left"/>let mut _90: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _93: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _94: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _98: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _99: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased i128;<br align="left"/>let _101: &amp;ReErased i128;<br align="left"/>let _102: i128;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _104: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _105: u128;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: i128;<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased i128;<br align="left"/>let _113: &amp;ReErased i128;<br align="left"/>let _114: i128;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _116: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _117: u128;<br align="left"/>let mut _118: isize;<br align="left"/>let _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _122: i128;<br align="left"/>let mut _123: error::ErrorCode;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: ();<br align="left"/>let mut _129: u128;<br align="left"/>let _130: u128;<br align="left"/>let _131: u128;<br align="left"/>let mut _132: (u64, u128, u128);<br align="left"/>let mut _133: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u128, u128)&gt;;<br align="left"/>let mut _134: std::result::Result&lt;(u64, u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _135: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _136: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: (u64, u128, u128);<br align="left"/>let mut _142: u128;<br align="left"/>let _143: u128;<br align="left"/>let _144: u128;<br align="left"/>let mut _145: (u128, u128);<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _147: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _148: u128;<br align="left"/>let mut _149: u128;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: (u128, u128);<br align="left"/>let mut _155: u128;<br align="left"/>let mut _156: u128;<br align="left"/>let _157: u64;<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _159: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _160: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _161: isize;<br align="left"/>let _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _165: u64;<br align="left"/>let _166: (u32, u32);<br align="left"/>let mut _167: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u32, u32)&gt;;<br align="left"/>let mut _168: std::result::Result&lt;(u32, u32), error::ErrorCode&gt;;<br align="left"/>let mut _169: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _170: u64;<br align="left"/>let mut _171: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: (u32, u32);<br align="left"/>let mut _177: ();<br align="left"/>let mut _178: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _179: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug base_asset_reserve =&gt; _2;<br align="left"/>debug quote_asset_reserve =&gt; _3;<br align="left"/>debug sqrt_k =&gt; _4;<br align="left"/>debug k =&gt; _6;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug error_code =&gt; _63;<br align="left"/>debug res =&gt; _70;<br align="left"/>debug res =&gt; _89;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug residual =&gt; _119;<br align="left"/>debug val =&gt; _122;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug terminal_quote_reserves =&gt; _130;<br align="left"/>debug terminal_base_reserves =&gt; _131;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug min_base_asset_reserve =&gt; _143;<br align="left"/>debug max_base_asset_reserve =&gt; _144;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug reserve_price_after =&gt; _157;<br align="left"/>debug residual =&gt; _162;<br align="left"/>debug val =&gt; _165;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>>;
    bb0__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = _2<br/>(((*_1).1: state::perp_market::AMM).5: u128) = move _5<br/>StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/></td></tr><tr><td align="left">_9 = &lt;U256 as From&lt;u128&gt;&gt;::from(move _10)</td></tr></table>>];
    bb1__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _4<br/></td></tr><tr><td align="left">_11 = &lt;U256 as From&lt;u128&gt;&gt;::from(move _12)</td></tr></table>>];
    bb2__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_8 = &lt;U256 as SafeMath&gt;::safe_mul(move _9, move _11)</td></tr></table>>];
    bb3__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;U256, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb4__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_13 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_7 as Continue).0: math::bn::U256)<br/>_6 = _17<br/>StorageDead(_17)<br/>StorageDead(_7)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _6<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _2<br/></td></tr><tr><td align="left">_25 = &lt;U256 as From&lt;u128&gt;&gt;::from(move _26)</td></tr></table>>];
    bb6__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb8__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_23 = &lt;U256 as SafeMath&gt;::safe_div(move _24, move _25)</td></tr></table>>];
    bb10__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;U256, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb11__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_27 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb12__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_22 as Continue).0: math::bn::U256)<br/>_21 = _31<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_20 = U256::try_to_u128(move _21)</td></tr></table>>];
    bb13__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb14__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb16__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_32 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb17__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_19 as Continue).0: u128)<br/>_18 = _36<br/>StorageDead(_36)<br/>(((*_1).1: state::perp_market::AMM).6: u128) = move _18<br/>StorageDead(_18)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _3<br/></td></tr><tr><td align="left">_45 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _46)</td></tr></table>>];
    bb18__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb19__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb21__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_47 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb22__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_44 as Continue).0: i128)<br/>_43 = _51<br/>StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = (((*_1).1: state::perp_market::AMM).6: u128)<br/></td></tr><tr><td align="left">_54 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _55)</td></tr></table>>];
    bb23__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb24__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb26__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_56 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb27__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_53 as Continue).0: i128)<br/>_52 = _60<br/>StorageDead(_60)<br/>_61 = CheckedSub(_43, _52)<br/></td></tr><tr><td align="left">assert(!move (_61.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _43, move _52)</td></tr></table>>];
    bb28__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb29__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_42 = move (_61.0: i128)<br/>StorageDead(_52)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = core::num::&lt;impl i128&gt;::abs(move _42)</td></tr></table>>];
    bb31__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = Lt(move _41, const 100_i128)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb32__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageLive(_62)<br/>_62 = ()<br/>_39 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _62)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageLive(_63)<br/>_63 = error::ErrorCode::InvalidAmmDetected<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_179 = const _<br/>_74 = &amp;(*_179)<br/>_73 = &amp;(*_74)<br/>_72 = move _73 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_73)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;_63<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _81)</td></tr></table>>];
    bb34__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = [move _80]<br/>StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_71 = Arguments::&lt;'_&gt;::new_v1(move _72, move _76)</td></tr></table>>];
    bb35__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = format(move _71)</td></tr></table>>];
    bb36__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>_69 = move _70<br/>StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = &lt;String as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb37__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_65 = &amp;(*_66)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = solana_program::log::sol_log(move _65)</td></tr></table>>];
    bb38__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb39__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_178 = const _<br/>_93 = &amp;(*_178)<br/>_92 = &amp;(*_93)<br/>_91 = move _92 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_92)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = _3<br/></td></tr><tr><td align="left">_104 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _105)</td></tr></table>>];
    bb40__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb41__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_106 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb42__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_103 as Continue).0: i128)<br/>_102 = _110<br/>StorageDead(_110)<br/>_101 = &amp;_102<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _100)</td></tr></table>>];
    bb43__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb44__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = (((*_1).1: state::perp_market::AMM).6: u128)<br/></td></tr><tr><td align="left">_116 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _117)</td></tr></table>>];
    bb46__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb47__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_118 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb48__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_115 as Continue).0: i128)<br/>_114 = _122<br/>StorageDead(_122)<br/>_113 = &amp;_114<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _112)</td></tr></table>>];
    bb49__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_121)<br/>_121 = _119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _121)</td></tr></table>>];
    bb50__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_98 = [move _99, move _111]<br/>StorageDead(_111)<br/>StorageDead(_99)<br/>_97 = &amp;_98<br/>_96 = &amp;(*_97)<br/>_95 = move _96 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_90 = Arguments::&lt;'_&gt;::new_v1(move _91, move _95)</td></tr></table>>];
    bb52__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = format(move _90)</td></tr></table>>];
    bb53__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>_88 = move _89<br/>StorageDead(_89)<br/>_87 = &amp;_88<br/>_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = &lt;String as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb54__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_84 = &amp;(*_85)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_83 = solana_program::log::sol_log(move _84)</td></tr></table>>];
    bb55__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb56__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageLive(_123)<br/>_123 = _63<br/>_39 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _123)<br/>StorageDead(_123)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb58__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_124 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb59__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_38 as Continue).0: ())<br/>_37 = _128<br/>StorageDead(_128)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_129)<br/>_129 = _4<br/>(((*_1).1: state::perp_market::AMM).10: u128) = move _129<br/>StorageDead(_129)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;((*_1).1: state::perp_market::AMM)<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = calculate_terminal_price_and_reserves(move _135)</td></tr></table>>];
    bb60__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb61__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/></td></tr><tr><td align="left">_133 = &lt;std::result::Result&lt;(u64, u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _134)</td></tr></table>>];
    bb63__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_137 = discriminant(_133)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb64__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_133 as Continue).0: (u64, u128, u128))<br/>_132 = _141<br/>StorageDead(_141)<br/>StorageLive(_130)<br/>_130 = (_132.1: u128)<br/>StorageLive(_131)<br/>_131 = (_132.2: u128)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_142)<br/>_142 = _130<br/>(((*_1).1: state::perp_market::AMM).12: u128) = move _142<br/>StorageDead(_142)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = (((*_1).1: state::perp_market::AMM).7: u128)<br/>StorageLive(_149)<br/>_149 = _131<br/></td></tr><tr><td align="left">_147 = calculate_bid_ask_bounds(move _148, move _149)</td></tr></table>>];
    bb65__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_133 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb66__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb68__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_150 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb69__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_146 as Continue).0: (u128, u128))<br/>_145 = _154<br/>StorageDead(_154)<br/>StorageLive(_143)<br/>_143 = (_145.0: u128)<br/>StorageLive(_144)<br/>_144 = (_145.1: u128)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_155)<br/>_155 = _144<br/>(((*_1).1: state::perp_market::AMM).9: u128) = move _155<br/>StorageDead(_155)<br/>StorageLive(_156)<br/>_156 = _143<br/>(((*_1).1: state::perp_market::AMM).8: u128) = move _156<br/>StorageDead(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;((*_1).1: state::perp_market::AMM)<br/></td></tr><tr><td align="left">_159 = AMM::reserve_price(move _160)</td></tr></table>>];
    bb70__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb71__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb73__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_161 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb74__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_158 as Continue).0: u64)<br/>_157 = _165<br/>StorageDead(_165)<br/>StorageDead(_158)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;mut (*_1)<br/>StorageLive(_170)<br/>_170 = _157<br/>StorageLive(_171)<br/>_171 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">_168 = update_spreads(move _169, move _170, move _171)</td></tr></table>>];
    bb75__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_164)<br/>_164 = _162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _164)</td></tr></table>>];
    bb76__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_167 = &lt;std::result::Result&lt;(u32, u32), error::ErrorCode&gt; as Try&gt;::branch(move _168)</td></tr></table>>];
    bb78__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_172 = discriminant(_167)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb79__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_167 as Continue).0: (u32, u32))<br/>_166 = _176<br/>StorageDead(_176)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageLive(_177)<br/>_177 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _177)<br/>StorageDead(_177)<br/>StorageDead(_157)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_167 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb81__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left">return</td></tr></table>>];
    bb91__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb92__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb93__0_94 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_94 -> bb1__0_94 [label="return"];
    bb1__0_94 -> bb2__0_94 [label="return"];
    bb2__0_94 -> bb3__0_94 [label="return"];
    bb3__0_94 -> bb4__0_94 [label="return"];
    bb4__0_94 -> bb5__0_94 [label="0"];
    bb4__0_94 -> bb7__0_94 [label="1"];
    bb4__0_94 -> bb6__0_94 [label="otherwise"];
    bb5__0_94 -> bb9__0_94 [label="return"];
    bb7__0_94 -> bb8__0_94 [label="return"];
    bb8__0_94 -> bb89__0_94 [label=""];
    bb9__0_94 -> bb10__0_94 [label="return"];
    bb10__0_94 -> bb11__0_94 [label="return"];
    bb11__0_94 -> bb12__0_94 [label="0"];
    bb11__0_94 -> bb13__0_94 [label="1"];
    bb11__0_94 -> bb6__0_94 [label="otherwise"];
    bb12__0_94 -> bb15__0_94 [label="return"];
    bb13__0_94 -> bb14__0_94 [label="return"];
    bb14__0_94 -> bb88__0_94 [label=""];
    bb15__0_94 -> bb16__0_94 [label="return"];
    bb16__0_94 -> bb17__0_94 [label="0"];
    bb16__0_94 -> bb18__0_94 [label="1"];
    bb16__0_94 -> bb6__0_94 [label="otherwise"];
    bb17__0_94 -> bb20__0_94 [label="return"];
    bb18__0_94 -> bb19__0_94 [label="return"];
    bb19__0_94 -> bb88__0_94 [label=""];
    bb20__0_94 -> bb21__0_94 [label="return"];
    bb21__0_94 -> bb22__0_94 [label="0"];
    bb21__0_94 -> bb23__0_94 [label="1"];
    bb21__0_94 -> bb6__0_94 [label="otherwise"];
    bb22__0_94 -> bb25__0_94 [label="return"];
    bb23__0_94 -> bb24__0_94 [label="return"];
    bb24__0_94 -> bb85__0_94 [label=""];
    bb25__0_94 -> bb26__0_94 [label="return"];
    bb26__0_94 -> bb27__0_94 [label="0"];
    bb26__0_94 -> bb28__0_94 [label="1"];
    bb26__0_94 -> bb6__0_94 [label="otherwise"];
    bb27__0_94 -> bb30__0_94 [label="success"];
    bb28__0_94 -> bb29__0_94 [label="return"];
    bb29__0_94 -> bb85__0_94 [label=""];
    bb30__0_94 -> bb31__0_94 [label="return"];
    bb31__0_94 -> bb33__0_94 [label="0"];
    bb31__0_94 -> bb32__0_94 [label="otherwise"];
    bb32__0_94 -> bb57__0_94 [label=""];
    bb33__0_94 -> bb34__0_94 [label="return"];
    bb34__0_94 -> bb35__0_94 [label="return"];
    bb35__0_94 -> bb36__0_94 [label="return"];
    bb36__0_94 -> bb37__0_94 [label="return"];
    bb36__0_94 -> bb92__0_94 [label="unwind"];
    bb37__0_94 -> bb38__0_94 [label="return"];
    bb37__0_94 -> bb92__0_94 [label="unwind"];
    bb38__0_94 -> bb39__0_94 [label="return"];
    bb38__0_94 -> bb93__0_94 [label="unwind"];
    bb39__0_94 -> bb40__0_94 [label="return"];
    bb40__0_94 -> bb41__0_94 [label="return"];
    bb41__0_94 -> bb42__0_94 [label="0"];
    bb41__0_94 -> bb43__0_94 [label="1"];
    bb41__0_94 -> bb6__0_94 [label="otherwise"];
    bb42__0_94 -> bb45__0_94 [label="return"];
    bb43__0_94 -> bb44__0_94 [label="return"];
    bb44__0_94 -> bb84__0_94 [label=""];
    bb45__0_94 -> bb46__0_94 [label="return"];
    bb46__0_94 -> bb47__0_94 [label="return"];
    bb47__0_94 -> bb48__0_94 [label="0"];
    bb47__0_94 -> bb49__0_94 [label="1"];
    bb47__0_94 -> bb6__0_94 [label="otherwise"];
    bb48__0_94 -> bb51__0_94 [label="return"];
    bb49__0_94 -> bb50__0_94 [label="return"];
    bb50__0_94 -> bb84__0_94 [label=""];
    bb51__0_94 -> bb52__0_94 [label="return"];
    bb52__0_94 -> bb53__0_94 [label="return"];
    bb53__0_94 -> bb54__0_94 [label="return"];
    bb53__0_94 -> bb91__0_94 [label="unwind"];
    bb54__0_94 -> bb55__0_94 [label="return"];
    bb54__0_94 -> bb91__0_94 [label="unwind"];
    bb55__0_94 -> bb56__0_94 [label="return"];
    bb55__0_94 -> bb93__0_94 [label="unwind"];
    bb56__0_94 -> bb57__0_94 [label=""];
    bb57__0_94 -> bb58__0_94 [label="return"];
    bb58__0_94 -> bb59__0_94 [label="0"];
    bb58__0_94 -> bb60__0_94 [label="1"];
    bb58__0_94 -> bb6__0_94 [label="otherwise"];
    bb59__0_94 -> bb62__0_94 [label="return"];
    bb60__0_94 -> bb61__0_94 [label="return"];
    bb61__0_94 -> bb87__0_94 [label=""];
    bb62__0_94 -> bb63__0_94 [label="return"];
    bb63__0_94 -> bb64__0_94 [label="0"];
    bb63__0_94 -> bb65__0_94 [label="1"];
    bb63__0_94 -> bb6__0_94 [label="otherwise"];
    bb64__0_94 -> bb67__0_94 [label="return"];
    bb65__0_94 -> bb66__0_94 [label="return"];
    bb66__0_94 -> bb89__0_94 [label=""];
    bb67__0_94 -> bb68__0_94 [label="return"];
    bb68__0_94 -> bb69__0_94 [label="0"];
    bb68__0_94 -> bb70__0_94 [label="1"];
    bb68__0_94 -> bb6__0_94 [label="otherwise"];
    bb69__0_94 -> bb72__0_94 [label="return"];
    bb70__0_94 -> bb71__0_94 [label="return"];
    bb71__0_94 -> bb83__0_94 [label=""];
    bb72__0_94 -> bb73__0_94 [label="return"];
    bb73__0_94 -> bb74__0_94 [label="0"];
    bb73__0_94 -> bb75__0_94 [label="1"];
    bb73__0_94 -> bb6__0_94 [label="otherwise"];
    bb74__0_94 -> bb77__0_94 [label="return"];
    bb75__0_94 -> bb76__0_94 [label="return"];
    bb76__0_94 -> bb82__0_94 [label=""];
    bb77__0_94 -> bb78__0_94 [label="return"];
    bb78__0_94 -> bb79__0_94 [label="0"];
    bb78__0_94 -> bb80__0_94 [label="1"];
    bb78__0_94 -> bb6__0_94 [label="otherwise"];
    bb79__0_94 -> bb90__0_94 [label=""];
    bb80__0_94 -> bb81__0_94 [label="return"];
    bb81__0_94 -> bb82__0_94 [label=""];
    bb82__0_94 -> bb83__0_94 [label=""];
    bb83__0_94 -> bb89__0_94 [label=""];
    bb84__0_94 -> bb86__0_94 [label=""];
    bb85__0_94 -> bb86__0_94 [label=""];
    bb86__0_94 -> bb87__0_94 [label=""];
    bb87__0_94 -> bb89__0_94 [label=""];
    bb88__0_94 -> bb89__0_94 [label=""];
    bb89__0_94 -> bb90__0_94 [label=""];
    bb91__0_94 -> bb93__0_94 [label="return"];
    bb92__0_94 -> bb93__0_94 [label="return"];
}
