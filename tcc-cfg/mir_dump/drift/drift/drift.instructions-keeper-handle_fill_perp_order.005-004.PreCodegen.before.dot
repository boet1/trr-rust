digraph Mir_0_9157 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_fill_perp_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::FillOrder&lt;ReErased&gt;&gt;, _2: std::option::Option&lt;u32&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: u32;<br align="left"/>let _14: u16;<br align="left"/>let mut _15: (u32, u16);<br align="left"/>let _16: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _17: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _20: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _22: Closure(DefId(0:9162 ~ drift[d311]::instructions::keeper::handle_fill_perp_order::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _28: u32;<br align="left"/>let mut _29: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _30: Closure(DefId(0:9160 ~ drift[d311]::instructions::keeper::handle_fill_perp_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; u32, []), (&amp;ReErased &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;,)]);<br align="left"/>let mut _31: &amp;ReErased &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _32: u16;<br align="left"/>let mut _33: std::option::Option&lt;&amp;ReErased state::user::Order&gt;;<br align="left"/>let mut _34: &amp;ReErased state::user::User;<br align="left"/>let _35: &amp;ReErased state::user::User;<br align="left"/>let mut _36: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _37: u32;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: &amp;ReErased state::user::Order;<br align="left"/>let mut _40: !;<br align="left"/>let _41: ();<br align="left"/>let mut _42: &amp;ReErased str;<br align="left"/>let _43: &amp;ReErased str;<br align="left"/>let mut _44: &amp;ReErased std::string::String;<br align="left"/>let _45: &amp;ReErased std::string::String;<br align="left"/>let _46: std::string::String;<br align="left"/>let _47: std::string::String;<br align="left"/>let mut _48: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _49: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _50: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _51: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _52: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _53: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _54: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _55: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _56: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _57: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased u32;<br align="left"/>let _59: &amp;ReErased u32;<br align="left"/>let mut _60: ();<br align="left"/>let mut _61: u32;<br align="left"/>let mut _62: u16;<br align="left"/>let _63: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _64: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _66: ();<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _68: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::FillOrder&lt;ReErased&gt;&gt;;<br align="left"/>let mut _71: u32;<br align="left"/>let mut _72: u16;<br align="left"/>let mut _73: Closure(DefId(0:9161 ~ drift[d311]::instructions::keeper::handle_fill_perp_order::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), (&amp;ReErased u32, &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey, &amp;ReErased u16)]);<br align="left"/>let mut _74: &amp;ReErased u32;<br align="left"/>let mut _75: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _76: &amp;ReErased u16;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _81: ();<br align="left"/>let mut _82: ();<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _84: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _85: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _86: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug order_id =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug order_id =&gt; _13;<br align="left"/>debug market_index =&gt; _14;<br align="left"/>debug user =&gt; _16;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug order_id =&gt; _28;<br align="left"/>debug market_index =&gt; _32;<br align="left"/>debug order =&gt; _39;<br align="left"/>debug res =&gt; _47;<br align="left"/>debug user_key =&gt; _63;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>>;
    bb0__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_84 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_7 = &amp;((*_84).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_85 = deref_copy (*_7)<br/>_103 = (((_85.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_103)<br/></td></tr><tr><td align="left">_5 = constraints::fill_not_paused(move _6)</td></tr></table>>];
    bb1__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_88 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_86 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_21 = &amp;((*_86).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_20 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _21)</td></tr></table>>];
    bb4__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_98 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_19 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _20, move _22)</td></tr></table>>];
    bb8__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb9__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_23 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = move ((_18 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_17 = move _27<br/>StorageDead(_27)<br/>_16 = &amp;_17<br/>_92 = discriminant(_18)<br/>StorageDead(_18)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _2<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_16<br/>_30 = {closure@programs/drift/src/instructions/keeper.rs:96:48: 96:50} { user: move _31 }<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_28 = Option::&lt;u32&gt;::unwrap_or_else::&lt;{closure@programs/drift/src/instructions/keeper.rs:96:48: 96:50}&gt;(move _29, move _30)</td></tr></table>>];
    bb11__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb12__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>_90 = discriminant(_18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;(*_16)<br/></td></tr><tr><td align="left">_35 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _36)</td></tr></table>>];
    bb14__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_34 = &amp;(*_35)<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>_37 = _28<br/></td></tr><tr><td align="left">_33 = User::get_order(move _34, move _37)</td></tr></table>>];
    bb15__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_34)<br/>_38 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb16__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_83 = const _<br/>_51 = &amp;(*_83)<br/>_50 = &amp;(*_51)<br/>_49 = move _50 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_50)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_28<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u32&gt;(move _58)</td></tr></table>>];
    bb17__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_33 as Some).0: &amp;state::user::Order)<br/>_32 = ((*_39).11: u16)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_61)<br/>_61 = _28<br/>StorageLive(_62)<br/>_62 = _32<br/>_15 = (move _61, move _62)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb18__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = [move _57]<br/>StorageDead(_57)<br/>_55 = &amp;_56<br/>_54 = &amp;(*_55)<br/>_53 = move _54 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_48 = Arguments::&lt;'_&gt;::new_v1(move _49, move _53)</td></tr></table>>];
    bb19__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = format(move _48)</td></tr></table>>];
    bb20__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>_46 = move _47<br/>StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = &lt;String as Deref&gt;::deref(move _44)</td></tr></table>>];
    bb21__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_42 = &amp;(*_43)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_41 = solana_program::log::sol_log(move _42)</td></tr></table>>];
    bb22__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb23__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageLive(_60)<br/>_60 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _60)<br/>StorageDead(_60)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb24__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_13)<br/>_13 = (_15.0: u32)<br/>StorageLive(_14)<br/>_14 = (_15.1: u16)<br/>StorageDead(_15)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_87 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_65 = &amp;((*_87).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_64 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _65)</td></tr></table>>];
    bb25__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_63 = &amp;_64<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = move _1<br/>StorageLive(_71)<br/>_71 = _13<br/>StorageLive(_72)<br/>_72 = _14<br/></td></tr><tr><td align="left">_69 = fill_order::&lt;'_, '_&gt;(move _70, move _71, move _72)</td></tr></table>>];
    bb26__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_13<br/>StorageLive(_75)<br/>_75 = &amp;_63<br/>StorageLive(_76)<br/>_76 = &amp;_14<br/>_73 = {closure@programs/drift/src/instructions/keeper.rs:108:53: 108:56} { order_id: move _74, user_key: move _75, market_index: move _76 }<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/keeper.rs:108:53: 108:56}&gt;(move _69, move _73)</td></tr></table>>];
    bb27__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb28__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_77 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb29__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_67 as Continue).0: ())<br/>_66 = _81<br/>StorageDead(_81)<br/>_94 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_82)<br/>_82 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _82)<br/>StorageDead(_82)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_80)<br/>_80 = move _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb31__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>_96 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">return</td></tr></table>>];
    bb34__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb35__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb36__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb37__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_100 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_101 = discriminant(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_9157 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left" balign="left">_102 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9157 -> bb1__0_9157 [label="return"];
    bb1__0_9157 -> bb2__0_9157 [label="return"];
    bb1__0_9157 -> bb36__0_9157 [label="unwind"];
    bb2__0_9157 -> bb3__0_9157 [label="0"];
    bb2__0_9157 -> bb5__0_9157 [label="1"];
    bb2__0_9157 -> bb4__0_9157 [label="otherwise"];
    bb3__0_9157 -> bb7__0_9157 [label="return"];
    bb5__0_9157 -> bb6__0_9157 [label="return"];
    bb5__0_9157 -> bb39__0_9157 [label="unwind"];
    bb6__0_9157 -> bb33__0_9157 [label=""];
    bb7__0_9157 -> bb8__0_9157 [label="return"];
    bb7__0_9157 -> bb36__0_9157 [label="unwind"];
    bb8__0_9157 -> bb9__0_9157 [label="return"];
    bb8__0_9157 -> bb36__0_9157 [label="unwind"];
    bb9__0_9157 -> bb10__0_9157 [label="0"];
    bb9__0_9157 -> bb11__0_9157 [label="1"];
    bb9__0_9157 -> bb4__0_9157 [label="otherwise"];
    bb10__0_9157 -> bb13__0_9157 [label="return"];
    bb10__0_9157 -> bb35__0_9157 [label="unwind"];
    bb11__0_9157 -> bb12__0_9157 [label="return"];
    bb11__0_9157 -> bb38__0_9157 [label="unwind"];
    bb12__0_9157 -> bb32__0_9157 [label=""];
    bb13__0_9157 -> bb14__0_9157 [label="return"];
    bb13__0_9157 -> bb35__0_9157 [label="unwind"];
    bb14__0_9157 -> bb15__0_9157 [label="return"];
    bb14__0_9157 -> bb35__0_9157 [label="unwind"];
    bb15__0_9157 -> bb16__0_9157 [label="0"];
    bb15__0_9157 -> bb17__0_9157 [label="1"];
    bb15__0_9157 -> bb4__0_9157 [label="otherwise"];
    bb16__0_9157 -> bb18__0_9157 [label="return"];
    bb16__0_9157 -> bb35__0_9157 [label="unwind"];
    bb17__0_9157 -> bb24__0_9157 [label="return"];
    bb17__0_9157 -> bb36__0_9157 [label="unwind"];
    bb18__0_9157 -> bb19__0_9157 [label="return"];
    bb18__0_9157 -> bb35__0_9157 [label="unwind"];
    bb19__0_9157 -> bb20__0_9157 [label="return"];
    bb19__0_9157 -> bb35__0_9157 [label="unwind"];
    bb20__0_9157 -> bb21__0_9157 [label="return"];
    bb20__0_9157 -> bb34__0_9157 [label="unwind"];
    bb21__0_9157 -> bb22__0_9157 [label="return"];
    bb21__0_9157 -> bb34__0_9157 [label="unwind"];
    bb22__0_9157 -> bb23__0_9157 [label="return"];
    bb22__0_9157 -> bb35__0_9157 [label="unwind"];
    bb23__0_9157 -> bb32__0_9157 [label="return"];
    bb23__0_9157 -> bb36__0_9157 [label="unwind"];
    bb24__0_9157 -> bb25__0_9157 [label="return"];
    bb25__0_9157 -> bb26__0_9157 [label="return"];
    bb26__0_9157 -> bb27__0_9157 [label="return"];
    bb26__0_9157 -> bb36__0_9157 [label="unwind"];
    bb27__0_9157 -> bb28__0_9157 [label="return"];
    bb27__0_9157 -> bb36__0_9157 [label="unwind"];
    bb28__0_9157 -> bb29__0_9157 [label="0"];
    bb28__0_9157 -> bb30__0_9157 [label="1"];
    bb28__0_9157 -> bb4__0_9157 [label="otherwise"];
    bb29__0_9157 -> bb33__0_9157 [label=""];
    bb30__0_9157 -> bb31__0_9157 [label="return"];
    bb30__0_9157 -> bb37__0_9157 [label="unwind"];
    bb31__0_9157 -> bb33__0_9157 [label=""];
    bb32__0_9157 -> bb33__0_9157 [label=""];
    bb34__0_9157 -> bb35__0_9157 [label="return"];
    bb35__0_9157 -> bb36__0_9157 [label="return"];
    bb37__0_9157 -> bb36__0_9157 [label=""];
    bb38__0_9157 -> bb36__0_9157 [label=""];
    bb39__0_9157 -> bb36__0_9157 [label=""];
}
