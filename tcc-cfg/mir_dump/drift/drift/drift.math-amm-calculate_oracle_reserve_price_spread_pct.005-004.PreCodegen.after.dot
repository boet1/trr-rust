digraph Mir_0_1811 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_oracle_reserve_price_spread_pct(_1: &amp;ReErased state::perp_market::AMM, _2: &amp;ReErased state::oracle::MMOraclePriceData, _3: std::option::Option&lt;u64&gt;) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: isize;<br align="left"/>let _6: u64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u64;<br align="left"/>let _15: i64;<br align="left"/>let _16: i64;<br align="left"/>let mut _17: (i64, i64);<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64)&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(i64, i64), error::ErrorCode&gt;;<br align="left"/>let mut _20: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _21: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _22: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: (i64, i64);<br align="left"/>let mut _29: i128;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _31: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _35: i128;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _37: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _38: i64;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: i128;<br align="left"/>let mut _49: i128;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _51: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i128;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug mm_oracle_price_data =&gt; _2;<br align="left"/>debug precomputed_reserve_price =&gt; _3;<br align="left"/>debug reserve_price =&gt; _4;<br align="left"/>debug reserve_price =&gt; _6;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug _oracle_price =&gt; _15;<br align="left"/>debug price_spread =&gt; _16;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>>;
    bb0__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_5 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/></td></tr><tr><td align="left">_8 = AMM::reserve_price(move _9)</td></tr></table>>];
    bb2__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = ((_3 as Some).0: u64)<br/>_4 = _6<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb5__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb6__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: u64)<br/>_4 = _14<br/>StorageDead(_14)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb8__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_1)<br/>StorageLive(_21)<br/>_21 = &amp;(*_2)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _4<br/>_22 = Option::&lt;u64&gt;::Some(move _23)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_19 = calculate_oracle_reserve_price_spread(move _20, move _21, move _22)</td></tr></table>>];
    bb10__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;(i64, i64), error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb11__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_24 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb12__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_18 as Continue).0: (i64, i64))<br/>_17 = _28<br/>StorageDead(_28)<br/>StorageLive(_15)<br/>_15 = (_17.0: i64)<br/>StorageLive(_16)<br/>_16 = (_17.1: i64)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _16<br/></td></tr><tr><td align="left">_37 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _38)</td></tr></table>>];
    bb13__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb14__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb17__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_36 as Continue).0: i128)<br/>_35 = _43<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_34 = &lt;i128 as SafeMath&gt;::safe_mul(move _35, const _)</td></tr></table>>];
    bb18__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb19__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb21__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_44 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb22__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_33 as Continue).0: i128)<br/>_32 = _48<br/>StorageDead(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _4<br/></td></tr><tr><td align="left">_51 = &lt;u64 as Cast&gt;::cast::&lt;i128&gt;(move _52)</td></tr></table>>];
    bb23__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb24__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb26__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_53 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb27__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_50 as Continue).0: i128)<br/>_49 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_31 = &lt;i128 as SafeMath&gt;::safe_div(move _32, move _49)</td></tr></table>>];
    bb28__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb29__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb31__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_58 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb32__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_30 as Continue).0: i128)<br/>_29 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _29)</td></tr></table>>];
    bb33__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb34__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_4)<br/>StorageDead(_50)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_4)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1811 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1811 -> bb1__0_1811 [label="0"];
    bb0__0_1811 -> bb3__0_1811 [label="1"];
    bb0__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb1__0_1811 -> bb4__0_1811 [label="return"];
    bb3__0_1811 -> bb9__0_1811 [label=""];
    bb4__0_1811 -> bb5__0_1811 [label="return"];
    bb5__0_1811 -> bb6__0_1811 [label="0"];
    bb5__0_1811 -> bb7__0_1811 [label="1"];
    bb5__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb6__0_1811 -> bb9__0_1811 [label=""];
    bb7__0_1811 -> bb8__0_1811 [label="return"];
    bb8__0_1811 -> bb39__0_1811 [label=""];
    bb9__0_1811 -> bb10__0_1811 [label="return"];
    bb10__0_1811 -> bb11__0_1811 [label="return"];
    bb11__0_1811 -> bb12__0_1811 [label="0"];
    bb11__0_1811 -> bb13__0_1811 [label="1"];
    bb11__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb12__0_1811 -> bb15__0_1811 [label="return"];
    bb13__0_1811 -> bb14__0_1811 [label="return"];
    bb14__0_1811 -> bb39__0_1811 [label=""];
    bb15__0_1811 -> bb16__0_1811 [label="return"];
    bb16__0_1811 -> bb17__0_1811 [label="0"];
    bb16__0_1811 -> bb18__0_1811 [label="1"];
    bb16__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb17__0_1811 -> bb20__0_1811 [label="return"];
    bb18__0_1811 -> bb19__0_1811 [label="return"];
    bb19__0_1811 -> bb37__0_1811 [label=""];
    bb20__0_1811 -> bb21__0_1811 [label="return"];
    bb21__0_1811 -> bb22__0_1811 [label="0"];
    bb21__0_1811 -> bb23__0_1811 [label="1"];
    bb21__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb22__0_1811 -> bb25__0_1811 [label="return"];
    bb23__0_1811 -> bb24__0_1811 [label="return"];
    bb24__0_1811 -> bb37__0_1811 [label=""];
    bb25__0_1811 -> bb26__0_1811 [label="return"];
    bb26__0_1811 -> bb27__0_1811 [label="0"];
    bb26__0_1811 -> bb28__0_1811 [label="1"];
    bb26__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb27__0_1811 -> bb30__0_1811 [label="return"];
    bb28__0_1811 -> bb29__0_1811 [label="return"];
    bb29__0_1811 -> bb36__0_1811 [label=""];
    bb30__0_1811 -> bb31__0_1811 [label="return"];
    bb31__0_1811 -> bb32__0_1811 [label="0"];
    bb31__0_1811 -> bb33__0_1811 [label="1"];
    bb31__0_1811 -> bb2__0_1811 [label="otherwise"];
    bb32__0_1811 -> bb35__0_1811 [label="return"];
    bb33__0_1811 -> bb34__0_1811 [label="return"];
    bb34__0_1811 -> bb36__0_1811 [label=""];
    bb35__0_1811 -> bb40__0_1811 [label=""];
    bb36__0_1811 -> bb38__0_1811 [label=""];
    bb37__0_1811 -> bb38__0_1811 [label=""];
    bb38__0_1811 -> bb40__0_1811 [label=""];
    bb39__0_1811 -> bb40__0_1811 [label=""];
}
