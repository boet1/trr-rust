digraph Mir_0_1212 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_cancel_request_remove_insurance_fund_stake(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: anchor_lang::prelude::Clock;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _5: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _10: anchor_lang::prelude::Clock;<br align="left"/>let _11: i64;<br align="left"/>let _12: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _13: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _18: Closure(DefId(0:8519 ~ drift[d311]::instructions::if_staker::handle_cancel_request_remove_insurance_fund_stake::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _24: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _25: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _30: Closure(DefId(0:8520 ~ drift[d311]::instructions::if_staker::handle_cancel_request_remove_insurance_fund_stake::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _36: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _37: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _40: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _42: Closure(DefId(0:8521 ~ drift[d311]::instructions::if_staker::handle_cancel_request_remove_insurance_fund_stake::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _48: ();<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: u16;<br align="left"/>let mut _53: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _55: u16;<br align="left"/>let mut _56: ();<br align="left"/>let _57: error::ErrorCode;<br align="left"/>let _58: ();<br align="left"/>let mut _59: &amp;ReErased str;<br align="left"/>let _60: &amp;ReErased str;<br align="left"/>let mut _61: &amp;ReErased std::string::String;<br align="left"/>let _62: &amp;ReErased std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let mut _65: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _68: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _69: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _73: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _74: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased error::ErrorCode;<br align="left"/>let _76: &amp;ReErased error::ErrorCode;<br align="left"/>let _77: ();<br align="left"/>let mut _78: &amp;ReErased str;<br align="left"/>let _79: &amp;ReErased str;<br align="left"/>let mut _80: error::ErrorCode;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: ();<br align="left"/>let _86: ();<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _88: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _89: bool;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _92: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _93: ();<br align="left"/>let _94: error::ErrorCode;<br align="left"/>let _95: ();<br align="left"/>let mut _96: &amp;ReErased str;<br align="left"/>let _97: &amp;ReErased str;<br align="left"/>let mut _98: &amp;ReErased std::string::String;<br align="left"/>let _99: &amp;ReErased std::string::String;<br align="left"/>let _100: std::string::String;<br align="left"/>let _101: std::string::String;<br align="left"/>let mut _102: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _104: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _105: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _106: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _108: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _109: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _110: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased error::ErrorCode;<br align="left"/>let _113: &amp;ReErased error::ErrorCode;<br align="left"/>let _114: ();<br align="left"/>let mut _115: &amp;ReErased str;<br align="left"/>let _116: &amp;ReErased str;<br align="left"/>let mut _117: error::ErrorCode;<br align="left"/>let mut _118: isize;<br align="left"/>let _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _122: ();<br align="left"/>let _123: ();<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _125: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _126: u64;<br align="left"/>let mut _127: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _128: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _129: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _131: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _132: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _133: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _134: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _135: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _136: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _137: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _138: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _139: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _140: i64;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: ();<br align="left"/>let mut _146: ();<br align="left"/>let mut _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _148: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _149: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _152: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _153: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug clock =&gt; _3;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug now =&gt; _11;<br align="left"/>debug insurance_fund_stake =&gt; _12;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug user_stats =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug spot_market =&gt; _36;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug error_code =&gt; _57;<br align="left"/>debug res =&gt; _64;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug error_code =&gt; _94;<br align="left"/>debug res =&gt; _101;<br align="left"/>debug residual =&gt; _119;<br align="left"/>debug val =&gt; _122;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>>;
    bb0__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_6 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Continue).0: anchor_lang::prelude::Clock)<br/>_3 = move _10<br/>StorageDead(_10)<br/>_154 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_11)<br/>_11 = (_3.4: i64)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_149 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_17 = &amp;((*_149).1: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_16 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_mut(move _17)</td></tr></table>>];
    bb4__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>_168 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_15 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _16, move _18)</td></tr></table>>];
    bb8__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb9__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_19 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb10__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_14 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_13 = move _23<br/>StorageDead(_23)<br/>_12 = &amp;mut _13<br/>_158 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_150 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_29 = &amp;((*_150).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_28 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _29)</td></tr></table>>];
    bb11__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb12__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_156 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_27 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _28, move _30)</td></tr></table>>];
    bb14__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb15__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_26 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_25 = move _35<br/>StorageDead(_35)<br/>_24 = &amp;mut _25<br/>_162 = discriminant(_26)<br/>StorageDead(_26)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_151 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_41 = &amp;((*_151).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_40 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _41)</td></tr></table>>];
    bb17__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb18__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_160 = discriminant(_26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_42)<br/>_42 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_39 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _40, move _42)</td></tr></table>>];
    bb20__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb21__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_38 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_37 = move _47<br/>StorageDead(_47)<br/>_36 = &amp;mut _37<br/>_166 = discriminant(_38)<br/>StorageDead(_38)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_12)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb23__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>_164 = discriminant(_38)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = ((*_53).8: u16)<br/>StorageLive(_55)<br/>_55 = _2<br/>_51 = Eq(move _52, move _55)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb26__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_56)<br/>_56 = ()<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_57)<br/>_57 = error::ErrorCode::IncorrectSpotMarketAccountPassed<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_148 = const _<br/>_68 = &amp;(*_148)<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_57<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _75)</td></tr></table>>];
    bb28__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = [move _74]<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_65 = Arguments::&lt;'_&gt;::new_v1(move _66, move _70)</td></tr></table>>];
    bb29__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = format(move _65)</td></tr></table>>];
    bb30__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>_63 = move _64<br/>StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = &lt;String as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb31__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = solana_program::log::sol_log(move _59)</td></tr></table>>];
    bb32__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb33__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = const &quot;insurance_fund_stake does not match market_index&quot;<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = solana_program::log::sol_log(move _78)</td></tr></table>>];
    bb34__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageLive(_80)<br/>_80 = _57<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _80)<br/>StorageDead(_80)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb36__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_81 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb37__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_49 as Continue).0: ())<br/>_48 = _85<br/>StorageDead(_85)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;(*_12)<br/></td></tr><tr><td align="left">_91 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _92)</td></tr></table>>];
    bb38__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb39__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = ((*_91).2: u128)<br/>_89 = Ne(move _90, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb41__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>_93 = ()<br/>_88 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _93)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_94)<br/>_94 = error::ErrorCode::NoIFWithdrawRequestInProgress<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_147 = const _<br/>_105 = &amp;(*_147)<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_94<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _112)</td></tr></table>>];
    bb43__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_110 = [move _111]<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/>_107 = move _108 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_102 = Arguments::&lt;'_&gt;::new_v1(move _103, move _107)</td></tr></table>>];
    bb44__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = format(move _102)</td></tr></table>>];
    bb45__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_105)<br/>_100 = move _101<br/>StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = &lt;String as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb46__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_95 = solana_program::log::sol_log(move _96)</td></tr></table>>];
    bb47__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb48__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = const &quot;No withdraw request in progress&quot;<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = solana_program::log::sol_log(move _115)</td></tr></table>>];
    bb49__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>_117 = _94<br/>_88 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _117)<br/>StorageDead(_117)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb51__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_118 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb52__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_87 as Continue).0: ())<br/>_86 = _122<br/>StorageDead(_122)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_152 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_153 = deref_copy ((*_152).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_174 = (((_153.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_130 = &amp;(*_174)<br/></td></tr><tr><td align="left">_129 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb53__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_121)<br/>_121 = _119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _121)</td></tr></table>>];
    bb54__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb56__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>_126 = ((*_127).2: u64)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_132 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _133)</td></tr></table>>];
    bb57__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_131 = &amp;mut (*_132)<br/>StorageDead(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_135 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _136)</td></tr></table>>];
    bb58__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_134 = &amp;mut (*_135)<br/>StorageDead(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;mut (*_36)<br/></td></tr><tr><td align="left">_138 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _139)</td></tr></table>>];
    bb59__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_137 = &amp;mut (*_138)<br/>StorageDead(_139)<br/>StorageLive(_140)<br/>_140 = _11<br/></td></tr><tr><td align="left">_125 = controller::insurance::cancel_request_remove_insurance_fund_stake(move _126, move _131, move _134, move _137, move _140)</td></tr></table>>];
    bb60__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb61__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_141 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb62__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_124 as Continue).0: ())<br/>_123 = _145<br/>StorageDead(_145)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_146)<br/>_146 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _146)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb63__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb64__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb66__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb67__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb69__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb70__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb71__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">return</td></tr></table>>];
    bb74__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_100)</td></tr></table>>];
    bb75__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb76__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb77__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb78__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb79__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb80__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_170 = discriminant(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_171 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left" balign="left">_172 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_1212 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left" balign="left">_173 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1212 -> bb1__0_1212 [label="return"];
    bb1__0_1212 -> bb2__0_1212 [label="return"];
    bb1__0_1212 -> bb79__0_1212 [label="unwind"];
    bb2__0_1212 -> bb3__0_1212 [label="0"];
    bb2__0_1212 -> bb5__0_1212 [label="1"];
    bb2__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb3__0_1212 -> bb7__0_1212 [label="return"];
    bb5__0_1212 -> bb6__0_1212 [label="return"];
    bb5__0_1212 -> bb83__0_1212 [label="unwind"];
    bb6__0_1212 -> bb72__0_1212 [label=""];
    bb7__0_1212 -> bb8__0_1212 [label="return"];
    bb7__0_1212 -> bb79__0_1212 [label="unwind"];
    bb8__0_1212 -> bb9__0_1212 [label="return"];
    bb8__0_1212 -> bb79__0_1212 [label="unwind"];
    bb9__0_1212 -> bb10__0_1212 [label="0"];
    bb9__0_1212 -> bb11__0_1212 [label="1"];
    bb9__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb10__0_1212 -> bb13__0_1212 [label="return"];
    bb10__0_1212 -> bb78__0_1212 [label="unwind"];
    bb11__0_1212 -> bb12__0_1212 [label="return"];
    bb11__0_1212 -> bb82__0_1212 [label="unwind"];
    bb12__0_1212 -> bb71__0_1212 [label=""];
    bb13__0_1212 -> bb14__0_1212 [label="return"];
    bb13__0_1212 -> bb78__0_1212 [label="unwind"];
    bb14__0_1212 -> bb15__0_1212 [label="return"];
    bb14__0_1212 -> bb78__0_1212 [label="unwind"];
    bb15__0_1212 -> bb16__0_1212 [label="0"];
    bb15__0_1212 -> bb17__0_1212 [label="1"];
    bb15__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb16__0_1212 -> bb19__0_1212 [label="return"];
    bb16__0_1212 -> bb77__0_1212 [label="unwind"];
    bb17__0_1212 -> bb18__0_1212 [label="return"];
    bb17__0_1212 -> bb81__0_1212 [label="unwind"];
    bb18__0_1212 -> bb70__0_1212 [label=""];
    bb19__0_1212 -> bb20__0_1212 [label="return"];
    bb19__0_1212 -> bb77__0_1212 [label="unwind"];
    bb20__0_1212 -> bb21__0_1212 [label="return"];
    bb20__0_1212 -> bb77__0_1212 [label="unwind"];
    bb21__0_1212 -> bb22__0_1212 [label="0"];
    bb21__0_1212 -> bb23__0_1212 [label="1"];
    bb21__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb22__0_1212 -> bb25__0_1212 [label="return"];
    bb22__0_1212 -> bb76__0_1212 [label="unwind"];
    bb23__0_1212 -> bb24__0_1212 [label="return"];
    bb23__0_1212 -> bb80__0_1212 [label="unwind"];
    bb24__0_1212 -> bb69__0_1212 [label=""];
    bb25__0_1212 -> bb27__0_1212 [label="0"];
    bb25__0_1212 -> bb26__0_1212 [label="otherwise"];
    bb26__0_1212 -> bb35__0_1212 [label=""];
    bb27__0_1212 -> bb28__0_1212 [label="return"];
    bb27__0_1212 -> bb76__0_1212 [label="unwind"];
    bb28__0_1212 -> bb29__0_1212 [label="return"];
    bb28__0_1212 -> bb76__0_1212 [label="unwind"];
    bb29__0_1212 -> bb30__0_1212 [label="return"];
    bb29__0_1212 -> bb76__0_1212 [label="unwind"];
    bb30__0_1212 -> bb31__0_1212 [label="return"];
    bb30__0_1212 -> bb75__0_1212 [label="unwind"];
    bb31__0_1212 -> bb32__0_1212 [label="return"];
    bb31__0_1212 -> bb75__0_1212 [label="unwind"];
    bb32__0_1212 -> bb33__0_1212 [label="return"];
    bb32__0_1212 -> bb76__0_1212 [label="unwind"];
    bb33__0_1212 -> bb34__0_1212 [label="return"];
    bb33__0_1212 -> bb76__0_1212 [label="unwind"];
    bb34__0_1212 -> bb35__0_1212 [label=""];
    bb35__0_1212 -> bb36__0_1212 [label="return"];
    bb35__0_1212 -> bb76__0_1212 [label="unwind"];
    bb36__0_1212 -> bb37__0_1212 [label="0"];
    bb36__0_1212 -> bb38__0_1212 [label="1"];
    bb36__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb37__0_1212 -> bb40__0_1212 [label="return"];
    bb37__0_1212 -> bb76__0_1212 [label="unwind"];
    bb38__0_1212 -> bb39__0_1212 [label="return"];
    bb38__0_1212 -> bb76__0_1212 [label="unwind"];
    bb39__0_1212 -> bb68__0_1212 [label=""];
    bb40__0_1212 -> bb42__0_1212 [label="0"];
    bb40__0_1212 -> bb41__0_1212 [label="otherwise"];
    bb41__0_1212 -> bb50__0_1212 [label=""];
    bb42__0_1212 -> bb43__0_1212 [label="return"];
    bb42__0_1212 -> bb76__0_1212 [label="unwind"];
    bb43__0_1212 -> bb44__0_1212 [label="return"];
    bb43__0_1212 -> bb76__0_1212 [label="unwind"];
    bb44__0_1212 -> bb45__0_1212 [label="return"];
    bb44__0_1212 -> bb76__0_1212 [label="unwind"];
    bb45__0_1212 -> bb46__0_1212 [label="return"];
    bb45__0_1212 -> bb74__0_1212 [label="unwind"];
    bb46__0_1212 -> bb47__0_1212 [label="return"];
    bb46__0_1212 -> bb74__0_1212 [label="unwind"];
    bb47__0_1212 -> bb48__0_1212 [label="return"];
    bb47__0_1212 -> bb76__0_1212 [label="unwind"];
    bb48__0_1212 -> bb49__0_1212 [label="return"];
    bb48__0_1212 -> bb76__0_1212 [label="unwind"];
    bb49__0_1212 -> bb50__0_1212 [label=""];
    bb50__0_1212 -> bb51__0_1212 [label="return"];
    bb50__0_1212 -> bb76__0_1212 [label="unwind"];
    bb51__0_1212 -> bb52__0_1212 [label="0"];
    bb51__0_1212 -> bb53__0_1212 [label="1"];
    bb51__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb52__0_1212 -> bb55__0_1212 [label="return"];
    bb52__0_1212 -> bb76__0_1212 [label="unwind"];
    bb53__0_1212 -> bb54__0_1212 [label="return"];
    bb53__0_1212 -> bb76__0_1212 [label="unwind"];
    bb54__0_1212 -> bb68__0_1212 [label=""];
    bb55__0_1212 -> bb56__0_1212 [label="return"];
    bb55__0_1212 -> bb76__0_1212 [label="unwind"];
    bb56__0_1212 -> bb57__0_1212 [label="return"];
    bb56__0_1212 -> bb76__0_1212 [label="unwind"];
    bb57__0_1212 -> bb58__0_1212 [label="return"];
    bb57__0_1212 -> bb76__0_1212 [label="unwind"];
    bb58__0_1212 -> bb59__0_1212 [label="return"];
    bb58__0_1212 -> bb76__0_1212 [label="unwind"];
    bb59__0_1212 -> bb60__0_1212 [label="return"];
    bb59__0_1212 -> bb76__0_1212 [label="unwind"];
    bb60__0_1212 -> bb61__0_1212 [label="return"];
    bb60__0_1212 -> bb76__0_1212 [label="unwind"];
    bb61__0_1212 -> bb62__0_1212 [label="0"];
    bb61__0_1212 -> bb63__0_1212 [label="1"];
    bb61__0_1212 -> bb4__0_1212 [label="otherwise"];
    bb62__0_1212 -> bb65__0_1212 [label="return"];
    bb62__0_1212 -> bb77__0_1212 [label="unwind"];
    bb63__0_1212 -> bb64__0_1212 [label="return"];
    bb63__0_1212 -> bb76__0_1212 [label="unwind"];
    bb64__0_1212 -> bb68__0_1212 [label=""];
    bb65__0_1212 -> bb66__0_1212 [label="return"];
    bb65__0_1212 -> bb78__0_1212 [label="unwind"];
    bb66__0_1212 -> bb67__0_1212 [label="return"];
    bb66__0_1212 -> bb79__0_1212 [label="unwind"];
    bb67__0_1212 -> bb73__0_1212 [label=""];
    bb68__0_1212 -> bb69__0_1212 [label="return"];
    bb68__0_1212 -> bb77__0_1212 [label="unwind"];
    bb69__0_1212 -> bb70__0_1212 [label="return"];
    bb69__0_1212 -> bb78__0_1212 [label="unwind"];
    bb70__0_1212 -> bb71__0_1212 [label="return"];
    bb70__0_1212 -> bb79__0_1212 [label="unwind"];
    bb71__0_1212 -> bb72__0_1212 [label=""];
    bb72__0_1212 -> bb73__0_1212 [label=""];
    bb74__0_1212 -> bb76__0_1212 [label="return"];
    bb75__0_1212 -> bb76__0_1212 [label="return"];
    bb76__0_1212 -> bb77__0_1212 [label="return"];
    bb77__0_1212 -> bb78__0_1212 [label="return"];
    bb78__0_1212 -> bb79__0_1212 [label="return"];
    bb80__0_1212 -> bb77__0_1212 [label=""];
    bb81__0_1212 -> bb78__0_1212 [label=""];
    bb82__0_1212 -> bb79__0_1212 [label=""];
    bb83__0_1212 -> bb79__0_1212 [label=""];
}
