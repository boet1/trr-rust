digraph Mir_0_1876 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_reference_price_offset(_1: u64, _2: i64, _3: i128, _4: u64, _5: i64, _6: u64, _7: i64, _8: u64, _9: i64) -&gt; std::result::Result&lt;i32, error::ErrorCode&gt;<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: !;<br align="left"/>let _14: i64;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _16: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _17: i64;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _19: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: i64;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _37: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: i64;<br align="left"/>let _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _52: i64;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _54: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _55: u64;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: i64;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let mut _67: i64;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: i64;<br align="left"/>let _71: i64;<br align="left"/>let mut _72: i64;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _74: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _75: i64;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _77: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _78: u64;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _83: i64;<br align="left"/>let mut _84: i64;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: i64;<br align="left"/>let mut _90: i64;<br align="left"/>let mut _91: i64;<br align="left"/>let mut _92: bool;<br align="left"/>let mut _93: i64;<br align="left"/>let _94: i64;<br align="left"/>let mut _95: i64;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _97: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _98: i64;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _100: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _101: i64;<br align="left"/>let mut _102: i64;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _104: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: i64;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: i64;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: i64;<br align="left"/>let mut _120: i64;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: bool;<br align="left"/>let mut _123: i64;<br align="left"/>let _124: i64;<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _126: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _127: i64;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _129: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _130: i64;<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _132: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _133: i64;<br align="left"/>let mut _134: i64;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: i64;<br align="left"/>let mut _140: i64;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: i64;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: i64;<br align="left"/>let _151: i64;<br align="left"/>let mut _152: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _153: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _154: i64;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _156: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _157: i64;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _162: i64;<br align="left"/>let mut _163: i64;<br align="left"/>let mut _164: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _165: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _166: u64;<br align="left"/>let mut _167: isize;<br align="left"/>let _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _169: !;<br align="left"/>let mut _170: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _171: i64;<br align="left"/>let mut _172: isize;<br align="left"/>let _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _174: !;<br align="left"/>let mut _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _176: i64;<br align="left"/>let _177: i64;<br align="left"/>let mut _178: i64;<br align="left"/>let mut _179: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _180: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _181: i64;<br align="left"/>let mut _182: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _183: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _184: i64;<br align="left"/>let mut _185: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _186: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _187: i128;<br align="left"/>let mut _188: isize;<br align="left"/>let _189: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _190: !;<br align="left"/>let mut _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _192: i64;<br align="left"/>let mut _193: i64;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: i64;<br align="left"/>let mut _199: i64;<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _201: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _202: isize;<br align="left"/>let _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _204: !;<br align="left"/>let mut _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _206: i64;<br align="left"/>let mut _207: isize;<br align="left"/>let _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _209: !;<br align="left"/>let mut _210: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _211: i64;<br align="left"/>let mut _212: i64;<br align="left"/>let mut _213: i64;<br align="left"/>let mut _214: bool;<br align="left"/>let mut _215: i64;<br align="left"/>let _216: i64;<br align="left"/>let mut _217: bool;<br align="left"/>let mut _218: i64;<br align="left"/>let mut _219: bool;<br align="left"/>let mut _220: i64;<br align="left"/>let mut _221: bool;<br align="left"/>let mut _222: i64;<br align="left"/>let mut _223: bool;<br align="left"/>let mut _224: i64;<br align="left"/>let mut _225: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _226: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _227: i64;<br align="left"/>let mut _228: i64;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: i64;<br align="left"/>let _234: i64;<br align="left"/>let mut _235: i64;<br align="left"/>let mut _236: i64;<br align="left"/>let mut _237: i64;<br align="left"/>let mut _238: bool;<br align="left"/>let mut _239: i64;<br align="left"/>let _240: ();<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _242: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _243: bool;<br align="left"/>let mut _244: i64;<br align="left"/>let mut _245: i64;<br align="left"/>let mut _246: i64;<br align="left"/>let mut _247: ();<br align="left"/>let _248: error::ErrorCode;<br align="left"/>let _249: ();<br align="left"/>let mut _250: &amp;ReErased str;<br align="left"/>let _251: &amp;ReErased str;<br align="left"/>let mut _252: &amp;ReErased std::string::String;<br align="left"/>let _253: &amp;ReErased std::string::String;<br align="left"/>let _254: std::string::String;<br align="left"/>let _255: std::string::String;<br align="left"/>let mut _256: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _257: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _258: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _259: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _260: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _261: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _262: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _263: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _264: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _265: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _266: &amp;ReErased error::ErrorCode;<br align="left"/>let _267: &amp;ReErased error::ErrorCode;<br align="left"/>let _268: ();<br align="left"/>let mut _269: &amp;ReErased str;<br align="left"/>let _270: &amp;ReErased str;<br align="left"/>let mut _271: &amp;ReErased std::string::String;<br align="left"/>let _272: &amp;ReErased std::string::String;<br align="left"/>let _273: std::string::String;<br align="left"/>let _274: std::string::String;<br align="left"/>let mut _275: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _278: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _279: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _280: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _281: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _282: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _283: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _284: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _285: &amp;ReErased i64;<br align="left"/>let _286: &amp;ReErased i64;<br align="left"/>let mut _287: error::ErrorCode;<br align="left"/>let mut _288: isize;<br align="left"/>let _289: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _290: !;<br align="left"/>let mut _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _292: ();<br align="left"/>let mut _293: i64;<br align="left"/>let mut _294: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _295: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug reserve_price =&gt; _1;<br align="left"/>debug last_24h_avg_funding_rate =&gt; _2;<br align="left"/>debug liquidity_fraction =&gt; _3;<br align="left"/>debug _min_order_size =&gt; _4;<br align="left"/>debug oracle_twap_fast =&gt; _5;<br align="left"/>debug mark_twap_fast =&gt; _6;<br align="left"/>debug oracle_twap_slow =&gt; _7;<br align="left"/>debug mark_twap_slow =&gt; _8;<br align="left"/>debug max_offset_pct =&gt; _9;<br align="left"/>debug max_offset_in_price =&gt; _14;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug mark_premium_minute =&gt; _48;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug mark_premium_hour =&gt; _71;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug mark_premium_day =&gt; _94;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug mark_premium_avg =&gt; _124;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>debug mark_premium_avg_pct =&gt; _151;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug residual =&gt; _168;<br align="left"/>debug val =&gt; _171;<br align="left"/>debug residual =&gt; _173;<br align="left"/>debug val =&gt; _176;<br align="left"/>debug inventory_pct =&gt; _177;<br align="left"/>debug residual =&gt; _189;<br align="left"/>debug val =&gt; _192;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug residual =&gt; _203;<br align="left"/>debug val =&gt; _206;<br align="left"/>debug residual =&gt; _208;<br align="left"/>debug val =&gt; _211;<br align="left"/>debug offset_pct =&gt; _216;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug clamped_offset_pct =&gt; _234;<br align="left"/>debug error_code =&gt; _248;<br align="left"/>debug res =&gt; _255;<br align="left"/>debug res =&gt; _274;<br align="left"/>debug residual =&gt; _289;<br align="left"/>debug val =&gt; _292;<br align="left"/>>;
    bb0__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _2<br/>_11 = Eq(move _12, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb1__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = std::result::Result::&lt;i32, error::ErrorCode&gt;::Ok(const 0_i32)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_10 = const ()<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _9<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _1<br/></td></tr><tr><td align="left">_23 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _24)</td></tr></table>>];
    bb3__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb4__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb5__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: i64)<br/>_21 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_19 = &lt;i64 as SafeMath&gt;::safe_mul(move _20, move _21)</td></tr></table>>];
    bb6__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb8__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb10__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_30 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_18 as Continue).0: i64)<br/>_17 = _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/></td></tr><tr><td align="left">_37 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(const _)</td></tr></table>>];
    bb12__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb15__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_38 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb16__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_36 as Continue).0: i64)<br/>_35 = _42<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_16 = &lt;i64 as SafeMath&gt;::safe_div(move _17, move _35)</td></tr></table>>];
    bb17__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb18__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb20__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_43 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb21__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_15 as Continue).0: i64)<br/>_14 = _47<br/>StorageDead(_47)<br/>StorageDead(_36)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _6<br/></td></tr><tr><td align="left">_54 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _55)</td></tr></table>>];
    bb22__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb23__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb25__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_56 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb26__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_53 as Continue).0: i64)<br/>_52 = _60<br/>StorageDead(_60)<br/>StorageLive(_61)<br/>_61 = _5<br/></td></tr><tr><td align="left">_51 = &lt;i64 as SafeMath&gt;::safe_sub(move _52, move _61)</td></tr></table>>];
    bb27__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb28__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb30__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_62 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb31__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_50 as Continue).0: i64)<br/>_49 = _66<br/>StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _14<br/>_69 = Eq(_68, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _69, &quot;attempt to negate `{}`, which would overflow&quot;, _68)</td></tr></table>>];
    bb32__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb33__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_67 = Neg(move _68)<br/>StorageDead(_68)<br/>StorageLive(_70)<br/>_70 = _14<br/></td></tr><tr><td align="left">_48 = &lt;i64 as Ord&gt;::clamp(move _49, move _67, move _70)</td></tr></table>>];
    bb35__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_67)<br/>StorageDead(_49)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _8<br/></td></tr><tr><td align="left">_77 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _78)</td></tr></table>>];
    bb36__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb37__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_79 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb38__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_76 as Continue).0: i64)<br/>_75 = _83<br/>StorageDead(_83)<br/>StorageLive(_84)<br/>_84 = _7<br/></td></tr><tr><td align="left">_74 = &lt;i64 as SafeMath&gt;::safe_sub(move _75, move _84)</td></tr></table>>];
    bb39__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_82)<br/>_82 = _80<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb40__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb42__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_85 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb43__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_73 as Continue).0: i64)<br/>_72 = _89<br/>StorageDead(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _14<br/>_92 = Eq(_91, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _92, &quot;attempt to negate `{}`, which would overflow&quot;, _91)</td></tr></table>>];
    bb44__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb45__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_90 = Neg(move _91)<br/>StorageDead(_91)<br/>StorageLive(_93)<br/>_93 = _14<br/></td></tr><tr><td align="left">_71 = &lt;i64 as Ord&gt;::clamp(move _72, move _90, move _93)</td></tr></table>>];
    bb47__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_72)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _2<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/></td></tr><tr><td align="left">_104 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(const _)</td></tr></table>>];
    bb48__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb49__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_105 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb50__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_103 as Continue).0: i64)<br/>_102 = _109<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_100 = &lt;i64 as SafeMath&gt;::safe_div(move _101, move _102)</td></tr></table>>];
    bb51__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb52__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb54__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_110 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb55__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_99 as Continue).0: i64)<br/>_98 = _114<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_97 = &lt;i64 as SafeMath&gt;::safe_mul(move _98, const 24_i64)</td></tr></table>>];
    bb56__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb57__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb59__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_115 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb60__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_96 as Continue).0: i64)<br/>_95 = _119<br/>StorageDead(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = _14<br/>_122 = Eq(_121, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _122, &quot;attempt to negate `{}`, which would overflow&quot;, _121)</td></tr></table>>];
    bb61__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb62__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_120 = Neg(move _121)<br/>StorageDead(_121)<br/>StorageLive(_123)<br/>_123 = _14<br/></td></tr><tr><td align="left">_94 = &lt;i64 as Ord&gt;::clamp(move _95, move _120, move _123)</td></tr></table>>];
    bb64__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_95)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = _48<br/>StorageLive(_134)<br/>_134 = _71<br/></td></tr><tr><td align="left">_132 = &lt;i64 as SafeMath&gt;::safe_add(move _133, move _134)</td></tr></table>>];
    bb65__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb66__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_135 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb67__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_131 as Continue).0: i64)<br/>_130 = _139<br/>StorageDead(_139)<br/>StorageLive(_140)<br/>_140 = _94<br/></td></tr><tr><td align="left">_129 = &lt;i64 as SafeMath&gt;::safe_add(move _130, move _140)</td></tr></table>>];
    bb68__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb69__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb71__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_141 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb72__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_128 as Continue).0: i64)<br/>_127 = _145<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_126 = &lt;i64 as SafeMath&gt;::safe_div(move _127, const 3_i64)</td></tr></table>>];
    bb73__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb74__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb76__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_146 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb77__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_125 as Continue).0: i64)<br/>_124 = _150<br/>StorageDead(_150)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_125)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = _124<br/></td></tr><tr><td align="left">_156 = &lt;i64 as SafeMath&gt;::safe_mul(move _157, const _)</td></tr></table>>];
    bb78__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb79__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb81__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_158 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb82__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_155 as Continue).0: i64)<br/>_154 = _162<br/>StorageDead(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = _1<br/></td></tr><tr><td align="left">_165 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _166)</td></tr></table>>];
    bb83__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_161)<br/>_161 = _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb84__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/></td></tr><tr><td align="left">_164 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _165)</td></tr></table>>];
    bb86__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>_167 = discriminant(_164)<br/></td></tr><tr><td align="left">switchInt(move _167)</td></tr></table>>];
    bb87__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_164 as Continue).0: i64)<br/>_163 = _171<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_153 = &lt;i64 as SafeMath&gt;::safe_div(move _154, move _163)</td></tr></table>>];
    bb88__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_164 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_170)<br/>_170 = _168<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _170)</td></tr></table>>];
    bb89__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_168)<br/>StorageDead(_163)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">_152 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _153)</td></tr></table>>];
    bb91__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_172 = discriminant(_152)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb92__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_152 as Continue).0: i64)<br/>_151 = _176<br/>StorageDead(_176)<br/>StorageDead(_164)<br/>StorageDead(_155)<br/>StorageDead(_152)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = _3<br/></td></tr><tr><td align="left">_186 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _187)</td></tr></table>>];
    bb93__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_173)<br/>_173 = ((_152 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_175)<br/>_175 = _173<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _175)</td></tr></table>>];
    bb94__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _186)</td></tr></table>>];
    bb96__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_188 = discriminant(_185)<br/></td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb97__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_192)<br/>_192 = ((_185 as Continue).0: i64)<br/>_184 = _192<br/>StorageDead(_192)<br/>StorageLive(_193)<br/>_193 = _9<br/></td></tr><tr><td align="left">_183 = &lt;i64 as SafeMath&gt;::safe_mul(move _184, move _193)</td></tr></table>>];
    bb98__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_189)<br/>_189 = ((_185 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_191)<br/>_191 = _189<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _191)</td></tr></table>>];
    bb99__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_182 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _183)</td></tr></table>>];
    bb101__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>_194 = discriminant(_182)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb102__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_182 as Continue).0: i64)<br/>_181 = _198<br/>StorageDead(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/></td></tr><tr><td align="left">_201 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(const _)</td></tr></table>>];
    bb103__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_182 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb104__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb106__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_202 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb107__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_200 as Continue).0: i64)<br/>_199 = _206<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">_180 = &lt;i64 as SafeMath&gt;::safe_div(move _181, move _199)</td></tr></table>>];
    bb108__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_205)<br/>_205 = _203<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _205)</td></tr></table>>];
    bb109__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_199)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _180)</td></tr></table>>];
    bb111__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_207 = discriminant(_179)<br/></td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb112__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_179 as Continue).0: i64)<br/>_178 = _211<br/>StorageDead(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = _9<br/>_214 = Eq(_213, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _214, &quot;attempt to negate `{}`, which would overflow&quot;, _213)</td></tr></table>>];
    bb113__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_179 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_210)<br/>_210 = _208<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _210)</td></tr></table>>];
    bb114__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_212 = Neg(move _213)<br/>StorageDead(_213)<br/>StorageLive(_215)<br/>_215 = _9<br/></td></tr><tr><td align="left">_177 = &lt;i64 as Ord&gt;::clamp(move _178, move _212, move _215)</td></tr></table>>];
    bb116__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_178)<br/>StorageDead(_200)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>_218 = _151<br/>_217 = Ge(move _218, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _217)</td></tr></table>>];
    bb117__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_220 = _177<br/>_219 = Ge(move _220, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _219)</td></tr></table>>];
    bb118__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>StorageLive(_222)<br/>_222 = _151<br/>_221 = Le(move _222, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _221)</td></tr></table>>];
    bb122__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = _177<br/>_223 = Le(move _224, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _223)</td></tr></table>>];
    bb123__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = _151<br/>StorageLive(_228)<br/>_228 = _177<br/></td></tr><tr><td align="left">_226 = &lt;i64 as SafeMath&gt;::safe_add(move _227, move _228)</td></tr></table>>];
    bb124__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_225 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _226)</td></tr></table>>];
    bb125__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_229 = discriminant(_225)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb126__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_225 as Continue).0: i64)<br/>_216 = _233<br/>StorageDead(_233)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_225 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb128__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_225)<br/>StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_216 = const 0_i64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_217)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = _216<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = _9<br/>_238 = Eq(_237, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _238, &quot;attempt to negate `{}`, which would overflow&quot;, _237)</td></tr></table>>];
    bb133__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">_236 = Neg(move _237)<br/>StorageDead(_237)<br/>StorageLive(_239)<br/>_239 = _9<br/></td></tr><tr><td align="left">_234 = &lt;i64 as Ord&gt;::clamp(move _235, move _236, move _239)</td></tr></table>>];
    bb134__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = _234<br/></td></tr><tr><td align="left">_244 = core::num::&lt;impl i64&gt;::abs(move _245)</td></tr></table>>];
    bb135__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageLive(_246)<br/>_246 = _9<br/>_243 = Le(move _244, move _246)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb136__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageLive(_247)<br/>_247 = ()<br/>_242 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _247)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageLive(_248)<br/>_248 = error::ErrorCode::InvalidAmmDetected<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_295 = const _<br/>_259 = &amp;(*_295)<br/>_258 = &amp;(*_259)<br/>_257 = move _258 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_258)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_267 = &amp;_248<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _266)</td></tr></table>>];
    bb138__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>_264 = [move _265]<br/>StorageDead(_265)<br/>_263 = &amp;_264<br/>_262 = &amp;(*_263)<br/>_261 = move _262 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_256 = Arguments::&lt;'_&gt;::new_v1(move _257, move _261)</td></tr></table>>];
    bb139__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_255 = format(move _256)</td></tr></table>>];
    bb140__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>StorageDead(_259)<br/>_254 = move _255<br/>StorageDead(_255)<br/>_253 = &amp;_254<br/>_252 = &amp;(*_253)<br/></td></tr><tr><td align="left">_251 = &lt;String as Deref&gt;::deref(move _252)</td></tr></table>>];
    bb141__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">_250 = &amp;(*_251)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_249 = solana_program::log::sol_log(move _250)</td></tr></table>>];
    bb142__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/></td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb143__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_294 = const _<br/>_278 = &amp;(*_294)<br/>_277 = &amp;(*_278)<br/>_276 = move _277 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_277)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_234<br/>_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_284 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _285)</td></tr></table>>];
    bb144__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>_283 = [move _284]<br/>StorageDead(_284)<br/>_282 = &amp;_283<br/>_281 = &amp;(*_282)<br/>_280 = move _281 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">_275 = Arguments::&lt;'_&gt;::new_v1(move _276, move _280)</td></tr></table>>];
    bb145__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_274 = format(move _275)</td></tr></table>>];
    bb146__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_278)<br/>_273 = move _274<br/>StorageDead(_274)<br/>_272 = &amp;_273<br/>_271 = &amp;(*_272)<br/></td></tr><tr><td align="left">_270 = &lt;String as Deref&gt;::deref(move _271)</td></tr></table>>];
    bb147__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_269 = &amp;(*_270)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_268 = solana_program::log::sol_log(move _269)</td></tr></table>>];
    bb148__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/></td></tr><tr><td align="left">drop(_273)</td></tr></table>>];
    bb149__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_268)<br/>StorageLive(_287)<br/>_287 = _248<br/>_242 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _287)<br/>StorageDead(_287)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb151__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_288 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb152__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_241 as Continue).0: ())<br/>_240 = _292<br/>StorageDead(_292)<br/>StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_293)<br/>_293 = _234<br/></td></tr><tr><td align="left">_0 = &lt;i64 as Cast&gt;::cast::&lt;i32&gt;(move _293)</td></tr></table>>];
    bb153__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_291)<br/>_291 = _289<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i32, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _291)</td></tr></table>>];
    bb154__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_241)<br/>StorageDead(_240)<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageDead(_234)<br/>StorageDead(_216)<br/>StorageDead(_177)<br/>StorageDead(_151)<br/>StorageDead(_124)<br/>StorageDead(_94)<br/>StorageDead(_71)<br/>StorageDead(_48)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb172__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left">return</td></tr></table>>];
    bb179__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">179 (cleanup)</td></tr><tr><td align="left">drop(_273)</td></tr></table>>];
    bb180__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">180 (cleanup)</td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb181__0_1876 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1876 -> bb2__0_1876 [label="0"];
    bb0__0_1876 -> bb1__0_1876 [label="otherwise"];
    bb1__0_1876 -> bb178__0_1876 [label=""];
    bb2__0_1876 -> bb3__0_1876 [label="return"];
    bb3__0_1876 -> bb4__0_1876 [label="return"];
    bb4__0_1876 -> bb5__0_1876 [label="0"];
    bb4__0_1876 -> bb7__0_1876 [label="1"];
    bb4__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb5__0_1876 -> bb9__0_1876 [label="return"];
    bb7__0_1876 -> bb8__0_1876 [label="return"];
    bb8__0_1876 -> bb175__0_1876 [label=""];
    bb9__0_1876 -> bb10__0_1876 [label="return"];
    bb10__0_1876 -> bb11__0_1876 [label="0"];
    bb10__0_1876 -> bb12__0_1876 [label="1"];
    bb10__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb11__0_1876 -> bb14__0_1876 [label="return"];
    bb12__0_1876 -> bb13__0_1876 [label="return"];
    bb13__0_1876 -> bb175__0_1876 [label=""];
    bb14__0_1876 -> bb15__0_1876 [label="return"];
    bb15__0_1876 -> bb16__0_1876 [label="0"];
    bb15__0_1876 -> bb17__0_1876 [label="1"];
    bb15__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb16__0_1876 -> bb19__0_1876 [label="return"];
    bb17__0_1876 -> bb18__0_1876 [label="return"];
    bb18__0_1876 -> bb174__0_1876 [label=""];
    bb19__0_1876 -> bb20__0_1876 [label="return"];
    bb20__0_1876 -> bb21__0_1876 [label="0"];
    bb20__0_1876 -> bb22__0_1876 [label="1"];
    bb20__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb21__0_1876 -> bb24__0_1876 [label="return"];
    bb22__0_1876 -> bb23__0_1876 [label="return"];
    bb23__0_1876 -> bb174__0_1876 [label=""];
    bb24__0_1876 -> bb25__0_1876 [label="return"];
    bb25__0_1876 -> bb26__0_1876 [label="0"];
    bb25__0_1876 -> bb27__0_1876 [label="1"];
    bb25__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb26__0_1876 -> bb29__0_1876 [label="return"];
    bb27__0_1876 -> bb28__0_1876 [label="return"];
    bb28__0_1876 -> bb172__0_1876 [label=""];
    bb29__0_1876 -> bb30__0_1876 [label="return"];
    bb30__0_1876 -> bb31__0_1876 [label="0"];
    bb30__0_1876 -> bb32__0_1876 [label="1"];
    bb30__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb31__0_1876 -> bb34__0_1876 [label="success"];
    bb32__0_1876 -> bb33__0_1876 [label="return"];
    bb33__0_1876 -> bb172__0_1876 [label=""];
    bb34__0_1876 -> bb35__0_1876 [label="return"];
    bb35__0_1876 -> bb36__0_1876 [label="return"];
    bb36__0_1876 -> bb37__0_1876 [label="return"];
    bb37__0_1876 -> bb38__0_1876 [label="0"];
    bb37__0_1876 -> bb39__0_1876 [label="1"];
    bb37__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb38__0_1876 -> bb41__0_1876 [label="return"];
    bb39__0_1876 -> bb40__0_1876 [label="return"];
    bb40__0_1876 -> bb170__0_1876 [label=""];
    bb41__0_1876 -> bb42__0_1876 [label="return"];
    bb42__0_1876 -> bb43__0_1876 [label="0"];
    bb42__0_1876 -> bb44__0_1876 [label="1"];
    bb42__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb43__0_1876 -> bb46__0_1876 [label="success"];
    bb44__0_1876 -> bb45__0_1876 [label="return"];
    bb45__0_1876 -> bb170__0_1876 [label=""];
    bb46__0_1876 -> bb47__0_1876 [label="return"];
    bb47__0_1876 -> bb48__0_1876 [label="return"];
    bb48__0_1876 -> bb49__0_1876 [label="return"];
    bb49__0_1876 -> bb50__0_1876 [label="0"];
    bb49__0_1876 -> bb51__0_1876 [label="1"];
    bb49__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb50__0_1876 -> bb53__0_1876 [label="return"];
    bb51__0_1876 -> bb52__0_1876 [label="return"];
    bb52__0_1876 -> bb167__0_1876 [label=""];
    bb53__0_1876 -> bb54__0_1876 [label="return"];
    bb54__0_1876 -> bb55__0_1876 [label="0"];
    bb54__0_1876 -> bb56__0_1876 [label="1"];
    bb54__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb55__0_1876 -> bb58__0_1876 [label="return"];
    bb56__0_1876 -> bb57__0_1876 [label="return"];
    bb57__0_1876 -> bb167__0_1876 [label=""];
    bb58__0_1876 -> bb59__0_1876 [label="return"];
    bb59__0_1876 -> bb60__0_1876 [label="0"];
    bb59__0_1876 -> bb61__0_1876 [label="1"];
    bb59__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb60__0_1876 -> bb63__0_1876 [label="success"];
    bb61__0_1876 -> bb62__0_1876 [label="return"];
    bb62__0_1876 -> bb168__0_1876 [label=""];
    bb63__0_1876 -> bb64__0_1876 [label="return"];
    bb64__0_1876 -> bb65__0_1876 [label="return"];
    bb65__0_1876 -> bb66__0_1876 [label="return"];
    bb66__0_1876 -> bb67__0_1876 [label="0"];
    bb66__0_1876 -> bb68__0_1876 [label="1"];
    bb66__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb67__0_1876 -> bb70__0_1876 [label="return"];
    bb68__0_1876 -> bb69__0_1876 [label="return"];
    bb69__0_1876 -> bb164__0_1876 [label=""];
    bb70__0_1876 -> bb71__0_1876 [label="return"];
    bb71__0_1876 -> bb72__0_1876 [label="0"];
    bb71__0_1876 -> bb73__0_1876 [label="1"];
    bb71__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb72__0_1876 -> bb75__0_1876 [label="return"];
    bb73__0_1876 -> bb74__0_1876 [label="return"];
    bb74__0_1876 -> bb164__0_1876 [label=""];
    bb75__0_1876 -> bb76__0_1876 [label="return"];
    bb76__0_1876 -> bb77__0_1876 [label="0"];
    bb76__0_1876 -> bb78__0_1876 [label="1"];
    bb76__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb77__0_1876 -> bb80__0_1876 [label="return"];
    bb78__0_1876 -> bb79__0_1876 [label="return"];
    bb79__0_1876 -> bb165__0_1876 [label=""];
    bb80__0_1876 -> bb81__0_1876 [label="return"];
    bb81__0_1876 -> bb82__0_1876 [label="0"];
    bb81__0_1876 -> bb83__0_1876 [label="1"];
    bb81__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb82__0_1876 -> bb85__0_1876 [label="return"];
    bb83__0_1876 -> bb84__0_1876 [label="return"];
    bb84__0_1876 -> bb162__0_1876 [label=""];
    bb85__0_1876 -> bb86__0_1876 [label="return"];
    bb86__0_1876 -> bb87__0_1876 [label="0"];
    bb86__0_1876 -> bb88__0_1876 [label="1"];
    bb86__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb87__0_1876 -> bb90__0_1876 [label="return"];
    bb88__0_1876 -> bb89__0_1876 [label="return"];
    bb89__0_1876 -> bb161__0_1876 [label=""];
    bb90__0_1876 -> bb91__0_1876 [label="return"];
    bb91__0_1876 -> bb92__0_1876 [label="0"];
    bb91__0_1876 -> bb93__0_1876 [label="1"];
    bb91__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb92__0_1876 -> bb95__0_1876 [label="return"];
    bb93__0_1876 -> bb94__0_1876 [label="return"];
    bb94__0_1876 -> bb161__0_1876 [label=""];
    bb95__0_1876 -> bb96__0_1876 [label="return"];
    bb96__0_1876 -> bb97__0_1876 [label="0"];
    bb96__0_1876 -> bb98__0_1876 [label="1"];
    bb96__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb97__0_1876 -> bb100__0_1876 [label="return"];
    bb98__0_1876 -> bb99__0_1876 [label="return"];
    bb99__0_1876 -> bb158__0_1876 [label=""];
    bb100__0_1876 -> bb101__0_1876 [label="return"];
    bb101__0_1876 -> bb102__0_1876 [label="0"];
    bb101__0_1876 -> bb103__0_1876 [label="1"];
    bb101__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb102__0_1876 -> bb105__0_1876 [label="return"];
    bb103__0_1876 -> bb104__0_1876 [label="return"];
    bb104__0_1876 -> bb158__0_1876 [label=""];
    bb105__0_1876 -> bb106__0_1876 [label="return"];
    bb106__0_1876 -> bb107__0_1876 [label="0"];
    bb106__0_1876 -> bb108__0_1876 [label="1"];
    bb106__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb107__0_1876 -> bb110__0_1876 [label="return"];
    bb108__0_1876 -> bb109__0_1876 [label="return"];
    bb109__0_1876 -> bb157__0_1876 [label=""];
    bb110__0_1876 -> bb111__0_1876 [label="return"];
    bb111__0_1876 -> bb112__0_1876 [label="0"];
    bb111__0_1876 -> bb113__0_1876 [label="1"];
    bb111__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb112__0_1876 -> bb115__0_1876 [label="success"];
    bb113__0_1876 -> bb114__0_1876 [label="return"];
    bb114__0_1876 -> bb157__0_1876 [label=""];
    bb115__0_1876 -> bb116__0_1876 [label="return"];
    bb116__0_1876 -> bb120__0_1876 [label="0"];
    bb116__0_1876 -> bb117__0_1876 [label="otherwise"];
    bb117__0_1876 -> bb119__0_1876 [label="0"];
    bb117__0_1876 -> bb118__0_1876 [label="otherwise"];
    bb118__0_1876 -> bb123__0_1876 [label=""];
    bb119__0_1876 -> bb121__0_1876 [label=""];
    bb120__0_1876 -> bb121__0_1876 [label=""];
    bb121__0_1876 -> bb130__0_1876 [label="0"];
    bb121__0_1876 -> bb122__0_1876 [label="otherwise"];
    bb122__0_1876 -> bb129__0_1876 [label="0"];
    bb122__0_1876 -> bb123__0_1876 [label="otherwise"];
    bb123__0_1876 -> bb124__0_1876 [label="return"];
    bb124__0_1876 -> bb125__0_1876 [label="return"];
    bb125__0_1876 -> bb126__0_1876 [label="0"];
    bb125__0_1876 -> bb127__0_1876 [label="1"];
    bb125__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb126__0_1876 -> bb132__0_1876 [label=""];
    bb127__0_1876 -> bb128__0_1876 [label="return"];
    bb128__0_1876 -> bb156__0_1876 [label=""];
    bb129__0_1876 -> bb131__0_1876 [label=""];
    bb130__0_1876 -> bb131__0_1876 [label=""];
    bb131__0_1876 -> bb132__0_1876 [label=""];
    bb132__0_1876 -> bb133__0_1876 [label="success"];
    bb133__0_1876 -> bb134__0_1876 [label="return"];
    bb134__0_1876 -> bb135__0_1876 [label="return"];
    bb135__0_1876 -> bb137__0_1876 [label="0"];
    bb135__0_1876 -> bb136__0_1876 [label="otherwise"];
    bb136__0_1876 -> bb150__0_1876 [label=""];
    bb137__0_1876 -> bb138__0_1876 [label="return"];
    bb138__0_1876 -> bb139__0_1876 [label="return"];
    bb139__0_1876 -> bb140__0_1876 [label="return"];
    bb140__0_1876 -> bb141__0_1876 [label="return"];
    bb140__0_1876 -> bb180__0_1876 [label="unwind"];
    bb141__0_1876 -> bb142__0_1876 [label="return"];
    bb141__0_1876 -> bb180__0_1876 [label="unwind"];
    bb142__0_1876 -> bb143__0_1876 [label="return"];
    bb142__0_1876 -> bb181__0_1876 [label="unwind"];
    bb143__0_1876 -> bb144__0_1876 [label="return"];
    bb144__0_1876 -> bb145__0_1876 [label="return"];
    bb145__0_1876 -> bb146__0_1876 [label="return"];
    bb146__0_1876 -> bb147__0_1876 [label="return"];
    bb146__0_1876 -> bb179__0_1876 [label="unwind"];
    bb147__0_1876 -> bb148__0_1876 [label="return"];
    bb147__0_1876 -> bb179__0_1876 [label="unwind"];
    bb148__0_1876 -> bb149__0_1876 [label="return"];
    bb148__0_1876 -> bb181__0_1876 [label="unwind"];
    bb149__0_1876 -> bb150__0_1876 [label=""];
    bb150__0_1876 -> bb151__0_1876 [label="return"];
    bb151__0_1876 -> bb152__0_1876 [label="0"];
    bb151__0_1876 -> bb153__0_1876 [label="1"];
    bb151__0_1876 -> bb6__0_1876 [label="otherwise"];
    bb152__0_1876 -> bb155__0_1876 [label="return"];
    bb153__0_1876 -> bb154__0_1876 [label="return"];
    bb154__0_1876 -> bb156__0_1876 [label=""];
    bb155__0_1876 -> bb178__0_1876 [label=""];
    bb156__0_1876 -> bb160__0_1876 [label=""];
    bb157__0_1876 -> bb159__0_1876 [label=""];
    bb158__0_1876 -> bb159__0_1876 [label=""];
    bb159__0_1876 -> bb160__0_1876 [label=""];
    bb160__0_1876 -> bb163__0_1876 [label=""];
    bb161__0_1876 -> bb162__0_1876 [label=""];
    bb162__0_1876 -> bb163__0_1876 [label=""];
    bb163__0_1876 -> bb166__0_1876 [label=""];
    bb164__0_1876 -> bb165__0_1876 [label=""];
    bb165__0_1876 -> bb166__0_1876 [label=""];
    bb166__0_1876 -> bb169__0_1876 [label=""];
    bb167__0_1876 -> bb168__0_1876 [label=""];
    bb168__0_1876 -> bb169__0_1876 [label=""];
    bb169__0_1876 -> bb171__0_1876 [label=""];
    bb170__0_1876 -> bb171__0_1876 [label=""];
    bb171__0_1876 -> bb173__0_1876 [label=""];
    bb172__0_1876 -> bb173__0_1876 [label=""];
    bb173__0_1876 -> bb177__0_1876 [label=""];
    bb174__0_1876 -> bb176__0_1876 [label=""];
    bb175__0_1876 -> bb176__0_1876 [label=""];
    bb176__0_1876 -> bb177__0_1876 [label=""];
    bb177__0_1876 -> bb178__0_1876 [label=""];
    bb179__0_1876 -> bb181__0_1876 [label="return"];
    bb180__0_1876 -> bb181__0_1876 [label="return"];
}
